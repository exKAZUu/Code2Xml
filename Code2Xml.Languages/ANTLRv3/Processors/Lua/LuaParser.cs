using Code2Xml.Languages.ANTLRv3.Core;
using System;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 3.5.0.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// $ANTLR 3.5.0.2 C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g 2013-12-27 16:23:27

// The variable 'variable' is assigned but its value is never used.
#pragma warning disable 219
// Unreachable code detected.
#pragma warning disable 162
// Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// CLS compliance checking will not be performed on 'type' because it is not visible from outside this assembly.
#pragma warning disable 3019


using System.Collections.Generic;
using Antlr.Runtime;
using Antlr.Runtime.Misc;


using Antlr.Runtime.Tree;
using RewriteRuleITokenStream = Antlr.Runtime.Tree.RewriteRuleTokenStream;

namespace  Code2Xml.Languages.ANTLRv3.Processors.Lua 
{
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "3.5.0.2")]
[System.CLSCompliant(false)]
public partial class LuaParser : Antlr.Runtime.Parser, ICustomizedAntlr3Parser
{
	internal static readonly string[] tokenNames = new string[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "CHARSTRING", "COMMENT", "EXP", "EscapeSequence", "FLOAT", "HEX", "HexDigit", "INT", "LINE_COMMENT", "LONGSTRING", "NAME", "NEWLINE", "NORMALSTRING", "OctalEscape", "UnicodeEscape", "WS", "'#'", "'%'", "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'..'", "'...'", "'/'", "':'", "';'", "'<'", "'<='", "'='", "'=='", "'>'", "'>='", "'['", "']'", "'^'", "'and'", "'break'", "'do'", "'else'", "'elseif'", "'end'", "'false'", "'for'", "'function'", "'if'", "'in'", "'local'", "'nil'", "'not'", "'or'", "'repeat'", "'return'", "'then'", "'true'", "'until'", "'while'", "'{'", "'}'", "'~='"
	};
	public const int EOF=-1;
	public const int CHARSTRING=4;
	public const int COMMENT=5;
	public const int EXP=6;
	public const int EscapeSequence=7;
	public const int FLOAT=8;
	public const int HEX=9;
	public const int HexDigit=10;
	public const int INT=11;
	public const int LINE_COMMENT=12;
	public const int LONGSTRING=13;
	public const int NAME=14;
	public const int NEWLINE=15;
	public const int NORMALSTRING=16;
	public const int OctalEscape=17;
	public const int UnicodeEscape=18;
	public const int WS=19;
	public const int T__20=20;
	public const int T__21=21;
	public const int T__22=22;
	public const int T__23=23;
	public const int T__24=24;
	public const int T__25=25;
	public const int T__26=26;
	public const int T__27=27;
	public const int T__28=28;
	public const int T__29=29;
	public const int T__30=30;
	public const int T__31=31;
	public const int T__32=32;
	public const int T__33=33;
	public const int T__34=34;
	public const int T__35=35;
	public const int T__36=36;
	public const int T__37=37;
	public const int T__38=38;
	public const int T__39=39;
	public const int T__40=40;
	public const int T__41=41;
	public const int T__42=42;
	public const int T__43=43;
	public const int T__44=44;
	public const int T__45=45;
	public const int T__46=46;
	public const int T__47=47;
	public const int T__48=48;
	public const int T__49=49;
	public const int T__50=50;
	public const int T__51=51;
	public const int T__52=52;
	public const int T__53=53;
	public const int T__54=54;
	public const int T__55=55;
	public const int T__56=56;
	public const int T__57=57;
	public const int T__58=58;
	public const int T__59=59;
	public const int T__60=60;
	public const int T__61=61;
	public const int T__62=62;
	public const int T__63=63;
	public const int T__64=64;
	public const int T__65=65;
	public const int T__66=66;

	public LuaParser(ITokenStream input)
		: this(input, new RecognizerSharedState())
	{
	}
	public LuaParser(ITokenStream input, RecognizerSharedState state)
		: base(input, state)
	{
		Antlr3AstBuilder treeAdaptor = default(Antlr3AstBuilder);
		CreateTreeAdaptor(ref treeAdaptor);
		TreeAdaptor = treeAdaptor ?? new Antlr3AstBuilder();
		OnCreated();
	}
	// Implement this function in your helper file to use a custom tree adaptor
	partial void CreateTreeAdaptor(ref Antlr3AstBuilder adaptor);

	private Antlr3AstBuilder adaptor;

	public Antlr3AstBuilder TreeAdaptor
	{
		get
		{
			return adaptor;
		}

		set
		{
			this.adaptor = value;
		}
	}

	public override string[] TokenNames { get { return LuaParser.tokenNames; } }
	public override string GrammarFileName { get { return "C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g"; } }


	partial void OnCreated();
	partial void EnterRule(string ruleName, int ruleIndex);
	partial void LeaveRule(string ruleName, int ruleIndex);

	#region Rules
	partial void EnterRule_chunk();
	partial void LeaveRule_chunk();
	// $ANTLR start "chunk"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:27:1: public chunk : ( stat ( ';' )? )* ( laststat ( ';' )? )? ;
	[GrammarRule("chunk")]
	public Antlr3AstNode chunk()
	{
		EnterRule_chunk();
		EnterRule("chunk", 1);
		var retval = new Antlr3AstNode("chunk");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		IToken char_literal2 = default(IToken);
		IToken char_literal4 = default(IToken);
		Antlr3AstNode stat1 = default(Antlr3AstNode);
		Antlr3AstNode laststat3 = default(Antlr3AstNode);

		object char_literal2_tree = default(object);
		object char_literal4_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "chunk");
		DebugLocation(27, 41);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:27:7: ( ( stat ( ';' )? )* ( laststat ( ';' )? )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:27:9: ( stat ( ';' )? )* ( laststat ( ';' )? )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(27, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:27:9: ( stat ( ';' )? )*
			try { DebugEnterSubRule(2);
			while (true)
			{
				int alt2=2;
				try { DebugEnterDecision(2, false);
				int LA2_1 = input.LA(1);

				if ((LA2_1==NAME||LA2_1==22||LA2_1==45||(LA2_1>=50 && LA2_1<=52)||LA2_1==54||LA2_1==58||LA2_1==63))
				{
					alt2 = 1;
				}


				} finally { DebugExitDecision(2); }
				switch ( alt2 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:27:10: stat ( ';' )?
					{
					DebugLocation(27, 10);
					PushFollow(Follow._stat_in_chunk65);
					stat1=stat();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, stat1.Tree, stat1, "stat1", retval);
					DebugLocation(27, 15);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:27:15: ( ';' )?
					int alt1=2;
					try { DebugEnterSubRule(1);
					try { DebugEnterDecision(1, false);
					int LA1_1 = input.LA(1);

					if ((LA1_1==33))
					{
						alt1 = 1;
					}
					} finally { DebugExitDecision(1); }
					switch (alt1)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:27:16: ';'
						{
						DebugLocation(27, 16);
						char_literal2=(IToken)Match(input,33,Follow._33_in_chunk68); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal2_tree = (object)adaptor.Create(char_literal2, "char_literal2", retval);
						adaptor.AddChild(root_0, char_literal2_tree);
						}

						}
						break;

					}
					} finally { DebugExitSubRule(1); }


					}
					break;

				default:
					goto loop2;
				}
			}

			loop2:
				;

			} finally { DebugExitSubRule(2); }

			DebugLocation(27, 24);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:27:24: ( laststat ( ';' )? )?
			int alt4=2;
			try { DebugEnterSubRule(4);
			try { DebugEnterDecision(4, false);
			int LA4_1 = input.LA(1);

			if ((LA4_1==44||LA4_1==59))
			{
				alt4 = 1;
			}
			} finally { DebugExitDecision(4); }
			switch (alt4)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:27:25: laststat ( ';' )?
				{
				DebugLocation(27, 25);
				PushFollow(Follow._laststat_in_chunk75);
				laststat3=laststat();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, laststat3.Tree, laststat3, "laststat3", retval);
				DebugLocation(27, 34);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:27:34: ( ';' )?
				int alt3=2;
				try { DebugEnterSubRule(3);
				try { DebugEnterDecision(3, false);
				int LA3_1 = input.LA(1);

				if ((LA3_1==33))
				{
					alt3 = 1;
				}
				} finally { DebugExitDecision(3); }
				switch (alt3)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:27:35: ';'
					{
					DebugLocation(27, 35);
					char_literal4=(IToken)Match(input,33,Follow._33_in_chunk78); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal4_tree = (object)adaptor.Create(char_literal4, "char_literal4", retval);
					adaptor.AddChild(root_0, char_literal4_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(3); }


				}
				break;

			}
			} finally { DebugExitSubRule(4); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("chunk", 1);
			LeaveRule("chunk", 1);
			LeaveRule_chunk();
		}
		DebugLocation(27, 41);
		} finally { DebugExitRule(GrammarFileName, "chunk"); }
		return retval;

	}
	// $ANTLR end "chunk"

	partial void EnterRule_block();
	partial void LeaveRule_block();
	// $ANTLR start "block"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:29:1: block : chunk ;
	[GrammarRule("block")]
	private Antlr3AstNode block()
	{
		EnterRule_block();
		EnterRule("block", 2);
		var retval = new Antlr3AstNode("block");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		Antlr3AstNode chunk5 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "block");
		DebugLocation(29, 13);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:29:7: ( chunk )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:29:9: chunk
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(29, 9);
			PushFollow(Follow._chunk_in_block90);
			chunk5=chunk();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, chunk5.Tree, chunk5, "chunk5", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("block", 2);
			LeaveRule("block", 2);
			LeaveRule_block();
		}
		DebugLocation(29, 13);
		} finally { DebugExitRule(GrammarFileName, "block"); }
		return retval;

	}
	// $ANTLR end "block"

	partial void EnterRule_stat();
	partial void LeaveRule_stat();
	// $ANTLR start "stat"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:31:1: stat : ( varlist1 '=' explist1 | functioncall | 'do' block 'end' | 'while' exp 'do' block 'end' | 'repeat' block 'until' exp | 'if' exp 'then' block ( 'elseif' exp 'then' block )* ( 'else' block )? 'end' | 'for' NAME '=' exp ',' exp ( ',' exp )? 'do' block 'end' | 'for' namelist 'in' explist1 'do' block 'end' | 'function' funcname funcbody | 'local' 'function' NAME funcbody | 'local' namelist ( '=' explist1 )? );
	[GrammarRule("stat")]
	private Antlr3AstNode stat()
	{
		EnterRule_stat();
		EnterRule("stat", 3);
		var retval = new Antlr3AstNode("stat");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		IToken char_literal7 = default(IToken);
		IToken string_literal10 = default(IToken);
		IToken string_literal12 = default(IToken);
		IToken string_literal13 = default(IToken);
		IToken string_literal15 = default(IToken);
		IToken string_literal17 = default(IToken);
		IToken string_literal18 = default(IToken);
		IToken string_literal20 = default(IToken);
		IToken string_literal22 = default(IToken);
		IToken string_literal24 = default(IToken);
		IToken string_literal26 = default(IToken);
		IToken string_literal28 = default(IToken);
		IToken string_literal30 = default(IToken);
		IToken string_literal32 = default(IToken);
		IToken string_literal33 = default(IToken);
		IToken NAME34 = default(IToken);
		IToken char_literal35 = default(IToken);
		IToken char_literal37 = default(IToken);
		IToken char_literal39 = default(IToken);
		IToken string_literal41 = default(IToken);
		IToken string_literal43 = default(IToken);
		IToken string_literal44 = default(IToken);
		IToken string_literal46 = default(IToken);
		IToken string_literal48 = default(IToken);
		IToken string_literal50 = default(IToken);
		IToken string_literal51 = default(IToken);
		IToken string_literal54 = default(IToken);
		IToken string_literal55 = default(IToken);
		IToken NAME56 = default(IToken);
		IToken string_literal58 = default(IToken);
		IToken char_literal60 = default(IToken);
		Antlr3AstNode varlist16 = default(Antlr3AstNode);
		Antlr3AstNode explist18 = default(Antlr3AstNode);
		Antlr3AstNode functioncall9 = default(Antlr3AstNode);
		Antlr3AstNode block11 = default(Antlr3AstNode);
		Antlr3AstNode exp14 = default(Antlr3AstNode);
		Antlr3AstNode block16 = default(Antlr3AstNode);
		Antlr3AstNode block19 = default(Antlr3AstNode);
		Antlr3AstNode exp21 = default(Antlr3AstNode);
		Antlr3AstNode exp23 = default(Antlr3AstNode);
		Antlr3AstNode block25 = default(Antlr3AstNode);
		Antlr3AstNode exp27 = default(Antlr3AstNode);
		Antlr3AstNode block29 = default(Antlr3AstNode);
		Antlr3AstNode block31 = default(Antlr3AstNode);
		Antlr3AstNode exp36 = default(Antlr3AstNode);
		Antlr3AstNode exp38 = default(Antlr3AstNode);
		Antlr3AstNode exp40 = default(Antlr3AstNode);
		Antlr3AstNode block42 = default(Antlr3AstNode);
		Antlr3AstNode namelist45 = default(Antlr3AstNode);
		Antlr3AstNode explist147 = default(Antlr3AstNode);
		Antlr3AstNode block49 = default(Antlr3AstNode);
		Antlr3AstNode funcname52 = default(Antlr3AstNode);
		Antlr3AstNode funcbody53 = default(Antlr3AstNode);
		Antlr3AstNode funcbody57 = default(Antlr3AstNode);
		Antlr3AstNode namelist59 = default(Antlr3AstNode);
		Antlr3AstNode explist161 = default(Antlr3AstNode);

		object char_literal7_tree = default(object);
		object string_literal10_tree = default(object);
		object string_literal12_tree = default(object);
		object string_literal13_tree = default(object);
		object string_literal15_tree = default(object);
		object string_literal17_tree = default(object);
		object string_literal18_tree = default(object);
		object string_literal20_tree = default(object);
		object string_literal22_tree = default(object);
		object string_literal24_tree = default(object);
		object string_literal26_tree = default(object);
		object string_literal28_tree = default(object);
		object string_literal30_tree = default(object);
		object string_literal32_tree = default(object);
		object string_literal33_tree = default(object);
		object NAME34_tree = default(object);
		object char_literal35_tree = default(object);
		object char_literal37_tree = default(object);
		object char_literal39_tree = default(object);
		object string_literal41_tree = default(object);
		object string_literal43_tree = default(object);
		object string_literal44_tree = default(object);
		object string_literal46_tree = default(object);
		object string_literal48_tree = default(object);
		object string_literal50_tree = default(object);
		object string_literal51_tree = default(object);
		object string_literal54_tree = default(object);
		object string_literal55_tree = default(object);
		object NAME56_tree = default(object);
		object string_literal58_tree = default(object);
		object char_literal60_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "stat");
		DebugLocation(31, 37);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:31:6: ( varlist1 '=' explist1 | functioncall | 'do' block 'end' | 'while' exp 'do' block 'end' | 'repeat' block 'until' exp | 'if' exp 'then' block ( 'elseif' exp 'then' block )* ( 'else' block )? 'end' | 'for' NAME '=' exp ',' exp ( ',' exp )? 'do' block 'end' | 'for' namelist 'in' explist1 'do' block 'end' | 'function' funcname funcbody | 'local' 'function' NAME funcbody | 'local' namelist ( '=' explist1 )? )
			int alt9=11;
			try { DebugEnterDecision(9, false);
			switch (input.LA(1))
			{
			case NAME:
				{
				int LA9_2 = input.LA(2);

				if ((EvaluatePredicate(synpred5_Lua_fragment)))
				{
					alt9 = 1;
				}
				else if ((EvaluatePredicate(synpred6_Lua_fragment)))
				{
					alt9 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 9, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 22:
				{
				int LA9_2 = input.LA(2);

				if ((EvaluatePredicate(synpred5_Lua_fragment)))
				{
					alt9 = 1;
				}
				else if ((EvaluatePredicate(synpred6_Lua_fragment)))
				{
					alt9 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 9, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 45:
				{
				alt9 = 3;
				}
				break;
			case 63:
				{
				alt9 = 4;
				}
				break;
			case 58:
				{
				alt9 = 5;
				}
				break;
			case 52:
				{
				alt9 = 6;
				}
				break;
			case 50:
				{
				int LA9_2 = input.LA(2);

				if ((EvaluatePredicate(synpred14_Lua_fragment)))
				{
					alt9 = 7;
				}
				else if ((EvaluatePredicate(synpred15_Lua_fragment)))
				{
					alt9 = 8;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 9, 7, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 51:
				{
				alt9 = 9;
				}
				break;
			case 54:
				{
				int LA9_2 = input.LA(2);

				if ((EvaluatePredicate(synpred17_Lua_fragment)))
				{
					alt9 = 10;
				}
				else if ((true))
				{
					alt9 = 11;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 9, 9, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 9, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(9); }
			switch (alt9)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:31:9: varlist1 '=' explist1
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(31, 9);
				PushFollow(Follow._varlist1_in_stat99);
				varlist16=varlist1();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, varlist16.Tree, varlist16, "varlist16", retval);
				DebugLocation(31, 18);
				char_literal7=(IToken)Match(input,36,Follow._36_in_stat101); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal7_tree = (object)adaptor.Create(char_literal7, "char_literal7", retval);
				adaptor.AddChild(root_0, char_literal7_tree);
				}
				DebugLocation(31, 22);
				PushFollow(Follow._explist1_in_stat103);
				explist18=explist1();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, explist18.Tree, explist18, "explist18", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:32:5: functioncall
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(32, 5);
				PushFollow(Follow._functioncall_in_stat112);
				functioncall9=functioncall();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, functioncall9.Tree, functioncall9, "functioncall9", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:33:5: 'do' block 'end'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(33, 5);
				string_literal10=(IToken)Match(input,45,Follow._45_in_stat121); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal10_tree = (object)adaptor.Create(string_literal10, "string_literal10", retval);
				adaptor.AddChild(root_0, string_literal10_tree);
				}
				DebugLocation(33, 10);
				PushFollow(Follow._block_in_stat123);
				block11=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block11.Tree, block11, "block11", retval);
				DebugLocation(33, 16);
				string_literal12=(IToken)Match(input,48,Follow._48_in_stat125); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal12_tree = (object)adaptor.Create(string_literal12, "string_literal12", retval);
				adaptor.AddChild(root_0, string_literal12_tree);
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:34:5: 'while' exp 'do' block 'end'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(34, 5);
				string_literal13=(IToken)Match(input,63,Follow._63_in_stat134); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal13_tree = (object)adaptor.Create(string_literal13, "string_literal13", retval);
				adaptor.AddChild(root_0, string_literal13_tree);
				}
				DebugLocation(34, 13);
				PushFollow(Follow._exp_in_stat136);
				exp14=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp14.Tree, exp14, "exp14", retval);
				DebugLocation(34, 17);
				string_literal15=(IToken)Match(input,45,Follow._45_in_stat138); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal15_tree = (object)adaptor.Create(string_literal15, "string_literal15", retval);
				adaptor.AddChild(root_0, string_literal15_tree);
				}
				DebugLocation(34, 22);
				PushFollow(Follow._block_in_stat140);
				block16=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block16.Tree, block16, "block16", retval);
				DebugLocation(34, 28);
				string_literal17=(IToken)Match(input,48,Follow._48_in_stat142); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal17_tree = (object)adaptor.Create(string_literal17, "string_literal17", retval);
				adaptor.AddChild(root_0, string_literal17_tree);
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:35:5: 'repeat' block 'until' exp
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(35, 5);
				string_literal18=(IToken)Match(input,58,Follow._58_in_stat151); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal18_tree = (object)adaptor.Create(string_literal18, "string_literal18", retval);
				adaptor.AddChild(root_0, string_literal18_tree);
				}
				DebugLocation(35, 14);
				PushFollow(Follow._block_in_stat153);
				block19=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block19.Tree, block19, "block19", retval);
				DebugLocation(35, 20);
				string_literal20=(IToken)Match(input,62,Follow._62_in_stat155); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal20_tree = (object)adaptor.Create(string_literal20, "string_literal20", retval);
				adaptor.AddChild(root_0, string_literal20_tree);
				}
				DebugLocation(35, 28);
				PushFollow(Follow._exp_in_stat157);
				exp21=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp21.Tree, exp21, "exp21", retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:36:5: 'if' exp 'then' block ( 'elseif' exp 'then' block )* ( 'else' block )? 'end'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(36, 5);
				string_literal22=(IToken)Match(input,52,Follow._52_in_stat166); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal22_tree = (object)adaptor.Create(string_literal22, "string_literal22", retval);
				adaptor.AddChild(root_0, string_literal22_tree);
				}
				DebugLocation(36, 10);
				PushFollow(Follow._exp_in_stat168);
				exp23=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp23.Tree, exp23, "exp23", retval);
				DebugLocation(36, 14);
				string_literal24=(IToken)Match(input,60,Follow._60_in_stat170); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal24_tree = (object)adaptor.Create(string_literal24, "string_literal24", retval);
				adaptor.AddChild(root_0, string_literal24_tree);
				}
				DebugLocation(36, 21);
				PushFollow(Follow._block_in_stat172);
				block25=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block25.Tree, block25, "block25", retval);
				DebugLocation(36, 27);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:36:27: ( 'elseif' exp 'then' block )*
				try { DebugEnterSubRule(5);
				while (true)
				{
					int alt5=2;
					try { DebugEnterDecision(5, false);
					int LA5_1 = input.LA(1);

					if ((LA5_1==47))
					{
						alt5 = 1;
					}


					} finally { DebugExitDecision(5); }
					switch ( alt5 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:36:28: 'elseif' exp 'then' block
						{
						DebugLocation(36, 28);
						string_literal26=(IToken)Match(input,47,Follow._47_in_stat175); if (state.failed) return retval;
						if (state.backtracking == 0) {
						string_literal26_tree = (object)adaptor.Create(string_literal26, "string_literal26", retval);
						adaptor.AddChild(root_0, string_literal26_tree);
						}
						DebugLocation(36, 37);
						PushFollow(Follow._exp_in_stat177);
						exp27=exp();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, exp27.Tree, exp27, "exp27", retval);
						DebugLocation(36, 41);
						string_literal28=(IToken)Match(input,60,Follow._60_in_stat179); if (state.failed) return retval;
						if (state.backtracking == 0) {
						string_literal28_tree = (object)adaptor.Create(string_literal28, "string_literal28", retval);
						adaptor.AddChild(root_0, string_literal28_tree);
						}
						DebugLocation(36, 48);
						PushFollow(Follow._block_in_stat181);
						block29=block();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, block29.Tree, block29, "block29", retval);

						}
						break;

					default:
						goto loop5;
					}
				}

				loop5:
					;

				} finally { DebugExitSubRule(5); }

				DebugLocation(36, 56);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:36:56: ( 'else' block )?
				int alt6=2;
				try { DebugEnterSubRule(6);
				try { DebugEnterDecision(6, false);
				int LA6_1 = input.LA(1);

				if ((LA6_1==46))
				{
					alt6 = 1;
				}
				} finally { DebugExitDecision(6); }
				switch (alt6)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:36:57: 'else' block
					{
					DebugLocation(36, 57);
					string_literal30=(IToken)Match(input,46,Follow._46_in_stat186); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal30_tree = (object)adaptor.Create(string_literal30, "string_literal30", retval);
					adaptor.AddChild(root_0, string_literal30_tree);
					}
					DebugLocation(36, 64);
					PushFollow(Follow._block_in_stat188);
					block31=block();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, block31.Tree, block31, "block31", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(6); }

				DebugLocation(36, 72);
				string_literal32=(IToken)Match(input,48,Follow._48_in_stat192); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal32_tree = (object)adaptor.Create(string_literal32, "string_literal32", retval);
				adaptor.AddChild(root_0, string_literal32_tree);
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:37:5: 'for' NAME '=' exp ',' exp ( ',' exp )? 'do' block 'end'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(37, 5);
				string_literal33=(IToken)Match(input,50,Follow._50_in_stat201); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal33_tree = (object)adaptor.Create(string_literal33, "string_literal33", retval);
				adaptor.AddChild(root_0, string_literal33_tree);
				}
				DebugLocation(37, 11);
				NAME34=(IToken)Match(input,NAME,Follow._NAME_in_stat203); if (state.failed) return retval;
				if (state.backtracking == 0) {
				NAME34_tree = (object)adaptor.Create(NAME34, "NAME34", retval);
				adaptor.AddChild(root_0, NAME34_tree);
				}
				DebugLocation(37, 16);
				char_literal35=(IToken)Match(input,36,Follow._36_in_stat205); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal35_tree = (object)adaptor.Create(char_literal35, "char_literal35", retval);
				adaptor.AddChild(root_0, char_literal35_tree);
				}
				DebugLocation(37, 20);
				PushFollow(Follow._exp_in_stat207);
				exp36=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp36.Tree, exp36, "exp36", retval);
				DebugLocation(37, 24);
				char_literal37=(IToken)Match(input,26,Follow._26_in_stat209); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal37_tree = (object)adaptor.Create(char_literal37, "char_literal37", retval);
				adaptor.AddChild(root_0, char_literal37_tree);
				}
				DebugLocation(37, 28);
				PushFollow(Follow._exp_in_stat211);
				exp38=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp38.Tree, exp38, "exp38", retval);
				DebugLocation(37, 32);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:37:32: ( ',' exp )?
				int alt7=2;
				try { DebugEnterSubRule(7);
				try { DebugEnterDecision(7, false);
				int LA7_1 = input.LA(1);

				if ((LA7_1==26))
				{
					alt7 = 1;
				}
				} finally { DebugExitDecision(7); }
				switch (alt7)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:37:33: ',' exp
					{
					DebugLocation(37, 33);
					char_literal39=(IToken)Match(input,26,Follow._26_in_stat214); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal39_tree = (object)adaptor.Create(char_literal39, "char_literal39", retval);
					adaptor.AddChild(root_0, char_literal39_tree);
					}
					DebugLocation(37, 37);
					PushFollow(Follow._exp_in_stat216);
					exp40=exp();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, exp40.Tree, exp40, "exp40", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(7); }

				DebugLocation(37, 43);
				string_literal41=(IToken)Match(input,45,Follow._45_in_stat220); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal41_tree = (object)adaptor.Create(string_literal41, "string_literal41", retval);
				adaptor.AddChild(root_0, string_literal41_tree);
				}
				DebugLocation(37, 48);
				PushFollow(Follow._block_in_stat222);
				block42=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block42.Tree, block42, "block42", retval);
				DebugLocation(37, 54);
				string_literal43=(IToken)Match(input,48,Follow._48_in_stat224); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal43_tree = (object)adaptor.Create(string_literal43, "string_literal43", retval);
				adaptor.AddChild(root_0, string_literal43_tree);
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:38:5: 'for' namelist 'in' explist1 'do' block 'end'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(38, 5);
				string_literal44=(IToken)Match(input,50,Follow._50_in_stat233); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal44_tree = (object)adaptor.Create(string_literal44, "string_literal44", retval);
				adaptor.AddChild(root_0, string_literal44_tree);
				}
				DebugLocation(38, 11);
				PushFollow(Follow._namelist_in_stat235);
				namelist45=namelist();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, namelist45.Tree, namelist45, "namelist45", retval);
				DebugLocation(38, 20);
				string_literal46=(IToken)Match(input,53,Follow._53_in_stat237); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal46_tree = (object)adaptor.Create(string_literal46, "string_literal46", retval);
				adaptor.AddChild(root_0, string_literal46_tree);
				}
				DebugLocation(38, 25);
				PushFollow(Follow._explist1_in_stat239);
				explist147=explist1();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, explist147.Tree, explist147, "explist147", retval);
				DebugLocation(38, 34);
				string_literal48=(IToken)Match(input,45,Follow._45_in_stat241); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal48_tree = (object)adaptor.Create(string_literal48, "string_literal48", retval);
				adaptor.AddChild(root_0, string_literal48_tree);
				}
				DebugLocation(38, 39);
				PushFollow(Follow._block_in_stat243);
				block49=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block49.Tree, block49, "block49", retval);
				DebugLocation(38, 45);
				string_literal50=(IToken)Match(input,48,Follow._48_in_stat245); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal50_tree = (object)adaptor.Create(string_literal50, "string_literal50", retval);
				adaptor.AddChild(root_0, string_literal50_tree);
				}

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:39:5: 'function' funcname funcbody
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(39, 5);
				string_literal51=(IToken)Match(input,51,Follow._51_in_stat254); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal51_tree = (object)adaptor.Create(string_literal51, "string_literal51", retval);
				adaptor.AddChild(root_0, string_literal51_tree);
				}
				DebugLocation(39, 16);
				PushFollow(Follow._funcname_in_stat256);
				funcname52=funcname();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, funcname52.Tree, funcname52, "funcname52", retval);
				DebugLocation(39, 25);
				PushFollow(Follow._funcbody_in_stat258);
				funcbody53=funcbody();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, funcbody53.Tree, funcbody53, "funcbody53", retval);

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:40:5: 'local' 'function' NAME funcbody
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(40, 5);
				string_literal54=(IToken)Match(input,54,Follow._54_in_stat267); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal54_tree = (object)adaptor.Create(string_literal54, "string_literal54", retval);
				adaptor.AddChild(root_0, string_literal54_tree);
				}
				DebugLocation(40, 13);
				string_literal55=(IToken)Match(input,51,Follow._51_in_stat269); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal55_tree = (object)adaptor.Create(string_literal55, "string_literal55", retval);
				adaptor.AddChild(root_0, string_literal55_tree);
				}
				DebugLocation(40, 24);
				NAME56=(IToken)Match(input,NAME,Follow._NAME_in_stat271); if (state.failed) return retval;
				if (state.backtracking == 0) {
				NAME56_tree = (object)adaptor.Create(NAME56, "NAME56", retval);
				adaptor.AddChild(root_0, NAME56_tree);
				}
				DebugLocation(40, 29);
				PushFollow(Follow._funcbody_in_stat273);
				funcbody57=funcbody();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, funcbody57.Tree, funcbody57, "funcbody57", retval);

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:41:5: 'local' namelist ( '=' explist1 )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(41, 5);
				string_literal58=(IToken)Match(input,54,Follow._54_in_stat282); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal58_tree = (object)adaptor.Create(string_literal58, "string_literal58", retval);
				adaptor.AddChild(root_0, string_literal58_tree);
				}
				DebugLocation(41, 13);
				PushFollow(Follow._namelist_in_stat284);
				namelist59=namelist();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, namelist59.Tree, namelist59, "namelist59", retval);
				DebugLocation(41, 22);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:41:22: ( '=' explist1 )?
				int alt8=2;
				try { DebugEnterSubRule(8);
				try { DebugEnterDecision(8, false);
				int LA8_1 = input.LA(1);

				if ((LA8_1==36))
				{
					alt8 = 1;
				}
				} finally { DebugExitDecision(8); }
				switch (alt8)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:41:23: '=' explist1
					{
					DebugLocation(41, 23);
					char_literal60=(IToken)Match(input,36,Follow._36_in_stat287); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal60_tree = (object)adaptor.Create(char_literal60, "char_literal60", retval);
					adaptor.AddChild(root_0, char_literal60_tree);
					}
					DebugLocation(41, 27);
					PushFollow(Follow._explist1_in_stat289);
					explist161=explist1();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, explist161.Tree, explist161, "explist161", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(8); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("stat", 3);
			LeaveRule("stat", 3);
			LeaveRule_stat();
		}
		DebugLocation(41, 37);
		} finally { DebugExitRule(GrammarFileName, "stat"); }
		return retval;

	}
	// $ANTLR end "stat"

	partial void EnterRule_laststat();
	partial void LeaveRule_laststat();
	// $ANTLR start "laststat"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:43:1: laststat : ( 'return' ( explist1 )? | 'break' );
	[GrammarRule("laststat")]
	private Antlr3AstNode laststat()
	{
		EnterRule_laststat();
		EnterRule("laststat", 4);
		var retval = new Antlr3AstNode("laststat");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		IToken string_literal62 = default(IToken);
		IToken string_literal64 = default(IToken);
		Antlr3AstNode explist163 = default(Antlr3AstNode);

		object string_literal62_tree = default(object);
		object string_literal64_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "laststat");
		DebugLocation(43, 41);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:43:10: ( 'return' ( explist1 )? | 'break' )
			int alt11=2;
			try { DebugEnterDecision(11, false);
			int LA11_1 = input.LA(1);

			if ((LA11_1==59))
			{
				alt11 = 1;
			}
			else if ((LA11_1==44))
			{
				alt11 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 11, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(11); }
			switch (alt11)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:43:12: 'return' ( explist1 )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(43, 12);
				string_literal62=(IToken)Match(input,59,Follow._59_in_laststat300); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal62_tree = (object)adaptor.Create(string_literal62, "string_literal62", retval);
				adaptor.AddChild(root_0, string_literal62_tree);
				}
				DebugLocation(43, 21);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:43:21: ( explist1 )?
				int alt10=2;
				try { DebugEnterSubRule(10);
				try { DebugEnterDecision(10, false);
				int LA10_1 = input.LA(1);

				if ((LA10_1==CHARSTRING||LA10_1==EXP||(LA10_1>=FLOAT && LA10_1<=HEX)||LA10_1==INT||(LA10_1>=LONGSTRING && LA10_1<=NAME)||LA10_1==NORMALSTRING||LA10_1==20||LA10_1==22||LA10_1==27||LA10_1==30||LA10_1==49||LA10_1==51||(LA10_1>=55 && LA10_1<=56)||LA10_1==61||LA10_1==64))
				{
					alt10 = 1;
				}
				} finally { DebugExitDecision(10); }
				switch (alt10)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:43:22: explist1
					{
					DebugLocation(43, 22);
					PushFollow(Follow._explist1_in_laststat303);
					explist163=explist1();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, explist163.Tree, explist163, "explist163", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(10); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:43:35: 'break'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(43, 35);
				string_literal64=(IToken)Match(input,44,Follow._44_in_laststat309); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal64_tree = (object)adaptor.Create(string_literal64, "string_literal64", retval);
				adaptor.AddChild(root_0, string_literal64_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("laststat", 4);
			LeaveRule("laststat", 4);
			LeaveRule_laststat();
		}
		DebugLocation(43, 41);
		} finally { DebugExitRule(GrammarFileName, "laststat"); }
		return retval;

	}
	// $ANTLR end "laststat"

	partial void EnterRule_funcname();
	partial void LeaveRule_funcname();
	// $ANTLR start "funcname"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:45:1: funcname : NAME ( '.' NAME )* ( ':' NAME )? ;
	[GrammarRule("funcname")]
	private Antlr3AstNode funcname()
	{
		EnterRule_funcname();
		EnterRule("funcname", 5);
		var retval = new Antlr3AstNode("funcname");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		IToken NAME65 = default(IToken);
		IToken char_literal66 = default(IToken);
		IToken NAME67 = default(IToken);
		IToken char_literal68 = default(IToken);
		IToken NAME69 = default(IToken);

		object NAME65_tree = default(object);
		object char_literal66_tree = default(object);
		object NAME67_tree = default(object);
		object char_literal68_tree = default(object);
		object NAME69_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "funcname");
		DebugLocation(45, 40);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:45:10: ( NAME ( '.' NAME )* ( ':' NAME )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:45:12: NAME ( '.' NAME )* ( ':' NAME )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(45, 12);
			NAME65=(IToken)Match(input,NAME,Follow._NAME_in_funcname317); if (state.failed) return retval;
			if (state.backtracking == 0) {
			NAME65_tree = (object)adaptor.Create(NAME65, "NAME65", retval);
			adaptor.AddChild(root_0, NAME65_tree);
			}
			DebugLocation(45, 17);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:45:17: ( '.' NAME )*
			try { DebugEnterSubRule(12);
			while (true)
			{
				int alt12=2;
				try { DebugEnterDecision(12, false);
				int LA12_1 = input.LA(1);

				if ((LA12_1==28))
				{
					alt12 = 1;
				}


				} finally { DebugExitDecision(12); }
				switch ( alt12 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:45:18: '.' NAME
					{
					DebugLocation(45, 18);
					char_literal66=(IToken)Match(input,28,Follow._28_in_funcname320); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal66_tree = (object)adaptor.Create(char_literal66, "char_literal66", retval);
					adaptor.AddChild(root_0, char_literal66_tree);
					}
					DebugLocation(45, 22);
					NAME67=(IToken)Match(input,NAME,Follow._NAME_in_funcname322); if (state.failed) return retval;
					if (state.backtracking == 0) {
					NAME67_tree = (object)adaptor.Create(NAME67, "NAME67", retval);
					adaptor.AddChild(root_0, NAME67_tree);
					}

					}
					break;

				default:
					goto loop12;
				}
			}

			loop12:
				;

			} finally { DebugExitSubRule(12); }

			DebugLocation(45, 29);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:45:29: ( ':' NAME )?
			int alt13=2;
			try { DebugEnterSubRule(13);
			try { DebugEnterDecision(13, false);
			int LA13_1 = input.LA(1);

			if ((LA13_1==32))
			{
				alt13 = 1;
			}
			} finally { DebugExitDecision(13); }
			switch (alt13)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:45:30: ':' NAME
				{
				DebugLocation(45, 30);
				char_literal68=(IToken)Match(input,32,Follow._32_in_funcname327); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal68_tree = (object)adaptor.Create(char_literal68, "char_literal68", retval);
				adaptor.AddChild(root_0, char_literal68_tree);
				}
				DebugLocation(45, 34);
				NAME69=(IToken)Match(input,NAME,Follow._NAME_in_funcname329); if (state.failed) return retval;
				if (state.backtracking == 0) {
				NAME69_tree = (object)adaptor.Create(NAME69, "NAME69", retval);
				adaptor.AddChild(root_0, NAME69_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(13); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("funcname", 5);
			LeaveRule("funcname", 5);
			LeaveRule_funcname();
		}
		DebugLocation(45, 40);
		} finally { DebugExitRule(GrammarFileName, "funcname"); }
		return retval;

	}
	// $ANTLR end "funcname"

	partial void EnterRule_varlist1();
	partial void LeaveRule_varlist1();
	// $ANTLR start "varlist1"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:47:1: varlist1 : var ( ',' var )* ;
	[GrammarRule("varlist1")]
	private Antlr3AstNode varlist1()
	{
		EnterRule_varlist1();
		EnterRule("varlist1", 6);
		var retval = new Antlr3AstNode("varlist1");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		IToken char_literal71 = default(IToken);
		Antlr3AstNode var70 = default(Antlr3AstNode);
		Antlr3AstNode var72 = default(Antlr3AstNode);

		object char_literal71_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "varlist1");
		DebugLocation(47, 25);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:47:10: ( var ( ',' var )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:47:12: var ( ',' var )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(47, 12);
			PushFollow(Follow._var_in_varlist1340);
			var70=var();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, var70.Tree, var70, "var70", retval);
			DebugLocation(47, 16);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:47:16: ( ',' var )*
			try { DebugEnterSubRule(14);
			while (true)
			{
				int alt14=2;
				try { DebugEnterDecision(14, false);
				int LA14_1 = input.LA(1);

				if ((LA14_1==26))
				{
					alt14 = 1;
				}


				} finally { DebugExitDecision(14); }
				switch ( alt14 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:47:17: ',' var
					{
					DebugLocation(47, 17);
					char_literal71=(IToken)Match(input,26,Follow._26_in_varlist1343); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal71_tree = (object)adaptor.Create(char_literal71, "char_literal71", retval);
					adaptor.AddChild(root_0, char_literal71_tree);
					}
					DebugLocation(47, 21);
					PushFollow(Follow._var_in_varlist1345);
					var72=var();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, var72.Tree, var72, "var72", retval);

					}
					break;

				default:
					goto loop14;
				}
			}

			loop14:
				;

			} finally { DebugExitSubRule(14); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("varlist1", 6);
			LeaveRule("varlist1", 6);
			LeaveRule_varlist1();
		}
		DebugLocation(47, 25);
		} finally { DebugExitRule(GrammarFileName, "varlist1"); }
		return retval;

	}
	// $ANTLR end "varlist1"

	partial void EnterRule_namelist();
	partial void LeaveRule_namelist();
	// $ANTLR start "namelist"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:50:1: namelist : NAME ( ',' NAME )* ;
	[GrammarRule("namelist")]
	private Antlr3AstNode namelist()
	{
		EnterRule_namelist();
		EnterRule("namelist", 7);
		var retval = new Antlr3AstNode("namelist");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		IToken NAME73 = default(IToken);
		IToken char_literal74 = default(IToken);
		IToken NAME75 = default(IToken);

		object NAME73_tree = default(object);
		object char_literal74_tree = default(object);
		object NAME75_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "namelist");
		DebugLocation(50, 27);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:50:10: ( NAME ( ',' NAME )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:50:12: NAME ( ',' NAME )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(50, 12);
			NAME73=(IToken)Match(input,NAME,Follow._NAME_in_namelist356); if (state.failed) return retval;
			if (state.backtracking == 0) {
			NAME73_tree = (object)adaptor.Create(NAME73, "NAME73", retval);
			adaptor.AddChild(root_0, NAME73_tree);
			}
			DebugLocation(50, 17);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:50:17: ( ',' NAME )*
			try { DebugEnterSubRule(15);
			while (true)
			{
				int alt15=2;
				try { DebugEnterDecision(15, false);
				int LA15_1 = input.LA(1);

				if ((LA15_1==26))
				{
					int LA15_2 = input.LA(2);

					if ((LA15_2==NAME))
					{
						alt15 = 1;
					}


				}


				} finally { DebugExitDecision(15); }
				switch ( alt15 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:50:18: ',' NAME
					{
					DebugLocation(50, 18);
					char_literal74=(IToken)Match(input,26,Follow._26_in_namelist359); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal74_tree = (object)adaptor.Create(char_literal74, "char_literal74", retval);
					adaptor.AddChild(root_0, char_literal74_tree);
					}
					DebugLocation(50, 22);
					NAME75=(IToken)Match(input,NAME,Follow._NAME_in_namelist361); if (state.failed) return retval;
					if (state.backtracking == 0) {
					NAME75_tree = (object)adaptor.Create(NAME75, "NAME75", retval);
					adaptor.AddChild(root_0, NAME75_tree);
					}

					}
					break;

				default:
					goto loop15;
				}
			}

			loop15:
				;

			} finally { DebugExitSubRule(15); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("namelist", 7);
			LeaveRule("namelist", 7);
			LeaveRule_namelist();
		}
		DebugLocation(50, 27);
		} finally { DebugExitRule(GrammarFileName, "namelist"); }
		return retval;

	}
	// $ANTLR end "namelist"

	partial void EnterRule_explist1();
	partial void LeaveRule_explist1();
	// $ANTLR start "explist1"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:52:1: explist1 : ( exp ',' )* exp ;
	[GrammarRule("explist1")]
	private Antlr3AstNode explist1()
	{
		EnterRule_explist1();
		EnterRule("explist1", 8);
		var retval = new Antlr3AstNode("explist1");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		IToken char_literal77 = default(IToken);
		Antlr3AstNode exp76 = default(Antlr3AstNode);
		Antlr3AstNode exp78 = default(Antlr3AstNode);

		object char_literal77_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "explist1");
		DebugLocation(52, 25);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:52:10: ( ( exp ',' )* exp )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:52:12: ( exp ',' )* exp
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(52, 12);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:52:12: ( exp ',' )*
			try { DebugEnterSubRule(16);
			while (true)
			{
				int alt16=2;
				try { DebugEnterDecision(16, false);
				switch (input.LA(1))
				{
				case 55:
					{
					int LA16_2 = input.LA(2);

					if ((EvaluatePredicate(synpred25_Lua_fragment)))
					{
						alt16 = 1;
					}


					}
					break;
				case 49:
					{
					int LA16_2 = input.LA(2);

					if ((EvaluatePredicate(synpred25_Lua_fragment)))
					{
						alt16 = 1;
					}


					}
					break;
				case 61:
					{
					int LA16_2 = input.LA(2);

					if ((EvaluatePredicate(synpred25_Lua_fragment)))
					{
						alt16 = 1;
					}


					}
					break;
				case EXP:
				case FLOAT:
				case HEX:
				case INT:
					{
					int LA16_2 = input.LA(2);

					if ((EvaluatePredicate(synpred25_Lua_fragment)))
					{
						alt16 = 1;
					}


					}
					break;
				case CHARSTRING:
				case LONGSTRING:
				case NORMALSTRING:
					{
					int LA16_2 = input.LA(2);

					if ((EvaluatePredicate(synpred25_Lua_fragment)))
					{
						alt16 = 1;
					}


					}
					break;
				case 30:
					{
					int LA16_2 = input.LA(2);

					if ((EvaluatePredicate(synpred25_Lua_fragment)))
					{
						alt16 = 1;
					}


					}
					break;
				case 51:
					{
					int LA16_2 = input.LA(2);

					if ((EvaluatePredicate(synpred25_Lua_fragment)))
					{
						alt16 = 1;
					}


					}
					break;
				case NAME:
					{
					int LA16_2 = input.LA(2);

					if ((EvaluatePredicate(synpred25_Lua_fragment)))
					{
						alt16 = 1;
					}


					}
					break;
				case 22:
					{
					int LA16_2 = input.LA(2);

					if ((EvaluatePredicate(synpred25_Lua_fragment)))
					{
						alt16 = 1;
					}


					}
					break;
				case 64:
					{
					int LA16_2 = input.LA(2);

					if ((EvaluatePredicate(synpred25_Lua_fragment)))
					{
						alt16 = 1;
					}


					}
					break;
				case 20:
				case 27:
				case 56:
					{
					int LA16_2 = input.LA(2);

					if ((EvaluatePredicate(synpred25_Lua_fragment)))
					{
						alt16 = 1;
					}


					}
					break;
				}

				} finally { DebugExitDecision(16); }
				switch ( alt16 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:52:13: exp ','
					{
					DebugLocation(52, 13);
					PushFollow(Follow._exp_in_explist1372);
					exp76=exp();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, exp76.Tree, exp76, "exp76", retval);
					DebugLocation(52, 17);
					char_literal77=(IToken)Match(input,26,Follow._26_in_explist1374); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal77_tree = (object)adaptor.Create(char_literal77, "char_literal77", retval);
					adaptor.AddChild(root_0, char_literal77_tree);
					}

					}
					break;

				default:
					goto loop16;
				}
			}

			loop16:
				;

			} finally { DebugExitSubRule(16); }

			DebugLocation(52, 23);
			PushFollow(Follow._exp_in_explist1378);
			exp78=exp();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, exp78.Tree, exp78, "exp78", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("explist1", 8);
			LeaveRule("explist1", 8);
			LeaveRule_explist1();
		}
		DebugLocation(52, 25);
		} finally { DebugExitRule(GrammarFileName, "explist1"); }
		return retval;

	}
	// $ANTLR end "explist1"

	partial void EnterRule_exp();
	partial void LeaveRule_exp();
	// $ANTLR start "exp"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:54:1: exp : ( 'nil' | 'false' | 'true' | lua_number | lua_string | '...' | function | prefixexp | tableconstructor | unop exp ) ( binop exp )* ;
	[GrammarRule("exp")]
	private Antlr3AstNode exp()
	{
		EnterRule_exp();
		EnterRule("exp", 9);
		var retval = new Antlr3AstNode("exp");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		IToken string_literal79 = default(IToken);
		IToken string_literal80 = default(IToken);
		IToken string_literal81 = default(IToken);
		IToken string_literal84 = default(IToken);
		Antlr3AstNode lua_number82 = default(Antlr3AstNode);
		Antlr3AstNode lua_string83 = default(Antlr3AstNode);
		Antlr3AstNode function85 = default(Antlr3AstNode);
		Antlr3AstNode prefixexp86 = default(Antlr3AstNode);
		Antlr3AstNode tableconstructor87 = default(Antlr3AstNode);
		Antlr3AstNode unop88 = default(Antlr3AstNode);
		Antlr3AstNode exp89 = default(Antlr3AstNode);
		Antlr3AstNode binop90 = default(Antlr3AstNode);
		Antlr3AstNode exp91 = default(Antlr3AstNode);

		object string_literal79_tree = default(object);
		object string_literal80_tree = default(object);
		object string_literal81_tree = default(object);
		object string_literal84_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "exp");
		DebugLocation(54, 134);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:54:5: ( ( 'nil' | 'false' | 'true' | lua_number | lua_string | '...' | function | prefixexp | tableconstructor | unop exp ) ( binop exp )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:54:8: ( 'nil' | 'false' | 'true' | lua_number | lua_string | '...' | function | prefixexp | tableconstructor | unop exp ) ( binop exp )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(54, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:54:8: ( 'nil' | 'false' | 'true' | lua_number | lua_string | '...' | function | prefixexp | tableconstructor | unop exp )
			int alt17=10;
			try { DebugEnterSubRule(17);
			try { DebugEnterDecision(17, false);
			switch (input.LA(1))
			{
			case 55:
				{
				alt17 = 1;
				}
				break;
			case 49:
				{
				alt17 = 2;
				}
				break;
			case 61:
				{
				alt17 = 3;
				}
				break;
			case EXP:
			case FLOAT:
			case HEX:
			case INT:
				{
				alt17 = 4;
				}
				break;
			case CHARSTRING:
			case LONGSTRING:
			case NORMALSTRING:
				{
				alt17 = 5;
				}
				break;
			case 30:
				{
				alt17 = 6;
				}
				break;
			case 51:
				{
				alt17 = 7;
				}
				break;
			case NAME:
			case 22:
				{
				alt17 = 8;
				}
				break;
			case 64:
				{
				alt17 = 9;
				}
				break;
			case 20:
			case 27:
			case 56:
				{
				alt17 = 10;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 17, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(17); }
			switch (alt17)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:54:9: 'nil'
				{
				DebugLocation(54, 9);
				string_literal79=(IToken)Match(input,55,Follow._55_in_exp388); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal79_tree = (object)adaptor.Create(string_literal79, "string_literal79", retval);
				adaptor.AddChild(root_0, string_literal79_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:54:17: 'false'
				{
				DebugLocation(54, 17);
				string_literal80=(IToken)Match(input,49,Follow._49_in_exp392); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal80_tree = (object)adaptor.Create(string_literal80, "string_literal80", retval);
				adaptor.AddChild(root_0, string_literal80_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:54:27: 'true'
				{
				DebugLocation(54, 27);
				string_literal81=(IToken)Match(input,61,Follow._61_in_exp396); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal81_tree = (object)adaptor.Create(string_literal81, "string_literal81", retval);
				adaptor.AddChild(root_0, string_literal81_tree);
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:54:36: lua_number
				{
				DebugLocation(54, 36);
				PushFollow(Follow._lua_number_in_exp400);
				lua_number82=lua_number();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, lua_number82.Tree, lua_number82, "lua_number82", retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:54:49: lua_string
				{
				DebugLocation(54, 49);
				PushFollow(Follow._lua_string_in_exp404);
				lua_string83=lua_string();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, lua_string83.Tree, lua_string83, "lua_string83", retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:54:62: '...'
				{
				DebugLocation(54, 62);
				string_literal84=(IToken)Match(input,30,Follow._30_in_exp408); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal84_tree = (object)adaptor.Create(string_literal84, "string_literal84", retval);
				adaptor.AddChild(root_0, string_literal84_tree);
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:54:70: function
				{
				DebugLocation(54, 70);
				PushFollow(Follow._function_in_exp412);
				function85=function();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, function85.Tree, function85, "function85", retval);

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:54:81: prefixexp
				{
				DebugLocation(54, 81);
				PushFollow(Follow._prefixexp_in_exp416);
				prefixexp86=prefixexp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, prefixexp86.Tree, prefixexp86, "prefixexp86", retval);

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:54:93: tableconstructor
				{
				DebugLocation(54, 93);
				PushFollow(Follow._tableconstructor_in_exp420);
				tableconstructor87=tableconstructor();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, tableconstructor87.Tree, tableconstructor87, "tableconstructor87", retval);

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:54:112: unop exp
				{
				DebugLocation(54, 112);
				PushFollow(Follow._unop_in_exp424);
				unop88=unop();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unop88.Tree, unop88, "unop88", retval);
				DebugLocation(54, 117);
				PushFollow(Follow._exp_in_exp426);
				exp89=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp89.Tree, exp89, "exp89", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(17); }

			DebugLocation(54, 122);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:54:122: ( binop exp )*
			try { DebugEnterSubRule(18);
			while (true)
			{
				int alt18=2;
				try { DebugEnterDecision(18, false);
				int LA18_1 = input.LA(1);

				if ((LA18_1==21||(LA18_1>=24 && LA18_1<=25)||LA18_1==27||LA18_1==29||LA18_1==31||(LA18_1>=34 && LA18_1<=35)||(LA18_1>=37 && LA18_1<=39)||(LA18_1>=42 && LA18_1<=43)||LA18_1==57||LA18_1==66))
				{
					int LA18_2 = input.LA(2);

					if ((EvaluatePredicate(synpred35_Lua_fragment)))
					{
						alt18 = 1;
					}


				}


				} finally { DebugExitDecision(18); }
				switch ( alt18 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:54:123: binop exp
					{
					DebugLocation(54, 123);
					PushFollow(Follow._binop_in_exp430);
					binop90=binop();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, binop90.Tree, binop90, "binop90", retval);
					DebugLocation(54, 129);
					PushFollow(Follow._exp_in_exp432);
					exp91=exp();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, exp91.Tree, exp91, "exp91", retval);

					}
					break;

				default:
					goto loop18;
				}
			}

			loop18:
				;

			} finally { DebugExitSubRule(18); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("exp", 9);
			LeaveRule("exp", 9);
			LeaveRule_exp();
		}
		DebugLocation(54, 134);
		} finally { DebugExitRule(GrammarFileName, "exp"); }
		return retval;

	}
	// $ANTLR end "exp"

	partial void EnterRule_var();
	partial void LeaveRule_var();
	// $ANTLR start "var"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:56:1: var : ( NAME | '(' exp ')' varSuffix ) ( varSuffix )* ;
	[GrammarRule("var")]
	private Antlr3AstNode var()
	{
		EnterRule_var();
		EnterRule("var", 10);
		var retval = new Antlr3AstNode("var");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		IToken NAME92 = default(IToken);
		IToken char_literal93 = default(IToken);
		IToken char_literal95 = default(IToken);
		Antlr3AstNode exp94 = default(Antlr3AstNode);
		Antlr3AstNode varSuffix96 = default(Antlr3AstNode);
		Antlr3AstNode varSuffix97 = default(Antlr3AstNode);

		object NAME92_tree = default(object);
		object char_literal93_tree = default(object);
		object char_literal95_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "var");
		DebugLocation(56, 46);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:56:4: ( ( NAME | '(' exp ')' varSuffix ) ( varSuffix )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:56:6: ( NAME | '(' exp ')' varSuffix ) ( varSuffix )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(56, 6);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:56:6: ( NAME | '(' exp ')' varSuffix )
			int alt19=2;
			try { DebugEnterSubRule(19);
			try { DebugEnterDecision(19, false);
			int LA19_1 = input.LA(1);

			if ((LA19_1==NAME))
			{
				alt19 = 1;
			}
			else if ((LA19_1==22))
			{
				alt19 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 19, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(19); }
			switch (alt19)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:56:7: NAME
				{
				DebugLocation(56, 7);
				NAME92=(IToken)Match(input,NAME,Follow._NAME_in_var443); if (state.failed) return retval;
				if (state.backtracking == 0) {
				NAME92_tree = (object)adaptor.Create(NAME92, "NAME92", retval);
				adaptor.AddChild(root_0, NAME92_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:56:14: '(' exp ')' varSuffix
				{
				DebugLocation(56, 14);
				char_literal93=(IToken)Match(input,22,Follow._22_in_var447); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal93_tree = (object)adaptor.Create(char_literal93, "char_literal93", retval);
				adaptor.AddChild(root_0, char_literal93_tree);
				}
				DebugLocation(56, 18);
				PushFollow(Follow._exp_in_var449);
				exp94=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp94.Tree, exp94, "exp94", retval);
				DebugLocation(56, 22);
				char_literal95=(IToken)Match(input,23,Follow._23_in_var451); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal95_tree = (object)adaptor.Create(char_literal95, "char_literal95", retval);
				adaptor.AddChild(root_0, char_literal95_tree);
				}
				DebugLocation(56, 26);
				PushFollow(Follow._varSuffix_in_var453);
				varSuffix96=varSuffix();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, varSuffix96.Tree, varSuffix96, "varSuffix96", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(19); }

			DebugLocation(56, 37);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:56:37: ( varSuffix )*
			try { DebugEnterSubRule(20);
			while (true)
			{
				int alt20=2;
				try { DebugEnterDecision(20, false);
				switch (input.LA(1))
				{
				case 32:
					{
					int LA20_2 = input.LA(2);

					if ((EvaluatePredicate(synpred37_Lua_fragment)))
					{
						alt20 = 1;
					}


					}
					break;
				case 22:
					{
					int LA20_2 = input.LA(2);

					if ((EvaluatePredicate(synpred37_Lua_fragment)))
					{
						alt20 = 1;
					}


					}
					break;
				case 64:
					{
					int LA20_2 = input.LA(2);

					if ((EvaluatePredicate(synpred37_Lua_fragment)))
					{
						alt20 = 1;
					}


					}
					break;
				case CHARSTRING:
				case LONGSTRING:
				case NORMALSTRING:
					{
					int LA20_2 = input.LA(2);

					if ((EvaluatePredicate(synpred37_Lua_fragment)))
					{
						alt20 = 1;
					}


					}
					break;
				case 28:
				case 40:
					{
					alt20 = 1;
					}
					break;
				}

				} finally { DebugExitDecision(20); }
				switch ( alt20 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:56:37: varSuffix
					{
					DebugLocation(56, 37);
					PushFollow(Follow._varSuffix_in_var456);
					varSuffix97=varSuffix();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, varSuffix97.Tree, varSuffix97, "varSuffix97", retval);

					}
					break;

				default:
					goto loop20;
				}
			}

			loop20:
				;

			} finally { DebugExitSubRule(20); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("var", 10);
			LeaveRule("var", 10);
			LeaveRule_var();
		}
		DebugLocation(56, 46);
		} finally { DebugExitRule(GrammarFileName, "var"); }
		return retval;

	}
	// $ANTLR end "var"

	partial void EnterRule_prefixexp();
	partial void LeaveRule_prefixexp();
	// $ANTLR start "prefixexp"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:58:1: prefixexp : varOrExp ( nameAndArgs )* ;
	[GrammarRule("prefixexp")]
	private Antlr3AstNode prefixexp()
	{
		EnterRule_prefixexp();
		EnterRule("prefixexp", 11);
		var retval = new Antlr3AstNode("prefixexp");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		Antlr3AstNode varOrExp98 = default(Antlr3AstNode);
		Antlr3AstNode nameAndArgs99 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "prefixexp");
		DebugLocation(58, 32);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:58:10: ( varOrExp ( nameAndArgs )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:58:12: varOrExp ( nameAndArgs )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(58, 12);
			PushFollow(Follow._varOrExp_in_prefixexp464);
			varOrExp98=varOrExp();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, varOrExp98.Tree, varOrExp98, "varOrExp98", retval);
			DebugLocation(58, 21);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:58:21: ( nameAndArgs )*
			try { DebugEnterSubRule(21);
			while (true)
			{
				int alt21=2;
				try { DebugEnterDecision(21, false);
				int LA21_1 = input.LA(1);

				if ((LA21_1==22))
				{
					int LA21_2 = input.LA(2);

					if ((EvaluatePredicate(synpred38_Lua_fragment)))
					{
						alt21 = 1;
					}


				}
				else if ((LA21_1==CHARSTRING||LA21_1==LONGSTRING||LA21_1==NORMALSTRING||LA21_1==32||LA21_1==64))
				{
					alt21 = 1;
				}


				} finally { DebugExitDecision(21); }
				switch ( alt21 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:58:21: nameAndArgs
					{
					DebugLocation(58, 21);
					PushFollow(Follow._nameAndArgs_in_prefixexp466);
					nameAndArgs99=nameAndArgs();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, nameAndArgs99.Tree, nameAndArgs99, "nameAndArgs99", retval);

					}
					break;

				default:
					goto loop21;
				}
			}

			loop21:
				;

			} finally { DebugExitSubRule(21); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("prefixexp", 11);
			LeaveRule("prefixexp", 11);
			LeaveRule_prefixexp();
		}
		DebugLocation(58, 32);
		} finally { DebugExitRule(GrammarFileName, "prefixexp"); }
		return retval;

	}
	// $ANTLR end "prefixexp"

	partial void EnterRule_functioncall();
	partial void LeaveRule_functioncall();
	// $ANTLR start "functioncall"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:60:1: functioncall : varOrExp ( nameAndArgs )+ ;
	[GrammarRule("functioncall")]
	private Antlr3AstNode functioncall()
	{
		EnterRule_functioncall();
		EnterRule("functioncall", 12);
		var retval = new Antlr3AstNode("functioncall");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		Antlr3AstNode varOrExp100 = default(Antlr3AstNode);
		Antlr3AstNode nameAndArgs101 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "functioncall");
		DebugLocation(60, 35);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:60:13: ( varOrExp ( nameAndArgs )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:60:15: varOrExp ( nameAndArgs )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(60, 15);
			PushFollow(Follow._varOrExp_in_functioncall474);
			varOrExp100=varOrExp();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, varOrExp100.Tree, varOrExp100, "varOrExp100", retval);
			DebugLocation(60, 24);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:60:24: ( nameAndArgs )+
			int cnt22=0;
			try { DebugEnterSubRule(22);
			while (true)
			{
				int alt22=2;
				try { DebugEnterDecision(22, false);
				int LA22_1 = input.LA(1);

				if ((LA22_1==22))
				{
					int LA22_2 = input.LA(2);

					if ((EvaluatePredicate(synpred39_Lua_fragment)))
					{
						alt22 = 1;
					}


				}
				else if ((LA22_1==CHARSTRING||LA22_1==LONGSTRING||LA22_1==NORMALSTRING||LA22_1==32||LA22_1==64))
				{
					alt22 = 1;
				}


				} finally { DebugExitDecision(22); }
				switch (alt22)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:60:24: nameAndArgs
					{
					DebugLocation(60, 24);
					PushFollow(Follow._nameAndArgs_in_functioncall476);
					nameAndArgs101=nameAndArgs();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, nameAndArgs101.Tree, nameAndArgs101, "nameAndArgs101", retval);

					}
					break;

				default:
					if (cnt22 >= 1)
						goto loop22;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee22 = new EarlyExitException( 22, input );
					DebugRecognitionException(eee22);
					throw eee22;
				}
				cnt22++;
			}
			loop22:
				;

			} finally { DebugExitSubRule(22); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("functioncall", 12);
			LeaveRule("functioncall", 12);
			LeaveRule_functioncall();
		}
		DebugLocation(60, 35);
		} finally { DebugExitRule(GrammarFileName, "functioncall"); }
		return retval;

	}
	// $ANTLR end "functioncall"

	partial void EnterRule_varOrExp();
	partial void LeaveRule_varOrExp();
	// $ANTLR start "varOrExp"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:70:1: varOrExp : ( var | '(' exp ')' );
	[GrammarRule("varOrExp")]
	private Antlr3AstNode varOrExp()
	{
		EnterRule_varOrExp();
		EnterRule("varOrExp", 13);
		var retval = new Antlr3AstNode("varOrExp");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		IToken char_literal103 = default(IToken);
		IToken char_literal105 = default(IToken);
		Antlr3AstNode var102 = default(Antlr3AstNode);
		Antlr3AstNode exp104 = default(Antlr3AstNode);

		object char_literal103_tree = default(object);
		object char_literal105_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "varOrExp");
		DebugLocation(70, 27);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:70:9: ( var | '(' exp ')' )
			int alt23=2;
			try { DebugEnterDecision(23, false);
			int LA23_1 = input.LA(1);

			if ((LA23_1==NAME))
			{
				alt23 = 1;
			}
			else if ((LA23_1==22))
			{
				int LA23_2 = input.LA(2);

				if ((EvaluatePredicate(synpred40_Lua_fragment)))
				{
					alt23 = 1;
				}
				else if ((true))
				{
					alt23 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 23, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 23, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(23); }
			switch (alt23)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:70:11: var
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(70, 11);
				PushFollow(Follow._var_in_varOrExp487);
				var102=var();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, var102.Tree, var102, "var102", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:70:17: '(' exp ')'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(70, 17);
				char_literal103=(IToken)Match(input,22,Follow._22_in_varOrExp491); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal103_tree = (object)adaptor.Create(char_literal103, "char_literal103", retval);
				adaptor.AddChild(root_0, char_literal103_tree);
				}
				DebugLocation(70, 21);
				PushFollow(Follow._exp_in_varOrExp493);
				exp104=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp104.Tree, exp104, "exp104", retval);
				DebugLocation(70, 25);
				char_literal105=(IToken)Match(input,23,Follow._23_in_varOrExp495); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal105_tree = (object)adaptor.Create(char_literal105, "char_literal105", retval);
				adaptor.AddChild(root_0, char_literal105_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("varOrExp", 13);
			LeaveRule("varOrExp", 13);
			LeaveRule_varOrExp();
		}
		DebugLocation(70, 27);
		} finally { DebugExitRule(GrammarFileName, "varOrExp"); }
		return retval;

	}
	// $ANTLR end "varOrExp"

	partial void EnterRule_nameAndArgs();
	partial void LeaveRule_nameAndArgs();
	// $ANTLR start "nameAndArgs"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:72:1: nameAndArgs : ( ':' NAME )? args ;
	[GrammarRule("nameAndArgs")]
	private Antlr3AstNode nameAndArgs()
	{
		EnterRule_nameAndArgs();
		EnterRule("nameAndArgs", 14);
		var retval = new Antlr3AstNode("nameAndArgs");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		IToken char_literal106 = default(IToken);
		IToken NAME107 = default(IToken);
		Antlr3AstNode args108 = default(Antlr3AstNode);

		object char_literal106_tree = default(object);
		object NAME107_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "nameAndArgs");
		DebugLocation(72, 29);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:72:12: ( ( ':' NAME )? args )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:72:14: ( ':' NAME )? args
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(72, 14);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:72:14: ( ':' NAME )?
			int alt24=2;
			try { DebugEnterSubRule(24);
			try { DebugEnterDecision(24, false);
			int LA24_1 = input.LA(1);

			if ((LA24_1==32))
			{
				alt24 = 1;
			}
			} finally { DebugExitDecision(24); }
			switch (alt24)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:72:15: ':' NAME
				{
				DebugLocation(72, 15);
				char_literal106=(IToken)Match(input,32,Follow._32_in_nameAndArgs503); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal106_tree = (object)adaptor.Create(char_literal106, "char_literal106", retval);
				adaptor.AddChild(root_0, char_literal106_tree);
				}
				DebugLocation(72, 19);
				NAME107=(IToken)Match(input,NAME,Follow._NAME_in_nameAndArgs505); if (state.failed) return retval;
				if (state.backtracking == 0) {
				NAME107_tree = (object)adaptor.Create(NAME107, "NAME107", retval);
				adaptor.AddChild(root_0, NAME107_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(24); }

			DebugLocation(72, 26);
			PushFollow(Follow._args_in_nameAndArgs509);
			args108=args();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, args108.Tree, args108, "args108", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("nameAndArgs", 14);
			LeaveRule("nameAndArgs", 14);
			LeaveRule_nameAndArgs();
		}
		DebugLocation(72, 29);
		} finally { DebugExitRule(GrammarFileName, "nameAndArgs"); }
		return retval;

	}
	// $ANTLR end "nameAndArgs"

	partial void EnterRule_varSuffix();
	partial void LeaveRule_varSuffix();
	// $ANTLR start "varSuffix"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:74:1: varSuffix : ( nameAndArgs )* ( '[' exp ']' | '.' NAME ) ;
	[GrammarRule("varSuffix")]
	private Antlr3AstNode varSuffix()
	{
		EnterRule_varSuffix();
		EnterRule("varSuffix", 15);
		var retval = new Antlr3AstNode("varSuffix");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		IToken char_literal110 = default(IToken);
		IToken char_literal112 = default(IToken);
		IToken char_literal113 = default(IToken);
		IToken NAME114 = default(IToken);
		Antlr3AstNode nameAndArgs109 = default(Antlr3AstNode);
		Antlr3AstNode exp111 = default(Antlr3AstNode);

		object char_literal110_tree = default(object);
		object char_literal112_tree = default(object);
		object char_literal113_tree = default(object);
		object NAME114_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "varSuffix");
		DebugLocation(74, 48);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:74:10: ( ( nameAndArgs )* ( '[' exp ']' | '.' NAME ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:74:12: ( nameAndArgs )* ( '[' exp ']' | '.' NAME )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(74, 12);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:74:12: ( nameAndArgs )*
			try { DebugEnterSubRule(25);
			while (true)
			{
				int alt25=2;
				try { DebugEnterDecision(25, false);
				int LA25_1 = input.LA(1);

				if ((LA25_1==CHARSTRING||LA25_1==LONGSTRING||LA25_1==NORMALSTRING||LA25_1==22||LA25_1==32||LA25_1==64))
				{
					alt25 = 1;
				}


				} finally { DebugExitDecision(25); }
				switch ( alt25 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:74:12: nameAndArgs
					{
					DebugLocation(74, 12);
					PushFollow(Follow._nameAndArgs_in_varSuffix516);
					nameAndArgs109=nameAndArgs();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, nameAndArgs109.Tree, nameAndArgs109, "nameAndArgs109", retval);

					}
					break;

				default:
					goto loop25;
				}
			}

			loop25:
				;

			} finally { DebugExitSubRule(25); }

			DebugLocation(74, 25);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:74:25: ( '[' exp ']' | '.' NAME )
			int alt26=2;
			try { DebugEnterSubRule(26);
			try { DebugEnterDecision(26, false);
			int LA26_1 = input.LA(1);

			if ((LA26_1==40))
			{
				alt26 = 1;
			}
			else if ((LA26_1==28))
			{
				alt26 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 26, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(26); }
			switch (alt26)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:74:26: '[' exp ']'
				{
				DebugLocation(74, 26);
				char_literal110=(IToken)Match(input,40,Follow._40_in_varSuffix520); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal110_tree = (object)adaptor.Create(char_literal110, "char_literal110", retval);
				adaptor.AddChild(root_0, char_literal110_tree);
				}
				DebugLocation(74, 30);
				PushFollow(Follow._exp_in_varSuffix522);
				exp111=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp111.Tree, exp111, "exp111", retval);
				DebugLocation(74, 34);
				char_literal112=(IToken)Match(input,41,Follow._41_in_varSuffix524); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal112_tree = (object)adaptor.Create(char_literal112, "char_literal112", retval);
				adaptor.AddChild(root_0, char_literal112_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:74:40: '.' NAME
				{
				DebugLocation(74, 40);
				char_literal113=(IToken)Match(input,28,Follow._28_in_varSuffix528); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal113_tree = (object)adaptor.Create(char_literal113, "char_literal113", retval);
				adaptor.AddChild(root_0, char_literal113_tree);
				}
				DebugLocation(74, 44);
				NAME114=(IToken)Match(input,NAME,Follow._NAME_in_varSuffix530); if (state.failed) return retval;
				if (state.backtracking == 0) {
				NAME114_tree = (object)adaptor.Create(NAME114, "NAME114", retval);
				adaptor.AddChild(root_0, NAME114_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(26); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("varSuffix", 15);
			LeaveRule("varSuffix", 15);
			LeaveRule_varSuffix();
		}
		DebugLocation(74, 48);
		} finally { DebugExitRule(GrammarFileName, "varSuffix"); }
		return retval;

	}
	// $ANTLR end "varSuffix"

	partial void EnterRule_args();
	partial void LeaveRule_args();
	// $ANTLR start "args"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:76:1: args : ( '(' ( explist1 )? ')' | tableconstructor | lua_string );
	[GrammarRule("args")]
	private Antlr3AstNode args()
	{
		EnterRule_args();
		EnterRule("args", 16);
		var retval = new Antlr3AstNode("args");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		IToken char_literal115 = default(IToken);
		IToken char_literal117 = default(IToken);
		Antlr3AstNode explist1116 = default(Antlr3AstNode);
		Antlr3AstNode tableconstructor118 = default(Antlr3AstNode);
		Antlr3AstNode lua_string119 = default(Antlr3AstNode);

		object char_literal115_tree = default(object);
		object char_literal117_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "args");
		DebugLocation(76, 60);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:76:6: ( '(' ( explist1 )? ')' | tableconstructor | lua_string )
			int alt28=3;
			try { DebugEnterDecision(28, false);
			switch (input.LA(1))
			{
			case 22:
				{
				alt28 = 1;
				}
				break;
			case 64:
				{
				alt28 = 2;
				}
				break;
			case CHARSTRING:
			case LONGSTRING:
			case NORMALSTRING:
				{
				alt28 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 28, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(28); }
			switch (alt28)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:76:9: '(' ( explist1 )? ')'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(76, 9);
				char_literal115=(IToken)Match(input,22,Follow._22_in_args540); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal115_tree = (object)adaptor.Create(char_literal115, "char_literal115", retval);
				adaptor.AddChild(root_0, char_literal115_tree);
				}
				DebugLocation(76, 13);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:76:13: ( explist1 )?
				int alt27=2;
				try { DebugEnterSubRule(27);
				try { DebugEnterDecision(27, false);
				int LA27_1 = input.LA(1);

				if ((LA27_1==CHARSTRING||LA27_1==EXP||(LA27_1>=FLOAT && LA27_1<=HEX)||LA27_1==INT||(LA27_1>=LONGSTRING && LA27_1<=NAME)||LA27_1==NORMALSTRING||LA27_1==20||LA27_1==22||LA27_1==27||LA27_1==30||LA27_1==49||LA27_1==51||(LA27_1>=55 && LA27_1<=56)||LA27_1==61||LA27_1==64))
				{
					alt27 = 1;
				}
				} finally { DebugExitDecision(27); }
				switch (alt27)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:76:14: explist1
					{
					DebugLocation(76, 14);
					PushFollow(Follow._explist1_in_args543);
					explist1116=explist1();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, explist1116.Tree, explist1116, "explist1116", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(27); }

				DebugLocation(76, 25);
				char_literal117=(IToken)Match(input,23,Follow._23_in_args547); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal117_tree = (object)adaptor.Create(char_literal117, "char_literal117", retval);
				adaptor.AddChild(root_0, char_literal117_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:76:31: tableconstructor
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(76, 31);
				PushFollow(Follow._tableconstructor_in_args551);
				tableconstructor118=tableconstructor();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, tableconstructor118.Tree, tableconstructor118, "tableconstructor118", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:76:50: lua_string
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(76, 50);
				PushFollow(Follow._lua_string_in_args555);
				lua_string119=lua_string();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, lua_string119.Tree, lua_string119, "lua_string119", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("args", 16);
			LeaveRule("args", 16);
			LeaveRule_args();
		}
		DebugLocation(76, 60);
		} finally { DebugExitRule(GrammarFileName, "args"); }
		return retval;

	}
	// $ANTLR end "args"

	partial void EnterRule_function();
	partial void LeaveRule_function();
	// $ANTLR start "function"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:78:1: function : 'function' funcbody ;
	[GrammarRule("function")]
	private Antlr3AstNode function()
	{
		EnterRule_function();
		EnterRule("function", 17);
		var retval = new Antlr3AstNode("function");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		IToken string_literal120 = default(IToken);
		Antlr3AstNode funcbody121 = default(Antlr3AstNode);

		object string_literal120_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "function");
		DebugLocation(78, 30);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:78:10: ( 'function' funcbody )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:78:12: 'function' funcbody
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(78, 12);
			string_literal120=(IToken)Match(input,51,Follow._51_in_function564); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal120_tree = (object)adaptor.Create(string_literal120, "string_literal120", retval);
			adaptor.AddChild(root_0, string_literal120_tree);
			}
			DebugLocation(78, 23);
			PushFollow(Follow._funcbody_in_function566);
			funcbody121=funcbody();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, funcbody121.Tree, funcbody121, "funcbody121", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("function", 17);
			LeaveRule("function", 17);
			LeaveRule_function();
		}
		DebugLocation(78, 30);
		} finally { DebugExitRule(GrammarFileName, "function"); }
		return retval;

	}
	// $ANTLR end "function"

	partial void EnterRule_funcbody();
	partial void LeaveRule_funcbody();
	// $ANTLR start "funcbody"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:80:1: funcbody : '(' ( parlist1 )? ')' block 'end' ;
	[GrammarRule("funcbody")]
	private Antlr3AstNode funcbody()
	{
		EnterRule_funcbody();
		EnterRule("funcbody", 18);
		var retval = new Antlr3AstNode("funcbody");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		IToken char_literal122 = default(IToken);
		IToken char_literal124 = default(IToken);
		IToken string_literal126 = default(IToken);
		Antlr3AstNode parlist1123 = default(Antlr3AstNode);
		Antlr3AstNode block125 = default(Antlr3AstNode);

		object char_literal122_tree = default(object);
		object char_literal124_tree = default(object);
		object string_literal126_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "funcbody");
		DebugLocation(80, 42);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:80:10: ( '(' ( parlist1 )? ')' block 'end' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:80:12: '(' ( parlist1 )? ')' block 'end'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(80, 12);
			char_literal122=(IToken)Match(input,22,Follow._22_in_funcbody574); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal122_tree = (object)adaptor.Create(char_literal122, "char_literal122", retval);
			adaptor.AddChild(root_0, char_literal122_tree);
			}
			DebugLocation(80, 16);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:80:16: ( parlist1 )?
			int alt29=2;
			try { DebugEnterSubRule(29);
			try { DebugEnterDecision(29, false);
			int LA29_1 = input.LA(1);

			if ((LA29_1==NAME||LA29_1==30))
			{
				alt29 = 1;
			}
			} finally { DebugExitDecision(29); }
			switch (alt29)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:80:17: parlist1
				{
				DebugLocation(80, 17);
				PushFollow(Follow._parlist1_in_funcbody577);
				parlist1123=parlist1();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, parlist1123.Tree, parlist1123, "parlist1123", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(29); }

			DebugLocation(80, 28);
			char_literal124=(IToken)Match(input,23,Follow._23_in_funcbody581); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal124_tree = (object)adaptor.Create(char_literal124, "char_literal124", retval);
			adaptor.AddChild(root_0, char_literal124_tree);
			}
			DebugLocation(80, 32);
			PushFollow(Follow._block_in_funcbody583);
			block125=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block125.Tree, block125, "block125", retval);
			DebugLocation(80, 38);
			string_literal126=(IToken)Match(input,48,Follow._48_in_funcbody585); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal126_tree = (object)adaptor.Create(string_literal126, "string_literal126", retval);
			adaptor.AddChild(root_0, string_literal126_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("funcbody", 18);
			LeaveRule("funcbody", 18);
			LeaveRule_funcbody();
		}
		DebugLocation(80, 42);
		} finally { DebugExitRule(GrammarFileName, "funcbody"); }
		return retval;

	}
	// $ANTLR end "funcbody"

	partial void EnterRule_parlist1();
	partial void LeaveRule_parlist1();
	// $ANTLR start "parlist1"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:82:1: parlist1 : ( namelist ( ',' '...' )? | '...' );
	[GrammarRule("parlist1")]
	private Antlr3AstNode parlist1()
	{
		EnterRule_parlist1();
		EnterRule("parlist1", 19);
		var retval = new Antlr3AstNode("parlist1");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		IToken char_literal128 = default(IToken);
		IToken string_literal129 = default(IToken);
		IToken string_literal130 = default(IToken);
		Antlr3AstNode namelist127 = default(Antlr3AstNode);

		object char_literal128_tree = default(object);
		object string_literal129_tree = default(object);
		object string_literal130_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "parlist1");
		DebugLocation(82, 40);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:82:10: ( namelist ( ',' '...' )? | '...' )
			int alt31=2;
			try { DebugEnterDecision(31, false);
			int LA31_1 = input.LA(1);

			if ((LA31_1==NAME))
			{
				alt31 = 1;
			}
			else if ((LA31_1==30))
			{
				alt31 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 31, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(31); }
			switch (alt31)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:82:12: namelist ( ',' '...' )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(82, 12);
				PushFollow(Follow._namelist_in_parlist1593);
				namelist127=namelist();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, namelist127.Tree, namelist127, "namelist127", retval);
				DebugLocation(82, 21);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:82:21: ( ',' '...' )?
				int alt30=2;
				try { DebugEnterSubRule(30);
				try { DebugEnterDecision(30, false);
				int LA30_1 = input.LA(1);

				if ((LA30_1==26))
				{
					alt30 = 1;
				}
				} finally { DebugExitDecision(30); }
				switch (alt30)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:82:22: ',' '...'
					{
					DebugLocation(82, 22);
					char_literal128=(IToken)Match(input,26,Follow._26_in_parlist1596); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal128_tree = (object)adaptor.Create(char_literal128, "char_literal128", retval);
					adaptor.AddChild(root_0, char_literal128_tree);
					}
					DebugLocation(82, 26);
					string_literal129=(IToken)Match(input,30,Follow._30_in_parlist1598); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal129_tree = (object)adaptor.Create(string_literal129, "string_literal129", retval);
					adaptor.AddChild(root_0, string_literal129_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(30); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:82:36: '...'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(82, 36);
				string_literal130=(IToken)Match(input,30,Follow._30_in_parlist1604); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal130_tree = (object)adaptor.Create(string_literal130, "string_literal130", retval);
				adaptor.AddChild(root_0, string_literal130_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("parlist1", 19);
			LeaveRule("parlist1", 19);
			LeaveRule_parlist1();
		}
		DebugLocation(82, 40);
		} finally { DebugExitRule(GrammarFileName, "parlist1"); }
		return retval;

	}
	// $ANTLR end "parlist1"

	partial void EnterRule_tableconstructor();
	partial void LeaveRule_tableconstructor();
	// $ANTLR start "tableconstructor"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:84:1: tableconstructor : '{' ( fieldlist )? '}' ;
	[GrammarRule("tableconstructor")]
	private Antlr3AstNode tableconstructor()
	{
		EnterRule_tableconstructor();
		EnterRule("tableconstructor", 20);
		var retval = new Antlr3AstNode("tableconstructor");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		IToken char_literal131 = default(IToken);
		IToken char_literal133 = default(IToken);
		Antlr3AstNode fieldlist132 = default(Antlr3AstNode);

		object char_literal131_tree = default(object);
		object char_literal133_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "tableconstructor");
		DebugLocation(84, 39);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:84:18: ( '{' ( fieldlist )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:84:20: '{' ( fieldlist )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(84, 20);
			char_literal131=(IToken)Match(input,64,Follow._64_in_tableconstructor612); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal131_tree = (object)adaptor.Create(char_literal131, "char_literal131", retval);
			adaptor.AddChild(root_0, char_literal131_tree);
			}
			DebugLocation(84, 24);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:84:24: ( fieldlist )?
			int alt32=2;
			try { DebugEnterSubRule(32);
			try { DebugEnterDecision(32, false);
			int LA32_1 = input.LA(1);

			if ((LA32_1==CHARSTRING||LA32_1==EXP||(LA32_1>=FLOAT && LA32_1<=HEX)||LA32_1==INT||(LA32_1>=LONGSTRING && LA32_1<=NAME)||LA32_1==NORMALSTRING||LA32_1==20||LA32_1==22||LA32_1==27||LA32_1==30||LA32_1==40||LA32_1==49||LA32_1==51||(LA32_1>=55 && LA32_1<=56)||LA32_1==61||LA32_1==64))
			{
				alt32 = 1;
			}
			} finally { DebugExitDecision(32); }
			switch (alt32)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:84:25: fieldlist
				{
				DebugLocation(84, 25);
				PushFollow(Follow._fieldlist_in_tableconstructor615);
				fieldlist132=fieldlist();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, fieldlist132.Tree, fieldlist132, "fieldlist132", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(32); }

			DebugLocation(84, 37);
			char_literal133=(IToken)Match(input,65,Follow._65_in_tableconstructor619); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal133_tree = (object)adaptor.Create(char_literal133, "char_literal133", retval);
			adaptor.AddChild(root_0, char_literal133_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("tableconstructor", 20);
			LeaveRule("tableconstructor", 20);
			LeaveRule_tableconstructor();
		}
		DebugLocation(84, 39);
		} finally { DebugExitRule(GrammarFileName, "tableconstructor"); }
		return retval;

	}
	// $ANTLR end "tableconstructor"

	partial void EnterRule_fieldlist();
	partial void LeaveRule_fieldlist();
	// $ANTLR start "fieldlist"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:86:1: fieldlist : field ( fieldsep field )* ( fieldsep )? ;
	[GrammarRule("fieldlist")]
	private Antlr3AstNode fieldlist()
	{
		EnterRule_fieldlist();
		EnterRule("fieldlist", 21);
		var retval = new Antlr3AstNode("fieldlist");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		Antlr3AstNode field134 = default(Antlr3AstNode);
		Antlr3AstNode fieldsep135 = default(Antlr3AstNode);
		Antlr3AstNode field136 = default(Antlr3AstNode);
		Antlr3AstNode fieldsep137 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "fieldlist");
		DebugLocation(86, 47);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:86:11: ( field ( fieldsep field )* ( fieldsep )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:86:13: field ( fieldsep field )* ( fieldsep )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(86, 13);
			PushFollow(Follow._field_in_fieldlist627);
			field134=field();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, field134.Tree, field134, "field134", retval);
			DebugLocation(86, 19);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:86:19: ( fieldsep field )*
			try { DebugEnterSubRule(33);
			while (true)
			{
				int alt33=2;
				try { DebugEnterDecision(33, false);
				int LA33_1 = input.LA(1);

				if ((LA33_1==26||LA33_1==33))
				{
					int LA33_2 = input.LA(2);

					if ((LA33_2==CHARSTRING||LA33_2==EXP||(LA33_2>=FLOAT && LA33_2<=HEX)||LA33_2==INT||(LA33_2>=LONGSTRING && LA33_2<=NAME)||LA33_2==NORMALSTRING||LA33_2==20||LA33_2==22||LA33_2==27||LA33_2==30||LA33_2==40||LA33_2==49||LA33_2==51||(LA33_2>=55 && LA33_2<=56)||LA33_2==61||LA33_2==64))
					{
						alt33 = 1;
					}


				}


				} finally { DebugExitDecision(33); }
				switch ( alt33 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:86:20: fieldsep field
					{
					DebugLocation(86, 20);
					PushFollow(Follow._fieldsep_in_fieldlist630);
					fieldsep135=fieldsep();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, fieldsep135.Tree, fieldsep135, "fieldsep135", retval);
					DebugLocation(86, 29);
					PushFollow(Follow._field_in_fieldlist632);
					field136=field();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, field136.Tree, field136, "field136", retval);

					}
					break;

				default:
					goto loop33;
				}
			}

			loop33:
				;

			} finally { DebugExitSubRule(33); }

			DebugLocation(86, 37);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:86:37: ( fieldsep )?
			int alt34=2;
			try { DebugEnterSubRule(34);
			try { DebugEnterDecision(34, false);
			int LA34_1 = input.LA(1);

			if ((LA34_1==26||LA34_1==33))
			{
				alt34 = 1;
			}
			} finally { DebugExitDecision(34); }
			switch (alt34)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:86:38: fieldsep
				{
				DebugLocation(86, 38);
				PushFollow(Follow._fieldsep_in_fieldlist637);
				fieldsep137=fieldsep();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, fieldsep137.Tree, fieldsep137, "fieldsep137", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(34); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("fieldlist", 21);
			LeaveRule("fieldlist", 21);
			LeaveRule_fieldlist();
		}
		DebugLocation(86, 47);
		} finally { DebugExitRule(GrammarFileName, "fieldlist"); }
		return retval;

	}
	// $ANTLR end "fieldlist"

	partial void EnterRule_field();
	partial void LeaveRule_field();
	// $ANTLR start "field"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:88:1: field : ( '[' exp ']' '=' exp | NAME '=' exp | exp );
	[GrammarRule("field")]
	private Antlr3AstNode field()
	{
		EnterRule_field();
		EnterRule("field", 22);
		var retval = new Antlr3AstNode("field");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		IToken char_literal138 = default(IToken);
		IToken char_literal140 = default(IToken);
		IToken char_literal141 = default(IToken);
		IToken NAME143 = default(IToken);
		IToken char_literal144 = default(IToken);
		Antlr3AstNode exp139 = default(Antlr3AstNode);
		Antlr3AstNode exp142 = default(Antlr3AstNode);
		Antlr3AstNode exp145 = default(Antlr3AstNode);
		Antlr3AstNode exp146 = default(Antlr3AstNode);

		object char_literal138_tree = default(object);
		object char_literal140_tree = default(object);
		object char_literal141_tree = default(object);
		object NAME143_tree = default(object);
		object char_literal144_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "field");
		DebugLocation(88, 48);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:88:7: ( '[' exp ']' '=' exp | NAME '=' exp | exp )
			int alt35=3;
			try { DebugEnterDecision(35, false);
			switch (input.LA(1))
			{
			case 40:
				{
				alt35 = 1;
				}
				break;
			case NAME:
				{
				int LA35_2 = input.LA(2);

				if ((LA35_2==36))
				{
					alt35 = 2;
				}
				else if ((LA35_2==EOF||LA35_2==CHARSTRING||LA35_2==LONGSTRING||LA35_2==NORMALSTRING||(LA35_2>=21 && LA35_2<=22)||(LA35_2>=24 && LA35_2<=29)||(LA35_2>=31 && LA35_2<=35)||(LA35_2>=37 && LA35_2<=40)||(LA35_2>=42 && LA35_2<=43)||LA35_2==57||(LA35_2>=64 && LA35_2<=66)))
				{
					alt35 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 35, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case CHARSTRING:
			case EXP:
			case FLOAT:
			case HEX:
			case INT:
			case LONGSTRING:
			case NORMALSTRING:
			case 20:
			case 22:
			case 27:
			case 30:
			case 49:
			case 51:
			case 55:
			case 56:
			case 61:
			case 64:
				{
				alt35 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 35, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(35); }
			switch (alt35)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:88:9: '[' exp ']' '=' exp
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(88, 9);
				char_literal138=(IToken)Match(input,40,Follow._40_in_field647); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal138_tree = (object)adaptor.Create(char_literal138, "char_literal138", retval);
				adaptor.AddChild(root_0, char_literal138_tree);
				}
				DebugLocation(88, 13);
				PushFollow(Follow._exp_in_field649);
				exp139=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp139.Tree, exp139, "exp139", retval);
				DebugLocation(88, 17);
				char_literal140=(IToken)Match(input,41,Follow._41_in_field651); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal140_tree = (object)adaptor.Create(char_literal140, "char_literal140", retval);
				adaptor.AddChild(root_0, char_literal140_tree);
				}
				DebugLocation(88, 21);
				char_literal141=(IToken)Match(input,36,Follow._36_in_field653); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal141_tree = (object)adaptor.Create(char_literal141, "char_literal141", retval);
				adaptor.AddChild(root_0, char_literal141_tree);
				}
				DebugLocation(88, 25);
				PushFollow(Follow._exp_in_field655);
				exp142=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp142.Tree, exp142, "exp142", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:88:31: NAME '=' exp
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(88, 31);
				NAME143=(IToken)Match(input,NAME,Follow._NAME_in_field659); if (state.failed) return retval;
				if (state.backtracking == 0) {
				NAME143_tree = (object)adaptor.Create(NAME143, "NAME143", retval);
				adaptor.AddChild(root_0, NAME143_tree);
				}
				DebugLocation(88, 36);
				char_literal144=(IToken)Match(input,36,Follow._36_in_field661); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal144_tree = (object)adaptor.Create(char_literal144, "char_literal144", retval);
				adaptor.AddChild(root_0, char_literal144_tree);
				}
				DebugLocation(88, 40);
				PushFollow(Follow._exp_in_field663);
				exp145=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp145.Tree, exp145, "exp145", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:88:46: exp
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(88, 46);
				PushFollow(Follow._exp_in_field667);
				exp146=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp146.Tree, exp146, "exp146", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("field", 22);
			LeaveRule("field", 22);
			LeaveRule_field();
		}
		DebugLocation(88, 48);
		} finally { DebugExitRule(GrammarFileName, "field"); }
		return retval;

	}
	// $ANTLR end "field"

	partial void EnterRule_fieldsep();
	partial void LeaveRule_fieldsep();
	// $ANTLR start "fieldsep"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:90:1: fieldsep : ( ',' | ';' );
	[GrammarRule("fieldsep")]
	private Antlr3AstNode fieldsep()
	{
		EnterRule_fieldsep();
		EnterRule("fieldsep", 23);
		var retval = new Antlr3AstNode("fieldsep");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		IToken set147 = default(IToken);

		object set147_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "fieldsep");
		DebugLocation(90, 20);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:90:10: ( ',' | ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(90, 10);

			set147=(IToken)input.LT(1);
			if (input.LA(1)==26||input.LA(1)==33)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set147, "set147", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("fieldsep", 23);
			LeaveRule("fieldsep", 23);
			LeaveRule_fieldsep();
		}
		DebugLocation(90, 20);
		} finally { DebugExitRule(GrammarFileName, "fieldsep"); }
		return retval;

	}
	// $ANTLR end "fieldsep"

	partial void EnterRule_binop();
	partial void LeaveRule_binop();
	// $ANTLR start "binop"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:92:1: binop : ( '+' | '-' | '*' | '/' | '^' | '%' | '..' | '<' | '<=' | '>' | '>=' | '==' | '~=' | 'and' | 'or' );
	[GrammarRule("binop")]
	private Antlr3AstNode binop()
	{
		EnterRule_binop();
		EnterRule("binop", 24);
		var retval = new Antlr3AstNode("binop");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		IToken set148 = default(IToken);

		object set148_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "binop");
		DebugLocation(92, 21);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:92:7: ( '+' | '-' | '*' | '/' | '^' | '%' | '..' | '<' | '<=' | '>' | '>=' | '==' | '~=' | 'and' | 'or' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(92, 7);

			set148=(IToken)input.LT(1);
			if (input.LA(1)==21||(input.LA(1)>=24 && input.LA(1)<=25)||input.LA(1)==27||input.LA(1)==29||input.LA(1)==31||(input.LA(1)>=34 && input.LA(1)<=35)||(input.LA(1)>=37 && input.LA(1)<=39)||(input.LA(1)>=42 && input.LA(1)<=43)||input.LA(1)==57||input.LA(1)==66)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set148, "set148", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("binop", 24);
			LeaveRule("binop", 24);
			LeaveRule_binop();
		}
		DebugLocation(94, 21);
		} finally { DebugExitRule(GrammarFileName, "binop"); }
		return retval;

	}
	// $ANTLR end "binop"

	partial void EnterRule_unop();
	partial void LeaveRule_unop();
	// $ANTLR start "unop"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:96:1: unop : ( '-' | 'not' | '#' );
	[GrammarRule("unop")]
	private Antlr3AstNode unop()
	{
		EnterRule_unop();
		EnterRule("unop", 25);
		var retval = new Antlr3AstNode("unop");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		IToken set149 = default(IToken);

		object set149_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "unop");
		DebugLocation(96, 24);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:96:6: ( '-' | 'not' | '#' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(96, 6);

			set149=(IToken)input.LT(1);
			if (input.LA(1)==20||input.LA(1)==27||input.LA(1)==56)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set149, "set149", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unop", 25);
			LeaveRule("unop", 25);
			LeaveRule_unop();
		}
		DebugLocation(96, 24);
		} finally { DebugExitRule(GrammarFileName, "unop"); }
		return retval;

	}
	// $ANTLR end "unop"

	partial void EnterRule_lua_number();
	partial void LeaveRule_lua_number();
	// $ANTLR start "lua_number"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:98:1: lua_number : ( INT | FLOAT | EXP | HEX );
	[GrammarRule("lua_number")]
	private Antlr3AstNode lua_number()
	{
		EnterRule_lua_number();
		EnterRule("lua_number", 26);
		var retval = new Antlr3AstNode("lua_number");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		IToken set150 = default(IToken);

		object set150_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "lua_number");
		DebugLocation(98, 36);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:98:12: ( INT | FLOAT | EXP | HEX )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(98, 12);

			set150=(IToken)input.LT(1);
			if (input.LA(1)==EXP||(input.LA(1)>=FLOAT && input.LA(1)<=HEX)||input.LA(1)==INT)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set150, "set150", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("lua_number", 26);
			LeaveRule("lua_number", 26);
			LeaveRule_lua_number();
		}
		DebugLocation(98, 36);
		} finally { DebugExitRule(GrammarFileName, "lua_number"); }
		return retval;

	}
	// $ANTLR end "lua_number"

	partial void EnterRule_lua_string();
	partial void LeaveRule_lua_string();
	// $ANTLR start "lua_string"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:100:1: lua_string : ( NORMALSTRING | CHARSTRING | LONGSTRING );
	[GrammarRule("lua_string")]
	private Antlr3AstNode lua_string()
	{
		EnterRule_lua_string();
		EnterRule("lua_string", 27);
		var retval = new Antlr3AstNode("lua_string");
		
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		IToken set151 = default(IToken);

		object set151_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "lua_string");
		DebugLocation(100, 51);
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:100:12: ( NORMALSTRING | CHARSTRING | LONGSTRING )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(100, 12);

			set151=(IToken)input.LT(1);
			if (input.LA(1)==CHARSTRING||input.LA(1)==LONGSTRING||input.LA(1)==NORMALSTRING)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set151, "set151", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("lua_string", 27);
			LeaveRule("lua_string", 27);
			LeaveRule_lua_string();
		}
		DebugLocation(100, 51);
		} finally { DebugExitRule(GrammarFileName, "lua_string"); }
		return retval;

	}
	// $ANTLR end "lua_string"

	partial void EnterRule_synpred5_Lua_fragment();
	partial void LeaveRule_synpred5_Lua_fragment();

	// $ANTLR start synpred5_Lua
	private void synpred5_Lua_fragment()
	{
		EnterRule_synpred5_Lua_fragment();
		EnterRule("synpred5_Lua_fragment", 32);
		var retval = new Antlr3AstNode("synpred5_Lua_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:31:9: ( varlist1 '=' explist1 )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:31:9: varlist1 '=' explist1
			{
			DebugLocation(31, 9);
			PushFollow(Follow._varlist1_in_synpred5_Lua99);
			varlist1();
			PopFollow();
			if (state.failed) return;
			DebugLocation(31, 18);
			Match(input,36,Follow._36_in_synpred5_Lua101); if (state.failed) return;
			DebugLocation(31, 22);
			PushFollow(Follow._explist1_in_synpred5_Lua103);
			explist1();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred5_Lua_fragment", 32);
			LeaveRule("synpred5_Lua_fragment", 32);
			LeaveRule_synpred5_Lua_fragment();
		}
	}
	// $ANTLR end synpred5_Lua

	partial void EnterRule_synpred6_Lua_fragment();
	partial void LeaveRule_synpred6_Lua_fragment();

	// $ANTLR start synpred6_Lua
	private void synpred6_Lua_fragment()
	{
		EnterRule_synpred6_Lua_fragment();
		EnterRule("synpred6_Lua_fragment", 33);
		var retval = new Antlr3AstNode("synpred6_Lua_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:32:5: ( functioncall )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:32:5: functioncall
			{
			DebugLocation(32, 5);
			PushFollow(Follow._functioncall_in_synpred6_Lua112);
			functioncall();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred6_Lua_fragment", 33);
			LeaveRule("synpred6_Lua_fragment", 33);
			LeaveRule_synpred6_Lua_fragment();
		}
	}
	// $ANTLR end synpred6_Lua

	partial void EnterRule_synpred14_Lua_fragment();
	partial void LeaveRule_synpred14_Lua_fragment();

	// $ANTLR start synpred14_Lua
	private void synpred14_Lua_fragment()
	{
		EnterRule_synpred14_Lua_fragment();
		EnterRule("synpred14_Lua_fragment", 41);
		var retval = new Antlr3AstNode("synpred14_Lua_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:37:5: ( 'for' NAME '=' exp ',' exp ( ',' exp )? 'do' block 'end' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:37:5: 'for' NAME '=' exp ',' exp ( ',' exp )? 'do' block 'end'
			{
			DebugLocation(37, 5);
			Match(input,50,Follow._50_in_synpred14_Lua201); if (state.failed) return;
			DebugLocation(37, 11);
			Match(input,NAME,Follow._NAME_in_synpred14_Lua203); if (state.failed) return;
			DebugLocation(37, 16);
			Match(input,36,Follow._36_in_synpred14_Lua205); if (state.failed) return;
			DebugLocation(37, 20);
			PushFollow(Follow._exp_in_synpred14_Lua207);
			exp();
			PopFollow();
			if (state.failed) return;
			DebugLocation(37, 24);
			Match(input,26,Follow._26_in_synpred14_Lua209); if (state.failed) return;
			DebugLocation(37, 28);
			PushFollow(Follow._exp_in_synpred14_Lua211);
			exp();
			PopFollow();
			if (state.failed) return;
			DebugLocation(37, 32);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:37:32: ( ',' exp )?
			int alt40=2;
			try { DebugEnterSubRule(40);
			try { DebugEnterDecision(40, false);
			int LA40_1 = input.LA(1);

			if ((LA40_1==26))
			{
				alt40 = 1;
			}
			} finally { DebugExitDecision(40); }
			switch (alt40)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:37:33: ',' exp
				{
				DebugLocation(37, 33);
				Match(input,26,Follow._26_in_synpred14_Lua214); if (state.failed) return;
				DebugLocation(37, 37);
				PushFollow(Follow._exp_in_synpred14_Lua216);
				exp();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(40); }

			DebugLocation(37, 43);
			Match(input,45,Follow._45_in_synpred14_Lua220); if (state.failed) return;
			DebugLocation(37, 48);
			PushFollow(Follow._block_in_synpred14_Lua222);
			block();
			PopFollow();
			if (state.failed) return;
			DebugLocation(37, 54);
			Match(input,48,Follow._48_in_synpred14_Lua224); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred14_Lua_fragment", 41);
			LeaveRule("synpred14_Lua_fragment", 41);
			LeaveRule_synpred14_Lua_fragment();
		}
	}
	// $ANTLR end synpred14_Lua

	partial void EnterRule_synpred15_Lua_fragment();
	partial void LeaveRule_synpred15_Lua_fragment();

	// $ANTLR start synpred15_Lua
	private void synpred15_Lua_fragment()
	{
		EnterRule_synpred15_Lua_fragment();
		EnterRule("synpred15_Lua_fragment", 42);
		var retval = new Antlr3AstNode("synpred15_Lua_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:38:5: ( 'for' namelist 'in' explist1 'do' block 'end' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:38:5: 'for' namelist 'in' explist1 'do' block 'end'
			{
			DebugLocation(38, 5);
			Match(input,50,Follow._50_in_synpred15_Lua233); if (state.failed) return;
			DebugLocation(38, 11);
			PushFollow(Follow._namelist_in_synpred15_Lua235);
			namelist();
			PopFollow();
			if (state.failed) return;
			DebugLocation(38, 20);
			Match(input,53,Follow._53_in_synpred15_Lua237); if (state.failed) return;
			DebugLocation(38, 25);
			PushFollow(Follow._explist1_in_synpred15_Lua239);
			explist1();
			PopFollow();
			if (state.failed) return;
			DebugLocation(38, 34);
			Match(input,45,Follow._45_in_synpred15_Lua241); if (state.failed) return;
			DebugLocation(38, 39);
			PushFollow(Follow._block_in_synpred15_Lua243);
			block();
			PopFollow();
			if (state.failed) return;
			DebugLocation(38, 45);
			Match(input,48,Follow._48_in_synpred15_Lua245); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred15_Lua_fragment", 42);
			LeaveRule("synpred15_Lua_fragment", 42);
			LeaveRule_synpred15_Lua_fragment();
		}
	}
	// $ANTLR end synpred15_Lua

	partial void EnterRule_synpred17_Lua_fragment();
	partial void LeaveRule_synpred17_Lua_fragment();

	// $ANTLR start synpred17_Lua
	private void synpred17_Lua_fragment()
	{
		EnterRule_synpred17_Lua_fragment();
		EnterRule("synpred17_Lua_fragment", 44);
		var retval = new Antlr3AstNode("synpred17_Lua_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:40:5: ( 'local' 'function' NAME funcbody )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:40:5: 'local' 'function' NAME funcbody
			{
			DebugLocation(40, 5);
			Match(input,54,Follow._54_in_synpred17_Lua267); if (state.failed) return;
			DebugLocation(40, 13);
			Match(input,51,Follow._51_in_synpred17_Lua269); if (state.failed) return;
			DebugLocation(40, 24);
			Match(input,NAME,Follow._NAME_in_synpred17_Lua271); if (state.failed) return;
			DebugLocation(40, 29);
			PushFollow(Follow._funcbody_in_synpred17_Lua273);
			funcbody();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred17_Lua_fragment", 44);
			LeaveRule("synpred17_Lua_fragment", 44);
			LeaveRule_synpred17_Lua_fragment();
		}
	}
	// $ANTLR end synpred17_Lua

	partial void EnterRule_synpred25_Lua_fragment();
	partial void LeaveRule_synpred25_Lua_fragment();

	// $ANTLR start synpred25_Lua
	private void synpred25_Lua_fragment()
	{
		EnterRule_synpred25_Lua_fragment();
		EnterRule("synpred25_Lua_fragment", 52);
		var retval = new Antlr3AstNode("synpred25_Lua_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:52:13: ( exp ',' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:52:13: exp ','
			{
			DebugLocation(52, 13);
			PushFollow(Follow._exp_in_synpred25_Lua372);
			exp();
			PopFollow();
			if (state.failed) return;
			DebugLocation(52, 17);
			Match(input,26,Follow._26_in_synpred25_Lua374); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred25_Lua_fragment", 52);
			LeaveRule("synpred25_Lua_fragment", 52);
			LeaveRule_synpred25_Lua_fragment();
		}
	}
	// $ANTLR end synpred25_Lua

	partial void EnterRule_synpred35_Lua_fragment();
	partial void LeaveRule_synpred35_Lua_fragment();

	// $ANTLR start synpred35_Lua
	private void synpred35_Lua_fragment()
	{
		EnterRule_synpred35_Lua_fragment();
		EnterRule("synpred35_Lua_fragment", 62);
		var retval = new Antlr3AstNode("synpred35_Lua_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:54:123: ( binop exp )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:54:123: binop exp
			{
			DebugLocation(54, 123);
			PushFollow(Follow._binop_in_synpred35_Lua430);
			binop();
			PopFollow();
			if (state.failed) return;
			DebugLocation(54, 129);
			PushFollow(Follow._exp_in_synpred35_Lua432);
			exp();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred35_Lua_fragment", 62);
			LeaveRule("synpred35_Lua_fragment", 62);
			LeaveRule_synpred35_Lua_fragment();
		}
	}
	// $ANTLR end synpred35_Lua

	partial void EnterRule_synpred37_Lua_fragment();
	partial void LeaveRule_synpred37_Lua_fragment();

	// $ANTLR start synpred37_Lua
	private void synpred37_Lua_fragment()
	{
		EnterRule_synpred37_Lua_fragment();
		EnterRule("synpred37_Lua_fragment", 64);
		var retval = new Antlr3AstNode("synpred37_Lua_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:56:37: ( varSuffix )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:56:37: varSuffix
			{
			DebugLocation(56, 37);
			PushFollow(Follow._varSuffix_in_synpred37_Lua456);
			varSuffix();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred37_Lua_fragment", 64);
			LeaveRule("synpred37_Lua_fragment", 64);
			LeaveRule_synpred37_Lua_fragment();
		}
	}
	// $ANTLR end synpred37_Lua

	partial void EnterRule_synpred38_Lua_fragment();
	partial void LeaveRule_synpred38_Lua_fragment();

	// $ANTLR start synpred38_Lua
	private void synpred38_Lua_fragment()
	{
		EnterRule_synpred38_Lua_fragment();
		EnterRule("synpred38_Lua_fragment", 65);
		var retval = new Antlr3AstNode("synpred38_Lua_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:58:21: ( nameAndArgs )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:58:21: nameAndArgs
			{
			DebugLocation(58, 21);
			PushFollow(Follow._nameAndArgs_in_synpred38_Lua466);
			nameAndArgs();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred38_Lua_fragment", 65);
			LeaveRule("synpred38_Lua_fragment", 65);
			LeaveRule_synpred38_Lua_fragment();
		}
	}
	// $ANTLR end synpred38_Lua

	partial void EnterRule_synpred39_Lua_fragment();
	partial void LeaveRule_synpred39_Lua_fragment();

	// $ANTLR start synpred39_Lua
	private void synpred39_Lua_fragment()
	{
		EnterRule_synpred39_Lua_fragment();
		EnterRule("synpred39_Lua_fragment", 66);
		var retval = new Antlr3AstNode("synpred39_Lua_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:60:24: ( nameAndArgs )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:60:24: nameAndArgs
			{
			DebugLocation(60, 24);
			PushFollow(Follow._nameAndArgs_in_synpred39_Lua476);
			nameAndArgs();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred39_Lua_fragment", 66);
			LeaveRule("synpred39_Lua_fragment", 66);
			LeaveRule_synpred39_Lua_fragment();
		}
	}
	// $ANTLR end synpred39_Lua

	partial void EnterRule_synpred40_Lua_fragment();
	partial void LeaveRule_synpred40_Lua_fragment();

	// $ANTLR start synpred40_Lua
	private void synpred40_Lua_fragment()
	{
		EnterRule_synpred40_Lua_fragment();
		EnterRule("synpred40_Lua_fragment", 67);
		var retval = new Antlr3AstNode("synpred40_Lua_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:70:11: ( var )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Lua\\Lua.g:70:11: var
			{
			DebugLocation(70, 11);
			PushFollow(Follow._var_in_synpred40_Lua487);
			var();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred40_Lua_fragment", 67);
			LeaveRule("synpred40_Lua_fragment", 67);
			LeaveRule_synpred40_Lua_fragment();
		}
	}
	// $ANTLR end synpred40_Lua
	#endregion Rules

	#region Synpreds
	private bool EvaluatePredicate(System.Action fragment)
	{
		bool success = false;
		state.backtracking++;
		try { DebugBeginBacktrack(state.backtracking);
		int start = input.Mark();
		try
		{
			fragment();
		}
		catch ( RecognitionException re )
		{
			System.Console.Error.WriteLine("impossible: "+re);
		}
		success = !state.failed;
		input.Rewind(start);
		} finally { DebugEndBacktrack(state.backtracking, success); }
		state.backtracking--;
		state.failed=false;
		return success;
	}
	#endregion Synpreds


	#region Follow sets
	private static class Follow
	{
		public static readonly BitSet _stat_in_chunk65 = new BitSet(new ulong[]{0x8C5C300200404002UL});
		public static readonly BitSet _33_in_chunk68 = new BitSet(new ulong[]{0x8C5C300000404002UL});
		public static readonly BitSet _laststat_in_chunk75 = new BitSet(new ulong[]{0x200000002UL});
		public static readonly BitSet _33_in_chunk78 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _chunk_in_block90 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _varlist1_in_stat99 = new BitSet(new ulong[]{0x1000000000UL});
		public static readonly BitSet _36_in_stat101 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _explist1_in_stat103 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _functioncall_in_stat112 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _45_in_stat121 = new BitSet(new ulong[]{0x8C5C300000404000UL});
		public static readonly BitSet _block_in_stat123 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_stat125 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _63_in_stat134 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _exp_in_stat136 = new BitSet(new ulong[]{0x200000000000UL});
		public static readonly BitSet _45_in_stat138 = new BitSet(new ulong[]{0x8C5C300000404000UL});
		public static readonly BitSet _block_in_stat140 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_stat142 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _58_in_stat151 = new BitSet(new ulong[]{0x8C5C300000404000UL});
		public static readonly BitSet _block_in_stat153 = new BitSet(new ulong[]{0x4000000000000000UL});
		public static readonly BitSet _62_in_stat155 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _exp_in_stat157 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _52_in_stat166 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _exp_in_stat168 = new BitSet(new ulong[]{0x1000000000000000UL});
		public static readonly BitSet _60_in_stat170 = new BitSet(new ulong[]{0x8C5C300000404000UL});
		public static readonly BitSet _block_in_stat172 = new BitSet(new ulong[]{0x1C00000000000UL});
		public static readonly BitSet _47_in_stat175 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _exp_in_stat177 = new BitSet(new ulong[]{0x1000000000000000UL});
		public static readonly BitSet _60_in_stat179 = new BitSet(new ulong[]{0x8C5C300000404000UL});
		public static readonly BitSet _block_in_stat181 = new BitSet(new ulong[]{0x1C00000000000UL});
		public static readonly BitSet _46_in_stat186 = new BitSet(new ulong[]{0x8C5C300000404000UL});
		public static readonly BitSet _block_in_stat188 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_stat192 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _50_in_stat201 = new BitSet(new ulong[]{0x4000UL});
		public static readonly BitSet _NAME_in_stat203 = new BitSet(new ulong[]{0x1000000000UL});
		public static readonly BitSet _36_in_stat205 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _exp_in_stat207 = new BitSet(new ulong[]{0x4000000UL});
		public static readonly BitSet _26_in_stat209 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _exp_in_stat211 = new BitSet(new ulong[]{0x200004000000UL});
		public static readonly BitSet _26_in_stat214 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _exp_in_stat216 = new BitSet(new ulong[]{0x200000000000UL});
		public static readonly BitSet _45_in_stat220 = new BitSet(new ulong[]{0x8C5C300000404000UL});
		public static readonly BitSet _block_in_stat222 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_stat224 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _50_in_stat233 = new BitSet(new ulong[]{0x4000UL});
		public static readonly BitSet _namelist_in_stat235 = new BitSet(new ulong[]{0x20000000000000UL});
		public static readonly BitSet _53_in_stat237 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _explist1_in_stat239 = new BitSet(new ulong[]{0x200000000000UL});
		public static readonly BitSet _45_in_stat241 = new BitSet(new ulong[]{0x8C5C300000404000UL});
		public static readonly BitSet _block_in_stat243 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_stat245 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _51_in_stat254 = new BitSet(new ulong[]{0x4000UL});
		public static readonly BitSet _funcname_in_stat256 = new BitSet(new ulong[]{0x400000UL});
		public static readonly BitSet _funcbody_in_stat258 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _54_in_stat267 = new BitSet(new ulong[]{0x8000000000000UL});
		public static readonly BitSet _51_in_stat269 = new BitSet(new ulong[]{0x4000UL});
		public static readonly BitSet _NAME_in_stat271 = new BitSet(new ulong[]{0x400000UL});
		public static readonly BitSet _funcbody_in_stat273 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _54_in_stat282 = new BitSet(new ulong[]{0x4000UL});
		public static readonly BitSet _namelist_in_stat284 = new BitSet(new ulong[]{0x1000000002UL});
		public static readonly BitSet _36_in_stat287 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _explist1_in_stat289 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _59_in_laststat300 = new BitSet(new ulong[]{0x218A000048516B52UL,0x1UL});
		public static readonly BitSet _explist1_in_laststat303 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _44_in_laststat309 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NAME_in_funcname317 = new BitSet(new ulong[]{0x110000002UL});
		public static readonly BitSet _28_in_funcname320 = new BitSet(new ulong[]{0x4000UL});
		public static readonly BitSet _NAME_in_funcname322 = new BitSet(new ulong[]{0x110000002UL});
		public static readonly BitSet _32_in_funcname327 = new BitSet(new ulong[]{0x4000UL});
		public static readonly BitSet _NAME_in_funcname329 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _var_in_varlist1340 = new BitSet(new ulong[]{0x4000002UL});
		public static readonly BitSet _26_in_varlist1343 = new BitSet(new ulong[]{0x404000UL});
		public static readonly BitSet _var_in_varlist1345 = new BitSet(new ulong[]{0x4000002UL});
		public static readonly BitSet _NAME_in_namelist356 = new BitSet(new ulong[]{0x4000002UL});
		public static readonly BitSet _26_in_namelist359 = new BitSet(new ulong[]{0x4000UL});
		public static readonly BitSet _NAME_in_namelist361 = new BitSet(new ulong[]{0x4000002UL});
		public static readonly BitSet _exp_in_explist1372 = new BitSet(new ulong[]{0x4000000UL});
		public static readonly BitSet _26_in_explist1374 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _exp_in_explist1378 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _55_in_exp388 = new BitSet(new ulong[]{0x2000CECAB200002UL,0x4UL});
		public static readonly BitSet _49_in_exp392 = new BitSet(new ulong[]{0x2000CECAB200002UL,0x4UL});
		public static readonly BitSet _61_in_exp396 = new BitSet(new ulong[]{0x2000CECAB200002UL,0x4UL});
		public static readonly BitSet _lua_number_in_exp400 = new BitSet(new ulong[]{0x2000CECAB200002UL,0x4UL});
		public static readonly BitSet _lua_string_in_exp404 = new BitSet(new ulong[]{0x2000CECAB200002UL,0x4UL});
		public static readonly BitSet _30_in_exp408 = new BitSet(new ulong[]{0x2000CECAB200002UL,0x4UL});
		public static readonly BitSet _function_in_exp412 = new BitSet(new ulong[]{0x2000CECAB200002UL,0x4UL});
		public static readonly BitSet _prefixexp_in_exp416 = new BitSet(new ulong[]{0x2000CECAB200002UL,0x4UL});
		public static readonly BitSet _tableconstructor_in_exp420 = new BitSet(new ulong[]{0x2000CECAB200002UL,0x4UL});
		public static readonly BitSet _unop_in_exp424 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _exp_in_exp426 = new BitSet(new ulong[]{0x2000CECAB200002UL,0x4UL});
		public static readonly BitSet _binop_in_exp430 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _exp_in_exp432 = new BitSet(new ulong[]{0x2000CECAB200002UL,0x4UL});
		public static readonly BitSet _NAME_in_var443 = new BitSet(new ulong[]{0x10110412012UL,0x1UL});
		public static readonly BitSet _22_in_var447 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _exp_in_var449 = new BitSet(new ulong[]{0x800000UL});
		public static readonly BitSet _23_in_var451 = new BitSet(new ulong[]{0x10110412010UL,0x1UL});
		public static readonly BitSet _varSuffix_in_var453 = new BitSet(new ulong[]{0x10110412012UL,0x1UL});
		public static readonly BitSet _varSuffix_in_var456 = new BitSet(new ulong[]{0x10110412012UL,0x1UL});
		public static readonly BitSet _varOrExp_in_prefixexp464 = new BitSet(new ulong[]{0x100412012UL,0x1UL});
		public static readonly BitSet _nameAndArgs_in_prefixexp466 = new BitSet(new ulong[]{0x100412012UL,0x1UL});
		public static readonly BitSet _varOrExp_in_functioncall474 = new BitSet(new ulong[]{0x100412010UL,0x1UL});
		public static readonly BitSet _nameAndArgs_in_functioncall476 = new BitSet(new ulong[]{0x100412012UL,0x1UL});
		public static readonly BitSet _var_in_varOrExp487 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _22_in_varOrExp491 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _exp_in_varOrExp493 = new BitSet(new ulong[]{0x800000UL});
		public static readonly BitSet _23_in_varOrExp495 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _32_in_nameAndArgs503 = new BitSet(new ulong[]{0x4000UL});
		public static readonly BitSet _NAME_in_nameAndArgs505 = new BitSet(new ulong[]{0x412010UL,0x1UL});
		public static readonly BitSet _args_in_nameAndArgs509 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _nameAndArgs_in_varSuffix516 = new BitSet(new ulong[]{0x10110412010UL,0x1UL});
		public static readonly BitSet _40_in_varSuffix520 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _exp_in_varSuffix522 = new BitSet(new ulong[]{0x20000000000UL});
		public static readonly BitSet _41_in_varSuffix524 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _28_in_varSuffix528 = new BitSet(new ulong[]{0x4000UL});
		public static readonly BitSet _NAME_in_varSuffix530 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _22_in_args540 = new BitSet(new ulong[]{0x218A000048D16B50UL,0x1UL});
		public static readonly BitSet _explist1_in_args543 = new BitSet(new ulong[]{0x800000UL});
		public static readonly BitSet _23_in_args547 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _tableconstructor_in_args551 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _lua_string_in_args555 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _51_in_function564 = new BitSet(new ulong[]{0x400000UL});
		public static readonly BitSet _funcbody_in_function566 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _22_in_funcbody574 = new BitSet(new ulong[]{0x40804000UL});
		public static readonly BitSet _parlist1_in_funcbody577 = new BitSet(new ulong[]{0x800000UL});
		public static readonly BitSet _23_in_funcbody581 = new BitSet(new ulong[]{0x8C5C300000404000UL});
		public static readonly BitSet _block_in_funcbody583 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_funcbody585 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _namelist_in_parlist1593 = new BitSet(new ulong[]{0x4000002UL});
		public static readonly BitSet _26_in_parlist1596 = new BitSet(new ulong[]{0x40000000UL});
		public static readonly BitSet _30_in_parlist1598 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _30_in_parlist1604 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _64_in_tableconstructor612 = new BitSet(new ulong[]{0x218A010048516B50UL,0x3UL});
		public static readonly BitSet _fieldlist_in_tableconstructor615 = new BitSet(new ulong[]{0x0UL,0x2UL});
		public static readonly BitSet _65_in_tableconstructor619 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _field_in_fieldlist627 = new BitSet(new ulong[]{0x204000002UL});
		public static readonly BitSet _fieldsep_in_fieldlist630 = new BitSet(new ulong[]{0x218A010048516B50UL,0x1UL});
		public static readonly BitSet _field_in_fieldlist632 = new BitSet(new ulong[]{0x204000002UL});
		public static readonly BitSet _fieldsep_in_fieldlist637 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _40_in_field647 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _exp_in_field649 = new BitSet(new ulong[]{0x20000000000UL});
		public static readonly BitSet _41_in_field651 = new BitSet(new ulong[]{0x1000000000UL});
		public static readonly BitSet _36_in_field653 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _exp_in_field655 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NAME_in_field659 = new BitSet(new ulong[]{0x1000000000UL});
		public static readonly BitSet _36_in_field661 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _exp_in_field663 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _exp_in_field667 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _varlist1_in_synpred5_Lua99 = new BitSet(new ulong[]{0x1000000000UL});
		public static readonly BitSet _36_in_synpred5_Lua101 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _explist1_in_synpred5_Lua103 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _functioncall_in_synpred6_Lua112 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _50_in_synpred14_Lua201 = new BitSet(new ulong[]{0x4000UL});
		public static readonly BitSet _NAME_in_synpred14_Lua203 = new BitSet(new ulong[]{0x1000000000UL});
		public static readonly BitSet _36_in_synpred14_Lua205 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _exp_in_synpred14_Lua207 = new BitSet(new ulong[]{0x4000000UL});
		public static readonly BitSet _26_in_synpred14_Lua209 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _exp_in_synpred14_Lua211 = new BitSet(new ulong[]{0x200004000000UL});
		public static readonly BitSet _26_in_synpred14_Lua214 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _exp_in_synpred14_Lua216 = new BitSet(new ulong[]{0x200000000000UL});
		public static readonly BitSet _45_in_synpred14_Lua220 = new BitSet(new ulong[]{0x8C5C300000404000UL});
		public static readonly BitSet _block_in_synpred14_Lua222 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_synpred14_Lua224 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _50_in_synpred15_Lua233 = new BitSet(new ulong[]{0x4000UL});
		public static readonly BitSet _namelist_in_synpred15_Lua235 = new BitSet(new ulong[]{0x20000000000000UL});
		public static readonly BitSet _53_in_synpred15_Lua237 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _explist1_in_synpred15_Lua239 = new BitSet(new ulong[]{0x200000000000UL});
		public static readonly BitSet _45_in_synpred15_Lua241 = new BitSet(new ulong[]{0x8C5C300000404000UL});
		public static readonly BitSet _block_in_synpred15_Lua243 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_synpred15_Lua245 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _54_in_synpred17_Lua267 = new BitSet(new ulong[]{0x8000000000000UL});
		public static readonly BitSet _51_in_synpred17_Lua269 = new BitSet(new ulong[]{0x4000UL});
		public static readonly BitSet _NAME_in_synpred17_Lua271 = new BitSet(new ulong[]{0x400000UL});
		public static readonly BitSet _funcbody_in_synpred17_Lua273 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _exp_in_synpred25_Lua372 = new BitSet(new ulong[]{0x4000000UL});
		public static readonly BitSet _26_in_synpred25_Lua374 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _binop_in_synpred35_Lua430 = new BitSet(new ulong[]{0x218A000048516B50UL,0x1UL});
		public static readonly BitSet _exp_in_synpred35_Lua432 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _varSuffix_in_synpred37_Lua456 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _nameAndArgs_in_synpred38_Lua466 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _nameAndArgs_in_synpred39_Lua476 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _var_in_synpred40_Lua487 = new BitSet(new ulong[]{0x2UL});
	}
	#endregion Follow sets
}

} // namespace  Code2Xml.Languages.ANTLRv3.Processors.Lua 
