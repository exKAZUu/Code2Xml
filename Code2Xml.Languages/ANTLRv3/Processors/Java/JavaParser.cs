using Code2Xml.Languages.ANTLRv3.Core;
using System;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 3.5.0.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// $ANTLR 3.5.0.2 C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g 2013-12-02 17:04:27

// The variable 'variable' is assigned but its value is never used.
#pragma warning disable 219
// Unreachable code detected.
#pragma warning disable 162
// Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// CLS compliance checking will not be performed on 'type' because it is not visible from outside this assembly.
#pragma warning disable 3019


using System.Collections.Generic;
using Antlr.Runtime;
using Antlr.Runtime.Misc;


using Antlr.Runtime.Tree;
using RewriteRuleITokenStream = Antlr.Runtime.Tree.RewriteRuleTokenStream;

namespace  Code2Xml.Languages.ANTLRv3.Processors.Java 
{
/** A Java 1.5 grammar for ANTLR v3 derived from the spec
 *
 *  This is a very close representation of the spec; the changes
 *  are comestic (remove left recursion) and also fixes (the spec
 *  isn't exactly perfect).  I have run this on the 1.4.2 source
 *  and some nasty looking enums from 1.5, but have not really
 *  tested for 1.5 compatibility.
 *
 *  I built this with: java -Xmx100M org.antlr.Tool java.g
 *  and got two errors that are ok (for now):
 *  java.g:691:9: Decision can match input such as
 *    "'0'..'9'{'E', 'e'}{'+', '-'}'0'..'9'{'D', 'F', 'd', 'f'}"
 *    using multiple alternatives: 3, 4
 *  As a result, alternative(s) 4 were disabled for that input
 *  java.g:734:35: Decision can match input such as "{'$', 'A'..'Z',
 *    '_', 'a'..'z', '\u00C0'..'\u00D6', '\u00D8'..'\u00F6',
 *    '\u00F8'..'\u1FFF', '\u3040'..'\u318F', '\u3300'..'\u337F',
 *    '\u3400'..'\u3D2D', '\u4E00'..'\u9FFF', '\uF900'..'\uFAFF'}"
 *    using multiple alternatives: 1, 2
 *  As a result, alternative(s) 2 were disabled for that input
 *
 *  You can turn enum on/off as a keyword :)
 *
 *  Version 1.0 -- initial release July 5, 2006 (requires 3.0b2 or higher)
 *
 *  Primary author: Terence Parr, July 2006
 *
 *  Version 1.0.1 -- corrections by Koen Vanderkimpen & Marko van Dooren,
 *      October 25, 2006;
 *      fixed normalInterfaceDeclaration: now uses typeParameters instead
 *          of typeParameter (according to JLS, 3rd edition)
 *      fixed castExpression: no longer allows expression next to type
 *          (according to semantics in JLS, in contrast with syntax in JLS)
 *
 *  Version 1.0.2 -- Terence Parr, Nov 27, 2006
 *      java spec I built this from had some bizarre for-loop control.
 *          Looked weird and so I looked elsewhere...Yep, it's messed up.
 *          simplified.
 *
 *  Version 1.0.3 -- Chris Hogue, Feb 26, 2007
 *      Factored out an annotationName rule and used it in the annotation rule.
 *          Not sure why, but typeName wasn't recognizing references to inner
 *          annotations (e.g. @InterfaceName.InnerAnnotation())
 *      Factored out the elementValue section of an annotation reference.  Created
 *          elementValuePair and elementValuePairs rules, then used them in the
 *          annotation rule.  Allows it to recognize annotation references with
 *          multiple, comma separated attributes.
 *      Updated elementValueArrayInitializer so that it allows multiple elements.
 *          (It was only allowing 0 or 1 element).
 *      Updated localVariableDeclaration to allow annotations.  Interestingly the JLS
 *          doesn't appear to indicate this is legal, but it does work as of at least
 *          JDK 1.5.0_06.
 *      Moved the Identifier portion of annotationTypeElementRest to annotationMethodRest.
 *          Because annotationConstantRest already references variableDeclarator which
 *          has the Identifier portion in it, the parser would fail on constants in
 *          annotation definitions because it expected two identifiers.
 *      Added optional trailing ';' to the alternatives in annotationTypeElementRest.
 *          Wouldn't handle an inner interface that has a trailing ';'.
 *      Swapped the expression and type rule reference order in castExpression to
 *          make it check for genericized casts first.  It was failing to recognize a
 *          statement like  "Class<Byte> TYPE = (Class<Byte>)...;" because it was seeing
 *          'Class<Byte' in the cast expression as a less than expression, then failing
 *          on the '>'.
 *      Changed createdName to use typeArguments instead of nonWildcardTypeArguments.
 *         
 *      Changed the 'this' alternative in primary to allow 'identifierSuffix' rather than
 *          just 'arguments'.  The case it couldn't handle was a call to an explicit
 *          generic method invocation (e.g. this.<E>doSomething()).  Using identifierSuffix
 *          may be overly aggressive--perhaps should create a more constrained thisSuffix rule?
 *
 *  Version 1.0.4 -- Hiroaki Nakamura, May 3, 2007
 *
 *  Fixed formalParameterDecls, localVariableDeclaration, forInit,
 *  and forVarControl to use variableModifier* not 'final'? (annotation)?
 *
 *  Version 1.0.5 -- Terence, June 21, 2007
 *  --a[i].foo didn't work. Fixed unaryExpression
 *
 *  Version 1.0.6 -- John Ridgway, March 17, 2008
 *      Made "assert" a switchable keyword like "enum".
 *      Fixed compilationUnit to disallow "annotation importDeclaration ...".
 *      Changed "Identifier ('.' Identifier)*" to "qualifiedName" in more
 *          places.
 *      Changed modifier* and/or variableModifier* to classOrInterfaceModifiers,
 *          modifiers or variableModifiers, as appropriate.
 *      Renamed "bound" to "typeBound" to better match language in the JLS.
 *      Added "memberDeclaration" which rewrites to methodDeclaration or
 *      fieldDeclaration and pulled type into memberDeclaration.  So we parse
 *          type and then move on to decide whether we're dealing with a field
 *          or a method.
 *      Modified "constructorDeclaration" to use "constructorBody" instead of
 *          "methodBody".  constructorBody starts with explicitConstructorInvocation,
 *          then goes on to blockStatement*.  Pulling explicitConstructorInvocation
 *          out of expressions allowed me to simplify "primary".
 *      Changed variableDeclarator to simplify it.
 *      Changed type to use classOrInterfaceType, thus simplifying it; of course
 *          I then had to add classOrInterfaceType, but it is used in several
 *          places.
 *      Fixed annotations, old version allowed "@X(y,z)", which is illegal.
 *      Added optional comma to end of "elementValueArrayInitializer"; as per JLS.
 *      Changed annotationTypeElementRest to use normalClassDeclaration and
 *          normalInterfaceDeclaration rather than classDeclaration and
 *          interfaceDeclaration, thus getting rid of a couple of grammar ambiguities.
 *      Split localVariableDeclaration into localVariableDeclarationStatement
 *          (includes the terminating semi-colon) and localVariableDeclaration.
 *          This allowed me to use localVariableDeclaration in "forInit" clauses,
 *           simplifying them.
 *      Changed switchBlockStatementGroup to use multiple labels.  This adds an
 *          ambiguity, but if one uses appropriately greedy parsing it yields the
 *           parse that is closest to the meaning of the switch statement.
 *      Renamed "forVarControl" to "enhancedForControl" -- JLS language.
 *      Added semantic predicates to test for shift operations rather than other
 *          things.  Thus, for instance, the string "< <" will never be treated
 *          as a left-shift operator.
 *      In "creator" we rule out "nonWildcardTypeArguments" on arrayCreation,
 *          which are illegal.
 *      Moved "nonWildcardTypeArguments into innerCreator.
 *      Removed 'super' superSuffix from explicitGenericInvocation, since that
 *          is only used in explicitConstructorInvocation at the beginning of a
 *           constructorBody.  (This is part of the simplification of expressions
 *           mentioned earlier.)
 *      Simplified primary (got rid of those things that are only used in
 *          explicitConstructorInvocation).
 *      Lexer -- removed "Exponent?" from FloatingPointLiteral choice 4, since it
 *          led to an ambiguity.
 *
 *      This grammar successfully parses every .java file in the JDK 1.5 source
 *          tree (excluding those whose file names include '-', which are not
 *          valid Java compilation units).
 *
 *  Known remaining problems:
 *      "Letter" and "JavaIDDigit" are wrong.  The actual specification of
 *      "Letter" should be "a character for which the method
 *      Character.isJavaIdentifierStart(int) returns true."  A "Java
 *      letter-or-digit is a character for which the method
 *      Character.isJavaIdentifierPart(int) returns true."
 */
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "3.5.0.2")]
[System.CLSCompliant(false)]
public partial class JavaParser : Antlr.Runtime.Parser, ICustomizedAntlr3Parser
{
	internal static readonly string[] tokenNames = new string[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "ABSTRACT", "AMP", "AMPAMP", "AMPEQ", "ASSERT", "BANG", "BANGEQ", "BAR", "BARBAR", "BAREQ", "BOOLEAN", "BREAK", "BYTE", "BinaryDigit", "BinaryDigitOrUnderscore", "BinaryDigits", "BinaryPrefix", "CARET", "CARETEQ", "CASE", "CATCH", "CHAR", "CHARLITERAL", "CLASS", "COLON", "COMMA", "COMMENT", "CONST", "CONTINUE", "DEFAULT", "DO", "DOT", "DOUBLE", "DOUBLELITERAL", "Digit", "DigitOrUnderscore", "Digits", "DoubleSuffix", "ELLIPSIS", "ELSE", "ENUM", "EQ", "EQEQ", "EXTENDS", "EscapeSequence", "Exponent", "FALSE", "FINAL", "FINALLY", "FLOAT", "FLOATLITERAL", "FOR", "FloatSuffix", "GOTO", "GT", "HexDigit", "HexDigitOrUnderscore", "HexDigits", "HexPrefix", "IDENTIFIER", "IF", "IMPLEMENTS", "IMPORT", "INSTANCEOF", "INT", "INTERFACE", "INTLITERAL", "IdentifierPart", "IdentifierStart", "IntegerNumber", "LBRACE", "LBRACKET", "LINE_COMMENT", "LONG", "LONGLITERAL", "LPAREN", "LT", "LongSuffix", "MONKEYS_AT", "NATIVE", "NEW", "NULL", "NonIntegerNumber", "NonZeroDigit", "OctalDigit", "OctalDigitOrUnderscore", "OctalDigits", "OctalPrefix", "PACKAGE", "PERCENT", "PERCENTEQ", "PLUS", "PLUSEQ", "PLUSPLUS", "PRIVATE", "PROTECTED", "PUBLIC", "QUES", "RBRACE", "RBRACKET", "RETURN", "RPAREN", "SEMI", "SHORT", "SLASH", "SLASHEQ", "STAR", "STAREQ", "STATIC", "STRICTFP", "STRINGLITERAL", "SUB", "SUBEQ", "SUBSUB", "SUPER", "SWITCH", "SYNCHRONIZED", "SurrogateIdentifer", "THIS", "THROW", "THROWS", "TILDE", "TRANSIENT", "TRUE", "TRY", "Underscores", "VOID", "VOLATILE", "WHILE", "WS"
	};
	public const int EOF=-1;
	public const int ABSTRACT=4;
	public const int AMP=5;
	public const int AMPAMP=6;
	public const int AMPEQ=7;
	public const int ASSERT=8;
	public const int BANG=9;
	public const int BANGEQ=10;
	public const int BAR=11;
	public const int BARBAR=12;
	public const int BAREQ=13;
	public const int BOOLEAN=14;
	public const int BREAK=15;
	public const int BYTE=16;
	public const int BinaryDigit=17;
	public const int BinaryDigitOrUnderscore=18;
	public const int BinaryDigits=19;
	public const int BinaryPrefix=20;
	public const int CARET=21;
	public const int CARETEQ=22;
	public const int CASE=23;
	public const int CATCH=24;
	public const int CHAR=25;
	public const int CHARLITERAL=26;
	public const int CLASS=27;
	public const int COLON=28;
	public const int COMMA=29;
	public const int COMMENT=30;
	public const int CONST=31;
	public const int CONTINUE=32;
	public const int DEFAULT=33;
	public const int DO=34;
	public const int DOT=35;
	public const int DOUBLE=36;
	public const int DOUBLELITERAL=37;
	public const int Digit=38;
	public const int DigitOrUnderscore=39;
	public const int Digits=40;
	public const int DoubleSuffix=41;
	public const int ELLIPSIS=42;
	public const int ELSE=43;
	public const int ENUM=44;
	public const int EQ=45;
	public const int EQEQ=46;
	public const int EXTENDS=47;
	public const int EscapeSequence=48;
	public const int Exponent=49;
	public const int FALSE=50;
	public const int FINAL=51;
	public const int FINALLY=52;
	public const int FLOAT=53;
	public const int FLOATLITERAL=54;
	public const int FOR=55;
	public const int FloatSuffix=56;
	public const int GOTO=57;
	public const int GT=58;
	public const int HexDigit=59;
	public const int HexDigitOrUnderscore=60;
	public const int HexDigits=61;
	public const int HexPrefix=62;
	public const int IDENTIFIER=63;
	public const int IF=64;
	public const int IMPLEMENTS=65;
	public const int IMPORT=66;
	public const int INSTANCEOF=67;
	public const int INT=68;
	public const int INTERFACE=69;
	public const int INTLITERAL=70;
	public const int IdentifierPart=71;
	public const int IdentifierStart=72;
	public const int IntegerNumber=73;
	public const int LBRACE=74;
	public const int LBRACKET=75;
	public const int LINE_COMMENT=76;
	public const int LONG=77;
	public const int LONGLITERAL=78;
	public const int LPAREN=79;
	public const int LT=80;
	public const int LongSuffix=81;
	public const int MONKEYS_AT=82;
	public const int NATIVE=83;
	public const int NEW=84;
	public const int NULL=85;
	public const int NonIntegerNumber=86;
	public const int NonZeroDigit=87;
	public const int OctalDigit=88;
	public const int OctalDigitOrUnderscore=89;
	public const int OctalDigits=90;
	public const int OctalPrefix=91;
	public const int PACKAGE=92;
	public const int PERCENT=93;
	public const int PERCENTEQ=94;
	public const int PLUS=95;
	public const int PLUSEQ=96;
	public const int PLUSPLUS=97;
	public const int PRIVATE=98;
	public const int PROTECTED=99;
	public const int PUBLIC=100;
	public const int QUES=101;
	public const int RBRACE=102;
	public const int RBRACKET=103;
	public const int RETURN=104;
	public const int RPAREN=105;
	public const int SEMI=106;
	public const int SHORT=107;
	public const int SLASH=108;
	public const int SLASHEQ=109;
	public const int STAR=110;
	public const int STAREQ=111;
	public const int STATIC=112;
	public const int STRICTFP=113;
	public const int STRINGLITERAL=114;
	public const int SUB=115;
	public const int SUBEQ=116;
	public const int SUBSUB=117;
	public const int SUPER=118;
	public const int SWITCH=119;
	public const int SYNCHRONIZED=120;
	public const int SurrogateIdentifer=121;
	public const int THIS=122;
	public const int THROW=123;
	public const int THROWS=124;
	public const int TILDE=125;
	public const int TRANSIENT=126;
	public const int TRUE=127;
	public const int TRY=128;
	public const int Underscores=129;
	public const int VOID=130;
	public const int VOLATILE=131;
	public const int WHILE=132;
	public const int WS=133;

	public JavaParser(ITokenStream input)
		: this(input, new RecognizerSharedState())
	{
	}
	public JavaParser(ITokenStream input, RecognizerSharedState state)
		: base(input, state)
	{
		this.state.ruleMemo = new System.Collections.Generic.Dictionary<int, int>[414+1];


		Antlr3AstBuilder treeAdaptor = default(Antlr3AstBuilder);
		CreateTreeAdaptor(ref treeAdaptor);
		TreeAdaptor = treeAdaptor ?? new Antlr3AstBuilder();
		OnCreated();
	}
	// Implement this function in your helper file to use a custom tree adaptor
	partial void CreateTreeAdaptor(ref Antlr3AstBuilder adaptor);

	private Antlr3AstBuilder adaptor;

	public Antlr3AstBuilder TreeAdaptor
	{
		get
		{
			return adaptor;
		}

		set
		{
			this.adaptor = value;
		}
	}

	public override string[] TokenNames { get { return JavaParser.tokenNames; } }
	public override string GrammarFileName { get { return "C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g"; } }


	partial void OnCreated();
	partial void EnterRule(string ruleName, int ruleIndex);
	partial void LeaveRule(string ruleName, int ruleIndex);

	#region Rules
	partial void EnterRule_compilationUnit();
	partial void LeaveRule_compilationUnit();
	// $ANTLR start "compilationUnit"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:301:1: public compilationUnit : ( ( annotations )? packageDeclaration )? ( importDeclaration )* ( typeDeclaration )* ;
	[GrammarRule("compilationUnit")]
	public Antlr3AstNode compilationUnit()
	{
		EnterRule_compilationUnit();
		EnterRule("compilationUnit", 1);
		var retval = new Antlr3AstNode("compilationUnit");
		
		retval.Start = (IToken)input.LT(1);
		int compilationUnit_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode annotations1 = default(Antlr3AstNode);
		Antlr3AstNode packageDeclaration2 = default(Antlr3AstNode);
		Antlr3AstNode importDeclaration3 = default(Antlr3AstNode);
		Antlr3AstNode typeDeclaration4 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "compilationUnit");
		DebugLocation(301, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 1)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:302:5: ( ( ( annotations )? packageDeclaration )? ( importDeclaration )* ( typeDeclaration )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:302:9: ( ( annotations )? packageDeclaration )? ( importDeclaration )* ( typeDeclaration )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(302, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:302:9: ( ( annotations )? packageDeclaration )?
			int alt2=2;
			try { DebugEnterSubRule(2);
			try { DebugEnterDecision(2, false);
			int LA2_1 = input.LA(1);

			if ((LA2_1==MONKEYS_AT))
			{
				int LA2_2 = input.LA(2);

				if ((EvaluatePredicate(synpred2_Java_fragment)))
				{
					alt2 = 1;
				}
			}
			else if ((LA2_1==PACKAGE))
			{
				alt2 = 1;
			}
			} finally { DebugExitDecision(2); }
			switch (alt2)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:302:13: ( annotations )? packageDeclaration
				{
				DebugLocation(302, 13);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:302:13: ( annotations )?
				int alt1=2;
				try { DebugEnterSubRule(1);
				try { DebugEnterDecision(1, false);
				int LA1_1 = input.LA(1);

				if ((LA1_1==MONKEYS_AT))
				{
					alt1 = 1;
				}
				} finally { DebugExitDecision(1); }
				switch (alt1)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:302:14: annotations
					{
					DebugLocation(302, 14);
					PushFollow(Follow._annotations_in_compilationUnit107);
					annotations1=annotations();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, annotations1.Tree, annotations1, "annotations1", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(1); }

				DebugLocation(304, 13);
				PushFollow(Follow._packageDeclaration_in_compilationUnit136);
				packageDeclaration2=packageDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, packageDeclaration2.Tree, packageDeclaration2, "packageDeclaration2", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(2); }

			DebugLocation(306, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:306:9: ( importDeclaration )*
			try { DebugEnterSubRule(3);
			while (true)
			{
				int alt3=2;
				try { DebugEnterDecision(3, false);
				int LA3_1 = input.LA(1);

				if ((LA3_1==IMPORT))
				{
					alt3 = 1;
				}


				} finally { DebugExitDecision(3); }
				switch ( alt3 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:306:10: importDeclaration
					{
					DebugLocation(306, 10);
					PushFollow(Follow._importDeclaration_in_compilationUnit158);
					importDeclaration3=importDeclaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, importDeclaration3.Tree, importDeclaration3, "importDeclaration3", retval);

					}
					break;

				default:
					goto loop3;
				}
			}

			loop3:
				;

			} finally { DebugExitSubRule(3); }

			DebugLocation(308, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:308:9: ( typeDeclaration )*
			try { DebugEnterSubRule(4);
			while (true)
			{
				int alt4=2;
				try { DebugEnterDecision(4, false);
				int LA4_1 = input.LA(1);

				if ((LA4_1==ABSTRACT||LA4_1==BOOLEAN||LA4_1==BYTE||LA4_1==CHAR||LA4_1==CLASS||LA4_1==DOUBLE||LA4_1==ENUM||LA4_1==FINAL||LA4_1==FLOAT||LA4_1==IDENTIFIER||(LA4_1>=INT && LA4_1<=INTERFACE)||LA4_1==LONG||LA4_1==LT||(LA4_1>=MONKEYS_AT && LA4_1<=NATIVE)||(LA4_1>=PRIVATE && LA4_1<=PUBLIC)||(LA4_1>=SEMI && LA4_1<=SHORT)||(LA4_1>=STATIC && LA4_1<=STRICTFP)||LA4_1==SYNCHRONIZED||LA4_1==TRANSIENT||(LA4_1>=VOID && LA4_1<=VOLATILE)))
				{
					alt4 = 1;
				}


				} finally { DebugExitDecision(4); }
				switch ( alt4 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:308:10: typeDeclaration
					{
					DebugLocation(308, 10);
					PushFollow(Follow._typeDeclaration_in_compilationUnit180);
					typeDeclaration4=typeDeclaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, typeDeclaration4.Tree, typeDeclaration4, "typeDeclaration4", retval);

					}
					break;

				default:
					goto loop4;
				}
			}

			loop4:
				;

			} finally { DebugExitSubRule(4); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("compilationUnit", 1);
			LeaveRule("compilationUnit", 1);
			LeaveRule_compilationUnit();
			if (state.backtracking > 0) { Memoize(input, 1, compilationUnit_StartIndex); }

		}
		DebugLocation(310, 4);
		} finally { DebugExitRule(GrammarFileName, "compilationUnit"); }
		return retval;

	}
	// $ANTLR end "compilationUnit"

	partial void EnterRule_packageDeclaration();
	partial void LeaveRule_packageDeclaration();
	// $ANTLR start "packageDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:312:1: packageDeclaration : 'package' qualifiedName ';' ;
	[GrammarRule("packageDeclaration")]
	private Antlr3AstNode packageDeclaration()
	{
		EnterRule_packageDeclaration();
		EnterRule("packageDeclaration", 2);
		var retval = new Antlr3AstNode("packageDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int packageDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal5 = default(IToken);
		IToken char_literal7 = default(IToken);
		Antlr3AstNode qualifiedName6 = default(Antlr3AstNode);

		object string_literal5_tree = default(object);
		object char_literal7_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "packageDeclaration");
		DebugLocation(312, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 2)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:313:5: ( 'package' qualifiedName ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:313:9: 'package' qualifiedName ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(313, 9);
			string_literal5=(IToken)Match(input,PACKAGE,Follow._PACKAGE_in_packageDeclaration211); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal5_tree = (object)adaptor.Create(string_literal5, "string_literal5", retval);
			adaptor.AddChild(root_0, string_literal5_tree);
			}
			DebugLocation(313, 19);
			PushFollow(Follow._qualifiedName_in_packageDeclaration213);
			qualifiedName6=qualifiedName();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedName6.Tree, qualifiedName6, "qualifiedName6", retval);
			DebugLocation(314, 9);
			char_literal7=(IToken)Match(input,SEMI,Follow._SEMI_in_packageDeclaration223); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal7_tree = (object)adaptor.Create(char_literal7, "char_literal7", retval);
			adaptor.AddChild(root_0, char_literal7_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("packageDeclaration", 2);
			LeaveRule("packageDeclaration", 2);
			LeaveRule_packageDeclaration();
			if (state.backtracking > 0) { Memoize(input, 2, packageDeclaration_StartIndex); }

		}
		DebugLocation(315, 4);
		} finally { DebugExitRule(GrammarFileName, "packageDeclaration"); }
		return retval;

	}
	// $ANTLR end "packageDeclaration"

	partial void EnterRule_importDeclaration();
	partial void LeaveRule_importDeclaration();
	// $ANTLR start "importDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:317:1: importDeclaration : ( 'import' ( 'static' )? IDENTIFIER '.' '*' ';' | 'import' ( 'static' )? IDENTIFIER ( '.' IDENTIFIER )+ ( '.' '*' )? ';' );
	[GrammarRule("importDeclaration")]
	private Antlr3AstNode importDeclaration()
	{
		EnterRule_importDeclaration();
		EnterRule("importDeclaration", 3);
		var retval = new Antlr3AstNode("importDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int importDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal8 = default(IToken);
		IToken string_literal9 = default(IToken);
		IToken IDENTIFIER10 = default(IToken);
		IToken char_literal11 = default(IToken);
		IToken char_literal12 = default(IToken);
		IToken char_literal13 = default(IToken);
		IToken string_literal14 = default(IToken);
		IToken string_literal15 = default(IToken);
		IToken IDENTIFIER16 = default(IToken);
		IToken char_literal17 = default(IToken);
		IToken IDENTIFIER18 = default(IToken);
		IToken char_literal19 = default(IToken);
		IToken char_literal20 = default(IToken);
		IToken char_literal21 = default(IToken);

		object string_literal8_tree = default(object);
		object string_literal9_tree = default(object);
		object IDENTIFIER10_tree = default(object);
		object char_literal11_tree = default(object);
		object char_literal12_tree = default(object);
		object char_literal13_tree = default(object);
		object string_literal14_tree = default(object);
		object string_literal15_tree = default(object);
		object IDENTIFIER16_tree = default(object);
		object char_literal17_tree = default(object);
		object IDENTIFIER18_tree = default(object);
		object char_literal19_tree = default(object);
		object char_literal20_tree = default(object);
		object char_literal21_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "importDeclaration");
		DebugLocation(317, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 3)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:318:5: ( 'import' ( 'static' )? IDENTIFIER '.' '*' ';' | 'import' ( 'static' )? IDENTIFIER ( '.' IDENTIFIER )+ ( '.' '*' )? ';' )
			int alt9=2;
			try { DebugEnterDecision(9, false);
			int LA9_1 = input.LA(1);

			if ((LA9_1==IMPORT))
			{
				int LA9_2 = input.LA(2);

				if ((LA9_2==STATIC))
				{
					int LA9_3 = input.LA(3);

					if ((LA9_3==IDENTIFIER))
					{
						int LA9_4 = input.LA(4);

						if ((LA9_4==DOT))
						{
							int LA9_5 = input.LA(5);

							if ((LA9_5==STAR))
							{
								alt9 = 1;
							}
							else if ((LA9_5==IDENTIFIER))
							{
								alt9 = 2;
							}
							else
							{
								if (state.backtracking>0) {state.failed=true; return retval;}
								NoViableAltException nvae = new NoViableAltException("", 9, 4, input, 5);
								DebugRecognitionException(nvae);
								throw nvae;
							}
						}
						else
						{
							if (state.backtracking>0) {state.failed=true; return retval;}
							NoViableAltException nvae = new NoViableAltException("", 9, 3, input, 4);
							DebugRecognitionException(nvae);
							throw nvae;
						}
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 9, 2, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else if ((LA9_2==IDENTIFIER))
				{
					int LA9_3 = input.LA(3);

					if ((LA9_3==DOT))
					{
						int LA9_4 = input.LA(4);

						if ((LA9_4==STAR))
						{
							alt9 = 1;
						}
						else if ((LA9_4==IDENTIFIER))
						{
							alt9 = 2;
						}
						else
						{
							if (state.backtracking>0) {state.failed=true; return retval;}
							NoViableAltException nvae = new NoViableAltException("", 9, 4, input, 4);
							DebugRecognitionException(nvae);
							throw nvae;
						}
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 9, 3, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 9, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 9, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(9); }
			switch (alt9)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:318:9: 'import' ( 'static' )? IDENTIFIER '.' '*' ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(318, 9);
				string_literal8=(IToken)Match(input,IMPORT,Follow._IMPORT_in_importDeclaration244); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal8_tree = (object)adaptor.Create(string_literal8, "string_literal8", retval);
				adaptor.AddChild(root_0, string_literal8_tree);
				}
				DebugLocation(319, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:319:9: ( 'static' )?
				int alt5=2;
				try { DebugEnterSubRule(5);
				try { DebugEnterDecision(5, false);
				int LA5_1 = input.LA(1);

				if ((LA5_1==STATIC))
				{
					alt5 = 1;
				}
				} finally { DebugExitDecision(5); }
				switch (alt5)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:319:10: 'static'
					{
					DebugLocation(319, 10);
					string_literal9=(IToken)Match(input,STATIC,Follow._STATIC_in_importDeclaration256); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal9_tree = (object)adaptor.Create(string_literal9, "string_literal9", retval);
					adaptor.AddChild(root_0, string_literal9_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(5); }

				DebugLocation(321, 9);
				IDENTIFIER10=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_importDeclaration277); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER10_tree = (object)adaptor.Create(IDENTIFIER10, "IDENTIFIER10", retval);
				adaptor.AddChild(root_0, IDENTIFIER10_tree);
				}
				DebugLocation(321, 20);
				char_literal11=(IToken)Match(input,DOT,Follow._DOT_in_importDeclaration279); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal11_tree = (object)adaptor.Create(char_literal11, "char_literal11", retval);
				adaptor.AddChild(root_0, char_literal11_tree);
				}
				DebugLocation(321, 24);
				char_literal12=(IToken)Match(input,STAR,Follow._STAR_in_importDeclaration281); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal12_tree = (object)adaptor.Create(char_literal12, "char_literal12", retval);
				adaptor.AddChild(root_0, char_literal12_tree);
				}
				DebugLocation(322, 9);
				char_literal13=(IToken)Match(input,SEMI,Follow._SEMI_in_importDeclaration291); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal13_tree = (object)adaptor.Create(char_literal13, "char_literal13", retval);
				adaptor.AddChild(root_0, char_literal13_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:323:9: 'import' ( 'static' )? IDENTIFIER ( '.' IDENTIFIER )+ ( '.' '*' )? ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(323, 9);
				string_literal14=(IToken)Match(input,IMPORT,Follow._IMPORT_in_importDeclaration308); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal14_tree = (object)adaptor.Create(string_literal14, "string_literal14", retval);
				adaptor.AddChild(root_0, string_literal14_tree);
				}
				DebugLocation(324, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:324:9: ( 'static' )?
				int alt6=2;
				try { DebugEnterSubRule(6);
				try { DebugEnterDecision(6, false);
				int LA6_1 = input.LA(1);

				if ((LA6_1==STATIC))
				{
					alt6 = 1;
				}
				} finally { DebugExitDecision(6); }
				switch (alt6)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:324:10: 'static'
					{
					DebugLocation(324, 10);
					string_literal15=(IToken)Match(input,STATIC,Follow._STATIC_in_importDeclaration320); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal15_tree = (object)adaptor.Create(string_literal15, "string_literal15", retval);
					adaptor.AddChild(root_0, string_literal15_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(6); }

				DebugLocation(326, 9);
				IDENTIFIER16=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_importDeclaration341); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER16_tree = (object)adaptor.Create(IDENTIFIER16, "IDENTIFIER16", retval);
				adaptor.AddChild(root_0, IDENTIFIER16_tree);
				}
				DebugLocation(327, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:327:9: ( '.' IDENTIFIER )+
				int cnt7=0;
				try { DebugEnterSubRule(7);
				while (true)
				{
					int alt7=2;
					try { DebugEnterDecision(7, false);
					int LA7_1 = input.LA(1);

					if ((LA7_1==DOT))
					{
						int LA7_2 = input.LA(2);

						if ((LA7_2==IDENTIFIER))
						{
							alt7 = 1;
						}


					}


					} finally { DebugExitDecision(7); }
					switch (alt7)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:327:10: '.' IDENTIFIER
						{
						DebugLocation(327, 10);
						char_literal17=(IToken)Match(input,DOT,Follow._DOT_in_importDeclaration352); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal17_tree = (object)adaptor.Create(char_literal17, "char_literal17", retval);
						adaptor.AddChild(root_0, char_literal17_tree);
						}
						DebugLocation(327, 14);
						IDENTIFIER18=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_importDeclaration354); if (state.failed) return retval;
						if (state.backtracking == 0) {
						IDENTIFIER18_tree = (object)adaptor.Create(IDENTIFIER18, "IDENTIFIER18", retval);
						adaptor.AddChild(root_0, IDENTIFIER18_tree);
						}

						}
						break;

					default:
						if (cnt7 >= 1)
							goto loop7;

						if (state.backtracking>0) {state.failed=true; return retval;}
						EarlyExitException eee7 = new EarlyExitException( 7, input );
						DebugRecognitionException(eee7);
						throw eee7;
					}
					cnt7++;
				}
				loop7:
					;

				} finally { DebugExitSubRule(7); }

				DebugLocation(329, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:329:9: ( '.' '*' )?
				int alt8=2;
				try { DebugEnterSubRule(8);
				try { DebugEnterDecision(8, false);
				int LA8_1 = input.LA(1);

				if ((LA8_1==DOT))
				{
					alt8 = 1;
				}
				} finally { DebugExitDecision(8); }
				switch (alt8)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:329:10: '.' '*'
					{
					DebugLocation(329, 10);
					char_literal19=(IToken)Match(input,DOT,Follow._DOT_in_importDeclaration376); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal19_tree = (object)adaptor.Create(char_literal19, "char_literal19", retval);
					adaptor.AddChild(root_0, char_literal19_tree);
					}
					DebugLocation(329, 14);
					char_literal20=(IToken)Match(input,STAR,Follow._STAR_in_importDeclaration378); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal20_tree = (object)adaptor.Create(char_literal20, "char_literal20", retval);
					adaptor.AddChild(root_0, char_literal20_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(8); }

				DebugLocation(331, 9);
				char_literal21=(IToken)Match(input,SEMI,Follow._SEMI_in_importDeclaration399); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal21_tree = (object)adaptor.Create(char_literal21, "char_literal21", retval);
				adaptor.AddChild(root_0, char_literal21_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("importDeclaration", 3);
			LeaveRule("importDeclaration", 3);
			LeaveRule_importDeclaration();
			if (state.backtracking > 0) { Memoize(input, 3, importDeclaration_StartIndex); }

		}
		DebugLocation(332, 4);
		} finally { DebugExitRule(GrammarFileName, "importDeclaration"); }
		return retval;

	}
	// $ANTLR end "importDeclaration"

	partial void EnterRule_qualifiedImportName();
	partial void LeaveRule_qualifiedImportName();
	// $ANTLR start "qualifiedImportName"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:334:1: qualifiedImportName : IDENTIFIER ( '.' IDENTIFIER )* ;
	[GrammarRule("qualifiedImportName")]
	private Antlr3AstNode qualifiedImportName()
	{
		EnterRule_qualifiedImportName();
		EnterRule("qualifiedImportName", 4);
		var retval = new Antlr3AstNode("qualifiedImportName");
		
		retval.Start = (IToken)input.LT(1);
		int qualifiedImportName_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER22 = default(IToken);
		IToken char_literal23 = default(IToken);
		IToken IDENTIFIER24 = default(IToken);

		object IDENTIFIER22_tree = default(object);
		object char_literal23_tree = default(object);
		object IDENTIFIER24_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "qualifiedImportName");
		DebugLocation(334, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 4)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:335:5: ( IDENTIFIER ( '.' IDENTIFIER )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:335:9: IDENTIFIER ( '.' IDENTIFIER )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(335, 9);
			IDENTIFIER22=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_qualifiedImportName419); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER22_tree = (object)adaptor.Create(IDENTIFIER22, "IDENTIFIER22", retval);
			adaptor.AddChild(root_0, IDENTIFIER22_tree);
			}
			DebugLocation(336, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:336:9: ( '.' IDENTIFIER )*
			try { DebugEnterSubRule(10);
			while (true)
			{
				int alt10=2;
				try { DebugEnterDecision(10, false);
				int LA10_1 = input.LA(1);

				if ((LA10_1==DOT))
				{
					alt10 = 1;
				}


				} finally { DebugExitDecision(10); }
				switch ( alt10 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:336:10: '.' IDENTIFIER
					{
					DebugLocation(336, 10);
					char_literal23=(IToken)Match(input,DOT,Follow._DOT_in_qualifiedImportName430); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal23_tree = (object)adaptor.Create(char_literal23, "char_literal23", retval);
					adaptor.AddChild(root_0, char_literal23_tree);
					}
					DebugLocation(336, 14);
					IDENTIFIER24=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_qualifiedImportName432); if (state.failed) return retval;
					if (state.backtracking == 0) {
					IDENTIFIER24_tree = (object)adaptor.Create(IDENTIFIER24, "IDENTIFIER24", retval);
					adaptor.AddChild(root_0, IDENTIFIER24_tree);
					}

					}
					break;

				default:
					goto loop10;
				}
			}

			loop10:
				;

			} finally { DebugExitSubRule(10); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("qualifiedImportName", 4);
			LeaveRule("qualifiedImportName", 4);
			LeaveRule_qualifiedImportName();
			if (state.backtracking > 0) { Memoize(input, 4, qualifiedImportName_StartIndex); }

		}
		DebugLocation(338, 4);
		} finally { DebugExitRule(GrammarFileName, "qualifiedImportName"); }
		return retval;

	}
	// $ANTLR end "qualifiedImportName"

	partial void EnterRule_typeDeclaration();
	partial void LeaveRule_typeDeclaration();
	// $ANTLR start "typeDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:340:1: typeDeclaration : ( classOrInterfaceDeclaration | ';' );
	[GrammarRule("typeDeclaration")]
	private Antlr3AstNode typeDeclaration()
	{
		EnterRule_typeDeclaration();
		EnterRule("typeDeclaration", 5);
		var retval = new Antlr3AstNode("typeDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int typeDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal26 = default(IToken);
		Antlr3AstNode classOrInterfaceDeclaration25 = default(Antlr3AstNode);

		object char_literal26_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeDeclaration");
		DebugLocation(340, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 5)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:341:5: ( classOrInterfaceDeclaration | ';' )
			int alt11=2;
			try { DebugEnterDecision(11, false);
			int LA11_1 = input.LA(1);

			if ((LA11_1==ABSTRACT||LA11_1==BOOLEAN||LA11_1==BYTE||LA11_1==CHAR||LA11_1==CLASS||LA11_1==DOUBLE||LA11_1==ENUM||LA11_1==FINAL||LA11_1==FLOAT||LA11_1==IDENTIFIER||(LA11_1>=INT && LA11_1<=INTERFACE)||LA11_1==LONG||LA11_1==LT||(LA11_1>=MONKEYS_AT && LA11_1<=NATIVE)||(LA11_1>=PRIVATE && LA11_1<=PUBLIC)||LA11_1==SHORT||(LA11_1>=STATIC && LA11_1<=STRICTFP)||LA11_1==SYNCHRONIZED||LA11_1==TRANSIENT||(LA11_1>=VOID && LA11_1<=VOLATILE)))
			{
				alt11 = 1;
			}
			else if ((LA11_1==SEMI))
			{
				alt11 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 11, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(11); }
			switch (alt11)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:341:9: classOrInterfaceDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(341, 9);
				PushFollow(Follow._classOrInterfaceDeclaration_in_typeDeclaration463);
				classOrInterfaceDeclaration25=classOrInterfaceDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classOrInterfaceDeclaration25.Tree, classOrInterfaceDeclaration25, "classOrInterfaceDeclaration25", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:342:9: ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(342, 9);
				char_literal26=(IToken)Match(input,SEMI,Follow._SEMI_in_typeDeclaration473); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal26_tree = (object)adaptor.Create(char_literal26, "char_literal26", retval);
				adaptor.AddChild(root_0, char_literal26_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeDeclaration", 5);
			LeaveRule("typeDeclaration", 5);
			LeaveRule_typeDeclaration();
			if (state.backtracking > 0) { Memoize(input, 5, typeDeclaration_StartIndex); }

		}
		DebugLocation(343, 4);
		} finally { DebugExitRule(GrammarFileName, "typeDeclaration"); }
		return retval;

	}
	// $ANTLR end "typeDeclaration"

	partial void EnterRule_classOrInterfaceDeclaration();
	partial void LeaveRule_classOrInterfaceDeclaration();
	// $ANTLR start "classOrInterfaceDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:345:1: classOrInterfaceDeclaration : ( classDeclaration | interfaceDeclaration );
	[GrammarRule("classOrInterfaceDeclaration")]
	private Antlr3AstNode classOrInterfaceDeclaration()
	{
		EnterRule_classOrInterfaceDeclaration();
		EnterRule("classOrInterfaceDeclaration", 6);
		var retval = new Antlr3AstNode("classOrInterfaceDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int classOrInterfaceDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode classDeclaration27 = default(Antlr3AstNode);
		Antlr3AstNode interfaceDeclaration28 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "classOrInterfaceDeclaration");
		DebugLocation(345, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 6)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:346:5: ( classDeclaration | interfaceDeclaration )
			int alt12=2;
			try { DebugEnterDecision(12, false);
			switch (input.LA(1))
			{
			case MONKEYS_AT:
				{
				int LA12_2 = input.LA(2);

				if ((EvaluatePredicate(synpred12_Java_fragment)))
				{
					alt12 = 1;
				}
				else if ((true))
				{
					alt12 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PUBLIC:
				{
				int LA12_2 = input.LA(2);

				if ((EvaluatePredicate(synpred12_Java_fragment)))
				{
					alt12 = 1;
				}
				else if ((true))
				{
					alt12 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PROTECTED:
				{
				int LA12_2 = input.LA(2);

				if ((EvaluatePredicate(synpred12_Java_fragment)))
				{
					alt12 = 1;
				}
				else if ((true))
				{
					alt12 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PRIVATE:
				{
				int LA12_2 = input.LA(2);

				if ((EvaluatePredicate(synpred12_Java_fragment)))
				{
					alt12 = 1;
				}
				else if ((true))
				{
					alt12 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STATIC:
				{
				int LA12_2 = input.LA(2);

				if ((EvaluatePredicate(synpred12_Java_fragment)))
				{
					alt12 = 1;
				}
				else if ((true))
				{
					alt12 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case ABSTRACT:
				{
				int LA12_2 = input.LA(2);

				if ((EvaluatePredicate(synpred12_Java_fragment)))
				{
					alt12 = 1;
				}
				else if ((true))
				{
					alt12 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case FINAL:
				{
				int LA12_2 = input.LA(2);

				if ((EvaluatePredicate(synpred12_Java_fragment)))
				{
					alt12 = 1;
				}
				else if ((true))
				{
					alt12 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 7, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case NATIVE:
				{
				int LA12_2 = input.LA(2);

				if ((EvaluatePredicate(synpred12_Java_fragment)))
				{
					alt12 = 1;
				}
				else if ((true))
				{
					alt12 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 8, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case SYNCHRONIZED:
				{
				int LA12_2 = input.LA(2);

				if ((EvaluatePredicate(synpred12_Java_fragment)))
				{
					alt12 = 1;
				}
				else if ((true))
				{
					alt12 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 9, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case TRANSIENT:
				{
				int LA12_2 = input.LA(2);

				if ((EvaluatePredicate(synpred12_Java_fragment)))
				{
					alt12 = 1;
				}
				else if ((true))
				{
					alt12 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 10, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case VOLATILE:
				{
				int LA12_2 = input.LA(2);

				if ((EvaluatePredicate(synpred12_Java_fragment)))
				{
					alt12 = 1;
				}
				else if ((true))
				{
					alt12 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STRICTFP:
				{
				int LA12_2 = input.LA(2);

				if ((EvaluatePredicate(synpred12_Java_fragment)))
				{
					alt12 = 1;
				}
				else if ((true))
				{
					alt12 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 12, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case CLASS:
			case ENUM:
				{
				alt12 = 1;
				}
				break;
			case INTERFACE:
				{
				alt12 = 2;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(12); }
			switch (alt12)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:346:10: classDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(346, 10);
				PushFollow(Follow._classDeclaration_in_classOrInterfaceDeclaration494);
				classDeclaration27=classDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classDeclaration27.Tree, classDeclaration27, "classDeclaration27", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:347:9: interfaceDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(347, 9);
				PushFollow(Follow._interfaceDeclaration_in_classOrInterfaceDeclaration504);
				interfaceDeclaration28=interfaceDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceDeclaration28.Tree, interfaceDeclaration28, "interfaceDeclaration28", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("classOrInterfaceDeclaration", 6);
			LeaveRule("classOrInterfaceDeclaration", 6);
			LeaveRule_classOrInterfaceDeclaration();
			if (state.backtracking > 0) { Memoize(input, 6, classOrInterfaceDeclaration_StartIndex); }

		}
		DebugLocation(348, 4);
		} finally { DebugExitRule(GrammarFileName, "classOrInterfaceDeclaration"); }
		return retval;

	}
	// $ANTLR end "classOrInterfaceDeclaration"

	partial void EnterRule_modifiers();
	partial void LeaveRule_modifiers();
	// $ANTLR start "modifiers"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:351:1: modifiers : ( annotation | 'public' | 'protected' | 'private' | 'static' | 'abstract' | 'final' | 'native' | 'synchronized' | 'transient' | 'volatile' | 'strictfp' )* ;
	[GrammarRule("modifiers")]
	private Antlr3AstNode modifiers()
	{
		EnterRule_modifiers();
		EnterRule("modifiers", 7);
		var retval = new Antlr3AstNode("modifiers");
		
		retval.Start = (IToken)input.LT(1);
		int modifiers_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal30 = default(IToken);
		IToken string_literal31 = default(IToken);
		IToken string_literal32 = default(IToken);
		IToken string_literal33 = default(IToken);
		IToken string_literal34 = default(IToken);
		IToken string_literal35 = default(IToken);
		IToken string_literal36 = default(IToken);
		IToken string_literal37 = default(IToken);
		IToken string_literal38 = default(IToken);
		IToken string_literal39 = default(IToken);
		IToken string_literal40 = default(IToken);
		Antlr3AstNode annotation29 = default(Antlr3AstNode);

		object string_literal30_tree = default(object);
		object string_literal31_tree = default(object);
		object string_literal32_tree = default(object);
		object string_literal33_tree = default(object);
		object string_literal34_tree = default(object);
		object string_literal35_tree = default(object);
		object string_literal36_tree = default(object);
		object string_literal37_tree = default(object);
		object string_literal38_tree = default(object);
		object string_literal39_tree = default(object);
		object string_literal40_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "modifiers");
		DebugLocation(351, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 7)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:352:5: ( ( annotation | 'public' | 'protected' | 'private' | 'static' | 'abstract' | 'final' | 'native' | 'synchronized' | 'transient' | 'volatile' | 'strictfp' )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:353:5: ( annotation | 'public' | 'protected' | 'private' | 'static' | 'abstract' | 'final' | 'native' | 'synchronized' | 'transient' | 'volatile' | 'strictfp' )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(353, 5);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:353:5: ( annotation | 'public' | 'protected' | 'private' | 'static' | 'abstract' | 'final' | 'native' | 'synchronized' | 'transient' | 'volatile' | 'strictfp' )*
			try { DebugEnterSubRule(13);
			while (true)
			{
				int alt13=13;
				try { DebugEnterDecision(13, false);
				switch (input.LA(1))
				{
				case MONKEYS_AT:
					{
					int LA13_2 = input.LA(2);

					if ((LA13_2==IDENTIFIER))
					{
						alt13 = 1;
					}


					}
					break;
				case PUBLIC:
					{
					alt13 = 2;
					}
					break;
				case PROTECTED:
					{
					alt13 = 3;
					}
					break;
				case PRIVATE:
					{
					alt13 = 4;
					}
					break;
				case STATIC:
					{
					alt13 = 5;
					}
					break;
				case ABSTRACT:
					{
					alt13 = 6;
					}
					break;
				case FINAL:
					{
					alt13 = 7;
					}
					break;
				case NATIVE:
					{
					alt13 = 8;
					}
					break;
				case SYNCHRONIZED:
					{
					alt13 = 9;
					}
					break;
				case TRANSIENT:
					{
					alt13 = 10;
					}
					break;
				case VOLATILE:
					{
					alt13 = 11;
					}
					break;
				case STRICTFP:
					{
					alt13 = 12;
					}
					break;
				}

				} finally { DebugExitDecision(13); }
				switch ( alt13 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:353:10: annotation
					{
					DebugLocation(353, 10);
					PushFollow(Follow._annotation_in_modifiers539);
					annotation29=annotation();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, annotation29.Tree, annotation29, "annotation29", retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:354:9: 'public'
					{
					DebugLocation(354, 9);
					string_literal30=(IToken)Match(input,PUBLIC,Follow._PUBLIC_in_modifiers549); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal30_tree = (object)adaptor.Create(string_literal30, "string_literal30", retval);
					adaptor.AddChild(root_0, string_literal30_tree);
					}

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:355:9: 'protected'
					{
					DebugLocation(355, 9);
					string_literal31=(IToken)Match(input,PROTECTED,Follow._PROTECTED_in_modifiers559); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal31_tree = (object)adaptor.Create(string_literal31, "string_literal31", retval);
					adaptor.AddChild(root_0, string_literal31_tree);
					}

					}
					break;
				case 4:
					DebugEnterAlt(4);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:356:9: 'private'
					{
					DebugLocation(356, 9);
					string_literal32=(IToken)Match(input,PRIVATE,Follow._PRIVATE_in_modifiers569); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal32_tree = (object)adaptor.Create(string_literal32, "string_literal32", retval);
					adaptor.AddChild(root_0, string_literal32_tree);
					}

					}
					break;
				case 5:
					DebugEnterAlt(5);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:357:9: 'static'
					{
					DebugLocation(357, 9);
					string_literal33=(IToken)Match(input,STATIC,Follow._STATIC_in_modifiers579); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal33_tree = (object)adaptor.Create(string_literal33, "string_literal33", retval);
					adaptor.AddChild(root_0, string_literal33_tree);
					}

					}
					break;
				case 6:
					DebugEnterAlt(6);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:358:9: 'abstract'
					{
					DebugLocation(358, 9);
					string_literal34=(IToken)Match(input,ABSTRACT,Follow._ABSTRACT_in_modifiers589); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal34_tree = (object)adaptor.Create(string_literal34, "string_literal34", retval);
					adaptor.AddChild(root_0, string_literal34_tree);
					}

					}
					break;
				case 7:
					DebugEnterAlt(7);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:359:9: 'final'
					{
					DebugLocation(359, 9);
					string_literal35=(IToken)Match(input,FINAL,Follow._FINAL_in_modifiers599); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal35_tree = (object)adaptor.Create(string_literal35, "string_literal35", retval);
					adaptor.AddChild(root_0, string_literal35_tree);
					}

					}
					break;
				case 8:
					DebugEnterAlt(8);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:360:9: 'native'
					{
					DebugLocation(360, 9);
					string_literal36=(IToken)Match(input,NATIVE,Follow._NATIVE_in_modifiers609); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal36_tree = (object)adaptor.Create(string_literal36, "string_literal36", retval);
					adaptor.AddChild(root_0, string_literal36_tree);
					}

					}
					break;
				case 9:
					DebugEnterAlt(9);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:361:9: 'synchronized'
					{
					DebugLocation(361, 9);
					string_literal37=(IToken)Match(input,SYNCHRONIZED,Follow._SYNCHRONIZED_in_modifiers619); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal37_tree = (object)adaptor.Create(string_literal37, "string_literal37", retval);
					adaptor.AddChild(root_0, string_literal37_tree);
					}

					}
					break;
				case 10:
					DebugEnterAlt(10);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:362:9: 'transient'
					{
					DebugLocation(362, 9);
					string_literal38=(IToken)Match(input,TRANSIENT,Follow._TRANSIENT_in_modifiers629); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal38_tree = (object)adaptor.Create(string_literal38, "string_literal38", retval);
					adaptor.AddChild(root_0, string_literal38_tree);
					}

					}
					break;
				case 11:
					DebugEnterAlt(11);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:363:9: 'volatile'
					{
					DebugLocation(363, 9);
					string_literal39=(IToken)Match(input,VOLATILE,Follow._VOLATILE_in_modifiers639); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal39_tree = (object)adaptor.Create(string_literal39, "string_literal39", retval);
					adaptor.AddChild(root_0, string_literal39_tree);
					}

					}
					break;
				case 12:
					DebugEnterAlt(12);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:364:9: 'strictfp'
					{
					DebugLocation(364, 9);
					string_literal40=(IToken)Match(input,STRICTFP,Follow._STRICTFP_in_modifiers649); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal40_tree = (object)adaptor.Create(string_literal40, "string_literal40", retval);
					adaptor.AddChild(root_0, string_literal40_tree);
					}

					}
					break;

				default:
					goto loop13;
				}
			}

			loop13:
				;

			} finally { DebugExitSubRule(13); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("modifiers", 7);
			LeaveRule("modifiers", 7);
			LeaveRule_modifiers();
			if (state.backtracking > 0) { Memoize(input, 7, modifiers_StartIndex); }

		}
		DebugLocation(366, 4);
		} finally { DebugExitRule(GrammarFileName, "modifiers"); }
		return retval;

	}
	// $ANTLR end "modifiers"

	partial void EnterRule_variableModifiers();
	partial void LeaveRule_variableModifiers();
	// $ANTLR start "variableModifiers"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:369:1: variableModifiers : ( 'final' | annotation )* ;
	[GrammarRule("variableModifiers")]
	private Antlr3AstNode variableModifiers()
	{
		EnterRule_variableModifiers();
		EnterRule("variableModifiers", 8);
		var retval = new Antlr3AstNode("variableModifiers");
		
		retval.Start = (IToken)input.LT(1);
		int variableModifiers_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal41 = default(IToken);
		Antlr3AstNode annotation42 = default(Antlr3AstNode);

		object string_literal41_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "variableModifiers");
		DebugLocation(369, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 8)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:370:5: ( ( 'final' | annotation )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:370:9: ( 'final' | annotation )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(370, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:370:9: ( 'final' | annotation )*
			try { DebugEnterSubRule(14);
			while (true)
			{
				int alt14=3;
				try { DebugEnterDecision(14, false);
				int LA14_1 = input.LA(1);

				if ((LA14_1==FINAL))
				{
					alt14 = 1;
				}
				else if ((LA14_1==MONKEYS_AT))
				{
					alt14 = 2;
				}


				} finally { DebugExitDecision(14); }
				switch ( alt14 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:370:13: 'final'
					{
					DebugLocation(370, 13);
					string_literal41=(IToken)Match(input,FINAL,Follow._FINAL_in_variableModifiers681); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal41_tree = (object)adaptor.Create(string_literal41, "string_literal41", retval);
					adaptor.AddChild(root_0, string_literal41_tree);
					}

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:371:13: annotation
					{
					DebugLocation(371, 13);
					PushFollow(Follow._annotation_in_variableModifiers695);
					annotation42=annotation();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, annotation42.Tree, annotation42, "annotation42", retval);

					}
					break;

				default:
					goto loop14;
				}
			}

			loop14:
				;

			} finally { DebugExitSubRule(14); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variableModifiers", 8);
			LeaveRule("variableModifiers", 8);
			LeaveRule_variableModifiers();
			if (state.backtracking > 0) { Memoize(input, 8, variableModifiers_StartIndex); }

		}
		DebugLocation(373, 4);
		} finally { DebugExitRule(GrammarFileName, "variableModifiers"); }
		return retval;

	}
	// $ANTLR end "variableModifiers"

	partial void EnterRule_classDeclaration();
	partial void LeaveRule_classDeclaration();
	// $ANTLR start "classDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:376:1: classDeclaration : ( normalClassDeclaration | enumDeclaration );
	[GrammarRule("classDeclaration")]
	private Antlr3AstNode classDeclaration()
	{
		EnterRule_classDeclaration();
		EnterRule("classDeclaration", 9);
		var retval = new Antlr3AstNode("classDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int classDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode normalClassDeclaration43 = default(Antlr3AstNode);
		Antlr3AstNode enumDeclaration44 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "classDeclaration");
		DebugLocation(376, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 9)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:377:5: ( normalClassDeclaration | enumDeclaration )
			int alt15=2;
			try { DebugEnterDecision(15, false);
			switch (input.LA(1))
			{
			case MONKEYS_AT:
				{
				int LA15_2 = input.LA(2);

				if ((EvaluatePredicate(synpred27_Java_fragment)))
				{
					alt15 = 1;
				}
				else if ((true))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PUBLIC:
				{
				int LA15_2 = input.LA(2);

				if ((EvaluatePredicate(synpred27_Java_fragment)))
				{
					alt15 = 1;
				}
				else if ((true))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PROTECTED:
				{
				int LA15_2 = input.LA(2);

				if ((EvaluatePredicate(synpred27_Java_fragment)))
				{
					alt15 = 1;
				}
				else if ((true))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PRIVATE:
				{
				int LA15_2 = input.LA(2);

				if ((EvaluatePredicate(synpred27_Java_fragment)))
				{
					alt15 = 1;
				}
				else if ((true))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STATIC:
				{
				int LA15_2 = input.LA(2);

				if ((EvaluatePredicate(synpred27_Java_fragment)))
				{
					alt15 = 1;
				}
				else if ((true))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case ABSTRACT:
				{
				int LA15_2 = input.LA(2);

				if ((EvaluatePredicate(synpred27_Java_fragment)))
				{
					alt15 = 1;
				}
				else if ((true))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case FINAL:
				{
				int LA15_2 = input.LA(2);

				if ((EvaluatePredicate(synpred27_Java_fragment)))
				{
					alt15 = 1;
				}
				else if ((true))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 7, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case NATIVE:
				{
				int LA15_2 = input.LA(2);

				if ((EvaluatePredicate(synpred27_Java_fragment)))
				{
					alt15 = 1;
				}
				else if ((true))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 8, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case SYNCHRONIZED:
				{
				int LA15_2 = input.LA(2);

				if ((EvaluatePredicate(synpred27_Java_fragment)))
				{
					alt15 = 1;
				}
				else if ((true))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 9, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case TRANSIENT:
				{
				int LA15_2 = input.LA(2);

				if ((EvaluatePredicate(synpred27_Java_fragment)))
				{
					alt15 = 1;
				}
				else if ((true))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 10, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case VOLATILE:
				{
				int LA15_2 = input.LA(2);

				if ((EvaluatePredicate(synpred27_Java_fragment)))
				{
					alt15 = 1;
				}
				else if ((true))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STRICTFP:
				{
				int LA15_2 = input.LA(2);

				if ((EvaluatePredicate(synpred27_Java_fragment)))
				{
					alt15 = 1;
				}
				else if ((true))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 12, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case CLASS:
				{
				alt15 = 1;
				}
				break;
			case ENUM:
				{
				alt15 = 2;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(15); }
			switch (alt15)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:377:9: normalClassDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(377, 9);
				PushFollow(Follow._normalClassDeclaration_in_classDeclaration731);
				normalClassDeclaration43=normalClassDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, normalClassDeclaration43.Tree, normalClassDeclaration43, "normalClassDeclaration43", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:378:9: enumDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(378, 9);
				PushFollow(Follow._enumDeclaration_in_classDeclaration741);
				enumDeclaration44=enumDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enumDeclaration44.Tree, enumDeclaration44, "enumDeclaration44", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("classDeclaration", 9);
			LeaveRule("classDeclaration", 9);
			LeaveRule_classDeclaration();
			if (state.backtracking > 0) { Memoize(input, 9, classDeclaration_StartIndex); }

		}
		DebugLocation(379, 4);
		} finally { DebugExitRule(GrammarFileName, "classDeclaration"); }
		return retval;

	}
	// $ANTLR end "classDeclaration"

	partial void EnterRule_normalClassDeclaration();
	partial void LeaveRule_normalClassDeclaration();
	// $ANTLR start "normalClassDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:381:1: normalClassDeclaration : modifiers 'class' IDENTIFIER ( typeParameters )? ( 'extends' type )? ( 'implements' typeList )? classBody ;
	[GrammarRule("normalClassDeclaration")]
	private Antlr3AstNode normalClassDeclaration()
	{
		EnterRule_normalClassDeclaration();
		EnterRule("normalClassDeclaration", 10);
		var retval = new Antlr3AstNode("normalClassDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int normalClassDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal46 = default(IToken);
		IToken IDENTIFIER47 = default(IToken);
		IToken string_literal49 = default(IToken);
		IToken string_literal51 = default(IToken);
		Antlr3AstNode modifiers45 = default(Antlr3AstNode);
		Antlr3AstNode typeParameters48 = default(Antlr3AstNode);
		Antlr3AstNode type50 = default(Antlr3AstNode);
		Antlr3AstNode typeList52 = default(Antlr3AstNode);
		Antlr3AstNode classBody53 = default(Antlr3AstNode);

		object string_literal46_tree = default(object);
		object IDENTIFIER47_tree = default(object);
		object string_literal49_tree = default(object);
		object string_literal51_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "normalClassDeclaration");
		DebugLocation(381, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 10)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:382:5: ( modifiers 'class' IDENTIFIER ( typeParameters )? ( 'extends' type )? ( 'implements' typeList )? classBody )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:382:9: modifiers 'class' IDENTIFIER ( typeParameters )? ( 'extends' type )? ( 'implements' typeList )? classBody
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(382, 9);
			PushFollow(Follow._modifiers_in_normalClassDeclaration761);
			modifiers45=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers45.Tree, modifiers45, "modifiers45", retval);
			DebugLocation(382, 20);
			string_literal46=(IToken)Match(input,CLASS,Follow._CLASS_in_normalClassDeclaration764); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal46_tree = (object)adaptor.Create(string_literal46, "string_literal46", retval);
			adaptor.AddChild(root_0, string_literal46_tree);
			}
			DebugLocation(382, 28);
			IDENTIFIER47=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_normalClassDeclaration766); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER47_tree = (object)adaptor.Create(IDENTIFIER47, "IDENTIFIER47", retval);
			adaptor.AddChild(root_0, IDENTIFIER47_tree);
			}
			DebugLocation(383, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:383:9: ( typeParameters )?
			int alt16=2;
			try { DebugEnterSubRule(16);
			try { DebugEnterDecision(16, false);
			int LA16_1 = input.LA(1);

			if ((LA16_1==LT))
			{
				alt16 = 1;
			}
			} finally { DebugExitDecision(16); }
			switch (alt16)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:383:10: typeParameters
				{
				DebugLocation(383, 10);
				PushFollow(Follow._typeParameters_in_normalClassDeclaration777);
				typeParameters48=typeParameters();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeParameters48.Tree, typeParameters48, "typeParameters48", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(16); }

			DebugLocation(385, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:385:9: ( 'extends' type )?
			int alt17=2;
			try { DebugEnterSubRule(17);
			try { DebugEnterDecision(17, false);
			int LA17_1 = input.LA(1);

			if ((LA17_1==EXTENDS))
			{
				alt17 = 1;
			}
			} finally { DebugExitDecision(17); }
			switch (alt17)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:385:10: 'extends' type
				{
				DebugLocation(385, 10);
				string_literal49=(IToken)Match(input,EXTENDS,Follow._EXTENDS_in_normalClassDeclaration799); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal49_tree = (object)adaptor.Create(string_literal49, "string_literal49", retval);
				adaptor.AddChild(root_0, string_literal49_tree);
				}
				DebugLocation(385, 20);
				PushFollow(Follow._type_in_normalClassDeclaration801);
				type50=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type50.Tree, type50, "type50", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(17); }

			DebugLocation(387, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:387:9: ( 'implements' typeList )?
			int alt18=2;
			try { DebugEnterSubRule(18);
			try { DebugEnterDecision(18, false);
			int LA18_1 = input.LA(1);

			if ((LA18_1==IMPLEMENTS))
			{
				alt18 = 1;
			}
			} finally { DebugExitDecision(18); }
			switch (alt18)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:387:10: 'implements' typeList
				{
				DebugLocation(387, 10);
				string_literal51=(IToken)Match(input,IMPLEMENTS,Follow._IMPLEMENTS_in_normalClassDeclaration823); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal51_tree = (object)adaptor.Create(string_literal51, "string_literal51", retval);
				adaptor.AddChild(root_0, string_literal51_tree);
				}
				DebugLocation(387, 23);
				PushFollow(Follow._typeList_in_normalClassDeclaration825);
				typeList52=typeList();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeList52.Tree, typeList52, "typeList52", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(18); }

			DebugLocation(389, 9);
			PushFollow(Follow._classBody_in_normalClassDeclaration858);
			classBody53=classBody();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, classBody53.Tree, classBody53, "classBody53", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("normalClassDeclaration", 10);
			LeaveRule("normalClassDeclaration", 10);
			LeaveRule_normalClassDeclaration();
			if (state.backtracking > 0) { Memoize(input, 10, normalClassDeclaration_StartIndex); }

		}
		DebugLocation(390, 4);
		} finally { DebugExitRule(GrammarFileName, "normalClassDeclaration"); }
		return retval;

	}
	// $ANTLR end "normalClassDeclaration"

	partial void EnterRule_typeParameters();
	partial void LeaveRule_typeParameters();
	// $ANTLR start "typeParameters"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:393:1: typeParameters : '<' typeParameter ( ',' typeParameter )* '>' ;
	[GrammarRule("typeParameters")]
	private Antlr3AstNode typeParameters()
	{
		EnterRule_typeParameters();
		EnterRule("typeParameters", 11);
		var retval = new Antlr3AstNode("typeParameters");
		
		retval.Start = (IToken)input.LT(1);
		int typeParameters_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal54 = default(IToken);
		IToken char_literal56 = default(IToken);
		IToken char_literal58 = default(IToken);
		Antlr3AstNode typeParameter55 = default(Antlr3AstNode);
		Antlr3AstNode typeParameter57 = default(Antlr3AstNode);

		object char_literal54_tree = default(object);
		object char_literal56_tree = default(object);
		object char_literal58_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeParameters");
		DebugLocation(393, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 11)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:394:5: ( '<' typeParameter ( ',' typeParameter )* '>' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:394:9: '<' typeParameter ( ',' typeParameter )* '>'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(394, 9);
			char_literal54=(IToken)Match(input,LT,Follow._LT_in_typeParameters879); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal54_tree = (object)adaptor.Create(char_literal54, "char_literal54", retval);
			adaptor.AddChild(root_0, char_literal54_tree);
			}
			DebugLocation(395, 13);
			PushFollow(Follow._typeParameter_in_typeParameters893);
			typeParameter55=typeParameter();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, typeParameter55.Tree, typeParameter55, "typeParameter55", retval);
			DebugLocation(396, 13);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:396:13: ( ',' typeParameter )*
			try { DebugEnterSubRule(19);
			while (true)
			{
				int alt19=2;
				try { DebugEnterDecision(19, false);
				int LA19_1 = input.LA(1);

				if ((LA19_1==COMMA))
				{
					alt19 = 1;
				}


				} finally { DebugExitDecision(19); }
				switch ( alt19 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:396:14: ',' typeParameter
					{
					DebugLocation(396, 14);
					char_literal56=(IToken)Match(input,COMMA,Follow._COMMA_in_typeParameters908); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal56_tree = (object)adaptor.Create(char_literal56, "char_literal56", retval);
					adaptor.AddChild(root_0, char_literal56_tree);
					}
					DebugLocation(396, 18);
					PushFollow(Follow._typeParameter_in_typeParameters910);
					typeParameter57=typeParameter();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, typeParameter57.Tree, typeParameter57, "typeParameter57", retval);

					}
					break;

				default:
					goto loop19;
				}
			}

			loop19:
				;

			} finally { DebugExitSubRule(19); }

			DebugLocation(398, 9);
			char_literal58=(IToken)Match(input,GT,Follow._GT_in_typeParameters935); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal58_tree = (object)adaptor.Create(char_literal58, "char_literal58", retval);
			adaptor.AddChild(root_0, char_literal58_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeParameters", 11);
			LeaveRule("typeParameters", 11);
			LeaveRule_typeParameters();
			if (state.backtracking > 0) { Memoize(input, 11, typeParameters_StartIndex); }

		}
		DebugLocation(399, 4);
		} finally { DebugExitRule(GrammarFileName, "typeParameters"); }
		return retval;

	}
	// $ANTLR end "typeParameters"

	partial void EnterRule_typeParameter();
	partial void LeaveRule_typeParameter();
	// $ANTLR start "typeParameter"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:401:1: typeParameter : IDENTIFIER ( 'extends' typeBound )? ;
	[GrammarRule("typeParameter")]
	private Antlr3AstNode typeParameter()
	{
		EnterRule_typeParameter();
		EnterRule("typeParameter", 12);
		var retval = new Antlr3AstNode("typeParameter");
		
		retval.Start = (IToken)input.LT(1);
		int typeParameter_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER59 = default(IToken);
		IToken string_literal60 = default(IToken);
		Antlr3AstNode typeBound61 = default(Antlr3AstNode);

		object IDENTIFIER59_tree = default(object);
		object string_literal60_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeParameter");
		DebugLocation(401, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 12)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:402:5: ( IDENTIFIER ( 'extends' typeBound )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:402:9: IDENTIFIER ( 'extends' typeBound )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(402, 9);
			IDENTIFIER59=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_typeParameter955); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER59_tree = (object)adaptor.Create(IDENTIFIER59, "IDENTIFIER59", retval);
			adaptor.AddChild(root_0, IDENTIFIER59_tree);
			}
			DebugLocation(403, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:403:9: ( 'extends' typeBound )?
			int alt20=2;
			try { DebugEnterSubRule(20);
			try { DebugEnterDecision(20, false);
			int LA20_1 = input.LA(1);

			if ((LA20_1==EXTENDS))
			{
				alt20 = 1;
			}
			} finally { DebugExitDecision(20); }
			switch (alt20)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:403:10: 'extends' typeBound
				{
				DebugLocation(403, 10);
				string_literal60=(IToken)Match(input,EXTENDS,Follow._EXTENDS_in_typeParameter966); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal60_tree = (object)adaptor.Create(string_literal60, "string_literal60", retval);
				adaptor.AddChild(root_0, string_literal60_tree);
				}
				DebugLocation(403, 20);
				PushFollow(Follow._typeBound_in_typeParameter968);
				typeBound61=typeBound();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeBound61.Tree, typeBound61, "typeBound61", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(20); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeParameter", 12);
			LeaveRule("typeParameter", 12);
			LeaveRule_typeParameter();
			if (state.backtracking > 0) { Memoize(input, 12, typeParameter_StartIndex); }

		}
		DebugLocation(405, 4);
		} finally { DebugExitRule(GrammarFileName, "typeParameter"); }
		return retval;

	}
	// $ANTLR end "typeParameter"

	partial void EnterRule_typeBound();
	partial void LeaveRule_typeBound();
	// $ANTLR start "typeBound"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:408:1: typeBound : type ( '&' type )* ;
	[GrammarRule("typeBound")]
	private Antlr3AstNode typeBound()
	{
		EnterRule_typeBound();
		EnterRule("typeBound", 13);
		var retval = new Antlr3AstNode("typeBound");
		
		retval.Start = (IToken)input.LT(1);
		int typeBound_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal63 = default(IToken);
		Antlr3AstNode type62 = default(Antlr3AstNode);
		Antlr3AstNode type64 = default(Antlr3AstNode);

		object char_literal63_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeBound");
		DebugLocation(408, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 13)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:409:5: ( type ( '&' type )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:409:9: type ( '&' type )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(409, 9);
			PushFollow(Follow._type_in_typeBound1000);
			type62=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type62.Tree, type62, "type62", retval);
			DebugLocation(410, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:410:9: ( '&' type )*
			try { DebugEnterSubRule(21);
			while (true)
			{
				int alt21=2;
				try { DebugEnterDecision(21, false);
				int LA21_1 = input.LA(1);

				if ((LA21_1==AMP))
				{
					alt21 = 1;
				}


				} finally { DebugExitDecision(21); }
				switch ( alt21 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:410:10: '&' type
					{
					DebugLocation(410, 10);
					char_literal63=(IToken)Match(input,AMP,Follow._AMP_in_typeBound1011); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal63_tree = (object)adaptor.Create(char_literal63, "char_literal63", retval);
					adaptor.AddChild(root_0, char_literal63_tree);
					}
					DebugLocation(410, 14);
					PushFollow(Follow._type_in_typeBound1013);
					type64=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type64.Tree, type64, "type64", retval);

					}
					break;

				default:
					goto loop21;
				}
			}

			loop21:
				;

			} finally { DebugExitSubRule(21); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeBound", 13);
			LeaveRule("typeBound", 13);
			LeaveRule_typeBound();
			if (state.backtracking > 0) { Memoize(input, 13, typeBound_StartIndex); }

		}
		DebugLocation(412, 4);
		} finally { DebugExitRule(GrammarFileName, "typeBound"); }
		return retval;

	}
	// $ANTLR end "typeBound"

	partial void EnterRule_enumDeclaration();
	partial void LeaveRule_enumDeclaration();
	// $ANTLR start "enumDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:415:1: enumDeclaration : modifiers ( 'enum' ) IDENTIFIER ( 'implements' typeList )? enumBody ;
	[GrammarRule("enumDeclaration")]
	private Antlr3AstNode enumDeclaration()
	{
		EnterRule_enumDeclaration();
		EnterRule("enumDeclaration", 14);
		var retval = new Antlr3AstNode("enumDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int enumDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal66 = default(IToken);
		IToken IDENTIFIER67 = default(IToken);
		IToken string_literal68 = default(IToken);
		Antlr3AstNode modifiers65 = default(Antlr3AstNode);
		Antlr3AstNode typeList69 = default(Antlr3AstNode);
		Antlr3AstNode enumBody70 = default(Antlr3AstNode);

		object string_literal66_tree = default(object);
		object IDENTIFIER67_tree = default(object);
		object string_literal68_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enumDeclaration");
		DebugLocation(415, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 14)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:416:5: ( modifiers ( 'enum' ) IDENTIFIER ( 'implements' typeList )? enumBody )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:416:9: modifiers ( 'enum' ) IDENTIFIER ( 'implements' typeList )? enumBody
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(416, 9);
			PushFollow(Follow._modifiers_in_enumDeclaration1045);
			modifiers65=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers65.Tree, modifiers65, "modifiers65", retval);
			DebugLocation(417, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:417:9: ( 'enum' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:417:10: 'enum'
			{
			DebugLocation(417, 10);
			string_literal66=(IToken)Match(input,ENUM,Follow._ENUM_in_enumDeclaration1057); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal66_tree = (object)adaptor.Create(string_literal66, "string_literal66", retval);
			adaptor.AddChild(root_0, string_literal66_tree);
			}

			}

			DebugLocation(419, 9);
			IDENTIFIER67=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_enumDeclaration1078); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER67_tree = (object)adaptor.Create(IDENTIFIER67, "IDENTIFIER67", retval);
			adaptor.AddChild(root_0, IDENTIFIER67_tree);
			}
			DebugLocation(420, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:420:9: ( 'implements' typeList )?
			int alt22=2;
			try { DebugEnterSubRule(22);
			try { DebugEnterDecision(22, false);
			int LA22_1 = input.LA(1);

			if ((LA22_1==IMPLEMENTS))
			{
				alt22 = 1;
			}
			} finally { DebugExitDecision(22); }
			switch (alt22)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:420:10: 'implements' typeList
				{
				DebugLocation(420, 10);
				string_literal68=(IToken)Match(input,IMPLEMENTS,Follow._IMPLEMENTS_in_enumDeclaration1089); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal68_tree = (object)adaptor.Create(string_literal68, "string_literal68", retval);
				adaptor.AddChild(root_0, string_literal68_tree);
				}
				DebugLocation(420, 23);
				PushFollow(Follow._typeList_in_enumDeclaration1091);
				typeList69=typeList();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeList69.Tree, typeList69, "typeList69", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(22); }

			DebugLocation(422, 9);
			PushFollow(Follow._enumBody_in_enumDeclaration1112);
			enumBody70=enumBody();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, enumBody70.Tree, enumBody70, "enumBody70", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enumDeclaration", 14);
			LeaveRule("enumDeclaration", 14);
			LeaveRule_enumDeclaration();
			if (state.backtracking > 0) { Memoize(input, 14, enumDeclaration_StartIndex); }

		}
		DebugLocation(423, 4);
		} finally { DebugExitRule(GrammarFileName, "enumDeclaration"); }
		return retval;

	}
	// $ANTLR end "enumDeclaration"

	partial void EnterRule_enumBody();
	partial void LeaveRule_enumBody();
	// $ANTLR start "enumBody"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:426:1: enumBody : '{' ( enumConstants )? ( ',' )? ( enumBodyDeclarations )? '}' ;
	[GrammarRule("enumBody")]
	private Antlr3AstNode enumBody()
	{
		EnterRule_enumBody();
		EnterRule("enumBody", 15);
		var retval = new Antlr3AstNode("enumBody");
		
		retval.Start = (IToken)input.LT(1);
		int enumBody_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal71 = default(IToken);
		IToken char_literal73 = default(IToken);
		IToken char_literal75 = default(IToken);
		Antlr3AstNode enumConstants72 = default(Antlr3AstNode);
		Antlr3AstNode enumBodyDeclarations74 = default(Antlr3AstNode);

		object char_literal71_tree = default(object);
		object char_literal73_tree = default(object);
		object char_literal75_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enumBody");
		DebugLocation(426, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 15)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:427:5: ( '{' ( enumConstants )? ( ',' )? ( enumBodyDeclarations )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:427:9: '{' ( enumConstants )? ( ',' )? ( enumBodyDeclarations )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(427, 9);
			char_literal71=(IToken)Match(input,LBRACE,Follow._LBRACE_in_enumBody1137); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal71_tree = (object)adaptor.Create(char_literal71, "char_literal71", retval);
			adaptor.AddChild(root_0, char_literal71_tree);
			}
			DebugLocation(428, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:428:9: ( enumConstants )?
			int alt23=2;
			try { DebugEnterSubRule(23);
			try { DebugEnterDecision(23, false);
			int LA23_1 = input.LA(1);

			if ((LA23_1==IDENTIFIER||LA23_1==MONKEYS_AT))
			{
				alt23 = 1;
			}
			} finally { DebugExitDecision(23); }
			switch (alt23)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:428:10: enumConstants
				{
				DebugLocation(428, 10);
				PushFollow(Follow._enumConstants_in_enumBody1148);
				enumConstants72=enumConstants();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enumConstants72.Tree, enumConstants72, "enumConstants72", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(23); }

			DebugLocation(430, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:430:9: ( ',' )?
			int alt24=2;
			try { DebugEnterSubRule(24);
			try { DebugEnterDecision(24, false);
			int LA24_1 = input.LA(1);

			if ((LA24_1==COMMA))
			{
				alt24 = 1;
			}
			} finally { DebugExitDecision(24); }
			switch (alt24)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:430:9: ','
				{
				DebugLocation(430, 9);
				char_literal73=(IToken)Match(input,COMMA,Follow._COMMA_in_enumBody1170); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal73_tree = (object)adaptor.Create(char_literal73, "char_literal73", retval);
				adaptor.AddChild(root_0, char_literal73_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(24); }

			DebugLocation(431, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:431:9: ( enumBodyDeclarations )?
			int alt25=2;
			try { DebugEnterSubRule(25);
			try { DebugEnterDecision(25, false);
			int LA25_1 = input.LA(1);

			if ((LA25_1==SEMI))
			{
				alt25 = 1;
			}
			} finally { DebugExitDecision(25); }
			switch (alt25)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:431:10: enumBodyDeclarations
				{
				DebugLocation(431, 10);
				PushFollow(Follow._enumBodyDeclarations_in_enumBody1183);
				enumBodyDeclarations74=enumBodyDeclarations();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enumBodyDeclarations74.Tree, enumBodyDeclarations74, "enumBodyDeclarations74", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(25); }

			DebugLocation(433, 9);
			char_literal75=(IToken)Match(input,RBRACE,Follow._RBRACE_in_enumBody1205); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal75_tree = (object)adaptor.Create(char_literal75, "char_literal75", retval);
			adaptor.AddChild(root_0, char_literal75_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enumBody", 15);
			LeaveRule("enumBody", 15);
			LeaveRule_enumBody();
			if (state.backtracking > 0) { Memoize(input, 15, enumBody_StartIndex); }

		}
		DebugLocation(434, 4);
		} finally { DebugExitRule(GrammarFileName, "enumBody"); }
		return retval;

	}
	// $ANTLR end "enumBody"

	partial void EnterRule_enumConstants();
	partial void LeaveRule_enumConstants();
	// $ANTLR start "enumConstants"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:436:1: enumConstants : enumConstant ( ',' enumConstant )* ;
	[GrammarRule("enumConstants")]
	private Antlr3AstNode enumConstants()
	{
		EnterRule_enumConstants();
		EnterRule("enumConstants", 16);
		var retval = new Antlr3AstNode("enumConstants");
		
		retval.Start = (IToken)input.LT(1);
		int enumConstants_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal77 = default(IToken);
		Antlr3AstNode enumConstant76 = default(Antlr3AstNode);
		Antlr3AstNode enumConstant78 = default(Antlr3AstNode);

		object char_literal77_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enumConstants");
		DebugLocation(436, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 16)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:437:5: ( enumConstant ( ',' enumConstant )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:437:9: enumConstant ( ',' enumConstant )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(437, 9);
			PushFollow(Follow._enumConstant_in_enumConstants1225);
			enumConstant76=enumConstant();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, enumConstant76.Tree, enumConstant76, "enumConstant76", retval);
			DebugLocation(438, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:438:9: ( ',' enumConstant )*
			try { DebugEnterSubRule(26);
			while (true)
			{
				int alt26=2;
				try { DebugEnterDecision(26, false);
				int LA26_1 = input.LA(1);

				if ((LA26_1==COMMA))
				{
					int LA26_2 = input.LA(2);

					if ((LA26_2==IDENTIFIER||LA26_2==MONKEYS_AT))
					{
						alt26 = 1;
					}


				}


				} finally { DebugExitDecision(26); }
				switch ( alt26 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:438:10: ',' enumConstant
					{
					DebugLocation(438, 10);
					char_literal77=(IToken)Match(input,COMMA,Follow._COMMA_in_enumConstants1236); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal77_tree = (object)adaptor.Create(char_literal77, "char_literal77", retval);
					adaptor.AddChild(root_0, char_literal77_tree);
					}
					DebugLocation(438, 14);
					PushFollow(Follow._enumConstant_in_enumConstants1238);
					enumConstant78=enumConstant();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, enumConstant78.Tree, enumConstant78, "enumConstant78", retval);

					}
					break;

				default:
					goto loop26;
				}
			}

			loop26:
				;

			} finally { DebugExitSubRule(26); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enumConstants", 16);
			LeaveRule("enumConstants", 16);
			LeaveRule_enumConstants();
			if (state.backtracking > 0) { Memoize(input, 16, enumConstants_StartIndex); }

		}
		DebugLocation(440, 4);
		} finally { DebugExitRule(GrammarFileName, "enumConstants"); }
		return retval;

	}
	// $ANTLR end "enumConstants"

	partial void EnterRule_enumConstant();
	partial void LeaveRule_enumConstant();
	// $ANTLR start "enumConstant"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:446:1: enumConstant : ( annotations )? IDENTIFIER ( arguments )? ( classBody )? ;
	[GrammarRule("enumConstant")]
	private Antlr3AstNode enumConstant()
	{
		EnterRule_enumConstant();
		EnterRule("enumConstant", 17);
		var retval = new Antlr3AstNode("enumConstant");
		
		retval.Start = (IToken)input.LT(1);
		int enumConstant_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER80 = default(IToken);
		Antlr3AstNode annotations79 = default(Antlr3AstNode);
		Antlr3AstNode arguments81 = default(Antlr3AstNode);
		Antlr3AstNode classBody82 = default(Antlr3AstNode);

		object IDENTIFIER80_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enumConstant");
		DebugLocation(446, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 17)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:447:5: ( ( annotations )? IDENTIFIER ( arguments )? ( classBody )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:447:9: ( annotations )? IDENTIFIER ( arguments )? ( classBody )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(447, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:447:9: ( annotations )?
			int alt27=2;
			try { DebugEnterSubRule(27);
			try { DebugEnterDecision(27, false);
			int LA27_1 = input.LA(1);

			if ((LA27_1==MONKEYS_AT))
			{
				alt27 = 1;
			}
			} finally { DebugExitDecision(27); }
			switch (alt27)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:447:10: annotations
				{
				DebugLocation(447, 10);
				PushFollow(Follow._annotations_in_enumConstant1272);
				annotations79=annotations();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, annotations79.Tree, annotations79, "annotations79", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(27); }

			DebugLocation(449, 9);
			IDENTIFIER80=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_enumConstant1293); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER80_tree = (object)adaptor.Create(IDENTIFIER80, "IDENTIFIER80", retval);
			adaptor.AddChild(root_0, IDENTIFIER80_tree);
			}
			DebugLocation(450, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:450:9: ( arguments )?
			int alt28=2;
			try { DebugEnterSubRule(28);
			try { DebugEnterDecision(28, false);
			int LA28_1 = input.LA(1);

			if ((LA28_1==LPAREN))
			{
				alt28 = 1;
			}
			} finally { DebugExitDecision(28); }
			switch (alt28)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:450:10: arguments
				{
				DebugLocation(450, 10);
				PushFollow(Follow._arguments_in_enumConstant1304);
				arguments81=arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arguments81.Tree, arguments81, "arguments81", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(28); }

			DebugLocation(452, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:452:9: ( classBody )?
			int alt29=2;
			try { DebugEnterSubRule(29);
			try { DebugEnterDecision(29, false);
			int LA29_1 = input.LA(1);

			if ((LA29_1==LBRACE))
			{
				alt29 = 1;
			}
			} finally { DebugExitDecision(29); }
			switch (alt29)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:452:10: classBody
				{
				DebugLocation(452, 10);
				PushFollow(Follow._classBody_in_enumConstant1326);
				classBody82=classBody();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classBody82.Tree, classBody82, "classBody82", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(29); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enumConstant", 17);
			LeaveRule("enumConstant", 17);
			LeaveRule_enumConstant();
			if (state.backtracking > 0) { Memoize(input, 17, enumConstant_StartIndex); }

		}
		DebugLocation(456, 4);
		} finally { DebugExitRule(GrammarFileName, "enumConstant"); }
		return retval;

	}
	// $ANTLR end "enumConstant"

	partial void EnterRule_enumBodyDeclarations();
	partial void LeaveRule_enumBodyDeclarations();
	// $ANTLR start "enumBodyDeclarations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:458:1: enumBodyDeclarations : ';' ( classBodyDeclaration )* ;
	[GrammarRule("enumBodyDeclarations")]
	private Antlr3AstNode enumBodyDeclarations()
	{
		EnterRule_enumBodyDeclarations();
		EnterRule("enumBodyDeclarations", 18);
		var retval = new Antlr3AstNode("enumBodyDeclarations");
		
		retval.Start = (IToken)input.LT(1);
		int enumBodyDeclarations_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal83 = default(IToken);
		Antlr3AstNode classBodyDeclaration84 = default(Antlr3AstNode);

		object char_literal83_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enumBodyDeclarations");
		DebugLocation(458, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 18)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:459:5: ( ';' ( classBodyDeclaration )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:459:9: ';' ( classBodyDeclaration )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(459, 9);
			char_literal83=(IToken)Match(input,SEMI,Follow._SEMI_in_enumBodyDeclarations1367); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal83_tree = (object)adaptor.Create(char_literal83, "char_literal83", retval);
			adaptor.AddChild(root_0, char_literal83_tree);
			}
			DebugLocation(460, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:460:9: ( classBodyDeclaration )*
			try { DebugEnterSubRule(30);
			while (true)
			{
				int alt30=2;
				try { DebugEnterDecision(30, false);
				int LA30_1 = input.LA(1);

				if ((LA30_1==ABSTRACT||LA30_1==BOOLEAN||LA30_1==BYTE||LA30_1==CHAR||LA30_1==CLASS||LA30_1==DOUBLE||LA30_1==ENUM||LA30_1==FINAL||LA30_1==FLOAT||LA30_1==IDENTIFIER||(LA30_1>=INT && LA30_1<=INTERFACE)||LA30_1==LBRACE||LA30_1==LONG||LA30_1==LT||(LA30_1>=MONKEYS_AT && LA30_1<=NATIVE)||(LA30_1>=PRIVATE && LA30_1<=PUBLIC)||(LA30_1>=SEMI && LA30_1<=SHORT)||(LA30_1>=STATIC && LA30_1<=STRICTFP)||LA30_1==SYNCHRONIZED||LA30_1==TRANSIENT||(LA30_1>=VOID && LA30_1<=VOLATILE)))
				{
					alt30 = 1;
				}


				} finally { DebugExitDecision(30); }
				switch ( alt30 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:460:10: classBodyDeclaration
					{
					DebugLocation(460, 10);
					PushFollow(Follow._classBodyDeclaration_in_enumBodyDeclarations1379);
					classBodyDeclaration84=classBodyDeclaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, classBodyDeclaration84.Tree, classBodyDeclaration84, "classBodyDeclaration84", retval);

					}
					break;

				default:
					goto loop30;
				}
			}

			loop30:
				;

			} finally { DebugExitSubRule(30); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enumBodyDeclarations", 18);
			LeaveRule("enumBodyDeclarations", 18);
			LeaveRule_enumBodyDeclarations();
			if (state.backtracking > 0) { Memoize(input, 18, enumBodyDeclarations_StartIndex); }

		}
		DebugLocation(462, 4);
		} finally { DebugExitRule(GrammarFileName, "enumBodyDeclarations"); }
		return retval;

	}
	// $ANTLR end "enumBodyDeclarations"

	partial void EnterRule_interfaceDeclaration();
	partial void LeaveRule_interfaceDeclaration();
	// $ANTLR start "interfaceDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:464:1: interfaceDeclaration : ( normalInterfaceDeclaration | annotationTypeDeclaration );
	[GrammarRule("interfaceDeclaration")]
	private Antlr3AstNode interfaceDeclaration()
	{
		EnterRule_interfaceDeclaration();
		EnterRule("interfaceDeclaration", 19);
		var retval = new Antlr3AstNode("interfaceDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int interfaceDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode normalInterfaceDeclaration85 = default(Antlr3AstNode);
		Antlr3AstNode annotationTypeDeclaration86 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "interfaceDeclaration");
		DebugLocation(464, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 19)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:465:5: ( normalInterfaceDeclaration | annotationTypeDeclaration )
			int alt31=2;
			try { DebugEnterDecision(31, false);
			switch (input.LA(1))
			{
			case MONKEYS_AT:
				{
				int LA31_2 = input.LA(2);

				if ((EvaluatePredicate(synpred43_Java_fragment)))
				{
					alt31 = 1;
				}
				else if ((true))
				{
					alt31 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PUBLIC:
				{
				int LA31_2 = input.LA(2);

				if ((EvaluatePredicate(synpred43_Java_fragment)))
				{
					alt31 = 1;
				}
				else if ((true))
				{
					alt31 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PROTECTED:
				{
				int LA31_2 = input.LA(2);

				if ((EvaluatePredicate(synpred43_Java_fragment)))
				{
					alt31 = 1;
				}
				else if ((true))
				{
					alt31 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PRIVATE:
				{
				int LA31_2 = input.LA(2);

				if ((EvaluatePredicate(synpred43_Java_fragment)))
				{
					alt31 = 1;
				}
				else if ((true))
				{
					alt31 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STATIC:
				{
				int LA31_2 = input.LA(2);

				if ((EvaluatePredicate(synpred43_Java_fragment)))
				{
					alt31 = 1;
				}
				else if ((true))
				{
					alt31 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case ABSTRACT:
				{
				int LA31_2 = input.LA(2);

				if ((EvaluatePredicate(synpred43_Java_fragment)))
				{
					alt31 = 1;
				}
				else if ((true))
				{
					alt31 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case FINAL:
				{
				int LA31_2 = input.LA(2);

				if ((EvaluatePredicate(synpred43_Java_fragment)))
				{
					alt31 = 1;
				}
				else if ((true))
				{
					alt31 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 7, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case NATIVE:
				{
				int LA31_2 = input.LA(2);

				if ((EvaluatePredicate(synpred43_Java_fragment)))
				{
					alt31 = 1;
				}
				else if ((true))
				{
					alt31 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 8, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case SYNCHRONIZED:
				{
				int LA31_2 = input.LA(2);

				if ((EvaluatePredicate(synpred43_Java_fragment)))
				{
					alt31 = 1;
				}
				else if ((true))
				{
					alt31 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 9, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case TRANSIENT:
				{
				int LA31_2 = input.LA(2);

				if ((EvaluatePredicate(synpred43_Java_fragment)))
				{
					alt31 = 1;
				}
				else if ((true))
				{
					alt31 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 10, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case VOLATILE:
				{
				int LA31_2 = input.LA(2);

				if ((EvaluatePredicate(synpred43_Java_fragment)))
				{
					alt31 = 1;
				}
				else if ((true))
				{
					alt31 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STRICTFP:
				{
				int LA31_2 = input.LA(2);

				if ((EvaluatePredicate(synpred43_Java_fragment)))
				{
					alt31 = 1;
				}
				else if ((true))
				{
					alt31 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 12, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case INTERFACE:
				{
				alt31 = 1;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(31); }
			switch (alt31)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:465:9: normalInterfaceDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(465, 9);
				PushFollow(Follow._normalInterfaceDeclaration_in_interfaceDeclaration1410);
				normalInterfaceDeclaration85=normalInterfaceDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, normalInterfaceDeclaration85.Tree, normalInterfaceDeclaration85, "normalInterfaceDeclaration85", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:466:9: annotationTypeDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(466, 9);
				PushFollow(Follow._annotationTypeDeclaration_in_interfaceDeclaration1420);
				annotationTypeDeclaration86=annotationTypeDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, annotationTypeDeclaration86.Tree, annotationTypeDeclaration86, "annotationTypeDeclaration86", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interfaceDeclaration", 19);
			LeaveRule("interfaceDeclaration", 19);
			LeaveRule_interfaceDeclaration();
			if (state.backtracking > 0) { Memoize(input, 19, interfaceDeclaration_StartIndex); }

		}
		DebugLocation(467, 4);
		} finally { DebugExitRule(GrammarFileName, "interfaceDeclaration"); }
		return retval;

	}
	// $ANTLR end "interfaceDeclaration"

	partial void EnterRule_normalInterfaceDeclaration();
	partial void LeaveRule_normalInterfaceDeclaration();
	// $ANTLR start "normalInterfaceDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:469:1: normalInterfaceDeclaration : modifiers 'interface' IDENTIFIER ( typeParameters )? ( 'extends' typeList )? interfaceBody ;
	[GrammarRule("normalInterfaceDeclaration")]
	private Antlr3AstNode normalInterfaceDeclaration()
	{
		EnterRule_normalInterfaceDeclaration();
		EnterRule("normalInterfaceDeclaration", 20);
		var retval = new Antlr3AstNode("normalInterfaceDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int normalInterfaceDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal88 = default(IToken);
		IToken IDENTIFIER89 = default(IToken);
		IToken string_literal91 = default(IToken);
		Antlr3AstNode modifiers87 = default(Antlr3AstNode);
		Antlr3AstNode typeParameters90 = default(Antlr3AstNode);
		Antlr3AstNode typeList92 = default(Antlr3AstNode);
		Antlr3AstNode interfaceBody93 = default(Antlr3AstNode);

		object string_literal88_tree = default(object);
		object IDENTIFIER89_tree = default(object);
		object string_literal91_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "normalInterfaceDeclaration");
		DebugLocation(469, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 20)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:470:5: ( modifiers 'interface' IDENTIFIER ( typeParameters )? ( 'extends' typeList )? interfaceBody )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:470:9: modifiers 'interface' IDENTIFIER ( typeParameters )? ( 'extends' typeList )? interfaceBody
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(470, 9);
			PushFollow(Follow._modifiers_in_normalInterfaceDeclaration1444);
			modifiers87=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers87.Tree, modifiers87, "modifiers87", retval);
			DebugLocation(470, 19);
			string_literal88=(IToken)Match(input,INTERFACE,Follow._INTERFACE_in_normalInterfaceDeclaration1446); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal88_tree = (object)adaptor.Create(string_literal88, "string_literal88", retval);
			adaptor.AddChild(root_0, string_literal88_tree);
			}
			DebugLocation(470, 31);
			IDENTIFIER89=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_normalInterfaceDeclaration1448); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER89_tree = (object)adaptor.Create(IDENTIFIER89, "IDENTIFIER89", retval);
			adaptor.AddChild(root_0, IDENTIFIER89_tree);
			}
			DebugLocation(471, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:471:9: ( typeParameters )?
			int alt32=2;
			try { DebugEnterSubRule(32);
			try { DebugEnterDecision(32, false);
			int LA32_1 = input.LA(1);

			if ((LA32_1==LT))
			{
				alt32 = 1;
			}
			} finally { DebugExitDecision(32); }
			switch (alt32)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:471:10: typeParameters
				{
				DebugLocation(471, 10);
				PushFollow(Follow._typeParameters_in_normalInterfaceDeclaration1459);
				typeParameters90=typeParameters();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeParameters90.Tree, typeParameters90, "typeParameters90", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(32); }

			DebugLocation(473, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:473:9: ( 'extends' typeList )?
			int alt33=2;
			try { DebugEnterSubRule(33);
			try { DebugEnterDecision(33, false);
			int LA33_1 = input.LA(1);

			if ((LA33_1==EXTENDS))
			{
				alt33 = 1;
			}
			} finally { DebugExitDecision(33); }
			switch (alt33)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:473:10: 'extends' typeList
				{
				DebugLocation(473, 10);
				string_literal91=(IToken)Match(input,EXTENDS,Follow._EXTENDS_in_normalInterfaceDeclaration1481); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal91_tree = (object)adaptor.Create(string_literal91, "string_literal91", retval);
				adaptor.AddChild(root_0, string_literal91_tree);
				}
				DebugLocation(473, 20);
				PushFollow(Follow._typeList_in_normalInterfaceDeclaration1483);
				typeList92=typeList();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeList92.Tree, typeList92, "typeList92", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(33); }

			DebugLocation(475, 9);
			PushFollow(Follow._interfaceBody_in_normalInterfaceDeclaration1504);
			interfaceBody93=interfaceBody();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceBody93.Tree, interfaceBody93, "interfaceBody93", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("normalInterfaceDeclaration", 20);
			LeaveRule("normalInterfaceDeclaration", 20);
			LeaveRule_normalInterfaceDeclaration();
			if (state.backtracking > 0) { Memoize(input, 20, normalInterfaceDeclaration_StartIndex); }

		}
		DebugLocation(476, 4);
		} finally { DebugExitRule(GrammarFileName, "normalInterfaceDeclaration"); }
		return retval;

	}
	// $ANTLR end "normalInterfaceDeclaration"

	partial void EnterRule_typeList();
	partial void LeaveRule_typeList();
	// $ANTLR start "typeList"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:478:1: typeList : type ( ',' type )* ;
	[GrammarRule("typeList")]
	private Antlr3AstNode typeList()
	{
		EnterRule_typeList();
		EnterRule("typeList", 21);
		var retval = new Antlr3AstNode("typeList");
		
		retval.Start = (IToken)input.LT(1);
		int typeList_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal95 = default(IToken);
		Antlr3AstNode type94 = default(Antlr3AstNode);
		Antlr3AstNode type96 = default(Antlr3AstNode);

		object char_literal95_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeList");
		DebugLocation(478, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 21)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:479:5: ( type ( ',' type )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:479:9: type ( ',' type )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(479, 9);
			PushFollow(Follow._type_in_typeList1524);
			type94=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type94.Tree, type94, "type94", retval);
			DebugLocation(480, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:480:9: ( ',' type )*
			try { DebugEnterSubRule(34);
			while (true)
			{
				int alt34=2;
				try { DebugEnterDecision(34, false);
				int LA34_1 = input.LA(1);

				if ((LA34_1==COMMA))
				{
					alt34 = 1;
				}


				} finally { DebugExitDecision(34); }
				switch ( alt34 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:480:10: ',' type
					{
					DebugLocation(480, 10);
					char_literal95=(IToken)Match(input,COMMA,Follow._COMMA_in_typeList1535); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal95_tree = (object)adaptor.Create(char_literal95, "char_literal95", retval);
					adaptor.AddChild(root_0, char_literal95_tree);
					}
					DebugLocation(480, 14);
					PushFollow(Follow._type_in_typeList1537);
					type96=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type96.Tree, type96, "type96", retval);

					}
					break;

				default:
					goto loop34;
				}
			}

			loop34:
				;

			} finally { DebugExitSubRule(34); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeList", 21);
			LeaveRule("typeList", 21);
			LeaveRule_typeList();
			if (state.backtracking > 0) { Memoize(input, 21, typeList_StartIndex); }

		}
		DebugLocation(482, 4);
		} finally { DebugExitRule(GrammarFileName, "typeList"); }
		return retval;

	}
	// $ANTLR end "typeList"

	partial void EnterRule_classBody();
	partial void LeaveRule_classBody();
	// $ANTLR start "classBody"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:484:1: classBody : '{' ( classBodyDeclaration )* '}' ;
	[GrammarRule("classBody")]
	private Antlr3AstNode classBody()
	{
		EnterRule_classBody();
		EnterRule("classBody", 22);
		var retval = new Antlr3AstNode("classBody");
		
		retval.Start = (IToken)input.LT(1);
		int classBody_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal97 = default(IToken);
		IToken char_literal99 = default(IToken);
		Antlr3AstNode classBodyDeclaration98 = default(Antlr3AstNode);

		object char_literal97_tree = default(object);
		object char_literal99_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "classBody");
		DebugLocation(484, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 22)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:485:5: ( '{' ( classBodyDeclaration )* '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:485:9: '{' ( classBodyDeclaration )* '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(485, 9);
			char_literal97=(IToken)Match(input,LBRACE,Follow._LBRACE_in_classBody1568); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal97_tree = (object)adaptor.Create(char_literal97, "char_literal97", retval);
			adaptor.AddChild(root_0, char_literal97_tree);
			}
			DebugLocation(486, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:486:9: ( classBodyDeclaration )*
			try { DebugEnterSubRule(35);
			while (true)
			{
				int alt35=2;
				try { DebugEnterDecision(35, false);
				int LA35_1 = input.LA(1);

				if ((LA35_1==ABSTRACT||LA35_1==BOOLEAN||LA35_1==BYTE||LA35_1==CHAR||LA35_1==CLASS||LA35_1==DOUBLE||LA35_1==ENUM||LA35_1==FINAL||LA35_1==FLOAT||LA35_1==IDENTIFIER||(LA35_1>=INT && LA35_1<=INTERFACE)||LA35_1==LBRACE||LA35_1==LONG||LA35_1==LT||(LA35_1>=MONKEYS_AT && LA35_1<=NATIVE)||(LA35_1>=PRIVATE && LA35_1<=PUBLIC)||(LA35_1>=SEMI && LA35_1<=SHORT)||(LA35_1>=STATIC && LA35_1<=STRICTFP)||LA35_1==SYNCHRONIZED||LA35_1==TRANSIENT||(LA35_1>=VOID && LA35_1<=VOLATILE)))
				{
					alt35 = 1;
				}


				} finally { DebugExitDecision(35); }
				switch ( alt35 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:486:10: classBodyDeclaration
					{
					DebugLocation(486, 10);
					PushFollow(Follow._classBodyDeclaration_in_classBody1580);
					classBodyDeclaration98=classBodyDeclaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, classBodyDeclaration98.Tree, classBodyDeclaration98, "classBodyDeclaration98", retval);

					}
					break;

				default:
					goto loop35;
				}
			}

			loop35:
				;

			} finally { DebugExitSubRule(35); }

			DebugLocation(488, 9);
			char_literal99=(IToken)Match(input,RBRACE,Follow._RBRACE_in_classBody1602); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal99_tree = (object)adaptor.Create(char_literal99, "char_literal99", retval);
			adaptor.AddChild(root_0, char_literal99_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("classBody", 22);
			LeaveRule("classBody", 22);
			LeaveRule_classBody();
			if (state.backtracking > 0) { Memoize(input, 22, classBody_StartIndex); }

		}
		DebugLocation(489, 4);
		} finally { DebugExitRule(GrammarFileName, "classBody"); }
		return retval;

	}
	// $ANTLR end "classBody"

	partial void EnterRule_interfaceBody();
	partial void LeaveRule_interfaceBody();
	// $ANTLR start "interfaceBody"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:491:1: interfaceBody : '{' ( interfaceBodyDeclaration )* '}' ;
	[GrammarRule("interfaceBody")]
	private Antlr3AstNode interfaceBody()
	{
		EnterRule_interfaceBody();
		EnterRule("interfaceBody", 23);
		var retval = new Antlr3AstNode("interfaceBody");
		
		retval.Start = (IToken)input.LT(1);
		int interfaceBody_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal100 = default(IToken);
		IToken char_literal102 = default(IToken);
		Antlr3AstNode interfaceBodyDeclaration101 = default(Antlr3AstNode);

		object char_literal100_tree = default(object);
		object char_literal102_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interfaceBody");
		DebugLocation(491, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 23)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:492:5: ( '{' ( interfaceBodyDeclaration )* '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:492:9: '{' ( interfaceBodyDeclaration )* '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(492, 9);
			char_literal100=(IToken)Match(input,LBRACE,Follow._LBRACE_in_interfaceBody1622); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal100_tree = (object)adaptor.Create(char_literal100, "char_literal100", retval);
			adaptor.AddChild(root_0, char_literal100_tree);
			}
			DebugLocation(493, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:493:9: ( interfaceBodyDeclaration )*
			try { DebugEnterSubRule(36);
			while (true)
			{
				int alt36=2;
				try { DebugEnterDecision(36, false);
				int LA36_1 = input.LA(1);

				if ((LA36_1==ABSTRACT||LA36_1==BOOLEAN||LA36_1==BYTE||LA36_1==CHAR||LA36_1==CLASS||LA36_1==DOUBLE||LA36_1==ENUM||LA36_1==FINAL||LA36_1==FLOAT||LA36_1==IDENTIFIER||(LA36_1>=INT && LA36_1<=INTERFACE)||LA36_1==LONG||LA36_1==LT||(LA36_1>=MONKEYS_AT && LA36_1<=NATIVE)||(LA36_1>=PRIVATE && LA36_1<=PUBLIC)||(LA36_1>=SEMI && LA36_1<=SHORT)||(LA36_1>=STATIC && LA36_1<=STRICTFP)||LA36_1==SYNCHRONIZED||LA36_1==TRANSIENT||(LA36_1>=VOID && LA36_1<=VOLATILE)))
				{
					alt36 = 1;
				}


				} finally { DebugExitDecision(36); }
				switch ( alt36 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:493:10: interfaceBodyDeclaration
					{
					DebugLocation(493, 10);
					PushFollow(Follow._interfaceBodyDeclaration_in_interfaceBody1634);
					interfaceBodyDeclaration101=interfaceBodyDeclaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceBodyDeclaration101.Tree, interfaceBodyDeclaration101, "interfaceBodyDeclaration101", retval);

					}
					break;

				default:
					goto loop36;
				}
			}

			loop36:
				;

			} finally { DebugExitSubRule(36); }

			DebugLocation(495, 9);
			char_literal102=(IToken)Match(input,RBRACE,Follow._RBRACE_in_interfaceBody1656); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal102_tree = (object)adaptor.Create(char_literal102, "char_literal102", retval);
			adaptor.AddChild(root_0, char_literal102_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interfaceBody", 23);
			LeaveRule("interfaceBody", 23);
			LeaveRule_interfaceBody();
			if (state.backtracking > 0) { Memoize(input, 23, interfaceBody_StartIndex); }

		}
		DebugLocation(496, 4);
		} finally { DebugExitRule(GrammarFileName, "interfaceBody"); }
		return retval;

	}
	// $ANTLR end "interfaceBody"

	partial void EnterRule_classBodyDeclaration();
	partial void LeaveRule_classBodyDeclaration();
	// $ANTLR start "classBodyDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:498:1: classBodyDeclaration : ( ';' | ( 'static' )? block | memberDecl );
	[GrammarRule("classBodyDeclaration")]
	private Antlr3AstNode classBodyDeclaration()
	{
		EnterRule_classBodyDeclaration();
		EnterRule("classBodyDeclaration", 24);
		var retval = new Antlr3AstNode("classBodyDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int classBodyDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal103 = default(IToken);
		IToken string_literal104 = default(IToken);
		Antlr3AstNode block105 = default(Antlr3AstNode);
		Antlr3AstNode memberDecl106 = default(Antlr3AstNode);

		object char_literal103_tree = default(object);
		object string_literal104_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "classBodyDeclaration");
		DebugLocation(498, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 24)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:499:5: ( ';' | ( 'static' )? block | memberDecl )
			int alt38=3;
			try { DebugEnterDecision(38, false);
			switch (input.LA(1))
			{
			case SEMI:
				{
				alt38 = 1;
				}
				break;
			case STATIC:
				{
				int LA38_2 = input.LA(2);

				if ((LA38_2==LBRACE))
				{
					alt38 = 2;
				}
				else if ((LA38_2==ABSTRACT||LA38_2==BOOLEAN||LA38_2==BYTE||LA38_2==CHAR||LA38_2==CLASS||LA38_2==DOUBLE||LA38_2==ENUM||LA38_2==FINAL||LA38_2==FLOAT||LA38_2==IDENTIFIER||(LA38_2>=INT && LA38_2<=INTERFACE)||LA38_2==LONG||LA38_2==LT||(LA38_2>=MONKEYS_AT && LA38_2<=NATIVE)||(LA38_2>=PRIVATE && LA38_2<=PUBLIC)||LA38_2==SHORT||(LA38_2>=STATIC && LA38_2<=STRICTFP)||LA38_2==SYNCHRONIZED||LA38_2==TRANSIENT||(LA38_2>=VOID && LA38_2<=VOLATILE)))
				{
					alt38 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 38, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case LBRACE:
				{
				alt38 = 2;
				}
				break;
			case ABSTRACT:
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case CLASS:
			case DOUBLE:
			case ENUM:
			case FINAL:
			case FLOAT:
			case IDENTIFIER:
			case INT:
			case INTERFACE:
			case LONG:
			case LT:
			case MONKEYS_AT:
			case NATIVE:
			case PRIVATE:
			case PROTECTED:
			case PUBLIC:
			case SHORT:
			case STRICTFP:
			case SYNCHRONIZED:
			case TRANSIENT:
			case VOID:
			case VOLATILE:
				{
				alt38 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 38, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(38); }
			switch (alt38)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:499:9: ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(499, 9);
				char_literal103=(IToken)Match(input,SEMI,Follow._SEMI_in_classBodyDeclaration1676); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal103_tree = (object)adaptor.Create(char_literal103, "char_literal103", retval);
				adaptor.AddChild(root_0, char_literal103_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:500:9: ( 'static' )? block
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(500, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:500:9: ( 'static' )?
				int alt37=2;
				try { DebugEnterSubRule(37);
				try { DebugEnterDecision(37, false);
				int LA37_1 = input.LA(1);

				if ((LA37_1==STATIC))
				{
					alt37 = 1;
				}
				} finally { DebugExitDecision(37); }
				switch (alt37)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:500:10: 'static'
					{
					DebugLocation(500, 10);
					string_literal104=(IToken)Match(input,STATIC,Follow._STATIC_in_classBodyDeclaration1687); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal104_tree = (object)adaptor.Create(string_literal104, "string_literal104", retval);
					adaptor.AddChild(root_0, string_literal104_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(37); }

				DebugLocation(502, 9);
				PushFollow(Follow._block_in_classBodyDeclaration1709);
				block105=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block105.Tree, block105, "block105", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:503:9: memberDecl
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(503, 9);
				PushFollow(Follow._memberDecl_in_classBodyDeclaration1719);
				memberDecl106=memberDecl();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, memberDecl106.Tree, memberDecl106, "memberDecl106", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("classBodyDeclaration", 24);
			LeaveRule("classBodyDeclaration", 24);
			LeaveRule_classBodyDeclaration();
			if (state.backtracking > 0) { Memoize(input, 24, classBodyDeclaration_StartIndex); }

		}
		DebugLocation(504, 4);
		} finally { DebugExitRule(GrammarFileName, "classBodyDeclaration"); }
		return retval;

	}
	// $ANTLR end "classBodyDeclaration"

	partial void EnterRule_memberDecl();
	partial void LeaveRule_memberDecl();
	// $ANTLR start "memberDecl"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:506:1: memberDecl : ( fieldDeclaration | methodDeclaration | classDeclaration | interfaceDeclaration );
	[GrammarRule("memberDecl")]
	private Antlr3AstNode memberDecl()
	{
		EnterRule_memberDecl();
		EnterRule("memberDecl", 25);
		var retval = new Antlr3AstNode("memberDecl");
		
		retval.Start = (IToken)input.LT(1);
		int memberDecl_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode fieldDeclaration107 = default(Antlr3AstNode);
		Antlr3AstNode methodDeclaration108 = default(Antlr3AstNode);
		Antlr3AstNode classDeclaration109 = default(Antlr3AstNode);
		Antlr3AstNode interfaceDeclaration110 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "memberDecl");
		DebugLocation(506, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 25)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:507:5: ( fieldDeclaration | methodDeclaration | classDeclaration | interfaceDeclaration )
			int alt39=4;
			try { DebugEnterDecision(39, false);
			switch (input.LA(1))
			{
			case MONKEYS_AT:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else if ((EvaluatePredicate(synpred54_Java_fragment)))
				{
					alt39 = 3;
				}
				else if ((true))
				{
					alt39 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PUBLIC:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else if ((EvaluatePredicate(synpred54_Java_fragment)))
				{
					alt39 = 3;
				}
				else if ((true))
				{
					alt39 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PROTECTED:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else if ((EvaluatePredicate(synpred54_Java_fragment)))
				{
					alt39 = 3;
				}
				else if ((true))
				{
					alt39 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PRIVATE:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else if ((EvaluatePredicate(synpred54_Java_fragment)))
				{
					alt39 = 3;
				}
				else if ((true))
				{
					alt39 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STATIC:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else if ((EvaluatePredicate(synpred54_Java_fragment)))
				{
					alt39 = 3;
				}
				else if ((true))
				{
					alt39 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case ABSTRACT:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else if ((EvaluatePredicate(synpred54_Java_fragment)))
				{
					alt39 = 3;
				}
				else if ((true))
				{
					alt39 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case FINAL:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else if ((EvaluatePredicate(synpred54_Java_fragment)))
				{
					alt39 = 3;
				}
				else if ((true))
				{
					alt39 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 7, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case NATIVE:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else if ((EvaluatePredicate(synpred54_Java_fragment)))
				{
					alt39 = 3;
				}
				else if ((true))
				{
					alt39 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 8, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case SYNCHRONIZED:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else if ((EvaluatePredicate(synpred54_Java_fragment)))
				{
					alt39 = 3;
				}
				else if ((true))
				{
					alt39 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 9, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case TRANSIENT:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else if ((EvaluatePredicate(synpred54_Java_fragment)))
				{
					alt39 = 3;
				}
				else if ((true))
				{
					alt39 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 10, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case VOLATILE:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else if ((EvaluatePredicate(synpred54_Java_fragment)))
				{
					alt39 = 3;
				}
				else if ((true))
				{
					alt39 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STRICTFP:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else if ((EvaluatePredicate(synpred54_Java_fragment)))
				{
					alt39 = 3;
				}
				else if ((true))
				{
					alt39 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 12, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case IDENTIFIER:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 13, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 14, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case LT:
			case VOID:
				{
				alt39 = 2;
				}
				break;
			case CLASS:
			case ENUM:
				{
				alt39 = 3;
				}
				break;
			case INTERFACE:
				{
				alt39 = 4;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(39); }
			switch (alt39)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:507:10: fieldDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(507, 10);
				PushFollow(Follow._fieldDeclaration_in_memberDecl1740);
				fieldDeclaration107=fieldDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, fieldDeclaration107.Tree, fieldDeclaration107, "fieldDeclaration107", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:508:10: methodDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(508, 10);
				PushFollow(Follow._methodDeclaration_in_memberDecl1751);
				methodDeclaration108=methodDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, methodDeclaration108.Tree, methodDeclaration108, "methodDeclaration108", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:509:10: classDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(509, 10);
				PushFollow(Follow._classDeclaration_in_memberDecl1762);
				classDeclaration109=classDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classDeclaration109.Tree, classDeclaration109, "classDeclaration109", retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:510:10: interfaceDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(510, 10);
				PushFollow(Follow._interfaceDeclaration_in_memberDecl1773);
				interfaceDeclaration110=interfaceDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceDeclaration110.Tree, interfaceDeclaration110, "interfaceDeclaration110", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("memberDecl", 25);
			LeaveRule("memberDecl", 25);
			LeaveRule_memberDecl();
			if (state.backtracking > 0) { Memoize(input, 25, memberDecl_StartIndex); }

		}
		DebugLocation(511, 4);
		} finally { DebugExitRule(GrammarFileName, "memberDecl"); }
		return retval;

	}
	// $ANTLR end "memberDecl"

	partial void EnterRule_methodDeclaration();
	partial void LeaveRule_methodDeclaration();
	// $ANTLR start "methodDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:514:1: methodDeclaration : ( modifiers ( typeParameters )? IDENTIFIER formalParameters ( 'throws' qualifiedNameList )? '{' ( explicitConstructorInvocation )? ( blockStatement )* '}' | modifiers ( typeParameters )? ( type | 'void' ) IDENTIFIER formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ( block | ';' ) );
	[GrammarRule("methodDeclaration")]
	private Antlr3AstNode methodDeclaration()
	{
		EnterRule_methodDeclaration();
		EnterRule("methodDeclaration", 26);
		var retval = new Antlr3AstNode("methodDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int methodDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER113 = default(IToken);
		IToken string_literal115 = default(IToken);
		IToken char_literal117 = default(IToken);
		IToken char_literal120 = default(IToken);
		IToken string_literal124 = default(IToken);
		IToken IDENTIFIER125 = default(IToken);
		IToken char_literal127 = default(IToken);
		IToken char_literal128 = default(IToken);
		IToken string_literal129 = default(IToken);
		IToken char_literal132 = default(IToken);
		Antlr3AstNode modifiers111 = default(Antlr3AstNode);
		Antlr3AstNode typeParameters112 = default(Antlr3AstNode);
		Antlr3AstNode formalParameters114 = default(Antlr3AstNode);
		Antlr3AstNode qualifiedNameList116 = default(Antlr3AstNode);
		Antlr3AstNode explicitConstructorInvocation118 = default(Antlr3AstNode);
		Antlr3AstNode blockStatement119 = default(Antlr3AstNode);
		Antlr3AstNode modifiers121 = default(Antlr3AstNode);
		Antlr3AstNode typeParameters122 = default(Antlr3AstNode);
		Antlr3AstNode type123 = default(Antlr3AstNode);
		Antlr3AstNode formalParameters126 = default(Antlr3AstNode);
		Antlr3AstNode qualifiedNameList130 = default(Antlr3AstNode);
		Antlr3AstNode block131 = default(Antlr3AstNode);

		object IDENTIFIER113_tree = default(object);
		object string_literal115_tree = default(object);
		object char_literal117_tree = default(object);
		object char_literal120_tree = default(object);
		object string_literal124_tree = default(object);
		object IDENTIFIER125_tree = default(object);
		object char_literal127_tree = default(object);
		object char_literal128_tree = default(object);
		object string_literal129_tree = default(object);
		object char_literal132_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "methodDeclaration");
		DebugLocation(514, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 26)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:515:5: ( modifiers ( typeParameters )? IDENTIFIER formalParameters ( 'throws' qualifiedNameList )? '{' ( explicitConstructorInvocation )? ( blockStatement )* '}' | modifiers ( typeParameters )? ( type | 'void' ) IDENTIFIER formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ( block | ';' ) )
			int alt49=2;
			try { DebugEnterDecision(49, false);
			switch (input.LA(1))
			{
			case MONKEYS_AT:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PUBLIC:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PROTECTED:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PRIVATE:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STATIC:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case ABSTRACT:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case FINAL:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 7, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case NATIVE:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 8, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case SYNCHRONIZED:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 9, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case TRANSIENT:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 10, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case VOLATILE:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STRICTFP:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 12, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case LT:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 13, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case IDENTIFIER:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 14, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
			case VOID:
				{
				alt49 = 2;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(49); }
			switch (alt49)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:517:10: modifiers ( typeParameters )? IDENTIFIER formalParameters ( 'throws' qualifiedNameList )? '{' ( explicitConstructorInvocation )? ( blockStatement )* '}'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(517, 10);
				PushFollow(Follow._modifiers_in_methodDeclaration1811);
				modifiers111=modifiers();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers111.Tree, modifiers111, "modifiers111", retval);
				DebugLocation(518, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:518:9: ( typeParameters )?
				int alt40=2;
				try { DebugEnterSubRule(40);
				try { DebugEnterDecision(40, false);
				int LA40_1 = input.LA(1);

				if ((LA40_1==LT))
				{
					alt40 = 1;
				}
				} finally { DebugExitDecision(40); }
				switch (alt40)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:518:10: typeParameters
					{
					DebugLocation(518, 10);
					PushFollow(Follow._typeParameters_in_methodDeclaration1822);
					typeParameters112=typeParameters();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, typeParameters112.Tree, typeParameters112, "typeParameters112", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(40); }

				DebugLocation(520, 9);
				IDENTIFIER113=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_methodDeclaration1843); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER113_tree = (object)adaptor.Create(IDENTIFIER113, "IDENTIFIER113", retval);
				adaptor.AddChild(root_0, IDENTIFIER113_tree);
				}
				DebugLocation(521, 9);
				PushFollow(Follow._formalParameters_in_methodDeclaration1853);
				formalParameters114=formalParameters();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, formalParameters114.Tree, formalParameters114, "formalParameters114", retval);
				DebugLocation(522, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:522:9: ( 'throws' qualifiedNameList )?
				int alt41=2;
				try { DebugEnterSubRule(41);
				try { DebugEnterDecision(41, false);
				int LA41_1 = input.LA(1);

				if ((LA41_1==THROWS))
				{
					alt41 = 1;
				}
				} finally { DebugExitDecision(41); }
				switch (alt41)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:522:10: 'throws' qualifiedNameList
					{
					DebugLocation(522, 10);
					string_literal115=(IToken)Match(input,THROWS,Follow._THROWS_in_methodDeclaration1864); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal115_tree = (object)adaptor.Create(string_literal115, "string_literal115", retval);
					adaptor.AddChild(root_0, string_literal115_tree);
					}
					DebugLocation(522, 19);
					PushFollow(Follow._qualifiedNameList_in_methodDeclaration1866);
					qualifiedNameList116=qualifiedNameList();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedNameList116.Tree, qualifiedNameList116, "qualifiedNameList116", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(41); }

				DebugLocation(524, 9);
				char_literal117=(IToken)Match(input,LBRACE,Follow._LBRACE_in_methodDeclaration1887); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal117_tree = (object)adaptor.Create(char_literal117, "char_literal117", retval);
				adaptor.AddChild(root_0, char_literal117_tree);
				}
				DebugLocation(525, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:525:9: ( explicitConstructorInvocation )?
				int alt42=2;
				try { DebugEnterSubRule(42);
				try { DebugEnterDecision(42, false);
				switch (input.LA(1))
				{
				case LT:
					{
					alt42 = 1;
					}
					break;
				case THIS:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case LPAREN:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case SUPER:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case IDENTIFIER:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case INTLITERAL:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case LONGLITERAL:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case FLOATLITERAL:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case DOUBLELITERAL:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case CHARLITERAL:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case STRINGLITERAL:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case TRUE:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case FALSE:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case NULL:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case NEW:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case BOOLEAN:
				case BYTE:
				case CHAR:
				case DOUBLE:
				case FLOAT:
				case INT:
				case LONG:
				case SHORT:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case VOID:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				}

				} finally { DebugExitDecision(42); }
				switch (alt42)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:525:10: explicitConstructorInvocation
					{
					DebugLocation(525, 10);
					PushFollow(Follow._explicitConstructorInvocation_in_methodDeclaration1899);
					explicitConstructorInvocation118=explicitConstructorInvocation();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, explicitConstructorInvocation118.Tree, explicitConstructorInvocation118, "explicitConstructorInvocation118", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(42); }

				DebugLocation(527, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:527:9: ( blockStatement )*
				try { DebugEnterSubRule(43);
				while (true)
				{
					int alt43=2;
					try { DebugEnterDecision(43, false);
					int LA43_1 = input.LA(1);

					if ((LA43_1==EOF||LA43_1==ABSTRACT||(LA43_1>=ASSERT && LA43_1<=BANG)||(LA43_1>=BOOLEAN && LA43_1<=BYTE)||(LA43_1>=CHAR && LA43_1<=CLASS)||LA43_1==CONTINUE||LA43_1==DO||(LA43_1>=DOUBLE && LA43_1<=DOUBLELITERAL)||LA43_1==ENUM||(LA43_1>=FALSE && LA43_1<=FINAL)||(LA43_1>=FLOAT && LA43_1<=FOR)||(LA43_1>=IDENTIFIER && LA43_1<=IF)||(LA43_1>=INT && LA43_1<=INTLITERAL)||LA43_1==LBRACE||(LA43_1>=LONG && LA43_1<=LT)||(LA43_1>=MONKEYS_AT && LA43_1<=NULL)||LA43_1==PLUS||(LA43_1>=PLUSPLUS && LA43_1<=PUBLIC)||LA43_1==RETURN||(LA43_1>=SEMI && LA43_1<=SHORT)||(LA43_1>=STATIC && LA43_1<=SUB)||(LA43_1>=SUBSUB && LA43_1<=SYNCHRONIZED)||(LA43_1>=THIS && LA43_1<=THROW)||(LA43_1>=TILDE && LA43_1<=TRY)||(LA43_1>=VOID && LA43_1<=WHILE)))
					{
						alt43 = 1;
					}


					} finally { DebugExitDecision(43); }
					switch ( alt43 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:527:10: blockStatement
						{
						DebugLocation(527, 10);
						PushFollow(Follow._blockStatement_in_methodDeclaration1921);
						blockStatement119=blockStatement();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, blockStatement119.Tree, blockStatement119, "blockStatement119", retval);

						}
						break;

					default:
						goto loop43;
					}
				}

				loop43:
					;

				} finally { DebugExitSubRule(43); }

				DebugLocation(529, 9);
				char_literal120=(IToken)Match(input,RBRACE,Follow._RBRACE_in_methodDeclaration1942); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal120_tree = (object)adaptor.Create(char_literal120, "char_literal120", retval);
				adaptor.AddChild(root_0, char_literal120_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:530:9: modifiers ( typeParameters )? ( type | 'void' ) IDENTIFIER formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ( block | ';' )
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(530, 9);
				PushFollow(Follow._modifiers_in_methodDeclaration1952);
				modifiers121=modifiers();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers121.Tree, modifiers121, "modifiers121", retval);
				DebugLocation(531, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:531:9: ( typeParameters )?
				int alt44=2;
				try { DebugEnterSubRule(44);
				try { DebugEnterDecision(44, false);
				int LA44_1 = input.LA(1);

				if ((LA44_1==LT))
				{
					alt44 = 1;
				}
				} finally { DebugExitDecision(44); }
				switch (alt44)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:531:10: typeParameters
					{
					DebugLocation(531, 10);
					PushFollow(Follow._typeParameters_in_methodDeclaration1963);
					typeParameters122=typeParameters();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, typeParameters122.Tree, typeParameters122, "typeParameters122", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(44); }

				DebugLocation(533, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:533:9: ( type | 'void' )
				int alt45=2;
				try { DebugEnterSubRule(45);
				try { DebugEnterDecision(45, false);
				int LA45_1 = input.LA(1);

				if ((LA45_1==BOOLEAN||LA45_1==BYTE||LA45_1==CHAR||LA45_1==DOUBLE||LA45_1==FLOAT||LA45_1==IDENTIFIER||LA45_1==INT||LA45_1==LONG||LA45_1==SHORT))
				{
					alt45 = 1;
				}
				else if ((LA45_1==VOID))
				{
					alt45 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 45, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(45); }
				switch (alt45)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:533:10: type
					{
					DebugLocation(533, 10);
					PushFollow(Follow._type_in_methodDeclaration1985);
					type123=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type123.Tree, type123, "type123", retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:534:13: 'void'
					{
					DebugLocation(534, 13);
					string_literal124=(IToken)Match(input,VOID,Follow._VOID_in_methodDeclaration1999); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal124_tree = (object)adaptor.Create(string_literal124, "string_literal124", retval);
					adaptor.AddChild(root_0, string_literal124_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(45); }

				DebugLocation(536, 9);
				IDENTIFIER125=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_methodDeclaration2019); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER125_tree = (object)adaptor.Create(IDENTIFIER125, "IDENTIFIER125", retval);
				adaptor.AddChild(root_0, IDENTIFIER125_tree);
				}
				DebugLocation(537, 9);
				PushFollow(Follow._formalParameters_in_methodDeclaration2029);
				formalParameters126=formalParameters();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, formalParameters126.Tree, formalParameters126, "formalParameters126", retval);
				DebugLocation(538, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:538:9: ( '[' ']' )*
				try { DebugEnterSubRule(46);
				while (true)
				{
					int alt46=2;
					try { DebugEnterDecision(46, false);
					int LA46_1 = input.LA(1);

					if ((LA46_1==LBRACKET))
					{
						alt46 = 1;
					}


					} finally { DebugExitDecision(46); }
					switch ( alt46 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:538:10: '[' ']'
						{
						DebugLocation(538, 10);
						char_literal127=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_methodDeclaration2040); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal127_tree = (object)adaptor.Create(char_literal127, "char_literal127", retval);
						adaptor.AddChild(root_0, char_literal127_tree);
						}
						DebugLocation(538, 14);
						char_literal128=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_methodDeclaration2042); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal128_tree = (object)adaptor.Create(char_literal128, "char_literal128", retval);
						adaptor.AddChild(root_0, char_literal128_tree);
						}

						}
						break;

					default:
						goto loop46;
					}
				}

				loop46:
					;

				} finally { DebugExitSubRule(46); }

				DebugLocation(540, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:540:9: ( 'throws' qualifiedNameList )?
				int alt47=2;
				try { DebugEnterSubRule(47);
				try { DebugEnterDecision(47, false);
				int LA47_1 = input.LA(1);

				if ((LA47_1==THROWS))
				{
					alt47 = 1;
				}
				} finally { DebugExitDecision(47); }
				switch (alt47)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:540:10: 'throws' qualifiedNameList
					{
					DebugLocation(540, 10);
					string_literal129=(IToken)Match(input,THROWS,Follow._THROWS_in_methodDeclaration2064); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal129_tree = (object)adaptor.Create(string_literal129, "string_literal129", retval);
					adaptor.AddChild(root_0, string_literal129_tree);
					}
					DebugLocation(540, 19);
					PushFollow(Follow._qualifiedNameList_in_methodDeclaration2066);
					qualifiedNameList130=qualifiedNameList();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedNameList130.Tree, qualifiedNameList130, "qualifiedNameList130", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(47); }

				DebugLocation(542, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:542:9: ( block | ';' )
				int alt48=2;
				try { DebugEnterSubRule(48);
				try { DebugEnterDecision(48, false);
				int LA48_1 = input.LA(1);

				if ((LA48_1==LBRACE))
				{
					alt48 = 1;
				}
				else if ((LA48_1==SEMI))
				{
					alt48 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 48, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(48); }
				switch (alt48)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:543:13: block
					{
					DebugLocation(543, 13);
					PushFollow(Follow._block_in_methodDeclaration2121);
					block131=block();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, block131.Tree, block131, "block131", retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:544:13: ';'
					{
					DebugLocation(544, 13);
					char_literal132=(IToken)Match(input,SEMI,Follow._SEMI_in_methodDeclaration2135); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal132_tree = (object)adaptor.Create(char_literal132, "char_literal132", retval);
					adaptor.AddChild(root_0, char_literal132_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(48); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("methodDeclaration", 26);
			LeaveRule("methodDeclaration", 26);
			LeaveRule_methodDeclaration();
			if (state.backtracking > 0) { Memoize(input, 26, methodDeclaration_StartIndex); }

		}
		DebugLocation(546, 4);
		} finally { DebugExitRule(GrammarFileName, "methodDeclaration"); }
		return retval;

	}
	// $ANTLR end "methodDeclaration"

	partial void EnterRule_fieldDeclaration();
	partial void LeaveRule_fieldDeclaration();
	// $ANTLR start "fieldDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:549:1: fieldDeclaration : modifiers type variableDeclarator ( ',' variableDeclarator )* ';' ;
	[GrammarRule("fieldDeclaration")]
	private Antlr3AstNode fieldDeclaration()
	{
		EnterRule_fieldDeclaration();
		EnterRule("fieldDeclaration", 27);
		var retval = new Antlr3AstNode("fieldDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int fieldDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal136 = default(IToken);
		IToken char_literal138 = default(IToken);
		Antlr3AstNode modifiers133 = default(Antlr3AstNode);
		Antlr3AstNode type134 = default(Antlr3AstNode);
		Antlr3AstNode variableDeclarator135 = default(Antlr3AstNode);
		Antlr3AstNode variableDeclarator137 = default(Antlr3AstNode);

		object char_literal136_tree = default(object);
		object char_literal138_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "fieldDeclaration");
		DebugLocation(549, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 27)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:550:5: ( modifiers type variableDeclarator ( ',' variableDeclarator )* ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:550:9: modifiers type variableDeclarator ( ',' variableDeclarator )* ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(550, 9);
			PushFollow(Follow._modifiers_in_fieldDeclaration2167);
			modifiers133=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers133.Tree, modifiers133, "modifiers133", retval);
			DebugLocation(551, 9);
			PushFollow(Follow._type_in_fieldDeclaration2177);
			type134=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type134.Tree, type134, "type134", retval);
			DebugLocation(552, 9);
			PushFollow(Follow._variableDeclarator_in_fieldDeclaration2187);
			variableDeclarator135=variableDeclarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableDeclarator135.Tree, variableDeclarator135, "variableDeclarator135", retval);
			DebugLocation(553, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:553:9: ( ',' variableDeclarator )*
			try { DebugEnterSubRule(50);
			while (true)
			{
				int alt50=2;
				try { DebugEnterDecision(50, false);
				int LA50_1 = input.LA(1);

				if ((LA50_1==COMMA))
				{
					alt50 = 1;
				}


				} finally { DebugExitDecision(50); }
				switch ( alt50 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:553:10: ',' variableDeclarator
					{
					DebugLocation(553, 10);
					char_literal136=(IToken)Match(input,COMMA,Follow._COMMA_in_fieldDeclaration2198); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal136_tree = (object)adaptor.Create(char_literal136, "char_literal136", retval);
					adaptor.AddChild(root_0, char_literal136_tree);
					}
					DebugLocation(553, 14);
					PushFollow(Follow._variableDeclarator_in_fieldDeclaration2200);
					variableDeclarator137=variableDeclarator();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, variableDeclarator137.Tree, variableDeclarator137, "variableDeclarator137", retval);

					}
					break;

				default:
					goto loop50;
				}
			}

			loop50:
				;

			} finally { DebugExitSubRule(50); }

			DebugLocation(555, 9);
			char_literal138=(IToken)Match(input,SEMI,Follow._SEMI_in_fieldDeclaration2221); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal138_tree = (object)adaptor.Create(char_literal138, "char_literal138", retval);
			adaptor.AddChild(root_0, char_literal138_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("fieldDeclaration", 27);
			LeaveRule("fieldDeclaration", 27);
			LeaveRule_fieldDeclaration();
			if (state.backtracking > 0) { Memoize(input, 27, fieldDeclaration_StartIndex); }

		}
		DebugLocation(556, 4);
		} finally { DebugExitRule(GrammarFileName, "fieldDeclaration"); }
		return retval;

	}
	// $ANTLR end "fieldDeclaration"

	partial void EnterRule_variableDeclarator();
	partial void LeaveRule_variableDeclarator();
	// $ANTLR start "variableDeclarator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:558:1: variableDeclarator : IDENTIFIER ( '[' ']' )* ( '=' variableInitializer )? ;
	[GrammarRule("variableDeclarator")]
	private Antlr3AstNode variableDeclarator()
	{
		EnterRule_variableDeclarator();
		EnterRule("variableDeclarator", 28);
		var retval = new Antlr3AstNode("variableDeclarator");
		
		retval.Start = (IToken)input.LT(1);
		int variableDeclarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER139 = default(IToken);
		IToken char_literal140 = default(IToken);
		IToken char_literal141 = default(IToken);
		IToken char_literal142 = default(IToken);
		Antlr3AstNode variableInitializer143 = default(Antlr3AstNode);

		object IDENTIFIER139_tree = default(object);
		object char_literal140_tree = default(object);
		object char_literal141_tree = default(object);
		object char_literal142_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "variableDeclarator");
		DebugLocation(558, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 28)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:559:5: ( IDENTIFIER ( '[' ']' )* ( '=' variableInitializer )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:559:9: IDENTIFIER ( '[' ']' )* ( '=' variableInitializer )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(559, 9);
			IDENTIFIER139=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_variableDeclarator2241); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER139_tree = (object)adaptor.Create(IDENTIFIER139, "IDENTIFIER139", retval);
			adaptor.AddChild(root_0, IDENTIFIER139_tree);
			}
			DebugLocation(560, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:560:9: ( '[' ']' )*
			try { DebugEnterSubRule(51);
			while (true)
			{
				int alt51=2;
				try { DebugEnterDecision(51, false);
				int LA51_1 = input.LA(1);

				if ((LA51_1==LBRACKET))
				{
					alt51 = 1;
				}


				} finally { DebugExitDecision(51); }
				switch ( alt51 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:560:10: '[' ']'
					{
					DebugLocation(560, 10);
					char_literal140=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_variableDeclarator2252); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal140_tree = (object)adaptor.Create(char_literal140, "char_literal140", retval);
					adaptor.AddChild(root_0, char_literal140_tree);
					}
					DebugLocation(560, 14);
					char_literal141=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_variableDeclarator2254); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal141_tree = (object)adaptor.Create(char_literal141, "char_literal141", retval);
					adaptor.AddChild(root_0, char_literal141_tree);
					}

					}
					break;

				default:
					goto loop51;
				}
			}

			loop51:
				;

			} finally { DebugExitSubRule(51); }

			DebugLocation(562, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:562:9: ( '=' variableInitializer )?
			int alt52=2;
			try { DebugEnterSubRule(52);
			try { DebugEnterDecision(52, false);
			int LA52_1 = input.LA(1);

			if ((LA52_1==EQ))
			{
				alt52 = 1;
			}
			} finally { DebugExitDecision(52); }
			switch (alt52)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:562:10: '=' variableInitializer
				{
				DebugLocation(562, 10);
				char_literal142=(IToken)Match(input,EQ,Follow._EQ_in_variableDeclarator2276); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal142_tree = (object)adaptor.Create(char_literal142, "char_literal142", retval);
				adaptor.AddChild(root_0, char_literal142_tree);
				}
				DebugLocation(562, 14);
				PushFollow(Follow._variableInitializer_in_variableDeclarator2278);
				variableInitializer143=variableInitializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variableInitializer143.Tree, variableInitializer143, "variableInitializer143", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(52); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variableDeclarator", 28);
			LeaveRule("variableDeclarator", 28);
			LeaveRule_variableDeclarator();
			if (state.backtracking > 0) { Memoize(input, 28, variableDeclarator_StartIndex); }

		}
		DebugLocation(564, 4);
		} finally { DebugExitRule(GrammarFileName, "variableDeclarator"); }
		return retval;

	}
	// $ANTLR end "variableDeclarator"

	partial void EnterRule_interfaceBodyDeclaration();
	partial void LeaveRule_interfaceBodyDeclaration();
	// $ANTLR start "interfaceBodyDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:569:1: interfaceBodyDeclaration : ( interfaceFieldDeclaration | interfaceMethodDeclaration | interfaceDeclaration | classDeclaration | ';' );
	[GrammarRule("interfaceBodyDeclaration")]
	private Antlr3AstNode interfaceBodyDeclaration()
	{
		EnterRule_interfaceBodyDeclaration();
		EnterRule("interfaceBodyDeclaration", 29);
		var retval = new Antlr3AstNode("interfaceBodyDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int interfaceBodyDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal148 = default(IToken);
		Antlr3AstNode interfaceFieldDeclaration144 = default(Antlr3AstNode);
		Antlr3AstNode interfaceMethodDeclaration145 = default(Antlr3AstNode);
		Antlr3AstNode interfaceDeclaration146 = default(Antlr3AstNode);
		Antlr3AstNode classDeclaration147 = default(Antlr3AstNode);

		object char_literal148_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interfaceBodyDeclaration");
		DebugLocation(569, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 29)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:570:5: ( interfaceFieldDeclaration | interfaceMethodDeclaration | interfaceDeclaration | classDeclaration | ';' )
			int alt53=5;
			try { DebugEnterDecision(53, false);
			switch (input.LA(1))
			{
			case MONKEYS_AT:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else if ((EvaluatePredicate(synpred70_Java_fragment)))
				{
					alt53 = 3;
				}
				else if ((EvaluatePredicate(synpred71_Java_fragment)))
				{
					alt53 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PUBLIC:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else if ((EvaluatePredicate(synpred70_Java_fragment)))
				{
					alt53 = 3;
				}
				else if ((EvaluatePredicate(synpred71_Java_fragment)))
				{
					alt53 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PROTECTED:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else if ((EvaluatePredicate(synpred70_Java_fragment)))
				{
					alt53 = 3;
				}
				else if ((EvaluatePredicate(synpred71_Java_fragment)))
				{
					alt53 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PRIVATE:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else if ((EvaluatePredicate(synpred70_Java_fragment)))
				{
					alt53 = 3;
				}
				else if ((EvaluatePredicate(synpred71_Java_fragment)))
				{
					alt53 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STATIC:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else if ((EvaluatePredicate(synpred70_Java_fragment)))
				{
					alt53 = 3;
				}
				else if ((EvaluatePredicate(synpred71_Java_fragment)))
				{
					alt53 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case ABSTRACT:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else if ((EvaluatePredicate(synpred70_Java_fragment)))
				{
					alt53 = 3;
				}
				else if ((EvaluatePredicate(synpred71_Java_fragment)))
				{
					alt53 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case FINAL:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else if ((EvaluatePredicate(synpred70_Java_fragment)))
				{
					alt53 = 3;
				}
				else if ((EvaluatePredicate(synpred71_Java_fragment)))
				{
					alt53 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 7, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case NATIVE:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else if ((EvaluatePredicate(synpred70_Java_fragment)))
				{
					alt53 = 3;
				}
				else if ((EvaluatePredicate(synpred71_Java_fragment)))
				{
					alt53 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 8, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case SYNCHRONIZED:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else if ((EvaluatePredicate(synpred70_Java_fragment)))
				{
					alt53 = 3;
				}
				else if ((EvaluatePredicate(synpred71_Java_fragment)))
				{
					alt53 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 9, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case TRANSIENT:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else if ((EvaluatePredicate(synpred70_Java_fragment)))
				{
					alt53 = 3;
				}
				else if ((EvaluatePredicate(synpred71_Java_fragment)))
				{
					alt53 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 10, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case VOLATILE:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else if ((EvaluatePredicate(synpred70_Java_fragment)))
				{
					alt53 = 3;
				}
				else if ((EvaluatePredicate(synpred71_Java_fragment)))
				{
					alt53 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STRICTFP:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else if ((EvaluatePredicate(synpred70_Java_fragment)))
				{
					alt53 = 3;
				}
				else if ((EvaluatePredicate(synpred71_Java_fragment)))
				{
					alt53 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 12, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case IDENTIFIER:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 13, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 14, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case LT:
			case VOID:
				{
				alt53 = 2;
				}
				break;
			case INTERFACE:
				{
				alt53 = 3;
				}
				break;
			case CLASS:
			case ENUM:
				{
				alt53 = 4;
				}
				break;
			case SEMI:
				{
				alt53 = 5;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(53); }
			switch (alt53)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:571:9: interfaceFieldDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(571, 9);
				PushFollow(Follow._interfaceFieldDeclaration_in_interfaceBodyDeclaration2317);
				interfaceFieldDeclaration144=interfaceFieldDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceFieldDeclaration144.Tree, interfaceFieldDeclaration144, "interfaceFieldDeclaration144", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:572:9: interfaceMethodDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(572, 9);
				PushFollow(Follow._interfaceMethodDeclaration_in_interfaceBodyDeclaration2327);
				interfaceMethodDeclaration145=interfaceMethodDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceMethodDeclaration145.Tree, interfaceMethodDeclaration145, "interfaceMethodDeclaration145", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:573:9: interfaceDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(573, 9);
				PushFollow(Follow._interfaceDeclaration_in_interfaceBodyDeclaration2337);
				interfaceDeclaration146=interfaceDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceDeclaration146.Tree, interfaceDeclaration146, "interfaceDeclaration146", retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:574:9: classDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(574, 9);
				PushFollow(Follow._classDeclaration_in_interfaceBodyDeclaration2347);
				classDeclaration147=classDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classDeclaration147.Tree, classDeclaration147, "classDeclaration147", retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:575:9: ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(575, 9);
				char_literal148=(IToken)Match(input,SEMI,Follow._SEMI_in_interfaceBodyDeclaration2357); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal148_tree = (object)adaptor.Create(char_literal148, "char_literal148", retval);
				adaptor.AddChild(root_0, char_literal148_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interfaceBodyDeclaration", 29);
			LeaveRule("interfaceBodyDeclaration", 29);
			LeaveRule_interfaceBodyDeclaration();
			if (state.backtracking > 0) { Memoize(input, 29, interfaceBodyDeclaration_StartIndex); }

		}
		DebugLocation(576, 4);
		} finally { DebugExitRule(GrammarFileName, "interfaceBodyDeclaration"); }
		return retval;

	}
	// $ANTLR end "interfaceBodyDeclaration"

	partial void EnterRule_interfaceMethodDeclaration();
	partial void LeaveRule_interfaceMethodDeclaration();
	// $ANTLR start "interfaceMethodDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:578:1: interfaceMethodDeclaration : modifiers ( typeParameters )? ( type | 'void' ) IDENTIFIER formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ';' ;
	[GrammarRule("interfaceMethodDeclaration")]
	private Antlr3AstNode interfaceMethodDeclaration()
	{
		EnterRule_interfaceMethodDeclaration();
		EnterRule("interfaceMethodDeclaration", 30);
		var retval = new Antlr3AstNode("interfaceMethodDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int interfaceMethodDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal152 = default(IToken);
		IToken IDENTIFIER153 = default(IToken);
		IToken char_literal155 = default(IToken);
		IToken char_literal156 = default(IToken);
		IToken string_literal157 = default(IToken);
		IToken char_literal159 = default(IToken);
		Antlr3AstNode modifiers149 = default(Antlr3AstNode);
		Antlr3AstNode typeParameters150 = default(Antlr3AstNode);
		Antlr3AstNode type151 = default(Antlr3AstNode);
		Antlr3AstNode formalParameters154 = default(Antlr3AstNode);
		Antlr3AstNode qualifiedNameList158 = default(Antlr3AstNode);

		object string_literal152_tree = default(object);
		object IDENTIFIER153_tree = default(object);
		object char_literal155_tree = default(object);
		object char_literal156_tree = default(object);
		object string_literal157_tree = default(object);
		object char_literal159_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interfaceMethodDeclaration");
		DebugLocation(578, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 30)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:579:5: ( modifiers ( typeParameters )? ( type | 'void' ) IDENTIFIER formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:579:9: modifiers ( typeParameters )? ( type | 'void' ) IDENTIFIER formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(579, 9);
			PushFollow(Follow._modifiers_in_interfaceMethodDeclaration2377);
			modifiers149=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers149.Tree, modifiers149, "modifiers149", retval);
			DebugLocation(580, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:580:9: ( typeParameters )?
			int alt54=2;
			try { DebugEnterSubRule(54);
			try { DebugEnterDecision(54, false);
			int LA54_1 = input.LA(1);

			if ((LA54_1==LT))
			{
				alt54 = 1;
			}
			} finally { DebugExitDecision(54); }
			switch (alt54)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:580:10: typeParameters
				{
				DebugLocation(580, 10);
				PushFollow(Follow._typeParameters_in_interfaceMethodDeclaration2388);
				typeParameters150=typeParameters();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeParameters150.Tree, typeParameters150, "typeParameters150", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(54); }

			DebugLocation(582, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:582:9: ( type | 'void' )
			int alt55=2;
			try { DebugEnterSubRule(55);
			try { DebugEnterDecision(55, false);
			int LA55_1 = input.LA(1);

			if ((LA55_1==BOOLEAN||LA55_1==BYTE||LA55_1==CHAR||LA55_1==DOUBLE||LA55_1==FLOAT||LA55_1==IDENTIFIER||LA55_1==INT||LA55_1==LONG||LA55_1==SHORT))
			{
				alt55 = 1;
			}
			else if ((LA55_1==VOID))
			{
				alt55 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 55, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(55); }
			switch (alt55)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:582:10: type
				{
				DebugLocation(582, 10);
				PushFollow(Follow._type_in_interfaceMethodDeclaration2410);
				type151=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type151.Tree, type151, "type151", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:583:10: 'void'
				{
				DebugLocation(583, 10);
				string_literal152=(IToken)Match(input,VOID,Follow._VOID_in_interfaceMethodDeclaration2421); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal152_tree = (object)adaptor.Create(string_literal152, "string_literal152", retval);
				adaptor.AddChild(root_0, string_literal152_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(55); }

			DebugLocation(585, 9);
			IDENTIFIER153=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_interfaceMethodDeclaration2441); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER153_tree = (object)adaptor.Create(IDENTIFIER153, "IDENTIFIER153", retval);
			adaptor.AddChild(root_0, IDENTIFIER153_tree);
			}
			DebugLocation(586, 9);
			PushFollow(Follow._formalParameters_in_interfaceMethodDeclaration2451);
			formalParameters154=formalParameters();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, formalParameters154.Tree, formalParameters154, "formalParameters154", retval);
			DebugLocation(587, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:587:9: ( '[' ']' )*
			try { DebugEnterSubRule(56);
			while (true)
			{
				int alt56=2;
				try { DebugEnterDecision(56, false);
				int LA56_1 = input.LA(1);

				if ((LA56_1==LBRACKET))
				{
					alt56 = 1;
				}


				} finally { DebugExitDecision(56); }
				switch ( alt56 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:587:10: '[' ']'
					{
					DebugLocation(587, 10);
					char_literal155=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_interfaceMethodDeclaration2462); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal155_tree = (object)adaptor.Create(char_literal155, "char_literal155", retval);
					adaptor.AddChild(root_0, char_literal155_tree);
					}
					DebugLocation(587, 14);
					char_literal156=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_interfaceMethodDeclaration2464); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal156_tree = (object)adaptor.Create(char_literal156, "char_literal156", retval);
					adaptor.AddChild(root_0, char_literal156_tree);
					}

					}
					break;

				default:
					goto loop56;
				}
			}

			loop56:
				;

			} finally { DebugExitSubRule(56); }

			DebugLocation(589, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:589:9: ( 'throws' qualifiedNameList )?
			int alt57=2;
			try { DebugEnterSubRule(57);
			try { DebugEnterDecision(57, false);
			int LA57_1 = input.LA(1);

			if ((LA57_1==THROWS))
			{
				alt57 = 1;
			}
			} finally { DebugExitDecision(57); }
			switch (alt57)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:589:10: 'throws' qualifiedNameList
				{
				DebugLocation(589, 10);
				string_literal157=(IToken)Match(input,THROWS,Follow._THROWS_in_interfaceMethodDeclaration2486); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal157_tree = (object)adaptor.Create(string_literal157, "string_literal157", retval);
				adaptor.AddChild(root_0, string_literal157_tree);
				}
				DebugLocation(589, 19);
				PushFollow(Follow._qualifiedNameList_in_interfaceMethodDeclaration2488);
				qualifiedNameList158=qualifiedNameList();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedNameList158.Tree, qualifiedNameList158, "qualifiedNameList158", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(57); }

			DebugLocation(590, 12);
			char_literal159=(IToken)Match(input,SEMI,Follow._SEMI_in_interfaceMethodDeclaration2501); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal159_tree = (object)adaptor.Create(char_literal159, "char_literal159", retval);
			adaptor.AddChild(root_0, char_literal159_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interfaceMethodDeclaration", 30);
			LeaveRule("interfaceMethodDeclaration", 30);
			LeaveRule_interfaceMethodDeclaration();
			if (state.backtracking > 0) { Memoize(input, 30, interfaceMethodDeclaration_StartIndex); }

		}
		DebugLocation(591, 4);
		} finally { DebugExitRule(GrammarFileName, "interfaceMethodDeclaration"); }
		return retval;

	}
	// $ANTLR end "interfaceMethodDeclaration"

	partial void EnterRule_interfaceFieldDeclaration();
	partial void LeaveRule_interfaceFieldDeclaration();
	// $ANTLR start "interfaceFieldDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:598:1: interfaceFieldDeclaration : modifiers type variableDeclarator ( ',' variableDeclarator )* ';' ;
	[GrammarRule("interfaceFieldDeclaration")]
	private Antlr3AstNode interfaceFieldDeclaration()
	{
		EnterRule_interfaceFieldDeclaration();
		EnterRule("interfaceFieldDeclaration", 31);
		var retval = new Antlr3AstNode("interfaceFieldDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int interfaceFieldDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal163 = default(IToken);
		IToken char_literal165 = default(IToken);
		Antlr3AstNode modifiers160 = default(Antlr3AstNode);
		Antlr3AstNode type161 = default(Antlr3AstNode);
		Antlr3AstNode variableDeclarator162 = default(Antlr3AstNode);
		Antlr3AstNode variableDeclarator164 = default(Antlr3AstNode);

		object char_literal163_tree = default(object);
		object char_literal165_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interfaceFieldDeclaration");
		DebugLocation(598, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 31)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:599:5: ( modifiers type variableDeclarator ( ',' variableDeclarator )* ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:599:9: modifiers type variableDeclarator ( ',' variableDeclarator )* ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(599, 9);
			PushFollow(Follow._modifiers_in_interfaceFieldDeclaration2523);
			modifiers160=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers160.Tree, modifiers160, "modifiers160", retval);
			DebugLocation(599, 19);
			PushFollow(Follow._type_in_interfaceFieldDeclaration2525);
			type161=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type161.Tree, type161, "type161", retval);
			DebugLocation(599, 24);
			PushFollow(Follow._variableDeclarator_in_interfaceFieldDeclaration2527);
			variableDeclarator162=variableDeclarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableDeclarator162.Tree, variableDeclarator162, "variableDeclarator162", retval);
			DebugLocation(600, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:600:9: ( ',' variableDeclarator )*
			try { DebugEnterSubRule(58);
			while (true)
			{
				int alt58=2;
				try { DebugEnterDecision(58, false);
				int LA58_1 = input.LA(1);

				if ((LA58_1==COMMA))
				{
					alt58 = 1;
				}


				} finally { DebugExitDecision(58); }
				switch ( alt58 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:600:10: ',' variableDeclarator
					{
					DebugLocation(600, 10);
					char_literal163=(IToken)Match(input,COMMA,Follow._COMMA_in_interfaceFieldDeclaration2538); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal163_tree = (object)adaptor.Create(char_literal163, "char_literal163", retval);
					adaptor.AddChild(root_0, char_literal163_tree);
					}
					DebugLocation(600, 14);
					PushFollow(Follow._variableDeclarator_in_interfaceFieldDeclaration2540);
					variableDeclarator164=variableDeclarator();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, variableDeclarator164.Tree, variableDeclarator164, "variableDeclarator164", retval);

					}
					break;

				default:
					goto loop58;
				}
			}

			loop58:
				;

			} finally { DebugExitSubRule(58); }

			DebugLocation(602, 9);
			char_literal165=(IToken)Match(input,SEMI,Follow._SEMI_in_interfaceFieldDeclaration2561); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal165_tree = (object)adaptor.Create(char_literal165, "char_literal165", retval);
			adaptor.AddChild(root_0, char_literal165_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interfaceFieldDeclaration", 31);
			LeaveRule("interfaceFieldDeclaration", 31);
			LeaveRule_interfaceFieldDeclaration();
			if (state.backtracking > 0) { Memoize(input, 31, interfaceFieldDeclaration_StartIndex); }

		}
		DebugLocation(603, 4);
		} finally { DebugExitRule(GrammarFileName, "interfaceFieldDeclaration"); }
		return retval;

	}
	// $ANTLR end "interfaceFieldDeclaration"

	partial void EnterRule_type();
	partial void LeaveRule_type();
	// $ANTLR start "type"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:606:1: type : ( classOrInterfaceType ( '[' ']' )* | primitiveType ( '[' ']' )* );
	[GrammarRule("type")]
	private Antlr3AstNode type()
	{
		EnterRule_type();
		EnterRule("type", 32);
		var retval = new Antlr3AstNode("type");
		
		retval.Start = (IToken)input.LT(1);
		int type_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal167 = default(IToken);
		IToken char_literal168 = default(IToken);
		IToken char_literal170 = default(IToken);
		IToken char_literal171 = default(IToken);
		Antlr3AstNode classOrInterfaceType166 = default(Antlr3AstNode);
		Antlr3AstNode primitiveType169 = default(Antlr3AstNode);

		object char_literal167_tree = default(object);
		object char_literal168_tree = default(object);
		object char_literal170_tree = default(object);
		object char_literal171_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "type");
		DebugLocation(606, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 32)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:607:5: ( classOrInterfaceType ( '[' ']' )* | primitiveType ( '[' ']' )* )
			int alt61=2;
			try { DebugEnterDecision(61, false);
			int LA61_1 = input.LA(1);

			if ((LA61_1==IDENTIFIER))
			{
				alt61 = 1;
			}
			else if ((LA61_1==BOOLEAN||LA61_1==BYTE||LA61_1==CHAR||LA61_1==DOUBLE||LA61_1==FLOAT||LA61_1==INT||LA61_1==LONG||LA61_1==SHORT))
			{
				alt61 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 61, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(61); }
			switch (alt61)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:607:9: classOrInterfaceType ( '[' ']' )*
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(607, 9);
				PushFollow(Follow._classOrInterfaceType_in_type2582);
				classOrInterfaceType166=classOrInterfaceType();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classOrInterfaceType166.Tree, classOrInterfaceType166, "classOrInterfaceType166", retval);
				DebugLocation(608, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:608:9: ( '[' ']' )*
				try { DebugEnterSubRule(59);
				while (true)
				{
					int alt59=2;
					try { DebugEnterDecision(59, false);
					int LA59_1 = input.LA(1);

					if ((LA59_1==LBRACKET))
					{
						alt59 = 1;
					}


					} finally { DebugExitDecision(59); }
					switch ( alt59 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:608:10: '[' ']'
						{
						DebugLocation(608, 10);
						char_literal167=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_type2593); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal167_tree = (object)adaptor.Create(char_literal167, "char_literal167", retval);
						adaptor.AddChild(root_0, char_literal167_tree);
						}
						DebugLocation(608, 14);
						char_literal168=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_type2595); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal168_tree = (object)adaptor.Create(char_literal168, "char_literal168", retval);
						adaptor.AddChild(root_0, char_literal168_tree);
						}

						}
						break;

					default:
						goto loop59;
					}
				}

				loop59:
					;

				} finally { DebugExitSubRule(59); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:610:9: primitiveType ( '[' ']' )*
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(610, 9);
				PushFollow(Follow._primitiveType_in_type2616);
				primitiveType169=primitiveType();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primitiveType169.Tree, primitiveType169, "primitiveType169", retval);
				DebugLocation(611, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:611:9: ( '[' ']' )*
				try { DebugEnterSubRule(60);
				while (true)
				{
					int alt60=2;
					try { DebugEnterDecision(60, false);
					int LA60_1 = input.LA(1);

					if ((LA60_1==LBRACKET))
					{
						alt60 = 1;
					}


					} finally { DebugExitDecision(60); }
					switch ( alt60 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:611:10: '[' ']'
						{
						DebugLocation(611, 10);
						char_literal170=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_type2627); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal170_tree = (object)adaptor.Create(char_literal170, "char_literal170", retval);
						adaptor.AddChild(root_0, char_literal170_tree);
						}
						DebugLocation(611, 14);
						char_literal171=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_type2629); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal171_tree = (object)adaptor.Create(char_literal171, "char_literal171", retval);
						adaptor.AddChild(root_0, char_literal171_tree);
						}

						}
						break;

					default:
						goto loop60;
					}
				}

				loop60:
					;

				} finally { DebugExitSubRule(60); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("type", 32);
			LeaveRule("type", 32);
			LeaveRule_type();
			if (state.backtracking > 0) { Memoize(input, 32, type_StartIndex); }

		}
		DebugLocation(613, 4);
		} finally { DebugExitRule(GrammarFileName, "type"); }
		return retval;

	}
	// $ANTLR end "type"

	partial void EnterRule_classOrInterfaceType();
	partial void LeaveRule_classOrInterfaceType();
	// $ANTLR start "classOrInterfaceType"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:616:1: classOrInterfaceType : IDENTIFIER ( typeArguments )? ( '.' IDENTIFIER ( typeArguments )? )* ;
	[GrammarRule("classOrInterfaceType")]
	private Antlr3AstNode classOrInterfaceType()
	{
		EnterRule_classOrInterfaceType();
		EnterRule("classOrInterfaceType", 33);
		var retval = new Antlr3AstNode("classOrInterfaceType");
		
		retval.Start = (IToken)input.LT(1);
		int classOrInterfaceType_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER172 = default(IToken);
		IToken char_literal174 = default(IToken);
		IToken IDENTIFIER175 = default(IToken);
		Antlr3AstNode typeArguments173 = default(Antlr3AstNode);
		Antlr3AstNode typeArguments176 = default(Antlr3AstNode);

		object IDENTIFIER172_tree = default(object);
		object char_literal174_tree = default(object);
		object IDENTIFIER175_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "classOrInterfaceType");
		DebugLocation(616, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 33)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:617:5: ( IDENTIFIER ( typeArguments )? ( '.' IDENTIFIER ( typeArguments )? )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:617:9: IDENTIFIER ( typeArguments )? ( '.' IDENTIFIER ( typeArguments )? )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(617, 9);
			IDENTIFIER172=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_classOrInterfaceType2661); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER172_tree = (object)adaptor.Create(IDENTIFIER172, "IDENTIFIER172", retval);
			adaptor.AddChild(root_0, IDENTIFIER172_tree);
			}
			DebugLocation(618, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:618:9: ( typeArguments )?
			int alt62=2;
			try { DebugEnterSubRule(62);
			try { DebugEnterDecision(62, false);
			int LA62_1 = input.LA(1);

			if ((LA62_1==LT))
			{
				int LA62_2 = input.LA(2);

				if ((LA62_2==BOOLEAN||LA62_2==BYTE||LA62_2==CHAR||LA62_2==DOUBLE||LA62_2==FLOAT||LA62_2==IDENTIFIER||LA62_2==INT||LA62_2==LONG||LA62_2==QUES||LA62_2==SHORT))
				{
					alt62 = 1;
				}
			}
			} finally { DebugExitDecision(62); }
			switch (alt62)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:618:10: typeArguments
				{
				DebugLocation(618, 10);
				PushFollow(Follow._typeArguments_in_classOrInterfaceType2672);
				typeArguments173=typeArguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeArguments173.Tree, typeArguments173, "typeArguments173", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(62); }

			DebugLocation(620, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:620:9: ( '.' IDENTIFIER ( typeArguments )? )*
			try { DebugEnterSubRule(64);
			while (true)
			{
				int alt64=2;
				try { DebugEnterDecision(64, false);
				int LA64_1 = input.LA(1);

				if ((LA64_1==DOT))
				{
					alt64 = 1;
				}


				} finally { DebugExitDecision(64); }
				switch ( alt64 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:620:10: '.' IDENTIFIER ( typeArguments )?
					{
					DebugLocation(620, 10);
					char_literal174=(IToken)Match(input,DOT,Follow._DOT_in_classOrInterfaceType2694); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal174_tree = (object)adaptor.Create(char_literal174, "char_literal174", retval);
					adaptor.AddChild(root_0, char_literal174_tree);
					}
					DebugLocation(620, 14);
					IDENTIFIER175=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_classOrInterfaceType2696); if (state.failed) return retval;
					if (state.backtracking == 0) {
					IDENTIFIER175_tree = (object)adaptor.Create(IDENTIFIER175, "IDENTIFIER175", retval);
					adaptor.AddChild(root_0, IDENTIFIER175_tree);
					}
					DebugLocation(621, 13);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:621:13: ( typeArguments )?
					int alt63=2;
					try { DebugEnterSubRule(63);
					try { DebugEnterDecision(63, false);
					int LA63_1 = input.LA(1);

					if ((LA63_1==LT))
					{
						int LA63_2 = input.LA(2);

						if ((LA63_2==BOOLEAN||LA63_2==BYTE||LA63_2==CHAR||LA63_2==DOUBLE||LA63_2==FLOAT||LA63_2==IDENTIFIER||LA63_2==INT||LA63_2==LONG||LA63_2==QUES||LA63_2==SHORT))
						{
							alt63 = 1;
						}
					}
					} finally { DebugExitDecision(63); }
					switch (alt63)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:621:14: typeArguments
						{
						DebugLocation(621, 14);
						PushFollow(Follow._typeArguments_in_classOrInterfaceType2711);
						typeArguments176=typeArguments();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, typeArguments176.Tree, typeArguments176, "typeArguments176", retval);

						}
						break;

					}
					} finally { DebugExitSubRule(63); }


					}
					break;

				default:
					goto loop64;
				}
			}

			loop64:
				;

			} finally { DebugExitSubRule(64); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("classOrInterfaceType", 33);
			LeaveRule("classOrInterfaceType", 33);
			LeaveRule_classOrInterfaceType();
			if (state.backtracking > 0) { Memoize(input, 33, classOrInterfaceType_StartIndex); }

		}
		DebugLocation(624, 4);
		} finally { DebugExitRule(GrammarFileName, "classOrInterfaceType"); }
		return retval;

	}
	// $ANTLR end "classOrInterfaceType"

	partial void EnterRule_classOrInterfaceTypeWithDiamond();
	partial void LeaveRule_classOrInterfaceTypeWithDiamond();
	// $ANTLR start "classOrInterfaceTypeWithDiamond"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:627:1: classOrInterfaceTypeWithDiamond : IDENTIFIER ( typeArgumentsOrDiamond )? ( '.' IDENTIFIER ( typeArgumentsOrDiamond )? )* ;
	[GrammarRule("classOrInterfaceTypeWithDiamond")]
	private Antlr3AstNode classOrInterfaceTypeWithDiamond()
	{
		EnterRule_classOrInterfaceTypeWithDiamond();
		EnterRule("classOrInterfaceTypeWithDiamond", 34);
		var retval = new Antlr3AstNode("classOrInterfaceTypeWithDiamond");
		
		retval.Start = (IToken)input.LT(1);
		int classOrInterfaceTypeWithDiamond_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER177 = default(IToken);
		IToken char_literal179 = default(IToken);
		IToken IDENTIFIER180 = default(IToken);
		Antlr3AstNode typeArgumentsOrDiamond178 = default(Antlr3AstNode);
		Antlr3AstNode typeArgumentsOrDiamond181 = default(Antlr3AstNode);

		object IDENTIFIER177_tree = default(object);
		object char_literal179_tree = default(object);
		object IDENTIFIER180_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "classOrInterfaceTypeWithDiamond");
		DebugLocation(627, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 34)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:628:5: ( IDENTIFIER ( typeArgumentsOrDiamond )? ( '.' IDENTIFIER ( typeArgumentsOrDiamond )? )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:628:9: IDENTIFIER ( typeArgumentsOrDiamond )? ( '.' IDENTIFIER ( typeArgumentsOrDiamond )? )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(628, 9);
			IDENTIFIER177=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_classOrInterfaceTypeWithDiamond2757); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER177_tree = (object)adaptor.Create(IDENTIFIER177, "IDENTIFIER177", retval);
			adaptor.AddChild(root_0, IDENTIFIER177_tree);
			}
			DebugLocation(629, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:629:9: ( typeArgumentsOrDiamond )?
			int alt65=2;
			try { DebugEnterSubRule(65);
			try { DebugEnterDecision(65, false);
			int LA65_1 = input.LA(1);

			if ((LA65_1==LT))
			{
				alt65 = 1;
			}
			} finally { DebugExitDecision(65); }
			switch (alt65)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:629:10: typeArgumentsOrDiamond
				{
				DebugLocation(629, 10);
				PushFollow(Follow._typeArgumentsOrDiamond_in_classOrInterfaceTypeWithDiamond2768);
				typeArgumentsOrDiamond178=typeArgumentsOrDiamond();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeArgumentsOrDiamond178.Tree, typeArgumentsOrDiamond178, "typeArgumentsOrDiamond178", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(65); }

			DebugLocation(631, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:631:9: ( '.' IDENTIFIER ( typeArgumentsOrDiamond )? )*
			try { DebugEnterSubRule(67);
			while (true)
			{
				int alt67=2;
				try { DebugEnterDecision(67, false);
				int LA67_1 = input.LA(1);

				if ((LA67_1==DOT))
				{
					alt67 = 1;
				}


				} finally { DebugExitDecision(67); }
				switch ( alt67 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:631:10: '.' IDENTIFIER ( typeArgumentsOrDiamond )?
					{
					DebugLocation(631, 10);
					char_literal179=(IToken)Match(input,DOT,Follow._DOT_in_classOrInterfaceTypeWithDiamond2790); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal179_tree = (object)adaptor.Create(char_literal179, "char_literal179", retval);
					adaptor.AddChild(root_0, char_literal179_tree);
					}
					DebugLocation(631, 14);
					IDENTIFIER180=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_classOrInterfaceTypeWithDiamond2792); if (state.failed) return retval;
					if (state.backtracking == 0) {
					IDENTIFIER180_tree = (object)adaptor.Create(IDENTIFIER180, "IDENTIFIER180", retval);
					adaptor.AddChild(root_0, IDENTIFIER180_tree);
					}
					DebugLocation(632, 13);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:632:13: ( typeArgumentsOrDiamond )?
					int alt66=2;
					try { DebugEnterSubRule(66);
					try { DebugEnterDecision(66, false);
					int LA66_1 = input.LA(1);

					if ((LA66_1==LT))
					{
						alt66 = 1;
					}
					} finally { DebugExitDecision(66); }
					switch (alt66)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:632:14: typeArgumentsOrDiamond
						{
						DebugLocation(632, 14);
						PushFollow(Follow._typeArgumentsOrDiamond_in_classOrInterfaceTypeWithDiamond2807);
						typeArgumentsOrDiamond181=typeArgumentsOrDiamond();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, typeArgumentsOrDiamond181.Tree, typeArgumentsOrDiamond181, "typeArgumentsOrDiamond181", retval);

						}
						break;

					}
					} finally { DebugExitSubRule(66); }


					}
					break;

				default:
					goto loop67;
				}
			}

			loop67:
				;

			} finally { DebugExitSubRule(67); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("classOrInterfaceTypeWithDiamond", 34);
			LeaveRule("classOrInterfaceTypeWithDiamond", 34);
			LeaveRule_classOrInterfaceTypeWithDiamond();
			if (state.backtracking > 0) { Memoize(input, 34, classOrInterfaceTypeWithDiamond_StartIndex); }

		}
		DebugLocation(635, 4);
		} finally { DebugExitRule(GrammarFileName, "classOrInterfaceTypeWithDiamond"); }
		return retval;

	}
	// $ANTLR end "classOrInterfaceTypeWithDiamond"

	partial void EnterRule_primitiveType();
	partial void LeaveRule_primitiveType();
	// $ANTLR start "primitiveType"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:638:1: primitiveType : ( 'boolean' | 'char' | 'byte' | 'short' | 'int' | 'long' | 'float' | 'double' );
	[GrammarRule("primitiveType")]
	private Antlr3AstNode primitiveType()
	{
		EnterRule_primitiveType();
		EnterRule("primitiveType", 35);
		var retval = new Antlr3AstNode("primitiveType");
		
		retval.Start = (IToken)input.LT(1);
		int primitiveType_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set182 = default(IToken);

		object set182_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "primitiveType");
		DebugLocation(638, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 35)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:639:5: ( 'boolean' | 'char' | 'byte' | 'short' | 'int' | 'long' | 'float' | 'double' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(639, 5);

			set182=(IToken)input.LT(1);
			if (input.LA(1)==BOOLEAN||input.LA(1)==BYTE||input.LA(1)==CHAR||input.LA(1)==DOUBLE||input.LA(1)==FLOAT||input.LA(1)==INT||input.LA(1)==LONG||input.LA(1)==SHORT)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set182, "set182", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("primitiveType", 35);
			LeaveRule("primitiveType", 35);
			LeaveRule_primitiveType();
			if (state.backtracking > 0) { Memoize(input, 35, primitiveType_StartIndex); }

		}
		DebugLocation(647, 4);
		} finally { DebugExitRule(GrammarFileName, "primitiveType"); }
		return retval;

	}
	// $ANTLR end "primitiveType"

	partial void EnterRule_typeArguments();
	partial void LeaveRule_typeArguments();
	// $ANTLR start "typeArguments"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:649:1: typeArguments : '<' typeArgument ( ',' typeArgument )* '>' ;
	[GrammarRule("typeArguments")]
	private Antlr3AstNode typeArguments()
	{
		EnterRule_typeArguments();
		EnterRule("typeArguments", 36);
		var retval = new Antlr3AstNode("typeArguments");
		
		retval.Start = (IToken)input.LT(1);
		int typeArguments_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal183 = default(IToken);
		IToken char_literal185 = default(IToken);
		IToken char_literal187 = default(IToken);
		Antlr3AstNode typeArgument184 = default(Antlr3AstNode);
		Antlr3AstNode typeArgument186 = default(Antlr3AstNode);

		object char_literal183_tree = default(object);
		object char_literal185_tree = default(object);
		object char_literal187_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeArguments");
		DebugLocation(649, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 36)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:650:5: ( '<' typeArgument ( ',' typeArgument )* '>' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:650:9: '<' typeArgument ( ',' typeArgument )* '>'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(650, 9);
			char_literal183=(IToken)Match(input,LT,Follow._LT_in_typeArguments2944); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal183_tree = (object)adaptor.Create(char_literal183, "char_literal183", retval);
			adaptor.AddChild(root_0, char_literal183_tree);
			}
			DebugLocation(650, 13);
			PushFollow(Follow._typeArgument_in_typeArguments2946);
			typeArgument184=typeArgument();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, typeArgument184.Tree, typeArgument184, "typeArgument184", retval);
			DebugLocation(650, 26);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:650:26: ( ',' typeArgument )*
			try { DebugEnterSubRule(68);
			while (true)
			{
				int alt68=2;
				try { DebugEnterDecision(68, false);
				int LA68_1 = input.LA(1);

				if ((LA68_1==COMMA))
				{
					alt68 = 1;
				}


				} finally { DebugExitDecision(68); }
				switch ( alt68 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:650:27: ',' typeArgument
					{
					DebugLocation(650, 27);
					char_literal185=(IToken)Match(input,COMMA,Follow._COMMA_in_typeArguments2949); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal185_tree = (object)adaptor.Create(char_literal185, "char_literal185", retval);
					adaptor.AddChild(root_0, char_literal185_tree);
					}
					DebugLocation(650, 31);
					PushFollow(Follow._typeArgument_in_typeArguments2951);
					typeArgument186=typeArgument();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, typeArgument186.Tree, typeArgument186, "typeArgument186", retval);

					}
					break;

				default:
					goto loop68;
				}
			}

			loop68:
				;

			} finally { DebugExitSubRule(68); }

			DebugLocation(650, 46);
			char_literal187=(IToken)Match(input,GT,Follow._GT_in_typeArguments2955); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal187_tree = (object)adaptor.Create(char_literal187, "char_literal187", retval);
			adaptor.AddChild(root_0, char_literal187_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeArguments", 36);
			LeaveRule("typeArguments", 36);
			LeaveRule_typeArguments();
			if (state.backtracking > 0) { Memoize(input, 36, typeArguments_StartIndex); }

		}
		DebugLocation(651, 4);
		} finally { DebugExitRule(GrammarFileName, "typeArguments"); }
		return retval;

	}
	// $ANTLR end "typeArguments"

	partial void EnterRule_typeArgument();
	partial void LeaveRule_typeArgument();
	// $ANTLR start "typeArgument"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:653:1: typeArgument : ( type | '?' ( ( 'extends' | 'super' ) type )? );
	[GrammarRule("typeArgument")]
	private Antlr3AstNode typeArgument()
	{
		EnterRule_typeArgument();
		EnterRule("typeArgument", 37);
		var retval = new Antlr3AstNode("typeArgument");
		
		retval.Start = (IToken)input.LT(1);
		int typeArgument_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal189 = default(IToken);
		IToken set190 = default(IToken);
		Antlr3AstNode type188 = default(Antlr3AstNode);
		Antlr3AstNode type191 = default(Antlr3AstNode);

		object char_literal189_tree = default(object);
		object set190_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeArgument");
		DebugLocation(653, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 37)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:654:5: ( type | '?' ( ( 'extends' | 'super' ) type )? )
			int alt70=2;
			try { DebugEnterDecision(70, false);
			int LA70_1 = input.LA(1);

			if ((LA70_1==BOOLEAN||LA70_1==BYTE||LA70_1==CHAR||LA70_1==DOUBLE||LA70_1==FLOAT||LA70_1==IDENTIFIER||LA70_1==INT||LA70_1==LONG||LA70_1==SHORT))
			{
				alt70 = 1;
			}
			else if ((LA70_1==QUES))
			{
				alt70 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 70, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(70); }
			switch (alt70)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:654:9: type
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(654, 9);
				PushFollow(Follow._type_in_typeArgument2975);
				type188=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type188.Tree, type188, "type188", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:655:9: '?' ( ( 'extends' | 'super' ) type )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(655, 9);
				char_literal189=(IToken)Match(input,QUES,Follow._QUES_in_typeArgument2985); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal189_tree = (object)adaptor.Create(char_literal189, "char_literal189", retval);
				adaptor.AddChild(root_0, char_literal189_tree);
				}
				DebugLocation(656, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:656:9: ( ( 'extends' | 'super' ) type )?
				int alt69=2;
				try { DebugEnterSubRule(69);
				try { DebugEnterDecision(69, false);
				int LA69_1 = input.LA(1);

				if ((LA69_1==EXTENDS||LA69_1==SUPER))
				{
					alt69 = 1;
				}
				} finally { DebugExitDecision(69); }
				switch (alt69)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:657:13: ( 'extends' | 'super' ) type
					{
					DebugLocation(657, 13);

					set190=(IToken)input.LT(1);
					if (input.LA(1)==EXTENDS||input.LA(1)==SUPER)
					{
						input.Consume();
						if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set190, "set190", retval));
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}

					DebugLocation(660, 13);
					PushFollow(Follow._type_in_typeArgument3053);
					type191=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type191.Tree, type191, "type191", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(69); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeArgument", 37);
			LeaveRule("typeArgument", 37);
			LeaveRule_typeArgument();
			if (state.backtracking > 0) { Memoize(input, 37, typeArgument_StartIndex); }

		}
		DebugLocation(662, 4);
		} finally { DebugExitRule(GrammarFileName, "typeArgument"); }
		return retval;

	}
	// $ANTLR end "typeArgument"

	partial void EnterRule_qualifiedNameList();
	partial void LeaveRule_qualifiedNameList();
	// $ANTLR start "qualifiedNameList"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:664:1: qualifiedNameList : qualifiedName ( ',' qualifiedName )* ;
	[GrammarRule("qualifiedNameList")]
	private Antlr3AstNode qualifiedNameList()
	{
		EnterRule_qualifiedNameList();
		EnterRule("qualifiedNameList", 38);
		var retval = new Antlr3AstNode("qualifiedNameList");
		
		retval.Start = (IToken)input.LT(1);
		int qualifiedNameList_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal193 = default(IToken);
		Antlr3AstNode qualifiedName192 = default(Antlr3AstNode);
		Antlr3AstNode qualifiedName194 = default(Antlr3AstNode);

		object char_literal193_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "qualifiedNameList");
		DebugLocation(664, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 38)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:665:5: ( qualifiedName ( ',' qualifiedName )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:665:9: qualifiedName ( ',' qualifiedName )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(665, 9);
			PushFollow(Follow._qualifiedName_in_qualifiedNameList3084);
			qualifiedName192=qualifiedName();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedName192.Tree, qualifiedName192, "qualifiedName192", retval);
			DebugLocation(666, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:666:9: ( ',' qualifiedName )*
			try { DebugEnterSubRule(71);
			while (true)
			{
				int alt71=2;
				try { DebugEnterDecision(71, false);
				int LA71_1 = input.LA(1);

				if ((LA71_1==COMMA))
				{
					alt71 = 1;
				}


				} finally { DebugExitDecision(71); }
				switch ( alt71 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:666:10: ',' qualifiedName
					{
					DebugLocation(666, 10);
					char_literal193=(IToken)Match(input,COMMA,Follow._COMMA_in_qualifiedNameList3095); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal193_tree = (object)adaptor.Create(char_literal193, "char_literal193", retval);
					adaptor.AddChild(root_0, char_literal193_tree);
					}
					DebugLocation(666, 14);
					PushFollow(Follow._qualifiedName_in_qualifiedNameList3097);
					qualifiedName194=qualifiedName();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedName194.Tree, qualifiedName194, "qualifiedName194", retval);

					}
					break;

				default:
					goto loop71;
				}
			}

			loop71:
				;

			} finally { DebugExitSubRule(71); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("qualifiedNameList", 38);
			LeaveRule("qualifiedNameList", 38);
			LeaveRule_qualifiedNameList();
			if (state.backtracking > 0) { Memoize(input, 38, qualifiedNameList_StartIndex); }

		}
		DebugLocation(668, 4);
		} finally { DebugExitRule(GrammarFileName, "qualifiedNameList"); }
		return retval;

	}
	// $ANTLR end "qualifiedNameList"

	partial void EnterRule_formalParameters();
	partial void LeaveRule_formalParameters();
	// $ANTLR start "formalParameters"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:670:1: formalParameters : '(' ( formalParameterDecls )? ')' ;
	[GrammarRule("formalParameters")]
	private Antlr3AstNode formalParameters()
	{
		EnterRule_formalParameters();
		EnterRule("formalParameters", 39);
		var retval = new Antlr3AstNode("formalParameters");
		
		retval.Start = (IToken)input.LT(1);
		int formalParameters_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal195 = default(IToken);
		IToken char_literal197 = default(IToken);
		Antlr3AstNode formalParameterDecls196 = default(Antlr3AstNode);

		object char_literal195_tree = default(object);
		object char_literal197_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "formalParameters");
		DebugLocation(670, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 39)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:671:5: ( '(' ( formalParameterDecls )? ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:671:9: '(' ( formalParameterDecls )? ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(671, 9);
			char_literal195=(IToken)Match(input,LPAREN,Follow._LPAREN_in_formalParameters3128); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal195_tree = (object)adaptor.Create(char_literal195, "char_literal195", retval);
			adaptor.AddChild(root_0, char_literal195_tree);
			}
			DebugLocation(672, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:672:9: ( formalParameterDecls )?
			int alt72=2;
			try { DebugEnterSubRule(72);
			try { DebugEnterDecision(72, false);
			int LA72_1 = input.LA(1);

			if ((LA72_1==EOF||LA72_1==BOOLEAN||LA72_1==BYTE||LA72_1==CHAR||LA72_1==DOUBLE||LA72_1==FINAL||LA72_1==FLOAT||LA72_1==IDENTIFIER||LA72_1==INT||LA72_1==LONG||LA72_1==MONKEYS_AT||LA72_1==SHORT))
			{
				alt72 = 1;
			}
			} finally { DebugExitDecision(72); }
			switch (alt72)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:672:10: formalParameterDecls
				{
				DebugLocation(672, 10);
				PushFollow(Follow._formalParameterDecls_in_formalParameters3139);
				formalParameterDecls196=formalParameterDecls();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, formalParameterDecls196.Tree, formalParameterDecls196, "formalParameterDecls196", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(72); }

			DebugLocation(674, 9);
			char_literal197=(IToken)Match(input,RPAREN,Follow._RPAREN_in_formalParameters3161); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal197_tree = (object)adaptor.Create(char_literal197, "char_literal197", retval);
			adaptor.AddChild(root_0, char_literal197_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("formalParameters", 39);
			LeaveRule("formalParameters", 39);
			LeaveRule_formalParameters();
			if (state.backtracking > 0) { Memoize(input, 39, formalParameters_StartIndex); }

		}
		DebugLocation(675, 4);
		} finally { DebugExitRule(GrammarFileName, "formalParameters"); }
		return retval;

	}
	// $ANTLR end "formalParameters"

	partial void EnterRule_formalParameterDecls();
	partial void LeaveRule_formalParameterDecls();
	// $ANTLR start "formalParameterDecls"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:677:1: formalParameterDecls : ( ellipsisParameterDecl | normalParameterDecl ( ',' normalParameterDecl )* | ( normalParameterDecl ',' )+ ellipsisParameterDecl );
	[GrammarRule("formalParameterDecls")]
	private Antlr3AstNode formalParameterDecls()
	{
		EnterRule_formalParameterDecls();
		EnterRule("formalParameterDecls", 40);
		var retval = new Antlr3AstNode("formalParameterDecls");
		
		retval.Start = (IToken)input.LT(1);
		int formalParameterDecls_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal200 = default(IToken);
		IToken char_literal203 = default(IToken);
		Antlr3AstNode ellipsisParameterDecl198 = default(Antlr3AstNode);
		Antlr3AstNode normalParameterDecl199 = default(Antlr3AstNode);
		Antlr3AstNode normalParameterDecl201 = default(Antlr3AstNode);
		Antlr3AstNode normalParameterDecl202 = default(Antlr3AstNode);
		Antlr3AstNode ellipsisParameterDecl204 = default(Antlr3AstNode);

		object char_literal200_tree = default(object);
		object char_literal203_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "formalParameterDecls");
		DebugLocation(677, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 40)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:678:5: ( ellipsisParameterDecl | normalParameterDecl ( ',' normalParameterDecl )* | ( normalParameterDecl ',' )+ ellipsisParameterDecl )
			int alt75=3;
			try { DebugEnterDecision(75, false);
			switch (input.LA(1))
			{
			case FINAL:
				{
				int LA75_2 = input.LA(2);

				if ((EvaluatePredicate(synpred99_Java_fragment)))
				{
					alt75 = 1;
				}
				else if ((EvaluatePredicate(synpred101_Java_fragment)))
				{
					alt75 = 2;
				}
				else if ((true))
				{
					alt75 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 75, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case MONKEYS_AT:
				{
				int LA75_2 = input.LA(2);

				if ((EvaluatePredicate(synpred99_Java_fragment)))
				{
					alt75 = 1;
				}
				else if ((EvaluatePredicate(synpred101_Java_fragment)))
				{
					alt75 = 2;
				}
				else if ((true))
				{
					alt75 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 75, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case IDENTIFIER:
				{
				int LA75_2 = input.LA(2);

				if ((EvaluatePredicate(synpred99_Java_fragment)))
				{
					alt75 = 1;
				}
				else if ((EvaluatePredicate(synpred101_Java_fragment)))
				{
					alt75 = 2;
				}
				else if ((true))
				{
					alt75 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 75, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
				{
				int LA75_2 = input.LA(2);

				if ((EvaluatePredicate(synpred99_Java_fragment)))
				{
					alt75 = 1;
				}
				else if ((EvaluatePredicate(synpred101_Java_fragment)))
				{
					alt75 = 2;
				}
				else if ((true))
				{
					alt75 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 75, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 75, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(75); }
			switch (alt75)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:678:9: ellipsisParameterDecl
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(678, 9);
				PushFollow(Follow._ellipsisParameterDecl_in_formalParameterDecls3181);
				ellipsisParameterDecl198=ellipsisParameterDecl();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, ellipsisParameterDecl198.Tree, ellipsisParameterDecl198, "ellipsisParameterDecl198", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:679:9: normalParameterDecl ( ',' normalParameterDecl )*
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(679, 9);
				PushFollow(Follow._normalParameterDecl_in_formalParameterDecls3191);
				normalParameterDecl199=normalParameterDecl();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, normalParameterDecl199.Tree, normalParameterDecl199, "normalParameterDecl199", retval);
				DebugLocation(680, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:680:9: ( ',' normalParameterDecl )*
				try { DebugEnterSubRule(73);
				while (true)
				{
					int alt73=2;
					try { DebugEnterDecision(73, false);
					int LA73_1 = input.LA(1);

					if ((LA73_1==COMMA))
					{
						alt73 = 1;
					}


					} finally { DebugExitDecision(73); }
					switch ( alt73 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:680:10: ',' normalParameterDecl
						{
						DebugLocation(680, 10);
						char_literal200=(IToken)Match(input,COMMA,Follow._COMMA_in_formalParameterDecls3202); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal200_tree = (object)adaptor.Create(char_literal200, "char_literal200", retval);
						adaptor.AddChild(root_0, char_literal200_tree);
						}
						DebugLocation(680, 14);
						PushFollow(Follow._normalParameterDecl_in_formalParameterDecls3204);
						normalParameterDecl201=normalParameterDecl();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, normalParameterDecl201.Tree, normalParameterDecl201, "normalParameterDecl201", retval);

						}
						break;

					default:
						goto loop73;
					}
				}

				loop73:
					;

				} finally { DebugExitSubRule(73); }


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:682:9: ( normalParameterDecl ',' )+ ellipsisParameterDecl
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(682, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:682:9: ( normalParameterDecl ',' )+
				int cnt74=0;
				try { DebugEnterSubRule(74);
				while (true)
				{
					int alt74=2;
					try { DebugEnterDecision(74, false);
					switch (input.LA(1))
					{
					case FINAL:
						{
						int LA74_2 = input.LA(2);

						if ((EvaluatePredicate(synpred102_Java_fragment)))
						{
							alt74 = 1;
						}


						}
						break;
					case MONKEYS_AT:
						{
						int LA74_2 = input.LA(2);

						if ((EvaluatePredicate(synpred102_Java_fragment)))
						{
							alt74 = 1;
						}


						}
						break;
					case IDENTIFIER:
						{
						int LA74_2 = input.LA(2);

						if ((EvaluatePredicate(synpred102_Java_fragment)))
						{
							alt74 = 1;
						}


						}
						break;
					case BOOLEAN:
					case BYTE:
					case CHAR:
					case DOUBLE:
					case FLOAT:
					case INT:
					case LONG:
					case SHORT:
						{
						int LA74_2 = input.LA(2);

						if ((EvaluatePredicate(synpred102_Java_fragment)))
						{
							alt74 = 1;
						}


						}
						break;
					}

					} finally { DebugExitDecision(74); }
					switch (alt74)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:682:10: normalParameterDecl ','
						{
						DebugLocation(682, 10);
						PushFollow(Follow._normalParameterDecl_in_formalParameterDecls3226);
						normalParameterDecl202=normalParameterDecl();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, normalParameterDecl202.Tree, normalParameterDecl202, "normalParameterDecl202", retval);
						DebugLocation(683, 9);
						char_literal203=(IToken)Match(input,COMMA,Follow._COMMA_in_formalParameterDecls3236); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal203_tree = (object)adaptor.Create(char_literal203, "char_literal203", retval);
						adaptor.AddChild(root_0, char_literal203_tree);
						}

						}
						break;

					default:
						if (cnt74 >= 1)
							goto loop74;

						if (state.backtracking>0) {state.failed=true; return retval;}
						EarlyExitException eee74 = new EarlyExitException( 74, input );
						DebugRecognitionException(eee74);
						throw eee74;
					}
					cnt74++;
				}
				loop74:
					;

				} finally { DebugExitSubRule(74); }

				DebugLocation(685, 9);
				PushFollow(Follow._ellipsisParameterDecl_in_formalParameterDecls3258);
				ellipsisParameterDecl204=ellipsisParameterDecl();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, ellipsisParameterDecl204.Tree, ellipsisParameterDecl204, "ellipsisParameterDecl204", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("formalParameterDecls", 40);
			LeaveRule("formalParameterDecls", 40);
			LeaveRule_formalParameterDecls();
			if (state.backtracking > 0) { Memoize(input, 40, formalParameterDecls_StartIndex); }

		}
		DebugLocation(686, 4);
		} finally { DebugExitRule(GrammarFileName, "formalParameterDecls"); }
		return retval;

	}
	// $ANTLR end "formalParameterDecls"

	partial void EnterRule_normalParameterDecl();
	partial void LeaveRule_normalParameterDecl();
	// $ANTLR start "normalParameterDecl"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:688:1: normalParameterDecl : variableModifiers type IDENTIFIER ( '[' ']' )* ;
	[GrammarRule("normalParameterDecl")]
	private Antlr3AstNode normalParameterDecl()
	{
		EnterRule_normalParameterDecl();
		EnterRule("normalParameterDecl", 41);
		var retval = new Antlr3AstNode("normalParameterDecl");
		
		retval.Start = (IToken)input.LT(1);
		int normalParameterDecl_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER207 = default(IToken);
		IToken char_literal208 = default(IToken);
		IToken char_literal209 = default(IToken);
		Antlr3AstNode variableModifiers205 = default(Antlr3AstNode);
		Antlr3AstNode type206 = default(Antlr3AstNode);

		object IDENTIFIER207_tree = default(object);
		object char_literal208_tree = default(object);
		object char_literal209_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "normalParameterDecl");
		DebugLocation(688, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 41)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:689:5: ( variableModifiers type IDENTIFIER ( '[' ']' )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:689:9: variableModifiers type IDENTIFIER ( '[' ']' )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(689, 9);
			PushFollow(Follow._variableModifiers_in_normalParameterDecl3278);
			variableModifiers205=variableModifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableModifiers205.Tree, variableModifiers205, "variableModifiers205", retval);
			DebugLocation(689, 27);
			PushFollow(Follow._type_in_normalParameterDecl3280);
			type206=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type206.Tree, type206, "type206", retval);
			DebugLocation(689, 32);
			IDENTIFIER207=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_normalParameterDecl3282); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER207_tree = (object)adaptor.Create(IDENTIFIER207, "IDENTIFIER207", retval);
			adaptor.AddChild(root_0, IDENTIFIER207_tree);
			}
			DebugLocation(690, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:690:9: ( '[' ']' )*
			try { DebugEnterSubRule(76);
			while (true)
			{
				int alt76=2;
				try { DebugEnterDecision(76, false);
				int LA76_1 = input.LA(1);

				if ((LA76_1==LBRACKET))
				{
					alt76 = 1;
				}


				} finally { DebugExitDecision(76); }
				switch ( alt76 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:690:10: '[' ']'
					{
					DebugLocation(690, 10);
					char_literal208=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_normalParameterDecl3293); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal208_tree = (object)adaptor.Create(char_literal208, "char_literal208", retval);
					adaptor.AddChild(root_0, char_literal208_tree);
					}
					DebugLocation(690, 14);
					char_literal209=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_normalParameterDecl3295); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal209_tree = (object)adaptor.Create(char_literal209, "char_literal209", retval);
					adaptor.AddChild(root_0, char_literal209_tree);
					}

					}
					break;

				default:
					goto loop76;
				}
			}

			loop76:
				;

			} finally { DebugExitSubRule(76); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("normalParameterDecl", 41);
			LeaveRule("normalParameterDecl", 41);
			LeaveRule_normalParameterDecl();
			if (state.backtracking > 0) { Memoize(input, 41, normalParameterDecl_StartIndex); }

		}
		DebugLocation(692, 4);
		} finally { DebugExitRule(GrammarFileName, "normalParameterDecl"); }
		return retval;

	}
	// $ANTLR end "normalParameterDecl"

	partial void EnterRule_ellipsisParameterDecl();
	partial void LeaveRule_ellipsisParameterDecl();
	// $ANTLR start "ellipsisParameterDecl"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:694:1: ellipsisParameterDecl : variableModifiers type '...' IDENTIFIER ;
	[GrammarRule("ellipsisParameterDecl")]
	private Antlr3AstNode ellipsisParameterDecl()
	{
		EnterRule_ellipsisParameterDecl();
		EnterRule("ellipsisParameterDecl", 42);
		var retval = new Antlr3AstNode("ellipsisParameterDecl");
		
		retval.Start = (IToken)input.LT(1);
		int ellipsisParameterDecl_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal212 = default(IToken);
		IToken IDENTIFIER213 = default(IToken);
		Antlr3AstNode variableModifiers210 = default(Antlr3AstNode);
		Antlr3AstNode type211 = default(Antlr3AstNode);

		object string_literal212_tree = default(object);
		object IDENTIFIER213_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "ellipsisParameterDecl");
		DebugLocation(694, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 42)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:695:5: ( variableModifiers type '...' IDENTIFIER )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:695:9: variableModifiers type '...' IDENTIFIER
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(695, 9);
			PushFollow(Follow._variableModifiers_in_ellipsisParameterDecl3326);
			variableModifiers210=variableModifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableModifiers210.Tree, variableModifiers210, "variableModifiers210", retval);
			DebugLocation(696, 9);
			PushFollow(Follow._type_in_ellipsisParameterDecl3336);
			type211=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type211.Tree, type211, "type211", retval);
			DebugLocation(696, 15);
			string_literal212=(IToken)Match(input,ELLIPSIS,Follow._ELLIPSIS_in_ellipsisParameterDecl3339); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal212_tree = (object)adaptor.Create(string_literal212, "string_literal212", retval);
			adaptor.AddChild(root_0, string_literal212_tree);
			}
			DebugLocation(697, 9);
			IDENTIFIER213=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_ellipsisParameterDecl3349); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER213_tree = (object)adaptor.Create(IDENTIFIER213, "IDENTIFIER213", retval);
			adaptor.AddChild(root_0, IDENTIFIER213_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("ellipsisParameterDecl", 42);
			LeaveRule("ellipsisParameterDecl", 42);
			LeaveRule_ellipsisParameterDecl();
			if (state.backtracking > 0) { Memoize(input, 42, ellipsisParameterDecl_StartIndex); }

		}
		DebugLocation(698, 4);
		} finally { DebugExitRule(GrammarFileName, "ellipsisParameterDecl"); }
		return retval;

	}
	// $ANTLR end "ellipsisParameterDecl"

	partial void EnterRule_explicitConstructorInvocation();
	partial void LeaveRule_explicitConstructorInvocation();
	// $ANTLR start "explicitConstructorInvocation"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:701:1: explicitConstructorInvocation : ( ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';' | primary '.' ( nonWildcardTypeArguments )? 'super' arguments ';' );
	[GrammarRule("explicitConstructorInvocation")]
	private Antlr3AstNode explicitConstructorInvocation()
	{
		EnterRule_explicitConstructorInvocation();
		EnterRule("explicitConstructorInvocation", 43);
		var retval = new Antlr3AstNode("explicitConstructorInvocation");
		
		retval.Start = (IToken)input.LT(1);
		int explicitConstructorInvocation_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set215 = default(IToken);
		IToken char_literal217 = default(IToken);
		IToken char_literal219 = default(IToken);
		IToken string_literal221 = default(IToken);
		IToken char_literal223 = default(IToken);
		Antlr3AstNode nonWildcardTypeArguments214 = default(Antlr3AstNode);
		Antlr3AstNode arguments216 = default(Antlr3AstNode);
		Antlr3AstNode primary218 = default(Antlr3AstNode);
		Antlr3AstNode nonWildcardTypeArguments220 = default(Antlr3AstNode);
		Antlr3AstNode arguments222 = default(Antlr3AstNode);

		object set215_tree = default(object);
		object char_literal217_tree = default(object);
		object char_literal219_tree = default(object);
		object string_literal221_tree = default(object);
		object char_literal223_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "explicitConstructorInvocation");
		DebugLocation(701, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 43)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:702:5: ( ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';' | primary '.' ( nonWildcardTypeArguments )? 'super' arguments ';' )
			int alt79=2;
			try { DebugEnterDecision(79, false);
			switch (input.LA(1))
			{
			case LT:
				{
				alt79 = 1;
				}
				break;
			case THIS:
				{
				int LA79_2 = input.LA(2);

				if ((EvaluatePredicate(synpred106_Java_fragment)))
				{
					alt79 = 1;
				}
				else if ((true))
				{
					alt79 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 79, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case CHARLITERAL:
			case DOUBLE:
			case DOUBLELITERAL:
			case FALSE:
			case FLOAT:
			case FLOATLITERAL:
			case IDENTIFIER:
			case INT:
			case INTLITERAL:
			case LONG:
			case LONGLITERAL:
			case LPAREN:
			case NEW:
			case NULL:
			case SHORT:
			case STRINGLITERAL:
			case TRUE:
			case VOID:
				{
				alt79 = 2;
				}
				break;
			case SUPER:
				{
				int LA79_2 = input.LA(2);

				if ((EvaluatePredicate(synpred106_Java_fragment)))
				{
					alt79 = 1;
				}
				else if ((true))
				{
					alt79 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 79, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 79, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(79); }
			switch (alt79)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:702:9: ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(702, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:702:9: ( nonWildcardTypeArguments )?
				int alt77=2;
				try { DebugEnterSubRule(77);
				try { DebugEnterDecision(77, false);
				int LA77_1 = input.LA(1);

				if ((LA77_1==LT))
				{
					alt77 = 1;
				}
				} finally { DebugExitDecision(77); }
				switch (alt77)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:702:10: nonWildcardTypeArguments
					{
					DebugLocation(702, 10);
					PushFollow(Follow._nonWildcardTypeArguments_in_explicitConstructorInvocation3371);
					nonWildcardTypeArguments214=nonWildcardTypeArguments();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, nonWildcardTypeArguments214.Tree, nonWildcardTypeArguments214, "nonWildcardTypeArguments214", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(77); }

				DebugLocation(704, 9);

				set215=(IToken)input.LT(1);
				if (input.LA(1)==SUPER||input.LA(1)==THIS)
				{
					input.Consume();
					if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set215, "set215", retval));
					state.errorRecovery=false;state.failed=false;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					DebugRecognitionException(mse);
					throw mse;
				}

				DebugLocation(707, 9);
				PushFollow(Follow._arguments_in_explicitConstructorInvocation3429);
				arguments216=arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arguments216.Tree, arguments216, "arguments216", retval);
				DebugLocation(707, 19);
				char_literal217=(IToken)Match(input,SEMI,Follow._SEMI_in_explicitConstructorInvocation3431); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal217_tree = (object)adaptor.Create(char_literal217, "char_literal217", retval);
				adaptor.AddChild(root_0, char_literal217_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:709:9: primary '.' ( nonWildcardTypeArguments )? 'super' arguments ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(709, 9);
				PushFollow(Follow._primary_in_explicitConstructorInvocation3442);
				primary218=primary();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primary218.Tree, primary218, "primary218", retval);
				DebugLocation(710, 9);
				char_literal219=(IToken)Match(input,DOT,Follow._DOT_in_explicitConstructorInvocation3452); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal219_tree = (object)adaptor.Create(char_literal219, "char_literal219", retval);
				adaptor.AddChild(root_0, char_literal219_tree);
				}
				DebugLocation(711, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:711:9: ( nonWildcardTypeArguments )?
				int alt78=2;
				try { DebugEnterSubRule(78);
				try { DebugEnterDecision(78, false);
				int LA78_1 = input.LA(1);

				if ((LA78_1==LT))
				{
					alt78 = 1;
				}
				} finally { DebugExitDecision(78); }
				switch (alt78)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:711:10: nonWildcardTypeArguments
					{
					DebugLocation(711, 10);
					PushFollow(Follow._nonWildcardTypeArguments_in_explicitConstructorInvocation3463);
					nonWildcardTypeArguments220=nonWildcardTypeArguments();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, nonWildcardTypeArguments220.Tree, nonWildcardTypeArguments220, "nonWildcardTypeArguments220", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(78); }

				DebugLocation(713, 9);
				string_literal221=(IToken)Match(input,SUPER,Follow._SUPER_in_explicitConstructorInvocation3484); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal221_tree = (object)adaptor.Create(string_literal221, "string_literal221", retval);
				adaptor.AddChild(root_0, string_literal221_tree);
				}
				DebugLocation(714, 9);
				PushFollow(Follow._arguments_in_explicitConstructorInvocation3494);
				arguments222=arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arguments222.Tree, arguments222, "arguments222", retval);
				DebugLocation(714, 19);
				char_literal223=(IToken)Match(input,SEMI,Follow._SEMI_in_explicitConstructorInvocation3496); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal223_tree = (object)adaptor.Create(char_literal223, "char_literal223", retval);
				adaptor.AddChild(root_0, char_literal223_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("explicitConstructorInvocation", 43);
			LeaveRule("explicitConstructorInvocation", 43);
			LeaveRule_explicitConstructorInvocation();
			if (state.backtracking > 0) { Memoize(input, 43, explicitConstructorInvocation_StartIndex); }

		}
		DebugLocation(715, 4);
		} finally { DebugExitRule(GrammarFileName, "explicitConstructorInvocation"); }
		return retval;

	}
	// $ANTLR end "explicitConstructorInvocation"

	partial void EnterRule_qualifiedName();
	partial void LeaveRule_qualifiedName();
	// $ANTLR start "qualifiedName"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:717:1: qualifiedName : IDENTIFIER ( '.' IDENTIFIER )* ;
	[GrammarRule("qualifiedName")]
	private Antlr3AstNode qualifiedName()
	{
		EnterRule_qualifiedName();
		EnterRule("qualifiedName", 44);
		var retval = new Antlr3AstNode("qualifiedName");
		
		retval.Start = (IToken)input.LT(1);
		int qualifiedName_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER224 = default(IToken);
		IToken char_literal225 = default(IToken);
		IToken IDENTIFIER226 = default(IToken);

		object IDENTIFIER224_tree = default(object);
		object char_literal225_tree = default(object);
		object IDENTIFIER226_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "qualifiedName");
		DebugLocation(717, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 44)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:718:5: ( IDENTIFIER ( '.' IDENTIFIER )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:718:9: IDENTIFIER ( '.' IDENTIFIER )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(718, 9);
			IDENTIFIER224=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_qualifiedName3516); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER224_tree = (object)adaptor.Create(IDENTIFIER224, "IDENTIFIER224", retval);
			adaptor.AddChild(root_0, IDENTIFIER224_tree);
			}
			DebugLocation(719, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:719:9: ( '.' IDENTIFIER )*
			try { DebugEnterSubRule(80);
			while (true)
			{
				int alt80=2;
				try { DebugEnterDecision(80, false);
				int LA80_1 = input.LA(1);

				if ((LA80_1==DOT))
				{
					alt80 = 1;
				}


				} finally { DebugExitDecision(80); }
				switch ( alt80 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:719:10: '.' IDENTIFIER
					{
					DebugLocation(719, 10);
					char_literal225=(IToken)Match(input,DOT,Follow._DOT_in_qualifiedName3527); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal225_tree = (object)adaptor.Create(char_literal225, "char_literal225", retval);
					adaptor.AddChild(root_0, char_literal225_tree);
					}
					DebugLocation(719, 14);
					IDENTIFIER226=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_qualifiedName3529); if (state.failed) return retval;
					if (state.backtracking == 0) {
					IDENTIFIER226_tree = (object)adaptor.Create(IDENTIFIER226, "IDENTIFIER226", retval);
					adaptor.AddChild(root_0, IDENTIFIER226_tree);
					}

					}
					break;

				default:
					goto loop80;
				}
			}

			loop80:
				;

			} finally { DebugExitSubRule(80); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("qualifiedName", 44);
			LeaveRule("qualifiedName", 44);
			LeaveRule_qualifiedName();
			if (state.backtracking > 0) { Memoize(input, 44, qualifiedName_StartIndex); }

		}
		DebugLocation(721, 4);
		} finally { DebugExitRule(GrammarFileName, "qualifiedName"); }
		return retval;

	}
	// $ANTLR end "qualifiedName"

	partial void EnterRule_annotations();
	partial void LeaveRule_annotations();
	// $ANTLR start "annotations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:723:1: annotations : ( annotation )+ ;
	[GrammarRule("annotations")]
	private Antlr3AstNode annotations()
	{
		EnterRule_annotations();
		EnterRule("annotations", 45);
		var retval = new Antlr3AstNode("annotations");
		
		retval.Start = (IToken)input.LT(1);
		int annotations_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode annotation227 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "annotations");
		DebugLocation(723, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 45)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:724:5: ( ( annotation )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:724:9: ( annotation )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(724, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:724:9: ( annotation )+
			int cnt81=0;
			try { DebugEnterSubRule(81);
			while (true)
			{
				int alt81=2;
				try { DebugEnterDecision(81, false);
				int LA81_1 = input.LA(1);

				if ((LA81_1==MONKEYS_AT))
				{
					alt81 = 1;
				}


				} finally { DebugExitDecision(81); }
				switch (alt81)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:724:10: annotation
					{
					DebugLocation(724, 10);
					PushFollow(Follow._annotation_in_annotations3561);
					annotation227=annotation();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, annotation227.Tree, annotation227, "annotation227", retval);

					}
					break;

				default:
					if (cnt81 >= 1)
						goto loop81;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee81 = new EarlyExitException( 81, input );
					DebugRecognitionException(eee81);
					throw eee81;
				}
				cnt81++;
			}
			loop81:
				;

			} finally { DebugExitSubRule(81); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("annotations", 45);
			LeaveRule("annotations", 45);
			LeaveRule_annotations();
			if (state.backtracking > 0) { Memoize(input, 45, annotations_StartIndex); }

		}
		DebugLocation(726, 4);
		} finally { DebugExitRule(GrammarFileName, "annotations"); }
		return retval;

	}
	// $ANTLR end "annotations"

	partial void EnterRule_annotation();
	partial void LeaveRule_annotation();
	// $ANTLR start "annotation"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:732:1: annotation : '@' qualifiedName ( '(' ( elementValuePairs | elementValue )? ')' )? ;
	[GrammarRule("annotation")]
	private Antlr3AstNode annotation()
	{
		EnterRule_annotation();
		EnterRule("annotation", 46);
		var retval = new Antlr3AstNode("annotation");
		
		retval.Start = (IToken)input.LT(1);
		int annotation_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal228 = default(IToken);
		IToken char_literal230 = default(IToken);
		IToken char_literal233 = default(IToken);
		Antlr3AstNode qualifiedName229 = default(Antlr3AstNode);
		Antlr3AstNode elementValuePairs231 = default(Antlr3AstNode);
		Antlr3AstNode elementValue232 = default(Antlr3AstNode);

		object char_literal228_tree = default(object);
		object char_literal230_tree = default(object);
		object char_literal233_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "annotation");
		DebugLocation(732, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 46)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:733:5: ( '@' qualifiedName ( '(' ( elementValuePairs | elementValue )? ')' )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:733:9: '@' qualifiedName ( '(' ( elementValuePairs | elementValue )? ')' )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(733, 9);
			char_literal228=(IToken)Match(input,MONKEYS_AT,Follow._MONKEYS_AT_in_annotation3594); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal228_tree = (object)adaptor.Create(char_literal228, "char_literal228", retval);
			adaptor.AddChild(root_0, char_literal228_tree);
			}
			DebugLocation(733, 13);
			PushFollow(Follow._qualifiedName_in_annotation3596);
			qualifiedName229=qualifiedName();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedName229.Tree, qualifiedName229, "qualifiedName229", retval);
			DebugLocation(734, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:734:9: ( '(' ( elementValuePairs | elementValue )? ')' )?
			int alt83=2;
			try { DebugEnterSubRule(83);
			try { DebugEnterDecision(83, false);
			int LA83_1 = input.LA(1);

			if ((LA83_1==LPAREN))
			{
				alt83 = 1;
			}
			} finally { DebugExitDecision(83); }
			switch (alt83)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:734:13: '(' ( elementValuePairs | elementValue )? ')'
				{
				DebugLocation(734, 13);
				char_literal230=(IToken)Match(input,LPAREN,Follow._LPAREN_in_annotation3610); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal230_tree = (object)adaptor.Create(char_literal230, "char_literal230", retval);
				adaptor.AddChild(root_0, char_literal230_tree);
				}
				DebugLocation(735, 19);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:735:19: ( elementValuePairs | elementValue )?
				int alt82=3;
				try { DebugEnterSubRule(82);
				try { DebugEnterDecision(82, false);
				int LA82_1 = input.LA(1);

				if ((LA82_1==IDENTIFIER))
				{
					int LA82_2 = input.LA(2);

					if ((LA82_2==EQ))
					{
						alt82 = 1;
					}
					else if (((LA82_2>=AMP && LA82_2<=AMPAMP)||(LA82_2>=BANGEQ && LA82_2<=BARBAR)||LA82_2==CARET||LA82_2==DOT||LA82_2==EQEQ||LA82_2==GT||LA82_2==INSTANCEOF||LA82_2==LBRACKET||(LA82_2>=LPAREN && LA82_2<=LT)||LA82_2==PERCENT||LA82_2==PLUS||LA82_2==PLUSPLUS||LA82_2==QUES||LA82_2==RPAREN||LA82_2==SLASH||LA82_2==STAR||LA82_2==SUB||LA82_2==SUBSUB))
					{
						alt82 = 2;
					}
				}
				else if ((LA82_1==BANG||LA82_1==BOOLEAN||LA82_1==BYTE||(LA82_1>=CHAR && LA82_1<=CHARLITERAL)||(LA82_1>=DOUBLE && LA82_1<=DOUBLELITERAL)||LA82_1==FALSE||(LA82_1>=FLOAT && LA82_1<=FLOATLITERAL)||LA82_1==INT||LA82_1==INTLITERAL||LA82_1==LBRACE||(LA82_1>=LONG && LA82_1<=LPAREN)||LA82_1==MONKEYS_AT||(LA82_1>=NEW && LA82_1<=NULL)||LA82_1==PLUS||LA82_1==PLUSPLUS||LA82_1==SHORT||(LA82_1>=STRINGLITERAL && LA82_1<=SUB)||(LA82_1>=SUBSUB && LA82_1<=SUPER)||LA82_1==THIS||LA82_1==TILDE||LA82_1==TRUE||LA82_1==VOID))
				{
					alt82 = 2;
				}
				} finally { DebugExitDecision(82); }
				switch (alt82)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:735:23: elementValuePairs
					{
					DebugLocation(735, 23);
					PushFollow(Follow._elementValuePairs_in_annotation3637);
					elementValuePairs231=elementValuePairs();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, elementValuePairs231.Tree, elementValuePairs231, "elementValuePairs231", retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:736:23: elementValue
					{
					DebugLocation(736, 23);
					PushFollow(Follow._elementValue_in_annotation3661);
					elementValue232=elementValue();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, elementValue232.Tree, elementValue232, "elementValue232", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(82); }

				DebugLocation(738, 13);
				char_literal233=(IToken)Match(input,RPAREN,Follow._RPAREN_in_annotation3697); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal233_tree = (object)adaptor.Create(char_literal233, "char_literal233", retval);
				adaptor.AddChild(root_0, char_literal233_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(83); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("annotation", 46);
			LeaveRule("annotation", 46);
			LeaveRule_annotation();
			if (state.backtracking > 0) { Memoize(input, 46, annotation_StartIndex); }

		}
		DebugLocation(740, 4);
		} finally { DebugExitRule(GrammarFileName, "annotation"); }
		return retval;

	}
	// $ANTLR end "annotation"

	partial void EnterRule_elementValuePairs();
	partial void LeaveRule_elementValuePairs();
	// $ANTLR start "elementValuePairs"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:742:1: elementValuePairs : elementValuePair ( ',' elementValuePair )* ;
	[GrammarRule("elementValuePairs")]
	private Antlr3AstNode elementValuePairs()
	{
		EnterRule_elementValuePairs();
		EnterRule("elementValuePairs", 47);
		var retval = new Antlr3AstNode("elementValuePairs");
		
		retval.Start = (IToken)input.LT(1);
		int elementValuePairs_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal235 = default(IToken);
		Antlr3AstNode elementValuePair234 = default(Antlr3AstNode);
		Antlr3AstNode elementValuePair236 = default(Antlr3AstNode);

		object char_literal235_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "elementValuePairs");
		DebugLocation(742, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 47)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:743:5: ( elementValuePair ( ',' elementValuePair )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:743:9: elementValuePair ( ',' elementValuePair )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(743, 9);
			PushFollow(Follow._elementValuePair_in_elementValuePairs3729);
			elementValuePair234=elementValuePair();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, elementValuePair234.Tree, elementValuePair234, "elementValuePair234", retval);
			DebugLocation(744, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:744:9: ( ',' elementValuePair )*
			try { DebugEnterSubRule(84);
			while (true)
			{
				int alt84=2;
				try { DebugEnterDecision(84, false);
				int LA84_1 = input.LA(1);

				if ((LA84_1==COMMA))
				{
					alt84 = 1;
				}


				} finally { DebugExitDecision(84); }
				switch ( alt84 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:744:10: ',' elementValuePair
					{
					DebugLocation(744, 10);
					char_literal235=(IToken)Match(input,COMMA,Follow._COMMA_in_elementValuePairs3740); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal235_tree = (object)adaptor.Create(char_literal235, "char_literal235", retval);
					adaptor.AddChild(root_0, char_literal235_tree);
					}
					DebugLocation(744, 14);
					PushFollow(Follow._elementValuePair_in_elementValuePairs3742);
					elementValuePair236=elementValuePair();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, elementValuePair236.Tree, elementValuePair236, "elementValuePair236", retval);

					}
					break;

				default:
					goto loop84;
				}
			}

			loop84:
				;

			} finally { DebugExitSubRule(84); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("elementValuePairs", 47);
			LeaveRule("elementValuePairs", 47);
			LeaveRule_elementValuePairs();
			if (state.backtracking > 0) { Memoize(input, 47, elementValuePairs_StartIndex); }

		}
		DebugLocation(746, 4);
		} finally { DebugExitRule(GrammarFileName, "elementValuePairs"); }
		return retval;

	}
	// $ANTLR end "elementValuePairs"

	partial void EnterRule_elementValuePair();
	partial void LeaveRule_elementValuePair();
	// $ANTLR start "elementValuePair"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:748:1: elementValuePair : IDENTIFIER '=' elementValue ;
	[GrammarRule("elementValuePair")]
	private Antlr3AstNode elementValuePair()
	{
		EnterRule_elementValuePair();
		EnterRule("elementValuePair", 48);
		var retval = new Antlr3AstNode("elementValuePair");
		
		retval.Start = (IToken)input.LT(1);
		int elementValuePair_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER237 = default(IToken);
		IToken char_literal238 = default(IToken);
		Antlr3AstNode elementValue239 = default(Antlr3AstNode);

		object IDENTIFIER237_tree = default(object);
		object char_literal238_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "elementValuePair");
		DebugLocation(748, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 48)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:749:5: ( IDENTIFIER '=' elementValue )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:749:9: IDENTIFIER '=' elementValue
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(749, 9);
			IDENTIFIER237=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_elementValuePair3773); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER237_tree = (object)adaptor.Create(IDENTIFIER237, "IDENTIFIER237", retval);
			adaptor.AddChild(root_0, IDENTIFIER237_tree);
			}
			DebugLocation(749, 20);
			char_literal238=(IToken)Match(input,EQ,Follow._EQ_in_elementValuePair3775); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal238_tree = (object)adaptor.Create(char_literal238, "char_literal238", retval);
			adaptor.AddChild(root_0, char_literal238_tree);
			}
			DebugLocation(749, 24);
			PushFollow(Follow._elementValue_in_elementValuePair3777);
			elementValue239=elementValue();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, elementValue239.Tree, elementValue239, "elementValue239", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("elementValuePair", 48);
			LeaveRule("elementValuePair", 48);
			LeaveRule_elementValuePair();
			if (state.backtracking > 0) { Memoize(input, 48, elementValuePair_StartIndex); }

		}
		DebugLocation(750, 4);
		} finally { DebugExitRule(GrammarFileName, "elementValuePair"); }
		return retval;

	}
	// $ANTLR end "elementValuePair"

	partial void EnterRule_elementValue();
	partial void LeaveRule_elementValue();
	// $ANTLR start "elementValue"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:752:1: elementValue : ( conditionalExpression | annotation | elementValueArrayInitializer );
	[GrammarRule("elementValue")]
	private Antlr3AstNode elementValue()
	{
		EnterRule_elementValue();
		EnterRule("elementValue", 49);
		var retval = new Antlr3AstNode("elementValue");
		
		retval.Start = (IToken)input.LT(1);
		int elementValue_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode conditionalExpression240 = default(Antlr3AstNode);
		Antlr3AstNode annotation241 = default(Antlr3AstNode);
		Antlr3AstNode elementValueArrayInitializer242 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "elementValue");
		DebugLocation(752, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 49)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:753:5: ( conditionalExpression | annotation | elementValueArrayInitializer )
			int alt85=3;
			try { DebugEnterDecision(85, false);
			switch (input.LA(1))
			{
			case BANG:
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case CHARLITERAL:
			case DOUBLE:
			case DOUBLELITERAL:
			case FALSE:
			case FLOAT:
			case FLOATLITERAL:
			case IDENTIFIER:
			case INT:
			case INTLITERAL:
			case LONG:
			case LONGLITERAL:
			case LPAREN:
			case NEW:
			case NULL:
			case PLUS:
			case PLUSPLUS:
			case SHORT:
			case STRINGLITERAL:
			case SUB:
			case SUBSUB:
			case SUPER:
			case THIS:
			case TILDE:
			case TRUE:
			case VOID:
				{
				alt85 = 1;
				}
				break;
			case MONKEYS_AT:
				{
				alt85 = 2;
				}
				break;
			case LBRACE:
				{
				alt85 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 85, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(85); }
			switch (alt85)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:753:9: conditionalExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(753, 9);
				PushFollow(Follow._conditionalExpression_in_elementValue3797);
				conditionalExpression240=conditionalExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, conditionalExpression240.Tree, conditionalExpression240, "conditionalExpression240", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:754:9: annotation
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(754, 9);
				PushFollow(Follow._annotation_in_elementValue3807);
				annotation241=annotation();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, annotation241.Tree, annotation241, "annotation241", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:755:9: elementValueArrayInitializer
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(755, 9);
				PushFollow(Follow._elementValueArrayInitializer_in_elementValue3817);
				elementValueArrayInitializer242=elementValueArrayInitializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, elementValueArrayInitializer242.Tree, elementValueArrayInitializer242, "elementValueArrayInitializer242", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("elementValue", 49);
			LeaveRule("elementValue", 49);
			LeaveRule_elementValue();
			if (state.backtracking > 0) { Memoize(input, 49, elementValue_StartIndex); }

		}
		DebugLocation(756, 4);
		} finally { DebugExitRule(GrammarFileName, "elementValue"); }
		return retval;

	}
	// $ANTLR end "elementValue"

	partial void EnterRule_elementValueArrayInitializer();
	partial void LeaveRule_elementValueArrayInitializer();
	// $ANTLR start "elementValueArrayInitializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:758:1: elementValueArrayInitializer : '{' ( elementValue ( ',' elementValue )* )? ( ',' )? '}' ;
	[GrammarRule("elementValueArrayInitializer")]
	private Antlr3AstNode elementValueArrayInitializer()
	{
		EnterRule_elementValueArrayInitializer();
		EnterRule("elementValueArrayInitializer", 50);
		var retval = new Antlr3AstNode("elementValueArrayInitializer");
		
		retval.Start = (IToken)input.LT(1);
		int elementValueArrayInitializer_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal243 = default(IToken);
		IToken char_literal245 = default(IToken);
		IToken char_literal247 = default(IToken);
		IToken char_literal248 = default(IToken);
		Antlr3AstNode elementValue244 = default(Antlr3AstNode);
		Antlr3AstNode elementValue246 = default(Antlr3AstNode);

		object char_literal243_tree = default(object);
		object char_literal245_tree = default(object);
		object char_literal247_tree = default(object);
		object char_literal248_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "elementValueArrayInitializer");
		DebugLocation(758, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 50)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:759:5: ( '{' ( elementValue ( ',' elementValue )* )? ( ',' )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:759:9: '{' ( elementValue ( ',' elementValue )* )? ( ',' )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(759, 9);
			char_literal243=(IToken)Match(input,LBRACE,Follow._LBRACE_in_elementValueArrayInitializer3837); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal243_tree = (object)adaptor.Create(char_literal243, "char_literal243", retval);
			adaptor.AddChild(root_0, char_literal243_tree);
			}
			DebugLocation(760, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:760:9: ( elementValue ( ',' elementValue )* )?
			int alt87=2;
			try { DebugEnterSubRule(87);
			try { DebugEnterDecision(87, false);
			int LA87_1 = input.LA(1);

			if ((LA87_1==BANG||LA87_1==BOOLEAN||LA87_1==BYTE||(LA87_1>=CHAR && LA87_1<=CHARLITERAL)||(LA87_1>=DOUBLE && LA87_1<=DOUBLELITERAL)||LA87_1==FALSE||(LA87_1>=FLOAT && LA87_1<=FLOATLITERAL)||LA87_1==IDENTIFIER||LA87_1==INT||LA87_1==INTLITERAL||LA87_1==LBRACE||(LA87_1>=LONG && LA87_1<=LPAREN)||LA87_1==MONKEYS_AT||(LA87_1>=NEW && LA87_1<=NULL)||LA87_1==PLUS||LA87_1==PLUSPLUS||LA87_1==SHORT||(LA87_1>=STRINGLITERAL && LA87_1<=SUB)||(LA87_1>=SUBSUB && LA87_1<=SUPER)||LA87_1==THIS||LA87_1==TILDE||LA87_1==TRUE||LA87_1==VOID))
			{
				alt87 = 1;
			}
			} finally { DebugExitDecision(87); }
			switch (alt87)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:760:10: elementValue ( ',' elementValue )*
				{
				DebugLocation(760, 10);
				PushFollow(Follow._elementValue_in_elementValueArrayInitializer3848);
				elementValue244=elementValue();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, elementValue244.Tree, elementValue244, "elementValue244", retval);
				DebugLocation(761, 13);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:761:13: ( ',' elementValue )*
				try { DebugEnterSubRule(86);
				while (true)
				{
					int alt86=2;
					try { DebugEnterDecision(86, false);
					int LA86_1 = input.LA(1);

					if ((LA86_1==COMMA))
					{
						int LA86_2 = input.LA(2);

						if ((LA86_2==BANG||LA86_2==BOOLEAN||LA86_2==BYTE||(LA86_2>=CHAR && LA86_2<=CHARLITERAL)||(LA86_2>=DOUBLE && LA86_2<=DOUBLELITERAL)||LA86_2==FALSE||(LA86_2>=FLOAT && LA86_2<=FLOATLITERAL)||LA86_2==IDENTIFIER||LA86_2==INT||LA86_2==INTLITERAL||LA86_2==LBRACE||(LA86_2>=LONG && LA86_2<=LPAREN)||LA86_2==MONKEYS_AT||(LA86_2>=NEW && LA86_2<=NULL)||LA86_2==PLUS||LA86_2==PLUSPLUS||LA86_2==SHORT||(LA86_2>=STRINGLITERAL && LA86_2<=SUB)||(LA86_2>=SUBSUB && LA86_2<=SUPER)||LA86_2==THIS||LA86_2==TILDE||LA86_2==TRUE||LA86_2==VOID))
						{
							alt86 = 1;
						}


					}


					} finally { DebugExitDecision(86); }
					switch ( alt86 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:761:14: ',' elementValue
						{
						DebugLocation(761, 14);
						char_literal245=(IToken)Match(input,COMMA,Follow._COMMA_in_elementValueArrayInitializer3863); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal245_tree = (object)adaptor.Create(char_literal245, "char_literal245", retval);
						adaptor.AddChild(root_0, char_literal245_tree);
						}
						DebugLocation(761, 18);
						PushFollow(Follow._elementValue_in_elementValueArrayInitializer3865);
						elementValue246=elementValue();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, elementValue246.Tree, elementValue246, "elementValue246", retval);

						}
						break;

					default:
						goto loop86;
					}
				}

				loop86:
					;

				} finally { DebugExitSubRule(86); }


				}
				break;

			}
			} finally { DebugExitSubRule(87); }

			DebugLocation(763, 12);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:763:12: ( ',' )?
			int alt88=2;
			try { DebugEnterSubRule(88);
			try { DebugEnterDecision(88, false);
			int LA88_1 = input.LA(1);

			if ((LA88_1==COMMA))
			{
				alt88 = 1;
			}
			} finally { DebugExitDecision(88); }
			switch (alt88)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:763:13: ','
				{
				DebugLocation(763, 13);
				char_literal247=(IToken)Match(input,COMMA,Follow._COMMA_in_elementValueArrayInitializer3894); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal247_tree = (object)adaptor.Create(char_literal247, "char_literal247", retval);
				adaptor.AddChild(root_0, char_literal247_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(88); }

			DebugLocation(763, 19);
			char_literal248=(IToken)Match(input,RBRACE,Follow._RBRACE_in_elementValueArrayInitializer3898); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal248_tree = (object)adaptor.Create(char_literal248, "char_literal248", retval);
			adaptor.AddChild(root_0, char_literal248_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("elementValueArrayInitializer", 50);
			LeaveRule("elementValueArrayInitializer", 50);
			LeaveRule_elementValueArrayInitializer();
			if (state.backtracking > 0) { Memoize(input, 50, elementValueArrayInitializer_StartIndex); }

		}
		DebugLocation(764, 4);
		} finally { DebugExitRule(GrammarFileName, "elementValueArrayInitializer"); }
		return retval;

	}
	// $ANTLR end "elementValueArrayInitializer"

	partial void EnterRule_annotationTypeDeclaration();
	partial void LeaveRule_annotationTypeDeclaration();
	// $ANTLR start "annotationTypeDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:770:1: annotationTypeDeclaration : modifiers '@' 'interface' IDENTIFIER annotationTypeBody ;
	[GrammarRule("annotationTypeDeclaration")]
	private Antlr3AstNode annotationTypeDeclaration()
	{
		EnterRule_annotationTypeDeclaration();
		EnterRule("annotationTypeDeclaration", 51);
		var retval = new Antlr3AstNode("annotationTypeDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int annotationTypeDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal250 = default(IToken);
		IToken string_literal251 = default(IToken);
		IToken IDENTIFIER252 = default(IToken);
		Antlr3AstNode modifiers249 = default(Antlr3AstNode);
		Antlr3AstNode annotationTypeBody253 = default(Antlr3AstNode);

		object char_literal250_tree = default(object);
		object string_literal251_tree = default(object);
		object IDENTIFIER252_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "annotationTypeDeclaration");
		DebugLocation(770, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 51)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:771:5: ( modifiers '@' 'interface' IDENTIFIER annotationTypeBody )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:771:9: modifiers '@' 'interface' IDENTIFIER annotationTypeBody
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(771, 9);
			PushFollow(Follow._modifiers_in_annotationTypeDeclaration3921);
			modifiers249=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers249.Tree, modifiers249, "modifiers249", retval);
			DebugLocation(771, 19);
			char_literal250=(IToken)Match(input,MONKEYS_AT,Follow._MONKEYS_AT_in_annotationTypeDeclaration3923); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal250_tree = (object)adaptor.Create(char_literal250, "char_literal250", retval);
			adaptor.AddChild(root_0, char_literal250_tree);
			}
			DebugLocation(772, 9);
			string_literal251=(IToken)Match(input,INTERFACE,Follow._INTERFACE_in_annotationTypeDeclaration3933); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal251_tree = (object)adaptor.Create(string_literal251, "string_literal251", retval);
			adaptor.AddChild(root_0, string_literal251_tree);
			}
			DebugLocation(773, 9);
			IDENTIFIER252=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_annotationTypeDeclaration3943); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER252_tree = (object)adaptor.Create(IDENTIFIER252, "IDENTIFIER252", retval);
			adaptor.AddChild(root_0, IDENTIFIER252_tree);
			}
			DebugLocation(774, 9);
			PushFollow(Follow._annotationTypeBody_in_annotationTypeDeclaration3953);
			annotationTypeBody253=annotationTypeBody();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, annotationTypeBody253.Tree, annotationTypeBody253, "annotationTypeBody253", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("annotationTypeDeclaration", 51);
			LeaveRule("annotationTypeDeclaration", 51);
			LeaveRule_annotationTypeDeclaration();
			if (state.backtracking > 0) { Memoize(input, 51, annotationTypeDeclaration_StartIndex); }

		}
		DebugLocation(775, 4);
		} finally { DebugExitRule(GrammarFileName, "annotationTypeDeclaration"); }
		return retval;

	}
	// $ANTLR end "annotationTypeDeclaration"

	partial void EnterRule_annotationTypeBody();
	partial void LeaveRule_annotationTypeBody();
	// $ANTLR start "annotationTypeBody"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:778:1: annotationTypeBody : '{' ( annotationTypeElementDeclaration )* '}' ;
	[GrammarRule("annotationTypeBody")]
	private Antlr3AstNode annotationTypeBody()
	{
		EnterRule_annotationTypeBody();
		EnterRule("annotationTypeBody", 52);
		var retval = new Antlr3AstNode("annotationTypeBody");
		
		retval.Start = (IToken)input.LT(1);
		int annotationTypeBody_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal254 = default(IToken);
		IToken char_literal256 = default(IToken);
		Antlr3AstNode annotationTypeElementDeclaration255 = default(Antlr3AstNode);

		object char_literal254_tree = default(object);
		object char_literal256_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "annotationTypeBody");
		DebugLocation(778, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 52)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:779:5: ( '{' ( annotationTypeElementDeclaration )* '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:779:9: '{' ( annotationTypeElementDeclaration )* '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(779, 9);
			char_literal254=(IToken)Match(input,LBRACE,Follow._LBRACE_in_annotationTypeBody3974); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal254_tree = (object)adaptor.Create(char_literal254, "char_literal254", retval);
			adaptor.AddChild(root_0, char_literal254_tree);
			}
			DebugLocation(780, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:780:9: ( annotationTypeElementDeclaration )*
			try { DebugEnterSubRule(89);
			while (true)
			{
				int alt89=2;
				try { DebugEnterDecision(89, false);
				int LA89_1 = input.LA(1);

				if ((LA89_1==ABSTRACT||LA89_1==BOOLEAN||LA89_1==BYTE||LA89_1==CHAR||LA89_1==CLASS||LA89_1==DOUBLE||LA89_1==ENUM||LA89_1==FINAL||LA89_1==FLOAT||LA89_1==IDENTIFIER||(LA89_1>=INT && LA89_1<=INTERFACE)||LA89_1==LONG||LA89_1==LT||(LA89_1>=MONKEYS_AT && LA89_1<=NATIVE)||(LA89_1>=PRIVATE && LA89_1<=PUBLIC)||(LA89_1>=SEMI && LA89_1<=SHORT)||(LA89_1>=STATIC && LA89_1<=STRICTFP)||LA89_1==SYNCHRONIZED||LA89_1==TRANSIENT||(LA89_1>=VOID && LA89_1<=VOLATILE)))
				{
					alt89 = 1;
				}


				} finally { DebugExitDecision(89); }
				switch ( alt89 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:780:10: annotationTypeElementDeclaration
					{
					DebugLocation(780, 10);
					PushFollow(Follow._annotationTypeElementDeclaration_in_annotationTypeBody3986);
					annotationTypeElementDeclaration255=annotationTypeElementDeclaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, annotationTypeElementDeclaration255.Tree, annotationTypeElementDeclaration255, "annotationTypeElementDeclaration255", retval);

					}
					break;

				default:
					goto loop89;
				}
			}

			loop89:
				;

			} finally { DebugExitSubRule(89); }

			DebugLocation(782, 9);
			char_literal256=(IToken)Match(input,RBRACE,Follow._RBRACE_in_annotationTypeBody4008); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal256_tree = (object)adaptor.Create(char_literal256, "char_literal256", retval);
			adaptor.AddChild(root_0, char_literal256_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("annotationTypeBody", 52);
			LeaveRule("annotationTypeBody", 52);
			LeaveRule_annotationTypeBody();
			if (state.backtracking > 0) { Memoize(input, 52, annotationTypeBody_StartIndex); }

		}
		DebugLocation(783, 4);
		} finally { DebugExitRule(GrammarFileName, "annotationTypeBody"); }
		return retval;

	}
	// $ANTLR end "annotationTypeBody"

	partial void EnterRule_annotationTypeElementDeclaration();
	partial void LeaveRule_annotationTypeElementDeclaration();
	// $ANTLR start "annotationTypeElementDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:788:1: annotationTypeElementDeclaration : ( annotationMethodDeclaration | interfaceFieldDeclaration | normalClassDeclaration | normalInterfaceDeclaration | enumDeclaration | annotationTypeDeclaration | ';' );
	[GrammarRule("annotationTypeElementDeclaration")]
	private Antlr3AstNode annotationTypeElementDeclaration()
	{
		EnterRule_annotationTypeElementDeclaration();
		EnterRule("annotationTypeElementDeclaration", 53);
		var retval = new Antlr3AstNode("annotationTypeElementDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int annotationTypeElementDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal263 = default(IToken);
		Antlr3AstNode annotationMethodDeclaration257 = default(Antlr3AstNode);
		Antlr3AstNode interfaceFieldDeclaration258 = default(Antlr3AstNode);
		Antlr3AstNode normalClassDeclaration259 = default(Antlr3AstNode);
		Antlr3AstNode normalInterfaceDeclaration260 = default(Antlr3AstNode);
		Antlr3AstNode enumDeclaration261 = default(Antlr3AstNode);
		Antlr3AstNode annotationTypeDeclaration262 = default(Antlr3AstNode);

		object char_literal263_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "annotationTypeElementDeclaration");
		DebugLocation(788, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 53)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:789:5: ( annotationMethodDeclaration | interfaceFieldDeclaration | normalClassDeclaration | normalInterfaceDeclaration | enumDeclaration | annotationTypeDeclaration | ';' )
			int alt90=7;
			try { DebugEnterDecision(90, false);
			switch (input.LA(1))
			{
			case MONKEYS_AT:
				{
				int LA90_2 = input.LA(2);

				if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt90 = 1;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt90 = 2;
				}
				else if ((EvaluatePredicate(synpred122_Java_fragment)))
				{
					alt90 = 3;
				}
				else if ((EvaluatePredicate(synpred123_Java_fragment)))
				{
					alt90 = 4;
				}
				else if ((EvaluatePredicate(synpred124_Java_fragment)))
				{
					alt90 = 5;
				}
				else if ((EvaluatePredicate(synpred125_Java_fragment)))
				{
					alt90 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PUBLIC:
				{
				int LA90_2 = input.LA(2);

				if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt90 = 1;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt90 = 2;
				}
				else if ((EvaluatePredicate(synpred122_Java_fragment)))
				{
					alt90 = 3;
				}
				else if ((EvaluatePredicate(synpred123_Java_fragment)))
				{
					alt90 = 4;
				}
				else if ((EvaluatePredicate(synpred124_Java_fragment)))
				{
					alt90 = 5;
				}
				else if ((EvaluatePredicate(synpred125_Java_fragment)))
				{
					alt90 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PROTECTED:
				{
				int LA90_2 = input.LA(2);

				if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt90 = 1;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt90 = 2;
				}
				else if ((EvaluatePredicate(synpred122_Java_fragment)))
				{
					alt90 = 3;
				}
				else if ((EvaluatePredicate(synpred123_Java_fragment)))
				{
					alt90 = 4;
				}
				else if ((EvaluatePredicate(synpred124_Java_fragment)))
				{
					alt90 = 5;
				}
				else if ((EvaluatePredicate(synpred125_Java_fragment)))
				{
					alt90 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PRIVATE:
				{
				int LA90_2 = input.LA(2);

				if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt90 = 1;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt90 = 2;
				}
				else if ((EvaluatePredicate(synpred122_Java_fragment)))
				{
					alt90 = 3;
				}
				else if ((EvaluatePredicate(synpred123_Java_fragment)))
				{
					alt90 = 4;
				}
				else if ((EvaluatePredicate(synpred124_Java_fragment)))
				{
					alt90 = 5;
				}
				else if ((EvaluatePredicate(synpred125_Java_fragment)))
				{
					alt90 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STATIC:
				{
				int LA90_2 = input.LA(2);

				if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt90 = 1;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt90 = 2;
				}
				else if ((EvaluatePredicate(synpred122_Java_fragment)))
				{
					alt90 = 3;
				}
				else if ((EvaluatePredicate(synpred123_Java_fragment)))
				{
					alt90 = 4;
				}
				else if ((EvaluatePredicate(synpred124_Java_fragment)))
				{
					alt90 = 5;
				}
				else if ((EvaluatePredicate(synpred125_Java_fragment)))
				{
					alt90 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case ABSTRACT:
				{
				int LA90_2 = input.LA(2);

				if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt90 = 1;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt90 = 2;
				}
				else if ((EvaluatePredicate(synpred122_Java_fragment)))
				{
					alt90 = 3;
				}
				else if ((EvaluatePredicate(synpred123_Java_fragment)))
				{
					alt90 = 4;
				}
				else if ((EvaluatePredicate(synpred124_Java_fragment)))
				{
					alt90 = 5;
				}
				else if ((EvaluatePredicate(synpred125_Java_fragment)))
				{
					alt90 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case FINAL:
				{
				int LA90_2 = input.LA(2);

				if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt90 = 1;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt90 = 2;
				}
				else if ((EvaluatePredicate(synpred122_Java_fragment)))
				{
					alt90 = 3;
				}
				else if ((EvaluatePredicate(synpred123_Java_fragment)))
				{
					alt90 = 4;
				}
				else if ((EvaluatePredicate(synpred124_Java_fragment)))
				{
					alt90 = 5;
				}
				else if ((EvaluatePredicate(synpred125_Java_fragment)))
				{
					alt90 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 7, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case NATIVE:
				{
				int LA90_2 = input.LA(2);

				if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt90 = 1;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt90 = 2;
				}
				else if ((EvaluatePredicate(synpred122_Java_fragment)))
				{
					alt90 = 3;
				}
				else if ((EvaluatePredicate(synpred123_Java_fragment)))
				{
					alt90 = 4;
				}
				else if ((EvaluatePredicate(synpred124_Java_fragment)))
				{
					alt90 = 5;
				}
				else if ((EvaluatePredicate(synpred125_Java_fragment)))
				{
					alt90 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 8, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case SYNCHRONIZED:
				{
				int LA90_2 = input.LA(2);

				if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt90 = 1;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt90 = 2;
				}
				else if ((EvaluatePredicate(synpred122_Java_fragment)))
				{
					alt90 = 3;
				}
				else if ((EvaluatePredicate(synpred123_Java_fragment)))
				{
					alt90 = 4;
				}
				else if ((EvaluatePredicate(synpred124_Java_fragment)))
				{
					alt90 = 5;
				}
				else if ((EvaluatePredicate(synpred125_Java_fragment)))
				{
					alt90 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 9, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case TRANSIENT:
				{
				int LA90_2 = input.LA(2);

				if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt90 = 1;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt90 = 2;
				}
				else if ((EvaluatePredicate(synpred122_Java_fragment)))
				{
					alt90 = 3;
				}
				else if ((EvaluatePredicate(synpred123_Java_fragment)))
				{
					alt90 = 4;
				}
				else if ((EvaluatePredicate(synpred124_Java_fragment)))
				{
					alt90 = 5;
				}
				else if ((EvaluatePredicate(synpred125_Java_fragment)))
				{
					alt90 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 10, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case VOLATILE:
				{
				int LA90_2 = input.LA(2);

				if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt90 = 1;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt90 = 2;
				}
				else if ((EvaluatePredicate(synpred122_Java_fragment)))
				{
					alt90 = 3;
				}
				else if ((EvaluatePredicate(synpred123_Java_fragment)))
				{
					alt90 = 4;
				}
				else if ((EvaluatePredicate(synpred124_Java_fragment)))
				{
					alt90 = 5;
				}
				else if ((EvaluatePredicate(synpred125_Java_fragment)))
				{
					alt90 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STRICTFP:
				{
				int LA90_2 = input.LA(2);

				if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt90 = 1;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt90 = 2;
				}
				else if ((EvaluatePredicate(synpred122_Java_fragment)))
				{
					alt90 = 3;
				}
				else if ((EvaluatePredicate(synpred123_Java_fragment)))
				{
					alt90 = 4;
				}
				else if ((EvaluatePredicate(synpred124_Java_fragment)))
				{
					alt90 = 5;
				}
				else if ((EvaluatePredicate(synpred125_Java_fragment)))
				{
					alt90 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 12, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case IDENTIFIER:
				{
				int LA90_2 = input.LA(2);

				if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt90 = 1;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt90 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 13, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
				{
				int LA90_2 = input.LA(2);

				if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt90 = 1;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt90 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 14, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case CLASS:
				{
				alt90 = 3;
				}
				break;
			case INTERFACE:
				{
				alt90 = 4;
				}
				break;
			case ENUM:
				{
				alt90 = 5;
				}
				break;
			case SEMI:
				{
				alt90 = 7;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(90); }
			switch (alt90)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:789:9: annotationMethodDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(789, 9);
				PushFollow(Follow._annotationMethodDeclaration_in_annotationTypeElementDeclaration4030);
				annotationMethodDeclaration257=annotationMethodDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, annotationMethodDeclaration257.Tree, annotationMethodDeclaration257, "annotationMethodDeclaration257", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:790:9: interfaceFieldDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(790, 9);
				PushFollow(Follow._interfaceFieldDeclaration_in_annotationTypeElementDeclaration4040);
				interfaceFieldDeclaration258=interfaceFieldDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceFieldDeclaration258.Tree, interfaceFieldDeclaration258, "interfaceFieldDeclaration258", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:791:9: normalClassDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(791, 9);
				PushFollow(Follow._normalClassDeclaration_in_annotationTypeElementDeclaration4050);
				normalClassDeclaration259=normalClassDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, normalClassDeclaration259.Tree, normalClassDeclaration259, "normalClassDeclaration259", retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:792:9: normalInterfaceDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(792, 9);
				PushFollow(Follow._normalInterfaceDeclaration_in_annotationTypeElementDeclaration4060);
				normalInterfaceDeclaration260=normalInterfaceDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, normalInterfaceDeclaration260.Tree, normalInterfaceDeclaration260, "normalInterfaceDeclaration260", retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:793:9: enumDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(793, 9);
				PushFollow(Follow._enumDeclaration_in_annotationTypeElementDeclaration4070);
				enumDeclaration261=enumDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enumDeclaration261.Tree, enumDeclaration261, "enumDeclaration261", retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:794:9: annotationTypeDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(794, 9);
				PushFollow(Follow._annotationTypeDeclaration_in_annotationTypeElementDeclaration4080);
				annotationTypeDeclaration262=annotationTypeDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, annotationTypeDeclaration262.Tree, annotationTypeDeclaration262, "annotationTypeDeclaration262", retval);

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:795:9: ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(795, 9);
				char_literal263=(IToken)Match(input,SEMI,Follow._SEMI_in_annotationTypeElementDeclaration4090); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal263_tree = (object)adaptor.Create(char_literal263, "char_literal263", retval);
				adaptor.AddChild(root_0, char_literal263_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("annotationTypeElementDeclaration", 53);
			LeaveRule("annotationTypeElementDeclaration", 53);
			LeaveRule_annotationTypeElementDeclaration();
			if (state.backtracking > 0) { Memoize(input, 53, annotationTypeElementDeclaration_StartIndex); }

		}
		DebugLocation(796, 4);
		} finally { DebugExitRule(GrammarFileName, "annotationTypeElementDeclaration"); }
		return retval;

	}
	// $ANTLR end "annotationTypeElementDeclaration"

	partial void EnterRule_annotationMethodDeclaration();
	partial void LeaveRule_annotationMethodDeclaration();
	// $ANTLR start "annotationMethodDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:798:1: annotationMethodDeclaration : modifiers type IDENTIFIER '(' ')' ( 'default' elementValue )? ';' ;
	[GrammarRule("annotationMethodDeclaration")]
	private Antlr3AstNode annotationMethodDeclaration()
	{
		EnterRule_annotationMethodDeclaration();
		EnterRule("annotationMethodDeclaration", 54);
		var retval = new Antlr3AstNode("annotationMethodDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int annotationMethodDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER266 = default(IToken);
		IToken char_literal267 = default(IToken);
		IToken char_literal268 = default(IToken);
		IToken string_literal269 = default(IToken);
		IToken char_literal271 = default(IToken);
		Antlr3AstNode modifiers264 = default(Antlr3AstNode);
		Antlr3AstNode type265 = default(Antlr3AstNode);
		Antlr3AstNode elementValue270 = default(Antlr3AstNode);

		object IDENTIFIER266_tree = default(object);
		object char_literal267_tree = default(object);
		object char_literal268_tree = default(object);
		object string_literal269_tree = default(object);
		object char_literal271_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "annotationMethodDeclaration");
		DebugLocation(798, 8);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 54)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:799:5: ( modifiers type IDENTIFIER '(' ')' ( 'default' elementValue )? ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:799:9: modifiers type IDENTIFIER '(' ')' ( 'default' elementValue )? ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(799, 9);
			PushFollow(Follow._modifiers_in_annotationMethodDeclaration4110);
			modifiers264=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers264.Tree, modifiers264, "modifiers264", retval);
			DebugLocation(799, 19);
			PushFollow(Follow._type_in_annotationMethodDeclaration4112);
			type265=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type265.Tree, type265, "type265", retval);
			DebugLocation(799, 24);
			IDENTIFIER266=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_annotationMethodDeclaration4114); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER266_tree = (object)adaptor.Create(IDENTIFIER266, "IDENTIFIER266", retval);
			adaptor.AddChild(root_0, IDENTIFIER266_tree);
			}
			DebugLocation(800, 9);
			char_literal267=(IToken)Match(input,LPAREN,Follow._LPAREN_in_annotationMethodDeclaration4124); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal267_tree = (object)adaptor.Create(char_literal267, "char_literal267", retval);
			adaptor.AddChild(root_0, char_literal267_tree);
			}
			DebugLocation(800, 13);
			char_literal268=(IToken)Match(input,RPAREN,Follow._RPAREN_in_annotationMethodDeclaration4126); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal268_tree = (object)adaptor.Create(char_literal268, "char_literal268", retval);
			adaptor.AddChild(root_0, char_literal268_tree);
			}
			DebugLocation(800, 17);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:800:17: ( 'default' elementValue )?
			int alt91=2;
			try { DebugEnterSubRule(91);
			try { DebugEnterDecision(91, false);
			int LA91_1 = input.LA(1);

			if ((LA91_1==DEFAULT))
			{
				alt91 = 1;
			}
			} finally { DebugExitDecision(91); }
			switch (alt91)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:800:18: 'default' elementValue
				{
				DebugLocation(800, 18);
				string_literal269=(IToken)Match(input,DEFAULT,Follow._DEFAULT_in_annotationMethodDeclaration4129); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal269_tree = (object)adaptor.Create(string_literal269, "string_literal269", retval);
				adaptor.AddChild(root_0, string_literal269_tree);
				}
				DebugLocation(800, 28);
				PushFollow(Follow._elementValue_in_annotationMethodDeclaration4131);
				elementValue270=elementValue();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, elementValue270.Tree, elementValue270, "elementValue270", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(91); }

			DebugLocation(802, 9);
			char_literal271=(IToken)Match(input,SEMI,Follow._SEMI_in_annotationMethodDeclaration4160); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal271_tree = (object)adaptor.Create(char_literal271, "char_literal271", retval);
			adaptor.AddChild(root_0, char_literal271_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("annotationMethodDeclaration", 54);
			LeaveRule("annotationMethodDeclaration", 54);
			LeaveRule_annotationMethodDeclaration();
			if (state.backtracking > 0) { Memoize(input, 54, annotationMethodDeclaration_StartIndex); }

		}
		DebugLocation(803, 8);
		} finally { DebugExitRule(GrammarFileName, "annotationMethodDeclaration"); }
		return retval;

	}
	// $ANTLR end "annotationMethodDeclaration"

	partial void EnterRule_block();
	partial void LeaveRule_block();
	// $ANTLR start "block"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:805:1: block : '{' ( blockStatement )* '}' ;
	[GrammarRule("block")]
	private Antlr3AstNode block()
	{
		EnterRule_block();
		EnterRule("block", 55);
		var retval = new Antlr3AstNode("block");
		
		retval.Start = (IToken)input.LT(1);
		int block_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal272 = default(IToken);
		IToken char_literal274 = default(IToken);
		Antlr3AstNode blockStatement273 = default(Antlr3AstNode);

		object char_literal272_tree = default(object);
		object char_literal274_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "block");
		DebugLocation(805, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 55)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:806:5: ( '{' ( blockStatement )* '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:806:9: '{' ( blockStatement )* '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(806, 9);
			char_literal272=(IToken)Match(input,LBRACE,Follow._LBRACE_in_block4184); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal272_tree = (object)adaptor.Create(char_literal272, "char_literal272", retval);
			adaptor.AddChild(root_0, char_literal272_tree);
			}
			DebugLocation(807, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:807:9: ( blockStatement )*
			try { DebugEnterSubRule(92);
			while (true)
			{
				int alt92=2;
				try { DebugEnterDecision(92, false);
				int LA92_1 = input.LA(1);

				if ((LA92_1==EOF||LA92_1==ABSTRACT||(LA92_1>=ASSERT && LA92_1<=BANG)||(LA92_1>=BOOLEAN && LA92_1<=BYTE)||(LA92_1>=CHAR && LA92_1<=CLASS)||LA92_1==CONTINUE||LA92_1==DO||(LA92_1>=DOUBLE && LA92_1<=DOUBLELITERAL)||LA92_1==ENUM||(LA92_1>=FALSE && LA92_1<=FINAL)||(LA92_1>=FLOAT && LA92_1<=FOR)||(LA92_1>=IDENTIFIER && LA92_1<=IF)||(LA92_1>=INT && LA92_1<=INTLITERAL)||LA92_1==LBRACE||(LA92_1>=LONG && LA92_1<=LT)||(LA92_1>=MONKEYS_AT && LA92_1<=NULL)||LA92_1==PLUS||(LA92_1>=PLUSPLUS && LA92_1<=PUBLIC)||LA92_1==RETURN||(LA92_1>=SEMI && LA92_1<=SHORT)||(LA92_1>=STATIC && LA92_1<=SUB)||(LA92_1>=SUBSUB && LA92_1<=SYNCHRONIZED)||(LA92_1>=THIS && LA92_1<=THROW)||(LA92_1>=TILDE && LA92_1<=TRY)||(LA92_1>=VOID && LA92_1<=WHILE)))
				{
					alt92 = 1;
				}


				} finally { DebugExitDecision(92); }
				switch ( alt92 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:807:10: blockStatement
					{
					DebugLocation(807, 10);
					PushFollow(Follow._blockStatement_in_block4195);
					blockStatement273=blockStatement();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, blockStatement273.Tree, blockStatement273, "blockStatement273", retval);

					}
					break;

				default:
					goto loop92;
				}
			}

			loop92:
				;

			} finally { DebugExitSubRule(92); }

			DebugLocation(809, 9);
			char_literal274=(IToken)Match(input,RBRACE,Follow._RBRACE_in_block4216); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal274_tree = (object)adaptor.Create(char_literal274, "char_literal274", retval);
			adaptor.AddChild(root_0, char_literal274_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("block", 55);
			LeaveRule("block", 55);
			LeaveRule_block();
			if (state.backtracking > 0) { Memoize(input, 55, block_StartIndex); }

		}
		DebugLocation(810, 4);
		} finally { DebugExitRule(GrammarFileName, "block"); }
		return retval;

	}
	// $ANTLR end "block"

	partial void EnterRule_blockStatement();
	partial void LeaveRule_blockStatement();
	// $ANTLR start "blockStatement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:836:1: blockStatement : ( localVariableDeclarationStatement | classOrInterfaceDeclaration | statement );
	[GrammarRule("blockStatement")]
	private Antlr3AstNode blockStatement()
	{
		EnterRule_blockStatement();
		EnterRule("blockStatement", 56);
		var retval = new Antlr3AstNode("blockStatement");
		
		retval.Start = (IToken)input.LT(1);
		int blockStatement_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode localVariableDeclarationStatement275 = default(Antlr3AstNode);
		Antlr3AstNode classOrInterfaceDeclaration276 = default(Antlr3AstNode);
		Antlr3AstNode statement277 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "blockStatement");
		DebugLocation(836, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 56)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:837:5: ( localVariableDeclarationStatement | classOrInterfaceDeclaration | statement )
			int alt93=3;
			try { DebugEnterDecision(93, false);
			switch (input.LA(1))
			{
			case FINAL:
				{
				int LA93_2 = input.LA(2);

				if ((EvaluatePredicate(synpred128_Java_fragment)))
				{
					alt93 = 1;
				}
				else if ((EvaluatePredicate(synpred129_Java_fragment)))
				{
					alt93 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 93, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case MONKEYS_AT:
				{
				int LA93_2 = input.LA(2);

				if ((EvaluatePredicate(synpred128_Java_fragment)))
				{
					alt93 = 1;
				}
				else if ((EvaluatePredicate(synpred129_Java_fragment)))
				{
					alt93 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 93, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case IDENTIFIER:
				{
				int LA93_2 = input.LA(2);

				if ((EvaluatePredicate(synpred128_Java_fragment)))
				{
					alt93 = 1;
				}
				else if ((true))
				{
					alt93 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 93, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
				{
				int LA93_2 = input.LA(2);

				if ((EvaluatePredicate(synpred128_Java_fragment)))
				{
					alt93 = 1;
				}
				else if ((true))
				{
					alt93 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 93, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case ABSTRACT:
			case CLASS:
			case ENUM:
			case INTERFACE:
			case NATIVE:
			case PRIVATE:
			case PROTECTED:
			case PUBLIC:
			case STATIC:
			case STRICTFP:
			case TRANSIENT:
			case VOLATILE:
				{
				alt93 = 2;
				}
				break;
			case SYNCHRONIZED:
				{
				int LA93_2 = input.LA(2);

				if ((EvaluatePredicate(synpred129_Java_fragment)))
				{
					alt93 = 2;
				}
				else if ((true))
				{
					alt93 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 93, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case ASSERT:
			case BANG:
			case BREAK:
			case CHARLITERAL:
			case CONTINUE:
			case DO:
			case DOUBLELITERAL:
			case FALSE:
			case FLOATLITERAL:
			case FOR:
			case IF:
			case INTLITERAL:
			case LBRACE:
			case LONGLITERAL:
			case LPAREN:
			case NEW:
			case NULL:
			case PLUS:
			case PLUSPLUS:
			case RETURN:
			case SEMI:
			case STRINGLITERAL:
			case SUB:
			case SUBSUB:
			case SUPER:
			case SWITCH:
			case THIS:
			case THROW:
			case TILDE:
			case TRUE:
			case TRY:
			case VOID:
			case WHILE:
				{
				alt93 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 93, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(93); }
			switch (alt93)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:837:9: localVariableDeclarationStatement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(837, 9);
				PushFollow(Follow._localVariableDeclarationStatement_in_blockStatement4238);
				localVariableDeclarationStatement275=localVariableDeclarationStatement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, localVariableDeclarationStatement275.Tree, localVariableDeclarationStatement275, "localVariableDeclarationStatement275", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:838:9: classOrInterfaceDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(838, 9);
				PushFollow(Follow._classOrInterfaceDeclaration_in_blockStatement4248);
				classOrInterfaceDeclaration276=classOrInterfaceDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classOrInterfaceDeclaration276.Tree, classOrInterfaceDeclaration276, "classOrInterfaceDeclaration276", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:839:9: statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(839, 9);
				PushFollow(Follow._statement_in_blockStatement4258);
				statement277=statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, statement277.Tree, statement277, "statement277", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("blockStatement", 56);
			LeaveRule("blockStatement", 56);
			LeaveRule_blockStatement();
			if (state.backtracking > 0) { Memoize(input, 56, blockStatement_StartIndex); }

		}
		DebugLocation(840, 4);
		} finally { DebugExitRule(GrammarFileName, "blockStatement"); }
		return retval;

	}
	// $ANTLR end "blockStatement"

	partial void EnterRule_localVariableDeclarationStatement();
	partial void LeaveRule_localVariableDeclarationStatement();
	// $ANTLR start "localVariableDeclarationStatement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:843:1: localVariableDeclarationStatement : localVariableDeclaration ';' ;
	[GrammarRule("localVariableDeclarationStatement")]
	private Antlr3AstNode localVariableDeclarationStatement()
	{
		EnterRule_localVariableDeclarationStatement();
		EnterRule("localVariableDeclarationStatement", 57);
		var retval = new Antlr3AstNode("localVariableDeclarationStatement");
		
		retval.Start = (IToken)input.LT(1);
		int localVariableDeclarationStatement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal279 = default(IToken);
		Antlr3AstNode localVariableDeclaration278 = default(Antlr3AstNode);

		object char_literal279_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "localVariableDeclarationStatement");
		DebugLocation(843, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 57)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:844:5: ( localVariableDeclaration ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:844:9: localVariableDeclaration ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(844, 9);
			PushFollow(Follow._localVariableDeclaration_in_localVariableDeclarationStatement4279);
			localVariableDeclaration278=localVariableDeclaration();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, localVariableDeclaration278.Tree, localVariableDeclaration278, "localVariableDeclaration278", retval);
			DebugLocation(845, 9);
			char_literal279=(IToken)Match(input,SEMI,Follow._SEMI_in_localVariableDeclarationStatement4289); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal279_tree = (object)adaptor.Create(char_literal279, "char_literal279", retval);
			adaptor.AddChild(root_0, char_literal279_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("localVariableDeclarationStatement", 57);
			LeaveRule("localVariableDeclarationStatement", 57);
			LeaveRule_localVariableDeclarationStatement();
			if (state.backtracking > 0) { Memoize(input, 57, localVariableDeclarationStatement_StartIndex); }

		}
		DebugLocation(846, 4);
		} finally { DebugExitRule(GrammarFileName, "localVariableDeclarationStatement"); }
		return retval;

	}
	// $ANTLR end "localVariableDeclarationStatement"

	partial void EnterRule_localVariableDeclaration();
	partial void LeaveRule_localVariableDeclaration();
	// $ANTLR start "localVariableDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:848:1: localVariableDeclaration : variableModifiers type variableDeclarator ( ',' variableDeclarator )* ;
	[GrammarRule("localVariableDeclaration")]
	private Antlr3AstNode localVariableDeclaration()
	{
		EnterRule_localVariableDeclaration();
		EnterRule("localVariableDeclaration", 58);
		var retval = new Antlr3AstNode("localVariableDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int localVariableDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal283 = default(IToken);
		Antlr3AstNode variableModifiers280 = default(Antlr3AstNode);
		Antlr3AstNode type281 = default(Antlr3AstNode);
		Antlr3AstNode variableDeclarator282 = default(Antlr3AstNode);
		Antlr3AstNode variableDeclarator284 = default(Antlr3AstNode);

		object char_literal283_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "localVariableDeclaration");
		DebugLocation(848, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 58)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:849:5: ( variableModifiers type variableDeclarator ( ',' variableDeclarator )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:849:9: variableModifiers type variableDeclarator ( ',' variableDeclarator )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(849, 9);
			PushFollow(Follow._variableModifiers_in_localVariableDeclaration4309);
			variableModifiers280=variableModifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableModifiers280.Tree, variableModifiers280, "variableModifiers280", retval);
			DebugLocation(849, 27);
			PushFollow(Follow._type_in_localVariableDeclaration4311);
			type281=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type281.Tree, type281, "type281", retval);
			DebugLocation(850, 9);
			PushFollow(Follow._variableDeclarator_in_localVariableDeclaration4321);
			variableDeclarator282=variableDeclarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableDeclarator282.Tree, variableDeclarator282, "variableDeclarator282", retval);
			DebugLocation(851, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:851:9: ( ',' variableDeclarator )*
			try { DebugEnterSubRule(94);
			while (true)
			{
				int alt94=2;
				try { DebugEnterDecision(94, false);
				int LA94_1 = input.LA(1);

				if ((LA94_1==COMMA))
				{
					alt94 = 1;
				}


				} finally { DebugExitDecision(94); }
				switch ( alt94 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:851:10: ',' variableDeclarator
					{
					DebugLocation(851, 10);
					char_literal283=(IToken)Match(input,COMMA,Follow._COMMA_in_localVariableDeclaration4332); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal283_tree = (object)adaptor.Create(char_literal283, "char_literal283", retval);
					adaptor.AddChild(root_0, char_literal283_tree);
					}
					DebugLocation(851, 14);
					PushFollow(Follow._variableDeclarator_in_localVariableDeclaration4334);
					variableDeclarator284=variableDeclarator();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, variableDeclarator284.Tree, variableDeclarator284, "variableDeclarator284", retval);

					}
					break;

				default:
					goto loop94;
				}
			}

			loop94:
				;

			} finally { DebugExitSubRule(94); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("localVariableDeclaration", 58);
			LeaveRule("localVariableDeclaration", 58);
			LeaveRule_localVariableDeclaration();
			if (state.backtracking > 0) { Memoize(input, 58, localVariableDeclaration_StartIndex); }

		}
		DebugLocation(853, 4);
		} finally { DebugExitRule(GrammarFileName, "localVariableDeclaration"); }
		return retval;

	}
	// $ANTLR end "localVariableDeclaration"

	partial void EnterRule_statement();
	partial void LeaveRule_statement();
	// $ANTLR start "statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:855:1: statement : ( block | ( 'assert' ) expression ( ':' expression )? ';' | 'assert' expression ( ':' expression )? ';' | 'if' parExpression statement ( 'else' statement )? | forstatement | 'while' parExpression statement | 'do' statement 'while' parExpression ';' | trystatement | 'switch' parExpression '{' switchBlockStatementGroups '}' | 'synchronized' parExpression block | 'return' ( expression )? ';' | 'throw' expression ';' | 'break' ( IDENTIFIER )? ';' | 'continue' ( IDENTIFIER )? ';' | expression ';' | IDENTIFIER ':' statement | ';' );
	[GrammarRule("statement")]
	private Antlr3AstNode statement()
	{
		EnterRule_statement();
		EnterRule("statement", 59);
		var retval = new Antlr3AstNode("statement");
		
		retval.Start = (IToken)input.LT(1);
		int statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal286 = default(IToken);
		IToken char_literal288 = default(IToken);
		IToken char_literal290 = default(IToken);
		IToken string_literal291 = default(IToken);
		IToken char_literal293 = default(IToken);
		IToken char_literal295 = default(IToken);
		IToken string_literal296 = default(IToken);
		IToken string_literal299 = default(IToken);
		IToken string_literal302 = default(IToken);
		IToken string_literal305 = default(IToken);
		IToken string_literal307 = default(IToken);
		IToken char_literal309 = default(IToken);
		IToken string_literal311 = default(IToken);
		IToken char_literal313 = default(IToken);
		IToken char_literal315 = default(IToken);
		IToken string_literal316 = default(IToken);
		IToken string_literal319 = default(IToken);
		IToken char_literal321 = default(IToken);
		IToken string_literal322 = default(IToken);
		IToken char_literal324 = default(IToken);
		IToken string_literal325 = default(IToken);
		IToken IDENTIFIER326 = default(IToken);
		IToken char_literal327 = default(IToken);
		IToken string_literal328 = default(IToken);
		IToken IDENTIFIER329 = default(IToken);
		IToken char_literal330 = default(IToken);
		IToken char_literal332 = default(IToken);
		IToken IDENTIFIER333 = default(IToken);
		IToken char_literal334 = default(IToken);
		IToken char_literal336 = default(IToken);
		Antlr3AstNode block285 = default(Antlr3AstNode);
		Antlr3AstNode expression287 = default(Antlr3AstNode);
		Antlr3AstNode expression289 = default(Antlr3AstNode);
		Antlr3AstNode expression292 = default(Antlr3AstNode);
		Antlr3AstNode expression294 = default(Antlr3AstNode);
		Antlr3AstNode parExpression297 = default(Antlr3AstNode);
		Antlr3AstNode statement298 = default(Antlr3AstNode);
		Antlr3AstNode statement300 = default(Antlr3AstNode);
		Antlr3AstNode forstatement301 = default(Antlr3AstNode);
		Antlr3AstNode parExpression303 = default(Antlr3AstNode);
		Antlr3AstNode statement304 = default(Antlr3AstNode);
		Antlr3AstNode statement306 = default(Antlr3AstNode);
		Antlr3AstNode parExpression308 = default(Antlr3AstNode);
		Antlr3AstNode trystatement310 = default(Antlr3AstNode);
		Antlr3AstNode parExpression312 = default(Antlr3AstNode);
		Antlr3AstNode switchBlockStatementGroups314 = default(Antlr3AstNode);
		Antlr3AstNode parExpression317 = default(Antlr3AstNode);
		Antlr3AstNode block318 = default(Antlr3AstNode);
		Antlr3AstNode expression320 = default(Antlr3AstNode);
		Antlr3AstNode expression323 = default(Antlr3AstNode);
		Antlr3AstNode expression331 = default(Antlr3AstNode);
		Antlr3AstNode statement335 = default(Antlr3AstNode);

		object string_literal286_tree = default(object);
		object char_literal288_tree = default(object);
		object char_literal290_tree = default(object);
		object string_literal291_tree = default(object);
		object char_literal293_tree = default(object);
		object char_literal295_tree = default(object);
		object string_literal296_tree = default(object);
		object string_literal299_tree = default(object);
		object string_literal302_tree = default(object);
		object string_literal305_tree = default(object);
		object string_literal307_tree = default(object);
		object char_literal309_tree = default(object);
		object string_literal311_tree = default(object);
		object char_literal313_tree = default(object);
		object char_literal315_tree = default(object);
		object string_literal316_tree = default(object);
		object string_literal319_tree = default(object);
		object char_literal321_tree = default(object);
		object string_literal322_tree = default(object);
		object char_literal324_tree = default(object);
		object string_literal325_tree = default(object);
		object IDENTIFIER326_tree = default(object);
		object char_literal327_tree = default(object);
		object string_literal328_tree = default(object);
		object IDENTIFIER329_tree = default(object);
		object char_literal330_tree = default(object);
		object char_literal332_tree = default(object);
		object IDENTIFIER333_tree = default(object);
		object char_literal334_tree = default(object);
		object char_literal336_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "statement");
		DebugLocation(855, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 59)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:856:5: ( block | ( 'assert' ) expression ( ':' expression )? ';' | 'assert' expression ( ':' expression )? ';' | 'if' parExpression statement ( 'else' statement )? | forstatement | 'while' parExpression statement | 'do' statement 'while' parExpression ';' | trystatement | 'switch' parExpression '{' switchBlockStatementGroups '}' | 'synchronized' parExpression block | 'return' ( expression )? ';' | 'throw' expression ';' | 'break' ( IDENTIFIER )? ';' | 'continue' ( IDENTIFIER )? ';' | expression ';' | IDENTIFIER ':' statement | ';' )
			int alt101=17;
			try { DebugEnterDecision(101, false);
			switch (input.LA(1))
			{
			case LBRACE:
				{
				alt101 = 1;
				}
				break;
			case ASSERT:
				{
				int LA101_2 = input.LA(2);

				if ((EvaluatePredicate(synpred133_Java_fragment)))
				{
					alt101 = 2;
				}
				else if ((EvaluatePredicate(synpred135_Java_fragment)))
				{
					alt101 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case IF:
				{
				alt101 = 4;
				}
				break;
			case FOR:
				{
				alt101 = 5;
				}
				break;
			case WHILE:
				{
				alt101 = 6;
				}
				break;
			case DO:
				{
				alt101 = 7;
				}
				break;
			case TRY:
				{
				alt101 = 8;
				}
				break;
			case SWITCH:
				{
				alt101 = 9;
				}
				break;
			case SYNCHRONIZED:
				{
				alt101 = 10;
				}
				break;
			case RETURN:
				{
				alt101 = 11;
				}
				break;
			case THROW:
				{
				alt101 = 12;
				}
				break;
			case BREAK:
				{
				alt101 = 13;
				}
				break;
			case CONTINUE:
				{
				alt101 = 14;
				}
				break;
			case BANG:
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case CHARLITERAL:
			case DOUBLE:
			case DOUBLELITERAL:
			case FALSE:
			case FLOAT:
			case FLOATLITERAL:
			case INT:
			case INTLITERAL:
			case LONG:
			case LONGLITERAL:
			case LPAREN:
			case NEW:
			case NULL:
			case PLUS:
			case PLUSPLUS:
			case SHORT:
			case STRINGLITERAL:
			case SUB:
			case SUBSUB:
			case SUPER:
			case THIS:
			case TILDE:
			case TRUE:
			case VOID:
				{
				alt101 = 15;
				}
				break;
			case IDENTIFIER:
				{
				int LA101_2 = input.LA(2);

				if ((EvaluatePredicate(synpred151_Java_fragment)))
				{
					alt101 = 15;
				}
				else if ((EvaluatePredicate(synpred152_Java_fragment)))
				{
					alt101 = 16;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 22, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case SEMI:
				{
				alt101 = 17;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(101); }
			switch (alt101)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:856:9: block
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(856, 9);
				PushFollow(Follow._block_in_statement4365);
				block285=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block285.Tree, block285, "block285", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:858:9: ( 'assert' ) expression ( ':' expression )? ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(858, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:858:9: ( 'assert' )
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:858:10: 'assert'
				{
				DebugLocation(858, 10);
				string_literal286=(IToken)Match(input,ASSERT,Follow._ASSERT_in_statement4389); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal286_tree = (object)adaptor.Create(string_literal286, "string_literal286", retval);
				adaptor.AddChild(root_0, string_literal286_tree);
				}

				}

				DebugLocation(860, 9);
				PushFollow(Follow._expression_in_statement4409);
				expression287=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression287.Tree, expression287, "expression287", retval);
				DebugLocation(860, 20);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:860:20: ( ':' expression )?
				int alt95=2;
				try { DebugEnterSubRule(95);
				try { DebugEnterDecision(95, false);
				int LA95_1 = input.LA(1);

				if ((LA95_1==COLON))
				{
					alt95 = 1;
				}
				} finally { DebugExitDecision(95); }
				switch (alt95)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:860:21: ':' expression
					{
					DebugLocation(860, 21);
					char_literal288=(IToken)Match(input,COLON,Follow._COLON_in_statement4412); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal288_tree = (object)adaptor.Create(char_literal288, "char_literal288", retval);
					adaptor.AddChild(root_0, char_literal288_tree);
					}
					DebugLocation(860, 25);
					PushFollow(Follow._expression_in_statement4414);
					expression289=expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, expression289.Tree, expression289, "expression289", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(95); }

				DebugLocation(860, 38);
				char_literal290=(IToken)Match(input,SEMI,Follow._SEMI_in_statement4418); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal290_tree = (object)adaptor.Create(char_literal290, "char_literal290", retval);
				adaptor.AddChild(root_0, char_literal290_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:861:9: 'assert' expression ( ':' expression )? ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(861, 9);
				string_literal291=(IToken)Match(input,ASSERT,Follow._ASSERT_in_statement4428); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal291_tree = (object)adaptor.Create(string_literal291, "string_literal291", retval);
				adaptor.AddChild(root_0, string_literal291_tree);
				}
				DebugLocation(861, 19);
				PushFollow(Follow._expression_in_statement4431);
				expression292=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression292.Tree, expression292, "expression292", retval);
				DebugLocation(861, 30);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:861:30: ( ':' expression )?
				int alt96=2;
				try { DebugEnterSubRule(96);
				try { DebugEnterDecision(96, false);
				int LA96_1 = input.LA(1);

				if ((LA96_1==COLON))
				{
					alt96 = 1;
				}
				} finally { DebugExitDecision(96); }
				switch (alt96)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:861:31: ':' expression
					{
					DebugLocation(861, 31);
					char_literal293=(IToken)Match(input,COLON,Follow._COLON_in_statement4434); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal293_tree = (object)adaptor.Create(char_literal293, "char_literal293", retval);
					adaptor.AddChild(root_0, char_literal293_tree);
					}
					DebugLocation(861, 35);
					PushFollow(Follow._expression_in_statement4436);
					expression294=expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, expression294.Tree, expression294, "expression294", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(96); }

				DebugLocation(861, 48);
				char_literal295=(IToken)Match(input,SEMI,Follow._SEMI_in_statement4440); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal295_tree = (object)adaptor.Create(char_literal295, "char_literal295", retval);
				adaptor.AddChild(root_0, char_literal295_tree);
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:862:9: 'if' parExpression statement ( 'else' statement )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(862, 9);
				string_literal296=(IToken)Match(input,IF,Follow._IF_in_statement4462); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal296_tree = (object)adaptor.Create(string_literal296, "string_literal296", retval);
				adaptor.AddChild(root_0, string_literal296_tree);
				}
				DebugLocation(862, 14);
				PushFollow(Follow._parExpression_in_statement4464);
				parExpression297=parExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, parExpression297.Tree, parExpression297, "parExpression297", retval);
				DebugLocation(862, 28);
				PushFollow(Follow._statement_in_statement4466);
				statement298=statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, statement298.Tree, statement298, "statement298", retval);
				DebugLocation(862, 38);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:862:38: ( 'else' statement )?
				int alt97=2;
				try { DebugEnterSubRule(97);
				try { DebugEnterDecision(97, false);
				int LA97_1 = input.LA(1);

				if ((LA97_1==ELSE))
				{
					int LA97_2 = input.LA(2);

					if ((EvaluatePredicate(synpred136_Java_fragment)))
					{
						alt97 = 1;
					}
				}
				} finally { DebugExitDecision(97); }
				switch (alt97)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:862:39: 'else' statement
					{
					DebugLocation(862, 39);
					string_literal299=(IToken)Match(input,ELSE,Follow._ELSE_in_statement4469); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal299_tree = (object)adaptor.Create(string_literal299, "string_literal299", retval);
					adaptor.AddChild(root_0, string_literal299_tree);
					}
					DebugLocation(862, 46);
					PushFollow(Follow._statement_in_statement4471);
					statement300=statement();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, statement300.Tree, statement300, "statement300", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(97); }


				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:863:9: forstatement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(863, 9);
				PushFollow(Follow._forstatement_in_statement4493);
				forstatement301=forstatement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, forstatement301.Tree, forstatement301, "forstatement301", retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:864:9: 'while' parExpression statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(864, 9);
				string_literal302=(IToken)Match(input,WHILE,Follow._WHILE_in_statement4503); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal302_tree = (object)adaptor.Create(string_literal302, "string_literal302", retval);
				adaptor.AddChild(root_0, string_literal302_tree);
				}
				DebugLocation(864, 17);
				PushFollow(Follow._parExpression_in_statement4505);
				parExpression303=parExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, parExpression303.Tree, parExpression303, "parExpression303", retval);
				DebugLocation(864, 31);
				PushFollow(Follow._statement_in_statement4507);
				statement304=statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, statement304.Tree, statement304, "statement304", retval);

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:865:9: 'do' statement 'while' parExpression ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(865, 9);
				string_literal305=(IToken)Match(input,DO,Follow._DO_in_statement4517); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal305_tree = (object)adaptor.Create(string_literal305, "string_literal305", retval);
				adaptor.AddChild(root_0, string_literal305_tree);
				}
				DebugLocation(865, 14);
				PushFollow(Follow._statement_in_statement4519);
				statement306=statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, statement306.Tree, statement306, "statement306", retval);
				DebugLocation(865, 24);
				string_literal307=(IToken)Match(input,WHILE,Follow._WHILE_in_statement4521); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal307_tree = (object)adaptor.Create(string_literal307, "string_literal307", retval);
				adaptor.AddChild(root_0, string_literal307_tree);
				}
				DebugLocation(865, 32);
				PushFollow(Follow._parExpression_in_statement4523);
				parExpression308=parExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, parExpression308.Tree, parExpression308, "parExpression308", retval);
				DebugLocation(865, 46);
				char_literal309=(IToken)Match(input,SEMI,Follow._SEMI_in_statement4525); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal309_tree = (object)adaptor.Create(char_literal309, "char_literal309", retval);
				adaptor.AddChild(root_0, char_literal309_tree);
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:866:9: trystatement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(866, 9);
				PushFollow(Follow._trystatement_in_statement4535);
				trystatement310=trystatement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, trystatement310.Tree, trystatement310, "trystatement310", retval);

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:867:9: 'switch' parExpression '{' switchBlockStatementGroups '}'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(867, 9);
				string_literal311=(IToken)Match(input,SWITCH,Follow._SWITCH_in_statement4545); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal311_tree = (object)adaptor.Create(string_literal311, "string_literal311", retval);
				adaptor.AddChild(root_0, string_literal311_tree);
				}
				DebugLocation(867, 18);
				PushFollow(Follow._parExpression_in_statement4547);
				parExpression312=parExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, parExpression312.Tree, parExpression312, "parExpression312", retval);
				DebugLocation(867, 32);
				char_literal313=(IToken)Match(input,LBRACE,Follow._LBRACE_in_statement4549); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal313_tree = (object)adaptor.Create(char_literal313, "char_literal313", retval);
				adaptor.AddChild(root_0, char_literal313_tree);
				}
				DebugLocation(867, 36);
				PushFollow(Follow._switchBlockStatementGroups_in_statement4551);
				switchBlockStatementGroups314=switchBlockStatementGroups();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, switchBlockStatementGroups314.Tree, switchBlockStatementGroups314, "switchBlockStatementGroups314", retval);
				DebugLocation(867, 63);
				char_literal315=(IToken)Match(input,RBRACE,Follow._RBRACE_in_statement4553); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal315_tree = (object)adaptor.Create(char_literal315, "char_literal315", retval);
				adaptor.AddChild(root_0, char_literal315_tree);
				}

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:868:9: 'synchronized' parExpression block
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(868, 9);
				string_literal316=(IToken)Match(input,SYNCHRONIZED,Follow._SYNCHRONIZED_in_statement4563); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal316_tree = (object)adaptor.Create(string_literal316, "string_literal316", retval);
				adaptor.AddChild(root_0, string_literal316_tree);
				}
				DebugLocation(868, 24);
				PushFollow(Follow._parExpression_in_statement4565);
				parExpression317=parExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, parExpression317.Tree, parExpression317, "parExpression317", retval);
				DebugLocation(868, 38);
				PushFollow(Follow._block_in_statement4567);
				block318=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block318.Tree, block318, "block318", retval);

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:869:9: 'return' ( expression )? ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(869, 9);
				string_literal319=(IToken)Match(input,RETURN,Follow._RETURN_in_statement4577); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal319_tree = (object)adaptor.Create(string_literal319, "string_literal319", retval);
				adaptor.AddChild(root_0, string_literal319_tree);
				}
				DebugLocation(869, 18);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:869:18: ( expression )?
				int alt98=2;
				try { DebugEnterSubRule(98);
				try { DebugEnterDecision(98, false);
				int LA98_1 = input.LA(1);

				if ((LA98_1==BANG||LA98_1==BOOLEAN||LA98_1==BYTE||(LA98_1>=CHAR && LA98_1<=CHARLITERAL)||(LA98_1>=DOUBLE && LA98_1<=DOUBLELITERAL)||LA98_1==FALSE||(LA98_1>=FLOAT && LA98_1<=FLOATLITERAL)||LA98_1==IDENTIFIER||LA98_1==INT||LA98_1==INTLITERAL||(LA98_1>=LONG && LA98_1<=LPAREN)||(LA98_1>=NEW && LA98_1<=NULL)||LA98_1==PLUS||LA98_1==PLUSPLUS||LA98_1==SHORT||(LA98_1>=STRINGLITERAL && LA98_1<=SUB)||(LA98_1>=SUBSUB && LA98_1<=SUPER)||LA98_1==THIS||LA98_1==TILDE||LA98_1==TRUE||LA98_1==VOID))
				{
					alt98 = 1;
				}
				} finally { DebugExitDecision(98); }
				switch (alt98)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:869:19: expression
					{
					DebugLocation(869, 19);
					PushFollow(Follow._expression_in_statement4580);
					expression320=expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, expression320.Tree, expression320, "expression320", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(98); }

				DebugLocation(869, 33);
				char_literal321=(IToken)Match(input,SEMI,Follow._SEMI_in_statement4585); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal321_tree = (object)adaptor.Create(char_literal321, "char_literal321", retval);
				adaptor.AddChild(root_0, char_literal321_tree);
				}

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:870:9: 'throw' expression ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(870, 9);
				string_literal322=(IToken)Match(input,THROW,Follow._THROW_in_statement4595); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal322_tree = (object)adaptor.Create(string_literal322, "string_literal322", retval);
				adaptor.AddChild(root_0, string_literal322_tree);
				}
				DebugLocation(870, 17);
				PushFollow(Follow._expression_in_statement4597);
				expression323=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression323.Tree, expression323, "expression323", retval);
				DebugLocation(870, 28);
				char_literal324=(IToken)Match(input,SEMI,Follow._SEMI_in_statement4599); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal324_tree = (object)adaptor.Create(char_literal324, "char_literal324", retval);
				adaptor.AddChild(root_0, char_literal324_tree);
				}

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:871:9: 'break' ( IDENTIFIER )? ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(871, 9);
				string_literal325=(IToken)Match(input,BREAK,Follow._BREAK_in_statement4609); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal325_tree = (object)adaptor.Create(string_literal325, "string_literal325", retval);
				adaptor.AddChild(root_0, string_literal325_tree);
				}
				DebugLocation(872, 13);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:872:13: ( IDENTIFIER )?
				int alt99=2;
				try { DebugEnterSubRule(99);
				try { DebugEnterDecision(99, false);
				int LA99_1 = input.LA(1);

				if ((LA99_1==IDENTIFIER))
				{
					alt99 = 1;
				}
				} finally { DebugExitDecision(99); }
				switch (alt99)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:872:14: IDENTIFIER
					{
					DebugLocation(872, 14);
					IDENTIFIER326=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_statement4624); if (state.failed) return retval;
					if (state.backtracking == 0) {
					IDENTIFIER326_tree = (object)adaptor.Create(IDENTIFIER326, "IDENTIFIER326", retval);
					adaptor.AddChild(root_0, IDENTIFIER326_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(99); }

				DebugLocation(873, 16);
				char_literal327=(IToken)Match(input,SEMI,Follow._SEMI_in_statement4641); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal327_tree = (object)adaptor.Create(char_literal327, "char_literal327", retval);
				adaptor.AddChild(root_0, char_literal327_tree);
				}

				}
				break;
			case 14:
				DebugEnterAlt(14);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:874:9: 'continue' ( IDENTIFIER )? ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(874, 9);
				string_literal328=(IToken)Match(input,CONTINUE,Follow._CONTINUE_in_statement4651); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal328_tree = (object)adaptor.Create(string_literal328, "string_literal328", retval);
				adaptor.AddChild(root_0, string_literal328_tree);
				}
				DebugLocation(875, 13);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:875:13: ( IDENTIFIER )?
				int alt100=2;
				try { DebugEnterSubRule(100);
				try { DebugEnterDecision(100, false);
				int LA100_1 = input.LA(1);

				if ((LA100_1==IDENTIFIER))
				{
					alt100 = 1;
				}
				} finally { DebugExitDecision(100); }
				switch (alt100)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:875:14: IDENTIFIER
					{
					DebugLocation(875, 14);
					IDENTIFIER329=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_statement4666); if (state.failed) return retval;
					if (state.backtracking == 0) {
					IDENTIFIER329_tree = (object)adaptor.Create(IDENTIFIER329, "IDENTIFIER329", retval);
					adaptor.AddChild(root_0, IDENTIFIER329_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(100); }

				DebugLocation(876, 16);
				char_literal330=(IToken)Match(input,SEMI,Follow._SEMI_in_statement4683); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal330_tree = (object)adaptor.Create(char_literal330, "char_literal330", retval);
				adaptor.AddChild(root_0, char_literal330_tree);
				}

				}
				break;
			case 15:
				DebugEnterAlt(15);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:877:9: expression ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(877, 9);
				PushFollow(Follow._expression_in_statement4693);
				expression331=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression331.Tree, expression331, "expression331", retval);
				DebugLocation(877, 21);
				char_literal332=(IToken)Match(input,SEMI,Follow._SEMI_in_statement4696); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal332_tree = (object)adaptor.Create(char_literal332, "char_literal332", retval);
				adaptor.AddChild(root_0, char_literal332_tree);
				}

				}
				break;
			case 16:
				DebugEnterAlt(16);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:878:9: IDENTIFIER ':' statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(878, 9);
				IDENTIFIER333=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_statement4711); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER333_tree = (object)adaptor.Create(IDENTIFIER333, "IDENTIFIER333", retval);
				adaptor.AddChild(root_0, IDENTIFIER333_tree);
				}
				DebugLocation(878, 20);
				char_literal334=(IToken)Match(input,COLON,Follow._COLON_in_statement4713); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal334_tree = (object)adaptor.Create(char_literal334, "char_literal334", retval);
				adaptor.AddChild(root_0, char_literal334_tree);
				}
				DebugLocation(878, 24);
				PushFollow(Follow._statement_in_statement4715);
				statement335=statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, statement335.Tree, statement335, "statement335", retval);

				}
				break;
			case 17:
				DebugEnterAlt(17);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:879:9: ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(879, 9);
				char_literal336=(IToken)Match(input,SEMI,Follow._SEMI_in_statement4725); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal336_tree = (object)adaptor.Create(char_literal336, "char_literal336", retval);
				adaptor.AddChild(root_0, char_literal336_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("statement", 59);
			LeaveRule("statement", 59);
			LeaveRule_statement();
			if (state.backtracking > 0) { Memoize(input, 59, statement_StartIndex); }

		}
		DebugLocation(881, 4);
		} finally { DebugExitRule(GrammarFileName, "statement"); }
		return retval;

	}
	// $ANTLR end "statement"

	partial void EnterRule_switchBlockStatementGroups();
	partial void LeaveRule_switchBlockStatementGroups();
	// $ANTLR start "switchBlockStatementGroups"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:883:1: switchBlockStatementGroups : ( switchBlockStatementGroup )* ;
	[GrammarRule("switchBlockStatementGroups")]
	private Antlr3AstNode switchBlockStatementGroups()
	{
		EnterRule_switchBlockStatementGroups();
		EnterRule("switchBlockStatementGroups", 60);
		var retval = new Antlr3AstNode("switchBlockStatementGroups");
		
		retval.Start = (IToken)input.LT(1);
		int switchBlockStatementGroups_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode switchBlockStatementGroup337 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "switchBlockStatementGroups");
		DebugLocation(883, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 60)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:884:5: ( ( switchBlockStatementGroup )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:884:9: ( switchBlockStatementGroup )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(884, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:884:9: ( switchBlockStatementGroup )*
			try { DebugEnterSubRule(102);
			while (true)
			{
				int alt102=2;
				try { DebugEnterDecision(102, false);
				int LA102_1 = input.LA(1);

				if ((LA102_1==CASE||LA102_1==DEFAULT))
				{
					alt102 = 1;
				}


				} finally { DebugExitDecision(102); }
				switch ( alt102 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:884:10: switchBlockStatementGroup
					{
					DebugLocation(884, 10);
					PushFollow(Follow._switchBlockStatementGroup_in_switchBlockStatementGroups4747);
					switchBlockStatementGroup337=switchBlockStatementGroup();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, switchBlockStatementGroup337.Tree, switchBlockStatementGroup337, "switchBlockStatementGroup337", retval);

					}
					break;

				default:
					goto loop102;
				}
			}

			loop102:
				;

			} finally { DebugExitSubRule(102); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("switchBlockStatementGroups", 60);
			LeaveRule("switchBlockStatementGroups", 60);
			LeaveRule_switchBlockStatementGroups();
			if (state.backtracking > 0) { Memoize(input, 60, switchBlockStatementGroups_StartIndex); }

		}
		DebugLocation(885, 4);
		} finally { DebugExitRule(GrammarFileName, "switchBlockStatementGroups"); }
		return retval;

	}
	// $ANTLR end "switchBlockStatementGroups"

	partial void EnterRule_switchBlockStatementGroup();
	partial void LeaveRule_switchBlockStatementGroup();
	// $ANTLR start "switchBlockStatementGroup"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:887:1: switchBlockStatementGroup : switchLabel ( blockStatement )* ;
	[GrammarRule("switchBlockStatementGroup")]
	private Antlr3AstNode switchBlockStatementGroup()
	{
		EnterRule_switchBlockStatementGroup();
		EnterRule("switchBlockStatementGroup", 61);
		var retval = new Antlr3AstNode("switchBlockStatementGroup");
		
		retval.Start = (IToken)input.LT(1);
		int switchBlockStatementGroup_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode switchLabel338 = default(Antlr3AstNode);
		Antlr3AstNode blockStatement339 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "switchBlockStatementGroup");
		DebugLocation(887, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 61)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:888:5: ( switchLabel ( blockStatement )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:889:9: switchLabel ( blockStatement )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(889, 9);
			PushFollow(Follow._switchLabel_in_switchBlockStatementGroup4776);
			switchLabel338=switchLabel();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, switchLabel338.Tree, switchLabel338, "switchLabel338", retval);
			DebugLocation(890, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:890:9: ( blockStatement )*
			try { DebugEnterSubRule(103);
			while (true)
			{
				int alt103=2;
				try { DebugEnterDecision(103, false);
				int LA103_1 = input.LA(1);

				if ((LA103_1==ABSTRACT||(LA103_1>=ASSERT && LA103_1<=BANG)||(LA103_1>=BOOLEAN && LA103_1<=BYTE)||(LA103_1>=CHAR && LA103_1<=CLASS)||LA103_1==CONTINUE||LA103_1==DO||(LA103_1>=DOUBLE && LA103_1<=DOUBLELITERAL)||LA103_1==ENUM||(LA103_1>=FALSE && LA103_1<=FINAL)||(LA103_1>=FLOAT && LA103_1<=FOR)||(LA103_1>=IDENTIFIER && LA103_1<=IF)||(LA103_1>=INT && LA103_1<=INTLITERAL)||LA103_1==LBRACE||(LA103_1>=LONG && LA103_1<=LPAREN)||(LA103_1>=MONKEYS_AT && LA103_1<=NULL)||LA103_1==PLUS||(LA103_1>=PLUSPLUS && LA103_1<=PUBLIC)||LA103_1==RETURN||(LA103_1>=SEMI && LA103_1<=SHORT)||(LA103_1>=STATIC && LA103_1<=SUB)||(LA103_1>=SUBSUB && LA103_1<=SYNCHRONIZED)||(LA103_1>=THIS && LA103_1<=THROW)||(LA103_1>=TILDE && LA103_1<=TRY)||(LA103_1>=VOID && LA103_1<=WHILE)))
				{
					alt103 = 1;
				}


				} finally { DebugExitDecision(103); }
				switch ( alt103 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:890:10: blockStatement
					{
					DebugLocation(890, 10);
					PushFollow(Follow._blockStatement_in_switchBlockStatementGroup4787);
					blockStatement339=blockStatement();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, blockStatement339.Tree, blockStatement339, "blockStatement339", retval);

					}
					break;

				default:
					goto loop103;
				}
			}

			loop103:
				;

			} finally { DebugExitSubRule(103); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("switchBlockStatementGroup", 61);
			LeaveRule("switchBlockStatementGroup", 61);
			LeaveRule_switchBlockStatementGroup();
			if (state.backtracking > 0) { Memoize(input, 61, switchBlockStatementGroup_StartIndex); }

		}
		DebugLocation(892, 4);
		} finally { DebugExitRule(GrammarFileName, "switchBlockStatementGroup"); }
		return retval;

	}
	// $ANTLR end "switchBlockStatementGroup"

	partial void EnterRule_switchLabel();
	partial void LeaveRule_switchLabel();
	// $ANTLR start "switchLabel"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:894:1: switchLabel : ( 'case' expression ':' | 'default' ':' );
	[GrammarRule("switchLabel")]
	private Antlr3AstNode switchLabel()
	{
		EnterRule_switchLabel();
		EnterRule("switchLabel", 62);
		var retval = new Antlr3AstNode("switchLabel");
		
		retval.Start = (IToken)input.LT(1);
		int switchLabel_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal340 = default(IToken);
		IToken char_literal342 = default(IToken);
		IToken string_literal343 = default(IToken);
		IToken char_literal344 = default(IToken);
		Antlr3AstNode expression341 = default(Antlr3AstNode);

		object string_literal340_tree = default(object);
		object char_literal342_tree = default(object);
		object string_literal343_tree = default(object);
		object char_literal344_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "switchLabel");
		DebugLocation(894, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 62)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:895:5: ( 'case' expression ':' | 'default' ':' )
			int alt104=2;
			try { DebugEnterDecision(104, false);
			int LA104_1 = input.LA(1);

			if ((LA104_1==CASE))
			{
				alt104 = 1;
			}
			else if ((LA104_1==DEFAULT))
			{
				alt104 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 104, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(104); }
			switch (alt104)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:895:9: 'case' expression ':'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(895, 9);
				string_literal340=(IToken)Match(input,CASE,Follow._CASE_in_switchLabel4818); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal340_tree = (object)adaptor.Create(string_literal340, "string_literal340", retval);
				adaptor.AddChild(root_0, string_literal340_tree);
				}
				DebugLocation(895, 16);
				PushFollow(Follow._expression_in_switchLabel4820);
				expression341=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression341.Tree, expression341, "expression341", retval);
				DebugLocation(895, 27);
				char_literal342=(IToken)Match(input,COLON,Follow._COLON_in_switchLabel4822); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal342_tree = (object)adaptor.Create(char_literal342, "char_literal342", retval);
				adaptor.AddChild(root_0, char_literal342_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:896:9: 'default' ':'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(896, 9);
				string_literal343=(IToken)Match(input,DEFAULT,Follow._DEFAULT_in_switchLabel4832); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal343_tree = (object)adaptor.Create(string_literal343, "string_literal343", retval);
				adaptor.AddChild(root_0, string_literal343_tree);
				}
				DebugLocation(896, 19);
				char_literal344=(IToken)Match(input,COLON,Follow._COLON_in_switchLabel4834); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal344_tree = (object)adaptor.Create(char_literal344, "char_literal344", retval);
				adaptor.AddChild(root_0, char_literal344_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("switchLabel", 62);
			LeaveRule("switchLabel", 62);
			LeaveRule_switchLabel();
			if (state.backtracking > 0) { Memoize(input, 62, switchLabel_StartIndex); }

		}
		DebugLocation(897, 4);
		} finally { DebugExitRule(GrammarFileName, "switchLabel"); }
		return retval;

	}
	// $ANTLR end "switchLabel"

	partial void EnterRule_trystatement();
	partial void LeaveRule_trystatement();
	// $ANTLR start "trystatement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:900:1: trystatement : ( 'try' block ( catches 'finally' block | catches | 'finally' block ) | tryWithResourcesStatement );
	[GrammarRule("trystatement")]
	private Antlr3AstNode trystatement()
	{
		EnterRule_trystatement();
		EnterRule("trystatement", 63);
		var retval = new Antlr3AstNode("trystatement");
		
		retval.Start = (IToken)input.LT(1);
		int trystatement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal345 = default(IToken);
		IToken string_literal348 = default(IToken);
		IToken string_literal351 = default(IToken);
		Antlr3AstNode block346 = default(Antlr3AstNode);
		Antlr3AstNode catches347 = default(Antlr3AstNode);
		Antlr3AstNode block349 = default(Antlr3AstNode);
		Antlr3AstNode catches350 = default(Antlr3AstNode);
		Antlr3AstNode block352 = default(Antlr3AstNode);
		Antlr3AstNode tryWithResourcesStatement353 = default(Antlr3AstNode);

		object string_literal345_tree = default(object);
		object string_literal348_tree = default(object);
		object string_literal351_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "trystatement");
		DebugLocation(900, 5);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 63)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:901:5: ( 'try' block ( catches 'finally' block | catches | 'finally' block ) | tryWithResourcesStatement )
			int alt106=2;
			try { DebugEnterDecision(106, false);
			int LA106_1 = input.LA(1);

			if ((LA106_1==TRY))
			{
				int LA106_2 = input.LA(2);

				if ((LA106_2==LBRACE))
				{
					alt106 = 1;
				}
				else if ((LA106_2==LPAREN))
				{
					alt106 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 106, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 106, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(106); }
			switch (alt106)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:901:9: 'try' block ( catches 'finally' block | catches | 'finally' block )
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(901, 9);
				string_literal345=(IToken)Match(input,TRY,Follow._TRY_in_trystatement4855); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal345_tree = (object)adaptor.Create(string_literal345, "string_literal345", retval);
				adaptor.AddChild(root_0, string_literal345_tree);
				}
				DebugLocation(901, 15);
				PushFollow(Follow._block_in_trystatement4857);
				block346=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block346.Tree, block346, "block346", retval);
				DebugLocation(902, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:902:9: ( catches 'finally' block | catches | 'finally' block )
				int alt105=3;
				try { DebugEnterSubRule(105);
				try { DebugEnterDecision(105, false);
				int LA105_1 = input.LA(1);

				if ((LA105_1==CATCH))
				{
					int LA105_2 = input.LA(2);

					if ((EvaluatePredicate(synpred156_Java_fragment)))
					{
						alt105 = 1;
					}
					else if ((EvaluatePredicate(synpred157_Java_fragment)))
					{
						alt105 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 105, 1, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else if ((LA105_1==FINALLY))
				{
					alt105 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 105, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(105); }
				switch (alt105)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:902:13: catches 'finally' block
					{
					DebugLocation(902, 13);
					PushFollow(Follow._catches_in_trystatement4871);
					catches347=catches();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, catches347.Tree, catches347, "catches347", retval);
					DebugLocation(902, 21);
					string_literal348=(IToken)Match(input,FINALLY,Follow._FINALLY_in_trystatement4873); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal348_tree = (object)adaptor.Create(string_literal348, "string_literal348", retval);
					adaptor.AddChild(root_0, string_literal348_tree);
					}
					DebugLocation(902, 31);
					PushFollow(Follow._block_in_trystatement4875);
					block349=block();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, block349.Tree, block349, "block349", retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:903:13: catches
					{
					DebugLocation(903, 13);
					PushFollow(Follow._catches_in_trystatement4889);
					catches350=catches();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, catches350.Tree, catches350, "catches350", retval);

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:904:13: 'finally' block
					{
					DebugLocation(904, 13);
					string_literal351=(IToken)Match(input,FINALLY,Follow._FINALLY_in_trystatement4903); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal351_tree = (object)adaptor.Create(string_literal351, "string_literal351", retval);
					adaptor.AddChild(root_0, string_literal351_tree);
					}
					DebugLocation(904, 23);
					PushFollow(Follow._block_in_trystatement4905);
					block352=block();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, block352.Tree, block352, "block352", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(105); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:906:9: tryWithResourcesStatement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(906, 9);
				PushFollow(Follow._tryWithResourcesStatement_in_trystatement4925);
				tryWithResourcesStatement353=tryWithResourcesStatement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, tryWithResourcesStatement353.Tree, tryWithResourcesStatement353, "tryWithResourcesStatement353", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("trystatement", 63);
			LeaveRule("trystatement", 63);
			LeaveRule_trystatement();
			if (state.backtracking > 0) { Memoize(input, 63, trystatement_StartIndex); }

		}
		DebugLocation(907, 5);
		} finally { DebugExitRule(GrammarFileName, "trystatement"); }
		return retval;

	}
	// $ANTLR end "trystatement"

	partial void EnterRule_catches();
	partial void LeaveRule_catches();
	// $ANTLR start "catches"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:909:1: catches : catchClause ( catchClause )* ;
	[GrammarRule("catches")]
	private Antlr3AstNode catches()
	{
		EnterRule_catches();
		EnterRule("catches", 64);
		var retval = new Antlr3AstNode("catches");
		
		retval.Start = (IToken)input.LT(1);
		int catches_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode catchClause354 = default(Antlr3AstNode);
		Antlr3AstNode catchClause355 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "catches");
		DebugLocation(909, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 64)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:910:5: ( catchClause ( catchClause )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:910:9: catchClause ( catchClause )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(910, 9);
			PushFollow(Follow._catchClause_in_catches4946);
			catchClause354=catchClause();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, catchClause354.Tree, catchClause354, "catchClause354", retval);
			DebugLocation(911, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:911:9: ( catchClause )*
			try { DebugEnterSubRule(107);
			while (true)
			{
				int alt107=2;
				try { DebugEnterDecision(107, false);
				int LA107_1 = input.LA(1);

				if ((LA107_1==CATCH))
				{
					alt107 = 1;
				}


				} finally { DebugExitDecision(107); }
				switch ( alt107 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:911:10: catchClause
					{
					DebugLocation(911, 10);
					PushFollow(Follow._catchClause_in_catches4957);
					catchClause355=catchClause();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, catchClause355.Tree, catchClause355, "catchClause355", retval);

					}
					break;

				default:
					goto loop107;
				}
			}

			loop107:
				;

			} finally { DebugExitSubRule(107); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("catches", 64);
			LeaveRule("catches", 64);
			LeaveRule_catches();
			if (state.backtracking > 0) { Memoize(input, 64, catches_StartIndex); }

		}
		DebugLocation(913, 4);
		} finally { DebugExitRule(GrammarFileName, "catches"); }
		return retval;

	}
	// $ANTLR end "catches"

	partial void EnterRule_catchClause();
	partial void LeaveRule_catchClause();
	// $ANTLR start "catchClause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:915:1: catchClause : 'catch' '(' formalParameter ')' block ;
	[GrammarRule("catchClause")]
	private Antlr3AstNode catchClause()
	{
		EnterRule_catchClause();
		EnterRule("catchClause", 65);
		var retval = new Antlr3AstNode("catchClause");
		
		retval.Start = (IToken)input.LT(1);
		int catchClause_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal356 = default(IToken);
		IToken char_literal357 = default(IToken);
		IToken char_literal359 = default(IToken);
		Antlr3AstNode formalParameter358 = default(Antlr3AstNode);
		Antlr3AstNode block360 = default(Antlr3AstNode);

		object string_literal356_tree = default(object);
		object char_literal357_tree = default(object);
		object char_literal359_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "catchClause");
		DebugLocation(915, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 65)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:916:5: ( 'catch' '(' formalParameter ')' block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:916:9: 'catch' '(' formalParameter ')' block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(916, 9);
			string_literal356=(IToken)Match(input,CATCH,Follow._CATCH_in_catchClause4988); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal356_tree = (object)adaptor.Create(string_literal356, "string_literal356", retval);
			adaptor.AddChild(root_0, string_literal356_tree);
			}
			DebugLocation(916, 17);
			char_literal357=(IToken)Match(input,LPAREN,Follow._LPAREN_in_catchClause4990); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal357_tree = (object)adaptor.Create(char_literal357, "char_literal357", retval);
			adaptor.AddChild(root_0, char_literal357_tree);
			}
			DebugLocation(916, 21);
			PushFollow(Follow._formalParameter_in_catchClause4992);
			formalParameter358=formalParameter();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, formalParameter358.Tree, formalParameter358, "formalParameter358", retval);
			DebugLocation(917, 9);
			char_literal359=(IToken)Match(input,RPAREN,Follow._RPAREN_in_catchClause5002); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal359_tree = (object)adaptor.Create(char_literal359, "char_literal359", retval);
			adaptor.AddChild(root_0, char_literal359_tree);
			}
			DebugLocation(917, 13);
			PushFollow(Follow._block_in_catchClause5004);
			block360=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block360.Tree, block360, "block360", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("catchClause", 65);
			LeaveRule("catchClause", 65);
			LeaveRule_catchClause();
			if (state.backtracking > 0) { Memoize(input, 65, catchClause_StartIndex); }

		}
		DebugLocation(918, 4);
		} finally { DebugExitRule(GrammarFileName, "catchClause"); }
		return retval;

	}
	// $ANTLR end "catchClause"

	partial void EnterRule_formalParameter();
	partial void LeaveRule_formalParameter();
	// $ANTLR start "formalParameter"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:920:1: formalParameter : ( variableModifiers catchType IDENTIFIER ( '[' ']' )* | catchType IDENTIFIER ( '[' ']' )* );
	[GrammarRule("formalParameter")]
	private Antlr3AstNode formalParameter()
	{
		EnterRule_formalParameter();
		EnterRule("formalParameter", 66);
		var retval = new Antlr3AstNode("formalParameter");
		
		retval.Start = (IToken)input.LT(1);
		int formalParameter_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER363 = default(IToken);
		IToken char_literal364 = default(IToken);
		IToken char_literal365 = default(IToken);
		IToken IDENTIFIER367 = default(IToken);
		IToken char_literal368 = default(IToken);
		IToken char_literal369 = default(IToken);
		Antlr3AstNode variableModifiers361 = default(Antlr3AstNode);
		Antlr3AstNode catchType362 = default(Antlr3AstNode);
		Antlr3AstNode catchType366 = default(Antlr3AstNode);

		object IDENTIFIER363_tree = default(object);
		object char_literal364_tree = default(object);
		object char_literal365_tree = default(object);
		object IDENTIFIER367_tree = default(object);
		object char_literal368_tree = default(object);
		object char_literal369_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "formalParameter");
		DebugLocation(920, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 66)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:921:5: ( variableModifiers catchType IDENTIFIER ( '[' ']' )* | catchType IDENTIFIER ( '[' ']' )* )
			int alt110=2;
			try { DebugEnterDecision(110, false);
			switch (input.LA(1))
			{
			case FINAL:
			case MONKEYS_AT:
				{
				alt110 = 1;
				}
				break;
			case IDENTIFIER:
				{
				int LA110_2 = input.LA(2);

				if ((EvaluatePredicate(synpred161_Java_fragment)))
				{
					alt110 = 1;
				}
				else if ((true))
				{
					alt110 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 110, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
				{
				int LA110_2 = input.LA(2);

				if ((EvaluatePredicate(synpred161_Java_fragment)))
				{
					alt110 = 1;
				}
				else if ((true))
				{
					alt110 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 110, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 110, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(110); }
			switch (alt110)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:921:9: variableModifiers catchType IDENTIFIER ( '[' ']' )*
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(921, 9);
				PushFollow(Follow._variableModifiers_in_formalParameter5025);
				variableModifiers361=variableModifiers();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variableModifiers361.Tree, variableModifiers361, "variableModifiers361", retval);
				DebugLocation(921, 27);
				PushFollow(Follow._catchType_in_formalParameter5027);
				catchType362=catchType();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, catchType362.Tree, catchType362, "catchType362", retval);
				DebugLocation(921, 37);
				IDENTIFIER363=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_formalParameter5029); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER363_tree = (object)adaptor.Create(IDENTIFIER363, "IDENTIFIER363", retval);
				adaptor.AddChild(root_0, IDENTIFIER363_tree);
				}
				DebugLocation(922, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:922:9: ( '[' ']' )*
				try { DebugEnterSubRule(108);
				while (true)
				{
					int alt108=2;
					try { DebugEnterDecision(108, false);
					int LA108_1 = input.LA(1);

					if ((LA108_1==LBRACKET))
					{
						alt108 = 1;
					}


					} finally { DebugExitDecision(108); }
					switch ( alt108 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:922:10: '[' ']'
						{
						DebugLocation(922, 10);
						char_literal364=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_formalParameter5040); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal364_tree = (object)adaptor.Create(char_literal364, "char_literal364", retval);
						adaptor.AddChild(root_0, char_literal364_tree);
						}
						DebugLocation(922, 14);
						char_literal365=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_formalParameter5042); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal365_tree = (object)adaptor.Create(char_literal365, "char_literal365", retval);
						adaptor.AddChild(root_0, char_literal365_tree);
						}

						}
						break;

					default:
						goto loop108;
					}
				}

				loop108:
					;

				} finally { DebugExitSubRule(108); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:924:9: catchType IDENTIFIER ( '[' ']' )*
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(924, 9);
				PushFollow(Follow._catchType_in_formalParameter5063);
				catchType366=catchType();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, catchType366.Tree, catchType366, "catchType366", retval);
				DebugLocation(924, 19);
				IDENTIFIER367=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_formalParameter5065); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER367_tree = (object)adaptor.Create(IDENTIFIER367, "IDENTIFIER367", retval);
				adaptor.AddChild(root_0, IDENTIFIER367_tree);
				}
				DebugLocation(925, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:925:9: ( '[' ']' )*
				try { DebugEnterSubRule(109);
				while (true)
				{
					int alt109=2;
					try { DebugEnterDecision(109, false);
					int LA109_1 = input.LA(1);

					if ((LA109_1==LBRACKET))
					{
						alt109 = 1;
					}


					} finally { DebugExitDecision(109); }
					switch ( alt109 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:925:10: '[' ']'
						{
						DebugLocation(925, 10);
						char_literal368=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_formalParameter5076); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal368_tree = (object)adaptor.Create(char_literal368, "char_literal368", retval);
						adaptor.AddChild(root_0, char_literal368_tree);
						}
						DebugLocation(925, 14);
						char_literal369=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_formalParameter5078); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal369_tree = (object)adaptor.Create(char_literal369, "char_literal369", retval);
						adaptor.AddChild(root_0, char_literal369_tree);
						}

						}
						break;

					default:
						goto loop109;
					}
				}

				loop109:
					;

				} finally { DebugExitSubRule(109); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("formalParameter", 66);
			LeaveRule("formalParameter", 66);
			LeaveRule_formalParameter();
			if (state.backtracking > 0) { Memoize(input, 66, formalParameter_StartIndex); }

		}
		DebugLocation(927, 4);
		} finally { DebugExitRule(GrammarFileName, "formalParameter"); }
		return retval;

	}
	// $ANTLR end "formalParameter"

	partial void EnterRule_catchType();
	partial void LeaveRule_catchType();
	// $ANTLR start "catchType"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:929:1: catchType : type ( '|' type )* ;
	[GrammarRule("catchType")]
	private Antlr3AstNode catchType()
	{
		EnterRule_catchType();
		EnterRule("catchType", 67);
		var retval = new Antlr3AstNode("catchType");
		
		retval.Start = (IToken)input.LT(1);
		int catchType_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal371 = default(IToken);
		Antlr3AstNode type370 = default(Antlr3AstNode);
		Antlr3AstNode type372 = default(Antlr3AstNode);

		object char_literal371_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "catchType");
		DebugLocation(929, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 67)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:930:5: ( type ( '|' type )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:930:9: type ( '|' type )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(930, 9);
			PushFollow(Follow._type_in_catchType5108);
			type370=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type370.Tree, type370, "type370", retval);
			DebugLocation(931, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:931:9: ( '|' type )*
			try { DebugEnterSubRule(111);
			while (true)
			{
				int alt111=2;
				try { DebugEnterDecision(111, false);
				int LA111_1 = input.LA(1);

				if ((LA111_1==BAR))
				{
					alt111 = 1;
				}


				} finally { DebugExitDecision(111); }
				switch ( alt111 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:931:10: '|' type
					{
					DebugLocation(931, 10);
					char_literal371=(IToken)Match(input,BAR,Follow._BAR_in_catchType5119); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal371_tree = (object)adaptor.Create(char_literal371, "char_literal371", retval);
					adaptor.AddChild(root_0, char_literal371_tree);
					}
					DebugLocation(931, 14);
					PushFollow(Follow._type_in_catchType5121);
					type372=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type372.Tree, type372, "type372", retval);

					}
					break;

				default:
					goto loop111;
				}
			}

			loop111:
				;

			} finally { DebugExitSubRule(111); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("catchType", 67);
			LeaveRule("catchType", 67);
			LeaveRule_catchType();
			if (state.backtracking > 0) { Memoize(input, 67, catchType_StartIndex); }

		}
		DebugLocation(933, 4);
		} finally { DebugExitRule(GrammarFileName, "catchType"); }
		return retval;

	}
	// $ANTLR end "catchType"

	partial void EnterRule_tryWithResourcesStatement();
	partial void LeaveRule_tryWithResourcesStatement();
	// $ANTLR start "tryWithResourcesStatement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:935:1: tryWithResourcesStatement : 'try' resourceSpecification block ( catches )? ( 'finally' block )? ;
	[GrammarRule("tryWithResourcesStatement")]
	private Antlr3AstNode tryWithResourcesStatement()
	{
		EnterRule_tryWithResourcesStatement();
		EnterRule("tryWithResourcesStatement", 68);
		var retval = new Antlr3AstNode("tryWithResourcesStatement");
		
		retval.Start = (IToken)input.LT(1);
		int tryWithResourcesStatement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal373 = default(IToken);
		IToken string_literal377 = default(IToken);
		Antlr3AstNode resourceSpecification374 = default(Antlr3AstNode);
		Antlr3AstNode block375 = default(Antlr3AstNode);
		Antlr3AstNode catches376 = default(Antlr3AstNode);
		Antlr3AstNode block378 = default(Antlr3AstNode);

		object string_literal373_tree = default(object);
		object string_literal377_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "tryWithResourcesStatement");
		DebugLocation(935, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 68)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:936:5: ( 'try' resourceSpecification block ( catches )? ( 'finally' block )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:936:10: 'try' resourceSpecification block ( catches )? ( 'finally' block )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(936, 10);
			string_literal373=(IToken)Match(input,TRY,Follow._TRY_in_tryWithResourcesStatement5152); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal373_tree = (object)adaptor.Create(string_literal373, "string_literal373", retval);
			adaptor.AddChild(root_0, string_literal373_tree);
			}
			DebugLocation(936, 16);
			PushFollow(Follow._resourceSpecification_in_tryWithResourcesStatement5154);
			resourceSpecification374=resourceSpecification();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, resourceSpecification374.Tree, resourceSpecification374, "resourceSpecification374", retval);
			DebugLocation(936, 38);
			PushFollow(Follow._block_in_tryWithResourcesStatement5156);
			block375=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block375.Tree, block375, "block375", retval);
			DebugLocation(936, 44);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:936:44: ( catches )?
			int alt112=2;
			try { DebugEnterSubRule(112);
			try { DebugEnterDecision(112, false);
			int LA112_1 = input.LA(1);

			if ((LA112_1==CATCH))
			{
				alt112 = 1;
			}
			} finally { DebugExitDecision(112); }
			switch (alt112)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:936:44: catches
				{
				DebugLocation(936, 44);
				PushFollow(Follow._catches_in_tryWithResourcesStatement5158);
				catches376=catches();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, catches376.Tree, catches376, "catches376", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(112); }

			DebugLocation(936, 53);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:936:53: ( 'finally' block )?
			int alt113=2;
			try { DebugEnterSubRule(113);
			try { DebugEnterDecision(113, false);
			int LA113_1 = input.LA(1);

			if ((LA113_1==FINALLY))
			{
				alt113 = 1;
			}
			} finally { DebugExitDecision(113); }
			switch (alt113)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:936:54: 'finally' block
				{
				DebugLocation(936, 54);
				string_literal377=(IToken)Match(input,FINALLY,Follow._FINALLY_in_tryWithResourcesStatement5162); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal377_tree = (object)adaptor.Create(string_literal377, "string_literal377", retval);
				adaptor.AddChild(root_0, string_literal377_tree);
				}
				DebugLocation(936, 64);
				PushFollow(Follow._block_in_tryWithResourcesStatement5164);
				block378=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block378.Tree, block378, "block378", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(113); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("tryWithResourcesStatement", 68);
			LeaveRule("tryWithResourcesStatement", 68);
			LeaveRule_tryWithResourcesStatement();
			if (state.backtracking > 0) { Memoize(input, 68, tryWithResourcesStatement_StartIndex); }

		}
		DebugLocation(937, 4);
		} finally { DebugExitRule(GrammarFileName, "tryWithResourcesStatement"); }
		return retval;

	}
	// $ANTLR end "tryWithResourcesStatement"

	partial void EnterRule_resourceSpecification();
	partial void LeaveRule_resourceSpecification();
	// $ANTLR start "resourceSpecification"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:939:1: resourceSpecification : '(' resources ( ';' )? ')' ;
	[GrammarRule("resourceSpecification")]
	private Antlr3AstNode resourceSpecification()
	{
		EnterRule_resourceSpecification();
		EnterRule("resourceSpecification", 69);
		var retval = new Antlr3AstNode("resourceSpecification");
		
		retval.Start = (IToken)input.LT(1);
		int resourceSpecification_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal379 = default(IToken);
		IToken char_literal381 = default(IToken);
		IToken char_literal382 = default(IToken);
		Antlr3AstNode resources380 = default(Antlr3AstNode);

		object char_literal379_tree = default(object);
		object char_literal381_tree = default(object);
		object char_literal382_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "resourceSpecification");
		DebugLocation(939, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 69)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:940:5: ( '(' resources ( ';' )? ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:940:10: '(' resources ( ';' )? ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(940, 10);
			char_literal379=(IToken)Match(input,LPAREN,Follow._LPAREN_in_resourceSpecification5186); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal379_tree = (object)adaptor.Create(char_literal379, "char_literal379", retval);
			adaptor.AddChild(root_0, char_literal379_tree);
			}
			DebugLocation(940, 14);
			PushFollow(Follow._resources_in_resourceSpecification5188);
			resources380=resources();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, resources380.Tree, resources380, "resources380", retval);
			DebugLocation(940, 24);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:940:24: ( ';' )?
			int alt114=2;
			try { DebugEnterSubRule(114);
			try { DebugEnterDecision(114, false);
			int LA114_1 = input.LA(1);

			if ((LA114_1==SEMI))
			{
				alt114 = 1;
			}
			} finally { DebugExitDecision(114); }
			switch (alt114)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:940:24: ';'
				{
				DebugLocation(940, 24);
				char_literal381=(IToken)Match(input,SEMI,Follow._SEMI_in_resourceSpecification5190); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal381_tree = (object)adaptor.Create(char_literal381, "char_literal381", retval);
				adaptor.AddChild(root_0, char_literal381_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(114); }

			DebugLocation(940, 29);
			char_literal382=(IToken)Match(input,RPAREN,Follow._RPAREN_in_resourceSpecification5193); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal382_tree = (object)adaptor.Create(char_literal382, "char_literal382", retval);
			adaptor.AddChild(root_0, char_literal382_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("resourceSpecification", 69);
			LeaveRule("resourceSpecification", 69);
			LeaveRule_resourceSpecification();
			if (state.backtracking > 0) { Memoize(input, 69, resourceSpecification_StartIndex); }

		}
		DebugLocation(941, 4);
		} finally { DebugExitRule(GrammarFileName, "resourceSpecification"); }
		return retval;

	}
	// $ANTLR end "resourceSpecification"

	partial void EnterRule_resources();
	partial void LeaveRule_resources();
	// $ANTLR start "resources"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:943:1: resources : resource ( ';' resource )* ;
	[GrammarRule("resources")]
	private Antlr3AstNode resources()
	{
		EnterRule_resources();
		EnterRule("resources", 70);
		var retval = new Antlr3AstNode("resources");
		
		retval.Start = (IToken)input.LT(1);
		int resources_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal384 = default(IToken);
		Antlr3AstNode resource383 = default(Antlr3AstNode);
		Antlr3AstNode resource385 = default(Antlr3AstNode);

		object char_literal384_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "resources");
		DebugLocation(943, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 70)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:944:5: ( resource ( ';' resource )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:944:10: resource ( ';' resource )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(944, 10);
			PushFollow(Follow._resource_in_resources5213);
			resource383=resource();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, resource383.Tree, resource383, "resource383", retval);
			DebugLocation(944, 20);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:944:20: ( ';' resource )*
			try { DebugEnterSubRule(115);
			while (true)
			{
				int alt115=2;
				try { DebugEnterDecision(115, false);
				int LA115_1 = input.LA(1);

				if ((LA115_1==SEMI))
				{
					int LA115_2 = input.LA(2);

					if ((LA115_2==BOOLEAN||LA115_2==BYTE||LA115_2==CHAR||LA115_2==DOUBLE||LA115_2==FINAL||LA115_2==FLOAT||LA115_2==IDENTIFIER||LA115_2==INT||LA115_2==LONG||LA115_2==MONKEYS_AT||LA115_2==SHORT))
					{
						alt115 = 1;
					}


				}


				} finally { DebugExitDecision(115); }
				switch ( alt115 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:944:22: ';' resource
					{
					DebugLocation(944, 22);
					char_literal384=(IToken)Match(input,SEMI,Follow._SEMI_in_resources5218); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal384_tree = (object)adaptor.Create(char_literal384, "char_literal384", retval);
					adaptor.AddChild(root_0, char_literal384_tree);
					}
					DebugLocation(944, 26);
					PushFollow(Follow._resource_in_resources5220);
					resource385=resource();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, resource385.Tree, resource385, "resource385", retval);

					}
					break;

				default:
					goto loop115;
				}
			}

			loop115:
				;

			} finally { DebugExitSubRule(115); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("resources", 70);
			LeaveRule("resources", 70);
			LeaveRule_resources();
			if (state.backtracking > 0) { Memoize(input, 70, resources_StartIndex); }

		}
		DebugLocation(945, 4);
		} finally { DebugExitRule(GrammarFileName, "resources"); }
		return retval;

	}
	// $ANTLR end "resources"

	partial void EnterRule_resource();
	partial void LeaveRule_resource();
	// $ANTLR start "resource"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:947:1: resource : ( variableModifiers )? type IDENTIFIER ( '[' ']' )* '=' expression ;
	[GrammarRule("resource")]
	private Antlr3AstNode resource()
	{
		EnterRule_resource();
		EnterRule("resource", 71);
		var retval = new Antlr3AstNode("resource");
		
		retval.Start = (IToken)input.LT(1);
		int resource_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER388 = default(IToken);
		IToken char_literal389 = default(IToken);
		IToken char_literal390 = default(IToken);
		IToken char_literal391 = default(IToken);
		Antlr3AstNode variableModifiers386 = default(Antlr3AstNode);
		Antlr3AstNode type387 = default(Antlr3AstNode);
		Antlr3AstNode expression392 = default(Antlr3AstNode);

		object IDENTIFIER388_tree = default(object);
		object char_literal389_tree = default(object);
		object char_literal390_tree = default(object);
		object char_literal391_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "resource");
		DebugLocation(947, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 71)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:948:5: ( ( variableModifiers )? type IDENTIFIER ( '[' ']' )* '=' expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:948:10: ( variableModifiers )? type IDENTIFIER ( '[' ']' )* '=' expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(948, 10);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:948:10: ( variableModifiers )?
			int alt116=2;
			try { DebugEnterSubRule(116);
			try { DebugEnterDecision(116, false);
			switch (input.LA(1))
			{
			case FINAL:
			case MONKEYS_AT:
				{
				alt116 = 1;
				}
				break;
			case IDENTIFIER:
				{
				int LA116_2 = input.LA(2);

				if ((EvaluatePredicate(synpred168_Java_fragment)))
				{
					alt116 = 1;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
				{
				int LA116_2 = input.LA(2);

				if ((EvaluatePredicate(synpred168_Java_fragment)))
				{
					alt116 = 1;
				}
				}
				break;
			}

			} finally { DebugExitDecision(116); }
			switch (alt116)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:948:10: variableModifiers
				{
				DebugLocation(948, 10);
				PushFollow(Follow._variableModifiers_in_resource5243);
				variableModifiers386=variableModifiers();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variableModifiers386.Tree, variableModifiers386, "variableModifiers386", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(116); }

			DebugLocation(948, 29);
			PushFollow(Follow._type_in_resource5246);
			type387=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type387.Tree, type387, "type387", retval);
			DebugLocation(948, 34);
			IDENTIFIER388=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_resource5248); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER388_tree = (object)adaptor.Create(IDENTIFIER388, "IDENTIFIER388", retval);
			adaptor.AddChild(root_0, IDENTIFIER388_tree);
			}
			DebugLocation(948, 45);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:948:45: ( '[' ']' )*
			try { DebugEnterSubRule(117);
			while (true)
			{
				int alt117=2;
				try { DebugEnterDecision(117, false);
				int LA117_1 = input.LA(1);

				if ((LA117_1==LBRACKET))
				{
					alt117 = 1;
				}


				} finally { DebugExitDecision(117); }
				switch ( alt117 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:948:46: '[' ']'
					{
					DebugLocation(948, 46);
					char_literal389=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_resource5251); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal389_tree = (object)adaptor.Create(char_literal389, "char_literal389", retval);
					adaptor.AddChild(root_0, char_literal389_tree);
					}
					DebugLocation(948, 50);
					char_literal390=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_resource5253); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal390_tree = (object)adaptor.Create(char_literal390, "char_literal390", retval);
					adaptor.AddChild(root_0, char_literal390_tree);
					}

					}
					break;

				default:
					goto loop117;
				}
			}

			loop117:
				;

			} finally { DebugExitSubRule(117); }

			DebugLocation(948, 56);
			char_literal391=(IToken)Match(input,EQ,Follow._EQ_in_resource5257); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal391_tree = (object)adaptor.Create(char_literal391, "char_literal391", retval);
			adaptor.AddChild(root_0, char_literal391_tree);
			}
			DebugLocation(948, 60);
			PushFollow(Follow._expression_in_resource5259);
			expression392=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression392.Tree, expression392, "expression392", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("resource", 71);
			LeaveRule("resource", 71);
			LeaveRule_resource();
			if (state.backtracking > 0) { Memoize(input, 71, resource_StartIndex); }

		}
		DebugLocation(949, 4);
		} finally { DebugExitRule(GrammarFileName, "resource"); }
		return retval;

	}
	// $ANTLR end "resource"

	partial void EnterRule_forstatement();
	partial void LeaveRule_forstatement();
	// $ANTLR start "forstatement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:951:1: forstatement : ( 'for' '(' variableModifiers type IDENTIFIER ':' expression ')' statement | 'for' '(' ( forInit )? ';' ( expression )? ';' ( expressionList )? ')' statement );
	[GrammarRule("forstatement")]
	private Antlr3AstNode forstatement()
	{
		EnterRule_forstatement();
		EnterRule("forstatement", 72);
		var retval = new Antlr3AstNode("forstatement");
		
		retval.Start = (IToken)input.LT(1);
		int forstatement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal393 = default(IToken);
		IToken char_literal394 = default(IToken);
		IToken IDENTIFIER397 = default(IToken);
		IToken char_literal398 = default(IToken);
		IToken char_literal400 = default(IToken);
		IToken string_literal402 = default(IToken);
		IToken char_literal403 = default(IToken);
		IToken char_literal405 = default(IToken);
		IToken char_literal407 = default(IToken);
		IToken char_literal409 = default(IToken);
		Antlr3AstNode variableModifiers395 = default(Antlr3AstNode);
		Antlr3AstNode type396 = default(Antlr3AstNode);
		Antlr3AstNode expression399 = default(Antlr3AstNode);
		Antlr3AstNode statement401 = default(Antlr3AstNode);
		Antlr3AstNode forInit404 = default(Antlr3AstNode);
		Antlr3AstNode expression406 = default(Antlr3AstNode);
		Antlr3AstNode expressionList408 = default(Antlr3AstNode);
		Antlr3AstNode statement410 = default(Antlr3AstNode);

		object string_literal393_tree = default(object);
		object char_literal394_tree = default(object);
		object IDENTIFIER397_tree = default(object);
		object char_literal398_tree = default(object);
		object char_literal400_tree = default(object);
		object string_literal402_tree = default(object);
		object char_literal403_tree = default(object);
		object char_literal405_tree = default(object);
		object char_literal407_tree = default(object);
		object char_literal409_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "forstatement");
		DebugLocation(951, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 72)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:952:5: ( 'for' '(' variableModifiers type IDENTIFIER ':' expression ')' statement | 'for' '(' ( forInit )? ';' ( expression )? ';' ( expressionList )? ')' statement )
			int alt121=2;
			try { DebugEnterDecision(121, false);
			int LA121_1 = input.LA(1);

			if ((LA121_1==FOR))
			{
				int LA121_2 = input.LA(2);

				if ((EvaluatePredicate(synpred170_Java_fragment)))
				{
					alt121 = 1;
				}
				else if ((true))
				{
					alt121 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 121, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 121, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(121); }
			switch (alt121)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:954:9: 'for' '(' variableModifiers type IDENTIFIER ':' expression ')' statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(954, 9);
				string_literal393=(IToken)Match(input,FOR,Follow._FOR_in_forstatement5298); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal393_tree = (object)adaptor.Create(string_literal393, "string_literal393", retval);
				adaptor.AddChild(root_0, string_literal393_tree);
				}
				DebugLocation(954, 15);
				char_literal394=(IToken)Match(input,LPAREN,Follow._LPAREN_in_forstatement5300); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal394_tree = (object)adaptor.Create(char_literal394, "char_literal394", retval);
				adaptor.AddChild(root_0, char_literal394_tree);
				}
				DebugLocation(954, 19);
				PushFollow(Follow._variableModifiers_in_forstatement5302);
				variableModifiers395=variableModifiers();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variableModifiers395.Tree, variableModifiers395, "variableModifiers395", retval);
				DebugLocation(954, 37);
				PushFollow(Follow._type_in_forstatement5304);
				type396=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type396.Tree, type396, "type396", retval);
				DebugLocation(954, 42);
				IDENTIFIER397=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_forstatement5306); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER397_tree = (object)adaptor.Create(IDENTIFIER397, "IDENTIFIER397", retval);
				adaptor.AddChild(root_0, IDENTIFIER397_tree);
				}
				DebugLocation(954, 53);
				char_literal398=(IToken)Match(input,COLON,Follow._COLON_in_forstatement5308); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal398_tree = (object)adaptor.Create(char_literal398, "char_literal398", retval);
				adaptor.AddChild(root_0, char_literal398_tree);
				}
				DebugLocation(955, 9);
				PushFollow(Follow._expression_in_forstatement5319);
				expression399=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression399.Tree, expression399, "expression399", retval);
				DebugLocation(955, 20);
				char_literal400=(IToken)Match(input,RPAREN,Follow._RPAREN_in_forstatement5321); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal400_tree = (object)adaptor.Create(char_literal400, "char_literal400", retval);
				adaptor.AddChild(root_0, char_literal400_tree);
				}
				DebugLocation(955, 24);
				PushFollow(Follow._statement_in_forstatement5323);
				statement401=statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, statement401.Tree, statement401, "statement401", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:958:9: 'for' '(' ( forInit )? ';' ( expression )? ';' ( expressionList )? ')' statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(958, 9);
				string_literal402=(IToken)Match(input,FOR,Follow._FOR_in_forstatement5355); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal402_tree = (object)adaptor.Create(string_literal402, "string_literal402", retval);
				adaptor.AddChild(root_0, string_literal402_tree);
				}
				DebugLocation(958, 15);
				char_literal403=(IToken)Match(input,LPAREN,Follow._LPAREN_in_forstatement5357); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal403_tree = (object)adaptor.Create(char_literal403, "char_literal403", retval);
				adaptor.AddChild(root_0, char_literal403_tree);
				}
				DebugLocation(959, 17);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:959:17: ( forInit )?
				int alt118=2;
				try { DebugEnterSubRule(118);
				try { DebugEnterDecision(118, false);
				int LA118_1 = input.LA(1);

				if ((LA118_1==EOF||LA118_1==BANG||LA118_1==BOOLEAN||LA118_1==BYTE||(LA118_1>=CHAR && LA118_1<=CHARLITERAL)||(LA118_1>=DOUBLE && LA118_1<=DOUBLELITERAL)||(LA118_1>=FALSE && LA118_1<=FINAL)||(LA118_1>=FLOAT && LA118_1<=FLOATLITERAL)||LA118_1==IDENTIFIER||LA118_1==INT||LA118_1==INTLITERAL||(LA118_1>=LONG && LA118_1<=LPAREN)||LA118_1==MONKEYS_AT||(LA118_1>=NEW && LA118_1<=NULL)||LA118_1==PLUS||LA118_1==PLUSPLUS||LA118_1==SHORT||(LA118_1>=STRINGLITERAL && LA118_1<=SUB)||(LA118_1>=SUBSUB && LA118_1<=SUPER)||LA118_1==THIS||LA118_1==TILDE||LA118_1==TRUE||LA118_1==VOID))
				{
					alt118 = 1;
				}
				} finally { DebugExitDecision(118); }
				switch (alt118)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:959:18: forInit
					{
					DebugLocation(959, 18);
					PushFollow(Follow._forInit_in_forstatement5377);
					forInit404=forInit();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, forInit404.Tree, forInit404, "forInit404", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(118); }

				DebugLocation(960, 20);
				char_literal405=(IToken)Match(input,SEMI,Follow._SEMI_in_forstatement5398); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal405_tree = (object)adaptor.Create(char_literal405, "char_literal405", retval);
				adaptor.AddChild(root_0, char_literal405_tree);
				}
				DebugLocation(961, 17);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:961:17: ( expression )?
				int alt119=2;
				try { DebugEnterSubRule(119);
				try { DebugEnterDecision(119, false);
				int LA119_1 = input.LA(1);

				if ((LA119_1==BANG||LA119_1==BOOLEAN||LA119_1==BYTE||(LA119_1>=CHAR && LA119_1<=CHARLITERAL)||(LA119_1>=DOUBLE && LA119_1<=DOUBLELITERAL)||LA119_1==FALSE||(LA119_1>=FLOAT && LA119_1<=FLOATLITERAL)||LA119_1==IDENTIFIER||LA119_1==INT||LA119_1==INTLITERAL||(LA119_1>=LONG && LA119_1<=LPAREN)||(LA119_1>=NEW && LA119_1<=NULL)||LA119_1==PLUS||LA119_1==PLUSPLUS||LA119_1==SHORT||(LA119_1>=STRINGLITERAL && LA119_1<=SUB)||(LA119_1>=SUBSUB && LA119_1<=SUPER)||LA119_1==THIS||LA119_1==TILDE||LA119_1==TRUE||LA119_1==VOID))
				{
					alt119 = 1;
				}
				} finally { DebugExitDecision(119); }
				switch (alt119)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:961:18: expression
					{
					DebugLocation(961, 18);
					PushFollow(Follow._expression_in_forstatement5418);
					expression406=expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, expression406.Tree, expression406, "expression406", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(119); }

				DebugLocation(962, 20);
				char_literal407=(IToken)Match(input,SEMI,Follow._SEMI_in_forstatement5439); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal407_tree = (object)adaptor.Create(char_literal407, "char_literal407", retval);
				adaptor.AddChild(root_0, char_literal407_tree);
				}
				DebugLocation(963, 17);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:963:17: ( expressionList )?
				int alt120=2;
				try { DebugEnterSubRule(120);
				try { DebugEnterDecision(120, false);
				int LA120_1 = input.LA(1);

				if ((LA120_1==BANG||LA120_1==BOOLEAN||LA120_1==BYTE||(LA120_1>=CHAR && LA120_1<=CHARLITERAL)||(LA120_1>=DOUBLE && LA120_1<=DOUBLELITERAL)||LA120_1==FALSE||(LA120_1>=FLOAT && LA120_1<=FLOATLITERAL)||LA120_1==IDENTIFIER||LA120_1==INT||LA120_1==INTLITERAL||(LA120_1>=LONG && LA120_1<=LPAREN)||(LA120_1>=NEW && LA120_1<=NULL)||LA120_1==PLUS||LA120_1==PLUSPLUS||LA120_1==SHORT||(LA120_1>=STRINGLITERAL && LA120_1<=SUB)||(LA120_1>=SUBSUB && LA120_1<=SUPER)||LA120_1==THIS||LA120_1==TILDE||LA120_1==TRUE||LA120_1==VOID))
				{
					alt120 = 1;
				}
				} finally { DebugExitDecision(120); }
				switch (alt120)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:963:18: expressionList
					{
					DebugLocation(963, 18);
					PushFollow(Follow._expressionList_in_forstatement5459);
					expressionList408=expressionList();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, expressionList408.Tree, expressionList408, "expressionList408", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(120); }

				DebugLocation(964, 20);
				char_literal409=(IToken)Match(input,RPAREN,Follow._RPAREN_in_forstatement5480); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal409_tree = (object)adaptor.Create(char_literal409, "char_literal409", retval);
				adaptor.AddChild(root_0, char_literal409_tree);
				}
				DebugLocation(964, 24);
				PushFollow(Follow._statement_in_forstatement5482);
				statement410=statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, statement410.Tree, statement410, "statement410", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("forstatement", 72);
			LeaveRule("forstatement", 72);
			LeaveRule_forstatement();
			if (state.backtracking > 0) { Memoize(input, 72, forstatement_StartIndex); }

		}
		DebugLocation(965, 4);
		} finally { DebugExitRule(GrammarFileName, "forstatement"); }
		return retval;

	}
	// $ANTLR end "forstatement"

	partial void EnterRule_forInit();
	partial void LeaveRule_forInit();
	// $ANTLR start "forInit"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:967:1: forInit : ( localVariableDeclaration | expressionList );
	[GrammarRule("forInit")]
	private Antlr3AstNode forInit()
	{
		EnterRule_forInit();
		EnterRule("forInit", 73);
		var retval = new Antlr3AstNode("forInit");
		
		retval.Start = (IToken)input.LT(1);
		int forInit_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode localVariableDeclaration411 = default(Antlr3AstNode);
		Antlr3AstNode expressionList412 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "forInit");
		DebugLocation(967, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 73)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:968:5: ( localVariableDeclaration | expressionList )
			int alt122=2;
			try { DebugEnterDecision(122, false);
			switch (input.LA(1))
			{
			case FINAL:
			case MONKEYS_AT:
				{
				alt122 = 1;
				}
				break;
			case IDENTIFIER:
				{
				int LA122_2 = input.LA(2);

				if ((EvaluatePredicate(synpred174_Java_fragment)))
				{
					alt122 = 1;
				}
				else if ((true))
				{
					alt122 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 122, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
				{
				int LA122_2 = input.LA(2);

				if ((EvaluatePredicate(synpred174_Java_fragment)))
				{
					alt122 = 1;
				}
				else if ((true))
				{
					alt122 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 122, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case BANG:
			case CHARLITERAL:
			case DOUBLELITERAL:
			case FALSE:
			case FLOATLITERAL:
			case INTLITERAL:
			case LONGLITERAL:
			case LPAREN:
			case NEW:
			case NULL:
			case PLUS:
			case PLUSPLUS:
			case STRINGLITERAL:
			case SUB:
			case SUBSUB:
			case SUPER:
			case THIS:
			case TILDE:
			case TRUE:
			case VOID:
				{
				alt122 = 2;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 122, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(122); }
			switch (alt122)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:968:9: localVariableDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(968, 9);
				PushFollow(Follow._localVariableDeclaration_in_forInit5502);
				localVariableDeclaration411=localVariableDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, localVariableDeclaration411.Tree, localVariableDeclaration411, "localVariableDeclaration411", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:969:9: expressionList
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(969, 9);
				PushFollow(Follow._expressionList_in_forInit5512);
				expressionList412=expressionList();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expressionList412.Tree, expressionList412, "expressionList412", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("forInit", 73);
			LeaveRule("forInit", 73);
			LeaveRule_forInit();
			if (state.backtracking > 0) { Memoize(input, 73, forInit_StartIndex); }

		}
		DebugLocation(970, 4);
		} finally { DebugExitRule(GrammarFileName, "forInit"); }
		return retval;

	}
	// $ANTLR end "forInit"

	partial void EnterRule_parExpression();
	partial void LeaveRule_parExpression();
	// $ANTLR start "parExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:972:1: parExpression : '(' expression ')' ;
	[GrammarRule("parExpression")]
	private Antlr3AstNode parExpression()
	{
		EnterRule_parExpression();
		EnterRule("parExpression", 74);
		var retval = new Antlr3AstNode("parExpression");
		
		retval.Start = (IToken)input.LT(1);
		int parExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal413 = default(IToken);
		IToken char_literal415 = default(IToken);
		Antlr3AstNode expression414 = default(Antlr3AstNode);

		object char_literal413_tree = default(object);
		object char_literal415_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "parExpression");
		DebugLocation(972, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 74)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:973:5: ( '(' expression ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:973:9: '(' expression ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(973, 9);
			char_literal413=(IToken)Match(input,LPAREN,Follow._LPAREN_in_parExpression5532); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal413_tree = (object)adaptor.Create(char_literal413, "char_literal413", retval);
			adaptor.AddChild(root_0, char_literal413_tree);
			}
			DebugLocation(973, 13);
			PushFollow(Follow._expression_in_parExpression5534);
			expression414=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression414.Tree, expression414, "expression414", retval);
			DebugLocation(973, 24);
			char_literal415=(IToken)Match(input,RPAREN,Follow._RPAREN_in_parExpression5536); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal415_tree = (object)adaptor.Create(char_literal415, "char_literal415", retval);
			adaptor.AddChild(root_0, char_literal415_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("parExpression", 74);
			LeaveRule("parExpression", 74);
			LeaveRule_parExpression();
			if (state.backtracking > 0) { Memoize(input, 74, parExpression_StartIndex); }

		}
		DebugLocation(974, 4);
		} finally { DebugExitRule(GrammarFileName, "parExpression"); }
		return retval;

	}
	// $ANTLR end "parExpression"

	partial void EnterRule_expressionList();
	partial void LeaveRule_expressionList();
	// $ANTLR start "expressionList"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:976:1: expressionList : expression ( ',' expression )* ;
	[GrammarRule("expressionList")]
	private Antlr3AstNode expressionList()
	{
		EnterRule_expressionList();
		EnterRule("expressionList", 75);
		var retval = new Antlr3AstNode("expressionList");
		
		retval.Start = (IToken)input.LT(1);
		int expressionList_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal417 = default(IToken);
		Antlr3AstNode expression416 = default(Antlr3AstNode);
		Antlr3AstNode expression418 = default(Antlr3AstNode);

		object char_literal417_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "expressionList");
		DebugLocation(976, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 75)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:977:5: ( expression ( ',' expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:977:9: expression ( ',' expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(977, 9);
			PushFollow(Follow._expression_in_expressionList5556);
			expression416=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression416.Tree, expression416, "expression416", retval);
			DebugLocation(978, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:978:9: ( ',' expression )*
			try { DebugEnterSubRule(123);
			while (true)
			{
				int alt123=2;
				try { DebugEnterDecision(123, false);
				int LA123_1 = input.LA(1);

				if ((LA123_1==COMMA))
				{
					alt123 = 1;
				}


				} finally { DebugExitDecision(123); }
				switch ( alt123 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:978:10: ',' expression
					{
					DebugLocation(978, 10);
					char_literal417=(IToken)Match(input,COMMA,Follow._COMMA_in_expressionList5567); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal417_tree = (object)adaptor.Create(char_literal417, "char_literal417", retval);
					adaptor.AddChild(root_0, char_literal417_tree);
					}
					DebugLocation(978, 14);
					PushFollow(Follow._expression_in_expressionList5569);
					expression418=expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, expression418.Tree, expression418, "expression418", retval);

					}
					break;

				default:
					goto loop123;
				}
			}

			loop123:
				;

			} finally { DebugExitSubRule(123); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("expressionList", 75);
			LeaveRule("expressionList", 75);
			LeaveRule_expressionList();
			if (state.backtracking > 0) { Memoize(input, 75, expressionList_StartIndex); }

		}
		DebugLocation(980, 4);
		} finally { DebugExitRule(GrammarFileName, "expressionList"); }
		return retval;

	}
	// $ANTLR end "expressionList"

	partial void EnterRule_expression();
	partial void LeaveRule_expression();
	// $ANTLR start "expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:983:1: expression : conditionalExpression ( assignmentOperator expression )? ;
	[GrammarRule("expression")]
	private Antlr3AstNode expression()
	{
		EnterRule_expression();
		EnterRule("expression", 76);
		var retval = new Antlr3AstNode("expression");
		
		retval.Start = (IToken)input.LT(1);
		int expression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode conditionalExpression419 = default(Antlr3AstNode);
		Antlr3AstNode assignmentOperator420 = default(Antlr3AstNode);
		Antlr3AstNode expression421 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "expression");
		DebugLocation(983, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 76)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:984:5: ( conditionalExpression ( assignmentOperator expression )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:984:9: conditionalExpression ( assignmentOperator expression )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(984, 9);
			PushFollow(Follow._conditionalExpression_in_expression5601);
			conditionalExpression419=conditionalExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, conditionalExpression419.Tree, conditionalExpression419, "conditionalExpression419", retval);
			DebugLocation(985, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:985:9: ( assignmentOperator expression )?
			int alt124=2;
			try { DebugEnterSubRule(124);
			try { DebugEnterDecision(124, false);
			int LA124_1 = input.LA(1);

			if ((LA124_1==AMPEQ||LA124_1==BAREQ||LA124_1==CARETEQ||LA124_1==EQ||LA124_1==GT||LA124_1==LT||LA124_1==PERCENTEQ||LA124_1==PLUSEQ||LA124_1==SLASHEQ||LA124_1==STAREQ||LA124_1==SUBEQ))
			{
				alt124 = 1;
			}
			} finally { DebugExitDecision(124); }
			switch (alt124)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:985:10: assignmentOperator expression
				{
				DebugLocation(985, 10);
				PushFollow(Follow._assignmentOperator_in_expression5612);
				assignmentOperator420=assignmentOperator();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, assignmentOperator420.Tree, assignmentOperator420, "assignmentOperator420", retval);
				DebugLocation(985, 29);
				PushFollow(Follow._expression_in_expression5614);
				expression421=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression421.Tree, expression421, "expression421", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(124); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("expression", 76);
			LeaveRule("expression", 76);
			LeaveRule_expression();
			if (state.backtracking > 0) { Memoize(input, 76, expression_StartIndex); }

		}
		DebugLocation(987, 4);
		} finally { DebugExitRule(GrammarFileName, "expression"); }
		return retval;

	}
	// $ANTLR end "expression"

	partial void EnterRule_assignmentOperator();
	partial void LeaveRule_assignmentOperator();
	// $ANTLR start "assignmentOperator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:990:1: assignmentOperator : ( '=' | '+=' | '-=' | '*=' | '/=' | '&=' | '|=' | '^=' | '%=' | '<' '<' '=' | '>' '>' '>' '=' | '>' '>' '=' );
	[GrammarRule("assignmentOperator")]
	private Antlr3AstNode assignmentOperator()
	{
		EnterRule_assignmentOperator();
		EnterRule("assignmentOperator", 77);
		var retval = new Antlr3AstNode("assignmentOperator");
		
		retval.Start = (IToken)input.LT(1);
		int assignmentOperator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal422 = default(IToken);
		IToken string_literal423 = default(IToken);
		IToken string_literal424 = default(IToken);
		IToken string_literal425 = default(IToken);
		IToken string_literal426 = default(IToken);
		IToken string_literal427 = default(IToken);
		IToken string_literal428 = default(IToken);
		IToken string_literal429 = default(IToken);
		IToken string_literal430 = default(IToken);
		IToken char_literal431 = default(IToken);
		IToken char_literal432 = default(IToken);
		IToken char_literal433 = default(IToken);
		IToken char_literal434 = default(IToken);
		IToken char_literal435 = default(IToken);
		IToken char_literal436 = default(IToken);
		IToken char_literal437 = default(IToken);
		IToken char_literal438 = default(IToken);
		IToken char_literal439 = default(IToken);
		IToken char_literal440 = default(IToken);

		object char_literal422_tree = default(object);
		object string_literal423_tree = default(object);
		object string_literal424_tree = default(object);
		object string_literal425_tree = default(object);
		object string_literal426_tree = default(object);
		object string_literal427_tree = default(object);
		object string_literal428_tree = default(object);
		object string_literal429_tree = default(object);
		object string_literal430_tree = default(object);
		object char_literal431_tree = default(object);
		object char_literal432_tree = default(object);
		object char_literal433_tree = default(object);
		object char_literal434_tree = default(object);
		object char_literal435_tree = default(object);
		object char_literal436_tree = default(object);
		object char_literal437_tree = default(object);
		object char_literal438_tree = default(object);
		object char_literal439_tree = default(object);
		object char_literal440_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "assignmentOperator");
		DebugLocation(990, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 77)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:991:5: ( '=' | '+=' | '-=' | '*=' | '/=' | '&=' | '|=' | '^=' | '%=' | '<' '<' '=' | '>' '>' '>' '=' | '>' '>' '=' )
			int alt125=12;
			try { DebugEnterDecision(125, false);
			switch (input.LA(1))
			{
			case EQ:
				{
				alt125 = 1;
				}
				break;
			case PLUSEQ:
				{
				alt125 = 2;
				}
				break;
			case SUBEQ:
				{
				alt125 = 3;
				}
				break;
			case STAREQ:
				{
				alt125 = 4;
				}
				break;
			case SLASHEQ:
				{
				alt125 = 5;
				}
				break;
			case AMPEQ:
				{
				alt125 = 6;
				}
				break;
			case BAREQ:
				{
				alt125 = 7;
				}
				break;
			case CARETEQ:
				{
				alt125 = 8;
				}
				break;
			case PERCENTEQ:
				{
				alt125 = 9;
				}
				break;
			case LT:
				{
				alt125 = 10;
				}
				break;
			case GT:
				{
				int LA125_2 = input.LA(2);

				if ((LA125_2==GT))
				{
					int LA125_3 = input.LA(3);

					if ((LA125_3==GT))
					{
						alt125 = 11;
					}
					else if ((LA125_3==EQ))
					{
						alt125 = 12;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 125, 12, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 125, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 125, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(125); }
			switch (alt125)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:991:9: '='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(991, 9);
				char_literal422=(IToken)Match(input,EQ,Follow._EQ_in_assignmentOperator5646); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal422_tree = (object)adaptor.Create(char_literal422, "char_literal422", retval);
				adaptor.AddChild(root_0, char_literal422_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:992:9: '+='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(992, 9);
				string_literal423=(IToken)Match(input,PLUSEQ,Follow._PLUSEQ_in_assignmentOperator5656); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal423_tree = (object)adaptor.Create(string_literal423, "string_literal423", retval);
				adaptor.AddChild(root_0, string_literal423_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:993:9: '-='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(993, 9);
				string_literal424=(IToken)Match(input,SUBEQ,Follow._SUBEQ_in_assignmentOperator5666); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal424_tree = (object)adaptor.Create(string_literal424, "string_literal424", retval);
				adaptor.AddChild(root_0, string_literal424_tree);
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:994:9: '*='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(994, 9);
				string_literal425=(IToken)Match(input,STAREQ,Follow._STAREQ_in_assignmentOperator5676); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal425_tree = (object)adaptor.Create(string_literal425, "string_literal425", retval);
				adaptor.AddChild(root_0, string_literal425_tree);
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:995:9: '/='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(995, 9);
				string_literal426=(IToken)Match(input,SLASHEQ,Follow._SLASHEQ_in_assignmentOperator5686); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal426_tree = (object)adaptor.Create(string_literal426, "string_literal426", retval);
				adaptor.AddChild(root_0, string_literal426_tree);
				}

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:996:9: '&='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(996, 9);
				string_literal427=(IToken)Match(input,AMPEQ,Follow._AMPEQ_in_assignmentOperator5696); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal427_tree = (object)adaptor.Create(string_literal427, "string_literal427", retval);
				adaptor.AddChild(root_0, string_literal427_tree);
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:997:9: '|='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(997, 9);
				string_literal428=(IToken)Match(input,BAREQ,Follow._BAREQ_in_assignmentOperator5706); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal428_tree = (object)adaptor.Create(string_literal428, "string_literal428", retval);
				adaptor.AddChild(root_0, string_literal428_tree);
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:998:9: '^='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(998, 9);
				string_literal429=(IToken)Match(input,CARETEQ,Follow._CARETEQ_in_assignmentOperator5716); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal429_tree = (object)adaptor.Create(string_literal429, "string_literal429", retval);
				adaptor.AddChild(root_0, string_literal429_tree);
				}

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:999:9: '%='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(999, 9);
				string_literal430=(IToken)Match(input,PERCENTEQ,Follow._PERCENTEQ_in_assignmentOperator5726); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal430_tree = (object)adaptor.Create(string_literal430, "string_literal430", retval);
				adaptor.AddChild(root_0, string_literal430_tree);
				}

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1000:10: '<' '<' '='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1000, 10);
				char_literal431=(IToken)Match(input,LT,Follow._LT_in_assignmentOperator5737); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal431_tree = (object)adaptor.Create(char_literal431, "char_literal431", retval);
				adaptor.AddChild(root_0, char_literal431_tree);
				}
				DebugLocation(1000, 14);
				char_literal432=(IToken)Match(input,LT,Follow._LT_in_assignmentOperator5739); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal432_tree = (object)adaptor.Create(char_literal432, "char_literal432", retval);
				adaptor.AddChild(root_0, char_literal432_tree);
				}
				DebugLocation(1000, 18);
				char_literal433=(IToken)Match(input,EQ,Follow._EQ_in_assignmentOperator5741); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal433_tree = (object)adaptor.Create(char_literal433, "char_literal433", retval);
				adaptor.AddChild(root_0, char_literal433_tree);
				}

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1001:10: '>' '>' '>' '='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1001, 10);
				char_literal434=(IToken)Match(input,GT,Follow._GT_in_assignmentOperator5752); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal434_tree = (object)adaptor.Create(char_literal434, "char_literal434", retval);
				adaptor.AddChild(root_0, char_literal434_tree);
				}
				DebugLocation(1001, 14);
				char_literal435=(IToken)Match(input,GT,Follow._GT_in_assignmentOperator5754); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal435_tree = (object)adaptor.Create(char_literal435, "char_literal435", retval);
				adaptor.AddChild(root_0, char_literal435_tree);
				}
				DebugLocation(1001, 18);
				char_literal436=(IToken)Match(input,GT,Follow._GT_in_assignmentOperator5756); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal436_tree = (object)adaptor.Create(char_literal436, "char_literal436", retval);
				adaptor.AddChild(root_0, char_literal436_tree);
				}
				DebugLocation(1001, 22);
				char_literal437=(IToken)Match(input,EQ,Follow._EQ_in_assignmentOperator5758); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal437_tree = (object)adaptor.Create(char_literal437, "char_literal437", retval);
				adaptor.AddChild(root_0, char_literal437_tree);
				}

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1002:10: '>' '>' '='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1002, 10);
				char_literal438=(IToken)Match(input,GT,Follow._GT_in_assignmentOperator5769); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal438_tree = (object)adaptor.Create(char_literal438, "char_literal438", retval);
				adaptor.AddChild(root_0, char_literal438_tree);
				}
				DebugLocation(1002, 14);
				char_literal439=(IToken)Match(input,GT,Follow._GT_in_assignmentOperator5771); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal439_tree = (object)adaptor.Create(char_literal439, "char_literal439", retval);
				adaptor.AddChild(root_0, char_literal439_tree);
				}
				DebugLocation(1002, 18);
				char_literal440=(IToken)Match(input,EQ,Follow._EQ_in_assignmentOperator5773); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal440_tree = (object)adaptor.Create(char_literal440, "char_literal440", retval);
				adaptor.AddChild(root_0, char_literal440_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("assignmentOperator", 77);
			LeaveRule("assignmentOperator", 77);
			LeaveRule_assignmentOperator();
			if (state.backtracking > 0) { Memoize(input, 77, assignmentOperator_StartIndex); }

		}
		DebugLocation(1003, 4);
		} finally { DebugExitRule(GrammarFileName, "assignmentOperator"); }
		return retval;

	}
	// $ANTLR end "assignmentOperator"

	partial void EnterRule_conditionalExpression();
	partial void LeaveRule_conditionalExpression();
	// $ANTLR start "conditionalExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1006:1: conditionalExpression : conditionalOrExpression ( '?' expression ':' conditionalExpression )? ;
	[GrammarRule("conditionalExpression")]
	private Antlr3AstNode conditionalExpression()
	{
		EnterRule_conditionalExpression();
		EnterRule("conditionalExpression", 78);
		var retval = new Antlr3AstNode("conditionalExpression");
		
		retval.Start = (IToken)input.LT(1);
		int conditionalExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal442 = default(IToken);
		IToken char_literal444 = default(IToken);
		Antlr3AstNode conditionalOrExpression441 = default(Antlr3AstNode);
		Antlr3AstNode expression443 = default(Antlr3AstNode);
		Antlr3AstNode conditionalExpression445 = default(Antlr3AstNode);

		object char_literal442_tree = default(object);
		object char_literal444_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "conditionalExpression");
		DebugLocation(1006, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 78)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1007:5: ( conditionalOrExpression ( '?' expression ':' conditionalExpression )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1007:9: conditionalOrExpression ( '?' expression ':' conditionalExpression )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1007, 9);
			PushFollow(Follow._conditionalOrExpression_in_conditionalExpression5794);
			conditionalOrExpression441=conditionalOrExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, conditionalOrExpression441.Tree, conditionalOrExpression441, "conditionalOrExpression441", retval);
			DebugLocation(1008, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1008:9: ( '?' expression ':' conditionalExpression )?
			int alt126=2;
			try { DebugEnterSubRule(126);
			try { DebugEnterDecision(126, false);
			int LA126_1 = input.LA(1);

			if ((LA126_1==QUES))
			{
				alt126 = 1;
			}
			} finally { DebugExitDecision(126); }
			switch (alt126)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1008:10: '?' expression ':' conditionalExpression
				{
				DebugLocation(1008, 10);
				char_literal442=(IToken)Match(input,QUES,Follow._QUES_in_conditionalExpression5805); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal442_tree = (object)adaptor.Create(char_literal442, "char_literal442", retval);
				adaptor.AddChild(root_0, char_literal442_tree);
				}
				DebugLocation(1008, 14);
				PushFollow(Follow._expression_in_conditionalExpression5807);
				expression443=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression443.Tree, expression443, "expression443", retval);
				DebugLocation(1008, 25);
				char_literal444=(IToken)Match(input,COLON,Follow._COLON_in_conditionalExpression5809); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal444_tree = (object)adaptor.Create(char_literal444, "char_literal444", retval);
				adaptor.AddChild(root_0, char_literal444_tree);
				}
				DebugLocation(1008, 29);
				PushFollow(Follow._conditionalExpression_in_conditionalExpression5811);
				conditionalExpression445=conditionalExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, conditionalExpression445.Tree, conditionalExpression445, "conditionalExpression445", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(126); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("conditionalExpression", 78);
			LeaveRule("conditionalExpression", 78);
			LeaveRule_conditionalExpression();
			if (state.backtracking > 0) { Memoize(input, 78, conditionalExpression_StartIndex); }

		}
		DebugLocation(1010, 4);
		} finally { DebugExitRule(GrammarFileName, "conditionalExpression"); }
		return retval;

	}
	// $ANTLR end "conditionalExpression"

	partial void EnterRule_conditionalOrExpression();
	partial void LeaveRule_conditionalOrExpression();
	// $ANTLR start "conditionalOrExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1012:1: conditionalOrExpression : conditionalAndExpression ( '||' conditionalAndExpression )* ;
	[GrammarRule("conditionalOrExpression")]
	private Antlr3AstNode conditionalOrExpression()
	{
		EnterRule_conditionalOrExpression();
		EnterRule("conditionalOrExpression", 79);
		var retval = new Antlr3AstNode("conditionalOrExpression");
		
		retval.Start = (IToken)input.LT(1);
		int conditionalOrExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal447 = default(IToken);
		Antlr3AstNode conditionalAndExpression446 = default(Antlr3AstNode);
		Antlr3AstNode conditionalAndExpression448 = default(Antlr3AstNode);

		object string_literal447_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "conditionalOrExpression");
		DebugLocation(1012, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 79)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1013:5: ( conditionalAndExpression ( '||' conditionalAndExpression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1013:9: conditionalAndExpression ( '||' conditionalAndExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1013, 9);
			PushFollow(Follow._conditionalAndExpression_in_conditionalOrExpression5841);
			conditionalAndExpression446=conditionalAndExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, conditionalAndExpression446.Tree, conditionalAndExpression446, "conditionalAndExpression446", retval);
			DebugLocation(1014, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1014:9: ( '||' conditionalAndExpression )*
			try { DebugEnterSubRule(127);
			while (true)
			{
				int alt127=2;
				try { DebugEnterDecision(127, false);
				int LA127_1 = input.LA(1);

				if ((LA127_1==BARBAR))
				{
					alt127 = 1;
				}


				} finally { DebugExitDecision(127); }
				switch ( alt127 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1014:10: '||' conditionalAndExpression
					{
					DebugLocation(1014, 10);
					string_literal447=(IToken)Match(input,BARBAR,Follow._BARBAR_in_conditionalOrExpression5852); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal447_tree = (object)adaptor.Create(string_literal447, "string_literal447", retval);
					adaptor.AddChild(root_0, string_literal447_tree);
					}
					DebugLocation(1014, 15);
					PushFollow(Follow._conditionalAndExpression_in_conditionalOrExpression5854);
					conditionalAndExpression448=conditionalAndExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, conditionalAndExpression448.Tree, conditionalAndExpression448, "conditionalAndExpression448", retval);

					}
					break;

				default:
					goto loop127;
				}
			}

			loop127:
				;

			} finally { DebugExitSubRule(127); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("conditionalOrExpression", 79);
			LeaveRule("conditionalOrExpression", 79);
			LeaveRule_conditionalOrExpression();
			if (state.backtracking > 0) { Memoize(input, 79, conditionalOrExpression_StartIndex); }

		}
		DebugLocation(1016, 4);
		} finally { DebugExitRule(GrammarFileName, "conditionalOrExpression"); }
		return retval;

	}
	// $ANTLR end "conditionalOrExpression"

	partial void EnterRule_conditionalAndExpression();
	partial void LeaveRule_conditionalAndExpression();
	// $ANTLR start "conditionalAndExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1018:1: conditionalAndExpression : inclusiveOrExpression ( '&&' inclusiveOrExpression )* ;
	[GrammarRule("conditionalAndExpression")]
	private Antlr3AstNode conditionalAndExpression()
	{
		EnterRule_conditionalAndExpression();
		EnterRule("conditionalAndExpression", 80);
		var retval = new Antlr3AstNode("conditionalAndExpression");
		
		retval.Start = (IToken)input.LT(1);
		int conditionalAndExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal450 = default(IToken);
		Antlr3AstNode inclusiveOrExpression449 = default(Antlr3AstNode);
		Antlr3AstNode inclusiveOrExpression451 = default(Antlr3AstNode);

		object string_literal450_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "conditionalAndExpression");
		DebugLocation(1018, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 80)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1019:5: ( inclusiveOrExpression ( '&&' inclusiveOrExpression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1019:9: inclusiveOrExpression ( '&&' inclusiveOrExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1019, 9);
			PushFollow(Follow._inclusiveOrExpression_in_conditionalAndExpression5884);
			inclusiveOrExpression449=inclusiveOrExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, inclusiveOrExpression449.Tree, inclusiveOrExpression449, "inclusiveOrExpression449", retval);
			DebugLocation(1020, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1020:9: ( '&&' inclusiveOrExpression )*
			try { DebugEnterSubRule(128);
			while (true)
			{
				int alt128=2;
				try { DebugEnterDecision(128, false);
				int LA128_1 = input.LA(1);

				if ((LA128_1==AMPAMP))
				{
					alt128 = 1;
				}


				} finally { DebugExitDecision(128); }
				switch ( alt128 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1020:10: '&&' inclusiveOrExpression
					{
					DebugLocation(1020, 10);
					string_literal450=(IToken)Match(input,AMPAMP,Follow._AMPAMP_in_conditionalAndExpression5895); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal450_tree = (object)adaptor.Create(string_literal450, "string_literal450", retval);
					adaptor.AddChild(root_0, string_literal450_tree);
					}
					DebugLocation(1020, 15);
					PushFollow(Follow._inclusiveOrExpression_in_conditionalAndExpression5897);
					inclusiveOrExpression451=inclusiveOrExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, inclusiveOrExpression451.Tree, inclusiveOrExpression451, "inclusiveOrExpression451", retval);

					}
					break;

				default:
					goto loop128;
				}
			}

			loop128:
				;

			} finally { DebugExitSubRule(128); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("conditionalAndExpression", 80);
			LeaveRule("conditionalAndExpression", 80);
			LeaveRule_conditionalAndExpression();
			if (state.backtracking > 0) { Memoize(input, 80, conditionalAndExpression_StartIndex); }

		}
		DebugLocation(1022, 4);
		} finally { DebugExitRule(GrammarFileName, "conditionalAndExpression"); }
		return retval;

	}
	// $ANTLR end "conditionalAndExpression"

	partial void EnterRule_inclusiveOrExpression();
	partial void LeaveRule_inclusiveOrExpression();
	// $ANTLR start "inclusiveOrExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1024:1: inclusiveOrExpression : exclusiveOrExpression ( '|' exclusiveOrExpression )* ;
	[GrammarRule("inclusiveOrExpression")]
	private Antlr3AstNode inclusiveOrExpression()
	{
		EnterRule_inclusiveOrExpression();
		EnterRule("inclusiveOrExpression", 81);
		var retval = new Antlr3AstNode("inclusiveOrExpression");
		
		retval.Start = (IToken)input.LT(1);
		int inclusiveOrExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal453 = default(IToken);
		Antlr3AstNode exclusiveOrExpression452 = default(Antlr3AstNode);
		Antlr3AstNode exclusiveOrExpression454 = default(Antlr3AstNode);

		object char_literal453_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "inclusiveOrExpression");
		DebugLocation(1024, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 81)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1025:5: ( exclusiveOrExpression ( '|' exclusiveOrExpression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1025:9: exclusiveOrExpression ( '|' exclusiveOrExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1025, 9);
			PushFollow(Follow._exclusiveOrExpression_in_inclusiveOrExpression5927);
			exclusiveOrExpression452=exclusiveOrExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, exclusiveOrExpression452.Tree, exclusiveOrExpression452, "exclusiveOrExpression452", retval);
			DebugLocation(1026, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1026:9: ( '|' exclusiveOrExpression )*
			try { DebugEnterSubRule(129);
			while (true)
			{
				int alt129=2;
				try { DebugEnterDecision(129, false);
				int LA129_1 = input.LA(1);

				if ((LA129_1==BAR))
				{
					alt129 = 1;
				}


				} finally { DebugExitDecision(129); }
				switch ( alt129 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1026:10: '|' exclusiveOrExpression
					{
					DebugLocation(1026, 10);
					char_literal453=(IToken)Match(input,BAR,Follow._BAR_in_inclusiveOrExpression5938); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal453_tree = (object)adaptor.Create(char_literal453, "char_literal453", retval);
					adaptor.AddChild(root_0, char_literal453_tree);
					}
					DebugLocation(1026, 14);
					PushFollow(Follow._exclusiveOrExpression_in_inclusiveOrExpression5940);
					exclusiveOrExpression454=exclusiveOrExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, exclusiveOrExpression454.Tree, exclusiveOrExpression454, "exclusiveOrExpression454", retval);

					}
					break;

				default:
					goto loop129;
				}
			}

			loop129:
				;

			} finally { DebugExitSubRule(129); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("inclusiveOrExpression", 81);
			LeaveRule("inclusiveOrExpression", 81);
			LeaveRule_inclusiveOrExpression();
			if (state.backtracking > 0) { Memoize(input, 81, inclusiveOrExpression_StartIndex); }

		}
		DebugLocation(1028, 4);
		} finally { DebugExitRule(GrammarFileName, "inclusiveOrExpression"); }
		return retval;

	}
	// $ANTLR end "inclusiveOrExpression"

	partial void EnterRule_exclusiveOrExpression();
	partial void LeaveRule_exclusiveOrExpression();
	// $ANTLR start "exclusiveOrExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1030:1: exclusiveOrExpression : andExpression ( '^' andExpression )* ;
	[GrammarRule("exclusiveOrExpression")]
	private Antlr3AstNode exclusiveOrExpression()
	{
		EnterRule_exclusiveOrExpression();
		EnterRule("exclusiveOrExpression", 82);
		var retval = new Antlr3AstNode("exclusiveOrExpression");
		
		retval.Start = (IToken)input.LT(1);
		int exclusiveOrExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal456 = default(IToken);
		Antlr3AstNode andExpression455 = default(Antlr3AstNode);
		Antlr3AstNode andExpression457 = default(Antlr3AstNode);

		object char_literal456_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "exclusiveOrExpression");
		DebugLocation(1030, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 82)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1031:5: ( andExpression ( '^' andExpression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1031:9: andExpression ( '^' andExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1031, 9);
			PushFollow(Follow._andExpression_in_exclusiveOrExpression5970);
			andExpression455=andExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, andExpression455.Tree, andExpression455, "andExpression455", retval);
			DebugLocation(1032, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1032:9: ( '^' andExpression )*
			try { DebugEnterSubRule(130);
			while (true)
			{
				int alt130=2;
				try { DebugEnterDecision(130, false);
				int LA130_1 = input.LA(1);

				if ((LA130_1==CARET))
				{
					alt130 = 1;
				}


				} finally { DebugExitDecision(130); }
				switch ( alt130 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1032:10: '^' andExpression
					{
					DebugLocation(1032, 10);
					char_literal456=(IToken)Match(input,CARET,Follow._CARET_in_exclusiveOrExpression5981); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal456_tree = (object)adaptor.Create(char_literal456, "char_literal456", retval);
					adaptor.AddChild(root_0, char_literal456_tree);
					}
					DebugLocation(1032, 14);
					PushFollow(Follow._andExpression_in_exclusiveOrExpression5983);
					andExpression457=andExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, andExpression457.Tree, andExpression457, "andExpression457", retval);

					}
					break;

				default:
					goto loop130;
				}
			}

			loop130:
				;

			} finally { DebugExitSubRule(130); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("exclusiveOrExpression", 82);
			LeaveRule("exclusiveOrExpression", 82);
			LeaveRule_exclusiveOrExpression();
			if (state.backtracking > 0) { Memoize(input, 82, exclusiveOrExpression_StartIndex); }

		}
		DebugLocation(1034, 4);
		} finally { DebugExitRule(GrammarFileName, "exclusiveOrExpression"); }
		return retval;

	}
	// $ANTLR end "exclusiveOrExpression"

	partial void EnterRule_andExpression();
	partial void LeaveRule_andExpression();
	// $ANTLR start "andExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1036:1: andExpression : equalityExpression ( '&' equalityExpression )* ;
	[GrammarRule("andExpression")]
	private Antlr3AstNode andExpression()
	{
		EnterRule_andExpression();
		EnterRule("andExpression", 83);
		var retval = new Antlr3AstNode("andExpression");
		
		retval.Start = (IToken)input.LT(1);
		int andExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal459 = default(IToken);
		Antlr3AstNode equalityExpression458 = default(Antlr3AstNode);
		Antlr3AstNode equalityExpression460 = default(Antlr3AstNode);

		object char_literal459_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "andExpression");
		DebugLocation(1036, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 83)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1037:5: ( equalityExpression ( '&' equalityExpression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1037:9: equalityExpression ( '&' equalityExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1037, 9);
			PushFollow(Follow._equalityExpression_in_andExpression6013);
			equalityExpression458=equalityExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, equalityExpression458.Tree, equalityExpression458, "equalityExpression458", retval);
			DebugLocation(1038, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1038:9: ( '&' equalityExpression )*
			try { DebugEnterSubRule(131);
			while (true)
			{
				int alt131=2;
				try { DebugEnterDecision(131, false);
				int LA131_1 = input.LA(1);

				if ((LA131_1==AMP))
				{
					alt131 = 1;
				}


				} finally { DebugExitDecision(131); }
				switch ( alt131 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1038:10: '&' equalityExpression
					{
					DebugLocation(1038, 10);
					char_literal459=(IToken)Match(input,AMP,Follow._AMP_in_andExpression6024); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal459_tree = (object)adaptor.Create(char_literal459, "char_literal459", retval);
					adaptor.AddChild(root_0, char_literal459_tree);
					}
					DebugLocation(1038, 14);
					PushFollow(Follow._equalityExpression_in_andExpression6026);
					equalityExpression460=equalityExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, equalityExpression460.Tree, equalityExpression460, "equalityExpression460", retval);

					}
					break;

				default:
					goto loop131;
				}
			}

			loop131:
				;

			} finally { DebugExitSubRule(131); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("andExpression", 83);
			LeaveRule("andExpression", 83);
			LeaveRule_andExpression();
			if (state.backtracking > 0) { Memoize(input, 83, andExpression_StartIndex); }

		}
		DebugLocation(1040, 4);
		} finally { DebugExitRule(GrammarFileName, "andExpression"); }
		return retval;

	}
	// $ANTLR end "andExpression"

	partial void EnterRule_equalityExpression();
	partial void LeaveRule_equalityExpression();
	// $ANTLR start "equalityExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1042:1: equalityExpression : instanceOfExpression ( ( '==' | '!=' ) instanceOfExpression )* ;
	[GrammarRule("equalityExpression")]
	private Antlr3AstNode equalityExpression()
	{
		EnterRule_equalityExpression();
		EnterRule("equalityExpression", 84);
		var retval = new Antlr3AstNode("equalityExpression");
		
		retval.Start = (IToken)input.LT(1);
		int equalityExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set462 = default(IToken);
		Antlr3AstNode instanceOfExpression461 = default(Antlr3AstNode);
		Antlr3AstNode instanceOfExpression463 = default(Antlr3AstNode);

		object set462_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "equalityExpression");
		DebugLocation(1042, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 84)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1043:5: ( instanceOfExpression ( ( '==' | '!=' ) instanceOfExpression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1043:9: instanceOfExpression ( ( '==' | '!=' ) instanceOfExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1043, 9);
			PushFollow(Follow._instanceOfExpression_in_equalityExpression6056);
			instanceOfExpression461=instanceOfExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, instanceOfExpression461.Tree, instanceOfExpression461, "instanceOfExpression461", retval);
			DebugLocation(1044, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1044:9: ( ( '==' | '!=' ) instanceOfExpression )*
			try { DebugEnterSubRule(132);
			while (true)
			{
				int alt132=2;
				try { DebugEnterDecision(132, false);
				int LA132_1 = input.LA(1);

				if ((LA132_1==BANGEQ||LA132_1==EQEQ))
				{
					alt132 = 1;
				}


				} finally { DebugExitDecision(132); }
				switch ( alt132 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1045:13: ( '==' | '!=' ) instanceOfExpression
					{
					DebugLocation(1045, 13);

					set462=(IToken)input.LT(1);
					if (input.LA(1)==BANGEQ||input.LA(1)==EQEQ)
					{
						input.Consume();
						if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set462, "set462", retval));
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}

					DebugLocation(1048, 13);
					PushFollow(Follow._instanceOfExpression_in_equalityExpression6133);
					instanceOfExpression463=instanceOfExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, instanceOfExpression463.Tree, instanceOfExpression463, "instanceOfExpression463", retval);

					}
					break;

				default:
					goto loop132;
				}
			}

			loop132:
				;

			} finally { DebugExitSubRule(132); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("equalityExpression", 84);
			LeaveRule("equalityExpression", 84);
			LeaveRule_equalityExpression();
			if (state.backtracking > 0) { Memoize(input, 84, equalityExpression_StartIndex); }

		}
		DebugLocation(1050, 4);
		} finally { DebugExitRule(GrammarFileName, "equalityExpression"); }
		return retval;

	}
	// $ANTLR end "equalityExpression"

	partial void EnterRule_instanceOfExpression();
	partial void LeaveRule_instanceOfExpression();
	// $ANTLR start "instanceOfExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1052:1: instanceOfExpression : relationalExpression ( 'instanceof' type )? ;
	[GrammarRule("instanceOfExpression")]
	private Antlr3AstNode instanceOfExpression()
	{
		EnterRule_instanceOfExpression();
		EnterRule("instanceOfExpression", 85);
		var retval = new Antlr3AstNode("instanceOfExpression");
		
		retval.Start = (IToken)input.LT(1);
		int instanceOfExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal465 = default(IToken);
		Antlr3AstNode relationalExpression464 = default(Antlr3AstNode);
		Antlr3AstNode type466 = default(Antlr3AstNode);

		object string_literal465_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "instanceOfExpression");
		DebugLocation(1052, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 85)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1053:5: ( relationalExpression ( 'instanceof' type )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1053:9: relationalExpression ( 'instanceof' type )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1053, 9);
			PushFollow(Follow._relationalExpression_in_instanceOfExpression6163);
			relationalExpression464=relationalExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, relationalExpression464.Tree, relationalExpression464, "relationalExpression464", retval);
			DebugLocation(1054, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1054:9: ( 'instanceof' type )?
			int alt133=2;
			try { DebugEnterSubRule(133);
			try { DebugEnterDecision(133, false);
			int LA133_1 = input.LA(1);

			if ((LA133_1==INSTANCEOF))
			{
				alt133 = 1;
			}
			} finally { DebugExitDecision(133); }
			switch (alt133)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1054:10: 'instanceof' type
				{
				DebugLocation(1054, 10);
				string_literal465=(IToken)Match(input,INSTANCEOF,Follow._INSTANCEOF_in_instanceOfExpression6174); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal465_tree = (object)adaptor.Create(string_literal465, "string_literal465", retval);
				adaptor.AddChild(root_0, string_literal465_tree);
				}
				DebugLocation(1054, 23);
				PushFollow(Follow._type_in_instanceOfExpression6176);
				type466=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type466.Tree, type466, "type466", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(133); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("instanceOfExpression", 85);
			LeaveRule("instanceOfExpression", 85);
			LeaveRule_instanceOfExpression();
			if (state.backtracking > 0) { Memoize(input, 85, instanceOfExpression_StartIndex); }

		}
		DebugLocation(1056, 4);
		} finally { DebugExitRule(GrammarFileName, "instanceOfExpression"); }
		return retval;

	}
	// $ANTLR end "instanceOfExpression"

	partial void EnterRule_relationalExpression();
	partial void LeaveRule_relationalExpression();
	// $ANTLR start "relationalExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1058:1: relationalExpression : shiftExpression ( relationalOp shiftExpression )* ;
	[GrammarRule("relationalExpression")]
	private Antlr3AstNode relationalExpression()
	{
		EnterRule_relationalExpression();
		EnterRule("relationalExpression", 86);
		var retval = new Antlr3AstNode("relationalExpression");
		
		retval.Start = (IToken)input.LT(1);
		int relationalExpression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode shiftExpression467 = default(Antlr3AstNode);
		Antlr3AstNode relationalOp468 = default(Antlr3AstNode);
		Antlr3AstNode shiftExpression469 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "relationalExpression");
		DebugLocation(1058, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 86)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1059:5: ( shiftExpression ( relationalOp shiftExpression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1059:9: shiftExpression ( relationalOp shiftExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1059, 9);
			PushFollow(Follow._shiftExpression_in_relationalExpression6206);
			shiftExpression467=shiftExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, shiftExpression467.Tree, shiftExpression467, "shiftExpression467", retval);
			DebugLocation(1060, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1060:9: ( relationalOp shiftExpression )*
			try { DebugEnterSubRule(134);
			while (true)
			{
				int alt134=2;
				try { DebugEnterDecision(134, false);
				int LA134_1 = input.LA(1);

				if ((LA134_1==LT))
				{
					int LA134_2 = input.LA(2);

					if ((LA134_2==BANG||LA134_2==BOOLEAN||LA134_2==BYTE||(LA134_2>=CHAR && LA134_2<=CHARLITERAL)||(LA134_2>=DOUBLE && LA134_2<=DOUBLELITERAL)||LA134_2==EQ||LA134_2==FALSE||(LA134_2>=FLOAT && LA134_2<=FLOATLITERAL)||LA134_2==IDENTIFIER||LA134_2==INT||LA134_2==INTLITERAL||(LA134_2>=LONG && LA134_2<=LPAREN)||(LA134_2>=NEW && LA134_2<=NULL)||LA134_2==PLUS||LA134_2==PLUSPLUS||LA134_2==SHORT||(LA134_2>=STRINGLITERAL && LA134_2<=SUB)||(LA134_2>=SUBSUB && LA134_2<=SUPER)||LA134_2==THIS||LA134_2==TILDE||LA134_2==TRUE||LA134_2==VOID))
					{
						alt134 = 1;
					}


				}
				else if ((LA134_1==GT))
				{
					int LA134_2 = input.LA(2);

					if ((LA134_2==BANG||LA134_2==BOOLEAN||LA134_2==BYTE||(LA134_2>=CHAR && LA134_2<=CHARLITERAL)||(LA134_2>=DOUBLE && LA134_2<=DOUBLELITERAL)||LA134_2==EQ||LA134_2==FALSE||(LA134_2>=FLOAT && LA134_2<=FLOATLITERAL)||LA134_2==IDENTIFIER||LA134_2==INT||LA134_2==INTLITERAL||(LA134_2>=LONG && LA134_2<=LPAREN)||(LA134_2>=NEW && LA134_2<=NULL)||LA134_2==PLUS||LA134_2==PLUSPLUS||LA134_2==SHORT||(LA134_2>=STRINGLITERAL && LA134_2<=SUB)||(LA134_2>=SUBSUB && LA134_2<=SUPER)||LA134_2==THIS||LA134_2==TILDE||LA134_2==TRUE||LA134_2==VOID))
					{
						alt134 = 1;
					}


				}


				} finally { DebugExitDecision(134); }
				switch ( alt134 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1060:10: relationalOp shiftExpression
					{
					DebugLocation(1060, 10);
					PushFollow(Follow._relationalOp_in_relationalExpression6217);
					relationalOp468=relationalOp();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, relationalOp468.Tree, relationalOp468, "relationalOp468", retval);
					DebugLocation(1060, 23);
					PushFollow(Follow._shiftExpression_in_relationalExpression6219);
					shiftExpression469=shiftExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, shiftExpression469.Tree, shiftExpression469, "shiftExpression469", retval);

					}
					break;

				default:
					goto loop134;
				}
			}

			loop134:
				;

			} finally { DebugExitSubRule(134); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("relationalExpression", 86);
			LeaveRule("relationalExpression", 86);
			LeaveRule_relationalExpression();
			if (state.backtracking > 0) { Memoize(input, 86, relationalExpression_StartIndex); }

		}
		DebugLocation(1062, 4);
		} finally { DebugExitRule(GrammarFileName, "relationalExpression"); }
		return retval;

	}
	// $ANTLR end "relationalExpression"

	partial void EnterRule_relationalOp();
	partial void LeaveRule_relationalOp();
	// $ANTLR start "relationalOp"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1064:1: relationalOp : ( '<' '=' | '>' '=' | '<' | '>' );
	[GrammarRule("relationalOp")]
	private Antlr3AstNode relationalOp()
	{
		EnterRule_relationalOp();
		EnterRule("relationalOp", 87);
		var retval = new Antlr3AstNode("relationalOp");
		
		retval.Start = (IToken)input.LT(1);
		int relationalOp_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal470 = default(IToken);
		IToken char_literal471 = default(IToken);
		IToken char_literal472 = default(IToken);
		IToken char_literal473 = default(IToken);
		IToken char_literal474 = default(IToken);
		IToken char_literal475 = default(IToken);

		object char_literal470_tree = default(object);
		object char_literal471_tree = default(object);
		object char_literal472_tree = default(object);
		object char_literal473_tree = default(object);
		object char_literal474_tree = default(object);
		object char_literal475_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "relationalOp");
		DebugLocation(1064, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 87)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1065:5: ( '<' '=' | '>' '=' | '<' | '>' )
			int alt135=4;
			try { DebugEnterDecision(135, false);
			int LA135_1 = input.LA(1);

			if ((LA135_1==LT))
			{
				int LA135_2 = input.LA(2);

				if ((LA135_2==EQ))
				{
					alt135 = 1;
				}
				else if ((LA135_2==BANG||LA135_2==BOOLEAN||LA135_2==BYTE||(LA135_2>=CHAR && LA135_2<=CHARLITERAL)||(LA135_2>=DOUBLE && LA135_2<=DOUBLELITERAL)||LA135_2==FALSE||(LA135_2>=FLOAT && LA135_2<=FLOATLITERAL)||LA135_2==IDENTIFIER||LA135_2==INT||LA135_2==INTLITERAL||(LA135_2>=LONG && LA135_2<=LPAREN)||(LA135_2>=NEW && LA135_2<=NULL)||LA135_2==PLUS||LA135_2==PLUSPLUS||LA135_2==SHORT||(LA135_2>=STRINGLITERAL && LA135_2<=SUB)||(LA135_2>=SUBSUB && LA135_2<=SUPER)||LA135_2==THIS||LA135_2==TILDE||LA135_2==TRUE||LA135_2==VOID))
				{
					alt135 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 135, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA135_1==GT))
			{
				int LA135_2 = input.LA(2);

				if ((LA135_2==EQ))
				{
					alt135 = 2;
				}
				else if ((LA135_2==BANG||LA135_2==BOOLEAN||LA135_2==BYTE||(LA135_2>=CHAR && LA135_2<=CHARLITERAL)||(LA135_2>=DOUBLE && LA135_2<=DOUBLELITERAL)||LA135_2==FALSE||(LA135_2>=FLOAT && LA135_2<=FLOATLITERAL)||LA135_2==IDENTIFIER||LA135_2==INT||LA135_2==INTLITERAL||(LA135_2>=LONG && LA135_2<=LPAREN)||(LA135_2>=NEW && LA135_2<=NULL)||LA135_2==PLUS||LA135_2==PLUSPLUS||LA135_2==SHORT||(LA135_2>=STRINGLITERAL && LA135_2<=SUB)||(LA135_2>=SUBSUB && LA135_2<=SUPER)||LA135_2==THIS||LA135_2==TILDE||LA135_2==TRUE||LA135_2==VOID))
				{
					alt135 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 135, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 135, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(135); }
			switch (alt135)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1065:10: '<' '='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1065, 10);
				char_literal470=(IToken)Match(input,LT,Follow._LT_in_relationalOp6250); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal470_tree = (object)adaptor.Create(char_literal470, "char_literal470", retval);
				adaptor.AddChild(root_0, char_literal470_tree);
				}
				DebugLocation(1065, 14);
				char_literal471=(IToken)Match(input,EQ,Follow._EQ_in_relationalOp6252); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal471_tree = (object)adaptor.Create(char_literal471, "char_literal471", retval);
				adaptor.AddChild(root_0, char_literal471_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1066:10: '>' '='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1066, 10);
				char_literal472=(IToken)Match(input,GT,Follow._GT_in_relationalOp6263); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal472_tree = (object)adaptor.Create(char_literal472, "char_literal472", retval);
				adaptor.AddChild(root_0, char_literal472_tree);
				}
				DebugLocation(1066, 14);
				char_literal473=(IToken)Match(input,EQ,Follow._EQ_in_relationalOp6265); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal473_tree = (object)adaptor.Create(char_literal473, "char_literal473", retval);
				adaptor.AddChild(root_0, char_literal473_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1067:9: '<'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1067, 9);
				char_literal474=(IToken)Match(input,LT,Follow._LT_in_relationalOp6275); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal474_tree = (object)adaptor.Create(char_literal474, "char_literal474", retval);
				adaptor.AddChild(root_0, char_literal474_tree);
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1068:9: '>'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1068, 9);
				char_literal475=(IToken)Match(input,GT,Follow._GT_in_relationalOp6285); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal475_tree = (object)adaptor.Create(char_literal475, "char_literal475", retval);
				adaptor.AddChild(root_0, char_literal475_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("relationalOp", 87);
			LeaveRule("relationalOp", 87);
			LeaveRule_relationalOp();
			if (state.backtracking > 0) { Memoize(input, 87, relationalOp_StartIndex); }

		}
		DebugLocation(1069, 4);
		} finally { DebugExitRule(GrammarFileName, "relationalOp"); }
		return retval;

	}
	// $ANTLR end "relationalOp"

	partial void EnterRule_shiftExpression();
	partial void LeaveRule_shiftExpression();
	// $ANTLR start "shiftExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1071:1: shiftExpression : additiveExpression ( shiftOp additiveExpression )* ;
	[GrammarRule("shiftExpression")]
	private Antlr3AstNode shiftExpression()
	{
		EnterRule_shiftExpression();
		EnterRule("shiftExpression", 88);
		var retval = new Antlr3AstNode("shiftExpression");
		
		retval.Start = (IToken)input.LT(1);
		int shiftExpression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode additiveExpression476 = default(Antlr3AstNode);
		Antlr3AstNode shiftOp477 = default(Antlr3AstNode);
		Antlr3AstNode additiveExpression478 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "shiftExpression");
		DebugLocation(1071, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 88)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1072:5: ( additiveExpression ( shiftOp additiveExpression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1072:9: additiveExpression ( shiftOp additiveExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1072, 9);
			PushFollow(Follow._additiveExpression_in_shiftExpression6304);
			additiveExpression476=additiveExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, additiveExpression476.Tree, additiveExpression476, "additiveExpression476", retval);
			DebugLocation(1073, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1073:9: ( shiftOp additiveExpression )*
			try { DebugEnterSubRule(136);
			while (true)
			{
				int alt136=2;
				try { DebugEnterDecision(136, false);
				int LA136_1 = input.LA(1);

				if ((LA136_1==LT))
				{
					int LA136_2 = input.LA(2);

					if ((LA136_2==LT))
					{
						int LA136_3 = input.LA(3);

						if ((LA136_3==BANG||LA136_3==BOOLEAN||LA136_3==BYTE||(LA136_3>=CHAR && LA136_3<=CHARLITERAL)||(LA136_3>=DOUBLE && LA136_3<=DOUBLELITERAL)||LA136_3==FALSE||(LA136_3>=FLOAT && LA136_3<=FLOATLITERAL)||LA136_3==IDENTIFIER||LA136_3==INT||LA136_3==INTLITERAL||(LA136_3>=LONG && LA136_3<=LPAREN)||(LA136_3>=NEW && LA136_3<=NULL)||LA136_3==PLUS||LA136_3==PLUSPLUS||LA136_3==SHORT||(LA136_3>=STRINGLITERAL && LA136_3<=SUB)||(LA136_3>=SUBSUB && LA136_3<=SUPER)||LA136_3==THIS||LA136_3==TILDE||LA136_3==TRUE||LA136_3==VOID))
						{
							alt136 = 1;
						}


					}


				}
				else if ((LA136_1==GT))
				{
					int LA136_2 = input.LA(2);

					if ((LA136_2==GT))
					{
						int LA136_3 = input.LA(3);

						if ((LA136_3==GT))
						{
							int LA136_4 = input.LA(4);

							if ((LA136_4==BANG||LA136_4==BOOLEAN||LA136_4==BYTE||(LA136_4>=CHAR && LA136_4<=CHARLITERAL)||(LA136_4>=DOUBLE && LA136_4<=DOUBLELITERAL)||LA136_4==FALSE||(LA136_4>=FLOAT && LA136_4<=FLOATLITERAL)||LA136_4==IDENTIFIER||LA136_4==INT||LA136_4==INTLITERAL||(LA136_4>=LONG && LA136_4<=LPAREN)||(LA136_4>=NEW && LA136_4<=NULL)||LA136_4==PLUS||LA136_4==PLUSPLUS||LA136_4==SHORT||(LA136_4>=STRINGLITERAL && LA136_4<=SUB)||(LA136_4>=SUBSUB && LA136_4<=SUPER)||LA136_4==THIS||LA136_4==TILDE||LA136_4==TRUE||LA136_4==VOID))
							{
								alt136 = 1;
							}


						}
						else if ((LA136_3==BANG||LA136_3==BOOLEAN||LA136_3==BYTE||(LA136_3>=CHAR && LA136_3<=CHARLITERAL)||(LA136_3>=DOUBLE && LA136_3<=DOUBLELITERAL)||LA136_3==FALSE||(LA136_3>=FLOAT && LA136_3<=FLOATLITERAL)||LA136_3==IDENTIFIER||LA136_3==INT||LA136_3==INTLITERAL||(LA136_3>=LONG && LA136_3<=LPAREN)||(LA136_3>=NEW && LA136_3<=NULL)||LA136_3==PLUS||LA136_3==PLUSPLUS||LA136_3==SHORT||(LA136_3>=STRINGLITERAL && LA136_3<=SUB)||(LA136_3>=SUBSUB && LA136_3<=SUPER)||LA136_3==THIS||LA136_3==TILDE||LA136_3==TRUE||LA136_3==VOID))
						{
							alt136 = 1;
						}


					}


				}


				} finally { DebugExitDecision(136); }
				switch ( alt136 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1073:10: shiftOp additiveExpression
					{
					DebugLocation(1073, 10);
					PushFollow(Follow._shiftOp_in_shiftExpression6315);
					shiftOp477=shiftOp();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, shiftOp477.Tree, shiftOp477, "shiftOp477", retval);
					DebugLocation(1073, 18);
					PushFollow(Follow._additiveExpression_in_shiftExpression6317);
					additiveExpression478=additiveExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, additiveExpression478.Tree, additiveExpression478, "additiveExpression478", retval);

					}
					break;

				default:
					goto loop136;
				}
			}

			loop136:
				;

			} finally { DebugExitSubRule(136); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("shiftExpression", 88);
			LeaveRule("shiftExpression", 88);
			LeaveRule_shiftExpression();
			if (state.backtracking > 0) { Memoize(input, 88, shiftExpression_StartIndex); }

		}
		DebugLocation(1075, 4);
		} finally { DebugExitRule(GrammarFileName, "shiftExpression"); }
		return retval;

	}
	// $ANTLR end "shiftExpression"

	partial void EnterRule_shiftOp();
	partial void LeaveRule_shiftOp();
	// $ANTLR start "shiftOp"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1077:1: shiftOp : ( '<' '<' | '>' '>' '>' | '>' '>' );
	[GrammarRule("shiftOp")]
	private Antlr3AstNode shiftOp()
	{
		EnterRule_shiftOp();
		EnterRule("shiftOp", 89);
		var retval = new Antlr3AstNode("shiftOp");
		
		retval.Start = (IToken)input.LT(1);
		int shiftOp_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal479 = default(IToken);
		IToken char_literal480 = default(IToken);
		IToken char_literal481 = default(IToken);
		IToken char_literal482 = default(IToken);
		IToken char_literal483 = default(IToken);
		IToken char_literal484 = default(IToken);
		IToken char_literal485 = default(IToken);

		object char_literal479_tree = default(object);
		object char_literal480_tree = default(object);
		object char_literal481_tree = default(object);
		object char_literal482_tree = default(object);
		object char_literal483_tree = default(object);
		object char_literal484_tree = default(object);
		object char_literal485_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "shiftOp");
		DebugLocation(1077, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 89)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1078:5: ( '<' '<' | '>' '>' '>' | '>' '>' )
			int alt137=3;
			try { DebugEnterDecision(137, false);
			int LA137_1 = input.LA(1);

			if ((LA137_1==LT))
			{
				alt137 = 1;
			}
			else if ((LA137_1==GT))
			{
				int LA137_2 = input.LA(2);

				if ((LA137_2==GT))
				{
					int LA137_3 = input.LA(3);

					if ((LA137_3==GT))
					{
						alt137 = 2;
					}
					else if ((LA137_3==BANG||LA137_3==BOOLEAN||LA137_3==BYTE||(LA137_3>=CHAR && LA137_3<=CHARLITERAL)||(LA137_3>=DOUBLE && LA137_3<=DOUBLELITERAL)||LA137_3==FALSE||(LA137_3>=FLOAT && LA137_3<=FLOATLITERAL)||LA137_3==IDENTIFIER||LA137_3==INT||LA137_3==INTLITERAL||(LA137_3>=LONG && LA137_3<=LPAREN)||(LA137_3>=NEW && LA137_3<=NULL)||LA137_3==PLUS||LA137_3==PLUSPLUS||LA137_3==SHORT||(LA137_3>=STRINGLITERAL && LA137_3<=SUB)||(LA137_3>=SUBSUB && LA137_3<=SUPER)||LA137_3==THIS||LA137_3==TILDE||LA137_3==TRUE||LA137_3==VOID))
					{
						alt137 = 3;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 137, 3, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 137, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 137, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(137); }
			switch (alt137)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1078:10: '<' '<'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1078, 10);
				char_literal479=(IToken)Match(input,LT,Follow._LT_in_shiftOp6348); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal479_tree = (object)adaptor.Create(char_literal479, "char_literal479", retval);
				adaptor.AddChild(root_0, char_literal479_tree);
				}
				DebugLocation(1078, 14);
				char_literal480=(IToken)Match(input,LT,Follow._LT_in_shiftOp6350); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal480_tree = (object)adaptor.Create(char_literal480, "char_literal480", retval);
				adaptor.AddChild(root_0, char_literal480_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1079:10: '>' '>' '>'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1079, 10);
				char_literal481=(IToken)Match(input,GT,Follow._GT_in_shiftOp6361); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal481_tree = (object)adaptor.Create(char_literal481, "char_literal481", retval);
				adaptor.AddChild(root_0, char_literal481_tree);
				}
				DebugLocation(1079, 14);
				char_literal482=(IToken)Match(input,GT,Follow._GT_in_shiftOp6363); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal482_tree = (object)adaptor.Create(char_literal482, "char_literal482", retval);
				adaptor.AddChild(root_0, char_literal482_tree);
				}
				DebugLocation(1079, 18);
				char_literal483=(IToken)Match(input,GT,Follow._GT_in_shiftOp6365); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal483_tree = (object)adaptor.Create(char_literal483, "char_literal483", retval);
				adaptor.AddChild(root_0, char_literal483_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1080:10: '>' '>'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1080, 10);
				char_literal484=(IToken)Match(input,GT,Follow._GT_in_shiftOp6376); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal484_tree = (object)adaptor.Create(char_literal484, "char_literal484", retval);
				adaptor.AddChild(root_0, char_literal484_tree);
				}
				DebugLocation(1080, 14);
				char_literal485=(IToken)Match(input,GT,Follow._GT_in_shiftOp6378); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal485_tree = (object)adaptor.Create(char_literal485, "char_literal485", retval);
				adaptor.AddChild(root_0, char_literal485_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("shiftOp", 89);
			LeaveRule("shiftOp", 89);
			LeaveRule_shiftOp();
			if (state.backtracking > 0) { Memoize(input, 89, shiftOp_StartIndex); }

		}
		DebugLocation(1081, 4);
		} finally { DebugExitRule(GrammarFileName, "shiftOp"); }
		return retval;

	}
	// $ANTLR end "shiftOp"

	partial void EnterRule_additiveExpression();
	partial void LeaveRule_additiveExpression();
	// $ANTLR start "additiveExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1083:1: additiveExpression : multiplicativeExpression ( ( '+' | '-' ) multiplicativeExpression )* ;
	[GrammarRule("additiveExpression")]
	private Antlr3AstNode additiveExpression()
	{
		EnterRule_additiveExpression();
		EnterRule("additiveExpression", 90);
		var retval = new Antlr3AstNode("additiveExpression");
		
		retval.Start = (IToken)input.LT(1);
		int additiveExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set487 = default(IToken);
		Antlr3AstNode multiplicativeExpression486 = default(Antlr3AstNode);
		Antlr3AstNode multiplicativeExpression488 = default(Antlr3AstNode);

		object set487_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "additiveExpression");
		DebugLocation(1083, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 90)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1084:5: ( multiplicativeExpression ( ( '+' | '-' ) multiplicativeExpression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1084:9: multiplicativeExpression ( ( '+' | '-' ) multiplicativeExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1084, 9);
			PushFollow(Follow._multiplicativeExpression_in_additiveExpression6397);
			multiplicativeExpression486=multiplicativeExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, multiplicativeExpression486.Tree, multiplicativeExpression486, "multiplicativeExpression486", retval);
			DebugLocation(1085, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1085:9: ( ( '+' | '-' ) multiplicativeExpression )*
			try { DebugEnterSubRule(138);
			while (true)
			{
				int alt138=2;
				try { DebugEnterDecision(138, false);
				int LA138_1 = input.LA(1);

				if ((LA138_1==PLUS||LA138_1==SUB))
				{
					alt138 = 1;
				}


				} finally { DebugExitDecision(138); }
				switch ( alt138 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1086:13: ( '+' | '-' ) multiplicativeExpression
					{
					DebugLocation(1086, 13);

					set487=(IToken)input.LT(1);
					if (input.LA(1)==PLUS||input.LA(1)==SUB)
					{
						input.Consume();
						if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set487, "set487", retval));
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}

					DebugLocation(1089, 13);
					PushFollow(Follow._multiplicativeExpression_in_additiveExpression6474);
					multiplicativeExpression488=multiplicativeExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, multiplicativeExpression488.Tree, multiplicativeExpression488, "multiplicativeExpression488", retval);

					}
					break;

				default:
					goto loop138;
				}
			}

			loop138:
				;

			} finally { DebugExitSubRule(138); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("additiveExpression", 90);
			LeaveRule("additiveExpression", 90);
			LeaveRule_additiveExpression();
			if (state.backtracking > 0) { Memoize(input, 90, additiveExpression_StartIndex); }

		}
		DebugLocation(1091, 4);
		} finally { DebugExitRule(GrammarFileName, "additiveExpression"); }
		return retval;

	}
	// $ANTLR end "additiveExpression"

	partial void EnterRule_multiplicativeExpression();
	partial void LeaveRule_multiplicativeExpression();
	// $ANTLR start "multiplicativeExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1093:1: multiplicativeExpression : unaryExpression ( ( '*' | '/' | '%' ) unaryExpression )* ;
	[GrammarRule("multiplicativeExpression")]
	private Antlr3AstNode multiplicativeExpression()
	{
		EnterRule_multiplicativeExpression();
		EnterRule("multiplicativeExpression", 91);
		var retval = new Antlr3AstNode("multiplicativeExpression");
		
		retval.Start = (IToken)input.LT(1);
		int multiplicativeExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set490 = default(IToken);
		Antlr3AstNode unaryExpression489 = default(Antlr3AstNode);
		Antlr3AstNode unaryExpression491 = default(Antlr3AstNode);

		object set490_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "multiplicativeExpression");
		DebugLocation(1093, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 91)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1094:5: ( unaryExpression ( ( '*' | '/' | '%' ) unaryExpression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1095:9: unaryExpression ( ( '*' | '/' | '%' ) unaryExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1095, 9);
			PushFollow(Follow._unaryExpression_in_multiplicativeExpression6511);
			unaryExpression489=unaryExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression489.Tree, unaryExpression489, "unaryExpression489", retval);
			DebugLocation(1096, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1096:9: ( ( '*' | '/' | '%' ) unaryExpression )*
			try { DebugEnterSubRule(139);
			while (true)
			{
				int alt139=2;
				try { DebugEnterDecision(139, false);
				int LA139_1 = input.LA(1);

				if ((LA139_1==PERCENT||LA139_1==SLASH||LA139_1==STAR))
				{
					alt139 = 1;
				}


				} finally { DebugExitDecision(139); }
				switch ( alt139 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1097:13: ( '*' | '/' | '%' ) unaryExpression
					{
					DebugLocation(1097, 13);

					set490=(IToken)input.LT(1);
					if (input.LA(1)==PERCENT||input.LA(1)==SLASH||input.LA(1)==STAR)
					{
						input.Consume();
						if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set490, "set490", retval));
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}

					DebugLocation(1101, 13);
					PushFollow(Follow._unaryExpression_in_multiplicativeExpression6606);
					unaryExpression491=unaryExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression491.Tree, unaryExpression491, "unaryExpression491", retval);

					}
					break;

				default:
					goto loop139;
				}
			}

			loop139:
				;

			} finally { DebugExitSubRule(139); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("multiplicativeExpression", 91);
			LeaveRule("multiplicativeExpression", 91);
			LeaveRule_multiplicativeExpression();
			if (state.backtracking > 0) { Memoize(input, 91, multiplicativeExpression_StartIndex); }

		}
		DebugLocation(1103, 4);
		} finally { DebugExitRule(GrammarFileName, "multiplicativeExpression"); }
		return retval;

	}
	// $ANTLR end "multiplicativeExpression"

	partial void EnterRule_unaryExpression();
	partial void LeaveRule_unaryExpression();
	// $ANTLR start "unaryExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1109:1: unaryExpression : ( '+' unaryExpression | '-' unaryExpression | '++' unaryExpression | '--' unaryExpression | unaryExpressionNotPlusMinus );
	[GrammarRule("unaryExpression")]
	private Antlr3AstNode unaryExpression()
	{
		EnterRule_unaryExpression();
		EnterRule("unaryExpression", 92);
		var retval = new Antlr3AstNode("unaryExpression");
		
		retval.Start = (IToken)input.LT(1);
		int unaryExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal492 = default(IToken);
		IToken char_literal494 = default(IToken);
		IToken string_literal496 = default(IToken);
		IToken string_literal498 = default(IToken);
		Antlr3AstNode unaryExpression493 = default(Antlr3AstNode);
		Antlr3AstNode unaryExpression495 = default(Antlr3AstNode);
		Antlr3AstNode unaryExpression497 = default(Antlr3AstNode);
		Antlr3AstNode unaryExpression499 = default(Antlr3AstNode);
		Antlr3AstNode unaryExpressionNotPlusMinus500 = default(Antlr3AstNode);

		object char_literal492_tree = default(object);
		object char_literal494_tree = default(object);
		object string_literal496_tree = default(object);
		object string_literal498_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "unaryExpression");
		DebugLocation(1109, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 92)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1110:5: ( '+' unaryExpression | '-' unaryExpression | '++' unaryExpression | '--' unaryExpression | unaryExpressionNotPlusMinus )
			int alt140=5;
			try { DebugEnterDecision(140, false);
			switch (input.LA(1))
			{
			case PLUS:
				{
				alt140 = 1;
				}
				break;
			case SUB:
				{
				alt140 = 2;
				}
				break;
			case PLUSPLUS:
				{
				alt140 = 3;
				}
				break;
			case SUBSUB:
				{
				alt140 = 4;
				}
				break;
			case BANG:
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case CHARLITERAL:
			case DOUBLE:
			case DOUBLELITERAL:
			case FALSE:
			case FLOAT:
			case FLOATLITERAL:
			case IDENTIFIER:
			case INT:
			case INTLITERAL:
			case LONG:
			case LONGLITERAL:
			case LPAREN:
			case NEW:
			case NULL:
			case SHORT:
			case STRINGLITERAL:
			case SUPER:
			case THIS:
			case TILDE:
			case TRUE:
			case VOID:
				{
				alt140 = 5;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 140, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(140); }
			switch (alt140)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1110:9: '+' unaryExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1110, 9);
				char_literal492=(IToken)Match(input,PLUS,Follow._PLUS_in_unaryExpression6638); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal492_tree = (object)adaptor.Create(char_literal492, "char_literal492", retval);
				adaptor.AddChild(root_0, char_literal492_tree);
				}
				DebugLocation(1110, 14);
				PushFollow(Follow._unaryExpression_in_unaryExpression6641);
				unaryExpression493=unaryExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression493.Tree, unaryExpression493, "unaryExpression493", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1111:9: '-' unaryExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1111, 9);
				char_literal494=(IToken)Match(input,SUB,Follow._SUB_in_unaryExpression6651); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal494_tree = (object)adaptor.Create(char_literal494, "char_literal494", retval);
				adaptor.AddChild(root_0, char_literal494_tree);
				}
				DebugLocation(1111, 13);
				PushFollow(Follow._unaryExpression_in_unaryExpression6653);
				unaryExpression495=unaryExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression495.Tree, unaryExpression495, "unaryExpression495", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1112:9: '++' unaryExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1112, 9);
				string_literal496=(IToken)Match(input,PLUSPLUS,Follow._PLUSPLUS_in_unaryExpression6663); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal496_tree = (object)adaptor.Create(string_literal496, "string_literal496", retval);
				adaptor.AddChild(root_0, string_literal496_tree);
				}
				DebugLocation(1112, 14);
				PushFollow(Follow._unaryExpression_in_unaryExpression6665);
				unaryExpression497=unaryExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression497.Tree, unaryExpression497, "unaryExpression497", retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1113:9: '--' unaryExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1113, 9);
				string_literal498=(IToken)Match(input,SUBSUB,Follow._SUBSUB_in_unaryExpression6675); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal498_tree = (object)adaptor.Create(string_literal498, "string_literal498", retval);
				adaptor.AddChild(root_0, string_literal498_tree);
				}
				DebugLocation(1113, 14);
				PushFollow(Follow._unaryExpression_in_unaryExpression6677);
				unaryExpression499=unaryExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression499.Tree, unaryExpression499, "unaryExpression499", retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1114:9: unaryExpressionNotPlusMinus
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1114, 9);
				PushFollow(Follow._unaryExpressionNotPlusMinus_in_unaryExpression6687);
				unaryExpressionNotPlusMinus500=unaryExpressionNotPlusMinus();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpressionNotPlusMinus500.Tree, unaryExpressionNotPlusMinus500, "unaryExpressionNotPlusMinus500", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unaryExpression", 92);
			LeaveRule("unaryExpression", 92);
			LeaveRule_unaryExpression();
			if (state.backtracking > 0) { Memoize(input, 92, unaryExpression_StartIndex); }

		}
		DebugLocation(1115, 4);
		} finally { DebugExitRule(GrammarFileName, "unaryExpression"); }
		return retval;

	}
	// $ANTLR end "unaryExpression"

	partial void EnterRule_unaryExpressionNotPlusMinus();
	partial void LeaveRule_unaryExpressionNotPlusMinus();
	// $ANTLR start "unaryExpressionNotPlusMinus"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1117:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );
	[GrammarRule("unaryExpressionNotPlusMinus")]
	private Antlr3AstNode unaryExpressionNotPlusMinus()
	{
		EnterRule_unaryExpressionNotPlusMinus();
		EnterRule("unaryExpressionNotPlusMinus", 93);
		var retval = new Antlr3AstNode("unaryExpressionNotPlusMinus");
		
		retval.Start = (IToken)input.LT(1);
		int unaryExpressionNotPlusMinus_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal501 = default(IToken);
		IToken char_literal503 = default(IToken);
		IToken set508 = default(IToken);
		Antlr3AstNode unaryExpression502 = default(Antlr3AstNode);
		Antlr3AstNode unaryExpression504 = default(Antlr3AstNode);
		Antlr3AstNode castExpression505 = default(Antlr3AstNode);
		Antlr3AstNode primary506 = default(Antlr3AstNode);
		Antlr3AstNode selector507 = default(Antlr3AstNode);

		object char_literal501_tree = default(object);
		object char_literal503_tree = default(object);
		object set508_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "unaryExpressionNotPlusMinus");
		DebugLocation(1117, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 93)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1118:5: ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? )
			int alt143=4;
			try { DebugEnterDecision(143, false);
			switch (input.LA(1))
			{
			case TILDE:
				{
				alt143 = 1;
				}
				break;
			case BANG:
				{
				alt143 = 2;
				}
				break;
			case LPAREN:
				{
				int LA143_2 = input.LA(2);

				if ((EvaluatePredicate(synpred215_Java_fragment)))
				{
					alt143 = 3;
				}
				else if ((true))
				{
					alt143 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 143, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case CHARLITERAL:
			case DOUBLE:
			case DOUBLELITERAL:
			case FALSE:
			case FLOAT:
			case FLOATLITERAL:
			case IDENTIFIER:
			case INT:
			case INTLITERAL:
			case LONG:
			case LONGLITERAL:
			case NEW:
			case NULL:
			case SHORT:
			case STRINGLITERAL:
			case SUPER:
			case THIS:
			case TRUE:
			case VOID:
				{
				alt143 = 4;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 143, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(143); }
			switch (alt143)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1118:9: '~' unaryExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1118, 9);
				char_literal501=(IToken)Match(input,TILDE,Follow._TILDE_in_unaryExpressionNotPlusMinus6706); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal501_tree = (object)adaptor.Create(char_literal501, "char_literal501", retval);
				adaptor.AddChild(root_0, char_literal501_tree);
				}
				DebugLocation(1118, 13);
				PushFollow(Follow._unaryExpression_in_unaryExpressionNotPlusMinus6708);
				unaryExpression502=unaryExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression502.Tree, unaryExpression502, "unaryExpression502", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1119:9: '!' unaryExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1119, 9);
				char_literal503=(IToken)Match(input,BANG,Follow._BANG_in_unaryExpressionNotPlusMinus6718); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal503_tree = (object)adaptor.Create(char_literal503, "char_literal503", retval);
				adaptor.AddChild(root_0, char_literal503_tree);
				}
				DebugLocation(1119, 13);
				PushFollow(Follow._unaryExpression_in_unaryExpressionNotPlusMinus6720);
				unaryExpression504=unaryExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression504.Tree, unaryExpression504, "unaryExpression504", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1120:9: castExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1120, 9);
				PushFollow(Follow._castExpression_in_unaryExpressionNotPlusMinus6730);
				castExpression505=castExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, castExpression505.Tree, castExpression505, "castExpression505", retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1121:9: primary ( selector )* ( '++' | '--' )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1121, 9);
				PushFollow(Follow._primary_in_unaryExpressionNotPlusMinus6740);
				primary506=primary();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primary506.Tree, primary506, "primary506", retval);
				DebugLocation(1122, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1122:9: ( selector )*
				try { DebugEnterSubRule(141);
				while (true)
				{
					int alt141=2;
					try { DebugEnterDecision(141, false);
					int LA141_1 = input.LA(1);

					if ((LA141_1==DOT||LA141_1==LBRACKET))
					{
						alt141 = 1;
					}


					} finally { DebugExitDecision(141); }
					switch ( alt141 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1122:10: selector
						{
						DebugLocation(1122, 10);
						PushFollow(Follow._selector_in_unaryExpressionNotPlusMinus6751);
						selector507=selector();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, selector507.Tree, selector507, "selector507", retval);

						}
						break;

					default:
						goto loop141;
					}
				}

				loop141:
					;

				} finally { DebugExitSubRule(141); }

				DebugLocation(1124, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1124:9: ( '++' | '--' )?
				int alt142=2;
				try { DebugEnterSubRule(142);
				try { DebugEnterDecision(142, false);
				int LA142_1 = input.LA(1);

				if ((LA142_1==PLUSPLUS||LA142_1==SUBSUB))
				{
					alt142 = 1;
				}
				} finally { DebugExitDecision(142); }
				switch (alt142)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:
					{
					DebugLocation(1124, 9);

					set508=(IToken)input.LT(1);
					if (input.LA(1)==PLUSPLUS||input.LA(1)==SUBSUB)
					{
						input.Consume();
						if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set508, "set508", retval));
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}


					}
					break;

				}
				} finally { DebugExitSubRule(142); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unaryExpressionNotPlusMinus", 93);
			LeaveRule("unaryExpressionNotPlusMinus", 93);
			LeaveRule_unaryExpressionNotPlusMinus();
			if (state.backtracking > 0) { Memoize(input, 93, unaryExpressionNotPlusMinus_StartIndex); }

		}
		DebugLocation(1127, 4);
		} finally { DebugExitRule(GrammarFileName, "unaryExpressionNotPlusMinus"); }
		return retval;

	}
	// $ANTLR end "unaryExpressionNotPlusMinus"

	partial void EnterRule_castExpression();
	partial void LeaveRule_castExpression();
	// $ANTLR start "castExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1129:1: castExpression : ( '(' primitiveType ')' unaryExpression | '(' type ')' unaryExpressionNotPlusMinus );
	[GrammarRule("castExpression")]
	private Antlr3AstNode castExpression()
	{
		EnterRule_castExpression();
		EnterRule("castExpression", 94);
		var retval = new Antlr3AstNode("castExpression");
		
		retval.Start = (IToken)input.LT(1);
		int castExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal509 = default(IToken);
		IToken char_literal511 = default(IToken);
		IToken char_literal513 = default(IToken);
		IToken char_literal515 = default(IToken);
		Antlr3AstNode primitiveType510 = default(Antlr3AstNode);
		Antlr3AstNode unaryExpression512 = default(Antlr3AstNode);
		Antlr3AstNode type514 = default(Antlr3AstNode);
		Antlr3AstNode unaryExpressionNotPlusMinus516 = default(Antlr3AstNode);

		object char_literal509_tree = default(object);
		object char_literal511_tree = default(object);
		object char_literal513_tree = default(object);
		object char_literal515_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "castExpression");
		DebugLocation(1129, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 94)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1130:5: ( '(' primitiveType ')' unaryExpression | '(' type ')' unaryExpressionNotPlusMinus )
			int alt144=2;
			try { DebugEnterDecision(144, false);
			int LA144_1 = input.LA(1);

			if ((LA144_1==LPAREN))
			{
				int LA144_2 = input.LA(2);

				if ((EvaluatePredicate(synpred219_Java_fragment)))
				{
					alt144 = 1;
				}
				else if ((true))
				{
					alt144 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 144, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 144, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(144); }
			switch (alt144)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1130:9: '(' primitiveType ')' unaryExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1130, 9);
				char_literal509=(IToken)Match(input,LPAREN,Follow._LPAREN_in_castExpression6820); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal509_tree = (object)adaptor.Create(char_literal509, "char_literal509", retval);
				adaptor.AddChild(root_0, char_literal509_tree);
				}
				DebugLocation(1130, 13);
				PushFollow(Follow._primitiveType_in_castExpression6822);
				primitiveType510=primitiveType();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primitiveType510.Tree, primitiveType510, "primitiveType510", retval);
				DebugLocation(1130, 27);
				char_literal511=(IToken)Match(input,RPAREN,Follow._RPAREN_in_castExpression6824); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal511_tree = (object)adaptor.Create(char_literal511, "char_literal511", retval);
				adaptor.AddChild(root_0, char_literal511_tree);
				}
				DebugLocation(1130, 31);
				PushFollow(Follow._unaryExpression_in_castExpression6826);
				unaryExpression512=unaryExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression512.Tree, unaryExpression512, "unaryExpression512", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1131:9: '(' type ')' unaryExpressionNotPlusMinus
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1131, 9);
				char_literal513=(IToken)Match(input,LPAREN,Follow._LPAREN_in_castExpression6836); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal513_tree = (object)adaptor.Create(char_literal513, "char_literal513", retval);
				adaptor.AddChild(root_0, char_literal513_tree);
				}
				DebugLocation(1131, 13);
				PushFollow(Follow._type_in_castExpression6838);
				type514=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type514.Tree, type514, "type514", retval);
				DebugLocation(1131, 18);
				char_literal515=(IToken)Match(input,RPAREN,Follow._RPAREN_in_castExpression6840); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal515_tree = (object)adaptor.Create(char_literal515, "char_literal515", retval);
				adaptor.AddChild(root_0, char_literal515_tree);
				}
				DebugLocation(1131, 22);
				PushFollow(Follow._unaryExpressionNotPlusMinus_in_castExpression6842);
				unaryExpressionNotPlusMinus516=unaryExpressionNotPlusMinus();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpressionNotPlusMinus516.Tree, unaryExpressionNotPlusMinus516, "unaryExpressionNotPlusMinus516", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("castExpression", 94);
			LeaveRule("castExpression", 94);
			LeaveRule_castExpression();
			if (state.backtracking > 0) { Memoize(input, 94, castExpression_StartIndex); }

		}
		DebugLocation(1132, 4);
		} finally { DebugExitRule(GrammarFileName, "castExpression"); }
		return retval;

	}
	// $ANTLR end "castExpression"

	partial void EnterRule_primary();
	partial void LeaveRule_primary();
	// $ANTLR start "primary"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1137:1: primary : ( parExpression | 'this' ( '.' IDENTIFIER )* ( identifierSuffix )? | IDENTIFIER ( '.' IDENTIFIER )* ( identifierSuffix )? | 'super' superSuffix | literal | creator | primitiveType ( '[' ']' )* '.' 'class' | 'void' '.' 'class' );
	[GrammarRule("primary")]
	private Antlr3AstNode primary()
	{
		EnterRule_primary();
		EnterRule("primary", 95);
		var retval = new Antlr3AstNode("primary");
		
		retval.Start = (IToken)input.LT(1);
		int primary_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal518 = default(IToken);
		IToken char_literal519 = default(IToken);
		IToken IDENTIFIER520 = default(IToken);
		IToken IDENTIFIER522 = default(IToken);
		IToken char_literal523 = default(IToken);
		IToken IDENTIFIER524 = default(IToken);
		IToken string_literal526 = default(IToken);
		IToken char_literal531 = default(IToken);
		IToken char_literal532 = default(IToken);
		IToken char_literal533 = default(IToken);
		IToken string_literal534 = default(IToken);
		IToken string_literal535 = default(IToken);
		IToken char_literal536 = default(IToken);
		IToken string_literal537 = default(IToken);
		Antlr3AstNode parExpression517 = default(Antlr3AstNode);
		Antlr3AstNode identifierSuffix521 = default(Antlr3AstNode);
		Antlr3AstNode identifierSuffix525 = default(Antlr3AstNode);
		Antlr3AstNode superSuffix527 = default(Antlr3AstNode);
		Antlr3AstNode literal528 = default(Antlr3AstNode);
		Antlr3AstNode creator529 = default(Antlr3AstNode);
		Antlr3AstNode primitiveType530 = default(Antlr3AstNode);

		object string_literal518_tree = default(object);
		object char_literal519_tree = default(object);
		object IDENTIFIER520_tree = default(object);
		object IDENTIFIER522_tree = default(object);
		object char_literal523_tree = default(object);
		object IDENTIFIER524_tree = default(object);
		object string_literal526_tree = default(object);
		object char_literal531_tree = default(object);
		object char_literal532_tree = default(object);
		object char_literal533_tree = default(object);
		object string_literal534_tree = default(object);
		object string_literal535_tree = default(object);
		object char_literal536_tree = default(object);
		object string_literal537_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "primary");
		DebugLocation(1137, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 95)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1138:5: ( parExpression | 'this' ( '.' IDENTIFIER )* ( identifierSuffix )? | IDENTIFIER ( '.' IDENTIFIER )* ( identifierSuffix )? | 'super' superSuffix | literal | creator | primitiveType ( '[' ']' )* '.' 'class' | 'void' '.' 'class' )
			int alt150=8;
			try { DebugEnterDecision(150, false);
			switch (input.LA(1))
			{
			case LPAREN:
				{
				alt150 = 1;
				}
				break;
			case THIS:
				{
				alt150 = 2;
				}
				break;
			case IDENTIFIER:
				{
				alt150 = 3;
				}
				break;
			case SUPER:
				{
				alt150 = 4;
				}
				break;
			case CHARLITERAL:
			case DOUBLELITERAL:
			case FALSE:
			case FLOATLITERAL:
			case INTLITERAL:
			case LONGLITERAL:
			case NULL:
			case STRINGLITERAL:
			case TRUE:
				{
				alt150 = 5;
				}
				break;
			case NEW:
				{
				alt150 = 6;
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
				{
				alt150 = 7;
				}
				break;
			case VOID:
				{
				alt150 = 8;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 150, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(150); }
			switch (alt150)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1138:9: parExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1138, 9);
				PushFollow(Follow._parExpression_in_primary6863);
				parExpression517=parExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, parExpression517.Tree, parExpression517, "parExpression517", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1139:9: 'this' ( '.' IDENTIFIER )* ( identifierSuffix )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1139, 9);
				string_literal518=(IToken)Match(input,THIS,Follow._THIS_in_primary6885); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal518_tree = (object)adaptor.Create(string_literal518, "string_literal518", retval);
				adaptor.AddChild(root_0, string_literal518_tree);
				}
				DebugLocation(1140, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1140:9: ( '.' IDENTIFIER )*
				try { DebugEnterSubRule(145);
				while (true)
				{
					int alt145=2;
					try { DebugEnterDecision(145, false);
					int LA145_1 = input.LA(1);

					if ((LA145_1==DOT))
					{
						int LA145_2 = input.LA(2);

						if ((LA145_2==IDENTIFIER))
						{
							int LA145_3 = input.LA(3);

							if ((EvaluatePredicate(synpred221_Java_fragment)))
							{
								alt145 = 1;
							}


						}


					}


					} finally { DebugExitDecision(145); }
					switch ( alt145 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1140:10: '.' IDENTIFIER
						{
						DebugLocation(1140, 10);
						char_literal519=(IToken)Match(input,DOT,Follow._DOT_in_primary6896); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal519_tree = (object)adaptor.Create(char_literal519, "char_literal519", retval);
						adaptor.AddChild(root_0, char_literal519_tree);
						}
						DebugLocation(1140, 14);
						IDENTIFIER520=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_primary6898); if (state.failed) return retval;
						if (state.backtracking == 0) {
						IDENTIFIER520_tree = (object)adaptor.Create(IDENTIFIER520, "IDENTIFIER520", retval);
						adaptor.AddChild(root_0, IDENTIFIER520_tree);
						}

						}
						break;

					default:
						goto loop145;
					}
				}

				loop145:
					;

				} finally { DebugExitSubRule(145); }

				DebugLocation(1142, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1142:9: ( identifierSuffix )?
				int alt146=2;
				try { DebugEnterSubRule(146);
				try { DebugEnterDecision(146, false);
				switch (input.LA(1))
				{
				case LBRACKET:
					{
					int LA146_2 = input.LA(2);

					if ((EvaluatePredicate(synpred222_Java_fragment)))
					{
						alt146 = 1;
					}
					}
					break;
				case LPAREN:
					{
					alt146 = 1;
					}
					break;
				case DOT:
					{
					int LA146_2 = input.LA(2);

					if ((EvaluatePredicate(synpred222_Java_fragment)))
					{
						alt146 = 1;
					}
					}
					break;
				}

				} finally { DebugExitDecision(146); }
				switch (alt146)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1142:10: identifierSuffix
					{
					DebugLocation(1142, 10);
					PushFollow(Follow._identifierSuffix_in_primary6920);
					identifierSuffix521=identifierSuffix();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, identifierSuffix521.Tree, identifierSuffix521, "identifierSuffix521", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(146); }


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1144:9: IDENTIFIER ( '.' IDENTIFIER )* ( identifierSuffix )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1144, 9);
				IDENTIFIER522=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_primary6941); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER522_tree = (object)adaptor.Create(IDENTIFIER522, "IDENTIFIER522", retval);
				adaptor.AddChild(root_0, IDENTIFIER522_tree);
				}
				DebugLocation(1145, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1145:9: ( '.' IDENTIFIER )*
				try { DebugEnterSubRule(147);
				while (true)
				{
					int alt147=2;
					try { DebugEnterDecision(147, false);
					int LA147_1 = input.LA(1);

					if ((LA147_1==DOT))
					{
						int LA147_2 = input.LA(2);

						if ((LA147_2==IDENTIFIER))
						{
							int LA147_3 = input.LA(3);

							if ((EvaluatePredicate(synpred224_Java_fragment)))
							{
								alt147 = 1;
							}


						}


					}


					} finally { DebugExitDecision(147); }
					switch ( alt147 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1145:10: '.' IDENTIFIER
						{
						DebugLocation(1145, 10);
						char_literal523=(IToken)Match(input,DOT,Follow._DOT_in_primary6952); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal523_tree = (object)adaptor.Create(char_literal523, "char_literal523", retval);
						adaptor.AddChild(root_0, char_literal523_tree);
						}
						DebugLocation(1145, 14);
						IDENTIFIER524=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_primary6954); if (state.failed) return retval;
						if (state.backtracking == 0) {
						IDENTIFIER524_tree = (object)adaptor.Create(IDENTIFIER524, "IDENTIFIER524", retval);
						adaptor.AddChild(root_0, IDENTIFIER524_tree);
						}

						}
						break;

					default:
						goto loop147;
					}
				}

				loop147:
					;

				} finally { DebugExitSubRule(147); }

				DebugLocation(1147, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1147:9: ( identifierSuffix )?
				int alt148=2;
				try { DebugEnterSubRule(148);
				try { DebugEnterDecision(148, false);
				switch (input.LA(1))
				{
				case LBRACKET:
					{
					int LA148_2 = input.LA(2);

					if ((EvaluatePredicate(synpred225_Java_fragment)))
					{
						alt148 = 1;
					}
					}
					break;
				case LPAREN:
					{
					alt148 = 1;
					}
					break;
				case DOT:
					{
					int LA148_2 = input.LA(2);

					if ((EvaluatePredicate(synpred225_Java_fragment)))
					{
						alt148 = 1;
					}
					}
					break;
				}

				} finally { DebugExitDecision(148); }
				switch (alt148)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1147:10: identifierSuffix
					{
					DebugLocation(1147, 10);
					PushFollow(Follow._identifierSuffix_in_primary6976);
					identifierSuffix525=identifierSuffix();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, identifierSuffix525.Tree, identifierSuffix525, "identifierSuffix525", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(148); }


				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1149:9: 'super' superSuffix
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1149, 9);
				string_literal526=(IToken)Match(input,SUPER,Follow._SUPER_in_primary6997); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal526_tree = (object)adaptor.Create(string_literal526, "string_literal526", retval);
				adaptor.AddChild(root_0, string_literal526_tree);
				}
				DebugLocation(1150, 9);
				PushFollow(Follow._superSuffix_in_primary7007);
				superSuffix527=superSuffix();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, superSuffix527.Tree, superSuffix527, "superSuffix527", retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1151:9: literal
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1151, 9);
				PushFollow(Follow._literal_in_primary7017);
				literal528=literal();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, literal528.Tree, literal528, "literal528", retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1152:9: creator
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1152, 9);
				PushFollow(Follow._creator_in_primary7027);
				creator529=creator();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, creator529.Tree, creator529, "creator529", retval);

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1153:9: primitiveType ( '[' ']' )* '.' 'class'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1153, 9);
				PushFollow(Follow._primitiveType_in_primary7037);
				primitiveType530=primitiveType();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primitiveType530.Tree, primitiveType530, "primitiveType530", retval);
				DebugLocation(1154, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1154:9: ( '[' ']' )*
				try { DebugEnterSubRule(149);
				while (true)
				{
					int alt149=2;
					try { DebugEnterDecision(149, false);
					int LA149_1 = input.LA(1);

					if ((LA149_1==LBRACKET))
					{
						alt149 = 1;
					}


					} finally { DebugExitDecision(149); }
					switch ( alt149 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1154:10: '[' ']'
						{
						DebugLocation(1154, 10);
						char_literal531=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_primary7048); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal531_tree = (object)adaptor.Create(char_literal531, "char_literal531", retval);
						adaptor.AddChild(root_0, char_literal531_tree);
						}
						DebugLocation(1154, 14);
						char_literal532=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_primary7050); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal532_tree = (object)adaptor.Create(char_literal532, "char_literal532", retval);
						adaptor.AddChild(root_0, char_literal532_tree);
						}

						}
						break;

					default:
						goto loop149;
					}
				}

				loop149:
					;

				} finally { DebugExitSubRule(149); }

				DebugLocation(1156, 9);
				char_literal533=(IToken)Match(input,DOT,Follow._DOT_in_primary7071); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal533_tree = (object)adaptor.Create(char_literal533, "char_literal533", retval);
				adaptor.AddChild(root_0, char_literal533_tree);
				}
				DebugLocation(1156, 13);
				string_literal534=(IToken)Match(input,CLASS,Follow._CLASS_in_primary7073); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal534_tree = (object)adaptor.Create(string_literal534, "string_literal534", retval);
				adaptor.AddChild(root_0, string_literal534_tree);
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1157:9: 'void' '.' 'class'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1157, 9);
				string_literal535=(IToken)Match(input,VOID,Follow._VOID_in_primary7083); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal535_tree = (object)adaptor.Create(string_literal535, "string_literal535", retval);
				adaptor.AddChild(root_0, string_literal535_tree);
				}
				DebugLocation(1157, 16);
				char_literal536=(IToken)Match(input,DOT,Follow._DOT_in_primary7085); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal536_tree = (object)adaptor.Create(char_literal536, "char_literal536", retval);
				adaptor.AddChild(root_0, char_literal536_tree);
				}
				DebugLocation(1157, 20);
				string_literal537=(IToken)Match(input,CLASS,Follow._CLASS_in_primary7087); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal537_tree = (object)adaptor.Create(string_literal537, "string_literal537", retval);
				adaptor.AddChild(root_0, string_literal537_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("primary", 95);
			LeaveRule("primary", 95);
			LeaveRule_primary();
			if (state.backtracking > 0) { Memoize(input, 95, primary_StartIndex); }

		}
		DebugLocation(1158, 4);
		} finally { DebugExitRule(GrammarFileName, "primary"); }
		return retval;

	}
	// $ANTLR end "primary"

	partial void EnterRule_superSuffix();
	partial void LeaveRule_superSuffix();
	// $ANTLR start "superSuffix"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1160:1: superSuffix : ( arguments | '.' ( typeArguments )? IDENTIFIER ( arguments )? );
	[GrammarRule("superSuffix")]
	private Antlr3AstNode superSuffix()
	{
		EnterRule_superSuffix();
		EnterRule("superSuffix", 96);
		var retval = new Antlr3AstNode("superSuffix");
		
		retval.Start = (IToken)input.LT(1);
		int superSuffix_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal539 = default(IToken);
		IToken IDENTIFIER541 = default(IToken);
		Antlr3AstNode arguments538 = default(Antlr3AstNode);
		Antlr3AstNode typeArguments540 = default(Antlr3AstNode);
		Antlr3AstNode arguments542 = default(Antlr3AstNode);

		object char_literal539_tree = default(object);
		object IDENTIFIER541_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "superSuffix");
		DebugLocation(1160, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 96)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1161:5: ( arguments | '.' ( typeArguments )? IDENTIFIER ( arguments )? )
			int alt153=2;
			try { DebugEnterDecision(153, false);
			int LA153_1 = input.LA(1);

			if ((LA153_1==LPAREN))
			{
				alt153 = 1;
			}
			else if ((LA153_1==DOT))
			{
				alt153 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 153, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(153); }
			switch (alt153)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1161:9: arguments
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1161, 9);
				PushFollow(Follow._arguments_in_superSuffix7106);
				arguments538=arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arguments538.Tree, arguments538, "arguments538", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1162:9: '.' ( typeArguments )? IDENTIFIER ( arguments )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1162, 9);
				char_literal539=(IToken)Match(input,DOT,Follow._DOT_in_superSuffix7116); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal539_tree = (object)adaptor.Create(char_literal539, "char_literal539", retval);
				adaptor.AddChild(root_0, char_literal539_tree);
				}
				DebugLocation(1162, 13);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1162:13: ( typeArguments )?
				int alt151=2;
				try { DebugEnterSubRule(151);
				try { DebugEnterDecision(151, false);
				int LA151_1 = input.LA(1);

				if ((LA151_1==LT))
				{
					alt151 = 1;
				}
				} finally { DebugExitDecision(151); }
				switch (alt151)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1162:14: typeArguments
					{
					DebugLocation(1162, 14);
					PushFollow(Follow._typeArguments_in_superSuffix7119);
					typeArguments540=typeArguments();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, typeArguments540.Tree, typeArguments540, "typeArguments540", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(151); }

				DebugLocation(1164, 9);
				IDENTIFIER541=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_superSuffix7140); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER541_tree = (object)adaptor.Create(IDENTIFIER541, "IDENTIFIER541", retval);
				adaptor.AddChild(root_0, IDENTIFIER541_tree);
				}
				DebugLocation(1165, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1165:9: ( arguments )?
				int alt152=2;
				try { DebugEnterSubRule(152);
				try { DebugEnterDecision(152, false);
				int LA152_1 = input.LA(1);

				if ((LA152_1==LPAREN))
				{
					alt152 = 1;
				}
				} finally { DebugExitDecision(152); }
				switch (alt152)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1165:10: arguments
					{
					DebugLocation(1165, 10);
					PushFollow(Follow._arguments_in_superSuffix7151);
					arguments542=arguments();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, arguments542.Tree, arguments542, "arguments542", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(152); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("superSuffix", 96);
			LeaveRule("superSuffix", 96);
			LeaveRule_superSuffix();
			if (state.backtracking > 0) { Memoize(input, 96, superSuffix_StartIndex); }

		}
		DebugLocation(1167, 4);
		} finally { DebugExitRule(GrammarFileName, "superSuffix"); }
		return retval;

	}
	// $ANTLR end "superSuffix"

	partial void EnterRule_identifierSuffix();
	partial void LeaveRule_identifierSuffix();
	// $ANTLR start "identifierSuffix"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1169:1: identifierSuffix : ( ( '[' ']' )+ '.' 'class' | ( '[' expression ']' )+ | arguments | '.' 'class' | '.' nonWildcardTypeArguments IDENTIFIER arguments | '.' 'this' | '.' 'super' arguments | innerCreator );
	[GrammarRule("identifierSuffix")]
	private Antlr3AstNode identifierSuffix()
	{
		EnterRule_identifierSuffix();
		EnterRule("identifierSuffix", 97);
		var retval = new Antlr3AstNode("identifierSuffix");
		
		retval.Start = (IToken)input.LT(1);
		int identifierSuffix_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal543 = default(IToken);
		IToken char_literal544 = default(IToken);
		IToken char_literal545 = default(IToken);
		IToken string_literal546 = default(IToken);
		IToken char_literal547 = default(IToken);
		IToken char_literal549 = default(IToken);
		IToken char_literal551 = default(IToken);
		IToken string_literal552 = default(IToken);
		IToken char_literal553 = default(IToken);
		IToken IDENTIFIER555 = default(IToken);
		IToken char_literal557 = default(IToken);
		IToken string_literal558 = default(IToken);
		IToken char_literal559 = default(IToken);
		IToken string_literal560 = default(IToken);
		Antlr3AstNode expression548 = default(Antlr3AstNode);
		Antlr3AstNode arguments550 = default(Antlr3AstNode);
		Antlr3AstNode nonWildcardTypeArguments554 = default(Antlr3AstNode);
		Antlr3AstNode arguments556 = default(Antlr3AstNode);
		Antlr3AstNode arguments561 = default(Antlr3AstNode);
		Antlr3AstNode innerCreator562 = default(Antlr3AstNode);

		object char_literal543_tree = default(object);
		object char_literal544_tree = default(object);
		object char_literal545_tree = default(object);
		object string_literal546_tree = default(object);
		object char_literal547_tree = default(object);
		object char_literal549_tree = default(object);
		object char_literal551_tree = default(object);
		object string_literal552_tree = default(object);
		object char_literal553_tree = default(object);
		object IDENTIFIER555_tree = default(object);
		object char_literal557_tree = default(object);
		object string_literal558_tree = default(object);
		object char_literal559_tree = default(object);
		object string_literal560_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "identifierSuffix");
		DebugLocation(1169, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 97)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1170:5: ( ( '[' ']' )+ '.' 'class' | ( '[' expression ']' )+ | arguments | '.' 'class' | '.' nonWildcardTypeArguments IDENTIFIER arguments | '.' 'this' | '.' 'super' arguments | innerCreator )
			int alt156=8;
			try { DebugEnterDecision(156, false);
			switch (input.LA(1))
			{
			case LBRACKET:
				{
				int LA156_2 = input.LA(2);

				if ((LA156_2==RBRACKET))
				{
					alt156 = 1;
				}
				else if ((LA156_2==BANG||LA156_2==BOOLEAN||LA156_2==BYTE||(LA156_2>=CHAR && LA156_2<=CHARLITERAL)||(LA156_2>=DOUBLE && LA156_2<=DOUBLELITERAL)||LA156_2==FALSE||(LA156_2>=FLOAT && LA156_2<=FLOATLITERAL)||LA156_2==IDENTIFIER||LA156_2==INT||LA156_2==INTLITERAL||(LA156_2>=LONG && LA156_2<=LPAREN)||(LA156_2>=NEW && LA156_2<=NULL)||LA156_2==PLUS||LA156_2==PLUSPLUS||LA156_2==SHORT||(LA156_2>=STRINGLITERAL && LA156_2<=SUB)||(LA156_2>=SUBSUB && LA156_2<=SUPER)||LA156_2==THIS||LA156_2==TILDE||LA156_2==TRUE||LA156_2==VOID))
				{
					alt156 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 156, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case LPAREN:
				{
				alt156 = 3;
				}
				break;
			case DOT:
				{
				switch (input.LA(2))
				{
				case CLASS:
					{
					alt156 = 4;
					}
					break;
				case THIS:
					{
					alt156 = 6;
					}
					break;
				case SUPER:
					{
					alt156 = 7;
					}
					break;
				case NEW:
					{
					alt156 = 8;
					}
					break;
				case LT:
					{
					alt156 = 5;
					}
					break;
				default:
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 156, 3, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}

				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 156, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(156); }
			switch (alt156)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1170:9: ( '[' ']' )+ '.' 'class'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1170, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1170:9: ( '[' ']' )+
				int cnt154=0;
				try { DebugEnterSubRule(154);
				while (true)
				{
					int alt154=2;
					try { DebugEnterDecision(154, false);
					int LA154_1 = input.LA(1);

					if ((LA154_1==LBRACKET))
					{
						alt154 = 1;
					}


					} finally { DebugExitDecision(154); }
					switch (alt154)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1170:10: '[' ']'
						{
						DebugLocation(1170, 10);
						char_literal543=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_identifierSuffix7182); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal543_tree = (object)adaptor.Create(char_literal543, "char_literal543", retval);
						adaptor.AddChild(root_0, char_literal543_tree);
						}
						DebugLocation(1170, 14);
						char_literal544=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_identifierSuffix7184); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal544_tree = (object)adaptor.Create(char_literal544, "char_literal544", retval);
						adaptor.AddChild(root_0, char_literal544_tree);
						}

						}
						break;

					default:
						if (cnt154 >= 1)
							goto loop154;

						if (state.backtracking>0) {state.failed=true; return retval;}
						EarlyExitException eee154 = new EarlyExitException( 154, input );
						DebugRecognitionException(eee154);
						throw eee154;
					}
					cnt154++;
				}
				loop154:
					;

				} finally { DebugExitSubRule(154); }

				DebugLocation(1172, 9);
				char_literal545=(IToken)Match(input,DOT,Follow._DOT_in_identifierSuffix7205); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal545_tree = (object)adaptor.Create(char_literal545, "char_literal545", retval);
				adaptor.AddChild(root_0, char_literal545_tree);
				}
				DebugLocation(1172, 13);
				string_literal546=(IToken)Match(input,CLASS,Follow._CLASS_in_identifierSuffix7207); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal546_tree = (object)adaptor.Create(string_literal546, "string_literal546", retval);
				adaptor.AddChild(root_0, string_literal546_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1173:9: ( '[' expression ']' )+
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1173, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1173:9: ( '[' expression ']' )+
				int cnt155=0;
				try { DebugEnterSubRule(155);
				while (true)
				{
					int alt155=2;
					try { DebugEnterDecision(155, false);
					int LA155_1 = input.LA(1);

					if ((LA155_1==LBRACKET))
					{
						int LA155_2 = input.LA(2);

						if ((EvaluatePredicate(synpred237_Java_fragment)))
						{
							alt155 = 1;
						}


					}


					} finally { DebugExitDecision(155); }
					switch (alt155)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1173:10: '[' expression ']'
						{
						DebugLocation(1173, 10);
						char_literal547=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_identifierSuffix7218); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal547_tree = (object)adaptor.Create(char_literal547, "char_literal547", retval);
						adaptor.AddChild(root_0, char_literal547_tree);
						}
						DebugLocation(1173, 14);
						PushFollow(Follow._expression_in_identifierSuffix7220);
						expression548=expression();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, expression548.Tree, expression548, "expression548", retval);
						DebugLocation(1173, 25);
						char_literal549=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_identifierSuffix7222); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal549_tree = (object)adaptor.Create(char_literal549, "char_literal549", retval);
						adaptor.AddChild(root_0, char_literal549_tree);
						}

						}
						break;

					default:
						if (cnt155 >= 1)
							goto loop155;

						if (state.backtracking>0) {state.failed=true; return retval;}
						EarlyExitException eee155 = new EarlyExitException( 155, input );
						DebugRecognitionException(eee155);
						throw eee155;
					}
					cnt155++;
				}
				loop155:
					;

				} finally { DebugExitSubRule(155); }


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1175:9: arguments
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1175, 9);
				PushFollow(Follow._arguments_in_identifierSuffix7243);
				arguments550=arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arguments550.Tree, arguments550, "arguments550", retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1176:9: '.' 'class'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1176, 9);
				char_literal551=(IToken)Match(input,DOT,Follow._DOT_in_identifierSuffix7253); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal551_tree = (object)adaptor.Create(char_literal551, "char_literal551", retval);
				adaptor.AddChild(root_0, char_literal551_tree);
				}
				DebugLocation(1176, 13);
				string_literal552=(IToken)Match(input,CLASS,Follow._CLASS_in_identifierSuffix7255); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal552_tree = (object)adaptor.Create(string_literal552, "string_literal552", retval);
				adaptor.AddChild(root_0, string_literal552_tree);
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1177:9: '.' nonWildcardTypeArguments IDENTIFIER arguments
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1177, 9);
				char_literal553=(IToken)Match(input,DOT,Follow._DOT_in_identifierSuffix7265); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal553_tree = (object)adaptor.Create(char_literal553, "char_literal553", retval);
				adaptor.AddChild(root_0, char_literal553_tree);
				}
				DebugLocation(1177, 13);
				PushFollow(Follow._nonWildcardTypeArguments_in_identifierSuffix7267);
				nonWildcardTypeArguments554=nonWildcardTypeArguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, nonWildcardTypeArguments554.Tree, nonWildcardTypeArguments554, "nonWildcardTypeArguments554", retval);
				DebugLocation(1177, 38);
				IDENTIFIER555=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_identifierSuffix7269); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER555_tree = (object)adaptor.Create(IDENTIFIER555, "IDENTIFIER555", retval);
				adaptor.AddChild(root_0, IDENTIFIER555_tree);
				}
				DebugLocation(1177, 49);
				PushFollow(Follow._arguments_in_identifierSuffix7271);
				arguments556=arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arguments556.Tree, arguments556, "arguments556", retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1178:9: '.' 'this'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1178, 9);
				char_literal557=(IToken)Match(input,DOT,Follow._DOT_in_identifierSuffix7281); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal557_tree = (object)adaptor.Create(char_literal557, "char_literal557", retval);
				adaptor.AddChild(root_0, char_literal557_tree);
				}
				DebugLocation(1178, 13);
				string_literal558=(IToken)Match(input,THIS,Follow._THIS_in_identifierSuffix7283); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal558_tree = (object)adaptor.Create(string_literal558, "string_literal558", retval);
				adaptor.AddChild(root_0, string_literal558_tree);
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1179:9: '.' 'super' arguments
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1179, 9);
				char_literal559=(IToken)Match(input,DOT,Follow._DOT_in_identifierSuffix7293); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal559_tree = (object)adaptor.Create(char_literal559, "char_literal559", retval);
				adaptor.AddChild(root_0, char_literal559_tree);
				}
				DebugLocation(1179, 13);
				string_literal560=(IToken)Match(input,SUPER,Follow._SUPER_in_identifierSuffix7295); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal560_tree = (object)adaptor.Create(string_literal560, "string_literal560", retval);
				adaptor.AddChild(root_0, string_literal560_tree);
				}
				DebugLocation(1179, 21);
				PushFollow(Follow._arguments_in_identifierSuffix7297);
				arguments561=arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arguments561.Tree, arguments561, "arguments561", retval);

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1180:9: innerCreator
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1180, 9);
				PushFollow(Follow._innerCreator_in_identifierSuffix7307);
				innerCreator562=innerCreator();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, innerCreator562.Tree, innerCreator562, "innerCreator562", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("identifierSuffix", 97);
			LeaveRule("identifierSuffix", 97);
			LeaveRule_identifierSuffix();
			if (state.backtracking > 0) { Memoize(input, 97, identifierSuffix_StartIndex); }

		}
		DebugLocation(1181, 4);
		} finally { DebugExitRule(GrammarFileName, "identifierSuffix"); }
		return retval;

	}
	// $ANTLR end "identifierSuffix"

	partial void EnterRule_selector();
	partial void LeaveRule_selector();
	// $ANTLR start "selector"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1183:1: selector : ( '.' IDENTIFIER ( arguments )? | '.' nonWildcardTypeArguments IDENTIFIER arguments | '.' 'this' | '.' 'super' superSuffix | innerCreator | '[' expression ']' );
	[GrammarRule("selector")]
	private Antlr3AstNode selector()
	{
		EnterRule_selector();
		EnterRule("selector", 98);
		var retval = new Antlr3AstNode("selector");
		
		retval.Start = (IToken)input.LT(1);
		int selector_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal563 = default(IToken);
		IToken IDENTIFIER564 = default(IToken);
		IToken char_literal566 = default(IToken);
		IToken IDENTIFIER568 = default(IToken);
		IToken char_literal570 = default(IToken);
		IToken string_literal571 = default(IToken);
		IToken char_literal572 = default(IToken);
		IToken string_literal573 = default(IToken);
		IToken char_literal576 = default(IToken);
		IToken char_literal578 = default(IToken);
		Antlr3AstNode arguments565 = default(Antlr3AstNode);
		Antlr3AstNode nonWildcardTypeArguments567 = default(Antlr3AstNode);
		Antlr3AstNode arguments569 = default(Antlr3AstNode);
		Antlr3AstNode superSuffix574 = default(Antlr3AstNode);
		Antlr3AstNode innerCreator575 = default(Antlr3AstNode);
		Antlr3AstNode expression577 = default(Antlr3AstNode);

		object char_literal563_tree = default(object);
		object IDENTIFIER564_tree = default(object);
		object char_literal566_tree = default(object);
		object IDENTIFIER568_tree = default(object);
		object char_literal570_tree = default(object);
		object string_literal571_tree = default(object);
		object char_literal572_tree = default(object);
		object string_literal573_tree = default(object);
		object char_literal576_tree = default(object);
		object char_literal578_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "selector");
		DebugLocation(1183, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 98)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1184:5: ( '.' IDENTIFIER ( arguments )? | '.' nonWildcardTypeArguments IDENTIFIER arguments | '.' 'this' | '.' 'super' superSuffix | innerCreator | '[' expression ']' )
			int alt158=6;
			try { DebugEnterDecision(158, false);
			int LA158_1 = input.LA(1);

			if ((LA158_1==DOT))
			{
				switch (input.LA(2))
				{
				case IDENTIFIER:
					{
					alt158 = 1;
					}
					break;
				case THIS:
					{
					alt158 = 3;
					}
					break;
				case SUPER:
					{
					alt158 = 4;
					}
					break;
				case NEW:
					{
					alt158 = 5;
					}
					break;
				case LT:
					{
					alt158 = 2;
					}
					break;
				default:
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 158, 1, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}

			}
			else if ((LA158_1==LBRACKET))
			{
				alt158 = 6;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 158, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(158); }
			switch (alt158)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1184:9: '.' IDENTIFIER ( arguments )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1184, 9);
				char_literal563=(IToken)Match(input,DOT,Follow._DOT_in_selector7326); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal563_tree = (object)adaptor.Create(char_literal563, "char_literal563", retval);
				adaptor.AddChild(root_0, char_literal563_tree);
				}
				DebugLocation(1184, 13);
				IDENTIFIER564=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_selector7328); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER564_tree = (object)adaptor.Create(IDENTIFIER564, "IDENTIFIER564", retval);
				adaptor.AddChild(root_0, IDENTIFIER564_tree);
				}
				DebugLocation(1184, 24);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1184:24: ( arguments )?
				int alt157=2;
				try { DebugEnterSubRule(157);
				try { DebugEnterDecision(157, false);
				int LA157_1 = input.LA(1);

				if ((LA157_1==LPAREN))
				{
					alt157 = 1;
				}
				} finally { DebugExitDecision(157); }
				switch (alt157)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1184:24: arguments
					{
					DebugLocation(1184, 24);
					PushFollow(Follow._arguments_in_selector7330);
					arguments565=arguments();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, arguments565.Tree, arguments565, "arguments565", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(157); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1185:9: '.' nonWildcardTypeArguments IDENTIFIER arguments
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1185, 9);
				char_literal566=(IToken)Match(input,DOT,Follow._DOT_in_selector7341); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal566_tree = (object)adaptor.Create(char_literal566, "char_literal566", retval);
				adaptor.AddChild(root_0, char_literal566_tree);
				}
				DebugLocation(1185, 13);
				PushFollow(Follow._nonWildcardTypeArguments_in_selector7343);
				nonWildcardTypeArguments567=nonWildcardTypeArguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, nonWildcardTypeArguments567.Tree, nonWildcardTypeArguments567, "nonWildcardTypeArguments567", retval);
				DebugLocation(1185, 38);
				IDENTIFIER568=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_selector7345); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER568_tree = (object)adaptor.Create(IDENTIFIER568, "IDENTIFIER568", retval);
				adaptor.AddChild(root_0, IDENTIFIER568_tree);
				}
				DebugLocation(1185, 49);
				PushFollow(Follow._arguments_in_selector7347);
				arguments569=arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arguments569.Tree, arguments569, "arguments569", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1186:9: '.' 'this'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1186, 9);
				char_literal570=(IToken)Match(input,DOT,Follow._DOT_in_selector7358); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal570_tree = (object)adaptor.Create(char_literal570, "char_literal570", retval);
				adaptor.AddChild(root_0, char_literal570_tree);
				}
				DebugLocation(1186, 13);
				string_literal571=(IToken)Match(input,THIS,Follow._THIS_in_selector7360); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal571_tree = (object)adaptor.Create(string_literal571, "string_literal571", retval);
				adaptor.AddChild(root_0, string_literal571_tree);
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1187:9: '.' 'super' superSuffix
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1187, 9);
				char_literal572=(IToken)Match(input,DOT,Follow._DOT_in_selector7370); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal572_tree = (object)adaptor.Create(char_literal572, "char_literal572", retval);
				adaptor.AddChild(root_0, char_literal572_tree);
				}
				DebugLocation(1187, 13);
				string_literal573=(IToken)Match(input,SUPER,Follow._SUPER_in_selector7372); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal573_tree = (object)adaptor.Create(string_literal573, "string_literal573", retval);
				adaptor.AddChild(root_0, string_literal573_tree);
				}
				DebugLocation(1188, 9);
				PushFollow(Follow._superSuffix_in_selector7382);
				superSuffix574=superSuffix();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, superSuffix574.Tree, superSuffix574, "superSuffix574", retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1189:9: innerCreator
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1189, 9);
				PushFollow(Follow._innerCreator_in_selector7392);
				innerCreator575=innerCreator();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, innerCreator575.Tree, innerCreator575, "innerCreator575", retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1190:9: '[' expression ']'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1190, 9);
				char_literal576=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_selector7402); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal576_tree = (object)adaptor.Create(char_literal576, "char_literal576", retval);
				adaptor.AddChild(root_0, char_literal576_tree);
				}
				DebugLocation(1190, 13);
				PushFollow(Follow._expression_in_selector7404);
				expression577=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression577.Tree, expression577, "expression577", retval);
				DebugLocation(1190, 24);
				char_literal578=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_selector7406); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal578_tree = (object)adaptor.Create(char_literal578, "char_literal578", retval);
				adaptor.AddChild(root_0, char_literal578_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("selector", 98);
			LeaveRule("selector", 98);
			LeaveRule_selector();
			if (state.backtracking > 0) { Memoize(input, 98, selector_StartIndex); }

		}
		DebugLocation(1191, 4);
		} finally { DebugExitRule(GrammarFileName, "selector"); }
		return retval;

	}
	// $ANTLR end "selector"

	partial void EnterRule_creator();
	partial void LeaveRule_creator();
	// $ANTLR start "creator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1193:1: creator : ( 'new' nonWildcardTypeArguments classOrInterfaceTypeWithDiamond classCreatorRest | 'new' classOrInterfaceTypeWithDiamond classCreatorRest | arrayCreator );
	[GrammarRule("creator")]
	private Antlr3AstNode creator()
	{
		EnterRule_creator();
		EnterRule("creator", 99);
		var retval = new Antlr3AstNode("creator");
		
		retval.Start = (IToken)input.LT(1);
		int creator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal579 = default(IToken);
		IToken string_literal583 = default(IToken);
		Antlr3AstNode nonWildcardTypeArguments580 = default(Antlr3AstNode);
		Antlr3AstNode classOrInterfaceTypeWithDiamond581 = default(Antlr3AstNode);
		Antlr3AstNode classCreatorRest582 = default(Antlr3AstNode);
		Antlr3AstNode classOrInterfaceTypeWithDiamond584 = default(Antlr3AstNode);
		Antlr3AstNode classCreatorRest585 = default(Antlr3AstNode);
		Antlr3AstNode arrayCreator586 = default(Antlr3AstNode);

		object string_literal579_tree = default(object);
		object string_literal583_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "creator");
		DebugLocation(1193, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 99)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1194:5: ( 'new' nonWildcardTypeArguments classOrInterfaceTypeWithDiamond classCreatorRest | 'new' classOrInterfaceTypeWithDiamond classCreatorRest | arrayCreator )
			int alt159=3;
			try { DebugEnterDecision(159, false);
			int LA159_1 = input.LA(1);

			if ((LA159_1==NEW))
			{
				int LA159_2 = input.LA(2);

				if ((EvaluatePredicate(synpred250_Java_fragment)))
				{
					alt159 = 1;
				}
				else if ((EvaluatePredicate(synpred251_Java_fragment)))
				{
					alt159 = 2;
				}
				else if ((true))
				{
					alt159 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 159, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 159, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(159); }
			switch (alt159)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1194:9: 'new' nonWildcardTypeArguments classOrInterfaceTypeWithDiamond classCreatorRest
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1194, 9);
				string_literal579=(IToken)Match(input,NEW,Follow._NEW_in_creator7425); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal579_tree = (object)adaptor.Create(string_literal579, "string_literal579", retval);
				adaptor.AddChild(root_0, string_literal579_tree);
				}
				DebugLocation(1194, 15);
				PushFollow(Follow._nonWildcardTypeArguments_in_creator7427);
				nonWildcardTypeArguments580=nonWildcardTypeArguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, nonWildcardTypeArguments580.Tree, nonWildcardTypeArguments580, "nonWildcardTypeArguments580", retval);
				DebugLocation(1194, 40);
				PushFollow(Follow._classOrInterfaceTypeWithDiamond_in_creator7429);
				classOrInterfaceTypeWithDiamond581=classOrInterfaceTypeWithDiamond();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classOrInterfaceTypeWithDiamond581.Tree, classOrInterfaceTypeWithDiamond581, "classOrInterfaceTypeWithDiamond581", retval);
				DebugLocation(1194, 72);
				PushFollow(Follow._classCreatorRest_in_creator7431);
				classCreatorRest582=classCreatorRest();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classCreatorRest582.Tree, classCreatorRest582, "classCreatorRest582", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1195:9: 'new' classOrInterfaceTypeWithDiamond classCreatorRest
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1195, 9);
				string_literal583=(IToken)Match(input,NEW,Follow._NEW_in_creator7441); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal583_tree = (object)adaptor.Create(string_literal583, "string_literal583", retval);
				adaptor.AddChild(root_0, string_literal583_tree);
				}
				DebugLocation(1195, 15);
				PushFollow(Follow._classOrInterfaceTypeWithDiamond_in_creator7443);
				classOrInterfaceTypeWithDiamond584=classOrInterfaceTypeWithDiamond();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classOrInterfaceTypeWithDiamond584.Tree, classOrInterfaceTypeWithDiamond584, "classOrInterfaceTypeWithDiamond584", retval);
				DebugLocation(1195, 47);
				PushFollow(Follow._classCreatorRest_in_creator7445);
				classCreatorRest585=classCreatorRest();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classCreatorRest585.Tree, classCreatorRest585, "classCreatorRest585", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1196:9: arrayCreator
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1196, 9);
				PushFollow(Follow._arrayCreator_in_creator7455);
				arrayCreator586=arrayCreator();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arrayCreator586.Tree, arrayCreator586, "arrayCreator586", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("creator", 99);
			LeaveRule("creator", 99);
			LeaveRule_creator();
			if (state.backtracking > 0) { Memoize(input, 99, creator_StartIndex); }

		}
		DebugLocation(1197, 4);
		} finally { DebugExitRule(GrammarFileName, "creator"); }
		return retval;

	}
	// $ANTLR end "creator"

	partial void EnterRule_arrayCreator();
	partial void LeaveRule_arrayCreator();
	// $ANTLR start "arrayCreator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1199:1: arrayCreator : ( 'new' createdName '[' ']' ( '[' ']' )* arrayInitializer | 'new' createdName '[' expression ']' ( '[' expression ']' )* ( '[' ']' )* );
	[GrammarRule("arrayCreator")]
	private Antlr3AstNode arrayCreator()
	{
		EnterRule_arrayCreator();
		EnterRule("arrayCreator", 100);
		var retval = new Antlr3AstNode("arrayCreator");
		
		retval.Start = (IToken)input.LT(1);
		int arrayCreator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal587 = default(IToken);
		IToken char_literal589 = default(IToken);
		IToken char_literal590 = default(IToken);
		IToken char_literal591 = default(IToken);
		IToken char_literal592 = default(IToken);
		IToken string_literal594 = default(IToken);
		IToken char_literal596 = default(IToken);
		IToken char_literal598 = default(IToken);
		IToken char_literal599 = default(IToken);
		IToken char_literal601 = default(IToken);
		IToken char_literal602 = default(IToken);
		IToken char_literal603 = default(IToken);
		Antlr3AstNode createdName588 = default(Antlr3AstNode);
		Antlr3AstNode arrayInitializer593 = default(Antlr3AstNode);
		Antlr3AstNode createdName595 = default(Antlr3AstNode);
		Antlr3AstNode expression597 = default(Antlr3AstNode);
		Antlr3AstNode expression600 = default(Antlr3AstNode);

		object string_literal587_tree = default(object);
		object char_literal589_tree = default(object);
		object char_literal590_tree = default(object);
		object char_literal591_tree = default(object);
		object char_literal592_tree = default(object);
		object string_literal594_tree = default(object);
		object char_literal596_tree = default(object);
		object char_literal598_tree = default(object);
		object char_literal599_tree = default(object);
		object char_literal601_tree = default(object);
		object char_literal602_tree = default(object);
		object char_literal603_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "arrayCreator");
		DebugLocation(1199, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 100)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1200:5: ( 'new' createdName '[' ']' ( '[' ']' )* arrayInitializer | 'new' createdName '[' expression ']' ( '[' expression ']' )* ( '[' ']' )* )
			int alt163=2;
			try { DebugEnterDecision(163, false);
			int LA163_1 = input.LA(1);

			if ((LA163_1==NEW))
			{
				int LA163_2 = input.LA(2);

				if ((EvaluatePredicate(synpred253_Java_fragment)))
				{
					alt163 = 1;
				}
				else if ((true))
				{
					alt163 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 163, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 163, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(163); }
			switch (alt163)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1200:9: 'new' createdName '[' ']' ( '[' ']' )* arrayInitializer
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1200, 9);
				string_literal587=(IToken)Match(input,NEW,Follow._NEW_in_arrayCreator7474); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal587_tree = (object)adaptor.Create(string_literal587, "string_literal587", retval);
				adaptor.AddChild(root_0, string_literal587_tree);
				}
				DebugLocation(1200, 15);
				PushFollow(Follow._createdName_in_arrayCreator7476);
				createdName588=createdName();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, createdName588.Tree, createdName588, "createdName588", retval);
				DebugLocation(1201, 9);
				char_literal589=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_arrayCreator7486); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal589_tree = (object)adaptor.Create(char_literal589, "char_literal589", retval);
				adaptor.AddChild(root_0, char_literal589_tree);
				}
				DebugLocation(1201, 13);
				char_literal590=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_arrayCreator7488); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal590_tree = (object)adaptor.Create(char_literal590, "char_literal590", retval);
				adaptor.AddChild(root_0, char_literal590_tree);
				}
				DebugLocation(1202, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1202:9: ( '[' ']' )*
				try { DebugEnterSubRule(160);
				while (true)
				{
					int alt160=2;
					try { DebugEnterDecision(160, false);
					int LA160_1 = input.LA(1);

					if ((LA160_1==LBRACKET))
					{
						alt160 = 1;
					}


					} finally { DebugExitDecision(160); }
					switch ( alt160 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1202:10: '[' ']'
						{
						DebugLocation(1202, 10);
						char_literal591=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_arrayCreator7499); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal591_tree = (object)adaptor.Create(char_literal591, "char_literal591", retval);
						adaptor.AddChild(root_0, char_literal591_tree);
						}
						DebugLocation(1202, 14);
						char_literal592=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_arrayCreator7501); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal592_tree = (object)adaptor.Create(char_literal592, "char_literal592", retval);
						adaptor.AddChild(root_0, char_literal592_tree);
						}

						}
						break;

					default:
						goto loop160;
					}
				}

				loop160:
					;

				} finally { DebugExitSubRule(160); }

				DebugLocation(1204, 9);
				PushFollow(Follow._arrayInitializer_in_arrayCreator7522);
				arrayInitializer593=arrayInitializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arrayInitializer593.Tree, arrayInitializer593, "arrayInitializer593", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1206:9: 'new' createdName '[' expression ']' ( '[' expression ']' )* ( '[' ']' )*
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1206, 9);
				string_literal594=(IToken)Match(input,NEW,Follow._NEW_in_arrayCreator7533); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal594_tree = (object)adaptor.Create(string_literal594, "string_literal594", retval);
				adaptor.AddChild(root_0, string_literal594_tree);
				}
				DebugLocation(1206, 15);
				PushFollow(Follow._createdName_in_arrayCreator7535);
				createdName595=createdName();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, createdName595.Tree, createdName595, "createdName595", retval);
				DebugLocation(1207, 9);
				char_literal596=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_arrayCreator7545); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal596_tree = (object)adaptor.Create(char_literal596, "char_literal596", retval);
				adaptor.AddChild(root_0, char_literal596_tree);
				}
				DebugLocation(1207, 13);
				PushFollow(Follow._expression_in_arrayCreator7547);
				expression597=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression597.Tree, expression597, "expression597", retval);
				DebugLocation(1208, 9);
				char_literal598=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_arrayCreator7557); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal598_tree = (object)adaptor.Create(char_literal598, "char_literal598", retval);
				adaptor.AddChild(root_0, char_literal598_tree);
				}
				DebugLocation(1209, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1209:9: ( '[' expression ']' )*
				try { DebugEnterSubRule(161);
				while (true)
				{
					int alt161=2;
					try { DebugEnterDecision(161, false);
					int LA161_1 = input.LA(1);

					if ((LA161_1==LBRACKET))
					{
						int LA161_2 = input.LA(2);

						if ((EvaluatePredicate(synpred254_Java_fragment)))
						{
							alt161 = 1;
						}


					}


					} finally { DebugExitDecision(161); }
					switch ( alt161 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1209:13: '[' expression ']'
						{
						DebugLocation(1209, 13);
						char_literal599=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_arrayCreator7571); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal599_tree = (object)adaptor.Create(char_literal599, "char_literal599", retval);
						adaptor.AddChild(root_0, char_literal599_tree);
						}
						DebugLocation(1209, 17);
						PushFollow(Follow._expression_in_arrayCreator7573);
						expression600=expression();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, expression600.Tree, expression600, "expression600", retval);
						DebugLocation(1210, 13);
						char_literal601=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_arrayCreator7587); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal601_tree = (object)adaptor.Create(char_literal601, "char_literal601", retval);
						adaptor.AddChild(root_0, char_literal601_tree);
						}

						}
						break;

					default:
						goto loop161;
					}
				}

				loop161:
					;

				} finally { DebugExitSubRule(161); }

				DebugLocation(1212, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1212:9: ( '[' ']' )*
				try { DebugEnterSubRule(162);
				while (true)
				{
					int alt162=2;
					try { DebugEnterDecision(162, false);
					int LA162_1 = input.LA(1);

					if ((LA162_1==LBRACKET))
					{
						int LA162_2 = input.LA(2);

						if ((LA162_2==RBRACKET))
						{
							alt162 = 1;
						}


					}


					} finally { DebugExitDecision(162); }
					switch ( alt162 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1212:10: '[' ']'
						{
						DebugLocation(1212, 10);
						char_literal602=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_arrayCreator7609); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal602_tree = (object)adaptor.Create(char_literal602, "char_literal602", retval);
						adaptor.AddChild(root_0, char_literal602_tree);
						}
						DebugLocation(1212, 14);
						char_literal603=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_arrayCreator7611); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal603_tree = (object)adaptor.Create(char_literal603, "char_literal603", retval);
						adaptor.AddChild(root_0, char_literal603_tree);
						}

						}
						break;

					default:
						goto loop162;
					}
				}

				loop162:
					;

				} finally { DebugExitSubRule(162); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("arrayCreator", 100);
			LeaveRule("arrayCreator", 100);
			LeaveRule_arrayCreator();
			if (state.backtracking > 0) { Memoize(input, 100, arrayCreator_StartIndex); }

		}
		DebugLocation(1214, 4);
		} finally { DebugExitRule(GrammarFileName, "arrayCreator"); }
		return retval;

	}
	// $ANTLR end "arrayCreator"

	partial void EnterRule_variableInitializer();
	partial void LeaveRule_variableInitializer();
	// $ANTLR start "variableInitializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1216:1: variableInitializer : ( arrayInitializer | expression );
	[GrammarRule("variableInitializer")]
	private Antlr3AstNode variableInitializer()
	{
		EnterRule_variableInitializer();
		EnterRule("variableInitializer", 101);
		var retval = new Antlr3AstNode("variableInitializer");
		
		retval.Start = (IToken)input.LT(1);
		int variableInitializer_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode arrayInitializer604 = default(Antlr3AstNode);
		Antlr3AstNode expression605 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "variableInitializer");
		DebugLocation(1216, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 101)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1217:5: ( arrayInitializer | expression )
			int alt164=2;
			try { DebugEnterDecision(164, false);
			int LA164_1 = input.LA(1);

			if ((LA164_1==LBRACE))
			{
				alt164 = 1;
			}
			else if ((LA164_1==BANG||LA164_1==BOOLEAN||LA164_1==BYTE||(LA164_1>=CHAR && LA164_1<=CHARLITERAL)||(LA164_1>=DOUBLE && LA164_1<=DOUBLELITERAL)||LA164_1==FALSE||(LA164_1>=FLOAT && LA164_1<=FLOATLITERAL)||LA164_1==IDENTIFIER||LA164_1==INT||LA164_1==INTLITERAL||(LA164_1>=LONG && LA164_1<=LPAREN)||(LA164_1>=NEW && LA164_1<=NULL)||LA164_1==PLUS||LA164_1==PLUSPLUS||LA164_1==SHORT||(LA164_1>=STRINGLITERAL && LA164_1<=SUB)||(LA164_1>=SUBSUB && LA164_1<=SUPER)||LA164_1==THIS||LA164_1==TILDE||LA164_1==TRUE||LA164_1==VOID))
			{
				alt164 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 164, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(164); }
			switch (alt164)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1217:9: arrayInitializer
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1217, 9);
				PushFollow(Follow._arrayInitializer_in_variableInitializer7641);
				arrayInitializer604=arrayInitializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arrayInitializer604.Tree, arrayInitializer604, "arrayInitializer604", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1218:9: expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1218, 9);
				PushFollow(Follow._expression_in_variableInitializer7651);
				expression605=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression605.Tree, expression605, "expression605", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variableInitializer", 101);
			LeaveRule("variableInitializer", 101);
			LeaveRule_variableInitializer();
			if (state.backtracking > 0) { Memoize(input, 101, variableInitializer_StartIndex); }

		}
		DebugLocation(1219, 4);
		} finally { DebugExitRule(GrammarFileName, "variableInitializer"); }
		return retval;

	}
	// $ANTLR end "variableInitializer"

	partial void EnterRule_arrayInitializer();
	partial void LeaveRule_arrayInitializer();
	// $ANTLR start "arrayInitializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1221:1: arrayInitializer : '{' ( variableInitializer ( ',' variableInitializer )* )? ( ',' )? '}' ;
	[GrammarRule("arrayInitializer")]
	private Antlr3AstNode arrayInitializer()
	{
		EnterRule_arrayInitializer();
		EnterRule("arrayInitializer", 102);
		var retval = new Antlr3AstNode("arrayInitializer");
		
		retval.Start = (IToken)input.LT(1);
		int arrayInitializer_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal606 = default(IToken);
		IToken char_literal608 = default(IToken);
		IToken char_literal610 = default(IToken);
		IToken char_literal611 = default(IToken);
		Antlr3AstNode variableInitializer607 = default(Antlr3AstNode);
		Antlr3AstNode variableInitializer609 = default(Antlr3AstNode);

		object char_literal606_tree = default(object);
		object char_literal608_tree = default(object);
		object char_literal610_tree = default(object);
		object char_literal611_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "arrayInitializer");
		DebugLocation(1221, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 102)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1222:5: ( '{' ( variableInitializer ( ',' variableInitializer )* )? ( ',' )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1222:9: '{' ( variableInitializer ( ',' variableInitializer )* )? ( ',' )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1222, 9);
			char_literal606=(IToken)Match(input,LBRACE,Follow._LBRACE_in_arrayInitializer7670); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal606_tree = (object)adaptor.Create(char_literal606, "char_literal606", retval);
			adaptor.AddChild(root_0, char_literal606_tree);
			}
			DebugLocation(1223, 13);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1223:13: ( variableInitializer ( ',' variableInitializer )* )?
			int alt166=2;
			try { DebugEnterSubRule(166);
			try { DebugEnterDecision(166, false);
			int LA166_1 = input.LA(1);

			if ((LA166_1==BANG||LA166_1==BOOLEAN||LA166_1==BYTE||(LA166_1>=CHAR && LA166_1<=CHARLITERAL)||(LA166_1>=DOUBLE && LA166_1<=DOUBLELITERAL)||LA166_1==FALSE||(LA166_1>=FLOAT && LA166_1<=FLOATLITERAL)||LA166_1==IDENTIFIER||LA166_1==INT||LA166_1==INTLITERAL||LA166_1==LBRACE||(LA166_1>=LONG && LA166_1<=LPAREN)||(LA166_1>=NEW && LA166_1<=NULL)||LA166_1==PLUS||LA166_1==PLUSPLUS||LA166_1==SHORT||(LA166_1>=STRINGLITERAL && LA166_1<=SUB)||(LA166_1>=SUBSUB && LA166_1<=SUPER)||LA166_1==THIS||LA166_1==TILDE||LA166_1==TRUE||LA166_1==VOID))
			{
				alt166 = 1;
			}
			} finally { DebugExitDecision(166); }
			switch (alt166)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1223:14: variableInitializer ( ',' variableInitializer )*
				{
				DebugLocation(1223, 14);
				PushFollow(Follow._variableInitializer_in_arrayInitializer7686);
				variableInitializer607=variableInitializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variableInitializer607.Tree, variableInitializer607, "variableInitializer607", retval);
				DebugLocation(1224, 17);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1224:17: ( ',' variableInitializer )*
				try { DebugEnterSubRule(165);
				while (true)
				{
					int alt165=2;
					try { DebugEnterDecision(165, false);
					int LA165_1 = input.LA(1);

					if ((LA165_1==COMMA))
					{
						int LA165_2 = input.LA(2);

						if ((LA165_2==BANG||LA165_2==BOOLEAN||LA165_2==BYTE||(LA165_2>=CHAR && LA165_2<=CHARLITERAL)||(LA165_2>=DOUBLE && LA165_2<=DOUBLELITERAL)||LA165_2==FALSE||(LA165_2>=FLOAT && LA165_2<=FLOATLITERAL)||LA165_2==IDENTIFIER||LA165_2==INT||LA165_2==INTLITERAL||LA165_2==LBRACE||(LA165_2>=LONG && LA165_2<=LPAREN)||(LA165_2>=NEW && LA165_2<=NULL)||LA165_2==PLUS||LA165_2==PLUSPLUS||LA165_2==SHORT||(LA165_2>=STRINGLITERAL && LA165_2<=SUB)||(LA165_2>=SUBSUB && LA165_2<=SUPER)||LA165_2==THIS||LA165_2==TILDE||LA165_2==TRUE||LA165_2==VOID))
						{
							alt165 = 1;
						}


					}


					} finally { DebugExitDecision(165); }
					switch ( alt165 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1224:18: ',' variableInitializer
						{
						DebugLocation(1224, 18);
						char_literal608=(IToken)Match(input,COMMA,Follow._COMMA_in_arrayInitializer7705); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal608_tree = (object)adaptor.Create(char_literal608, "char_literal608", retval);
						adaptor.AddChild(root_0, char_literal608_tree);
						}
						DebugLocation(1224, 22);
						PushFollow(Follow._variableInitializer_in_arrayInitializer7707);
						variableInitializer609=variableInitializer();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, variableInitializer609.Tree, variableInitializer609, "variableInitializer609", retval);

						}
						break;

					default:
						goto loop165;
					}
				}

				loop165:
					;

				} finally { DebugExitSubRule(165); }


				}
				break;

			}
			} finally { DebugExitSubRule(166); }

			DebugLocation(1227, 13);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1227:13: ( ',' )?
			int alt167=2;
			try { DebugEnterSubRule(167);
			try { DebugEnterDecision(167, false);
			int LA167_1 = input.LA(1);

			if ((LA167_1==COMMA))
			{
				alt167 = 1;
			}
			} finally { DebugExitDecision(167); }
			switch (alt167)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1227:14: ','
				{
				DebugLocation(1227, 14);
				char_literal610=(IToken)Match(input,COMMA,Follow._COMMA_in_arrayInitializer7757); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal610_tree = (object)adaptor.Create(char_literal610, "char_literal610", retval);
				adaptor.AddChild(root_0, char_literal610_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(167); }

			DebugLocation(1228, 9);
			char_literal611=(IToken)Match(input,RBRACE,Follow._RBRACE_in_arrayInitializer7770); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal611_tree = (object)adaptor.Create(char_literal611, "char_literal611", retval);
			adaptor.AddChild(root_0, char_literal611_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("arrayInitializer", 102);
			LeaveRule("arrayInitializer", 102);
			LeaveRule_arrayInitializer();
			if (state.backtracking > 0) { Memoize(input, 102, arrayInitializer_StartIndex); }

		}
		DebugLocation(1229, 4);
		} finally { DebugExitRule(GrammarFileName, "arrayInitializer"); }
		return retval;

	}
	// $ANTLR end "arrayInitializer"

	partial void EnterRule_createdName();
	partial void LeaveRule_createdName();
	// $ANTLR start "createdName"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1232:1: createdName : ( classOrInterfaceTypeWithDiamond | primitiveType );
	[GrammarRule("createdName")]
	private Antlr3AstNode createdName()
	{
		EnterRule_createdName();
		EnterRule("createdName", 103);
		var retval = new Antlr3AstNode("createdName");
		
		retval.Start = (IToken)input.LT(1);
		int createdName_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode classOrInterfaceTypeWithDiamond612 = default(Antlr3AstNode);
		Antlr3AstNode primitiveType613 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "createdName");
		DebugLocation(1232, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 103)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1233:5: ( classOrInterfaceTypeWithDiamond | primitiveType )
			int alt168=2;
			try { DebugEnterDecision(168, false);
			int LA168_1 = input.LA(1);

			if ((LA168_1==IDENTIFIER))
			{
				alt168 = 1;
			}
			else if ((LA168_1==BOOLEAN||LA168_1==BYTE||LA168_1==CHAR||LA168_1==DOUBLE||LA168_1==FLOAT||LA168_1==INT||LA168_1==LONG||LA168_1==SHORT))
			{
				alt168 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 168, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(168); }
			switch (alt168)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1233:9: classOrInterfaceTypeWithDiamond
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1233, 9);
				PushFollow(Follow._classOrInterfaceTypeWithDiamond_in_createdName7803);
				classOrInterfaceTypeWithDiamond612=classOrInterfaceTypeWithDiamond();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classOrInterfaceTypeWithDiamond612.Tree, classOrInterfaceTypeWithDiamond612, "classOrInterfaceTypeWithDiamond612", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1234:9: primitiveType
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1234, 9);
				PushFollow(Follow._primitiveType_in_createdName7813);
				primitiveType613=primitiveType();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primitiveType613.Tree, primitiveType613, "primitiveType613", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("createdName", 103);
			LeaveRule("createdName", 103);
			LeaveRule_createdName();
			if (state.backtracking > 0) { Memoize(input, 103, createdName_StartIndex); }

		}
		DebugLocation(1235, 4);
		} finally { DebugExitRule(GrammarFileName, "createdName"); }
		return retval;

	}
	// $ANTLR end "createdName"

	partial void EnterRule_innerCreator();
	partial void LeaveRule_innerCreator();
	// $ANTLR start "innerCreator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1237:1: innerCreator : '.' 'new' ( nonWildcardTypeArgumentsOrDiamond )? IDENTIFIER ( typeArguments )? classCreatorRest ;
	[GrammarRule("innerCreator")]
	private Antlr3AstNode innerCreator()
	{
		EnterRule_innerCreator();
		EnterRule("innerCreator", 104);
		var retval = new Antlr3AstNode("innerCreator");
		
		retval.Start = (IToken)input.LT(1);
		int innerCreator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal614 = default(IToken);
		IToken string_literal615 = default(IToken);
		IToken IDENTIFIER617 = default(IToken);
		Antlr3AstNode nonWildcardTypeArgumentsOrDiamond616 = default(Antlr3AstNode);
		Antlr3AstNode typeArguments618 = default(Antlr3AstNode);
		Antlr3AstNode classCreatorRest619 = default(Antlr3AstNode);

		object char_literal614_tree = default(object);
		object string_literal615_tree = default(object);
		object IDENTIFIER617_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "innerCreator");
		DebugLocation(1237, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 104)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1238:5: ( '.' 'new' ( nonWildcardTypeArgumentsOrDiamond )? IDENTIFIER ( typeArguments )? classCreatorRest )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1238:9: '.' 'new' ( nonWildcardTypeArgumentsOrDiamond )? IDENTIFIER ( typeArguments )? classCreatorRest
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1238, 9);
			char_literal614=(IToken)Match(input,DOT,Follow._DOT_in_innerCreator7832); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal614_tree = (object)adaptor.Create(char_literal614, "char_literal614", retval);
			adaptor.AddChild(root_0, char_literal614_tree);
			}
			DebugLocation(1238, 13);
			string_literal615=(IToken)Match(input,NEW,Follow._NEW_in_innerCreator7834); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal615_tree = (object)adaptor.Create(string_literal615, "string_literal615", retval);
			adaptor.AddChild(root_0, string_literal615_tree);
			}
			DebugLocation(1239, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1239:9: ( nonWildcardTypeArgumentsOrDiamond )?
			int alt169=2;
			try { DebugEnterSubRule(169);
			try { DebugEnterDecision(169, false);
			int LA169_1 = input.LA(1);

			if ((LA169_1==LT))
			{
				alt169 = 1;
			}
			} finally { DebugExitDecision(169); }
			switch (alt169)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1239:10: nonWildcardTypeArgumentsOrDiamond
				{
				DebugLocation(1239, 10);
				PushFollow(Follow._nonWildcardTypeArgumentsOrDiamond_in_innerCreator7845);
				nonWildcardTypeArgumentsOrDiamond616=nonWildcardTypeArgumentsOrDiamond();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, nonWildcardTypeArgumentsOrDiamond616.Tree, nonWildcardTypeArgumentsOrDiamond616, "nonWildcardTypeArgumentsOrDiamond616", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(169); }

			DebugLocation(1241, 9);
			IDENTIFIER617=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_innerCreator7866); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER617_tree = (object)adaptor.Create(IDENTIFIER617, "IDENTIFIER617", retval);
			adaptor.AddChild(root_0, IDENTIFIER617_tree);
			}
			DebugLocation(1242, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1242:9: ( typeArguments )?
			int alt170=2;
			try { DebugEnterSubRule(170);
			try { DebugEnterDecision(170, false);
			int LA170_1 = input.LA(1);

			if ((LA170_1==LT))
			{
				alt170 = 1;
			}
			} finally { DebugExitDecision(170); }
			switch (alt170)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1242:10: typeArguments
				{
				DebugLocation(1242, 10);
				PushFollow(Follow._typeArguments_in_innerCreator7877);
				typeArguments618=typeArguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeArguments618.Tree, typeArguments618, "typeArguments618", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(170); }

			DebugLocation(1244, 9);
			PushFollow(Follow._classCreatorRest_in_innerCreator7898);
			classCreatorRest619=classCreatorRest();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, classCreatorRest619.Tree, classCreatorRest619, "classCreatorRest619", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("innerCreator", 104);
			LeaveRule("innerCreator", 104);
			LeaveRule_innerCreator();
			if (state.backtracking > 0) { Memoize(input, 104, innerCreator_StartIndex); }

		}
		DebugLocation(1245, 4);
		} finally { DebugExitRule(GrammarFileName, "innerCreator"); }
		return retval;

	}
	// $ANTLR end "innerCreator"

	partial void EnterRule_classCreatorRest();
	partial void LeaveRule_classCreatorRest();
	// $ANTLR start "classCreatorRest"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1247:1: classCreatorRest : arguments ( classBody )? ;
	[GrammarRule("classCreatorRest")]
	private Antlr3AstNode classCreatorRest()
	{
		EnterRule_classCreatorRest();
		EnterRule("classCreatorRest", 105);
		var retval = new Antlr3AstNode("classCreatorRest");
		
		retval.Start = (IToken)input.LT(1);
		int classCreatorRest_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode arguments620 = default(Antlr3AstNode);
		Antlr3AstNode classBody621 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "classCreatorRest");
		DebugLocation(1247, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 105)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1248:5: ( arguments ( classBody )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1248:9: arguments ( classBody )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1248, 9);
			PushFollow(Follow._arguments_in_classCreatorRest7917);
			arguments620=arguments();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, arguments620.Tree, arguments620, "arguments620", retval);
			DebugLocation(1249, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1249:9: ( classBody )?
			int alt171=2;
			try { DebugEnterSubRule(171);
			try { DebugEnterDecision(171, false);
			int LA171_1 = input.LA(1);

			if ((LA171_1==LBRACE))
			{
				alt171 = 1;
			}
			} finally { DebugExitDecision(171); }
			switch (alt171)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1249:10: classBody
				{
				DebugLocation(1249, 10);
				PushFollow(Follow._classBody_in_classCreatorRest7928);
				classBody621=classBody();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classBody621.Tree, classBody621, "classBody621", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(171); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("classCreatorRest", 105);
			LeaveRule("classCreatorRest", 105);
			LeaveRule_classCreatorRest();
			if (state.backtracking > 0) { Memoize(input, 105, classCreatorRest_StartIndex); }

		}
		DebugLocation(1251, 4);
		} finally { DebugExitRule(GrammarFileName, "classCreatorRest"); }
		return retval;

	}
	// $ANTLR end "classCreatorRest"

	partial void EnterRule_nonWildcardTypeArguments();
	partial void LeaveRule_nonWildcardTypeArguments();
	// $ANTLR start "nonWildcardTypeArguments"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1253:1: nonWildcardTypeArguments : '<' typeList '>' ;
	[GrammarRule("nonWildcardTypeArguments")]
	private Antlr3AstNode nonWildcardTypeArguments()
	{
		EnterRule_nonWildcardTypeArguments();
		EnterRule("nonWildcardTypeArguments", 106);
		var retval = new Antlr3AstNode("nonWildcardTypeArguments");
		
		retval.Start = (IToken)input.LT(1);
		int nonWildcardTypeArguments_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal622 = default(IToken);
		IToken char_literal624 = default(IToken);
		Antlr3AstNode typeList623 = default(Antlr3AstNode);

		object char_literal622_tree = default(object);
		object char_literal624_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "nonWildcardTypeArguments");
		DebugLocation(1253, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 106)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1254:5: ( '<' typeList '>' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1254:9: '<' typeList '>'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1254, 9);
			char_literal622=(IToken)Match(input,LT,Follow._LT_in_nonWildcardTypeArguments7958); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal622_tree = (object)adaptor.Create(char_literal622, "char_literal622", retval);
			adaptor.AddChild(root_0, char_literal622_tree);
			}
			DebugLocation(1254, 13);
			PushFollow(Follow._typeList_in_nonWildcardTypeArguments7960);
			typeList623=typeList();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, typeList623.Tree, typeList623, "typeList623", retval);
			DebugLocation(1254, 22);
			char_literal624=(IToken)Match(input,GT,Follow._GT_in_nonWildcardTypeArguments7962); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal624_tree = (object)adaptor.Create(char_literal624, "char_literal624", retval);
			adaptor.AddChild(root_0, char_literal624_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("nonWildcardTypeArguments", 106);
			LeaveRule("nonWildcardTypeArguments", 106);
			LeaveRule_nonWildcardTypeArguments();
			if (state.backtracking > 0) { Memoize(input, 106, nonWildcardTypeArguments_StartIndex); }

		}
		DebugLocation(1255, 4);
		} finally { DebugExitRule(GrammarFileName, "nonWildcardTypeArguments"); }
		return retval;

	}
	// $ANTLR end "nonWildcardTypeArguments"

	partial void EnterRule_typeArgumentsOrDiamond();
	partial void LeaveRule_typeArgumentsOrDiamond();
	// $ANTLR start "typeArgumentsOrDiamond"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1257:1: typeArgumentsOrDiamond : ( '<' '>' | typeArguments );
	[GrammarRule("typeArgumentsOrDiamond")]
	private Antlr3AstNode typeArgumentsOrDiamond()
	{
		EnterRule_typeArgumentsOrDiamond();
		EnterRule("typeArgumentsOrDiamond", 107);
		var retval = new Antlr3AstNode("typeArgumentsOrDiamond");
		
		retval.Start = (IToken)input.LT(1);
		int typeArgumentsOrDiamond_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal625 = default(IToken);
		IToken char_literal626 = default(IToken);
		Antlr3AstNode typeArguments627 = default(Antlr3AstNode);

		object char_literal625_tree = default(object);
		object char_literal626_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeArgumentsOrDiamond");
		DebugLocation(1257, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 107)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1258:5: ( '<' '>' | typeArguments )
			int alt172=2;
			try { DebugEnterDecision(172, false);
			int LA172_1 = input.LA(1);

			if ((LA172_1==LT))
			{
				int LA172_2 = input.LA(2);

				if ((LA172_2==GT))
				{
					alt172 = 1;
				}
				else if ((LA172_2==BOOLEAN||LA172_2==BYTE||LA172_2==CHAR||LA172_2==DOUBLE||LA172_2==FLOAT||LA172_2==IDENTIFIER||LA172_2==INT||LA172_2==LONG||LA172_2==QUES||LA172_2==SHORT))
				{
					alt172 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 172, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 172, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(172); }
			switch (alt172)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1258:9: '<' '>'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1258, 9);
				char_literal625=(IToken)Match(input,LT,Follow._LT_in_typeArgumentsOrDiamond7981); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal625_tree = (object)adaptor.Create(char_literal625, "char_literal625", retval);
				adaptor.AddChild(root_0, char_literal625_tree);
				}
				DebugLocation(1258, 13);
				char_literal626=(IToken)Match(input,GT,Follow._GT_in_typeArgumentsOrDiamond7983); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal626_tree = (object)adaptor.Create(char_literal626, "char_literal626", retval);
				adaptor.AddChild(root_0, char_literal626_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1259:9: typeArguments
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1259, 9);
				PushFollow(Follow._typeArguments_in_typeArgumentsOrDiamond7993);
				typeArguments627=typeArguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeArguments627.Tree, typeArguments627, "typeArguments627", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeArgumentsOrDiamond", 107);
			LeaveRule("typeArgumentsOrDiamond", 107);
			LeaveRule_typeArgumentsOrDiamond();
			if (state.backtracking > 0) { Memoize(input, 107, typeArgumentsOrDiamond_StartIndex); }

		}
		DebugLocation(1260, 4);
		} finally { DebugExitRule(GrammarFileName, "typeArgumentsOrDiamond"); }
		return retval;

	}
	// $ANTLR end "typeArgumentsOrDiamond"

	partial void EnterRule_nonWildcardTypeArgumentsOrDiamond();
	partial void LeaveRule_nonWildcardTypeArgumentsOrDiamond();
	// $ANTLR start "nonWildcardTypeArgumentsOrDiamond"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1262:1: nonWildcardTypeArgumentsOrDiamond : ( '<' '>' | nonWildcardTypeArguments );
	[GrammarRule("nonWildcardTypeArgumentsOrDiamond")]
	private Antlr3AstNode nonWildcardTypeArgumentsOrDiamond()
	{
		EnterRule_nonWildcardTypeArgumentsOrDiamond();
		EnterRule("nonWildcardTypeArgumentsOrDiamond", 108);
		var retval = new Antlr3AstNode("nonWildcardTypeArgumentsOrDiamond");
		
		retval.Start = (IToken)input.LT(1);
		int nonWildcardTypeArgumentsOrDiamond_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal628 = default(IToken);
		IToken char_literal629 = default(IToken);
		Antlr3AstNode nonWildcardTypeArguments630 = default(Antlr3AstNode);

		object char_literal628_tree = default(object);
		object char_literal629_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "nonWildcardTypeArgumentsOrDiamond");
		DebugLocation(1262, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 108)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1263:5: ( '<' '>' | nonWildcardTypeArguments )
			int alt173=2;
			try { DebugEnterDecision(173, false);
			int LA173_1 = input.LA(1);

			if ((LA173_1==LT))
			{
				int LA173_2 = input.LA(2);

				if ((LA173_2==GT))
				{
					alt173 = 1;
				}
				else if ((LA173_2==BOOLEAN||LA173_2==BYTE||LA173_2==CHAR||LA173_2==DOUBLE||LA173_2==FLOAT||LA173_2==IDENTIFIER||LA173_2==INT||LA173_2==LONG||LA173_2==SHORT))
				{
					alt173 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 173, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 173, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(173); }
			switch (alt173)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1263:9: '<' '>'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1263, 9);
				char_literal628=(IToken)Match(input,LT,Follow._LT_in_nonWildcardTypeArgumentsOrDiamond8012); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal628_tree = (object)adaptor.Create(char_literal628, "char_literal628", retval);
				adaptor.AddChild(root_0, char_literal628_tree);
				}
				DebugLocation(1263, 13);
				char_literal629=(IToken)Match(input,GT,Follow._GT_in_nonWildcardTypeArgumentsOrDiamond8014); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal629_tree = (object)adaptor.Create(char_literal629, "char_literal629", retval);
				adaptor.AddChild(root_0, char_literal629_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1264:9: nonWildcardTypeArguments
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1264, 9);
				PushFollow(Follow._nonWildcardTypeArguments_in_nonWildcardTypeArgumentsOrDiamond8024);
				nonWildcardTypeArguments630=nonWildcardTypeArguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, nonWildcardTypeArguments630.Tree, nonWildcardTypeArguments630, "nonWildcardTypeArguments630", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("nonWildcardTypeArgumentsOrDiamond", 108);
			LeaveRule("nonWildcardTypeArgumentsOrDiamond", 108);
			LeaveRule_nonWildcardTypeArgumentsOrDiamond();
			if (state.backtracking > 0) { Memoize(input, 108, nonWildcardTypeArgumentsOrDiamond_StartIndex); }

		}
		DebugLocation(1265, 4);
		} finally { DebugExitRule(GrammarFileName, "nonWildcardTypeArgumentsOrDiamond"); }
		return retval;

	}
	// $ANTLR end "nonWildcardTypeArgumentsOrDiamond"

	partial void EnterRule_arguments();
	partial void LeaveRule_arguments();
	// $ANTLR start "arguments"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1267:1: arguments : '(' ( expressionList )? ')' ;
	[GrammarRule("arguments")]
	private Antlr3AstNode arguments()
	{
		EnterRule_arguments();
		EnterRule("arguments", 109);
		var retval = new Antlr3AstNode("arguments");
		
		retval.Start = (IToken)input.LT(1);
		int arguments_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal631 = default(IToken);
		IToken char_literal633 = default(IToken);
		Antlr3AstNode expressionList632 = default(Antlr3AstNode);

		object char_literal631_tree = default(object);
		object char_literal633_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "arguments");
		DebugLocation(1267, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 109)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1268:5: ( '(' ( expressionList )? ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1268:9: '(' ( expressionList )? ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1268, 9);
			char_literal631=(IToken)Match(input,LPAREN,Follow._LPAREN_in_arguments8044); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal631_tree = (object)adaptor.Create(char_literal631, "char_literal631", retval);
			adaptor.AddChild(root_0, char_literal631_tree);
			}
			DebugLocation(1268, 13);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1268:13: ( expressionList )?
			int alt174=2;
			try { DebugEnterSubRule(174);
			try { DebugEnterDecision(174, false);
			int LA174_1 = input.LA(1);

			if ((LA174_1==BANG||LA174_1==BOOLEAN||LA174_1==BYTE||(LA174_1>=CHAR && LA174_1<=CHARLITERAL)||(LA174_1>=DOUBLE && LA174_1<=DOUBLELITERAL)||LA174_1==FALSE||(LA174_1>=FLOAT && LA174_1<=FLOATLITERAL)||LA174_1==IDENTIFIER||LA174_1==INT||LA174_1==INTLITERAL||(LA174_1>=LONG && LA174_1<=LPAREN)||(LA174_1>=NEW && LA174_1<=NULL)||LA174_1==PLUS||LA174_1==PLUSPLUS||LA174_1==SHORT||(LA174_1>=STRINGLITERAL && LA174_1<=SUB)||(LA174_1>=SUBSUB && LA174_1<=SUPER)||LA174_1==THIS||LA174_1==TILDE||LA174_1==TRUE||LA174_1==VOID))
			{
				alt174 = 1;
			}
			} finally { DebugExitDecision(174); }
			switch (alt174)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1268:14: expressionList
				{
				DebugLocation(1268, 14);
				PushFollow(Follow._expressionList_in_arguments8047);
				expressionList632=expressionList();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expressionList632.Tree, expressionList632, "expressionList632", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(174); }

			DebugLocation(1269, 12);
			char_literal633=(IToken)Match(input,RPAREN,Follow._RPAREN_in_arguments8060); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal633_tree = (object)adaptor.Create(char_literal633, "char_literal633", retval);
			adaptor.AddChild(root_0, char_literal633_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("arguments", 109);
			LeaveRule("arguments", 109);
			LeaveRule_arguments();
			if (state.backtracking > 0) { Memoize(input, 109, arguments_StartIndex); }

		}
		DebugLocation(1270, 4);
		} finally { DebugExitRule(GrammarFileName, "arguments"); }
		return retval;

	}
	// $ANTLR end "arguments"

	partial void EnterRule_intLiteral();
	partial void LeaveRule_intLiteral();
	// $ANTLR start "intLiteral"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1272:1: intLiteral : INTLITERAL ;
	[GrammarRule("intLiteral")]
	private Antlr3AstNode intLiteral()
	{
		EnterRule_intLiteral();
		EnterRule("intLiteral", 110);
		var retval = new Antlr3AstNode("intLiteral");
		
		retval.Start = (IToken)input.LT(1);
		int intLiteral_StartIndex = input.Index;

		object root_0 = default(object);

		IToken INTLITERAL634 = default(IToken);

		object INTLITERAL634_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "intLiteral");
		DebugLocation(1272, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 110)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1273:5: ( INTLITERAL )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1273:7: INTLITERAL
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1273, 7);
			INTLITERAL634=(IToken)Match(input,INTLITERAL,Follow._INTLITERAL_in_intLiteral8077); if (state.failed) return retval;
			if (state.backtracking == 0) {
			INTLITERAL634_tree = (object)adaptor.Create(INTLITERAL634, "INTLITERAL634", retval);
			adaptor.AddChild(root_0, INTLITERAL634_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("intLiteral", 110);
			LeaveRule("intLiteral", 110);
			LeaveRule_intLiteral();
			if (state.backtracking > 0) { Memoize(input, 110, intLiteral_StartIndex); }

		}
		DebugLocation(1274, 4);
		} finally { DebugExitRule(GrammarFileName, "intLiteral"); }
		return retval;

	}
	// $ANTLR end "intLiteral"

	partial void EnterRule_longLiteral();
	partial void LeaveRule_longLiteral();
	// $ANTLR start "longLiteral"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1276:1: longLiteral : LONGLITERAL ;
	[GrammarRule("longLiteral")]
	private Antlr3AstNode longLiteral()
	{
		EnterRule_longLiteral();
		EnterRule("longLiteral", 111);
		var retval = new Antlr3AstNode("longLiteral");
		
		retval.Start = (IToken)input.LT(1);
		int longLiteral_StartIndex = input.Index;

		object root_0 = default(object);

		IToken LONGLITERAL635 = default(IToken);

		object LONGLITERAL635_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "longLiteral");
		DebugLocation(1276, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 111)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1277:5: ( LONGLITERAL )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1277:7: LONGLITERAL
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1277, 7);
			LONGLITERAL635=(IToken)Match(input,LONGLITERAL,Follow._LONGLITERAL_in_longLiteral8094); if (state.failed) return retval;
			if (state.backtracking == 0) {
			LONGLITERAL635_tree = (object)adaptor.Create(LONGLITERAL635, "LONGLITERAL635", retval);
			adaptor.AddChild(root_0, LONGLITERAL635_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("longLiteral", 111);
			LeaveRule("longLiteral", 111);
			LeaveRule_longLiteral();
			if (state.backtracking > 0) { Memoize(input, 111, longLiteral_StartIndex); }

		}
		DebugLocation(1278, 4);
		} finally { DebugExitRule(GrammarFileName, "longLiteral"); }
		return retval;

	}
	// $ANTLR end "longLiteral"

	partial void EnterRule_floatLiteral();
	partial void LeaveRule_floatLiteral();
	// $ANTLR start "floatLiteral"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1280:1: floatLiteral : FLOATLITERAL ;
	[GrammarRule("floatLiteral")]
	private Antlr3AstNode floatLiteral()
	{
		EnterRule_floatLiteral();
		EnterRule("floatLiteral", 112);
		var retval = new Antlr3AstNode("floatLiteral");
		
		retval.Start = (IToken)input.LT(1);
		int floatLiteral_StartIndex = input.Index;

		object root_0 = default(object);

		IToken FLOATLITERAL636 = default(IToken);

		object FLOATLITERAL636_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "floatLiteral");
		DebugLocation(1280, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 112)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1281:5: ( FLOATLITERAL )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1281:7: FLOATLITERAL
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1281, 7);
			FLOATLITERAL636=(IToken)Match(input,FLOATLITERAL,Follow._FLOATLITERAL_in_floatLiteral8111); if (state.failed) return retval;
			if (state.backtracking == 0) {
			FLOATLITERAL636_tree = (object)adaptor.Create(FLOATLITERAL636, "FLOATLITERAL636", retval);
			adaptor.AddChild(root_0, FLOATLITERAL636_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("floatLiteral", 112);
			LeaveRule("floatLiteral", 112);
			LeaveRule_floatLiteral();
			if (state.backtracking > 0) { Memoize(input, 112, floatLiteral_StartIndex); }

		}
		DebugLocation(1282, 4);
		} finally { DebugExitRule(GrammarFileName, "floatLiteral"); }
		return retval;

	}
	// $ANTLR end "floatLiteral"

	partial void EnterRule_doubleLiteral();
	partial void LeaveRule_doubleLiteral();
	// $ANTLR start "doubleLiteral"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1284:1: doubleLiteral : DOUBLELITERAL ;
	[GrammarRule("doubleLiteral")]
	private Antlr3AstNode doubleLiteral()
	{
		EnterRule_doubleLiteral();
		EnterRule("doubleLiteral", 113);
		var retval = new Antlr3AstNode("doubleLiteral");
		
		retval.Start = (IToken)input.LT(1);
		int doubleLiteral_StartIndex = input.Index;

		object root_0 = default(object);

		IToken DOUBLELITERAL637 = default(IToken);

		object DOUBLELITERAL637_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "doubleLiteral");
		DebugLocation(1284, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 113)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1285:5: ( DOUBLELITERAL )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1285:7: DOUBLELITERAL
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1285, 7);
			DOUBLELITERAL637=(IToken)Match(input,DOUBLELITERAL,Follow._DOUBLELITERAL_in_doubleLiteral8128); if (state.failed) return retval;
			if (state.backtracking == 0) {
			DOUBLELITERAL637_tree = (object)adaptor.Create(DOUBLELITERAL637, "DOUBLELITERAL637", retval);
			adaptor.AddChild(root_0, DOUBLELITERAL637_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("doubleLiteral", 113);
			LeaveRule("doubleLiteral", 113);
			LeaveRule_doubleLiteral();
			if (state.backtracking > 0) { Memoize(input, 113, doubleLiteral_StartIndex); }

		}
		DebugLocation(1286, 4);
		} finally { DebugExitRule(GrammarFileName, "doubleLiteral"); }
		return retval;

	}
	// $ANTLR end "doubleLiteral"

	partial void EnterRule_charLiteral();
	partial void LeaveRule_charLiteral();
	// $ANTLR start "charLiteral"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1288:1: charLiteral : CHARLITERAL ;
	[GrammarRule("charLiteral")]
	private Antlr3AstNode charLiteral()
	{
		EnterRule_charLiteral();
		EnterRule("charLiteral", 114);
		var retval = new Antlr3AstNode("charLiteral");
		
		retval.Start = (IToken)input.LT(1);
		int charLiteral_StartIndex = input.Index;

		object root_0 = default(object);

		IToken CHARLITERAL638 = default(IToken);

		object CHARLITERAL638_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "charLiteral");
		DebugLocation(1288, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 114)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1289:5: ( CHARLITERAL )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1289:7: CHARLITERAL
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1289, 7);
			CHARLITERAL638=(IToken)Match(input,CHARLITERAL,Follow._CHARLITERAL_in_charLiteral8145); if (state.failed) return retval;
			if (state.backtracking == 0) {
			CHARLITERAL638_tree = (object)adaptor.Create(CHARLITERAL638, "CHARLITERAL638", retval);
			adaptor.AddChild(root_0, CHARLITERAL638_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("charLiteral", 114);
			LeaveRule("charLiteral", 114);
			LeaveRule_charLiteral();
			if (state.backtracking > 0) { Memoize(input, 114, charLiteral_StartIndex); }

		}
		DebugLocation(1290, 4);
		} finally { DebugExitRule(GrammarFileName, "charLiteral"); }
		return retval;

	}
	// $ANTLR end "charLiteral"

	partial void EnterRule_stringLiteral();
	partial void LeaveRule_stringLiteral();
	// $ANTLR start "stringLiteral"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1292:1: stringLiteral : STRINGLITERAL ;
	[GrammarRule("stringLiteral")]
	private Antlr3AstNode stringLiteral()
	{
		EnterRule_stringLiteral();
		EnterRule("stringLiteral", 115);
		var retval = new Antlr3AstNode("stringLiteral");
		
		retval.Start = (IToken)input.LT(1);
		int stringLiteral_StartIndex = input.Index;

		object root_0 = default(object);

		IToken STRINGLITERAL639 = default(IToken);

		object STRINGLITERAL639_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "stringLiteral");
		DebugLocation(1292, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 115)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1293:5: ( STRINGLITERAL )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1293:7: STRINGLITERAL
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1293, 7);
			STRINGLITERAL639=(IToken)Match(input,STRINGLITERAL,Follow._STRINGLITERAL_in_stringLiteral8162); if (state.failed) return retval;
			if (state.backtracking == 0) {
			STRINGLITERAL639_tree = (object)adaptor.Create(STRINGLITERAL639, "STRINGLITERAL639", retval);
			adaptor.AddChild(root_0, STRINGLITERAL639_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("stringLiteral", 115);
			LeaveRule("stringLiteral", 115);
			LeaveRule_stringLiteral();
			if (state.backtracking > 0) { Memoize(input, 115, stringLiteral_StartIndex); }

		}
		DebugLocation(1294, 4);
		} finally { DebugExitRule(GrammarFileName, "stringLiteral"); }
		return retval;

	}
	// $ANTLR end "stringLiteral"

	partial void EnterRule_trueLiteral();
	partial void LeaveRule_trueLiteral();
	// $ANTLR start "trueLiteral"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1296:1: trueLiteral : TRUE ;
	[GrammarRule("trueLiteral")]
	private Antlr3AstNode trueLiteral()
	{
		EnterRule_trueLiteral();
		EnterRule("trueLiteral", 116);
		var retval = new Antlr3AstNode("trueLiteral");
		
		retval.Start = (IToken)input.LT(1);
		int trueLiteral_StartIndex = input.Index;

		object root_0 = default(object);

		IToken TRUE640 = default(IToken);

		object TRUE640_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "trueLiteral");
		DebugLocation(1296, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 116)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1297:5: ( TRUE )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1297:7: TRUE
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1297, 7);
			TRUE640=(IToken)Match(input,TRUE,Follow._TRUE_in_trueLiteral8179); if (state.failed) return retval;
			if (state.backtracking == 0) {
			TRUE640_tree = (object)adaptor.Create(TRUE640, "TRUE640", retval);
			adaptor.AddChild(root_0, TRUE640_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("trueLiteral", 116);
			LeaveRule("trueLiteral", 116);
			LeaveRule_trueLiteral();
			if (state.backtracking > 0) { Memoize(input, 116, trueLiteral_StartIndex); }

		}
		DebugLocation(1298, 4);
		} finally { DebugExitRule(GrammarFileName, "trueLiteral"); }
		return retval;

	}
	// $ANTLR end "trueLiteral"

	partial void EnterRule_falseLiteral();
	partial void LeaveRule_falseLiteral();
	// $ANTLR start "falseLiteral"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1300:1: falseLiteral : FALSE ;
	[GrammarRule("falseLiteral")]
	private Antlr3AstNode falseLiteral()
	{
		EnterRule_falseLiteral();
		EnterRule("falseLiteral", 117);
		var retval = new Antlr3AstNode("falseLiteral");
		
		retval.Start = (IToken)input.LT(1);
		int falseLiteral_StartIndex = input.Index;

		object root_0 = default(object);

		IToken FALSE641 = default(IToken);

		object FALSE641_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "falseLiteral");
		DebugLocation(1300, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 117)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1301:5: ( FALSE )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1301:7: FALSE
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1301, 7);
			FALSE641=(IToken)Match(input,FALSE,Follow._FALSE_in_falseLiteral8196); if (state.failed) return retval;
			if (state.backtracking == 0) {
			FALSE641_tree = (object)adaptor.Create(FALSE641, "FALSE641", retval);
			adaptor.AddChild(root_0, FALSE641_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("falseLiteral", 117);
			LeaveRule("falseLiteral", 117);
			LeaveRule_falseLiteral();
			if (state.backtracking > 0) { Memoize(input, 117, falseLiteral_StartIndex); }

		}
		DebugLocation(1302, 4);
		} finally { DebugExitRule(GrammarFileName, "falseLiteral"); }
		return retval;

	}
	// $ANTLR end "falseLiteral"

	partial void EnterRule_nullLiteral();
	partial void LeaveRule_nullLiteral();
	// $ANTLR start "nullLiteral"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1304:1: nullLiteral : NULL ;
	[GrammarRule("nullLiteral")]
	private Antlr3AstNode nullLiteral()
	{
		EnterRule_nullLiteral();
		EnterRule("nullLiteral", 118);
		var retval = new Antlr3AstNode("nullLiteral");
		
		retval.Start = (IToken)input.LT(1);
		int nullLiteral_StartIndex = input.Index;

		object root_0 = default(object);

		IToken NULL642 = default(IToken);

		object NULL642_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "nullLiteral");
		DebugLocation(1304, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 118)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1305:5: ( NULL )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1305:7: NULL
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1305, 7);
			NULL642=(IToken)Match(input,NULL,Follow._NULL_in_nullLiteral8213); if (state.failed) return retval;
			if (state.backtracking == 0) {
			NULL642_tree = (object)adaptor.Create(NULL642, "NULL642", retval);
			adaptor.AddChild(root_0, NULL642_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("nullLiteral", 118);
			LeaveRule("nullLiteral", 118);
			LeaveRule_nullLiteral();
			if (state.backtracking > 0) { Memoize(input, 118, nullLiteral_StartIndex); }

		}
		DebugLocation(1306, 4);
		} finally { DebugExitRule(GrammarFileName, "nullLiteral"); }
		return retval;

	}
	// $ANTLR end "nullLiteral"

	partial void EnterRule_literal();
	partial void LeaveRule_literal();
	// $ANTLR start "literal"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1308:1: literal : ( intLiteral | longLiteral | floatLiteral | doubleLiteral | charLiteral | stringLiteral | trueLiteral | falseLiteral | nullLiteral );
	[GrammarRule("literal")]
	private Antlr3AstNode literal()
	{
		EnterRule_literal();
		EnterRule("literal", 119);
		var retval = new Antlr3AstNode("literal");
		
		retval.Start = (IToken)input.LT(1);
		int literal_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode intLiteral643 = default(Antlr3AstNode);
		Antlr3AstNode longLiteral644 = default(Antlr3AstNode);
		Antlr3AstNode floatLiteral645 = default(Antlr3AstNode);
		Antlr3AstNode doubleLiteral646 = default(Antlr3AstNode);
		Antlr3AstNode charLiteral647 = default(Antlr3AstNode);
		Antlr3AstNode stringLiteral648 = default(Antlr3AstNode);
		Antlr3AstNode trueLiteral649 = default(Antlr3AstNode);
		Antlr3AstNode falseLiteral650 = default(Antlr3AstNode);
		Antlr3AstNode nullLiteral651 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "literal");
		DebugLocation(1308, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 119)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1309:5: ( intLiteral | longLiteral | floatLiteral | doubleLiteral | charLiteral | stringLiteral | trueLiteral | falseLiteral | nullLiteral )
			int alt175=9;
			try { DebugEnterDecision(175, false);
			switch (input.LA(1))
			{
			case INTLITERAL:
				{
				alt175 = 1;
				}
				break;
			case LONGLITERAL:
				{
				alt175 = 2;
				}
				break;
			case FLOATLITERAL:
				{
				alt175 = 3;
				}
				break;
			case DOUBLELITERAL:
				{
				alt175 = 4;
				}
				break;
			case CHARLITERAL:
				{
				alt175 = 5;
				}
				break;
			case STRINGLITERAL:
				{
				alt175 = 6;
				}
				break;
			case TRUE:
				{
				alt175 = 7;
				}
				break;
			case FALSE:
				{
				alt175 = 8;
				}
				break;
			case NULL:
				{
				alt175 = 9;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 175, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(175); }
			switch (alt175)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1309:9: intLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1309, 9);
				PushFollow(Follow._intLiteral_in_literal8233);
				intLiteral643=intLiteral();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, intLiteral643.Tree, intLiteral643, "intLiteral643", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1310:9: longLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1310, 9);
				PushFollow(Follow._longLiteral_in_literal8243);
				longLiteral644=longLiteral();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, longLiteral644.Tree, longLiteral644, "longLiteral644", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1311:9: floatLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1311, 9);
				PushFollow(Follow._floatLiteral_in_literal8253);
				floatLiteral645=floatLiteral();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, floatLiteral645.Tree, floatLiteral645, "floatLiteral645", retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1312:9: doubleLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1312, 9);
				PushFollow(Follow._doubleLiteral_in_literal8263);
				doubleLiteral646=doubleLiteral();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, doubleLiteral646.Tree, doubleLiteral646, "doubleLiteral646", retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1313:9: charLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1313, 9);
				PushFollow(Follow._charLiteral_in_literal8273);
				charLiteral647=charLiteral();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, charLiteral647.Tree, charLiteral647, "charLiteral647", retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1314:9: stringLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1314, 9);
				PushFollow(Follow._stringLiteral_in_literal8283);
				stringLiteral648=stringLiteral();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, stringLiteral648.Tree, stringLiteral648, "stringLiteral648", retval);

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1315:9: trueLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1315, 9);
				PushFollow(Follow._trueLiteral_in_literal8293);
				trueLiteral649=trueLiteral();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, trueLiteral649.Tree, trueLiteral649, "trueLiteral649", retval);

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1316:9: falseLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1316, 9);
				PushFollow(Follow._falseLiteral_in_literal8303);
				falseLiteral650=falseLiteral();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, falseLiteral650.Tree, falseLiteral650, "falseLiteral650", retval);

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1317:9: nullLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1317, 9);
				PushFollow(Follow._nullLiteral_in_literal8313);
				nullLiteral651=nullLiteral();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, nullLiteral651.Tree, nullLiteral651, "nullLiteral651", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("literal", 119);
			LeaveRule("literal", 119);
			LeaveRule_literal();
			if (state.backtracking > 0) { Memoize(input, 119, literal_StartIndex); }

		}
		DebugLocation(1318, 4);
		} finally { DebugExitRule(GrammarFileName, "literal"); }
		return retval;

	}
	// $ANTLR end "literal"

	partial void EnterRule_classHeader();
	partial void LeaveRule_classHeader();
	// $ANTLR start "classHeader"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1324:1: classHeader : modifiers 'class' IDENTIFIER ;
	[GrammarRule("classHeader")]
	private Antlr3AstNode classHeader()
	{
		EnterRule_classHeader();
		EnterRule("classHeader", 120);
		var retval = new Antlr3AstNode("classHeader");
		
		retval.Start = (IToken)input.LT(1);
		int classHeader_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal653 = default(IToken);
		IToken IDENTIFIER654 = default(IToken);
		Antlr3AstNode modifiers652 = default(Antlr3AstNode);

		object string_literal653_tree = default(object);
		object IDENTIFIER654_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "classHeader");
		DebugLocation(1324, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 120)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1325:5: ( modifiers 'class' IDENTIFIER )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1325:9: modifiers 'class' IDENTIFIER
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1325, 9);
			PushFollow(Follow._modifiers_in_classHeader8337);
			modifiers652=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers652.Tree, modifiers652, "modifiers652", retval);
			DebugLocation(1325, 19);
			string_literal653=(IToken)Match(input,CLASS,Follow._CLASS_in_classHeader8339); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal653_tree = (object)adaptor.Create(string_literal653, "string_literal653", retval);
			adaptor.AddChild(root_0, string_literal653_tree);
			}
			DebugLocation(1325, 27);
			IDENTIFIER654=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_classHeader8341); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER654_tree = (object)adaptor.Create(IDENTIFIER654, "IDENTIFIER654", retval);
			adaptor.AddChild(root_0, IDENTIFIER654_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("classHeader", 120);
			LeaveRule("classHeader", 120);
			LeaveRule_classHeader();
			if (state.backtracking > 0) { Memoize(input, 120, classHeader_StartIndex); }

		}
		DebugLocation(1326, 4);
		} finally { DebugExitRule(GrammarFileName, "classHeader"); }
		return retval;

	}
	// $ANTLR end "classHeader"

	partial void EnterRule_enumHeader();
	partial void LeaveRule_enumHeader();
	// $ANTLR start "enumHeader"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1328:1: enumHeader : modifiers ( 'enum' | IDENTIFIER ) IDENTIFIER ;
	[GrammarRule("enumHeader")]
	private Antlr3AstNode enumHeader()
	{
		EnterRule_enumHeader();
		EnterRule("enumHeader", 121);
		var retval = new Antlr3AstNode("enumHeader");
		
		retval.Start = (IToken)input.LT(1);
		int enumHeader_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set656 = default(IToken);
		IToken IDENTIFIER657 = default(IToken);
		Antlr3AstNode modifiers655 = default(Antlr3AstNode);

		object set656_tree = default(object);
		object IDENTIFIER657_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enumHeader");
		DebugLocation(1328, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 121)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1329:5: ( modifiers ( 'enum' | IDENTIFIER ) IDENTIFIER )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1329:9: modifiers ( 'enum' | IDENTIFIER ) IDENTIFIER
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1329, 9);
			PushFollow(Follow._modifiers_in_enumHeader8361);
			modifiers655=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers655.Tree, modifiers655, "modifiers655", retval);
			DebugLocation(1329, 19);

			set656=(IToken)input.LT(1);
			if (input.LA(1)==ENUM||input.LA(1)==IDENTIFIER)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set656, "set656", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}

			DebugLocation(1329, 39);
			IDENTIFIER657=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_enumHeader8369); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER657_tree = (object)adaptor.Create(IDENTIFIER657, "IDENTIFIER657", retval);
			adaptor.AddChild(root_0, IDENTIFIER657_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enumHeader", 121);
			LeaveRule("enumHeader", 121);
			LeaveRule_enumHeader();
			if (state.backtracking > 0) { Memoize(input, 121, enumHeader_StartIndex); }

		}
		DebugLocation(1330, 4);
		} finally { DebugExitRule(GrammarFileName, "enumHeader"); }
		return retval;

	}
	// $ANTLR end "enumHeader"

	partial void EnterRule_interfaceHeader();
	partial void LeaveRule_interfaceHeader();
	// $ANTLR start "interfaceHeader"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1332:1: interfaceHeader : modifiers 'interface' IDENTIFIER ;
	[GrammarRule("interfaceHeader")]
	private Antlr3AstNode interfaceHeader()
	{
		EnterRule_interfaceHeader();
		EnterRule("interfaceHeader", 122);
		var retval = new Antlr3AstNode("interfaceHeader");
		
		retval.Start = (IToken)input.LT(1);
		int interfaceHeader_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal659 = default(IToken);
		IToken IDENTIFIER660 = default(IToken);
		Antlr3AstNode modifiers658 = default(Antlr3AstNode);

		object string_literal659_tree = default(object);
		object IDENTIFIER660_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interfaceHeader");
		DebugLocation(1332, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 122)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1333:5: ( modifiers 'interface' IDENTIFIER )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1333:9: modifiers 'interface' IDENTIFIER
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1333, 9);
			PushFollow(Follow._modifiers_in_interfaceHeader8389);
			modifiers658=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers658.Tree, modifiers658, "modifiers658", retval);
			DebugLocation(1333, 19);
			string_literal659=(IToken)Match(input,INTERFACE,Follow._INTERFACE_in_interfaceHeader8391); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal659_tree = (object)adaptor.Create(string_literal659, "string_literal659", retval);
			adaptor.AddChild(root_0, string_literal659_tree);
			}
			DebugLocation(1333, 31);
			IDENTIFIER660=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_interfaceHeader8393); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER660_tree = (object)adaptor.Create(IDENTIFIER660, "IDENTIFIER660", retval);
			adaptor.AddChild(root_0, IDENTIFIER660_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interfaceHeader", 122);
			LeaveRule("interfaceHeader", 122);
			LeaveRule_interfaceHeader();
			if (state.backtracking > 0) { Memoize(input, 122, interfaceHeader_StartIndex); }

		}
		DebugLocation(1334, 4);
		} finally { DebugExitRule(GrammarFileName, "interfaceHeader"); }
		return retval;

	}
	// $ANTLR end "interfaceHeader"

	partial void EnterRule_annotationHeader();
	partial void LeaveRule_annotationHeader();
	// $ANTLR start "annotationHeader"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1336:1: annotationHeader : modifiers '@' 'interface' IDENTIFIER ;
	[GrammarRule("annotationHeader")]
	private Antlr3AstNode annotationHeader()
	{
		EnterRule_annotationHeader();
		EnterRule("annotationHeader", 123);
		var retval = new Antlr3AstNode("annotationHeader");
		
		retval.Start = (IToken)input.LT(1);
		int annotationHeader_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal662 = default(IToken);
		IToken string_literal663 = default(IToken);
		IToken IDENTIFIER664 = default(IToken);
		Antlr3AstNode modifiers661 = default(Antlr3AstNode);

		object char_literal662_tree = default(object);
		object string_literal663_tree = default(object);
		object IDENTIFIER664_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "annotationHeader");
		DebugLocation(1336, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 123)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1337:5: ( modifiers '@' 'interface' IDENTIFIER )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1337:9: modifiers '@' 'interface' IDENTIFIER
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1337, 9);
			PushFollow(Follow._modifiers_in_annotationHeader8413);
			modifiers661=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers661.Tree, modifiers661, "modifiers661", retval);
			DebugLocation(1337, 19);
			char_literal662=(IToken)Match(input,MONKEYS_AT,Follow._MONKEYS_AT_in_annotationHeader8415); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal662_tree = (object)adaptor.Create(char_literal662, "char_literal662", retval);
			adaptor.AddChild(root_0, char_literal662_tree);
			}
			DebugLocation(1337, 23);
			string_literal663=(IToken)Match(input,INTERFACE,Follow._INTERFACE_in_annotationHeader8417); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal663_tree = (object)adaptor.Create(string_literal663, "string_literal663", retval);
			adaptor.AddChild(root_0, string_literal663_tree);
			}
			DebugLocation(1337, 35);
			IDENTIFIER664=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_annotationHeader8419); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER664_tree = (object)adaptor.Create(IDENTIFIER664, "IDENTIFIER664", retval);
			adaptor.AddChild(root_0, IDENTIFIER664_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("annotationHeader", 123);
			LeaveRule("annotationHeader", 123);
			LeaveRule_annotationHeader();
			if (state.backtracking > 0) { Memoize(input, 123, annotationHeader_StartIndex); }

		}
		DebugLocation(1338, 4);
		} finally { DebugExitRule(GrammarFileName, "annotationHeader"); }
		return retval;

	}
	// $ANTLR end "annotationHeader"

	partial void EnterRule_typeHeader();
	partial void LeaveRule_typeHeader();
	// $ANTLR start "typeHeader"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1340:1: typeHeader : modifiers ( 'class' | 'enum' | ( ( '@' )? 'interface' ) ) IDENTIFIER ;
	[GrammarRule("typeHeader")]
	private Antlr3AstNode typeHeader()
	{
		EnterRule_typeHeader();
		EnterRule("typeHeader", 124);
		var retval = new Antlr3AstNode("typeHeader");
		
		retval.Start = (IToken)input.LT(1);
		int typeHeader_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal666 = default(IToken);
		IToken string_literal667 = default(IToken);
		IToken char_literal668 = default(IToken);
		IToken string_literal669 = default(IToken);
		IToken IDENTIFIER670 = default(IToken);
		Antlr3AstNode modifiers665 = default(Antlr3AstNode);

		object string_literal666_tree = default(object);
		object string_literal667_tree = default(object);
		object char_literal668_tree = default(object);
		object string_literal669_tree = default(object);
		object IDENTIFIER670_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeHeader");
		DebugLocation(1340, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 124)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1341:5: ( modifiers ( 'class' | 'enum' | ( ( '@' )? 'interface' ) ) IDENTIFIER )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1341:9: modifiers ( 'class' | 'enum' | ( ( '@' )? 'interface' ) ) IDENTIFIER
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1341, 9);
			PushFollow(Follow._modifiers_in_typeHeader8439);
			modifiers665=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers665.Tree, modifiers665, "modifiers665", retval);
			DebugLocation(1341, 19);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1341:19: ( 'class' | 'enum' | ( ( '@' )? 'interface' ) )
			int alt177=3;
			try { DebugEnterSubRule(177);
			try { DebugEnterDecision(177, false);
			switch (input.LA(1))
			{
			case CLASS:
				{
				alt177 = 1;
				}
				break;
			case ENUM:
				{
				alt177 = 2;
				}
				break;
			case INTERFACE:
			case MONKEYS_AT:
				{
				alt177 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 177, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(177); }
			switch (alt177)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1341:20: 'class'
				{
				DebugLocation(1341, 20);
				string_literal666=(IToken)Match(input,CLASS,Follow._CLASS_in_typeHeader8442); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal666_tree = (object)adaptor.Create(string_literal666, "string_literal666", retval);
				adaptor.AddChild(root_0, string_literal666_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1341:28: 'enum'
				{
				DebugLocation(1341, 28);
				string_literal667=(IToken)Match(input,ENUM,Follow._ENUM_in_typeHeader8444); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal667_tree = (object)adaptor.Create(string_literal667, "string_literal667", retval);
				adaptor.AddChild(root_0, string_literal667_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1341:35: ( ( '@' )? 'interface' )
				{
				DebugLocation(1341, 35);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1341:35: ( ( '@' )? 'interface' )
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1341:36: ( '@' )? 'interface'
				{
				DebugLocation(1341, 36);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1341:36: ( '@' )?
				int alt176=2;
				try { DebugEnterSubRule(176);
				try { DebugEnterDecision(176, false);
				int LA176_1 = input.LA(1);

				if ((LA176_1==MONKEYS_AT))
				{
					alt176 = 1;
				}
				} finally { DebugExitDecision(176); }
				switch (alt176)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1341:36: '@'
					{
					DebugLocation(1341, 36);
					char_literal668=(IToken)Match(input,MONKEYS_AT,Follow._MONKEYS_AT_in_typeHeader8447); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal668_tree = (object)adaptor.Create(char_literal668, "char_literal668", retval);
					adaptor.AddChild(root_0, char_literal668_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(176); }

				DebugLocation(1341, 42);
				string_literal669=(IToken)Match(input,INTERFACE,Follow._INTERFACE_in_typeHeader8451); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal669_tree = (object)adaptor.Create(string_literal669, "string_literal669", retval);
				adaptor.AddChild(root_0, string_literal669_tree);
				}

				}


				}
				break;

			}
			} finally { DebugExitSubRule(177); }

			DebugLocation(1341, 56);
			IDENTIFIER670=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_typeHeader8455); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER670_tree = (object)adaptor.Create(IDENTIFIER670, "IDENTIFIER670", retval);
			adaptor.AddChild(root_0, IDENTIFIER670_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeHeader", 124);
			LeaveRule("typeHeader", 124);
			LeaveRule_typeHeader();
			if (state.backtracking > 0) { Memoize(input, 124, typeHeader_StartIndex); }

		}
		DebugLocation(1342, 4);
		} finally { DebugExitRule(GrammarFileName, "typeHeader"); }
		return retval;

	}
	// $ANTLR end "typeHeader"

	partial void EnterRule_methodHeader();
	partial void LeaveRule_methodHeader();
	// $ANTLR start "methodHeader"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1344:1: methodHeader : modifiers ( typeParameters )? ( type | 'void' )? IDENTIFIER '(' ;
	[GrammarRule("methodHeader")]
	private Antlr3AstNode methodHeader()
	{
		EnterRule_methodHeader();
		EnterRule("methodHeader", 125);
		var retval = new Antlr3AstNode("methodHeader");
		
		retval.Start = (IToken)input.LT(1);
		int methodHeader_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal674 = default(IToken);
		IToken IDENTIFIER675 = default(IToken);
		IToken char_literal676 = default(IToken);
		Antlr3AstNode modifiers671 = default(Antlr3AstNode);
		Antlr3AstNode typeParameters672 = default(Antlr3AstNode);
		Antlr3AstNode type673 = default(Antlr3AstNode);

		object string_literal674_tree = default(object);
		object IDENTIFIER675_tree = default(object);
		object char_literal676_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "methodHeader");
		DebugLocation(1344, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 125)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1345:5: ( modifiers ( typeParameters )? ( type | 'void' )? IDENTIFIER '(' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1345:9: modifiers ( typeParameters )? ( type | 'void' )? IDENTIFIER '('
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1345, 9);
			PushFollow(Follow._modifiers_in_methodHeader8475);
			modifiers671=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers671.Tree, modifiers671, "modifiers671", retval);
			DebugLocation(1345, 19);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1345:19: ( typeParameters )?
			int alt178=2;
			try { DebugEnterSubRule(178);
			try { DebugEnterDecision(178, false);
			int LA178_1 = input.LA(1);

			if ((LA178_1==LT))
			{
				alt178 = 1;
			}
			} finally { DebugExitDecision(178); }
			switch (alt178)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1345:19: typeParameters
				{
				DebugLocation(1345, 19);
				PushFollow(Follow._typeParameters_in_methodHeader8477);
				typeParameters672=typeParameters();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeParameters672.Tree, typeParameters672, "typeParameters672", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(178); }

			DebugLocation(1345, 35);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1345:35: ( type | 'void' )?
			int alt179=3;
			try { DebugEnterSubRule(179);
			try { DebugEnterDecision(179, false);
			switch (input.LA(1))
			{
			case IDENTIFIER:
				{
				int LA179_2 = input.LA(2);

				if ((LA179_2==DOT||LA179_2==IDENTIFIER||LA179_2==LBRACKET||LA179_2==LT))
				{
					alt179 = 1;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
				{
				alt179 = 1;
				}
				break;
			case VOID:
				{
				alt179 = 2;
				}
				break;
			}

			} finally { DebugExitDecision(179); }
			switch (alt179)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1345:36: type
				{
				DebugLocation(1345, 36);
				PushFollow(Follow._type_in_methodHeader8481);
				type673=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type673.Tree, type673, "type673", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1345:41: 'void'
				{
				DebugLocation(1345, 41);
				string_literal674=(IToken)Match(input,VOID,Follow._VOID_in_methodHeader8483); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal674_tree = (object)adaptor.Create(string_literal674, "string_literal674", retval);
				adaptor.AddChild(root_0, string_literal674_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(179); }

			DebugLocation(1345, 50);
			IDENTIFIER675=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_methodHeader8487); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER675_tree = (object)adaptor.Create(IDENTIFIER675, "IDENTIFIER675", retval);
			adaptor.AddChild(root_0, IDENTIFIER675_tree);
			}
			DebugLocation(1345, 61);
			char_literal676=(IToken)Match(input,LPAREN,Follow._LPAREN_in_methodHeader8489); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal676_tree = (object)adaptor.Create(char_literal676, "char_literal676", retval);
			adaptor.AddChild(root_0, char_literal676_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("methodHeader", 125);
			LeaveRule("methodHeader", 125);
			LeaveRule_methodHeader();
			if (state.backtracking > 0) { Memoize(input, 125, methodHeader_StartIndex); }

		}
		DebugLocation(1346, 4);
		} finally { DebugExitRule(GrammarFileName, "methodHeader"); }
		return retval;

	}
	// $ANTLR end "methodHeader"

	partial void EnterRule_fieldHeader();
	partial void LeaveRule_fieldHeader();
	// $ANTLR start "fieldHeader"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1348:1: fieldHeader : modifiers type IDENTIFIER ( '[' ']' )* ( '=' | ',' | ';' ) ;
	[GrammarRule("fieldHeader")]
	private Antlr3AstNode fieldHeader()
	{
		EnterRule_fieldHeader();
		EnterRule("fieldHeader", 126);
		var retval = new Antlr3AstNode("fieldHeader");
		
		retval.Start = (IToken)input.LT(1);
		int fieldHeader_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER679 = default(IToken);
		IToken char_literal680 = default(IToken);
		IToken char_literal681 = default(IToken);
		IToken set682 = default(IToken);
		Antlr3AstNode modifiers677 = default(Antlr3AstNode);
		Antlr3AstNode type678 = default(Antlr3AstNode);

		object IDENTIFIER679_tree = default(object);
		object char_literal680_tree = default(object);
		object char_literal681_tree = default(object);
		object set682_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "fieldHeader");
		DebugLocation(1348, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 126)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1349:5: ( modifiers type IDENTIFIER ( '[' ']' )* ( '=' | ',' | ';' ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1349:9: modifiers type IDENTIFIER ( '[' ']' )* ( '=' | ',' | ';' )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1349, 9);
			PushFollow(Follow._modifiers_in_fieldHeader8509);
			modifiers677=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers677.Tree, modifiers677, "modifiers677", retval);
			DebugLocation(1349, 19);
			PushFollow(Follow._type_in_fieldHeader8511);
			type678=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type678.Tree, type678, "type678", retval);
			DebugLocation(1349, 24);
			IDENTIFIER679=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_fieldHeader8513); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER679_tree = (object)adaptor.Create(IDENTIFIER679, "IDENTIFIER679", retval);
			adaptor.AddChild(root_0, IDENTIFIER679_tree);
			}
			DebugLocation(1349, 35);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1349:35: ( '[' ']' )*
			try { DebugEnterSubRule(180);
			while (true)
			{
				int alt180=2;
				try { DebugEnterDecision(180, false);
				int LA180_1 = input.LA(1);

				if ((LA180_1==LBRACKET))
				{
					alt180 = 1;
				}


				} finally { DebugExitDecision(180); }
				switch ( alt180 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1349:36: '[' ']'
					{
					DebugLocation(1349, 36);
					char_literal680=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_fieldHeader8516); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal680_tree = (object)adaptor.Create(char_literal680, "char_literal680", retval);
					adaptor.AddChild(root_0, char_literal680_tree);
					}
					DebugLocation(1349, 39);
					char_literal681=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_fieldHeader8517); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal681_tree = (object)adaptor.Create(char_literal681, "char_literal681", retval);
					adaptor.AddChild(root_0, char_literal681_tree);
					}

					}
					break;

				default:
					goto loop180;
				}
			}

			loop180:
				;

			} finally { DebugExitSubRule(180); }

			DebugLocation(1349, 45);

			set682=(IToken)input.LT(1);
			if (input.LA(1)==COMMA||input.LA(1)==EQ||input.LA(1)==SEMI)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set682, "set682", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("fieldHeader", 126);
			LeaveRule("fieldHeader", 126);
			LeaveRule_fieldHeader();
			if (state.backtracking > 0) { Memoize(input, 126, fieldHeader_StartIndex); }

		}
		DebugLocation(1350, 4);
		} finally { DebugExitRule(GrammarFileName, "fieldHeader"); }
		return retval;

	}
	// $ANTLR end "fieldHeader"

	partial void EnterRule_localVariableHeader();
	partial void LeaveRule_localVariableHeader();
	// $ANTLR start "localVariableHeader"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1352:1: localVariableHeader : variableModifiers type IDENTIFIER ( '[' ']' )* ( '=' | ',' | ';' ) ;
	[GrammarRule("localVariableHeader")]
	private Antlr3AstNode localVariableHeader()
	{
		EnterRule_localVariableHeader();
		EnterRule("localVariableHeader", 127);
		var retval = new Antlr3AstNode("localVariableHeader");
		
		retval.Start = (IToken)input.LT(1);
		int localVariableHeader_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER685 = default(IToken);
		IToken char_literal686 = default(IToken);
		IToken char_literal687 = default(IToken);
		IToken set688 = default(IToken);
		Antlr3AstNode variableModifiers683 = default(Antlr3AstNode);
		Antlr3AstNode type684 = default(Antlr3AstNode);

		object IDENTIFIER685_tree = default(object);
		object char_literal686_tree = default(object);
		object char_literal687_tree = default(object);
		object set688_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "localVariableHeader");
		DebugLocation(1352, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 127)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1353:5: ( variableModifiers type IDENTIFIER ( '[' ']' )* ( '=' | ',' | ';' ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1353:9: variableModifiers type IDENTIFIER ( '[' ']' )* ( '=' | ',' | ';' )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1353, 9);
			PushFollow(Follow._variableModifiers_in_localVariableHeader8547);
			variableModifiers683=variableModifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableModifiers683.Tree, variableModifiers683, "variableModifiers683", retval);
			DebugLocation(1353, 27);
			PushFollow(Follow._type_in_localVariableHeader8549);
			type684=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type684.Tree, type684, "type684", retval);
			DebugLocation(1353, 32);
			IDENTIFIER685=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_localVariableHeader8551); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER685_tree = (object)adaptor.Create(IDENTIFIER685, "IDENTIFIER685", retval);
			adaptor.AddChild(root_0, IDENTIFIER685_tree);
			}
			DebugLocation(1353, 43);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1353:43: ( '[' ']' )*
			try { DebugEnterSubRule(181);
			while (true)
			{
				int alt181=2;
				try { DebugEnterDecision(181, false);
				int LA181_1 = input.LA(1);

				if ((LA181_1==LBRACKET))
				{
					alt181 = 1;
				}


				} finally { DebugExitDecision(181); }
				switch ( alt181 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1353:44: '[' ']'
					{
					DebugLocation(1353, 44);
					char_literal686=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_localVariableHeader8554); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal686_tree = (object)adaptor.Create(char_literal686, "char_literal686", retval);
					adaptor.AddChild(root_0, char_literal686_tree);
					}
					DebugLocation(1353, 47);
					char_literal687=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_localVariableHeader8555); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal687_tree = (object)adaptor.Create(char_literal687, "char_literal687", retval);
					adaptor.AddChild(root_0, char_literal687_tree);
					}

					}
					break;

				default:
					goto loop181;
				}
			}

			loop181:
				;

			} finally { DebugExitSubRule(181); }

			DebugLocation(1353, 53);

			set688=(IToken)input.LT(1);
			if (input.LA(1)==COMMA||input.LA(1)==EQ||input.LA(1)==SEMI)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set688, "set688", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("localVariableHeader", 127);
			LeaveRule("localVariableHeader", 127);
			LeaveRule_localVariableHeader();
			if (state.backtracking > 0) { Memoize(input, 127, localVariableHeader_StartIndex); }

		}
		DebugLocation(1354, 4);
		} finally { DebugExitRule(GrammarFileName, "localVariableHeader"); }
		return retval;

	}
	// $ANTLR end "localVariableHeader"

	partial void EnterRule_synpred2_Java_fragment();
	partial void LeaveRule_synpred2_Java_fragment();

	// $ANTLR start synpred2_Java
	private void synpred2_Java_fragment()
	{
		EnterRule_synpred2_Java_fragment();
		EnterRule("synpred2_Java_fragment", 129);
		var retval = new Antlr3AstNode("synpred2_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:302:13: ( ( annotations )? packageDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:302:13: ( annotations )? packageDeclaration
			{
			DebugLocation(302, 13);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:302:13: ( annotations )?
			int alt182=2;
			try { DebugEnterSubRule(182);
			try { DebugEnterDecision(182, false);
			int LA182_1 = input.LA(1);

			if ((LA182_1==MONKEYS_AT))
			{
				alt182 = 1;
			}
			} finally { DebugExitDecision(182); }
			switch (alt182)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:302:14: annotations
				{
				DebugLocation(302, 14);
				PushFollow(Follow._annotations_in_synpred2_Java107);
				annotations();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(182); }

			DebugLocation(304, 13);
			PushFollow(Follow._packageDeclaration_in_synpred2_Java136);
			packageDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred2_Java_fragment", 129);
			LeaveRule("synpred2_Java_fragment", 129);
			LeaveRule_synpred2_Java_fragment();
		}
	}
	// $ANTLR end synpred2_Java

	partial void EnterRule_synpred12_Java_fragment();
	partial void LeaveRule_synpred12_Java_fragment();

	// $ANTLR start synpred12_Java
	private void synpred12_Java_fragment()
	{
		EnterRule_synpred12_Java_fragment();
		EnterRule("synpred12_Java_fragment", 139);
		var retval = new Antlr3AstNode("synpred12_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:346:10: ( classDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:346:10: classDeclaration
			{
			DebugLocation(346, 10);
			PushFollow(Follow._classDeclaration_in_synpred12_Java494);
			classDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred12_Java_fragment", 139);
			LeaveRule("synpred12_Java_fragment", 139);
			LeaveRule_synpred12_Java_fragment();
		}
	}
	// $ANTLR end synpred12_Java

	partial void EnterRule_synpred27_Java_fragment();
	partial void LeaveRule_synpred27_Java_fragment();

	// $ANTLR start synpred27_Java
	private void synpred27_Java_fragment()
	{
		EnterRule_synpred27_Java_fragment();
		EnterRule("synpred27_Java_fragment", 154);
		var retval = new Antlr3AstNode("synpred27_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:377:9: ( normalClassDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:377:9: normalClassDeclaration
			{
			DebugLocation(377, 9);
			PushFollow(Follow._normalClassDeclaration_in_synpred27_Java731);
			normalClassDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred27_Java_fragment", 154);
			LeaveRule("synpred27_Java_fragment", 154);
			LeaveRule_synpred27_Java_fragment();
		}
	}
	// $ANTLR end synpred27_Java

	partial void EnterRule_synpred43_Java_fragment();
	partial void LeaveRule_synpred43_Java_fragment();

	// $ANTLR start synpred43_Java
	private void synpred43_Java_fragment()
	{
		EnterRule_synpred43_Java_fragment();
		EnterRule("synpred43_Java_fragment", 170);
		var retval = new Antlr3AstNode("synpred43_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:465:9: ( normalInterfaceDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:465:9: normalInterfaceDeclaration
			{
			DebugLocation(465, 9);
			PushFollow(Follow._normalInterfaceDeclaration_in_synpred43_Java1410);
			normalInterfaceDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred43_Java_fragment", 170);
			LeaveRule("synpred43_Java_fragment", 170);
			LeaveRule_synpred43_Java_fragment();
		}
	}
	// $ANTLR end synpred43_Java

	partial void EnterRule_synpred52_Java_fragment();
	partial void LeaveRule_synpred52_Java_fragment();

	// $ANTLR start synpred52_Java
	private void synpred52_Java_fragment()
	{
		EnterRule_synpred52_Java_fragment();
		EnterRule("synpred52_Java_fragment", 179);
		var retval = new Antlr3AstNode("synpred52_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:507:10: ( fieldDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:507:10: fieldDeclaration
			{
			DebugLocation(507, 10);
			PushFollow(Follow._fieldDeclaration_in_synpred52_Java1740);
			fieldDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred52_Java_fragment", 179);
			LeaveRule("synpred52_Java_fragment", 179);
			LeaveRule_synpred52_Java_fragment();
		}
	}
	// $ANTLR end synpred52_Java

	partial void EnterRule_synpred53_Java_fragment();
	partial void LeaveRule_synpred53_Java_fragment();

	// $ANTLR start synpred53_Java
	private void synpred53_Java_fragment()
	{
		EnterRule_synpred53_Java_fragment();
		EnterRule("synpred53_Java_fragment", 180);
		var retval = new Antlr3AstNode("synpred53_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:508:10: ( methodDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:508:10: methodDeclaration
			{
			DebugLocation(508, 10);
			PushFollow(Follow._methodDeclaration_in_synpred53_Java1751);
			methodDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred53_Java_fragment", 180);
			LeaveRule("synpred53_Java_fragment", 180);
			LeaveRule_synpred53_Java_fragment();
		}
	}
	// $ANTLR end synpred53_Java

	partial void EnterRule_synpred54_Java_fragment();
	partial void LeaveRule_synpred54_Java_fragment();

	// $ANTLR start synpred54_Java
	private void synpred54_Java_fragment()
	{
		EnterRule_synpred54_Java_fragment();
		EnterRule("synpred54_Java_fragment", 181);
		var retval = new Antlr3AstNode("synpred54_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:509:10: ( classDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:509:10: classDeclaration
			{
			DebugLocation(509, 10);
			PushFollow(Follow._classDeclaration_in_synpred54_Java1762);
			classDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred54_Java_fragment", 181);
			LeaveRule("synpred54_Java_fragment", 181);
			LeaveRule_synpred54_Java_fragment();
		}
	}
	// $ANTLR end synpred54_Java

	partial void EnterRule_synpred57_Java_fragment();
	partial void LeaveRule_synpred57_Java_fragment();

	// $ANTLR start synpred57_Java
	private void synpred57_Java_fragment()
	{
		EnterRule_synpred57_Java_fragment();
		EnterRule("synpred57_Java_fragment", 184);
		var retval = new Antlr3AstNode("synpred57_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:525:10: ( explicitConstructorInvocation )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:525:10: explicitConstructorInvocation
			{
			DebugLocation(525, 10);
			PushFollow(Follow._explicitConstructorInvocation_in_synpred57_Java1899);
			explicitConstructorInvocation();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred57_Java_fragment", 184);
			LeaveRule("synpred57_Java_fragment", 184);
			LeaveRule_synpred57_Java_fragment();
		}
	}
	// $ANTLR end synpred57_Java

	partial void EnterRule_synpred59_Java_fragment();
	partial void LeaveRule_synpred59_Java_fragment();

	// $ANTLR start synpred59_Java
	private void synpred59_Java_fragment()
	{
		EnterRule_synpred59_Java_fragment();
		EnterRule("synpred59_Java_fragment", 186);
		var retval = new Antlr3AstNode("synpred59_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:517:10: ( modifiers ( typeParameters )? IDENTIFIER formalParameters ( 'throws' qualifiedNameList )? '{' ( explicitConstructorInvocation )? ( blockStatement )* '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:517:10: modifiers ( typeParameters )? IDENTIFIER formalParameters ( 'throws' qualifiedNameList )? '{' ( explicitConstructorInvocation )? ( blockStatement )* '}'
			{
			DebugLocation(517, 10);
			PushFollow(Follow._modifiers_in_synpred59_Java1811);
			modifiers();
			PopFollow();
			if (state.failed) return;
			DebugLocation(518, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:518:9: ( typeParameters )?
			int alt185=2;
			try { DebugEnterSubRule(185);
			try { DebugEnterDecision(185, false);
			int LA185_1 = input.LA(1);

			if ((LA185_1==LT))
			{
				alt185 = 1;
			}
			} finally { DebugExitDecision(185); }
			switch (alt185)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:518:10: typeParameters
				{
				DebugLocation(518, 10);
				PushFollow(Follow._typeParameters_in_synpred59_Java1822);
				typeParameters();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(185); }

			DebugLocation(520, 9);
			Match(input,IDENTIFIER,Follow._IDENTIFIER_in_synpred59_Java1843); if (state.failed) return;
			DebugLocation(521, 9);
			PushFollow(Follow._formalParameters_in_synpred59_Java1853);
			formalParameters();
			PopFollow();
			if (state.failed) return;
			DebugLocation(522, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:522:9: ( 'throws' qualifiedNameList )?
			int alt186=2;
			try { DebugEnterSubRule(186);
			try { DebugEnterDecision(186, false);
			int LA186_1 = input.LA(1);

			if ((LA186_1==THROWS))
			{
				alt186 = 1;
			}
			} finally { DebugExitDecision(186); }
			switch (alt186)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:522:10: 'throws' qualifiedNameList
				{
				DebugLocation(522, 10);
				Match(input,THROWS,Follow._THROWS_in_synpred59_Java1864); if (state.failed) return;
				DebugLocation(522, 19);
				PushFollow(Follow._qualifiedNameList_in_synpred59_Java1866);
				qualifiedNameList();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(186); }

			DebugLocation(524, 9);
			Match(input,LBRACE,Follow._LBRACE_in_synpred59_Java1887); if (state.failed) return;
			DebugLocation(525, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:525:9: ( explicitConstructorInvocation )?
			int alt187=2;
			try { DebugEnterSubRule(187);
			try { DebugEnterDecision(187, false);
			switch (input.LA(1))
			{
			case LT:
				{
				alt187 = 1;
				}
				break;
			case THIS:
				{
				int LA187_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt187 = 1;
				}
				}
				break;
			case LPAREN:
				{
				int LA187_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt187 = 1;
				}
				}
				break;
			case SUPER:
				{
				int LA187_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt187 = 1;
				}
				}
				break;
			case IDENTIFIER:
				{
				int LA187_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt187 = 1;
				}
				}
				break;
			case INTLITERAL:
				{
				int LA187_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt187 = 1;
				}
				}
				break;
			case LONGLITERAL:
				{
				int LA187_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt187 = 1;
				}
				}
				break;
			case FLOATLITERAL:
				{
				int LA187_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt187 = 1;
				}
				}
				break;
			case DOUBLELITERAL:
				{
				int LA187_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt187 = 1;
				}
				}
				break;
			case CHARLITERAL:
				{
				int LA187_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt187 = 1;
				}
				}
				break;
			case STRINGLITERAL:
				{
				int LA187_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt187 = 1;
				}
				}
				break;
			case TRUE:
				{
				int LA187_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt187 = 1;
				}
				}
				break;
			case FALSE:
				{
				int LA187_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt187 = 1;
				}
				}
				break;
			case NULL:
				{
				int LA187_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt187 = 1;
				}
				}
				break;
			case NEW:
				{
				int LA187_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt187 = 1;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
				{
				int LA187_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt187 = 1;
				}
				}
				break;
			case VOID:
				{
				int LA187_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt187 = 1;
				}
				}
				break;
			}

			} finally { DebugExitDecision(187); }
			switch (alt187)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:525:10: explicitConstructorInvocation
				{
				DebugLocation(525, 10);
				PushFollow(Follow._explicitConstructorInvocation_in_synpred59_Java1899);
				explicitConstructorInvocation();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(187); }

			DebugLocation(527, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:527:9: ( blockStatement )*
			try { DebugEnterSubRule(188);
			while (true)
			{
				int alt188=2;
				try { DebugEnterDecision(188, false);
				int LA188_1 = input.LA(1);

				if ((LA188_1==EOF||LA188_1==ABSTRACT||(LA188_1>=ASSERT && LA188_1<=BANG)||(LA188_1>=BOOLEAN && LA188_1<=BYTE)||(LA188_1>=CHAR && LA188_1<=CLASS)||LA188_1==CONTINUE||LA188_1==DO||(LA188_1>=DOUBLE && LA188_1<=DOUBLELITERAL)||LA188_1==ENUM||(LA188_1>=FALSE && LA188_1<=FINAL)||(LA188_1>=FLOAT && LA188_1<=FOR)||(LA188_1>=IDENTIFIER && LA188_1<=IF)||(LA188_1>=INT && LA188_1<=INTLITERAL)||LA188_1==LBRACE||(LA188_1>=LONG && LA188_1<=LT)||(LA188_1>=MONKEYS_AT && LA188_1<=NULL)||LA188_1==PLUS||(LA188_1>=PLUSPLUS && LA188_1<=PUBLIC)||LA188_1==RETURN||(LA188_1>=SEMI && LA188_1<=SHORT)||(LA188_1>=STATIC && LA188_1<=SUB)||(LA188_1>=SUBSUB && LA188_1<=SYNCHRONIZED)||(LA188_1>=THIS && LA188_1<=THROW)||(LA188_1>=TILDE && LA188_1<=TRY)||(LA188_1>=VOID && LA188_1<=WHILE)))
				{
					alt188 = 1;
				}


				} finally { DebugExitDecision(188); }
				switch ( alt188 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:527:10: blockStatement
					{
					DebugLocation(527, 10);
					PushFollow(Follow._blockStatement_in_synpred59_Java1921);
					blockStatement();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop188;
				}
			}

			loop188:
				;

			} finally { DebugExitSubRule(188); }

			DebugLocation(529, 9);
			Match(input,RBRACE,Follow._RBRACE_in_synpred59_Java1942); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred59_Java_fragment", 186);
			LeaveRule("synpred59_Java_fragment", 186);
			LeaveRule_synpred59_Java_fragment();
		}
	}
	// $ANTLR end synpred59_Java

	partial void EnterRule_synpred68_Java_fragment();
	partial void LeaveRule_synpred68_Java_fragment();

	// $ANTLR start synpred68_Java
	private void synpred68_Java_fragment()
	{
		EnterRule_synpred68_Java_fragment();
		EnterRule("synpred68_Java_fragment", 195);
		var retval = new Antlr3AstNode("synpred68_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:571:9: ( interfaceFieldDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:571:9: interfaceFieldDeclaration
			{
			DebugLocation(571, 9);
			PushFollow(Follow._interfaceFieldDeclaration_in_synpred68_Java2317);
			interfaceFieldDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred68_Java_fragment", 195);
			LeaveRule("synpred68_Java_fragment", 195);
			LeaveRule_synpred68_Java_fragment();
		}
	}
	// $ANTLR end synpred68_Java

	partial void EnterRule_synpred69_Java_fragment();
	partial void LeaveRule_synpred69_Java_fragment();

	// $ANTLR start synpred69_Java
	private void synpred69_Java_fragment()
	{
		EnterRule_synpred69_Java_fragment();
		EnterRule("synpred69_Java_fragment", 196);
		var retval = new Antlr3AstNode("synpred69_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:572:9: ( interfaceMethodDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:572:9: interfaceMethodDeclaration
			{
			DebugLocation(572, 9);
			PushFollow(Follow._interfaceMethodDeclaration_in_synpred69_Java2327);
			interfaceMethodDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred69_Java_fragment", 196);
			LeaveRule("synpred69_Java_fragment", 196);
			LeaveRule_synpred69_Java_fragment();
		}
	}
	// $ANTLR end synpred69_Java

	partial void EnterRule_synpred70_Java_fragment();
	partial void LeaveRule_synpred70_Java_fragment();

	// $ANTLR start synpred70_Java
	private void synpred70_Java_fragment()
	{
		EnterRule_synpred70_Java_fragment();
		EnterRule("synpred70_Java_fragment", 197);
		var retval = new Antlr3AstNode("synpred70_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:573:9: ( interfaceDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:573:9: interfaceDeclaration
			{
			DebugLocation(573, 9);
			PushFollow(Follow._interfaceDeclaration_in_synpred70_Java2337);
			interfaceDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred70_Java_fragment", 197);
			LeaveRule("synpred70_Java_fragment", 197);
			LeaveRule_synpred70_Java_fragment();
		}
	}
	// $ANTLR end synpred70_Java

	partial void EnterRule_synpred71_Java_fragment();
	partial void LeaveRule_synpred71_Java_fragment();

	// $ANTLR start synpred71_Java
	private void synpred71_Java_fragment()
	{
		EnterRule_synpred71_Java_fragment();
		EnterRule("synpred71_Java_fragment", 198);
		var retval = new Antlr3AstNode("synpred71_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:574:9: ( classDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:574:9: classDeclaration
			{
			DebugLocation(574, 9);
			PushFollow(Follow._classDeclaration_in_synpred71_Java2347);
			classDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred71_Java_fragment", 198);
			LeaveRule("synpred71_Java_fragment", 198);
			LeaveRule_synpred71_Java_fragment();
		}
	}
	// $ANTLR end synpred71_Java

	partial void EnterRule_synpred99_Java_fragment();
	partial void LeaveRule_synpred99_Java_fragment();

	// $ANTLR start synpred99_Java
	private void synpred99_Java_fragment()
	{
		EnterRule_synpred99_Java_fragment();
		EnterRule("synpred99_Java_fragment", 226);
		var retval = new Antlr3AstNode("synpred99_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:678:9: ( ellipsisParameterDecl )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:678:9: ellipsisParameterDecl
			{
			DebugLocation(678, 9);
			PushFollow(Follow._ellipsisParameterDecl_in_synpred99_Java3181);
			ellipsisParameterDecl();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred99_Java_fragment", 226);
			LeaveRule("synpred99_Java_fragment", 226);
			LeaveRule_synpred99_Java_fragment();
		}
	}
	// $ANTLR end synpred99_Java

	partial void EnterRule_synpred101_Java_fragment();
	partial void LeaveRule_synpred101_Java_fragment();

	// $ANTLR start synpred101_Java
	private void synpred101_Java_fragment()
	{
		EnterRule_synpred101_Java_fragment();
		EnterRule("synpred101_Java_fragment", 228);
		var retval = new Antlr3AstNode("synpred101_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:679:9: ( normalParameterDecl ( ',' normalParameterDecl )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:679:9: normalParameterDecl ( ',' normalParameterDecl )*
			{
			DebugLocation(679, 9);
			PushFollow(Follow._normalParameterDecl_in_synpred101_Java3191);
			normalParameterDecl();
			PopFollow();
			if (state.failed) return;
			DebugLocation(680, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:680:9: ( ',' normalParameterDecl )*
			try { DebugEnterSubRule(192);
			while (true)
			{
				int alt192=2;
				try { DebugEnterDecision(192, false);
				int LA192_1 = input.LA(1);

				if ((LA192_1==COMMA))
				{
					alt192 = 1;
				}


				} finally { DebugExitDecision(192); }
				switch ( alt192 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:680:10: ',' normalParameterDecl
					{
					DebugLocation(680, 10);
					Match(input,COMMA,Follow._COMMA_in_synpred101_Java3202); if (state.failed) return;
					DebugLocation(680, 14);
					PushFollow(Follow._normalParameterDecl_in_synpred101_Java3204);
					normalParameterDecl();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop192;
				}
			}

			loop192:
				;

			} finally { DebugExitSubRule(192); }


			}

		}
		finally
		{
			TraceOut("synpred101_Java_fragment", 228);
			LeaveRule("synpred101_Java_fragment", 228);
			LeaveRule_synpred101_Java_fragment();
		}
	}
	// $ANTLR end synpred101_Java

	partial void EnterRule_synpred102_Java_fragment();
	partial void LeaveRule_synpred102_Java_fragment();

	// $ANTLR start synpred102_Java
	private void synpred102_Java_fragment()
	{
		EnterRule_synpred102_Java_fragment();
		EnterRule("synpred102_Java_fragment", 229);
		var retval = new Antlr3AstNode("synpred102_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:682:10: ( normalParameterDecl ',' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:682:10: normalParameterDecl ','
			{
			DebugLocation(682, 10);
			PushFollow(Follow._normalParameterDecl_in_synpred102_Java3226);
			normalParameterDecl();
			PopFollow();
			if (state.failed) return;
			DebugLocation(683, 9);
			Match(input,COMMA,Follow._COMMA_in_synpred102_Java3236); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred102_Java_fragment", 229);
			LeaveRule("synpred102_Java_fragment", 229);
			LeaveRule_synpred102_Java_fragment();
		}
	}
	// $ANTLR end synpred102_Java

	partial void EnterRule_synpred106_Java_fragment();
	partial void LeaveRule_synpred106_Java_fragment();

	// $ANTLR start synpred106_Java
	private void synpred106_Java_fragment()
	{
		EnterRule_synpred106_Java_fragment();
		EnterRule("synpred106_Java_fragment", 233);
		var retval = new Antlr3AstNode("synpred106_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:702:9: ( ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:702:9: ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';'
			{
			DebugLocation(702, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:702:9: ( nonWildcardTypeArguments )?
			int alt193=2;
			try { DebugEnterSubRule(193);
			try { DebugEnterDecision(193, false);
			int LA193_1 = input.LA(1);

			if ((LA193_1==LT))
			{
				alt193 = 1;
			}
			} finally { DebugExitDecision(193); }
			switch (alt193)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:702:10: nonWildcardTypeArguments
				{
				DebugLocation(702, 10);
				PushFollow(Follow._nonWildcardTypeArguments_in_synpred106_Java3371);
				nonWildcardTypeArguments();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(193); }

			DebugLocation(704, 9);
			if (input.LA(1)==SUPER||input.LA(1)==THIS)
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}

			DebugLocation(707, 9);
			PushFollow(Follow._arguments_in_synpred106_Java3429);
			arguments();
			PopFollow();
			if (state.failed) return;
			DebugLocation(707, 19);
			Match(input,SEMI,Follow._SEMI_in_synpred106_Java3431); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred106_Java_fragment", 233);
			LeaveRule("synpred106_Java_fragment", 233);
			LeaveRule_synpred106_Java_fragment();
		}
	}
	// $ANTLR end synpred106_Java

	partial void EnterRule_synpred120_Java_fragment();
	partial void LeaveRule_synpred120_Java_fragment();

	// $ANTLR start synpred120_Java
	private void synpred120_Java_fragment()
	{
		EnterRule_synpred120_Java_fragment();
		EnterRule("synpred120_Java_fragment", 247);
		var retval = new Antlr3AstNode("synpred120_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:789:9: ( annotationMethodDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:789:9: annotationMethodDeclaration
			{
			DebugLocation(789, 9);
			PushFollow(Follow._annotationMethodDeclaration_in_synpred120_Java4030);
			annotationMethodDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred120_Java_fragment", 247);
			LeaveRule("synpred120_Java_fragment", 247);
			LeaveRule_synpred120_Java_fragment();
		}
	}
	// $ANTLR end synpred120_Java

	partial void EnterRule_synpred121_Java_fragment();
	partial void LeaveRule_synpred121_Java_fragment();

	// $ANTLR start synpred121_Java
	private void synpred121_Java_fragment()
	{
		EnterRule_synpred121_Java_fragment();
		EnterRule("synpred121_Java_fragment", 248);
		var retval = new Antlr3AstNode("synpred121_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:790:9: ( interfaceFieldDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:790:9: interfaceFieldDeclaration
			{
			DebugLocation(790, 9);
			PushFollow(Follow._interfaceFieldDeclaration_in_synpred121_Java4040);
			interfaceFieldDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred121_Java_fragment", 248);
			LeaveRule("synpred121_Java_fragment", 248);
			LeaveRule_synpred121_Java_fragment();
		}
	}
	// $ANTLR end synpred121_Java

	partial void EnterRule_synpred122_Java_fragment();
	partial void LeaveRule_synpred122_Java_fragment();

	// $ANTLR start synpred122_Java
	private void synpred122_Java_fragment()
	{
		EnterRule_synpred122_Java_fragment();
		EnterRule("synpred122_Java_fragment", 249);
		var retval = new Antlr3AstNode("synpred122_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:791:9: ( normalClassDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:791:9: normalClassDeclaration
			{
			DebugLocation(791, 9);
			PushFollow(Follow._normalClassDeclaration_in_synpred122_Java4050);
			normalClassDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred122_Java_fragment", 249);
			LeaveRule("synpred122_Java_fragment", 249);
			LeaveRule_synpred122_Java_fragment();
		}
	}
	// $ANTLR end synpred122_Java

	partial void EnterRule_synpred123_Java_fragment();
	partial void LeaveRule_synpred123_Java_fragment();

	// $ANTLR start synpred123_Java
	private void synpred123_Java_fragment()
	{
		EnterRule_synpred123_Java_fragment();
		EnterRule("synpred123_Java_fragment", 250);
		var retval = new Antlr3AstNode("synpred123_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:792:9: ( normalInterfaceDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:792:9: normalInterfaceDeclaration
			{
			DebugLocation(792, 9);
			PushFollow(Follow._normalInterfaceDeclaration_in_synpred123_Java4060);
			normalInterfaceDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred123_Java_fragment", 250);
			LeaveRule("synpred123_Java_fragment", 250);
			LeaveRule_synpred123_Java_fragment();
		}
	}
	// $ANTLR end synpred123_Java

	partial void EnterRule_synpred124_Java_fragment();
	partial void LeaveRule_synpred124_Java_fragment();

	// $ANTLR start synpred124_Java
	private void synpred124_Java_fragment()
	{
		EnterRule_synpred124_Java_fragment();
		EnterRule("synpred124_Java_fragment", 251);
		var retval = new Antlr3AstNode("synpred124_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:793:9: ( enumDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:793:9: enumDeclaration
			{
			DebugLocation(793, 9);
			PushFollow(Follow._enumDeclaration_in_synpred124_Java4070);
			enumDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred124_Java_fragment", 251);
			LeaveRule("synpred124_Java_fragment", 251);
			LeaveRule_synpred124_Java_fragment();
		}
	}
	// $ANTLR end synpred124_Java

	partial void EnterRule_synpred125_Java_fragment();
	partial void LeaveRule_synpred125_Java_fragment();

	// $ANTLR start synpred125_Java
	private void synpred125_Java_fragment()
	{
		EnterRule_synpred125_Java_fragment();
		EnterRule("synpred125_Java_fragment", 252);
		var retval = new Antlr3AstNode("synpred125_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:794:9: ( annotationTypeDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:794:9: annotationTypeDeclaration
			{
			DebugLocation(794, 9);
			PushFollow(Follow._annotationTypeDeclaration_in_synpred125_Java4080);
			annotationTypeDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred125_Java_fragment", 252);
			LeaveRule("synpred125_Java_fragment", 252);
			LeaveRule_synpred125_Java_fragment();
		}
	}
	// $ANTLR end synpred125_Java

	partial void EnterRule_synpred128_Java_fragment();
	partial void LeaveRule_synpred128_Java_fragment();

	// $ANTLR start synpred128_Java
	private void synpred128_Java_fragment()
	{
		EnterRule_synpred128_Java_fragment();
		EnterRule("synpred128_Java_fragment", 255);
		var retval = new Antlr3AstNode("synpred128_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:837:9: ( localVariableDeclarationStatement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:837:9: localVariableDeclarationStatement
			{
			DebugLocation(837, 9);
			PushFollow(Follow._localVariableDeclarationStatement_in_synpred128_Java4238);
			localVariableDeclarationStatement();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred128_Java_fragment", 255);
			LeaveRule("synpred128_Java_fragment", 255);
			LeaveRule_synpred128_Java_fragment();
		}
	}
	// $ANTLR end synpred128_Java

	partial void EnterRule_synpred129_Java_fragment();
	partial void LeaveRule_synpred129_Java_fragment();

	// $ANTLR start synpred129_Java
	private void synpred129_Java_fragment()
	{
		EnterRule_synpred129_Java_fragment();
		EnterRule("synpred129_Java_fragment", 256);
		var retval = new Antlr3AstNode("synpred129_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:838:9: ( classOrInterfaceDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:838:9: classOrInterfaceDeclaration
			{
			DebugLocation(838, 9);
			PushFollow(Follow._classOrInterfaceDeclaration_in_synpred129_Java4248);
			classOrInterfaceDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred129_Java_fragment", 256);
			LeaveRule("synpred129_Java_fragment", 256);
			LeaveRule_synpred129_Java_fragment();
		}
	}
	// $ANTLR end synpred129_Java

	partial void EnterRule_synpred133_Java_fragment();
	partial void LeaveRule_synpred133_Java_fragment();

	// $ANTLR start synpred133_Java
	private void synpred133_Java_fragment()
	{
		EnterRule_synpred133_Java_fragment();
		EnterRule("synpred133_Java_fragment", 260);
		var retval = new Antlr3AstNode("synpred133_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:858:9: ( ( 'assert' ) expression ( ':' expression )? ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:858:9: ( 'assert' ) expression ( ':' expression )? ';'
			{
			DebugLocation(858, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:858:9: ( 'assert' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:858:10: 'assert'
			{
			DebugLocation(858, 10);
			Match(input,ASSERT,Follow._ASSERT_in_synpred133_Java4389); if (state.failed) return;

			}

			DebugLocation(860, 9);
			PushFollow(Follow._expression_in_synpred133_Java4409);
			expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(860, 20);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:860:20: ( ':' expression )?
			int alt196=2;
			try { DebugEnterSubRule(196);
			try { DebugEnterDecision(196, false);
			int LA196_1 = input.LA(1);

			if ((LA196_1==COLON))
			{
				alt196 = 1;
			}
			} finally { DebugExitDecision(196); }
			switch (alt196)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:860:21: ':' expression
				{
				DebugLocation(860, 21);
				Match(input,COLON,Follow._COLON_in_synpred133_Java4412); if (state.failed) return;
				DebugLocation(860, 25);
				PushFollow(Follow._expression_in_synpred133_Java4414);
				expression();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(196); }

			DebugLocation(860, 38);
			Match(input,SEMI,Follow._SEMI_in_synpred133_Java4418); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred133_Java_fragment", 260);
			LeaveRule("synpred133_Java_fragment", 260);
			LeaveRule_synpred133_Java_fragment();
		}
	}
	// $ANTLR end synpred133_Java

	partial void EnterRule_synpred135_Java_fragment();
	partial void LeaveRule_synpred135_Java_fragment();

	// $ANTLR start synpred135_Java
	private void synpred135_Java_fragment()
	{
		EnterRule_synpred135_Java_fragment();
		EnterRule("synpred135_Java_fragment", 262);
		var retval = new Antlr3AstNode("synpred135_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:861:9: ( 'assert' expression ( ':' expression )? ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:861:9: 'assert' expression ( ':' expression )? ';'
			{
			DebugLocation(861, 9);
			Match(input,ASSERT,Follow._ASSERT_in_synpred135_Java4428); if (state.failed) return;
			DebugLocation(861, 19);
			PushFollow(Follow._expression_in_synpred135_Java4431);
			expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(861, 30);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:861:30: ( ':' expression )?
			int alt197=2;
			try { DebugEnterSubRule(197);
			try { DebugEnterDecision(197, false);
			int LA197_1 = input.LA(1);

			if ((LA197_1==COLON))
			{
				alt197 = 1;
			}
			} finally { DebugExitDecision(197); }
			switch (alt197)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:861:31: ':' expression
				{
				DebugLocation(861, 31);
				Match(input,COLON,Follow._COLON_in_synpred135_Java4434); if (state.failed) return;
				DebugLocation(861, 35);
				PushFollow(Follow._expression_in_synpred135_Java4436);
				expression();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(197); }

			DebugLocation(861, 48);
			Match(input,SEMI,Follow._SEMI_in_synpred135_Java4440); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred135_Java_fragment", 262);
			LeaveRule("synpred135_Java_fragment", 262);
			LeaveRule_synpred135_Java_fragment();
		}
	}
	// $ANTLR end synpred135_Java

	partial void EnterRule_synpred136_Java_fragment();
	partial void LeaveRule_synpred136_Java_fragment();

	// $ANTLR start synpred136_Java
	private void synpred136_Java_fragment()
	{
		EnterRule_synpred136_Java_fragment();
		EnterRule("synpred136_Java_fragment", 263);
		var retval = new Antlr3AstNode("synpred136_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:862:39: ( 'else' statement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:862:39: 'else' statement
			{
			DebugLocation(862, 39);
			Match(input,ELSE,Follow._ELSE_in_synpred136_Java4469); if (state.failed) return;
			DebugLocation(862, 46);
			PushFollow(Follow._statement_in_synpred136_Java4471);
			statement();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred136_Java_fragment", 263);
			LeaveRule("synpred136_Java_fragment", 263);
			LeaveRule_synpred136_Java_fragment();
		}
	}
	// $ANTLR end synpred136_Java

	partial void EnterRule_synpred151_Java_fragment();
	partial void LeaveRule_synpred151_Java_fragment();

	// $ANTLR start synpred151_Java
	private void synpred151_Java_fragment()
	{
		EnterRule_synpred151_Java_fragment();
		EnterRule("synpred151_Java_fragment", 278);
		var retval = new Antlr3AstNode("synpred151_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:877:9: ( expression ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:877:9: expression ';'
			{
			DebugLocation(877, 9);
			PushFollow(Follow._expression_in_synpred151_Java4693);
			expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(877, 21);
			Match(input,SEMI,Follow._SEMI_in_synpred151_Java4696); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred151_Java_fragment", 278);
			LeaveRule("synpred151_Java_fragment", 278);
			LeaveRule_synpred151_Java_fragment();
		}
	}
	// $ANTLR end synpred151_Java

	partial void EnterRule_synpred152_Java_fragment();
	partial void LeaveRule_synpred152_Java_fragment();

	// $ANTLR start synpred152_Java
	private void synpred152_Java_fragment()
	{
		EnterRule_synpred152_Java_fragment();
		EnterRule("synpred152_Java_fragment", 279);
		var retval = new Antlr3AstNode("synpred152_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:878:9: ( IDENTIFIER ':' statement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:878:9: IDENTIFIER ':' statement
			{
			DebugLocation(878, 9);
			Match(input,IDENTIFIER,Follow._IDENTIFIER_in_synpred152_Java4711); if (state.failed) return;
			DebugLocation(878, 20);
			Match(input,COLON,Follow._COLON_in_synpred152_Java4713); if (state.failed) return;
			DebugLocation(878, 24);
			PushFollow(Follow._statement_in_synpred152_Java4715);
			statement();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred152_Java_fragment", 279);
			LeaveRule("synpred152_Java_fragment", 279);
			LeaveRule_synpred152_Java_fragment();
		}
	}
	// $ANTLR end synpred152_Java

	partial void EnterRule_synpred156_Java_fragment();
	partial void LeaveRule_synpred156_Java_fragment();

	// $ANTLR start synpred156_Java
	private void synpred156_Java_fragment()
	{
		EnterRule_synpred156_Java_fragment();
		EnterRule("synpred156_Java_fragment", 283);
		var retval = new Antlr3AstNode("synpred156_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:902:13: ( catches 'finally' block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:902:13: catches 'finally' block
			{
			DebugLocation(902, 13);
			PushFollow(Follow._catches_in_synpred156_Java4871);
			catches();
			PopFollow();
			if (state.failed) return;
			DebugLocation(902, 21);
			Match(input,FINALLY,Follow._FINALLY_in_synpred156_Java4873); if (state.failed) return;
			DebugLocation(902, 31);
			PushFollow(Follow._block_in_synpred156_Java4875);
			block();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred156_Java_fragment", 283);
			LeaveRule("synpred156_Java_fragment", 283);
			LeaveRule_synpred156_Java_fragment();
		}
	}
	// $ANTLR end synpred156_Java

	partial void EnterRule_synpred157_Java_fragment();
	partial void LeaveRule_synpred157_Java_fragment();

	// $ANTLR start synpred157_Java
	private void synpred157_Java_fragment()
	{
		EnterRule_synpred157_Java_fragment();
		EnterRule("synpred157_Java_fragment", 284);
		var retval = new Antlr3AstNode("synpred157_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:903:13: ( catches )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:903:13: catches
			{
			DebugLocation(903, 13);
			PushFollow(Follow._catches_in_synpred157_Java4889);
			catches();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred157_Java_fragment", 284);
			LeaveRule("synpred157_Java_fragment", 284);
			LeaveRule_synpred157_Java_fragment();
		}
	}
	// $ANTLR end synpred157_Java

	partial void EnterRule_synpred161_Java_fragment();
	partial void LeaveRule_synpred161_Java_fragment();

	// $ANTLR start synpred161_Java
	private void synpred161_Java_fragment()
	{
		EnterRule_synpred161_Java_fragment();
		EnterRule("synpred161_Java_fragment", 288);
		var retval = new Antlr3AstNode("synpred161_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:921:9: ( variableModifiers catchType IDENTIFIER ( '[' ']' )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:921:9: variableModifiers catchType IDENTIFIER ( '[' ']' )*
			{
			DebugLocation(921, 9);
			PushFollow(Follow._variableModifiers_in_synpred161_Java5025);
			variableModifiers();
			PopFollow();
			if (state.failed) return;
			DebugLocation(921, 27);
			PushFollow(Follow._catchType_in_synpred161_Java5027);
			catchType();
			PopFollow();
			if (state.failed) return;
			DebugLocation(921, 37);
			Match(input,IDENTIFIER,Follow._IDENTIFIER_in_synpred161_Java5029); if (state.failed) return;
			DebugLocation(922, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:922:9: ( '[' ']' )*
			try { DebugEnterSubRule(203);
			while (true)
			{
				int alt203=2;
				try { DebugEnterDecision(203, false);
				int LA203_1 = input.LA(1);

				if ((LA203_1==LBRACKET))
				{
					alt203 = 1;
				}


				} finally { DebugExitDecision(203); }
				switch ( alt203 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:922:10: '[' ']'
					{
					DebugLocation(922, 10);
					Match(input,LBRACKET,Follow._LBRACKET_in_synpred161_Java5040); if (state.failed) return;
					DebugLocation(922, 14);
					Match(input,RBRACKET,Follow._RBRACKET_in_synpred161_Java5042); if (state.failed) return;

					}
					break;

				default:
					goto loop203;
				}
			}

			loop203:
				;

			} finally { DebugExitSubRule(203); }


			}

		}
		finally
		{
			TraceOut("synpred161_Java_fragment", 288);
			LeaveRule("synpred161_Java_fragment", 288);
			LeaveRule_synpred161_Java_fragment();
		}
	}
	// $ANTLR end synpred161_Java

	partial void EnterRule_synpred168_Java_fragment();
	partial void LeaveRule_synpred168_Java_fragment();

	// $ANTLR start synpred168_Java
	private void synpred168_Java_fragment()
	{
		EnterRule_synpred168_Java_fragment();
		EnterRule("synpred168_Java_fragment", 295);
		var retval = new Antlr3AstNode("synpred168_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:948:10: ( variableModifiers )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:948:10: variableModifiers
			{
			DebugLocation(948, 10);
			PushFollow(Follow._variableModifiers_in_synpred168_Java5243);
			variableModifiers();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred168_Java_fragment", 295);
			LeaveRule("synpred168_Java_fragment", 295);
			LeaveRule_synpred168_Java_fragment();
		}
	}
	// $ANTLR end synpred168_Java

	partial void EnterRule_synpred170_Java_fragment();
	partial void LeaveRule_synpred170_Java_fragment();

	// $ANTLR start synpred170_Java
	private void synpred170_Java_fragment()
	{
		EnterRule_synpred170_Java_fragment();
		EnterRule("synpred170_Java_fragment", 297);
		var retval = new Antlr3AstNode("synpred170_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:954:9: ( 'for' '(' variableModifiers type IDENTIFIER ':' expression ')' statement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:954:9: 'for' '(' variableModifiers type IDENTIFIER ':' expression ')' statement
			{
			DebugLocation(954, 9);
			Match(input,FOR,Follow._FOR_in_synpred170_Java5298); if (state.failed) return;
			DebugLocation(954, 15);
			Match(input,LPAREN,Follow._LPAREN_in_synpred170_Java5300); if (state.failed) return;
			DebugLocation(954, 19);
			PushFollow(Follow._variableModifiers_in_synpred170_Java5302);
			variableModifiers();
			PopFollow();
			if (state.failed) return;
			DebugLocation(954, 37);
			PushFollow(Follow._type_in_synpred170_Java5304);
			type();
			PopFollow();
			if (state.failed) return;
			DebugLocation(954, 42);
			Match(input,IDENTIFIER,Follow._IDENTIFIER_in_synpred170_Java5306); if (state.failed) return;
			DebugLocation(954, 53);
			Match(input,COLON,Follow._COLON_in_synpred170_Java5308); if (state.failed) return;
			DebugLocation(955, 9);
			PushFollow(Follow._expression_in_synpred170_Java5319);
			expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(955, 20);
			Match(input,RPAREN,Follow._RPAREN_in_synpred170_Java5321); if (state.failed) return;
			DebugLocation(955, 24);
			PushFollow(Follow._statement_in_synpred170_Java5323);
			statement();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred170_Java_fragment", 297);
			LeaveRule("synpred170_Java_fragment", 297);
			LeaveRule_synpred170_Java_fragment();
		}
	}
	// $ANTLR end synpred170_Java

	partial void EnterRule_synpred174_Java_fragment();
	partial void LeaveRule_synpred174_Java_fragment();

	// $ANTLR start synpred174_Java
	private void synpred174_Java_fragment()
	{
		EnterRule_synpred174_Java_fragment();
		EnterRule("synpred174_Java_fragment", 301);
		var retval = new Antlr3AstNode("synpred174_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:968:9: ( localVariableDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:968:9: localVariableDeclaration
			{
			DebugLocation(968, 9);
			PushFollow(Follow._localVariableDeclaration_in_synpred174_Java5502);
			localVariableDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred174_Java_fragment", 301);
			LeaveRule("synpred174_Java_fragment", 301);
			LeaveRule_synpred174_Java_fragment();
		}
	}
	// $ANTLR end synpred174_Java

	partial void EnterRule_synpred215_Java_fragment();
	partial void LeaveRule_synpred215_Java_fragment();

	// $ANTLR start synpred215_Java
	private void synpred215_Java_fragment()
	{
		EnterRule_synpred215_Java_fragment();
		EnterRule("synpred215_Java_fragment", 342);
		var retval = new Antlr3AstNode("synpred215_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1120:9: ( castExpression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1120:9: castExpression
			{
			DebugLocation(1120, 9);
			PushFollow(Follow._castExpression_in_synpred215_Java6730);
			castExpression();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred215_Java_fragment", 342);
			LeaveRule("synpred215_Java_fragment", 342);
			LeaveRule_synpred215_Java_fragment();
		}
	}
	// $ANTLR end synpred215_Java

	partial void EnterRule_synpred219_Java_fragment();
	partial void LeaveRule_synpred219_Java_fragment();

	// $ANTLR start synpred219_Java
	private void synpred219_Java_fragment()
	{
		EnterRule_synpred219_Java_fragment();
		EnterRule("synpred219_Java_fragment", 346);
		var retval = new Antlr3AstNode("synpred219_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1130:9: ( '(' primitiveType ')' unaryExpression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1130:9: '(' primitiveType ')' unaryExpression
			{
			DebugLocation(1130, 9);
			Match(input,LPAREN,Follow._LPAREN_in_synpred219_Java6820); if (state.failed) return;
			DebugLocation(1130, 13);
			PushFollow(Follow._primitiveType_in_synpred219_Java6822);
			primitiveType();
			PopFollow();
			if (state.failed) return;
			DebugLocation(1130, 27);
			Match(input,RPAREN,Follow._RPAREN_in_synpred219_Java6824); if (state.failed) return;
			DebugLocation(1130, 31);
			PushFollow(Follow._unaryExpression_in_synpred219_Java6826);
			unaryExpression();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred219_Java_fragment", 346);
			LeaveRule("synpred219_Java_fragment", 346);
			LeaveRule_synpred219_Java_fragment();
		}
	}
	// $ANTLR end synpred219_Java

	partial void EnterRule_synpred221_Java_fragment();
	partial void LeaveRule_synpred221_Java_fragment();

	// $ANTLR start synpred221_Java
	private void synpred221_Java_fragment()
	{
		EnterRule_synpred221_Java_fragment();
		EnterRule("synpred221_Java_fragment", 348);
		var retval = new Antlr3AstNode("synpred221_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1140:10: ( '.' IDENTIFIER )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1140:10: '.' IDENTIFIER
			{
			DebugLocation(1140, 10);
			Match(input,DOT,Follow._DOT_in_synpred221_Java6896); if (state.failed) return;
			DebugLocation(1140, 14);
			Match(input,IDENTIFIER,Follow._IDENTIFIER_in_synpred221_Java6898); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred221_Java_fragment", 348);
			LeaveRule("synpred221_Java_fragment", 348);
			LeaveRule_synpred221_Java_fragment();
		}
	}
	// $ANTLR end synpred221_Java

	partial void EnterRule_synpred222_Java_fragment();
	partial void LeaveRule_synpred222_Java_fragment();

	// $ANTLR start synpred222_Java
	private void synpred222_Java_fragment()
	{
		EnterRule_synpred222_Java_fragment();
		EnterRule("synpred222_Java_fragment", 349);
		var retval = new Antlr3AstNode("synpred222_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1142:10: ( identifierSuffix )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1142:10: identifierSuffix
			{
			DebugLocation(1142, 10);
			PushFollow(Follow._identifierSuffix_in_synpred222_Java6920);
			identifierSuffix();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred222_Java_fragment", 349);
			LeaveRule("synpred222_Java_fragment", 349);
			LeaveRule_synpred222_Java_fragment();
		}
	}
	// $ANTLR end synpred222_Java

	partial void EnterRule_synpred224_Java_fragment();
	partial void LeaveRule_synpred224_Java_fragment();

	// $ANTLR start synpred224_Java
	private void synpred224_Java_fragment()
	{
		EnterRule_synpred224_Java_fragment();
		EnterRule("synpred224_Java_fragment", 351);
		var retval = new Antlr3AstNode("synpred224_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1145:10: ( '.' IDENTIFIER )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1145:10: '.' IDENTIFIER
			{
			DebugLocation(1145, 10);
			Match(input,DOT,Follow._DOT_in_synpred224_Java6952); if (state.failed) return;
			DebugLocation(1145, 14);
			Match(input,IDENTIFIER,Follow._IDENTIFIER_in_synpred224_Java6954); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred224_Java_fragment", 351);
			LeaveRule("synpred224_Java_fragment", 351);
			LeaveRule_synpred224_Java_fragment();
		}
	}
	// $ANTLR end synpred224_Java

	partial void EnterRule_synpred225_Java_fragment();
	partial void LeaveRule_synpred225_Java_fragment();

	// $ANTLR start synpred225_Java
	private void synpred225_Java_fragment()
	{
		EnterRule_synpred225_Java_fragment();
		EnterRule("synpred225_Java_fragment", 352);
		var retval = new Antlr3AstNode("synpred225_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1147:10: ( identifierSuffix )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1147:10: identifierSuffix
			{
			DebugLocation(1147, 10);
			PushFollow(Follow._identifierSuffix_in_synpred225_Java6976);
			identifierSuffix();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred225_Java_fragment", 352);
			LeaveRule("synpred225_Java_fragment", 352);
			LeaveRule_synpred225_Java_fragment();
		}
	}
	// $ANTLR end synpred225_Java

	partial void EnterRule_synpred237_Java_fragment();
	partial void LeaveRule_synpred237_Java_fragment();

	// $ANTLR start synpred237_Java
	private void synpred237_Java_fragment()
	{
		EnterRule_synpred237_Java_fragment();
		EnterRule("synpred237_Java_fragment", 364);
		var retval = new Antlr3AstNode("synpred237_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1173:10: ( '[' expression ']' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1173:10: '[' expression ']'
			{
			DebugLocation(1173, 10);
			Match(input,LBRACKET,Follow._LBRACKET_in_synpred237_Java7218); if (state.failed) return;
			DebugLocation(1173, 14);
			PushFollow(Follow._expression_in_synpred237_Java7220);
			expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(1173, 25);
			Match(input,RBRACKET,Follow._RBRACKET_in_synpred237_Java7222); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred237_Java_fragment", 364);
			LeaveRule("synpred237_Java_fragment", 364);
			LeaveRule_synpred237_Java_fragment();
		}
	}
	// $ANTLR end synpred237_Java

	partial void EnterRule_synpred250_Java_fragment();
	partial void LeaveRule_synpred250_Java_fragment();

	// $ANTLR start synpred250_Java
	private void synpred250_Java_fragment()
	{
		EnterRule_synpred250_Java_fragment();
		EnterRule("synpred250_Java_fragment", 377);
		var retval = new Antlr3AstNode("synpred250_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1194:9: ( 'new' nonWildcardTypeArguments classOrInterfaceTypeWithDiamond classCreatorRest )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1194:9: 'new' nonWildcardTypeArguments classOrInterfaceTypeWithDiamond classCreatorRest
			{
			DebugLocation(1194, 9);
			Match(input,NEW,Follow._NEW_in_synpred250_Java7425); if (state.failed) return;
			DebugLocation(1194, 15);
			PushFollow(Follow._nonWildcardTypeArguments_in_synpred250_Java7427);
			nonWildcardTypeArguments();
			PopFollow();
			if (state.failed) return;
			DebugLocation(1194, 40);
			PushFollow(Follow._classOrInterfaceTypeWithDiamond_in_synpred250_Java7429);
			classOrInterfaceTypeWithDiamond();
			PopFollow();
			if (state.failed) return;
			DebugLocation(1194, 72);
			PushFollow(Follow._classCreatorRest_in_synpred250_Java7431);
			classCreatorRest();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred250_Java_fragment", 377);
			LeaveRule("synpred250_Java_fragment", 377);
			LeaveRule_synpred250_Java_fragment();
		}
	}
	// $ANTLR end synpred250_Java

	partial void EnterRule_synpred251_Java_fragment();
	partial void LeaveRule_synpred251_Java_fragment();

	// $ANTLR start synpred251_Java
	private void synpred251_Java_fragment()
	{
		EnterRule_synpred251_Java_fragment();
		EnterRule("synpred251_Java_fragment", 378);
		var retval = new Antlr3AstNode("synpred251_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1195:9: ( 'new' classOrInterfaceTypeWithDiamond classCreatorRest )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1195:9: 'new' classOrInterfaceTypeWithDiamond classCreatorRest
			{
			DebugLocation(1195, 9);
			Match(input,NEW,Follow._NEW_in_synpred251_Java7441); if (state.failed) return;
			DebugLocation(1195, 15);
			PushFollow(Follow._classOrInterfaceTypeWithDiamond_in_synpred251_Java7443);
			classOrInterfaceTypeWithDiamond();
			PopFollow();
			if (state.failed) return;
			DebugLocation(1195, 47);
			PushFollow(Follow._classCreatorRest_in_synpred251_Java7445);
			classCreatorRest();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred251_Java_fragment", 378);
			LeaveRule("synpred251_Java_fragment", 378);
			LeaveRule_synpred251_Java_fragment();
		}
	}
	// $ANTLR end synpred251_Java

	partial void EnterRule_synpred253_Java_fragment();
	partial void LeaveRule_synpred253_Java_fragment();

	// $ANTLR start synpred253_Java
	private void synpred253_Java_fragment()
	{
		EnterRule_synpred253_Java_fragment();
		EnterRule("synpred253_Java_fragment", 380);
		var retval = new Antlr3AstNode("synpred253_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1200:9: ( 'new' createdName '[' ']' ( '[' ']' )* arrayInitializer )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1200:9: 'new' createdName '[' ']' ( '[' ']' )* arrayInitializer
			{
			DebugLocation(1200, 9);
			Match(input,NEW,Follow._NEW_in_synpred253_Java7474); if (state.failed) return;
			DebugLocation(1200, 15);
			PushFollow(Follow._createdName_in_synpred253_Java7476);
			createdName();
			PopFollow();
			if (state.failed) return;
			DebugLocation(1201, 9);
			Match(input,LBRACKET,Follow._LBRACKET_in_synpred253_Java7486); if (state.failed) return;
			DebugLocation(1201, 13);
			Match(input,RBRACKET,Follow._RBRACKET_in_synpred253_Java7488); if (state.failed) return;
			DebugLocation(1202, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1202:9: ( '[' ']' )*
			try { DebugEnterSubRule(212);
			while (true)
			{
				int alt212=2;
				try { DebugEnterDecision(212, false);
				int LA212_1 = input.LA(1);

				if ((LA212_1==LBRACKET))
				{
					alt212 = 1;
				}


				} finally { DebugExitDecision(212); }
				switch ( alt212 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1202:10: '[' ']'
					{
					DebugLocation(1202, 10);
					Match(input,LBRACKET,Follow._LBRACKET_in_synpred253_Java7499); if (state.failed) return;
					DebugLocation(1202, 14);
					Match(input,RBRACKET,Follow._RBRACKET_in_synpred253_Java7501); if (state.failed) return;

					}
					break;

				default:
					goto loop212;
				}
			}

			loop212:
				;

			} finally { DebugExitSubRule(212); }

			DebugLocation(1204, 9);
			PushFollow(Follow._arrayInitializer_in_synpred253_Java7522);
			arrayInitializer();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred253_Java_fragment", 380);
			LeaveRule("synpred253_Java_fragment", 380);
			LeaveRule_synpred253_Java_fragment();
		}
	}
	// $ANTLR end synpred253_Java

	partial void EnterRule_synpred254_Java_fragment();
	partial void LeaveRule_synpred254_Java_fragment();

	// $ANTLR start synpred254_Java
	private void synpred254_Java_fragment()
	{
		EnterRule_synpred254_Java_fragment();
		EnterRule("synpred254_Java_fragment", 381);
		var retval = new Antlr3AstNode("synpred254_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1209:13: ( '[' expression ']' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\Java\\Java.g:1209:13: '[' expression ']'
			{
			DebugLocation(1209, 13);
			Match(input,LBRACKET,Follow._LBRACKET_in_synpred254_Java7571); if (state.failed) return;
			DebugLocation(1209, 17);
			PushFollow(Follow._expression_in_synpred254_Java7573);
			expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(1210, 13);
			Match(input,RBRACKET,Follow._RBRACKET_in_synpred254_Java7587); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred254_Java_fragment", 381);
			LeaveRule("synpred254_Java_fragment", 381);
			LeaveRule_synpred254_Java_fragment();
		}
	}
	// $ANTLR end synpred254_Java
	#endregion Rules

	#region Synpreds
	private bool EvaluatePredicate(System.Action fragment)
	{
		bool success = false;
		state.backtracking++;
		try { DebugBeginBacktrack(state.backtracking);
		int start = input.Mark();
		try
		{
			fragment();
		}
		catch ( RecognitionException re )
		{
			System.Console.Error.WriteLine("impossible: "+re);
		}
		success = !state.failed;
		input.Rewind(start);
		} finally { DebugEndBacktrack(state.backtracking, success); }
		state.backtracking--;
		state.failed=false;
		return success;
	}
	#endregion Synpreds


	#region Follow sets
	private static class Follow
	{
		public static readonly BitSet _annotations_in_compilationUnit107 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _packageDeclaration_in_compilationUnit136 = new BitSet(new ulong[]{0x8100008000012UL,0x4103041C000C0024UL,0x8UL});
		public static readonly BitSet _importDeclaration_in_compilationUnit158 = new BitSet(new ulong[]{0x8100008000012UL,0x4103041C000C0024UL,0x8UL});
		public static readonly BitSet _typeDeclaration_in_compilationUnit180 = new BitSet(new ulong[]{0x8100008000012UL,0x4103041C000C0020UL,0x8UL});
		public static readonly BitSet _PACKAGE_in_packageDeclaration211 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _qualifiedName_in_packageDeclaration213 = new BitSet(new ulong[]{0x0UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_packageDeclaration223 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IMPORT_in_importDeclaration244 = new BitSet(new ulong[]{0x8000000000000000UL,0x1000000000000UL});
		public static readonly BitSet _STATIC_in_importDeclaration256 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_importDeclaration277 = new BitSet(new ulong[]{0x800000000UL});
		public static readonly BitSet _DOT_in_importDeclaration279 = new BitSet(new ulong[]{0x0UL,0x400000000000UL});
		public static readonly BitSet _STAR_in_importDeclaration281 = new BitSet(new ulong[]{0x0UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_importDeclaration291 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IMPORT_in_importDeclaration308 = new BitSet(new ulong[]{0x8000000000000000UL,0x1000000000000UL});
		public static readonly BitSet _STATIC_in_importDeclaration320 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_importDeclaration341 = new BitSet(new ulong[]{0x800000000UL});
		public static readonly BitSet _DOT_in_importDeclaration352 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_importDeclaration354 = new BitSet(new ulong[]{0x800000000UL,0x40000000000UL});
		public static readonly BitSet _DOT_in_importDeclaration376 = new BitSet(new ulong[]{0x0UL,0x400000000000UL});
		public static readonly BitSet _STAR_in_importDeclaration378 = new BitSet(new ulong[]{0x0UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_importDeclaration399 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IDENTIFIER_in_qualifiedImportName419 = new BitSet(new ulong[]{0x800000002UL});
		public static readonly BitSet _DOT_in_qualifiedImportName430 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_qualifiedImportName432 = new BitSet(new ulong[]{0x800000002UL});
		public static readonly BitSet _classOrInterfaceDeclaration_in_typeDeclaration463 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SEMI_in_typeDeclaration473 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classDeclaration_in_classOrInterfaceDeclaration494 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceDeclaration_in_classOrInterfaceDeclaration504 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotation_in_modifiers539 = new BitSet(new ulong[]{0x8000000000012UL,0x4103001C000C0000UL,0x8UL});
		public static readonly BitSet _PUBLIC_in_modifiers549 = new BitSet(new ulong[]{0x8000000000012UL,0x4103001C000C0000UL,0x8UL});
		public static readonly BitSet _PROTECTED_in_modifiers559 = new BitSet(new ulong[]{0x8000000000012UL,0x4103001C000C0000UL,0x8UL});
		public static readonly BitSet _PRIVATE_in_modifiers569 = new BitSet(new ulong[]{0x8000000000012UL,0x4103001C000C0000UL,0x8UL});
		public static readonly BitSet _STATIC_in_modifiers579 = new BitSet(new ulong[]{0x8000000000012UL,0x4103001C000C0000UL,0x8UL});
		public static readonly BitSet _ABSTRACT_in_modifiers589 = new BitSet(new ulong[]{0x8000000000012UL,0x4103001C000C0000UL,0x8UL});
		public static readonly BitSet _FINAL_in_modifiers599 = new BitSet(new ulong[]{0x8000000000012UL,0x4103001C000C0000UL,0x8UL});
		public static readonly BitSet _NATIVE_in_modifiers609 = new BitSet(new ulong[]{0x8000000000012UL,0x4103001C000C0000UL,0x8UL});
		public static readonly BitSet _SYNCHRONIZED_in_modifiers619 = new BitSet(new ulong[]{0x8000000000012UL,0x4103001C000C0000UL,0x8UL});
		public static readonly BitSet _TRANSIENT_in_modifiers629 = new BitSet(new ulong[]{0x8000000000012UL,0x4103001C000C0000UL,0x8UL});
		public static readonly BitSet _VOLATILE_in_modifiers639 = new BitSet(new ulong[]{0x8000000000012UL,0x4103001C000C0000UL,0x8UL});
		public static readonly BitSet _STRICTFP_in_modifiers649 = new BitSet(new ulong[]{0x8000000000012UL,0x4103001C000C0000UL,0x8UL});
		public static readonly BitSet _FINAL_in_variableModifiers681 = new BitSet(new ulong[]{0x8000000000002UL,0x40000UL});
		public static readonly BitSet _annotation_in_variableModifiers695 = new BitSet(new ulong[]{0x8000000000002UL,0x40000UL});
		public static readonly BitSet _normalClassDeclaration_in_classDeclaration731 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enumDeclaration_in_classDeclaration741 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_normalClassDeclaration761 = new BitSet(new ulong[]{0x8000000UL});
		public static readonly BitSet _CLASS_in_normalClassDeclaration764 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_normalClassDeclaration766 = new BitSet(new ulong[]{0x800000000000UL,0x10402UL});
		public static readonly BitSet _typeParameters_in_normalClassDeclaration777 = new BitSet(new ulong[]{0x800000000000UL,0x402UL});
		public static readonly BitSet _EXTENDS_in_normalClassDeclaration799 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _type_in_normalClassDeclaration801 = new BitSet(new ulong[]{0x0UL,0x402UL});
		public static readonly BitSet _IMPLEMENTS_in_normalClassDeclaration823 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _typeList_in_normalClassDeclaration825 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _classBody_in_normalClassDeclaration858 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LT_in_typeParameters879 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _typeParameter_in_typeParameters893 = new BitSet(new ulong[]{0x400000020000000UL});
		public static readonly BitSet _COMMA_in_typeParameters908 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _typeParameter_in_typeParameters910 = new BitSet(new ulong[]{0x400000020000000UL});
		public static readonly BitSet _GT_in_typeParameters935 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IDENTIFIER_in_typeParameter955 = new BitSet(new ulong[]{0x800000000002UL});
		public static readonly BitSet _EXTENDS_in_typeParameter966 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _typeBound_in_typeParameter968 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_typeBound1000 = new BitSet(new ulong[]{0x22UL});
		public static readonly BitSet _AMP_in_typeBound1011 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _type_in_typeBound1013 = new BitSet(new ulong[]{0x22UL});
		public static readonly BitSet _modifiers_in_enumDeclaration1045 = new BitSet(new ulong[]{0x100000000000UL});
		public static readonly BitSet _ENUM_in_enumDeclaration1057 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_enumDeclaration1078 = new BitSet(new ulong[]{0x0UL,0x402UL});
		public static readonly BitSet _IMPLEMENTS_in_enumDeclaration1089 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _typeList_in_enumDeclaration1091 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _enumBody_in_enumDeclaration1112 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LBRACE_in_enumBody1137 = new BitSet(new ulong[]{0x8000000020000000UL,0x44000040000UL});
		public static readonly BitSet _enumConstants_in_enumBody1148 = new BitSet(new ulong[]{0x20000000UL,0x44000000000UL});
		public static readonly BitSet _COMMA_in_enumBody1170 = new BitSet(new ulong[]{0x0UL,0x44000000000UL});
		public static readonly BitSet _enumBodyDeclarations_in_enumBody1183 = new BitSet(new ulong[]{0x0UL,0x4000000000UL});
		public static readonly BitSet _RBRACE_in_enumBody1205 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enumConstant_in_enumConstants1225 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _COMMA_in_enumConstants1236 = new BitSet(new ulong[]{0x8000000000000000UL,0x40000UL});
		public static readonly BitSet _enumConstant_in_enumConstants1238 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _annotations_in_enumConstant1272 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_enumConstant1293 = new BitSet(new ulong[]{0x2UL,0x8400UL});
		public static readonly BitSet _arguments_in_enumConstant1304 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _classBody_in_enumConstant1326 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SEMI_in_enumBodyDeclarations1367 = new BitSet(new ulong[]{0x802810100A014012UL,0x41030C1C000D2430UL,0xCUL});
		public static readonly BitSet _classBodyDeclaration_in_enumBodyDeclarations1379 = new BitSet(new ulong[]{0x802810100A014012UL,0x41030C1C000D2430UL,0xCUL});
		public static readonly BitSet _normalInterfaceDeclaration_in_interfaceDeclaration1410 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotationTypeDeclaration_in_interfaceDeclaration1420 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_normalInterfaceDeclaration1444 = new BitSet(new ulong[]{0x0UL,0x20UL});
		public static readonly BitSet _INTERFACE_in_normalInterfaceDeclaration1446 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_normalInterfaceDeclaration1448 = new BitSet(new ulong[]{0x800000000000UL,0x10400UL});
		public static readonly BitSet _typeParameters_in_normalInterfaceDeclaration1459 = new BitSet(new ulong[]{0x800000000000UL,0x400UL});
		public static readonly BitSet _EXTENDS_in_normalInterfaceDeclaration1481 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _typeList_in_normalInterfaceDeclaration1483 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _interfaceBody_in_normalInterfaceDeclaration1504 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_typeList1524 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _COMMA_in_typeList1535 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _type_in_typeList1537 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _LBRACE_in_classBody1568 = new BitSet(new ulong[]{0x802810100A014010UL,0x41030C5C000D2430UL,0xCUL});
		public static readonly BitSet _classBodyDeclaration_in_classBody1580 = new BitSet(new ulong[]{0x802810100A014010UL,0x41030C5C000D2430UL,0xCUL});
		public static readonly BitSet _RBRACE_in_classBody1602 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LBRACE_in_interfaceBody1622 = new BitSet(new ulong[]{0x802810100A014010UL,0x41030C5C000D2030UL,0xCUL});
		public static readonly BitSet _interfaceBodyDeclaration_in_interfaceBody1634 = new BitSet(new ulong[]{0x802810100A014010UL,0x41030C5C000D2030UL,0xCUL});
		public static readonly BitSet _RBRACE_in_interfaceBody1656 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SEMI_in_classBodyDeclaration1676 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _STATIC_in_classBodyDeclaration1687 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _block_in_classBodyDeclaration1709 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _memberDecl_in_classBodyDeclaration1719 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _fieldDeclaration_in_memberDecl1740 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _methodDeclaration_in_memberDecl1751 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classDeclaration_in_memberDecl1762 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceDeclaration_in_memberDecl1773 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_methodDeclaration1811 = new BitSet(new ulong[]{0x8000000000000000UL,0x10000UL});
		public static readonly BitSet _typeParameters_in_methodDeclaration1822 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_methodDeclaration1843 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _formalParameters_in_methodDeclaration1853 = new BitSet(new ulong[]{0x0UL,0x1000000000000400UL});
		public static readonly BitSet _THROWS_in_methodDeclaration1864 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _qualifiedNameList_in_methodDeclaration1866 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _LBRACE_in_methodDeclaration1887 = new BitSet(new ulong[]{0x80EC10350E01C310UL,0xEDEF0D5E803DE471UL,0x1DUL});
		public static readonly BitSet _explicitConstructorInvocation_in_methodDeclaration1899 = new BitSet(new ulong[]{0x80EC10350E01C310UL,0xEDEF0D5E803CE471UL,0x1DUL});
		public static readonly BitSet _blockStatement_in_methodDeclaration1921 = new BitSet(new ulong[]{0x80EC10350E01C310UL,0xEDEF0D5E803CE471UL,0x1DUL});
		public static readonly BitSet _RBRACE_in_methodDeclaration1942 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_methodDeclaration1952 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000012010UL,0x4UL});
		public static readonly BitSet _typeParameters_in_methodDeclaration1963 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL,0x4UL});
		public static readonly BitSet _type_in_methodDeclaration1985 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _VOID_in_methodDeclaration1999 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_methodDeclaration2019 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _formalParameters_in_methodDeclaration2029 = new BitSet(new ulong[]{0x0UL,0x1000040000000C00UL});
		public static readonly BitSet _LBRACKET_in_methodDeclaration2040 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_methodDeclaration2042 = new BitSet(new ulong[]{0x0UL,0x1000040000000C00UL});
		public static readonly BitSet _THROWS_in_methodDeclaration2064 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _qualifiedNameList_in_methodDeclaration2066 = new BitSet(new ulong[]{0x0UL,0x40000000400UL});
		public static readonly BitSet _block_in_methodDeclaration2121 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SEMI_in_methodDeclaration2135 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_fieldDeclaration2167 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _type_in_fieldDeclaration2177 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _variableDeclarator_in_fieldDeclaration2187 = new BitSet(new ulong[]{0x20000000UL,0x40000000000UL});
		public static readonly BitSet _COMMA_in_fieldDeclaration2198 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _variableDeclarator_in_fieldDeclaration2200 = new BitSet(new ulong[]{0x20000000UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_fieldDeclaration2221 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IDENTIFIER_in_variableDeclarator2241 = new BitSet(new ulong[]{0x200000000002UL,0x800UL});
		public static readonly BitSet _LBRACKET_in_variableDeclarator2252 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_variableDeclarator2254 = new BitSet(new ulong[]{0x200000000002UL,0x800UL});
		public static readonly BitSet _EQ_in_variableDeclarator2276 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E450UL,0x4UL});
		public static readonly BitSet _variableInitializer_in_variableDeclarator2278 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceFieldDeclaration_in_interfaceBodyDeclaration2317 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceMethodDeclaration_in_interfaceBodyDeclaration2327 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceDeclaration_in_interfaceBodyDeclaration2337 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classDeclaration_in_interfaceBodyDeclaration2347 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SEMI_in_interfaceBodyDeclaration2357 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_interfaceMethodDeclaration2377 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000012010UL,0x4UL});
		public static readonly BitSet _typeParameters_in_interfaceMethodDeclaration2388 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL,0x4UL});
		public static readonly BitSet _type_in_interfaceMethodDeclaration2410 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _VOID_in_interfaceMethodDeclaration2421 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_interfaceMethodDeclaration2441 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _formalParameters_in_interfaceMethodDeclaration2451 = new BitSet(new ulong[]{0x0UL,0x1000040000000800UL});
		public static readonly BitSet _LBRACKET_in_interfaceMethodDeclaration2462 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_interfaceMethodDeclaration2464 = new BitSet(new ulong[]{0x0UL,0x1000040000000800UL});
		public static readonly BitSet _THROWS_in_interfaceMethodDeclaration2486 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _qualifiedNameList_in_interfaceMethodDeclaration2488 = new BitSet(new ulong[]{0x0UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_interfaceMethodDeclaration2501 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_interfaceFieldDeclaration2523 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _type_in_interfaceFieldDeclaration2525 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _variableDeclarator_in_interfaceFieldDeclaration2527 = new BitSet(new ulong[]{0x20000000UL,0x40000000000UL});
		public static readonly BitSet _COMMA_in_interfaceFieldDeclaration2538 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _variableDeclarator_in_interfaceFieldDeclaration2540 = new BitSet(new ulong[]{0x20000000UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_interfaceFieldDeclaration2561 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classOrInterfaceType_in_type2582 = new BitSet(new ulong[]{0x2UL,0x800UL});
		public static readonly BitSet _LBRACKET_in_type2593 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_type2595 = new BitSet(new ulong[]{0x2UL,0x800UL});
		public static readonly BitSet _primitiveType_in_type2616 = new BitSet(new ulong[]{0x2UL,0x800UL});
		public static readonly BitSet _LBRACKET_in_type2627 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_type2629 = new BitSet(new ulong[]{0x2UL,0x800UL});
		public static readonly BitSet _IDENTIFIER_in_classOrInterfaceType2661 = new BitSet(new ulong[]{0x800000002UL,0x10000UL});
		public static readonly BitSet _typeArguments_in_classOrInterfaceType2672 = new BitSet(new ulong[]{0x800000002UL});
		public static readonly BitSet _DOT_in_classOrInterfaceType2694 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_classOrInterfaceType2696 = new BitSet(new ulong[]{0x800000002UL,0x10000UL});
		public static readonly BitSet _typeArguments_in_classOrInterfaceType2711 = new BitSet(new ulong[]{0x800000002UL});
		public static readonly BitSet _IDENTIFIER_in_classOrInterfaceTypeWithDiamond2757 = new BitSet(new ulong[]{0x800000002UL,0x10000UL});
		public static readonly BitSet _typeArgumentsOrDiamond_in_classOrInterfaceTypeWithDiamond2768 = new BitSet(new ulong[]{0x800000002UL});
		public static readonly BitSet _DOT_in_classOrInterfaceTypeWithDiamond2790 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_classOrInterfaceTypeWithDiamond2792 = new BitSet(new ulong[]{0x800000002UL,0x10000UL});
		public static readonly BitSet _typeArgumentsOrDiamond_in_classOrInterfaceTypeWithDiamond2807 = new BitSet(new ulong[]{0x800000002UL});
		public static readonly BitSet _LT_in_typeArguments2944 = new BitSet(new ulong[]{0x8020001002014000UL,0x82000002010UL});
		public static readonly BitSet _typeArgument_in_typeArguments2946 = new BitSet(new ulong[]{0x400000020000000UL});
		public static readonly BitSet _COMMA_in_typeArguments2949 = new BitSet(new ulong[]{0x8020001002014000UL,0x82000002010UL});
		public static readonly BitSet _typeArgument_in_typeArguments2951 = new BitSet(new ulong[]{0x400000020000000UL});
		public static readonly BitSet _GT_in_typeArguments2955 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_typeArgument2975 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _QUES_in_typeArgument2985 = new BitSet(new ulong[]{0x800000000002UL,0x40000000000000UL});
		public static readonly BitSet _set_in_typeArgument3009 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _type_in_typeArgument3053 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _qualifiedName_in_qualifiedNameList3084 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _COMMA_in_qualifiedNameList3095 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _qualifiedName_in_qualifiedNameList3097 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _LPAREN_in_formalParameters3128 = new BitSet(new ulong[]{0x8028001002014000UL,0xA0000042010UL});
		public static readonly BitSet _formalParameterDecls_in_formalParameters3139 = new BitSet(new ulong[]{0x0UL,0x20000000000UL});
		public static readonly BitSet _RPAREN_in_formalParameters3161 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ellipsisParameterDecl_in_formalParameterDecls3181 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _normalParameterDecl_in_formalParameterDecls3191 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _COMMA_in_formalParameterDecls3202 = new BitSet(new ulong[]{0x8028001002014000UL,0x80000042010UL});
		public static readonly BitSet _normalParameterDecl_in_formalParameterDecls3204 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _normalParameterDecl_in_formalParameterDecls3226 = new BitSet(new ulong[]{0x20000000UL});
		public static readonly BitSet _COMMA_in_formalParameterDecls3236 = new BitSet(new ulong[]{0x8028001002014000UL,0x80000042010UL});
		public static readonly BitSet _ellipsisParameterDecl_in_formalParameterDecls3258 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variableModifiers_in_normalParameterDecl3278 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _type_in_normalParameterDecl3280 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_normalParameterDecl3282 = new BitSet(new ulong[]{0x2UL,0x800UL});
		public static readonly BitSet _LBRACKET_in_normalParameterDecl3293 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_normalParameterDecl3295 = new BitSet(new ulong[]{0x2UL,0x800UL});
		public static readonly BitSet _variableModifiers_in_ellipsisParameterDecl3326 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _type_in_ellipsisParameterDecl3336 = new BitSet(new ulong[]{0x40000000000UL});
		public static readonly BitSet _ELLIPSIS_in_ellipsisParameterDecl3339 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_ellipsisParameterDecl3349 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _nonWildcardTypeArguments_in_explicitConstructorInvocation3371 = new BitSet(new ulong[]{0x0UL,0x440000000000000UL});
		public static readonly BitSet _set_in_explicitConstructorInvocation3397 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _arguments_in_explicitConstructorInvocation3429 = new BitSet(new ulong[]{0x0UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_explicitConstructorInvocation3431 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _primary_in_explicitConstructorInvocation3442 = new BitSet(new ulong[]{0x800000000UL});
		public static readonly BitSet _DOT_in_explicitConstructorInvocation3452 = new BitSet(new ulong[]{0x0UL,0x40000000010000UL});
		public static readonly BitSet _nonWildcardTypeArguments_in_explicitConstructorInvocation3463 = new BitSet(new ulong[]{0x0UL,0x40000000000000UL});
		public static readonly BitSet _SUPER_in_explicitConstructorInvocation3484 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _arguments_in_explicitConstructorInvocation3494 = new BitSet(new ulong[]{0x0UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_explicitConstructorInvocation3496 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IDENTIFIER_in_qualifiedName3516 = new BitSet(new ulong[]{0x800000002UL});
		public static readonly BitSet _DOT_in_qualifiedName3527 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_qualifiedName3529 = new BitSet(new ulong[]{0x800000002UL});
		public static readonly BitSet _annotation_in_annotations3561 = new BitSet(new ulong[]{0x2UL,0x40000UL});
		public static readonly BitSet _MONKEYS_AT_in_annotation3594 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _qualifiedName_in_annotation3596 = new BitSet(new ulong[]{0x2UL,0x8000UL});
		public static readonly BitSet _LPAREN_in_annotation3610 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C0A028034E450UL,0x4UL});
		public static readonly BitSet _elementValuePairs_in_annotation3637 = new BitSet(new ulong[]{0x0UL,0x20000000000UL});
		public static readonly BitSet _elementValue_in_annotation3661 = new BitSet(new ulong[]{0x0UL,0x20000000000UL});
		public static readonly BitSet _RPAREN_in_annotation3697 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _elementValuePair_in_elementValuePairs3729 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _COMMA_in_elementValuePairs3740 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _elementValuePair_in_elementValuePairs3742 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _IDENTIFIER_in_elementValuePair3773 = new BitSet(new ulong[]{0x200000000000UL});
		public static readonly BitSet _EQ_in_elementValuePair3775 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028034E450UL,0x4UL});
		public static readonly BitSet _elementValue_in_elementValuePair3777 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _conditionalExpression_in_elementValue3797 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotation_in_elementValue3807 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _elementValueArrayInitializer_in_elementValue3817 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LBRACE_in_elementValueArrayInitializer3837 = new BitSet(new ulong[]{0x8064003026014200UL,0xA46C08428034E450UL,0x4UL});
		public static readonly BitSet _elementValue_in_elementValueArrayInitializer3848 = new BitSet(new ulong[]{0x20000000UL,0x4000000000UL});
		public static readonly BitSet _COMMA_in_elementValueArrayInitializer3863 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028034E450UL,0x4UL});
		public static readonly BitSet _elementValue_in_elementValueArrayInitializer3865 = new BitSet(new ulong[]{0x20000000UL,0x4000000000UL});
		public static readonly BitSet _COMMA_in_elementValueArrayInitializer3894 = new BitSet(new ulong[]{0x0UL,0x4000000000UL});
		public static readonly BitSet _RBRACE_in_elementValueArrayInitializer3898 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_annotationTypeDeclaration3921 = new BitSet(new ulong[]{0x0UL,0x40000UL});
		public static readonly BitSet _MONKEYS_AT_in_annotationTypeDeclaration3923 = new BitSet(new ulong[]{0x0UL,0x20UL});
		public static readonly BitSet _INTERFACE_in_annotationTypeDeclaration3933 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_annotationTypeDeclaration3943 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _annotationTypeBody_in_annotationTypeDeclaration3953 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LBRACE_in_annotationTypeBody3974 = new BitSet(new ulong[]{0x802810100A014010UL,0x41030C5C000C2030UL,0x8UL});
		public static readonly BitSet _annotationTypeElementDeclaration_in_annotationTypeBody3986 = new BitSet(new ulong[]{0x802810100A014010UL,0x41030C5C000C2030UL,0x8UL});
		public static readonly BitSet _RBRACE_in_annotationTypeBody4008 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotationMethodDeclaration_in_annotationTypeElementDeclaration4030 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceFieldDeclaration_in_annotationTypeElementDeclaration4040 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _normalClassDeclaration_in_annotationTypeElementDeclaration4050 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _normalInterfaceDeclaration_in_annotationTypeElementDeclaration4060 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enumDeclaration_in_annotationTypeElementDeclaration4070 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotationTypeDeclaration_in_annotationTypeElementDeclaration4080 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SEMI_in_annotationTypeElementDeclaration4090 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_annotationMethodDeclaration4110 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _type_in_annotationMethodDeclaration4112 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_annotationMethodDeclaration4114 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _LPAREN_in_annotationMethodDeclaration4124 = new BitSet(new ulong[]{0x0UL,0x20000000000UL});
		public static readonly BitSet _RPAREN_in_annotationMethodDeclaration4126 = new BitSet(new ulong[]{0x200000000UL,0x40000000000UL});
		public static readonly BitSet _DEFAULT_in_annotationMethodDeclaration4129 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028034E450UL,0x4UL});
		public static readonly BitSet _elementValue_in_annotationMethodDeclaration4131 = new BitSet(new ulong[]{0x0UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_annotationMethodDeclaration4160 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LBRACE_in_block4184 = new BitSet(new ulong[]{0x80EC10350E01C310UL,0xEDEF0D5E803CE471UL,0x1DUL});
		public static readonly BitSet _blockStatement_in_block4195 = new BitSet(new ulong[]{0x80EC10350E01C310UL,0xEDEF0D5E803CE471UL,0x1DUL});
		public static readonly BitSet _RBRACE_in_block4216 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _localVariableDeclarationStatement_in_blockStatement4238 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classOrInterfaceDeclaration_in_blockStatement4248 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _statement_in_blockStatement4258 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _localVariableDeclaration_in_localVariableDeclarationStatement4279 = new BitSet(new ulong[]{0x0UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_localVariableDeclarationStatement4289 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variableModifiers_in_localVariableDeclaration4309 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _type_in_localVariableDeclaration4311 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _variableDeclarator_in_localVariableDeclaration4321 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _COMMA_in_localVariableDeclaration4332 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _variableDeclarator_in_localVariableDeclaration4334 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _block_in_statement4365 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ASSERT_in_statement4389 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_statement4409 = new BitSet(new ulong[]{0x10000000UL,0x40000000000UL});
		public static readonly BitSet _COLON_in_statement4412 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_statement4414 = new BitSet(new ulong[]{0x0UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_statement4418 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ASSERT_in_statement4428 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_statement4431 = new BitSet(new ulong[]{0x10000000UL,0x40000000000UL});
		public static readonly BitSet _COLON_in_statement4434 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_statement4436 = new BitSet(new ulong[]{0x0UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_statement4440 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IF_in_statement4462 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _parExpression_in_statement4464 = new BitSet(new ulong[]{0x80E400350601C300UL,0xADEC0D028030E451UL,0x15UL});
		public static readonly BitSet _statement_in_statement4466 = new BitSet(new ulong[]{0x80000000002UL});
		public static readonly BitSet _ELSE_in_statement4469 = new BitSet(new ulong[]{0x80E400350601C300UL,0xADEC0D028030E451UL,0x15UL});
		public static readonly BitSet _statement_in_statement4471 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _forstatement_in_statement4493 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _WHILE_in_statement4503 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _parExpression_in_statement4505 = new BitSet(new ulong[]{0x80E400350601C300UL,0xADEC0D028030E451UL,0x15UL});
		public static readonly BitSet _statement_in_statement4507 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DO_in_statement4517 = new BitSet(new ulong[]{0x80E400350601C300UL,0xADEC0D028030E451UL,0x15UL});
		public static readonly BitSet _statement_in_statement4519 = new BitSet(new ulong[]{0x0UL,0x0UL,0x10UL});
		public static readonly BitSet _WHILE_in_statement4521 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _parExpression_in_statement4523 = new BitSet(new ulong[]{0x0UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_statement4525 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _trystatement_in_statement4535 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SWITCH_in_statement4545 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _parExpression_in_statement4547 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _LBRACE_in_statement4549 = new BitSet(new ulong[]{0x200800000UL,0x4000000000UL});
		public static readonly BitSet _switchBlockStatementGroups_in_statement4551 = new BitSet(new ulong[]{0x0UL,0x4000000000UL});
		public static readonly BitSet _RBRACE_in_statement4553 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SYNCHRONIZED_in_statement4563 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _parExpression_in_statement4565 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _block_in_statement4567 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _RETURN_in_statement4577 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C0C028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_statement4580 = new BitSet(new ulong[]{0x0UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_statement4585 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _THROW_in_statement4595 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_statement4597 = new BitSet(new ulong[]{0x0UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_statement4599 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _BREAK_in_statement4609 = new BitSet(new ulong[]{0x8000000000000000UL,0x40000000000UL});
		public static readonly BitSet _IDENTIFIER_in_statement4624 = new BitSet(new ulong[]{0x0UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_statement4641 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _CONTINUE_in_statement4651 = new BitSet(new ulong[]{0x8000000000000000UL,0x40000000000UL});
		public static readonly BitSet _IDENTIFIER_in_statement4666 = new BitSet(new ulong[]{0x0UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_statement4683 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_statement4693 = new BitSet(new ulong[]{0x0UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_statement4696 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IDENTIFIER_in_statement4711 = new BitSet(new ulong[]{0x10000000UL});
		public static readonly BitSet _COLON_in_statement4713 = new BitSet(new ulong[]{0x80E400350601C300UL,0xADEC0D028030E451UL,0x15UL});
		public static readonly BitSet _statement_in_statement4715 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SEMI_in_statement4725 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _switchBlockStatementGroup_in_switchBlockStatementGroups4747 = new BitSet(new ulong[]{0x200800002UL});
		public static readonly BitSet _switchLabel_in_switchBlockStatementGroup4776 = new BitSet(new ulong[]{0x80EC10350E01C312UL,0xEDEF0D1E803CE471UL,0x1DUL});
		public static readonly BitSet _blockStatement_in_switchBlockStatementGroup4787 = new BitSet(new ulong[]{0x80EC10350E01C312UL,0xEDEF0D1E803CE471UL,0x1DUL});
		public static readonly BitSet _CASE_in_switchLabel4818 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_switchLabel4820 = new BitSet(new ulong[]{0x10000000UL});
		public static readonly BitSet _COLON_in_switchLabel4822 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DEFAULT_in_switchLabel4832 = new BitSet(new ulong[]{0x10000000UL});
		public static readonly BitSet _COLON_in_switchLabel4834 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _TRY_in_trystatement4855 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _block_in_trystatement4857 = new BitSet(new ulong[]{0x10000001000000UL});
		public static readonly BitSet _catches_in_trystatement4871 = new BitSet(new ulong[]{0x10000000000000UL});
		public static readonly BitSet _FINALLY_in_trystatement4873 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _block_in_trystatement4875 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _catches_in_trystatement4889 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _FINALLY_in_trystatement4903 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _block_in_trystatement4905 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _tryWithResourcesStatement_in_trystatement4925 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _catchClause_in_catches4946 = new BitSet(new ulong[]{0x1000002UL});
		public static readonly BitSet _catchClause_in_catches4957 = new BitSet(new ulong[]{0x1000002UL});
		public static readonly BitSet _CATCH_in_catchClause4988 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _LPAREN_in_catchClause4990 = new BitSet(new ulong[]{0x8028001002014000UL,0x80000042010UL});
		public static readonly BitSet _formalParameter_in_catchClause4992 = new BitSet(new ulong[]{0x0UL,0x20000000000UL});
		public static readonly BitSet _RPAREN_in_catchClause5002 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _block_in_catchClause5004 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variableModifiers_in_formalParameter5025 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _catchType_in_formalParameter5027 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_formalParameter5029 = new BitSet(new ulong[]{0x2UL,0x800UL});
		public static readonly BitSet _LBRACKET_in_formalParameter5040 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_formalParameter5042 = new BitSet(new ulong[]{0x2UL,0x800UL});
		public static readonly BitSet _catchType_in_formalParameter5063 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_formalParameter5065 = new BitSet(new ulong[]{0x2UL,0x800UL});
		public static readonly BitSet _LBRACKET_in_formalParameter5076 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_formalParameter5078 = new BitSet(new ulong[]{0x2UL,0x800UL});
		public static readonly BitSet _type_in_catchType5108 = new BitSet(new ulong[]{0x802UL});
		public static readonly BitSet _BAR_in_catchType5119 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _type_in_catchType5121 = new BitSet(new ulong[]{0x802UL});
		public static readonly BitSet _TRY_in_tryWithResourcesStatement5152 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _resourceSpecification_in_tryWithResourcesStatement5154 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _block_in_tryWithResourcesStatement5156 = new BitSet(new ulong[]{0x10000001000002UL});
		public static readonly BitSet _catches_in_tryWithResourcesStatement5158 = new BitSet(new ulong[]{0x10000000000002UL});
		public static readonly BitSet _FINALLY_in_tryWithResourcesStatement5162 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _block_in_tryWithResourcesStatement5164 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LPAREN_in_resourceSpecification5186 = new BitSet(new ulong[]{0x8028001002014000UL,0x80000042010UL});
		public static readonly BitSet _resources_in_resourceSpecification5188 = new BitSet(new ulong[]{0x0UL,0x60000000000UL});
		public static readonly BitSet _SEMI_in_resourceSpecification5190 = new BitSet(new ulong[]{0x0UL,0x20000000000UL});
		public static readonly BitSet _RPAREN_in_resourceSpecification5193 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _resource_in_resources5213 = new BitSet(new ulong[]{0x2UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_resources5218 = new BitSet(new ulong[]{0x8028001002014000UL,0x80000042010UL});
		public static readonly BitSet _resource_in_resources5220 = new BitSet(new ulong[]{0x2UL,0x40000000000UL});
		public static readonly BitSet _variableModifiers_in_resource5243 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _type_in_resource5246 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_resource5248 = new BitSet(new ulong[]{0x200000000000UL,0x800UL});
		public static readonly BitSet _LBRACKET_in_resource5251 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_resource5253 = new BitSet(new ulong[]{0x200000000000UL,0x800UL});
		public static readonly BitSet _EQ_in_resource5257 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_resource5259 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _FOR_in_forstatement5298 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _LPAREN_in_forstatement5300 = new BitSet(new ulong[]{0x8028001002014000UL,0x80000042010UL});
		public static readonly BitSet _variableModifiers_in_forstatement5302 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _type_in_forstatement5304 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_forstatement5306 = new BitSet(new ulong[]{0x10000000UL});
		public static readonly BitSet _COLON_in_forstatement5308 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_forstatement5319 = new BitSet(new ulong[]{0x0UL,0x20000000000UL});
		public static readonly BitSet _RPAREN_in_forstatement5321 = new BitSet(new ulong[]{0x80E400350601C300UL,0xADEC0D028030E451UL,0x15UL});
		public static readonly BitSet _statement_in_forstatement5323 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _FOR_in_forstatement5355 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _LPAREN_in_forstatement5357 = new BitSet(new ulong[]{0x806C003006014200UL,0xA46C0C028034E050UL,0x4UL});
		public static readonly BitSet _forInit_in_forstatement5377 = new BitSet(new ulong[]{0x0UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_forstatement5398 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C0C028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_forstatement5418 = new BitSet(new ulong[]{0x0UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_forstatement5439 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C0A028030E050UL,0x4UL});
		public static readonly BitSet _expressionList_in_forstatement5459 = new BitSet(new ulong[]{0x0UL,0x20000000000UL});
		public static readonly BitSet _RPAREN_in_forstatement5480 = new BitSet(new ulong[]{0x80E400350601C300UL,0xADEC0D028030E451UL,0x15UL});
		public static readonly BitSet _statement_in_forstatement5482 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _localVariableDeclaration_in_forInit5502 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expressionList_in_forInit5512 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LPAREN_in_parExpression5532 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_parExpression5534 = new BitSet(new ulong[]{0x0UL,0x20000000000UL});
		public static readonly BitSet _RPAREN_in_parExpression5536 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_expressionList5556 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _COMMA_in_expressionList5567 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_expressionList5569 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _conditionalExpression_in_expression5601 = new BitSet(new ulong[]{0x400200000402082UL,0x10A00140010000UL});
		public static readonly BitSet _assignmentOperator_in_expression5612 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_expression5614 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _EQ_in_assignmentOperator5646 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _PLUSEQ_in_assignmentOperator5656 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SUBEQ_in_assignmentOperator5666 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _STAREQ_in_assignmentOperator5676 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SLASHEQ_in_assignmentOperator5686 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _AMPEQ_in_assignmentOperator5696 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _BAREQ_in_assignmentOperator5706 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _CARETEQ_in_assignmentOperator5716 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _PERCENTEQ_in_assignmentOperator5726 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LT_in_assignmentOperator5737 = new BitSet(new ulong[]{0x0UL,0x10000UL});
		public static readonly BitSet _LT_in_assignmentOperator5739 = new BitSet(new ulong[]{0x200000000000UL});
		public static readonly BitSet _EQ_in_assignmentOperator5741 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GT_in_assignmentOperator5752 = new BitSet(new ulong[]{0x400000000000000UL});
		public static readonly BitSet _GT_in_assignmentOperator5754 = new BitSet(new ulong[]{0x400000000000000UL});
		public static readonly BitSet _GT_in_assignmentOperator5756 = new BitSet(new ulong[]{0x200000000000UL});
		public static readonly BitSet _EQ_in_assignmentOperator5758 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GT_in_assignmentOperator5769 = new BitSet(new ulong[]{0x400000000000000UL});
		public static readonly BitSet _GT_in_assignmentOperator5771 = new BitSet(new ulong[]{0x200000000000UL});
		public static readonly BitSet _EQ_in_assignmentOperator5773 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _conditionalOrExpression_in_conditionalExpression5794 = new BitSet(new ulong[]{0x2UL,0x2000000000UL});
		public static readonly BitSet _QUES_in_conditionalExpression5805 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_conditionalExpression5807 = new BitSet(new ulong[]{0x10000000UL});
		public static readonly BitSet _COLON_in_conditionalExpression5809 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _conditionalExpression_in_conditionalExpression5811 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _conditionalAndExpression_in_conditionalOrExpression5841 = new BitSet(new ulong[]{0x1002UL});
		public static readonly BitSet _BARBAR_in_conditionalOrExpression5852 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _conditionalAndExpression_in_conditionalOrExpression5854 = new BitSet(new ulong[]{0x1002UL});
		public static readonly BitSet _inclusiveOrExpression_in_conditionalAndExpression5884 = new BitSet(new ulong[]{0x42UL});
		public static readonly BitSet _AMPAMP_in_conditionalAndExpression5895 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _inclusiveOrExpression_in_conditionalAndExpression5897 = new BitSet(new ulong[]{0x42UL});
		public static readonly BitSet _exclusiveOrExpression_in_inclusiveOrExpression5927 = new BitSet(new ulong[]{0x802UL});
		public static readonly BitSet _BAR_in_inclusiveOrExpression5938 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _exclusiveOrExpression_in_inclusiveOrExpression5940 = new BitSet(new ulong[]{0x802UL});
		public static readonly BitSet _andExpression_in_exclusiveOrExpression5970 = new BitSet(new ulong[]{0x200002UL});
		public static readonly BitSet _CARET_in_exclusiveOrExpression5981 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _andExpression_in_exclusiveOrExpression5983 = new BitSet(new ulong[]{0x200002UL});
		public static readonly BitSet _equalityExpression_in_andExpression6013 = new BitSet(new ulong[]{0x22UL});
		public static readonly BitSet _AMP_in_andExpression6024 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _equalityExpression_in_andExpression6026 = new BitSet(new ulong[]{0x22UL});
		public static readonly BitSet _instanceOfExpression_in_equalityExpression6056 = new BitSet(new ulong[]{0x400000000402UL});
		public static readonly BitSet _set_in_equalityExpression6083 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _instanceOfExpression_in_equalityExpression6133 = new BitSet(new ulong[]{0x400000000402UL});
		public static readonly BitSet _relationalExpression_in_instanceOfExpression6163 = new BitSet(new ulong[]{0x2UL,0x8UL});
		public static readonly BitSet _INSTANCEOF_in_instanceOfExpression6174 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _type_in_instanceOfExpression6176 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _shiftExpression_in_relationalExpression6206 = new BitSet(new ulong[]{0x400000000000002UL,0x10000UL});
		public static readonly BitSet _relationalOp_in_relationalExpression6217 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _shiftExpression_in_relationalExpression6219 = new BitSet(new ulong[]{0x400000000000002UL,0x10000UL});
		public static readonly BitSet _LT_in_relationalOp6250 = new BitSet(new ulong[]{0x200000000000UL});
		public static readonly BitSet _EQ_in_relationalOp6252 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GT_in_relationalOp6263 = new BitSet(new ulong[]{0x200000000000UL});
		public static readonly BitSet _EQ_in_relationalOp6265 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LT_in_relationalOp6275 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GT_in_relationalOp6285 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _additiveExpression_in_shiftExpression6304 = new BitSet(new ulong[]{0x400000000000002UL,0x10000UL});
		public static readonly BitSet _shiftOp_in_shiftExpression6315 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _additiveExpression_in_shiftExpression6317 = new BitSet(new ulong[]{0x400000000000002UL,0x10000UL});
		public static readonly BitSet _LT_in_shiftOp6348 = new BitSet(new ulong[]{0x0UL,0x10000UL});
		public static readonly BitSet _LT_in_shiftOp6350 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GT_in_shiftOp6361 = new BitSet(new ulong[]{0x400000000000000UL});
		public static readonly BitSet _GT_in_shiftOp6363 = new BitSet(new ulong[]{0x400000000000000UL});
		public static readonly BitSet _GT_in_shiftOp6365 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GT_in_shiftOp6376 = new BitSet(new ulong[]{0x400000000000000UL});
		public static readonly BitSet _GT_in_shiftOp6378 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _multiplicativeExpression_in_additiveExpression6397 = new BitSet(new ulong[]{0x2UL,0x8000080000000UL});
		public static readonly BitSet _set_in_additiveExpression6424 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _multiplicativeExpression_in_additiveExpression6474 = new BitSet(new ulong[]{0x2UL,0x8000080000000UL});
		public static readonly BitSet _unaryExpression_in_multiplicativeExpression6511 = new BitSet(new ulong[]{0x2UL,0x500020000000UL});
		public static readonly BitSet _set_in_multiplicativeExpression6538 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _unaryExpression_in_multiplicativeExpression6606 = new BitSet(new ulong[]{0x2UL,0x500020000000UL});
		public static readonly BitSet _PLUS_in_unaryExpression6638 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _unaryExpression_in_unaryExpression6641 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SUB_in_unaryExpression6651 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _unaryExpression_in_unaryExpression6653 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _PLUSPLUS_in_unaryExpression6663 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _unaryExpression_in_unaryExpression6665 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SUBSUB_in_unaryExpression6675 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _unaryExpression_in_unaryExpression6677 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _unaryExpressionNotPlusMinus_in_unaryExpression6687 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _TILDE_in_unaryExpressionNotPlusMinus6706 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _unaryExpression_in_unaryExpressionNotPlusMinus6708 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _BANG_in_unaryExpressionNotPlusMinus6718 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _unaryExpression_in_unaryExpressionNotPlusMinus6720 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _castExpression_in_unaryExpressionNotPlusMinus6730 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _primary_in_unaryExpressionNotPlusMinus6740 = new BitSet(new ulong[]{0x800000002UL,0x20000200000800UL});
		public static readonly BitSet _selector_in_unaryExpressionNotPlusMinus6751 = new BitSet(new ulong[]{0x800000002UL,0x20000200000800UL});
		public static readonly BitSet _LPAREN_in_castExpression6820 = new BitSet(new ulong[]{0x20001002014000UL,0x80000002010UL});
		public static readonly BitSet _primitiveType_in_castExpression6822 = new BitSet(new ulong[]{0x0UL,0x20000000000UL});
		public static readonly BitSet _RPAREN_in_castExpression6824 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _unaryExpression_in_castExpression6826 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LPAREN_in_castExpression6836 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _type_in_castExpression6838 = new BitSet(new ulong[]{0x0UL,0x20000000000UL});
		public static readonly BitSet _RPAREN_in_castExpression6840 = new BitSet(new ulong[]{0x8064003006014200UL,0xA44408000030E050UL,0x4UL});
		public static readonly BitSet _unaryExpressionNotPlusMinus_in_castExpression6842 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _parExpression_in_primary6863 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _THIS_in_primary6885 = new BitSet(new ulong[]{0x800000002UL,0x8800UL});
		public static readonly BitSet _DOT_in_primary6896 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_primary6898 = new BitSet(new ulong[]{0x800000002UL,0x8800UL});
		public static readonly BitSet _identifierSuffix_in_primary6920 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IDENTIFIER_in_primary6941 = new BitSet(new ulong[]{0x800000002UL,0x8800UL});
		public static readonly BitSet _DOT_in_primary6952 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_primary6954 = new BitSet(new ulong[]{0x800000002UL,0x8800UL});
		public static readonly BitSet _identifierSuffix_in_primary6976 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SUPER_in_primary6997 = new BitSet(new ulong[]{0x800000000UL,0x8000UL});
		public static readonly BitSet _superSuffix_in_primary7007 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _literal_in_primary7017 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _creator_in_primary7027 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _primitiveType_in_primary7037 = new BitSet(new ulong[]{0x800000000UL,0x800UL});
		public static readonly BitSet _LBRACKET_in_primary7048 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_primary7050 = new BitSet(new ulong[]{0x800000000UL,0x800UL});
		public static readonly BitSet _DOT_in_primary7071 = new BitSet(new ulong[]{0x8000000UL});
		public static readonly BitSet _CLASS_in_primary7073 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _VOID_in_primary7083 = new BitSet(new ulong[]{0x800000000UL});
		public static readonly BitSet _DOT_in_primary7085 = new BitSet(new ulong[]{0x8000000UL});
		public static readonly BitSet _CLASS_in_primary7087 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _arguments_in_superSuffix7106 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_superSuffix7116 = new BitSet(new ulong[]{0x8000000000000000UL,0x10000UL});
		public static readonly BitSet _typeArguments_in_superSuffix7119 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_superSuffix7140 = new BitSet(new ulong[]{0x2UL,0x8000UL});
		public static readonly BitSet _arguments_in_superSuffix7151 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LBRACKET_in_identifierSuffix7182 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_identifierSuffix7184 = new BitSet(new ulong[]{0x800000000UL,0x800UL});
		public static readonly BitSet _DOT_in_identifierSuffix7205 = new BitSet(new ulong[]{0x8000000UL});
		public static readonly BitSet _CLASS_in_identifierSuffix7207 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LBRACKET_in_identifierSuffix7218 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_identifierSuffix7220 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_identifierSuffix7222 = new BitSet(new ulong[]{0x2UL,0x800UL});
		public static readonly BitSet _arguments_in_identifierSuffix7243 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_identifierSuffix7253 = new BitSet(new ulong[]{0x8000000UL});
		public static readonly BitSet _CLASS_in_identifierSuffix7255 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_identifierSuffix7265 = new BitSet(new ulong[]{0x0UL,0x10000UL});
		public static readonly BitSet _nonWildcardTypeArguments_in_identifierSuffix7267 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_identifierSuffix7269 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _arguments_in_identifierSuffix7271 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_identifierSuffix7281 = new BitSet(new ulong[]{0x0UL,0x400000000000000UL});
		public static readonly BitSet _THIS_in_identifierSuffix7283 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_identifierSuffix7293 = new BitSet(new ulong[]{0x0UL,0x40000000000000UL});
		public static readonly BitSet _SUPER_in_identifierSuffix7295 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _arguments_in_identifierSuffix7297 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _innerCreator_in_identifierSuffix7307 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_selector7326 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_selector7328 = new BitSet(new ulong[]{0x2UL,0x8000UL});
		public static readonly BitSet _arguments_in_selector7330 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_selector7341 = new BitSet(new ulong[]{0x0UL,0x10000UL});
		public static readonly BitSet _nonWildcardTypeArguments_in_selector7343 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_selector7345 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _arguments_in_selector7347 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_selector7358 = new BitSet(new ulong[]{0x0UL,0x400000000000000UL});
		public static readonly BitSet _THIS_in_selector7360 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_selector7370 = new BitSet(new ulong[]{0x0UL,0x40000000000000UL});
		public static readonly BitSet _SUPER_in_selector7372 = new BitSet(new ulong[]{0x800000000UL,0x8000UL});
		public static readonly BitSet _superSuffix_in_selector7382 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _innerCreator_in_selector7392 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LBRACKET_in_selector7402 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_selector7404 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_selector7406 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NEW_in_creator7425 = new BitSet(new ulong[]{0x0UL,0x10000UL});
		public static readonly BitSet _nonWildcardTypeArguments_in_creator7427 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _classOrInterfaceTypeWithDiamond_in_creator7429 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _classCreatorRest_in_creator7431 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NEW_in_creator7441 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _classOrInterfaceTypeWithDiamond_in_creator7443 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _classCreatorRest_in_creator7445 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _arrayCreator_in_creator7455 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NEW_in_arrayCreator7474 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _createdName_in_arrayCreator7476 = new BitSet(new ulong[]{0x0UL,0x800UL});
		public static readonly BitSet _LBRACKET_in_arrayCreator7486 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_arrayCreator7488 = new BitSet(new ulong[]{0x0UL,0xC00UL});
		public static readonly BitSet _LBRACKET_in_arrayCreator7499 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_arrayCreator7501 = new BitSet(new ulong[]{0x0UL,0xC00UL});
		public static readonly BitSet _arrayInitializer_in_arrayCreator7522 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NEW_in_arrayCreator7533 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _createdName_in_arrayCreator7535 = new BitSet(new ulong[]{0x0UL,0x800UL});
		public static readonly BitSet _LBRACKET_in_arrayCreator7545 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_arrayCreator7547 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_arrayCreator7557 = new BitSet(new ulong[]{0x2UL,0x800UL});
		public static readonly BitSet _LBRACKET_in_arrayCreator7571 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_arrayCreator7573 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_arrayCreator7587 = new BitSet(new ulong[]{0x2UL,0x800UL});
		public static readonly BitSet _LBRACKET_in_arrayCreator7609 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_arrayCreator7611 = new BitSet(new ulong[]{0x2UL,0x800UL});
		public static readonly BitSet _arrayInitializer_in_variableInitializer7641 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_variableInitializer7651 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LBRACE_in_arrayInitializer7670 = new BitSet(new ulong[]{0x8064003026014200UL,0xA46C08428030E450UL,0x4UL});
		public static readonly BitSet _variableInitializer_in_arrayInitializer7686 = new BitSet(new ulong[]{0x20000000UL,0x4000000000UL});
		public static readonly BitSet _COMMA_in_arrayInitializer7705 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E450UL,0x4UL});
		public static readonly BitSet _variableInitializer_in_arrayInitializer7707 = new BitSet(new ulong[]{0x20000000UL,0x4000000000UL});
		public static readonly BitSet _COMMA_in_arrayInitializer7757 = new BitSet(new ulong[]{0x0UL,0x4000000000UL});
		public static readonly BitSet _RBRACE_in_arrayInitializer7770 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classOrInterfaceTypeWithDiamond_in_createdName7803 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _primitiveType_in_createdName7813 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_innerCreator7832 = new BitSet(new ulong[]{0x0UL,0x100000UL});
		public static readonly BitSet _NEW_in_innerCreator7834 = new BitSet(new ulong[]{0x8000000000000000UL,0x10000UL});
		public static readonly BitSet _nonWildcardTypeArgumentsOrDiamond_in_innerCreator7845 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_innerCreator7866 = new BitSet(new ulong[]{0x0UL,0x18000UL});
		public static readonly BitSet _typeArguments_in_innerCreator7877 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _classCreatorRest_in_innerCreator7898 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _arguments_in_classCreatorRest7917 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _classBody_in_classCreatorRest7928 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LT_in_nonWildcardTypeArguments7958 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _typeList_in_nonWildcardTypeArguments7960 = new BitSet(new ulong[]{0x400000000000000UL});
		public static readonly BitSet _GT_in_nonWildcardTypeArguments7962 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LT_in_typeArgumentsOrDiamond7981 = new BitSet(new ulong[]{0x400000000000000UL});
		public static readonly BitSet _GT_in_typeArgumentsOrDiamond7983 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _typeArguments_in_typeArgumentsOrDiamond7993 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LT_in_nonWildcardTypeArgumentsOrDiamond8012 = new BitSet(new ulong[]{0x400000000000000UL});
		public static readonly BitSet _GT_in_nonWildcardTypeArgumentsOrDiamond8014 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _nonWildcardTypeArguments_in_nonWildcardTypeArgumentsOrDiamond8024 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LPAREN_in_arguments8044 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C0A028030E050UL,0x4UL});
		public static readonly BitSet _expressionList_in_arguments8047 = new BitSet(new ulong[]{0x0UL,0x20000000000UL});
		public static readonly BitSet _RPAREN_in_arguments8060 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _INTLITERAL_in_intLiteral8077 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LONGLITERAL_in_longLiteral8094 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _FLOATLITERAL_in_floatLiteral8111 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOUBLELITERAL_in_doubleLiteral8128 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _CHARLITERAL_in_charLiteral8145 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _STRINGLITERAL_in_stringLiteral8162 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _TRUE_in_trueLiteral8179 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _FALSE_in_falseLiteral8196 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NULL_in_nullLiteral8213 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _intLiteral_in_literal8233 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _longLiteral_in_literal8243 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _floatLiteral_in_literal8253 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _doubleLiteral_in_literal8263 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _charLiteral_in_literal8273 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _stringLiteral_in_literal8283 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _trueLiteral_in_literal8293 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _falseLiteral_in_literal8303 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _nullLiteral_in_literal8313 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_classHeader8337 = new BitSet(new ulong[]{0x8000000UL});
		public static readonly BitSet _CLASS_in_classHeader8339 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_classHeader8341 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_enumHeader8361 = new BitSet(new ulong[]{0x8000100000000000UL});
		public static readonly BitSet _set_in_enumHeader8363 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_enumHeader8369 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_interfaceHeader8389 = new BitSet(new ulong[]{0x0UL,0x20UL});
		public static readonly BitSet _INTERFACE_in_interfaceHeader8391 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_interfaceHeader8393 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_annotationHeader8413 = new BitSet(new ulong[]{0x0UL,0x40000UL});
		public static readonly BitSet _MONKEYS_AT_in_annotationHeader8415 = new BitSet(new ulong[]{0x0UL,0x20UL});
		public static readonly BitSet _INTERFACE_in_annotationHeader8417 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_annotationHeader8419 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_typeHeader8439 = new BitSet(new ulong[]{0x100008000000UL,0x40020UL});
		public static readonly BitSet _CLASS_in_typeHeader8442 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _ENUM_in_typeHeader8444 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _MONKEYS_AT_in_typeHeader8447 = new BitSet(new ulong[]{0x0UL,0x20UL});
		public static readonly BitSet _INTERFACE_in_typeHeader8451 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_typeHeader8455 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_methodHeader8475 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000012010UL,0x4UL});
		public static readonly BitSet _typeParameters_in_methodHeader8477 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL,0x4UL});
		public static readonly BitSet _type_in_methodHeader8481 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _VOID_in_methodHeader8483 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_methodHeader8487 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _LPAREN_in_methodHeader8489 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_fieldHeader8509 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _type_in_fieldHeader8511 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_fieldHeader8513 = new BitSet(new ulong[]{0x200020000000UL,0x40000000800UL});
		public static readonly BitSet _LBRACKET_in_fieldHeader8516 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_fieldHeader8517 = new BitSet(new ulong[]{0x200020000000UL,0x40000000800UL});
		public static readonly BitSet _set_in_fieldHeader8521 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variableModifiers_in_localVariableHeader8547 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _type_in_localVariableHeader8549 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_localVariableHeader8551 = new BitSet(new ulong[]{0x200020000000UL,0x40000000800UL});
		public static readonly BitSet _LBRACKET_in_localVariableHeader8554 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_localVariableHeader8555 = new BitSet(new ulong[]{0x200020000000UL,0x40000000800UL});
		public static readonly BitSet _set_in_localVariableHeader8559 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotations_in_synpred2_Java107 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _packageDeclaration_in_synpred2_Java136 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classDeclaration_in_synpred12_Java494 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _normalClassDeclaration_in_synpred27_Java731 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _normalInterfaceDeclaration_in_synpred43_Java1410 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _fieldDeclaration_in_synpred52_Java1740 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _methodDeclaration_in_synpred53_Java1751 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classDeclaration_in_synpred54_Java1762 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _explicitConstructorInvocation_in_synpred57_Java1899 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_synpred59_Java1811 = new BitSet(new ulong[]{0x8000000000000000UL,0x10000UL});
		public static readonly BitSet _typeParameters_in_synpred59_Java1822 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_synpred59_Java1843 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _formalParameters_in_synpred59_Java1853 = new BitSet(new ulong[]{0x0UL,0x1000000000000400UL});
		public static readonly BitSet _THROWS_in_synpred59_Java1864 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _qualifiedNameList_in_synpred59_Java1866 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _LBRACE_in_synpred59_Java1887 = new BitSet(new ulong[]{0x80EC10350E01C310UL,0xEDEF0D5E803DE471UL,0x1DUL});
		public static readonly BitSet _explicitConstructorInvocation_in_synpred59_Java1899 = new BitSet(new ulong[]{0x80EC10350E01C310UL,0xEDEF0D5E803CE471UL,0x1DUL});
		public static readonly BitSet _blockStatement_in_synpred59_Java1921 = new BitSet(new ulong[]{0x80EC10350E01C310UL,0xEDEF0D5E803CE471UL,0x1DUL});
		public static readonly BitSet _RBRACE_in_synpred59_Java1942 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceFieldDeclaration_in_synpred68_Java2317 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceMethodDeclaration_in_synpred69_Java2327 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceDeclaration_in_synpred70_Java2337 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classDeclaration_in_synpred71_Java2347 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ellipsisParameterDecl_in_synpred99_Java3181 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _normalParameterDecl_in_synpred101_Java3191 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _COMMA_in_synpred101_Java3202 = new BitSet(new ulong[]{0x8028001002014000UL,0x80000042010UL});
		public static readonly BitSet _normalParameterDecl_in_synpred101_Java3204 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _normalParameterDecl_in_synpred102_Java3226 = new BitSet(new ulong[]{0x20000000UL});
		public static readonly BitSet _COMMA_in_synpred102_Java3236 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _nonWildcardTypeArguments_in_synpred106_Java3371 = new BitSet(new ulong[]{0x0UL,0x440000000000000UL});
		public static readonly BitSet _set_in_synpred106_Java3397 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _arguments_in_synpred106_Java3429 = new BitSet(new ulong[]{0x0UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_synpred106_Java3431 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotationMethodDeclaration_in_synpred120_Java4030 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceFieldDeclaration_in_synpred121_Java4040 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _normalClassDeclaration_in_synpred122_Java4050 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _normalInterfaceDeclaration_in_synpred123_Java4060 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enumDeclaration_in_synpred124_Java4070 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotationTypeDeclaration_in_synpred125_Java4080 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _localVariableDeclarationStatement_in_synpred128_Java4238 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classOrInterfaceDeclaration_in_synpred129_Java4248 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ASSERT_in_synpred133_Java4389 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_synpred133_Java4409 = new BitSet(new ulong[]{0x10000000UL,0x40000000000UL});
		public static readonly BitSet _COLON_in_synpred133_Java4412 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_synpred133_Java4414 = new BitSet(new ulong[]{0x0UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_synpred133_Java4418 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ASSERT_in_synpred135_Java4428 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_synpred135_Java4431 = new BitSet(new ulong[]{0x10000000UL,0x40000000000UL});
		public static readonly BitSet _COLON_in_synpred135_Java4434 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_synpred135_Java4436 = new BitSet(new ulong[]{0x0UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_synpred135_Java4440 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ELSE_in_synpred136_Java4469 = new BitSet(new ulong[]{0x80E400350601C300UL,0xADEC0D028030E451UL,0x15UL});
		public static readonly BitSet _statement_in_synpred136_Java4471 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_synpred151_Java4693 = new BitSet(new ulong[]{0x0UL,0x40000000000UL});
		public static readonly BitSet _SEMI_in_synpred151_Java4696 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IDENTIFIER_in_synpred152_Java4711 = new BitSet(new ulong[]{0x10000000UL});
		public static readonly BitSet _COLON_in_synpred152_Java4713 = new BitSet(new ulong[]{0x80E400350601C300UL,0xADEC0D028030E451UL,0x15UL});
		public static readonly BitSet _statement_in_synpred152_Java4715 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _catches_in_synpred156_Java4871 = new BitSet(new ulong[]{0x10000000000000UL});
		public static readonly BitSet _FINALLY_in_synpred156_Java4873 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _block_in_synpred156_Java4875 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _catches_in_synpred157_Java4889 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variableModifiers_in_synpred161_Java5025 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _catchType_in_synpred161_Java5027 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_synpred161_Java5029 = new BitSet(new ulong[]{0x2UL,0x800UL});
		public static readonly BitSet _LBRACKET_in_synpred161_Java5040 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_synpred161_Java5042 = new BitSet(new ulong[]{0x2UL,0x800UL});
		public static readonly BitSet _variableModifiers_in_synpred168_Java5243 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _FOR_in_synpred170_Java5298 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _LPAREN_in_synpred170_Java5300 = new BitSet(new ulong[]{0x8028001002014000UL,0x80000042010UL});
		public static readonly BitSet _variableModifiers_in_synpred170_Java5302 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _type_in_synpred170_Java5304 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_synpred170_Java5306 = new BitSet(new ulong[]{0x10000000UL});
		public static readonly BitSet _COLON_in_synpred170_Java5308 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_synpred170_Java5319 = new BitSet(new ulong[]{0x0UL,0x20000000000UL});
		public static readonly BitSet _RPAREN_in_synpred170_Java5321 = new BitSet(new ulong[]{0x80E400350601C300UL,0xADEC0D028030E451UL,0x15UL});
		public static readonly BitSet _statement_in_synpred170_Java5323 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _localVariableDeclaration_in_synpred174_Java5502 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _castExpression_in_synpred215_Java6730 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LPAREN_in_synpred219_Java6820 = new BitSet(new ulong[]{0x20001002014000UL,0x80000002010UL});
		public static readonly BitSet _primitiveType_in_synpred219_Java6822 = new BitSet(new ulong[]{0x0UL,0x20000000000UL});
		public static readonly BitSet _RPAREN_in_synpred219_Java6824 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _unaryExpression_in_synpred219_Java6826 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_synpred221_Java6896 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_synpred221_Java6898 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifierSuffix_in_synpred222_Java6920 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_synpred224_Java6952 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_synpred224_Java6954 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifierSuffix_in_synpred225_Java6976 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LBRACKET_in_synpred237_Java7218 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_synpred237_Java7220 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_synpred237_Java7222 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NEW_in_synpred250_Java7425 = new BitSet(new ulong[]{0x0UL,0x10000UL});
		public static readonly BitSet _nonWildcardTypeArguments_in_synpred250_Java7427 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _classOrInterfaceTypeWithDiamond_in_synpred250_Java7429 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _classCreatorRest_in_synpred250_Java7431 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NEW_in_synpred251_Java7441 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _classOrInterfaceTypeWithDiamond_in_synpred251_Java7443 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _classCreatorRest_in_synpred251_Java7445 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NEW_in_synpred253_Java7474 = new BitSet(new ulong[]{0x8020001002014000UL,0x80000002010UL});
		public static readonly BitSet _createdName_in_synpred253_Java7476 = new BitSet(new ulong[]{0x0UL,0x800UL});
		public static readonly BitSet _LBRACKET_in_synpred253_Java7486 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_synpred253_Java7488 = new BitSet(new ulong[]{0x0UL,0xC00UL});
		public static readonly BitSet _LBRACKET_in_synpred253_Java7499 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_synpred253_Java7501 = new BitSet(new ulong[]{0x0UL,0xC00UL});
		public static readonly BitSet _arrayInitializer_in_synpred253_Java7522 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LBRACKET_in_synpred254_Java7571 = new BitSet(new ulong[]{0x8064003006014200UL,0xA46C08028030E050UL,0x4UL});
		public static readonly BitSet _expression_in_synpred254_Java7573 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _RBRACKET_in_synpred254_Java7587 = new BitSet(new ulong[]{0x2UL});
	}
	#endregion Follow sets
}

} // namespace  Code2Xml.Languages.ANTLRv3.Processors.Java 
