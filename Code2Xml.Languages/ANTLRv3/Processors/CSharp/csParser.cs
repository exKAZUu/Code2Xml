using Code2Xml.Languages.ANTLRv3.Core;
using System;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 3.5.0.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// $ANTLR 3.5.0.2 C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g 2013-12-31 22:54:57

// The variable 'variable' is assigned but its value is never used.
#pragma warning disable 219
// Unreachable code detected.
#pragma warning disable 162
// Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// CLS compliance checking will not be performed on 'type' because it is not visible from outside this assembly.
#pragma warning disable 3019


using System.Collections.Generic;
using Antlr.Runtime;
using Antlr.Runtime.Misc;


using Antlr.Runtime.Tree;
using RewriteRuleITokenStream = Antlr.Runtime.Tree.RewriteRuleTokenStream;

namespace  Code2Xml.Languages.ANTLRv3.Processors.CSharp 
{
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "3.5.0.2")]
[System.CLSCompliant(false)]
public partial class csParser : Antlr.Runtime.Parser, ICustomizedAntlr3Parser
{
	internal static readonly string[] tokenNames = new string[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "COMMENT", "Character_literal", "DECIMAL_DIGIT", "DEFINE", "DEFINE_TOKEN", "DOC_LINE_COMMENT", "DOT", "Decimal_digits", "Decimal_integer_literal", "ELIF", "ELSE_TOKEN", "ENDIF", "ENDIF_TOKEN", "ENUM", "EscapeSequence", "Exponent_part", "FALSE", "GT", "GooBall", "GooBallIdentifier", "HEX_DIGIT", "HEX_DIGITS", "Hex_number", "IDENTIFIER", "IF", "IF_TOKEN", "INTEGER_TYPE_SUFFIX", "IdentifierPart", "IdentifierStart", "LINE_COMMENT", "MINUS", "NULL", "NUMBER", "PP_AND_EXPRESSION", "PP_CONDITIONAL", "PP_EQUALITY_EXPRESSION", "PP_EXPRESSION", "PP_OR_EXPRESSION", "PP_PRIMARY_EXPRESSION", "PP_UNARY_EXPRESSION", "PRAGMA", "PREPROCESSOR_DIRECTIVE", "PTR", "RPAREN", "Real_literal", "Real_type_suffix", "SEMI", "STRINGLITERAL", "Sign", "TRUE", "TS", "UNDEF", "UNDEF_TOKEN", "USING", "Verbatim_string_literal", "Verbatim_string_literal_character", "WS", "'!'", "'!='", "'%'", "'%='", "'&&'", "'&'", "'&='", "'('", "'*'", "'*='", "'+'", "'++'", "'+='", "','", "'--'", "'-='", "'/'", "'/='", "':'", "'::'", "'<'", "'<<'", "'<<='", "'<='", "'='", "'=='", "'=>'", "'>='", "'?'", "'??'", "'['", "']'", "'^'", "'^='", "'__arglist'", "'abstract'", "'add'", "'alias'", "'as'", "'ascending'", "'assembly'", "'async'", "'await'", "'base'", "'bool'", "'break'", "'by'", "'byte'", "'case'", "'catch'", "'char'", "'checked'", "'class'", "'const'", "'continue'", "'decimal'", "'default'", "'delegate'", "'descending'", "'do'", "'double'", "'dynamic'", "'else'", "'equals'", "'event'", "'explicit'", "'extern'", "'field'", "'finally'", "'fixed'", "'float'", "'for'", "'foreach'", "'from'", "'get'", "'goto'", "'group'", "'implicit'", "'in'", "'int'", "'interface'", "'internal'", "'into'", "'is'", "'join'", "'let'", "'lock'", "'long'", "'method'", "'module'", "'namespace'", "'new'", "'object'", "'on'", "'operator'", "'orderby'", "'out'", "'override'", "'param'", "'params'", "'partial'", "'pragma'", "'private'", "'property'", "'protected'", "'public'", "'readonly'", "'ref'", "'remove'", "'return'", "'sbyte'", "'sealed'", "'select'", "'set'", "'short'", "'sizeof'", "'stackalloc'", "'static'", "'string'", "'struct'", "'switch'", "'this'", "'throw'", "'try'", "'type'", "'typeof'", "'uint'", "'ulong'", "'unchecked'", "'unsafe'", "'ushort'", "'var'", "'virtual'", "'void'", "'volatile'", "'where'", "'while'", "'yield'", "'{'", "'|'", "'|='", "'||'", "'}'", "'~'"
	};
	public const int EOF=-1;
	public const int COMMENT=4;
	public const int Character_literal=5;
	public const int DECIMAL_DIGIT=6;
	public const int DEFINE=7;
	public const int DEFINE_TOKEN=8;
	public const int DOC_LINE_COMMENT=9;
	public const int DOT=10;
	public const int Decimal_digits=11;
	public const int Decimal_integer_literal=12;
	public const int ELIF=13;
	public const int ELSE_TOKEN=14;
	public const int ENDIF=15;
	public const int ENDIF_TOKEN=16;
	public const int ENUM=17;
	public const int EscapeSequence=18;
	public const int Exponent_part=19;
	public const int FALSE=20;
	public const int GT=21;
	public const int GooBall=22;
	public const int GooBallIdentifier=23;
	public const int HEX_DIGIT=24;
	public const int HEX_DIGITS=25;
	public const int Hex_number=26;
	public const int IDENTIFIER=27;
	public const int IF=28;
	public const int IF_TOKEN=29;
	public const int INTEGER_TYPE_SUFFIX=30;
	public const int IdentifierPart=31;
	public const int IdentifierStart=32;
	public const int LINE_COMMENT=33;
	public const int MINUS=34;
	public const int NULL=35;
	public const int NUMBER=36;
	public const int PP_AND_EXPRESSION=37;
	public const int PP_CONDITIONAL=38;
	public const int PP_EQUALITY_EXPRESSION=39;
	public const int PP_EXPRESSION=40;
	public const int PP_OR_EXPRESSION=41;
	public const int PP_PRIMARY_EXPRESSION=42;
	public const int PP_UNARY_EXPRESSION=43;
	public const int PRAGMA=44;
	public const int PREPROCESSOR_DIRECTIVE=45;
	public const int PTR=46;
	public const int RPAREN=47;
	public const int Real_literal=48;
	public const int Real_type_suffix=49;
	public const int SEMI=50;
	public const int STRINGLITERAL=51;
	public const int Sign=52;
	public const int TRUE=53;
	public const int TS=54;
	public const int UNDEF=55;
	public const int UNDEF_TOKEN=56;
	public const int USING=57;
	public const int Verbatim_string_literal=58;
	public const int Verbatim_string_literal_character=59;
	public const int WS=60;
	public const int T__61=61;
	public const int T__62=62;
	public const int T__63=63;
	public const int T__64=64;
	public const int T__65=65;
	public const int T__66=66;
	public const int T__67=67;
	public const int T__68=68;
	public const int T__69=69;
	public const int T__70=70;
	public const int T__71=71;
	public const int T__72=72;
	public const int T__73=73;
	public const int T__74=74;
	public const int T__75=75;
	public const int T__76=76;
	public const int T__77=77;
	public const int T__78=78;
	public const int T__79=79;
	public const int T__80=80;
	public const int T__81=81;
	public const int T__82=82;
	public const int T__83=83;
	public const int T__84=84;
	public const int T__85=85;
	public const int T__86=86;
	public const int T__87=87;
	public const int T__88=88;
	public const int T__89=89;
	public const int T__90=90;
	public const int T__91=91;
	public const int T__92=92;
	public const int T__93=93;
	public const int T__94=94;
	public const int T__95=95;
	public const int T__96=96;
	public const int T__97=97;
	public const int T__98=98;
	public const int T__99=99;
	public const int T__100=100;
	public const int T__101=101;
	public const int T__102=102;
	public const int T__103=103;
	public const int T__104=104;
	public const int T__105=105;
	public const int T__106=106;
	public const int T__107=107;
	public const int T__108=108;
	public const int T__109=109;
	public const int T__110=110;
	public const int T__111=111;
	public const int T__112=112;
	public const int T__113=113;
	public const int T__114=114;
	public const int T__115=115;
	public const int T__116=116;
	public const int T__117=117;
	public const int T__118=118;
	public const int T__119=119;
	public const int T__120=120;
	public const int T__121=121;
	public const int T__122=122;
	public const int T__123=123;
	public const int T__124=124;
	public const int T__125=125;
	public const int T__126=126;
	public const int T__127=127;
	public const int T__128=128;
	public const int T__129=129;
	public const int T__130=130;
	public const int T__131=131;
	public const int T__132=132;
	public const int T__133=133;
	public const int T__134=134;
	public const int T__135=135;
	public const int T__136=136;
	public const int T__137=137;
	public const int T__138=138;
	public const int T__139=139;
	public const int T__140=140;
	public const int T__141=141;
	public const int T__142=142;
	public const int T__143=143;
	public const int T__144=144;
	public const int T__145=145;
	public const int T__146=146;
	public const int T__147=147;
	public const int T__148=148;
	public const int T__149=149;
	public const int T__150=150;
	public const int T__151=151;
	public const int T__152=152;
	public const int T__153=153;
	public const int T__154=154;
	public const int T__155=155;
	public const int T__156=156;
	public const int T__157=157;
	public const int T__158=158;
	public const int T__159=159;
	public const int T__160=160;
	public const int T__161=161;
	public const int T__162=162;
	public const int T__163=163;
	public const int T__164=164;
	public const int T__165=165;
	public const int T__166=166;
	public const int T__167=167;
	public const int T__168=168;
	public const int T__169=169;
	public const int T__170=170;
	public const int T__171=171;
	public const int T__172=172;
	public const int T__173=173;
	public const int T__174=174;
	public const int T__175=175;
	public const int T__176=176;
	public const int T__177=177;
	public const int T__178=178;
	public const int T__179=179;
	public const int T__180=180;
	public const int T__181=181;
	public const int T__182=182;
	public const int T__183=183;
	public const int T__184=184;
	public const int T__185=185;
	public const int T__186=186;
	public const int T__187=187;
	public const int T__188=188;
	public const int T__189=189;
	public const int T__190=190;
	public const int T__191=191;
	public const int T__192=192;
	public const int T__193=193;
	public const int T__194=194;
	public const int T__195=195;
	public const int T__196=196;
	public const int T__197=197;
	public const int T__198=198;
	public const int T__199=199;
	public const int T__200=200;
	public const int T__201=201;
	public const int T__202=202;
	public const int T__203=203;
	public const int T__204=204;

	public csParser(ITokenStream input)
		: this(input, new RecognizerSharedState())
	{
	}
	public csParser(ITokenStream input, RecognizerSharedState state)
		: base(input, state)
	{
		this.state.ruleMemo = new System.Collections.Generic.Dictionary<int, int>[352+1];


		Antlr3AstBuilder treeAdaptor = default(Antlr3AstBuilder);
		CreateTreeAdaptor(ref treeAdaptor);
		TreeAdaptor = treeAdaptor ?? new Antlr3AstBuilder();
		OnCreated();
	}
	// Implement this function in your helper file to use a custom tree adaptor
	partial void CreateTreeAdaptor(ref Antlr3AstBuilder adaptor);

	private Antlr3AstBuilder adaptor;

	public Antlr3AstBuilder TreeAdaptor
	{
		get
		{
			return adaptor;
		}

		set
		{
			this.adaptor = value;
		}
	}

	public override string[] TokenNames { get { return csParser.tokenNames; } }
	public override string GrammarFileName { get { return "C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g"; } }


		protected bool is_class_modifier() 
		{
			return false;
		}


	partial void OnCreated();
	partial void EnterRule(string ruleName, int ruleIndex);
	partial void LeaveRule(string ruleName, int ruleIndex);

	#region Rules
	partial void EnterRule_compilation_unit();
	partial void LeaveRule_compilation_unit();
	// $ANTLR start "compilation_unit"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:26:1: public compilation_unit : namespace_body[true] ;
	[GrammarRule("compilation_unit")]
	public Antlr3AstNode compilation_unit()
	{
		EnterRule_compilation_unit();
		EnterRule("compilation_unit", 1);
		var retval = new Antlr3AstNode("compilation_unit");
		
		retval.Start = (IToken)input.LT(1);
		int compilation_unit_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode namespace_body1 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "compilation_unit");
		DebugLocation(26, 21);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 1)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:26:17: ( namespace_body[true] )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:27:2: namespace_body[true]
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(27, 2);
			PushFollow(Follow._namespace_body_in_compilation_unit76);
			namespace_body1=namespace_body(true);
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, namespace_body1.Tree, namespace_body1, "namespace_body1", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("compilation_unit", 1);
			LeaveRule("compilation_unit", 1);
			LeaveRule_compilation_unit();
			if (state.backtracking > 0) { Memoize(input, 1, compilation_unit_StartIndex); }

		}
		DebugLocation(27, 21);
		} finally { DebugExitRule(GrammarFileName, "compilation_unit"); }
		return retval;

	}
	// $ANTLR end "compilation_unit"

	partial void EnterRule_namespace_declaration();
	partial void LeaveRule_namespace_declaration();
	// $ANTLR start "namespace_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:29:1: namespace_declaration : 'namespace' qualified_identifier namespace_block ( ';' )? ;
	[GrammarRule("namespace_declaration")]
	private Antlr3AstNode namespace_declaration()
	{
		EnterRule_namespace_declaration();
		EnterRule("namespace_declaration", 2);
		var retval = new Antlr3AstNode("namespace_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int namespace_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal2 = default(IToken);
		IToken char_literal5 = default(IToken);
		Antlr3AstNode qualified_identifier3 = default(Antlr3AstNode);
		Antlr3AstNode namespace_block4 = default(Antlr3AstNode);

		object string_literal2_tree = default(object);
		object char_literal5_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "namespace_declaration");
		DebugLocation(29, 61);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 2)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:29:22: ( 'namespace' qualified_identifier namespace_block ( ';' )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:30:2: 'namespace' qualified_identifier namespace_block ( ';' )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(30, 2);
			string_literal2=(IToken)Match(input,151,Follow._151_in_namespace_declaration85); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal2_tree = (object)adaptor.Create(string_literal2, "string_literal2", retval);
			adaptor.AddChild(root_0, string_literal2_tree);
			}
			DebugLocation(30, 16);
			PushFollow(Follow._qualified_identifier_in_namespace_declaration89);
			qualified_identifier3=qualified_identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, qualified_identifier3.Tree, qualified_identifier3, "qualified_identifier3", retval);
			DebugLocation(30, 39);
			PushFollow(Follow._namespace_block_in_namespace_declaration93);
			namespace_block4=namespace_block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, namespace_block4.Tree, namespace_block4, "namespace_block4", retval);
			DebugLocation(30, 57);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:30:57: ( ';' )?
			int alt1=2;
			try { DebugEnterSubRule(1);
			try { DebugEnterDecision(1, false);
			int LA1_1 = input.LA(1);

			if ((LA1_1==SEMI))
			{
				alt1 = 1;
			}
			} finally { DebugExitDecision(1); }
			switch (alt1)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:30:57: ';'
				{
				DebugLocation(30, 57);
				char_literal5=(IToken)Match(input,SEMI,Follow._SEMI_in_namespace_declaration97); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal5_tree = (object)adaptor.Create(char_literal5, "char_literal5", retval);
				adaptor.AddChild(root_0, char_literal5_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(1); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("namespace_declaration", 2);
			LeaveRule("namespace_declaration", 2);
			LeaveRule_namespace_declaration();
			if (state.backtracking > 0) { Memoize(input, 2, namespace_declaration_StartIndex); }

		}
		DebugLocation(30, 61);
		} finally { DebugExitRule(GrammarFileName, "namespace_declaration"); }
		return retval;

	}
	// $ANTLR end "namespace_declaration"

	partial void EnterRule_namespace_block();
	partial void LeaveRule_namespace_block();
	// $ANTLR start "namespace_block"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:31:1: namespace_block : '{' namespace_body[false] '}' ;
	[GrammarRule("namespace_block")]
	private Antlr3AstNode namespace_block()
	{
		EnterRule_namespace_block();
		EnterRule("namespace_block", 3);
		var retval = new Antlr3AstNode("namespace_block");
		
		retval.Start = (IToken)input.LT(1);
		int namespace_block_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal6 = default(IToken);
		IToken char_literal8 = default(IToken);
		Antlr3AstNode namespace_body7 = default(Antlr3AstNode);

		object char_literal6_tree = default(object);
		object char_literal8_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "namespace_block");
		DebugLocation(31, 35);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 3)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:31:16: ( '{' namespace_body[false] '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:32:2: '{' namespace_body[false] '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(32, 2);
			char_literal6=(IToken)Match(input,199,Follow._199_in_namespace_block106); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal6_tree = (object)adaptor.Create(char_literal6, "char_literal6", retval);
			adaptor.AddChild(root_0, char_literal6_tree);
			}
			DebugLocation(32, 8);
			PushFollow(Follow._namespace_body_in_namespace_block110);
			namespace_body7=namespace_body(false);
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, namespace_body7.Tree, namespace_body7, "namespace_body7", retval);
			DebugLocation(32, 32);
			char_literal8=(IToken)Match(input,203,Follow._203_in_namespace_block115); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal8_tree = (object)adaptor.Create(char_literal8, "char_literal8", retval);
			adaptor.AddChild(root_0, char_literal8_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("namespace_block", 3);
			LeaveRule("namespace_block", 3);
			LeaveRule_namespace_block();
			if (state.backtracking > 0) { Memoize(input, 3, namespace_block_StartIndex); }

		}
		DebugLocation(32, 35);
		} finally { DebugExitRule(GrammarFileName, "namespace_block"); }
		return retval;

	}
	// $ANTLR end "namespace_block"

	partial void EnterRule_namespace_body();
	partial void LeaveRule_namespace_body();
	// $ANTLR start "namespace_body"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:33:1: namespace_body[bool bGlobal] : ( extern_alias_directives )? ( using_directives )? ( global_attributes )? ( namespace_member_declarations )? ;
	[GrammarRule("namespace_body")]
	private Antlr3AstNode namespace_body(bool bGlobal)
	{
		EnterRule_namespace_body();
		EnterRule("namespace_body", 4);
		var retval = new Antlr3AstNode("namespace_body");
		
		retval.Start = (IToken)input.LT(1);
		int namespace_body_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode extern_alias_directives9 = default(Antlr3AstNode);
		Antlr3AstNode using_directives10 = default(Antlr3AstNode);
		Antlr3AstNode global_attributes11 = default(Antlr3AstNode);
		Antlr3AstNode namespace_member_declarations12 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "namespace_body");
		DebugLocation(33, 100);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 4)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:33:29: ( ( extern_alias_directives )? ( using_directives )? ( global_attributes )? ( namespace_member_declarations )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:34:2: ( extern_alias_directives )? ( using_directives )? ( global_attributes )? ( namespace_member_declarations )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(34, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:34:2: ( extern_alias_directives )?
			int alt2=2;
			try { DebugEnterSubRule(2);
			try { DebugEnterDecision(2, false);
			int LA2_1 = input.LA(1);

			if ((LA2_1==127))
			{
				int LA2_2 = input.LA(2);

				if ((LA2_2==98))
				{
					alt2 = 1;
				}
			}
			} finally { DebugExitDecision(2); }
			switch (alt2)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:34:2: extern_alias_directives
				{
				DebugLocation(34, 2);
				PushFollow(Follow._extern_alias_directives_in_namespace_body124);
				extern_alias_directives9=extern_alias_directives();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, extern_alias_directives9.Tree, extern_alias_directives9, "extern_alias_directives9", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(2); }

			DebugLocation(34, 29);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:34:29: ( using_directives )?
			int alt3=2;
			try { DebugEnterSubRule(3);
			try { DebugEnterDecision(3, false);
			int LA3_1 = input.LA(1);

			if ((LA3_1==USING))
			{
				alt3 = 1;
			}
			} finally { DebugExitDecision(3); }
			switch (alt3)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:34:29: using_directives
				{
				DebugLocation(34, 29);
				PushFollow(Follow._using_directives_in_namespace_body129);
				using_directives10=using_directives();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, using_directives10.Tree, using_directives10, "using_directives10", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(3); }

			DebugLocation(34, 49);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:34:49: ( global_attributes )?
			int alt4=2;
			try { DebugEnterSubRule(4);
			try { DebugEnterDecision(4, false);
			int LA4_1 = input.LA(1);

			if ((LA4_1==91))
			{
				int LA4_2 = input.LA(2);

				if ((LA4_2==101||LA4_2==150))
				{
					int LA4_3 = input.LA(3);

					if ((LA4_3==79))
					{
						alt4 = 1;
					}
				}
			}
			} finally { DebugExitDecision(4); }
			switch (alt4)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:34:49: global_attributes
				{
				DebugLocation(34, 49);
				PushFollow(Follow._global_attributes_in_namespace_body134);
				global_attributes11=global_attributes();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, global_attributes11.Tree, global_attributes11, "global_attributes11", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(4); }

			DebugLocation(34, 70);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:34:70: ( namespace_member_declarations )?
			int alt5=2;
			try { DebugEnterSubRule(5);
			try { DebugEnterDecision(5, false);
			int LA5_1 = input.LA(1);

			if ((LA5_1==ENUM||LA5_1==91||LA5_1==96||LA5_1==102||LA5_1==113||LA5_1==118||LA5_1==127||(LA5_1>=141 && LA5_1<=142)||(LA5_1>=151 && LA5_1<=152)||LA5_1==158||LA5_1==161||LA5_1==163||(LA5_1>=165 && LA5_1<=167)||LA5_1==172||LA5_1==178||LA5_1==180||LA5_1==190||LA5_1==193||LA5_1==195))
			{
				alt5 = 1;
			}
			} finally { DebugExitDecision(5); }
			switch (alt5)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:34:70: namespace_member_declarations
				{
				DebugLocation(34, 70);
				PushFollow(Follow._namespace_member_declarations_in_namespace_body139);
				namespace_member_declarations12=namespace_member_declarations();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, namespace_member_declarations12.Tree, namespace_member_declarations12, "namespace_member_declarations12", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(5); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("namespace_body", 4);
			LeaveRule("namespace_body", 4);
			LeaveRule_namespace_body();
			if (state.backtracking > 0) { Memoize(input, 4, namespace_body_StartIndex); }

		}
		DebugLocation(34, 100);
		} finally { DebugExitRule(GrammarFileName, "namespace_body"); }
		return retval;

	}
	// $ANTLR end "namespace_body"

	partial void EnterRule_extern_alias_directives();
	partial void LeaveRule_extern_alias_directives();
	// $ANTLR start "extern_alias_directives"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:35:1: extern_alias_directives : ( extern_alias_directive )+ ;
	[GrammarRule("extern_alias_directives")]
	private Antlr3AstNode extern_alias_directives()
	{
		EnterRule_extern_alias_directives();
		EnterRule("extern_alias_directives", 5);
		var retval = new Antlr3AstNode("extern_alias_directives");
		
		retval.Start = (IToken)input.LT(1);
		int extern_alias_directives_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode extern_alias_directive13 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "extern_alias_directives");
		DebugLocation(35, 25);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 5)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:35:24: ( ( extern_alias_directive )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:36:2: ( extern_alias_directive )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(36, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:36:2: ( extern_alias_directive )+
			int cnt6=0;
			try { DebugEnterSubRule(6);
			while (true)
			{
				int alt6=2;
				try { DebugEnterDecision(6, false);
				int LA6_1 = input.LA(1);

				if ((LA6_1==127))
				{
					int LA6_2 = input.LA(2);

					if ((LA6_2==98))
					{
						alt6 = 1;
					}


				}


				} finally { DebugExitDecision(6); }
				switch (alt6)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:36:2: extern_alias_directive
					{
					DebugLocation(36, 2);
					PushFollow(Follow._extern_alias_directive_in_extern_alias_directives148);
					extern_alias_directive13=extern_alias_directive();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, extern_alias_directive13.Tree, extern_alias_directive13, "extern_alias_directive13", retval);

					}
					break;

				default:
					if (cnt6 >= 1)
						goto loop6;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee6 = new EarlyExitException( 6, input );
					DebugRecognitionException(eee6);
					throw eee6;
				}
				cnt6++;
			}
			loop6:
				;

			} finally { DebugExitSubRule(6); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("extern_alias_directives", 5);
			LeaveRule("extern_alias_directives", 5);
			LeaveRule_extern_alias_directives();
			if (state.backtracking > 0) { Memoize(input, 5, extern_alias_directives_StartIndex); }

		}
		DebugLocation(36, 25);
		} finally { DebugExitRule(GrammarFileName, "extern_alias_directives"); }
		return retval;

	}
	// $ANTLR end "extern_alias_directives"

	partial void EnterRule_extern_alias_directive();
	partial void LeaveRule_extern_alias_directive();
	// $ANTLR start "extern_alias_directive"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:37:1: extern_alias_directive : 'extern' 'alias' identifier ';' ;
	[GrammarRule("extern_alias_directive")]
	private Antlr3AstNode extern_alias_directive()
	{
		EnterRule_extern_alias_directive();
		EnterRule("extern_alias_directive", 6);
		var retval = new Antlr3AstNode("extern_alias_directive");
		
		retval.Start = (IToken)input.LT(1);
		int extern_alias_directive_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal14 = default(IToken);
		IToken string_literal15 = default(IToken);
		IToken char_literal17 = default(IToken);
		Antlr3AstNode identifier16 = default(Antlr3AstNode);

		object string_literal14_tree = default(object);
		object string_literal15_tree = default(object);
		object char_literal17_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "extern_alias_directive");
		DebugLocation(37, 38);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 6)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:37:23: ( 'extern' 'alias' identifier ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:38:2: 'extern' 'alias' identifier ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(38, 2);
			string_literal14=(IToken)Match(input,127,Follow._127_in_extern_alias_directive157); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal14_tree = (object)adaptor.Create(string_literal14, "string_literal14", retval);
			adaptor.AddChild(root_0, string_literal14_tree);
			}
			DebugLocation(38, 13);
			string_literal15=(IToken)Match(input,98,Follow._98_in_extern_alias_directive161); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal15_tree = (object)adaptor.Create(string_literal15, "string_literal15", retval);
			adaptor.AddChild(root_0, string_literal15_tree);
			}
			DebugLocation(38, 23);
			PushFollow(Follow._identifier_in_extern_alias_directive165);
			identifier16=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier16.Tree, identifier16, "identifier16", retval);
			DebugLocation(38, 35);
			char_literal17=(IToken)Match(input,SEMI,Follow._SEMI_in_extern_alias_directive168); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal17_tree = (object)adaptor.Create(char_literal17, "char_literal17", retval);
			adaptor.AddChild(root_0, char_literal17_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("extern_alias_directive", 6);
			LeaveRule("extern_alias_directive", 6);
			LeaveRule_extern_alias_directive();
			if (state.backtracking > 0) { Memoize(input, 6, extern_alias_directive_StartIndex); }

		}
		DebugLocation(38, 38);
		} finally { DebugExitRule(GrammarFileName, "extern_alias_directive"); }
		return retval;

	}
	// $ANTLR end "extern_alias_directive"

	partial void EnterRule_using_directives();
	partial void LeaveRule_using_directives();
	// $ANTLR start "using_directives"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:39:1: using_directives : ( using_directive )+ ;
	[GrammarRule("using_directives")]
	private Antlr3AstNode using_directives()
	{
		EnterRule_using_directives();
		EnterRule("using_directives", 7);
		var retval = new Antlr3AstNode("using_directives");
		
		retval.Start = (IToken)input.LT(1);
		int using_directives_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode using_directive18 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "using_directives");
		DebugLocation(39, 18);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 7)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:39:17: ( ( using_directive )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:40:2: ( using_directive )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(40, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:40:2: ( using_directive )+
			int cnt7=0;
			try { DebugEnterSubRule(7);
			while (true)
			{
				int alt7=2;
				try { DebugEnterDecision(7, false);
				int LA7_1 = input.LA(1);

				if ((LA7_1==USING))
				{
					alt7 = 1;
				}


				} finally { DebugExitDecision(7); }
				switch (alt7)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:40:2: using_directive
					{
					DebugLocation(40, 2);
					PushFollow(Follow._using_directive_in_using_directives176);
					using_directive18=using_directive();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, using_directive18.Tree, using_directive18, "using_directive18", retval);

					}
					break;

				default:
					if (cnt7 >= 1)
						goto loop7;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee7 = new EarlyExitException( 7, input );
					DebugRecognitionException(eee7);
					throw eee7;
				}
				cnt7++;
			}
			loop7:
				;

			} finally { DebugExitSubRule(7); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("using_directives", 7);
			LeaveRule("using_directives", 7);
			LeaveRule_using_directives();
			if (state.backtracking > 0) { Memoize(input, 7, using_directives_StartIndex); }

		}
		DebugLocation(40, 18);
		} finally { DebugExitRule(GrammarFileName, "using_directives"); }
		return retval;

	}
	// $ANTLR end "using_directives"

	partial void EnterRule_using_directive();
	partial void LeaveRule_using_directive();
	// $ANTLR start "using_directive"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:41:1: using_directive : ( using_alias_directive | using_namespace_directive ) ;
	[GrammarRule("using_directive")]
	private Antlr3AstNode using_directive()
	{
		EnterRule_using_directive();
		EnterRule("using_directive", 8);
		var retval = new Antlr3AstNode("using_directive");
		
		retval.Start = (IToken)input.LT(1);
		int using_directive_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode using_alias_directive19 = default(Antlr3AstNode);
		Antlr3AstNode using_namespace_directive20 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "using_directive");
		DebugLocation(41, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 8)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:41:16: ( ( using_alias_directive | using_namespace_directive ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:42:2: ( using_alias_directive | using_namespace_directive )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(42, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:42:2: ( using_alias_directive | using_namespace_directive )
			int alt8=2;
			try { DebugEnterSubRule(8);
			try { DebugEnterDecision(8, false);
			int LA8_1 = input.LA(1);

			if ((LA8_1==USING))
			{
				int LA8_2 = input.LA(2);

				if ((LA8_2==IDENTIFIER||LA8_2==95||(LA8_2>=97 && LA8_2<=98)||(LA8_2>=100 && LA8_2<=101)||LA8_2==107||LA8_2==119||LA8_2==122||LA8_2==124||LA8_2==128||LA8_2==134||LA8_2==137||LA8_2==143||(LA8_2>=145 && LA8_2<=146)||(LA8_2>=149 && LA8_2<=150)||LA8_2==154||LA8_2==156||LA8_2==159||LA8_2==162||LA8_2==164||LA8_2==169||(LA8_2>=173 && LA8_2<=174)||LA8_2==185||LA8_2==192||LA8_2==196||LA8_2==198))
				{
					int LA8_3 = input.LA(3);

					if ((LA8_3==85))
					{
						alt8 = 1;
					}
					else if ((LA8_3==DOT||LA8_3==SEMI||(LA8_3>=80 && LA8_3<=81)))
					{
						alt8 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 8, 2, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 8, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 8, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(8); }
			switch (alt8)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:42:3: using_alias_directive
				{
				DebugLocation(42, 3);
				PushFollow(Follow._using_alias_directive_in_using_directive186);
				using_alias_directive19=using_alias_directive();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, using_alias_directive19.Tree, using_alias_directive19, "using_alias_directive19", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:43:4: using_namespace_directive
				{
				DebugLocation(43, 4);
				PushFollow(Follow._using_namespace_directive_in_using_directive191);
				using_namespace_directive20=using_namespace_directive();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, using_namespace_directive20.Tree, using_namespace_directive20, "using_namespace_directive20", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(8); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("using_directive", 8);
			LeaveRule("using_directive", 8);
			LeaveRule_using_directive();
			if (state.backtracking > 0) { Memoize(input, 8, using_directive_StartIndex); }

		}
		DebugLocation(43, 30);
		} finally { DebugExitRule(GrammarFileName, "using_directive"); }
		return retval;

	}
	// $ANTLR end "using_directive"

	partial void EnterRule_using_alias_directive();
	partial void LeaveRule_using_alias_directive();
	// $ANTLR start "using_alias_directive"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:44:1: using_alias_directive : 'using' identifier '=' namespace_or_type_name ';' ;
	[GrammarRule("using_alias_directive")]
	private Antlr3AstNode using_alias_directive()
	{
		EnterRule_using_alias_directive();
		EnterRule("using_alias_directive", 9);
		var retval = new Antlr3AstNode("using_alias_directive");
		
		retval.Start = (IToken)input.LT(1);
		int using_alias_directive_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal21 = default(IToken);
		IToken char_literal23 = default(IToken);
		IToken char_literal25 = default(IToken);
		Antlr3AstNode identifier22 = default(Antlr3AstNode);
		Antlr3AstNode namespace_or_type_name24 = default(Antlr3AstNode);

		object string_literal21_tree = default(object);
		object char_literal23_tree = default(object);
		object char_literal25_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "using_alias_directive");
		DebugLocation(44, 59);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 9)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:44:22: ( 'using' identifier '=' namespace_or_type_name ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:45:2: 'using' identifier '=' namespace_or_type_name ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(45, 2);
			string_literal21=(IToken)Match(input,USING,Follow._USING_in_using_alias_directive200); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal21_tree = (object)adaptor.Create(string_literal21, "string_literal21", retval);
			adaptor.AddChild(root_0, string_literal21_tree);
			}
			DebugLocation(45, 12);
			PushFollow(Follow._identifier_in_using_alias_directive204);
			identifier22=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier22.Tree, identifier22, "identifier22", retval);
			DebugLocation(45, 25);
			char_literal23=(IToken)Match(input,85,Follow._85_in_using_alias_directive208); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal23_tree = (object)adaptor.Create(char_literal23, "char_literal23", retval);
			adaptor.AddChild(root_0, char_literal23_tree);
			}
			DebugLocation(45, 31);
			PushFollow(Follow._namespace_or_type_name_in_using_alias_directive212);
			namespace_or_type_name24=namespace_or_type_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, namespace_or_type_name24.Tree, namespace_or_type_name24, "namespace_or_type_name24", retval);
			DebugLocation(45, 56);
			char_literal25=(IToken)Match(input,SEMI,Follow._SEMI_in_using_alias_directive216); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal25_tree = (object)adaptor.Create(char_literal25, "char_literal25", retval);
			adaptor.AddChild(root_0, char_literal25_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("using_alias_directive", 9);
			LeaveRule("using_alias_directive", 9);
			LeaveRule_using_alias_directive();
			if (state.backtracking > 0) { Memoize(input, 9, using_alias_directive_StartIndex); }

		}
		DebugLocation(45, 59);
		} finally { DebugExitRule(GrammarFileName, "using_alias_directive"); }
		return retval;

	}
	// $ANTLR end "using_alias_directive"

	partial void EnterRule_using_namespace_directive();
	partial void LeaveRule_using_namespace_directive();
	// $ANTLR start "using_namespace_directive"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:46:1: using_namespace_directive : 'using' namespace_name ';' ;
	[GrammarRule("using_namespace_directive")]
	private Antlr3AstNode using_namespace_directive()
	{
		EnterRule_using_namespace_directive();
		EnterRule("using_namespace_directive", 10);
		var retval = new Antlr3AstNode("using_namespace_directive");
		
		retval.Start = (IToken)input.LT(1);
		int using_namespace_directive_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal26 = default(IToken);
		IToken char_literal28 = default(IToken);
		Antlr3AstNode namespace_name27 = default(Antlr3AstNode);

		object string_literal26_tree = default(object);
		object char_literal28_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "using_namespace_directive");
		DebugLocation(46, 32);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 10)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:46:26: ( 'using' namespace_name ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:47:2: 'using' namespace_name ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(47, 2);
			string_literal26=(IToken)Match(input,USING,Follow._USING_in_using_namespace_directive224); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal26_tree = (object)adaptor.Create(string_literal26, "string_literal26", retval);
			adaptor.AddChild(root_0, string_literal26_tree);
			}
			DebugLocation(47, 12);
			PushFollow(Follow._namespace_name_in_using_namespace_directive228);
			namespace_name27=namespace_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, namespace_name27.Tree, namespace_name27, "namespace_name27", retval);
			DebugLocation(47, 29);
			char_literal28=(IToken)Match(input,SEMI,Follow._SEMI_in_using_namespace_directive232); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal28_tree = (object)adaptor.Create(char_literal28, "char_literal28", retval);
			adaptor.AddChild(root_0, char_literal28_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("using_namespace_directive", 10);
			LeaveRule("using_namespace_directive", 10);
			LeaveRule_using_namespace_directive();
			if (state.backtracking > 0) { Memoize(input, 10, using_namespace_directive_StartIndex); }

		}
		DebugLocation(47, 32);
		} finally { DebugExitRule(GrammarFileName, "using_namespace_directive"); }
		return retval;

	}
	// $ANTLR end "using_namespace_directive"

	partial void EnterRule_namespace_member_declarations();
	partial void LeaveRule_namespace_member_declarations();
	// $ANTLR start "namespace_member_declarations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:48:1: namespace_member_declarations : ( namespace_member_declaration )+ ;
	[GrammarRule("namespace_member_declarations")]
	private Antlr3AstNode namespace_member_declarations()
	{
		EnterRule_namespace_member_declarations();
		EnterRule("namespace_member_declarations", 11);
		var retval = new Antlr3AstNode("namespace_member_declarations");
		
		retval.Start = (IToken)input.LT(1);
		int namespace_member_declarations_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode namespace_member_declaration29 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "namespace_member_declarations");
		DebugLocation(48, 31);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 11)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:48:30: ( ( namespace_member_declaration )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:49:2: ( namespace_member_declaration )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(49, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:49:2: ( namespace_member_declaration )+
			int cnt9=0;
			try { DebugEnterSubRule(9);
			while (true)
			{
				int alt9=2;
				try { DebugEnterDecision(9, false);
				int LA9_1 = input.LA(1);

				if ((LA9_1==ENUM||LA9_1==91||LA9_1==96||LA9_1==102||LA9_1==113||LA9_1==118||LA9_1==127||(LA9_1>=141 && LA9_1<=142)||(LA9_1>=151 && LA9_1<=152)||LA9_1==158||LA9_1==161||LA9_1==163||(LA9_1>=165 && LA9_1<=167)||LA9_1==172||LA9_1==178||LA9_1==180||LA9_1==190||LA9_1==193||LA9_1==195))
				{
					alt9 = 1;
				}


				} finally { DebugExitDecision(9); }
				switch (alt9)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:49:2: namespace_member_declaration
					{
					DebugLocation(49, 2);
					PushFollow(Follow._namespace_member_declaration_in_namespace_member_declarations240);
					namespace_member_declaration29=namespace_member_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, namespace_member_declaration29.Tree, namespace_member_declaration29, "namespace_member_declaration29", retval);

					}
					break;

				default:
					if (cnt9 >= 1)
						goto loop9;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee9 = new EarlyExitException( 9, input );
					DebugRecognitionException(eee9);
					throw eee9;
				}
				cnt9++;
			}
			loop9:
				;

			} finally { DebugExitSubRule(9); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("namespace_member_declarations", 11);
			LeaveRule("namespace_member_declarations", 11);
			LeaveRule_namespace_member_declarations();
			if (state.backtracking > 0) { Memoize(input, 11, namespace_member_declarations_StartIndex); }

		}
		DebugLocation(49, 31);
		} finally { DebugExitRule(GrammarFileName, "namespace_member_declarations"); }
		return retval;

	}
	// $ANTLR end "namespace_member_declarations"

	partial void EnterRule_namespace_member_declaration();
	partial void LeaveRule_namespace_member_declaration();
	// $ANTLR start "namespace_member_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:50:1: namespace_member_declaration : ( namespace_declaration | ( attributes )? ( modifiers )? type_declaration );
	[GrammarRule("namespace_member_declaration")]
	private Antlr3AstNode namespace_member_declaration()
	{
		EnterRule_namespace_member_declaration();
		EnterRule("namespace_member_declaration", 12);
		var retval = new Antlr3AstNode("namespace_member_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int namespace_member_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode namespace_declaration30 = default(Antlr3AstNode);
		Antlr3AstNode attributes31 = default(Antlr3AstNode);
		Antlr3AstNode modifiers32 = default(Antlr3AstNode);
		Antlr3AstNode type_declaration33 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "namespace_member_declaration");
		DebugLocation(50, 47);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 12)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:50:29: ( namespace_declaration | ( attributes )? ( modifiers )? type_declaration )
			int alt12=2;
			try { DebugEnterDecision(12, false);
			int LA12_1 = input.LA(1);

			if ((LA12_1==151))
			{
				alt12 = 1;
			}
			else if ((LA12_1==ENUM||LA12_1==91||LA12_1==96||LA12_1==102||LA12_1==113||LA12_1==118||LA12_1==127||(LA12_1>=141 && LA12_1<=142)||LA12_1==152||LA12_1==158||LA12_1==161||LA12_1==163||(LA12_1>=165 && LA12_1<=167)||LA12_1==172||LA12_1==178||LA12_1==180||LA12_1==190||LA12_1==193||LA12_1==195))
			{
				alt12 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 12, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(12); }
			switch (alt12)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:51:2: namespace_declaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(51, 2);
				PushFollow(Follow._namespace_declaration_in_namespace_member_declaration249);
				namespace_declaration30=namespace_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, namespace_declaration30.Tree, namespace_declaration30, "namespace_declaration30", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:52:4: ( attributes )? ( modifiers )? type_declaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(52, 4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:52:4: ( attributes )?
				int alt10=2;
				try { DebugEnterSubRule(10);
				try { DebugEnterDecision(10, false);
				int LA10_1 = input.LA(1);

				if ((LA10_1==91))
				{
					alt10 = 1;
				}
				} finally { DebugExitDecision(10); }
				switch (alt10)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:52:4: attributes
					{
					DebugLocation(52, 4);
					PushFollow(Follow._attributes_in_namespace_member_declaration254);
					attributes31=attributes();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, attributes31.Tree, attributes31, "attributes31", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(10); }

				DebugLocation(52, 18);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:52:18: ( modifiers )?
				int alt11=2;
				try { DebugEnterSubRule(11);
				try { DebugEnterDecision(11, false);
				int LA11_1 = input.LA(1);

				if ((LA11_1==96||LA11_1==102||LA11_1==127||LA11_1==142||LA11_1==152||LA11_1==158||LA11_1==163||(LA11_1>=165 && LA11_1<=167)||LA11_1==172||LA11_1==178||LA11_1==190||LA11_1==193||LA11_1==195))
				{
					alt11 = 1;
				}
				} finally { DebugExitDecision(11); }
				switch (alt11)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:52:18: modifiers
					{
					DebugLocation(52, 18);
					PushFollow(Follow._modifiers_in_namespace_member_declaration259);
					modifiers32=modifiers();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers32.Tree, modifiers32, "modifiers32", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(11); }

				DebugLocation(52, 31);
				PushFollow(Follow._type_declaration_in_namespace_member_declaration264);
				type_declaration33=type_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type_declaration33.Tree, type_declaration33, "type_declaration33", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("namespace_member_declaration", 12);
			LeaveRule("namespace_member_declaration", 12);
			LeaveRule_namespace_member_declaration();
			if (state.backtracking > 0) { Memoize(input, 12, namespace_member_declaration_StartIndex); }

		}
		DebugLocation(52, 47);
		} finally { DebugExitRule(GrammarFileName, "namespace_member_declaration"); }
		return retval;

	}
	// $ANTLR end "namespace_member_declaration"

	partial void EnterRule_type_declaration();
	partial void LeaveRule_type_declaration();
	// $ANTLR start "type_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:53:1: type_declaration : ( ( 'partial' )=> 'partial' ( class_declaration | struct_declaration | interface_declaration ) | class_declaration | struct_declaration | interface_declaration | enum_declaration | delegate_declaration );
	[GrammarRule("type_declaration")]
	private Antlr3AstNode type_declaration()
	{
		EnterRule_type_declaration();
		EnterRule("type_declaration", 13);
		var retval = new Antlr3AstNode("type_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int type_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal34 = default(IToken);
		Antlr3AstNode class_declaration35 = default(Antlr3AstNode);
		Antlr3AstNode struct_declaration36 = default(Antlr3AstNode);
		Antlr3AstNode interface_declaration37 = default(Antlr3AstNode);
		Antlr3AstNode class_declaration38 = default(Antlr3AstNode);
		Antlr3AstNode struct_declaration39 = default(Antlr3AstNode);
		Antlr3AstNode interface_declaration40 = default(Antlr3AstNode);
		Antlr3AstNode enum_declaration41 = default(Antlr3AstNode);
		Antlr3AstNode delegate_declaration42 = default(Antlr3AstNode);

		object string_literal34_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "type_declaration");
		DebugLocation(53, 24);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 13)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:53:17: ( ( 'partial' )=> 'partial' ( class_declaration | struct_declaration | interface_declaration ) | class_declaration | struct_declaration | interface_declaration | enum_declaration | delegate_declaration )
			int alt14=6;
			try { DebugEnterDecision(14, false);
			int LA14_1 = input.LA(1);

			if ((LA14_1==161) && (EvaluatePredicate(synpred1_cs_fragment)))
			{
				alt14 = 1;
			}
			else if ((LA14_1==113))
			{
				alt14 = 2;
			}
			else if ((LA14_1==180))
			{
				alt14 = 3;
			}
			else if ((LA14_1==141))
			{
				alt14 = 4;
			}
			else if ((LA14_1==ENUM))
			{
				alt14 = 5;
			}
			else if ((LA14_1==118))
			{
				alt14 = 6;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 14, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(14); }
			switch (alt14)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:54:2: ( 'partial' )=> 'partial' ( class_declaration | struct_declaration | interface_declaration )
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(54, 17);
				string_literal34=(IToken)Match(input,161,Follow._161_in_type_declaration278); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal34_tree = (object)adaptor.Create(string_literal34, "string_literal34", retval);
				adaptor.AddChild(root_0, string_literal34_tree);
				}
				DebugLocation(54, 29);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:54:29: ( class_declaration | struct_declaration | interface_declaration )
				int alt13=3;
				try { DebugEnterSubRule(13);
				try { DebugEnterDecision(13, false);
				switch (input.LA(1))
				{
				case 113:
					{
					alt13 = 1;
					}
					break;
				case 180:
					{
					alt13 = 2;
					}
					break;
				case 141:
					{
					alt13 = 3;
					}
					break;
				default:
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 13, 0, input, 1);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}

				} finally { DebugExitDecision(13); }
				switch (alt13)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:54:30: class_declaration
					{
					DebugLocation(54, 30);
					PushFollow(Follow._class_declaration_in_type_declaration283);
					class_declaration35=class_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, class_declaration35.Tree, class_declaration35, "class_declaration35", retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:55:11: struct_declaration
					{
					DebugLocation(55, 11);
					PushFollow(Follow._struct_declaration_in_type_declaration295);
					struct_declaration36=struct_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, struct_declaration36.Tree, struct_declaration36, "struct_declaration36", retval);

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:56:11: interface_declaration
					{
					DebugLocation(56, 11);
					PushFollow(Follow._interface_declaration_in_type_declaration307);
					interface_declaration37=interface_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, interface_declaration37.Tree, interface_declaration37, "interface_declaration37", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(13); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:57:4: class_declaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(57, 4);
				PushFollow(Follow._class_declaration_in_type_declaration313);
				class_declaration38=class_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, class_declaration38.Tree, class_declaration38, "class_declaration38", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:58:4: struct_declaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(58, 4);
				PushFollow(Follow._struct_declaration_in_type_declaration318);
				struct_declaration39=struct_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, struct_declaration39.Tree, struct_declaration39, "struct_declaration39", retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:59:4: interface_declaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(59, 4);
				PushFollow(Follow._interface_declaration_in_type_declaration323);
				interface_declaration40=interface_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interface_declaration40.Tree, interface_declaration40, "interface_declaration40", retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:60:4: enum_declaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(60, 4);
				PushFollow(Follow._enum_declaration_in_type_declaration328);
				enum_declaration41=enum_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enum_declaration41.Tree, enum_declaration41, "enum_declaration41", retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:61:4: delegate_declaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(61, 4);
				PushFollow(Follow._delegate_declaration_in_type_declaration333);
				delegate_declaration42=delegate_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, delegate_declaration42.Tree, delegate_declaration42, "delegate_declaration42", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("type_declaration", 13);
			LeaveRule("type_declaration", 13);
			LeaveRule_type_declaration();
			if (state.backtracking > 0) { Memoize(input, 13, type_declaration_StartIndex); }

		}
		DebugLocation(61, 24);
		} finally { DebugExitRule(GrammarFileName, "type_declaration"); }
		return retval;

	}
	// $ANTLR end "type_declaration"

	partial void EnterRule_qualified_identifier();
	partial void LeaveRule_qualified_identifier();
	// $ANTLR start "qualified_identifier"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:63:1: qualified_identifier : identifier ( '.' identifier )* ;
	[GrammarRule("qualified_identifier")]
	private Antlr3AstNode qualified_identifier()
	{
		EnterRule_qualified_identifier();
		EnterRule("qualified_identifier", 14);
		var retval = new Antlr3AstNode("qualified_identifier");
		
		retval.Start = (IToken)input.LT(1);
		int qualified_identifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal44 = default(IToken);
		Antlr3AstNode identifier43 = default(Antlr3AstNode);
		Antlr3AstNode identifier45 = default(Antlr3AstNode);

		object char_literal44_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "qualified_identifier");
		DebugLocation(63, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 14)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:63:21: ( identifier ( '.' identifier )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:64:2: identifier ( '.' identifier )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(64, 2);
			PushFollow(Follow._identifier_in_qualified_identifier342);
			identifier43=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier43.Tree, identifier43, "identifier43", retval);
			DebugLocation(64, 13);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:64:13: ( '.' identifier )*
			try { DebugEnterSubRule(15);
			while (true)
			{
				int alt15=2;
				try { DebugEnterDecision(15, false);
				int LA15_1 = input.LA(1);

				if ((LA15_1==DOT))
				{
					alt15 = 1;
				}


				} finally { DebugExitDecision(15); }
				switch ( alt15 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:64:14: '.' identifier
					{
					DebugLocation(64, 14);
					char_literal44=(IToken)Match(input,DOT,Follow._DOT_in_qualified_identifier345); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal44_tree = (object)adaptor.Create(char_literal44, "char_literal44", retval);
					adaptor.AddChild(root_0, char_literal44_tree);
					}
					DebugLocation(64, 18);
					PushFollow(Follow._identifier_in_qualified_identifier347);
					identifier45=identifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, identifier45.Tree, identifier45, "identifier45", retval);

					}
					break;

				default:
					goto loop15;
				}
			}

			loop15:
				;

			} finally { DebugExitSubRule(15); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("qualified_identifier", 14);
			LeaveRule("qualified_identifier", 14);
			LeaveRule_qualified_identifier();
			if (state.backtracking > 0) { Memoize(input, 14, qualified_identifier_StartIndex); }

		}
		DebugLocation(64, 30);
		} finally { DebugExitRule(GrammarFileName, "qualified_identifier"); }
		return retval;

	}
	// $ANTLR end "qualified_identifier"

	partial void EnterRule_namespace_name();
	partial void LeaveRule_namespace_name();
	// $ANTLR start "namespace_name"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:65:1: namespace_name : namespace_or_type_name ;
	[GrammarRule("namespace_name")]
	private Antlr3AstNode namespace_name()
	{
		EnterRule_namespace_name();
		EnterRule("namespace_name", 15);
		var retval = new Antlr3AstNode("namespace_name");
		
		retval.Start = (IToken)input.LT(1);
		int namespace_name_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode namespace_or_type_name46 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "namespace_name");
		DebugLocation(65, 26);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 15)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:66:2: ( namespace_or_type_name )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:66:4: namespace_or_type_name
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(66, 4);
			PushFollow(Follow._namespace_or_type_name_in_namespace_name358);
			namespace_or_type_name46=namespace_or_type_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, namespace_or_type_name46.Tree, namespace_or_type_name46, "namespace_or_type_name46", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("namespace_name", 15);
			LeaveRule("namespace_name", 15);
			LeaveRule_namespace_name();
			if (state.backtracking > 0) { Memoize(input, 15, namespace_name_StartIndex); }

		}
		DebugLocation(66, 26);
		} finally { DebugExitRule(GrammarFileName, "namespace_name"); }
		return retval;

	}
	// $ANTLR end "namespace_name"

	partial void EnterRule_modifiers();
	partial void LeaveRule_modifiers();
	// $ANTLR start "modifiers"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:68:1: modifiers : ( modifier )+ ;
	[GrammarRule("modifiers")]
	private Antlr3AstNode modifiers()
	{
		EnterRule_modifiers();
		EnterRule("modifiers", 16);
		var retval = new Antlr3AstNode("modifiers");
		
		retval.Start = (IToken)input.LT(1);
		int modifiers_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode modifier47 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "modifiers");
		DebugLocation(68, 11);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 16)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:68:10: ( ( modifier )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:69:2: ( modifier )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(69, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:69:2: ( modifier )+
			int cnt16=0;
			try { DebugEnterSubRule(16);
			while (true)
			{
				int alt16=2;
				try { DebugEnterDecision(16, false);
				int LA16_1 = input.LA(1);

				if ((LA16_1==96||LA16_1==102||LA16_1==127||LA16_1==142||LA16_1==152||LA16_1==158||LA16_1==163||(LA16_1>=165 && LA16_1<=167)||LA16_1==172||LA16_1==178||LA16_1==190||LA16_1==193||LA16_1==195))
				{
					alt16 = 1;
				}


				} finally { DebugExitDecision(16); }
				switch (alt16)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:69:2: modifier
					{
					DebugLocation(69, 2);
					PushFollow(Follow._modifier_in_modifiers367);
					modifier47=modifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, modifier47.Tree, modifier47, "modifier47", retval);

					}
					break;

				default:
					if (cnt16 >= 1)
						goto loop16;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee16 = new EarlyExitException( 16, input );
					DebugRecognitionException(eee16);
					throw eee16;
				}
				cnt16++;
			}
			loop16:
				;

			} finally { DebugExitSubRule(16); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("modifiers", 16);
			LeaveRule("modifiers", 16);
			LeaveRule_modifiers();
			if (state.backtracking > 0) { Memoize(input, 16, modifiers_StartIndex); }

		}
		DebugLocation(69, 11);
		} finally { DebugExitRule(GrammarFileName, "modifiers"); }
		return retval;

	}
	// $ANTLR end "modifiers"

	partial void EnterRule_modifier();
	partial void LeaveRule_modifier();
	// $ANTLR start "modifier"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:70:1: modifier : ( 'new' | 'public' | 'protected' | 'private' | 'internal' | 'unsafe' | 'abstract' | 'sealed' | 'static' | 'readonly' | 'volatile' | 'extern' | 'virtual' | 'override' | 'async' );
	[GrammarRule("modifier")]
	private Antlr3AstNode modifier()
	{
		EnterRule_modifier();
		EnterRule("modifier", 17);
		var retval = new Antlr3AstNode("modifier");
		
		retval.Start = (IToken)input.LT(1);
		int modifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set48 = default(IToken);

		object set48_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "modifier");
		DebugLocation(70, 72);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 17)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:70:9: ( 'new' | 'public' | 'protected' | 'private' | 'internal' | 'unsafe' | 'abstract' | 'sealed' | 'static' | 'readonly' | 'volatile' | 'extern' | 'virtual' | 'override' | 'async' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(70, 9);

			set48=(IToken)input.LT(1);
			if (input.LA(1)==96||input.LA(1)==102||input.LA(1)==127||input.LA(1)==142||input.LA(1)==152||input.LA(1)==158||input.LA(1)==163||(input.LA(1)>=165 && input.LA(1)<=167)||input.LA(1)==172||input.LA(1)==178||input.LA(1)==190||input.LA(1)==193||input.LA(1)==195)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set48, "set48", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("modifier", 17);
			LeaveRule("modifier", 17);
			LeaveRule_modifier();
			if (state.backtracking > 0) { Memoize(input, 17, modifier_StartIndex); }

		}
		DebugLocation(72, 72);
		} finally { DebugExitRule(GrammarFileName, "modifier"); }
		return retval;

	}
	// $ANTLR end "modifier"

	partial void EnterRule_class_member_declaration();
	partial void LeaveRule_class_member_declaration();
	// $ANTLR start "class_member_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:74:1: class_member_declaration : ( attributes )? ( modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | class_declaration | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration ) ;
	[GrammarRule("class_member_declaration")]
	private Antlr3AstNode class_member_declaration()
	{
		EnterRule_class_member_declaration();
		EnterRule("class_member_declaration", 18);
		var retval = new Antlr3AstNode("class_member_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int class_member_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal51 = default(IToken);
		IToken char_literal54 = default(IToken);
		IToken string_literal56 = default(IToken);
		IToken string_literal62 = default(IToken);
		IToken char_literal68 = default(IToken);
		Antlr3AstNode attributes49 = default(Antlr3AstNode);
		Antlr3AstNode modifiers50 = default(Antlr3AstNode);
		Antlr3AstNode type52 = default(Antlr3AstNode);
		Antlr3AstNode constant_declarators53 = default(Antlr3AstNode);
		Antlr3AstNode event_declaration55 = default(Antlr3AstNode);
		Antlr3AstNode method_declaration57 = default(Antlr3AstNode);
		Antlr3AstNode interface_declaration58 = default(Antlr3AstNode);
		Antlr3AstNode class_declaration59 = default(Antlr3AstNode);
		Antlr3AstNode struct_declaration60 = default(Antlr3AstNode);
		Antlr3AstNode interface_declaration61 = default(Antlr3AstNode);
		Antlr3AstNode method_declaration63 = default(Antlr3AstNode);
		Antlr3AstNode type64 = default(Antlr3AstNode);
		Antlr3AstNode method_declaration65 = default(Antlr3AstNode);
		Antlr3AstNode property_declaration66 = default(Antlr3AstNode);
		Antlr3AstNode type_name67 = default(Antlr3AstNode);
		Antlr3AstNode indexer_declaration69 = default(Antlr3AstNode);
		Antlr3AstNode indexer_declaration70 = default(Antlr3AstNode);
		Antlr3AstNode field_declaration71 = default(Antlr3AstNode);
		Antlr3AstNode operator_declaration72 = default(Antlr3AstNode);
		Antlr3AstNode class_declaration73 = default(Antlr3AstNode);
		Antlr3AstNode struct_declaration74 = default(Antlr3AstNode);
		Antlr3AstNode enum_declaration75 = default(Antlr3AstNode);
		Antlr3AstNode delegate_declaration76 = default(Antlr3AstNode);
		Antlr3AstNode conversion_operator_declaration77 = default(Antlr3AstNode);
		Antlr3AstNode constructor_declaration78 = default(Antlr3AstNode);
		Antlr3AstNode destructor_declaration79 = default(Antlr3AstNode);

		object string_literal51_tree = default(object);
		object char_literal54_tree = default(object);
		object string_literal56_tree = default(object);
		object string_literal62_tree = default(object);
		object char_literal68_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "class_member_declaration");
		DebugLocation(74, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 18)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:74:25: ( ( attributes )? ( modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | class_declaration | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:75:2: ( attributes )? ( modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | class_declaration | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(75, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:75:2: ( attributes )?
			int alt17=2;
			try { DebugEnterSubRule(17);
			try { DebugEnterDecision(17, false);
			int LA17_1 = input.LA(1);

			if ((LA17_1==91))
			{
				alt17 = 1;
			}
			} finally { DebugExitDecision(17); }
			switch (alt17)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:75:2: attributes
				{
				DebugLocation(75, 2);
				PushFollow(Follow._attributes_in_class_member_declaration443);
				attributes49=attributes();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, attributes49.Tree, attributes49, "attributes49", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(17); }

			DebugLocation(76, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:76:2: ( modifiers )?
			int alt18=2;
			try { DebugEnterSubRule(18);
			try { DebugEnterDecision(18, false);
			int LA18_1 = input.LA(1);

			if ((LA18_1==96||LA18_1==102||LA18_1==127||LA18_1==142||LA18_1==152||LA18_1==158||LA18_1==163||(LA18_1>=165 && LA18_1<=167)||LA18_1==172||LA18_1==178||LA18_1==190||LA18_1==193||LA18_1==195))
			{
				alt18 = 1;
			}
			} finally { DebugExitDecision(18); }
			switch (alt18)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:76:2: modifiers
				{
				DebugLocation(76, 2);
				PushFollow(Follow._modifiers_in_class_member_declaration447);
				modifiers50=modifiers();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers50.Tree, modifiers50, "modifiers50", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(18); }

			DebugLocation(77, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:77:2: ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | class_declaration | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration )
			int alt21=13;
			try { DebugEnterSubRule(21);
			try { DebugEnterDecision(21, false);
			switch (input.LA(1))
			{
			case 114:
				{
				alt21 = 1;
				}
				break;
			case 125:
				{
				alt21 = 2;
				}
				break;
			case 161:
				{
				alt21 = 3;
				}
				break;
			case 141:
				{
				alt21 = 4;
				}
				break;
			case 194:
				{
				int LA21_2 = input.LA(2);

				if ((LA21_2==Character_literal||LA21_2==FALSE||(LA21_2>=Hex_number && LA21_2<=IDENTIFIER)||(LA21_2>=NULL && LA21_2<=NUMBER)||LA21_2==Real_literal||LA21_2==STRINGLITERAL||LA21_2==TRUE||LA21_2==Verbatim_string_literal||LA21_2==95||(LA21_2>=97 && LA21_2<=98)||(LA21_2>=100 && LA21_2<=101)||LA21_2==105||(LA21_2>=107 && LA21_2<=108)||LA21_2==111||LA21_2==116||LA21_2==119||(LA21_2>=121 && LA21_2<=122)||LA21_2==124||LA21_2==128||LA21_2==131||LA21_2==134||LA21_2==137||LA21_2==140||LA21_2==143||(LA21_2>=145 && LA21_2<=146)||(LA21_2>=148 && LA21_2<=150)||(LA21_2>=153 && LA21_2<=154)||LA21_2==156||LA21_2==159||LA21_2==162||LA21_2==164||LA21_2==169||LA21_2==171||(LA21_2>=173 && LA21_2<=175)||LA21_2==179||LA21_2==185||(LA21_2>=187 && LA21_2<=188)||(LA21_2>=191 && LA21_2<=192)||LA21_2==196||LA21_2==198))
				{
					alt21 = 5;
				}
				else if ((LA21_2==69))
				{
					alt21 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 21, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 105:
			case 108:
			case 111:
			case 116:
			case 121:
			case 131:
			case 140:
			case 148:
			case 153:
			case 171:
			case 175:
			case 179:
			case 187:
			case 188:
			case 191:
				{
				alt21 = 6;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 107:
			case 119:
			case 122:
			case 124:
			case 128:
			case 134:
			case 137:
			case 143:
			case 145:
			case 146:
			case 149:
			case 150:
			case 154:
			case 156:
			case 159:
			case 162:
			case 164:
			case 169:
			case 173:
			case 174:
			case 185:
			case 192:
			case 196:
			case 198:
				{
				int LA21_2 = input.LA(2);

				if ((LA21_2==Character_literal||LA21_2==DOT||LA21_2==FALSE||(LA21_2>=Hex_number && LA21_2<=IDENTIFIER)||(LA21_2>=NULL && LA21_2<=NUMBER)||LA21_2==Real_literal||LA21_2==STRINGLITERAL||LA21_2==TRUE||LA21_2==Verbatim_string_literal||LA21_2==69||(LA21_2>=80 && LA21_2<=81)||LA21_2==89||LA21_2==91||LA21_2==95||(LA21_2>=97 && LA21_2<=98)||(LA21_2>=100 && LA21_2<=101)||LA21_2==105||(LA21_2>=107 && LA21_2<=108)||LA21_2==111||LA21_2==116||LA21_2==119||(LA21_2>=121 && LA21_2<=122)||LA21_2==124||LA21_2==128||LA21_2==131||LA21_2==134||LA21_2==137||LA21_2==140||LA21_2==143||(LA21_2>=145 && LA21_2<=146)||(LA21_2>=148 && LA21_2<=150)||(LA21_2>=153 && LA21_2<=156)||LA21_2==159||LA21_2==162||LA21_2==164||LA21_2==169||LA21_2==171||(LA21_2>=173 && LA21_2<=175)||LA21_2==179||LA21_2==182||LA21_2==185||(LA21_2>=187 && LA21_2<=188)||(LA21_2>=191 && LA21_2<=192)||LA21_2==196||LA21_2==198))
				{
					alt21 = 6;
				}
				else if ((LA21_2==68))
				{
					alt21 = 12;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 21, 7, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 113:
				{
				alt21 = 7;
				}
				break;
			case 180:
				{
				alt21 = 8;
				}
				break;
			case ENUM:
				{
				alt21 = 9;
				}
				break;
			case 118:
				{
				alt21 = 10;
				}
				break;
			case 126:
			case 138:
				{
				alt21 = 11;
				}
				break;
			case 204:
				{
				alt21 = 13;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 21, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(21); }
			switch (alt21)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:77:4: 'const' type constant_declarators ';'
				{
				DebugLocation(77, 4);
				string_literal51=(IToken)Match(input,114,Follow._114_in_class_member_declaration453); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal51_tree = (object)adaptor.Create(string_literal51, "string_literal51", retval);
				adaptor.AddChild(root_0, string_literal51_tree);
				}
				DebugLocation(77, 14);
				PushFollow(Follow._type_in_class_member_declaration457);
				type52=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type52.Tree, type52, "type52", retval);
				DebugLocation(77, 21);
				PushFollow(Follow._constant_declarators_in_class_member_declaration461);
				constant_declarators53=constant_declarators();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constant_declarators53.Tree, constant_declarators53, "constant_declarators53", retval);
				DebugLocation(77, 44);
				char_literal54=(IToken)Match(input,SEMI,Follow._SEMI_in_class_member_declaration465); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal54_tree = (object)adaptor.Create(char_literal54, "char_literal54", retval);
				adaptor.AddChild(root_0, char_literal54_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:78:4: event_declaration
				{
				DebugLocation(78, 4);
				PushFollow(Follow._event_declaration_in_class_member_declaration470);
				event_declaration55=event_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, event_declaration55.Tree, event_declaration55, "event_declaration55", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:79:4: 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration )
				{
				DebugLocation(79, 4);
				string_literal56=(IToken)Match(input,161,Follow._161_in_class_member_declaration477); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal56_tree = (object)adaptor.Create(string_literal56, "string_literal56", retval);
				adaptor.AddChild(root_0, string_literal56_tree);
				}
				DebugLocation(79, 14);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:79:14: ( method_declaration | interface_declaration | class_declaration | struct_declaration )
				int alt19=4;
				try { DebugEnterSubRule(19);
				try { DebugEnterDecision(19, false);
				switch (input.LA(1))
				{
				case Character_literal:
				case FALSE:
				case Hex_number:
				case IDENTIFIER:
				case NULL:
				case NUMBER:
				case Real_literal:
				case STRINGLITERAL:
				case TRUE:
				case Verbatim_string_literal:
				case 95:
				case 97:
				case 98:
				case 100:
				case 101:
				case 105:
				case 107:
				case 108:
				case 111:
				case 116:
				case 119:
				case 121:
				case 122:
				case 124:
				case 128:
				case 131:
				case 134:
				case 137:
				case 140:
				case 143:
				case 145:
				case 146:
				case 148:
				case 149:
				case 150:
				case 153:
				case 154:
				case 156:
				case 159:
				case 162:
				case 164:
				case 169:
				case 171:
				case 173:
				case 174:
				case 175:
				case 179:
				case 185:
				case 187:
				case 188:
				case 191:
				case 192:
				case 196:
				case 198:
					{
					alt19 = 1;
					}
					break;
				case 141:
					{
					alt19 = 2;
					}
					break;
				case 113:
					{
					alt19 = 3;
					}
					break;
				case 180:
					{
					alt19 = 4;
					}
					break;
				default:
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 19, 0, input, 1);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}

				} finally { DebugExitDecision(19); }
				switch (alt19)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:79:15: method_declaration
					{
					DebugLocation(79, 15);
					PushFollow(Follow._method_declaration_in_class_member_declaration480);
					method_declaration57=method_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, method_declaration57.Tree, method_declaration57, "method_declaration57", retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:80:9: interface_declaration
					{
					DebugLocation(80, 9);
					PushFollow(Follow._interface_declaration_in_class_member_declaration491);
					interface_declaration58=interface_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, interface_declaration58.Tree, interface_declaration58, "interface_declaration58", retval);

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:81:9: class_declaration
					{
					DebugLocation(81, 9);
					PushFollow(Follow._class_declaration_in_class_member_declaration502);
					class_declaration59=class_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, class_declaration59.Tree, class_declaration59, "class_declaration59", retval);

					}
					break;
				case 4:
					DebugEnterAlt(4);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:82:9: struct_declaration
					{
					DebugLocation(82, 9);
					PushFollow(Follow._struct_declaration_in_class_member_declaration513);
					struct_declaration60=struct_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, struct_declaration60.Tree, struct_declaration60, "struct_declaration60", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(19); }


				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:83:4: interface_declaration
				{
				DebugLocation(83, 4);
				PushFollow(Follow._interface_declaration_in_class_member_declaration519);
				interface_declaration61=interface_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interface_declaration61.Tree, interface_declaration61, "interface_declaration61", retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:84:4: 'void' method_declaration
				{
				DebugLocation(84, 4);
				string_literal62=(IToken)Match(input,194,Follow._194_in_class_member_declaration525); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal62_tree = (object)adaptor.Create(string_literal62, "string_literal62", retval);
				adaptor.AddChild(root_0, string_literal62_tree);
				}
				DebugLocation(84, 13);
				PushFollow(Follow._method_declaration_in_class_member_declaration529);
				method_declaration63=method_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, method_declaration63.Tree, method_declaration63, "method_declaration63", retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:85:4: type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )
				{
				DebugLocation(85, 4);
				PushFollow(Follow._type_in_class_member_declaration534);
				type64=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type64.Tree, type64, "type64", retval);
				DebugLocation(85, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:85:9: ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )
				int alt20=6;
				try { DebugEnterSubRule(20);
				try { DebugEnterDecision(20, false);
				switch (input.LA(1))
				{
				case 105:
				case 108:
				case 111:
				case 116:
				case 121:
				case 131:
				case 140:
				case 148:
				case 153:
				case 171:
				case 175:
				case 179:
				case 187:
				case 188:
				case 191:
					{
					int LA20_2 = input.LA(2);

					if ((EvaluatePredicate(synpred2_cs_fragment)))
					{
						alt20 = 1;
					}
					else if ((EvaluatePredicate(synpred3_cs_fragment)))
					{
						alt20 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 20, 1, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					}
					break;
				case IDENTIFIER:
				case 95:
				case 97:
				case 98:
				case 100:
				case 101:
				case 107:
				case 119:
				case 122:
				case 124:
				case 128:
				case 134:
				case 137:
				case 143:
				case 145:
				case 146:
				case 149:
				case 150:
				case 154:
				case 156:
				case 159:
				case 162:
				case 164:
				case 169:
				case 173:
				case 174:
				case 185:
				case 192:
				case 196:
				case 198:
					{
					int LA20_2 = input.LA(2);

					if ((EvaluatePredicate(synpred2_cs_fragment)))
					{
						alt20 = 1;
					}
					else if ((EvaluatePredicate(synpred3_cs_fragment)))
					{
						alt20 = 2;
					}
					else if ((EvaluatePredicate(synpred4_cs_fragment)))
					{
						alt20 = 3;
					}
					else if ((true))
					{
						alt20 = 5;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 20, 2, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					}
					break;
				case Character_literal:
				case FALSE:
				case Hex_number:
				case NULL:
				case NUMBER:
				case Real_literal:
				case STRINGLITERAL:
				case TRUE:
				case Verbatim_string_literal:
					{
					int LA20_2 = input.LA(2);

					if ((EvaluatePredicate(synpred2_cs_fragment)))
					{
						alt20 = 1;
					}
					else if ((EvaluatePredicate(synpred3_cs_fragment)))
					{
						alt20 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 20, 3, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					}
					break;
				case 182:
					{
					alt20 = 4;
					}
					break;
				case 155:
					{
					alt20 = 6;
					}
					break;
				default:
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 20, 0, input, 1);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}

				} finally { DebugExitDecision(20); }
				switch (alt20)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:85:11: ( member_name '(' )=> method_declaration
					{
					DebugLocation(85, 34);
					PushFollow(Follow._method_declaration_in_class_member_declaration548);
					method_declaration65=method_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, method_declaration65.Tree, method_declaration65, "method_declaration65", retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:86:8: ( member_name '{' )=> property_declaration
					{
					DebugLocation(86, 31);
					PushFollow(Follow._property_declaration_in_class_member_declaration567);
					property_declaration66=property_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, property_declaration66.Tree, property_declaration66, "property_declaration66", retval);

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:87:8: ( member_name '.' 'this' )=> type_name '.' indexer_declaration
					{
					DebugLocation(87, 40);
					PushFollow(Follow._type_name_in_class_member_declaration590);
					type_name67=type_name();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type_name67.Tree, type_name67, "type_name67", retval);
					DebugLocation(87, 50);
					char_literal68=(IToken)Match(input,DOT,Follow._DOT_in_class_member_declaration592); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal68_tree = (object)adaptor.Create(char_literal68, "char_literal68", retval);
					adaptor.AddChild(root_0, char_literal68_tree);
					}
					DebugLocation(87, 54);
					PushFollow(Follow._indexer_declaration_in_class_member_declaration594);
					indexer_declaration69=indexer_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, indexer_declaration69.Tree, indexer_declaration69, "indexer_declaration69", retval);

					}
					break;
				case 4:
					DebugEnterAlt(4);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:88:8: indexer_declaration
					{
					DebugLocation(88, 8);
					PushFollow(Follow._indexer_declaration_in_class_member_declaration603);
					indexer_declaration70=indexer_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, indexer_declaration70.Tree, indexer_declaration70, "indexer_declaration70", retval);

					}
					break;
				case 5:
					DebugEnterAlt(5);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:89:11: field_declaration
					{
					DebugLocation(89, 11);
					PushFollow(Follow._field_declaration_in_class_member_declaration616);
					field_declaration71=field_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, field_declaration71.Tree, field_declaration71, "field_declaration71", retval);

					}
					break;
				case 6:
					DebugEnterAlt(6);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:90:11: operator_declaration
					{
					DebugLocation(90, 11);
					PushFollow(Follow._operator_declaration_in_class_member_declaration634);
					operator_declaration72=operator_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, operator_declaration72.Tree, operator_declaration72, "operator_declaration72", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(20); }


				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:94:4: class_declaration
				{
				DebugLocation(94, 4);
				PushFollow(Follow._class_declaration_in_class_member_declaration652);
				class_declaration73=class_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, class_declaration73.Tree, class_declaration73, "class_declaration73", retval);

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:95:4: struct_declaration
				{
				DebugLocation(95, 4);
				PushFollow(Follow._struct_declaration_in_class_member_declaration659);
				struct_declaration74=struct_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, struct_declaration74.Tree, struct_declaration74, "struct_declaration74", retval);

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:96:4: enum_declaration
				{
				DebugLocation(96, 4);
				PushFollow(Follow._enum_declaration_in_class_member_declaration665);
				enum_declaration75=enum_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enum_declaration75.Tree, enum_declaration75, "enum_declaration75", retval);

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:97:4: delegate_declaration
				{
				DebugLocation(97, 4);
				PushFollow(Follow._delegate_declaration_in_class_member_declaration672);
				delegate_declaration76=delegate_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, delegate_declaration76.Tree, delegate_declaration76, "delegate_declaration76", retval);

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:98:4: conversion_operator_declaration
				{
				DebugLocation(98, 4);
				PushFollow(Follow._conversion_operator_declaration_in_class_member_declaration678);
				conversion_operator_declaration77=conversion_operator_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, conversion_operator_declaration77.Tree, conversion_operator_declaration77, "conversion_operator_declaration77", retval);

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:99:4: constructor_declaration
				{
				DebugLocation(99, 4);
				PushFollow(Follow._constructor_declaration_in_class_member_declaration683);
				constructor_declaration78=constructor_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constructor_declaration78.Tree, constructor_declaration78, "constructor_declaration78", retval);

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:100:4: destructor_declaration
				{
				DebugLocation(100, 4);
				PushFollow(Follow._destructor_declaration_in_class_member_declaration689);
				destructor_declaration79=destructor_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, destructor_declaration79.Tree, destructor_declaration79, "destructor_declaration79", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(21); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("class_member_declaration", 18);
			LeaveRule("class_member_declaration", 18);
			LeaveRule_class_member_declaration();
			if (state.backtracking > 0) { Memoize(input, 18, class_member_declaration_StartIndex); }

		}
		DebugLocation(102, 1);
		} finally { DebugExitRule(GrammarFileName, "class_member_declaration"); }
		return retval;

	}
	// $ANTLR end "class_member_declaration"

	partial void EnterRule_primary_expression();
	partial void LeaveRule_primary_expression();
	// $ANTLR start "primary_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:104:1: primary_expression : ( ( 'this' brackets )=> 'this' brackets ( primary_expression_part )* | ( 'base' brackets )=> 'this' brackets ( primary_expression_part )* | primary_expression_start ( primary_expression_part )* | 'new' ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | object_creation_expression | anonymous_object_creation_expression ) | sizeof_expression | checked_expression | unchecked_expression | default_value_expression | anonymous_method_expression );
	[GrammarRule("primary_expression")]
	private Antlr3AstNode primary_expression()
	{
		EnterRule_primary_expression();
		EnterRule("primary_expression", 19);
		var retval = new Antlr3AstNode("primary_expression");
		
		retval.Start = (IToken)input.LT(1);
		int primary_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal80 = default(IToken);
		IToken string_literal83 = default(IToken);
		IToken string_literal88 = default(IToken);
		Antlr3AstNode brackets81 = default(Antlr3AstNode);
		Antlr3AstNode primary_expression_part82 = default(Antlr3AstNode);
		Antlr3AstNode brackets84 = default(Antlr3AstNode);
		Antlr3AstNode primary_expression_part85 = default(Antlr3AstNode);
		Antlr3AstNode primary_expression_start86 = default(Antlr3AstNode);
		Antlr3AstNode primary_expression_part87 = default(Antlr3AstNode);
		Antlr3AstNode object_creation_expression89 = default(Antlr3AstNode);
		Antlr3AstNode primary_expression_part90 = default(Antlr3AstNode);
		Antlr3AstNode object_creation_expression91 = default(Antlr3AstNode);
		Antlr3AstNode anonymous_object_creation_expression92 = default(Antlr3AstNode);
		Antlr3AstNode sizeof_expression93 = default(Antlr3AstNode);
		Antlr3AstNode checked_expression94 = default(Antlr3AstNode);
		Antlr3AstNode unchecked_expression95 = default(Antlr3AstNode);
		Antlr3AstNode default_value_expression96 = default(Antlr3AstNode);
		Antlr3AstNode anonymous_method_expression97 = default(Antlr3AstNode);

		object string_literal80_tree = default(object);
		object string_literal83_tree = default(object);
		object string_literal88_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "primary_expression");
		DebugLocation(104, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 19)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:104:19: ( ( 'this' brackets )=> 'this' brackets ( primary_expression_part )* | ( 'base' brackets )=> 'this' brackets ( primary_expression_part )* | primary_expression_start ( primary_expression_part )* | 'new' ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | object_creation_expression | anonymous_object_creation_expression ) | sizeof_expression | checked_expression | unchecked_expression | default_value_expression | anonymous_method_expression )
			int alt27=9;
			try { DebugEnterDecision(27, false);
			switch (input.LA(1))
			{
			case 182:
				{
				int LA27_2 = input.LA(2);

				if ((EvaluatePredicate(synpred5_cs_fragment)))
				{
					alt27 = 1;
				}
				else if ((EvaluatePredicate(synpred6_cs_fragment)))
				{
					alt27 = 2;
				}
				else if ((true))
				{
					alt27 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 27, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case IDENTIFIER:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 68:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 104:
			case 105:
			case 107:
			case 108:
			case 111:
			case 116:
			case 119:
			case 121:
			case 122:
			case 124:
			case 128:
			case 131:
			case 134:
			case 137:
			case 140:
			case 143:
			case 145:
			case 146:
			case 148:
			case 149:
			case 150:
			case 153:
			case 154:
			case 156:
			case 159:
			case 162:
			case 164:
			case 169:
			case 171:
			case 173:
			case 174:
			case 175:
			case 179:
			case 185:
			case 186:
			case 187:
			case 188:
			case 191:
			case 192:
			case 196:
			case 198:
				{
				alt27 = 3;
				}
				break;
			case 152:
				{
				alt27 = 4;
				}
				break;
			case 176:
				{
				alt27 = 5;
				}
				break;
			case 112:
				{
				alt27 = 6;
				}
				break;
			case 189:
				{
				alt27 = 7;
				}
				break;
			case 117:
				{
				alt27 = 8;
				}
				break;
			case 102:
			case 118:
				{
				alt27 = 9;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 27, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(27); }
			switch (alt27)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:105:2: ( 'this' brackets )=> 'this' brackets ( primary_expression_part )*
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(105, 26);
				string_literal80=(IToken)Match(input,182,Follow._182_in_primary_expression715); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal80_tree = (object)adaptor.Create(string_literal80, "string_literal80", retval);
				adaptor.AddChild(root_0, string_literal80_tree);
				}
				DebugLocation(105, 35);
				PushFollow(Follow._brackets_in_primary_expression719);
				brackets81=brackets();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, brackets81.Tree, brackets81, "brackets81", retval);
				DebugLocation(105, 46);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:105:46: ( primary_expression_part )*
				try { DebugEnterSubRule(22);
				while (true)
				{
					int alt22=2;
					try { DebugEnterDecision(22, false);
					int LA22_1 = input.LA(1);

					if ((LA22_1==DOT||LA22_1==PTR||LA22_1==68||LA22_1==91))
					{
						alt22 = 1;
					}


					} finally { DebugExitDecision(22); }
					switch ( alt22 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:105:46: primary_expression_part
						{
						DebugLocation(105, 46);
						PushFollow(Follow._primary_expression_part_in_primary_expression723);
						primary_expression_part82=primary_expression_part();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, primary_expression_part82.Tree, primary_expression_part82, "primary_expression_part82", retval);

						}
						break;

					default:
						goto loop22;
					}
				}

				loop22:
					;

				} finally { DebugExitSubRule(22); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:106:4: ( 'base' brackets )=> 'this' brackets ( primary_expression_part )*
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(106, 27);
				string_literal83=(IToken)Match(input,182,Follow._182_in_primary_expression739); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal83_tree = (object)adaptor.Create(string_literal83, "string_literal83", retval);
				adaptor.AddChild(root_0, string_literal83_tree);
				}
				DebugLocation(106, 36);
				PushFollow(Follow._brackets_in_primary_expression743);
				brackets84=brackets();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, brackets84.Tree, brackets84, "brackets84", retval);
				DebugLocation(106, 47);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:106:47: ( primary_expression_part )*
				try { DebugEnterSubRule(23);
				while (true)
				{
					int alt23=2;
					try { DebugEnterDecision(23, false);
					int LA23_1 = input.LA(1);

					if ((LA23_1==DOT||LA23_1==PTR||LA23_1==68||LA23_1==91))
					{
						alt23 = 1;
					}


					} finally { DebugExitDecision(23); }
					switch ( alt23 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:106:47: primary_expression_part
						{
						DebugLocation(106, 47);
						PushFollow(Follow._primary_expression_part_in_primary_expression747);
						primary_expression_part85=primary_expression_part();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, primary_expression_part85.Tree, primary_expression_part85, "primary_expression_part85", retval);

						}
						break;

					default:
						goto loop23;
					}
				}

				loop23:
					;

				} finally { DebugExitSubRule(23); }


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:107:4: primary_expression_start ( primary_expression_part )*
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(107, 4);
				PushFollow(Follow._primary_expression_start_in_primary_expression753);
				primary_expression_start86=primary_expression_start();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primary_expression_start86.Tree, primary_expression_start86, "primary_expression_start86", retval);
				DebugLocation(107, 31);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:107:31: ( primary_expression_part )*
				try { DebugEnterSubRule(24);
				while (true)
				{
					int alt24=2;
					try { DebugEnterDecision(24, false);
					int LA24_1 = input.LA(1);

					if ((LA24_1==DOT||LA24_1==PTR||LA24_1==68||LA24_1==91))
					{
						alt24 = 1;
					}


					} finally { DebugExitDecision(24); }
					switch ( alt24 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:107:31: primary_expression_part
						{
						DebugLocation(107, 31);
						PushFollow(Follow._primary_expression_part_in_primary_expression757);
						primary_expression_part87=primary_expression_part();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, primary_expression_part87.Tree, primary_expression_part87, "primary_expression_part87", retval);

						}
						break;

					default:
						goto loop24;
					}
				}

				loop24:
					;

				} finally { DebugExitSubRule(24); }


				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:108:4: 'new' ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | object_creation_expression | anonymous_object_creation_expression )
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(108, 4);
				string_literal88=(IToken)Match(input,152,Follow._152_in_primary_expression763); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal88_tree = (object)adaptor.Create(string_literal88, "string_literal88", retval);
				adaptor.AddChild(root_0, string_literal88_tree);
				}
				DebugLocation(108, 10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:108:10: ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | object_creation_expression | anonymous_object_creation_expression )
				int alt26=3;
				try { DebugEnterSubRule(26);
				try { DebugEnterDecision(26, false);
				switch (input.LA(1))
				{
				case 105:
				case 108:
				case 111:
				case 116:
				case 121:
				case 131:
				case 140:
				case 148:
				case 153:
				case 171:
				case 175:
				case 179:
				case 187:
				case 188:
				case 191:
					{
					int LA26_2 = input.LA(2);

					if ((EvaluatePredicate(synpred7_cs_fragment)))
					{
						alt26 = 1;
					}
					else if ((true))
					{
						alt26 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 26, 1, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					}
					break;
				case IDENTIFIER:
				case 95:
				case 97:
				case 98:
				case 100:
				case 101:
				case 107:
				case 119:
				case 122:
				case 124:
				case 128:
				case 134:
				case 137:
				case 143:
				case 145:
				case 146:
				case 149:
				case 150:
				case 154:
				case 156:
				case 159:
				case 162:
				case 164:
				case 169:
				case 173:
				case 174:
				case 185:
				case 192:
				case 196:
				case 198:
					{
					int LA26_2 = input.LA(2);

					if ((EvaluatePredicate(synpred7_cs_fragment)))
					{
						alt26 = 1;
					}
					else if ((true))
					{
						alt26 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 26, 2, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					}
					break;
				case 194:
					{
					int LA26_2 = input.LA(2);

					if ((EvaluatePredicate(synpred7_cs_fragment)))
					{
						alt26 = 1;
					}
					else if ((true))
					{
						alt26 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 26, 3, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					}
					break;
				case 199:
					{
					alt26 = 3;
					}
					break;
				default:
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 26, 0, input, 1);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}

				} finally { DebugExitDecision(26); }
				switch (alt26)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:108:14: ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+
					{
					DebugLocation(109, 6);
					PushFollow(Follow._object_creation_expression_in_primary_expression791);
					object_creation_expression89=object_creation_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, object_creation_expression89.Tree, object_creation_expression89, "object_creation_expression89", retval);
					DebugLocation(109, 35);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:109:35: ( primary_expression_part )+
					int cnt25=0;
					try { DebugEnterSubRule(25);
					while (true)
					{
						int alt25=2;
						try { DebugEnterDecision(25, false);
						int LA25_1 = input.LA(1);

						if ((LA25_1==DOT||LA25_1==PTR||LA25_1==68||LA25_1==91))
						{
							alt25 = 1;
						}


						} finally { DebugExitDecision(25); }
						switch (alt25)
						{
						case 1:
							DebugEnterAlt(1);
							// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:109:35: primary_expression_part
							{
							DebugLocation(109, 35);
							PushFollow(Follow._primary_expression_part_in_primary_expression795);
							primary_expression_part90=primary_expression_part();
							PopFollow();
							if (state.failed) return retval;
							if (state.backtracking == 0) adaptor.AddChild(root_0, primary_expression_part90.Tree, primary_expression_part90, "primary_expression_part90", retval);

							}
							break;

						default:
							if (cnt25 >= 1)
								goto loop25;

							if (state.backtracking>0) {state.failed=true; return retval;}
							EarlyExitException eee25 = new EarlyExitException( 25, input );
							DebugRecognitionException(eee25);
							throw eee25;
						}
						cnt25++;
					}
					loop25:
						;

					} finally { DebugExitSubRule(25); }


					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:110:7: object_creation_expression
					{
					DebugLocation(110, 7);
					PushFollow(Follow._object_creation_expression_in_primary_expression807);
					object_creation_expression91=object_creation_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, object_creation_expression91.Tree, object_creation_expression91, "object_creation_expression91", retval);

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:114:7: anonymous_object_creation_expression
					{
					DebugLocation(114, 7);
					PushFollow(Follow._anonymous_object_creation_expression_in_primary_expression830);
					anonymous_object_creation_expression92=anonymous_object_creation_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, anonymous_object_creation_expression92.Tree, anonymous_object_creation_expression92, "anonymous_object_creation_expression92", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(26); }


				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:115:4: sizeof_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(115, 4);
				PushFollow(Follow._sizeof_expression_in_primary_expression843);
				sizeof_expression93=sizeof_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, sizeof_expression93.Tree, sizeof_expression93, "sizeof_expression93", retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:116:4: checked_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(116, 4);
				PushFollow(Follow._checked_expression_in_primary_expression854);
				checked_expression94=checked_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, checked_expression94.Tree, checked_expression94, "checked_expression94", retval);

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:117:4: unchecked_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(117, 4);
				PushFollow(Follow._unchecked_expression_in_primary_expression873);
				unchecked_expression95=unchecked_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unchecked_expression95.Tree, unchecked_expression95, "unchecked_expression95", retval);

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:118:4: default_value_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(118, 4);
				PushFollow(Follow._default_value_expression_in_primary_expression890);
				default_value_expression96=default_value_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, default_value_expression96.Tree, default_value_expression96, "default_value_expression96", retval);

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:119:4: anonymous_method_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(119, 4);
				PushFollow(Follow._anonymous_method_expression_in_primary_expression903);
				anonymous_method_expression97=anonymous_method_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, anonymous_method_expression97.Tree, anonymous_method_expression97, "anonymous_method_expression97", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("primary_expression", 19);
			LeaveRule("primary_expression", 19);
			LeaveRule_primary_expression();
			if (state.backtracking > 0) { Memoize(input, 19, primary_expression_StartIndex); }

		}
		DebugLocation(120, 1);
		} finally { DebugExitRule(GrammarFileName, "primary_expression"); }
		return retval;

	}
	// $ANTLR end "primary_expression"

	partial void EnterRule_primary_expression_start();
	partial void LeaveRule_primary_expression_start();
	// $ANTLR start "primary_expression_start"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:122:1: primary_expression_start : ( predefined_type | ( identifier generic_argument_list )=> identifier generic_argument_list | identifier ( '::' identifier )? | 'this' | 'base' | paren_expression | typeof_expression | literal );
	[GrammarRule("primary_expression_start")]
	private Antlr3AstNode primary_expression_start()
	{
		EnterRule_primary_expression_start();
		EnterRule("primary_expression_start", 20);
		var retval = new Antlr3AstNode("primary_expression_start");
		
		retval.Start = (IToken)input.LT(1);
		int primary_expression_start_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal102 = default(IToken);
		IToken string_literal104 = default(IToken);
		IToken string_literal105 = default(IToken);
		Antlr3AstNode predefined_type98 = default(Antlr3AstNode);
		Antlr3AstNode identifier99 = default(Antlr3AstNode);
		Antlr3AstNode generic_argument_list100 = default(Antlr3AstNode);
		Antlr3AstNode identifier101 = default(Antlr3AstNode);
		Antlr3AstNode identifier103 = default(Antlr3AstNode);
		Antlr3AstNode paren_expression106 = default(Antlr3AstNode);
		Antlr3AstNode typeof_expression107 = default(Antlr3AstNode);
		Antlr3AstNode literal108 = default(Antlr3AstNode);

		object string_literal102_tree = default(object);
		object string_literal104_tree = default(object);
		object string_literal105_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "primary_expression_start");
		DebugLocation(122, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 20)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:122:25: ( predefined_type | ( identifier generic_argument_list )=> identifier generic_argument_list | identifier ( '::' identifier )? | 'this' | 'base' | paren_expression | typeof_expression | literal )
			int alt29=8;
			try { DebugEnterDecision(29, false);
			switch (input.LA(1))
			{
			case 105:
			case 108:
			case 111:
			case 116:
			case 121:
			case 131:
			case 140:
			case 148:
			case 153:
			case 171:
			case 175:
			case 179:
			case 187:
			case 188:
			case 191:
				{
				alt29 = 1;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 107:
			case 119:
			case 122:
			case 124:
			case 128:
			case 134:
			case 137:
			case 143:
			case 145:
			case 146:
			case 149:
			case 150:
			case 154:
			case 156:
			case 159:
			case 162:
			case 164:
			case 169:
			case 173:
			case 174:
			case 185:
			case 192:
			case 196:
			case 198:
				{
				int LA29_2 = input.LA(2);

				if ((EvaluatePredicate(synpred8_cs_fragment)))
				{
					alt29 = 2;
				}
				else if ((true))
				{
					alt29 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 29, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 182:
				{
				alt29 = 4;
				}
				break;
			case 104:
				{
				alt29 = 5;
				}
				break;
			case 68:
				{
				alt29 = 6;
				}
				break;
			case 186:
				{
				alt29 = 7;
				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
				{
				alt29 = 8;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 29, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(29); }
			switch (alt29)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:123:2: predefined_type
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(123, 2);
				PushFollow(Follow._predefined_type_in_primary_expression_start916);
				predefined_type98=predefined_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, predefined_type98.Tree, predefined_type98, "predefined_type98", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:124:4: ( identifier generic_argument_list )=> identifier generic_argument_list
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(124, 42);
				PushFollow(Follow._identifier_in_primary_expression_start941);
				identifier99=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier99.Tree, identifier99, "identifier99", retval);
				DebugLocation(124, 53);
				PushFollow(Follow._generic_argument_list_in_primary_expression_start943);
				generic_argument_list100=generic_argument_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, generic_argument_list100.Tree, generic_argument_list100, "generic_argument_list100", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:125:4: identifier ( '::' identifier )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(125, 4);
				PushFollow(Follow._identifier_in_primary_expression_start948);
				identifier101=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier101.Tree, identifier101, "identifier101", retval);
				DebugLocation(125, 15);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:125:15: ( '::' identifier )?
				int alt28=2;
				try { DebugEnterSubRule(28);
				try { DebugEnterDecision(28, false);
				int LA28_1 = input.LA(1);

				if ((LA28_1==80))
				{
					alt28 = 1;
				}
				} finally { DebugExitDecision(28); }
				switch (alt28)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:125:16: '::' identifier
					{
					DebugLocation(125, 16);
					string_literal102=(IToken)Match(input,80,Follow._80_in_primary_expression_start951); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal102_tree = (object)adaptor.Create(string_literal102, "string_literal102", retval);
					adaptor.AddChild(root_0, string_literal102_tree);
					}
					DebugLocation(125, 23);
					PushFollow(Follow._identifier_in_primary_expression_start955);
					identifier103=identifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, identifier103.Tree, identifier103, "identifier103", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(28); }


				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:126:4: 'this'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(126, 4);
				string_literal104=(IToken)Match(input,182,Follow._182_in_primary_expression_start962); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal104_tree = (object)adaptor.Create(string_literal104, "string_literal104", retval);
				adaptor.AddChild(root_0, string_literal104_tree);
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:127:4: 'base'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(127, 4);
				string_literal105=(IToken)Match(input,104,Follow._104_in_primary_expression_start968); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal105_tree = (object)adaptor.Create(string_literal105, "string_literal105", retval);
				adaptor.AddChild(root_0, string_literal105_tree);
				}

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:128:4: paren_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(128, 4);
				PushFollow(Follow._paren_expression_in_primary_expression_start973);
				paren_expression106=paren_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, paren_expression106.Tree, paren_expression106, "paren_expression106", retval);

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:129:4: typeof_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(129, 4);
				PushFollow(Follow._typeof_expression_in_primary_expression_start978);
				typeof_expression107=typeof_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeof_expression107.Tree, typeof_expression107, "typeof_expression107", retval);

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:130:4: literal
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(130, 4);
				PushFollow(Follow._literal_in_primary_expression_start996);
				literal108=literal();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, literal108.Tree, literal108, "literal108", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("primary_expression_start", 20);
			LeaveRule("primary_expression_start", 20);
			LeaveRule_primary_expression_start();
			if (state.backtracking > 0) { Memoize(input, 20, primary_expression_start_StartIndex); }

		}
		DebugLocation(131, 1);
		} finally { DebugExitRule(GrammarFileName, "primary_expression_start"); }
		return retval;

	}
	// $ANTLR end "primary_expression_start"

	partial void EnterRule_primary_expression_part();
	partial void LeaveRule_primary_expression_part();
	// $ANTLR start "primary_expression_part"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:133:1: primary_expression_part : ( access_identifier | brackets_or_arguments );
	[GrammarRule("primary_expression_part")]
	private Antlr3AstNode primary_expression_part()
	{
		EnterRule_primary_expression_part();
		EnterRule("primary_expression_part", 21);
		var retval = new Antlr3AstNode("primary_expression_part");
		
		retval.Start = (IToken)input.LT(1);
		int primary_expression_part_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode access_identifier109 = default(Antlr3AstNode);
		Antlr3AstNode brackets_or_arguments110 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "primary_expression_part");
		DebugLocation(133, 25);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 21)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:133:24: ( access_identifier | brackets_or_arguments )
			int alt30=2;
			try { DebugEnterDecision(30, false);
			int LA30_1 = input.LA(1);

			if ((LA30_1==DOT||LA30_1==PTR))
			{
				alt30 = 1;
			}
			else if ((LA30_1==68||LA30_1==91))
			{
				alt30 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 30, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(30); }
			switch (alt30)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:134:3: access_identifier
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(134, 3);
				PushFollow(Follow._access_identifier_in_primary_expression_part1007);
				access_identifier109=access_identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, access_identifier109.Tree, access_identifier109, "access_identifier109", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:135:4: brackets_or_arguments
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(135, 4);
				PushFollow(Follow._brackets_or_arguments_in_primary_expression_part1012);
				brackets_or_arguments110=brackets_or_arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, brackets_or_arguments110.Tree, brackets_or_arguments110, "brackets_or_arguments110", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("primary_expression_part", 21);
			LeaveRule("primary_expression_part", 21);
			LeaveRule_primary_expression_part();
			if (state.backtracking > 0) { Memoize(input, 21, primary_expression_part_StartIndex); }

		}
		DebugLocation(135, 25);
		} finally { DebugExitRule(GrammarFileName, "primary_expression_part"); }
		return retval;

	}
	// $ANTLR end "primary_expression_part"

	partial void EnterRule_access_identifier();
	partial void LeaveRule_access_identifier();
	// $ANTLR start "access_identifier"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:136:1: access_identifier : access_operator type_or_generic ;
	[GrammarRule("access_identifier")]
	private Antlr3AstNode access_identifier()
	{
		EnterRule_access_identifier();
		EnterRule("access_identifier", 22);
		var retval = new Antlr3AstNode("access_identifier");
		
		retval.Start = (IToken)input.LT(1);
		int access_identifier_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode access_operator111 = default(Antlr3AstNode);
		Antlr3AstNode type_or_generic112 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "access_identifier");
		DebugLocation(136, 35);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 22)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:136:18: ( access_operator type_or_generic )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:137:2: access_operator type_or_generic
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(137, 2);
			PushFollow(Follow._access_operator_in_access_identifier1020);
			access_operator111=access_operator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, access_operator111.Tree, access_operator111, "access_operator111", retval);
			DebugLocation(137, 20);
			PushFollow(Follow._type_or_generic_in_access_identifier1024);
			type_or_generic112=type_or_generic();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_or_generic112.Tree, type_or_generic112, "type_or_generic112", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("access_identifier", 22);
			LeaveRule("access_identifier", 22);
			LeaveRule_access_identifier();
			if (state.backtracking > 0) { Memoize(input, 22, access_identifier_StartIndex); }

		}
		DebugLocation(137, 35);
		} finally { DebugExitRule(GrammarFileName, "access_identifier"); }
		return retval;

	}
	// $ANTLR end "access_identifier"

	partial void EnterRule_access_operator();
	partial void LeaveRule_access_operator();
	// $ANTLR start "access_operator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:138:1: access_operator : ( '.' | '->' );
	[GrammarRule("access_operator")]
	private Antlr3AstNode access_operator()
	{
		EnterRule_access_operator();
		EnterRule("access_operator", 23);
		var retval = new Antlr3AstNode("access_operator");
		
		retval.Start = (IToken)input.LT(1);
		int access_operator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set113 = default(IToken);

		object set113_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "access_operator");
		DebugLocation(138, 14);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 23)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:138:16: ( '.' | '->' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(138, 16);

			set113=(IToken)input.LT(1);
			if (input.LA(1)==DOT||input.LA(1)==PTR)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set113, "set113", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("access_operator", 23);
			LeaveRule("access_operator", 23);
			LeaveRule_access_operator();
			if (state.backtracking > 0) { Memoize(input, 23, access_operator_StartIndex); }

		}
		DebugLocation(139, 14);
		} finally { DebugExitRule(GrammarFileName, "access_operator"); }
		return retval;

	}
	// $ANTLR end "access_operator"

	partial void EnterRule_brackets_or_arguments();
	partial void LeaveRule_brackets_or_arguments();
	// $ANTLR start "brackets_or_arguments"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:140:1: brackets_or_arguments : ( brackets | arguments );
	[GrammarRule("brackets_or_arguments")]
	private Antlr3AstNode brackets_or_arguments()
	{
		EnterRule_brackets_or_arguments();
		EnterRule("brackets_or_arguments", 24);
		var retval = new Antlr3AstNode("brackets_or_arguments");
		
		retval.Start = (IToken)input.LT(1);
		int brackets_or_arguments_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode brackets114 = default(Antlr3AstNode);
		Antlr3AstNode arguments115 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "brackets_or_arguments");
		DebugLocation(140, 22);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 24)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:140:22: ( brackets | arguments )
			int alt31=2;
			try { DebugEnterDecision(31, false);
			int LA31_1 = input.LA(1);

			if ((LA31_1==91))
			{
				alt31 = 1;
			}
			else if ((LA31_1==68))
			{
				alt31 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 31, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(31); }
			switch (alt31)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:141:2: brackets
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(141, 2);
				PushFollow(Follow._brackets_in_brackets_or_arguments1046);
				brackets114=brackets();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, brackets114.Tree, brackets114, "brackets114", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:141:13: arguments
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(141, 13);
				PushFollow(Follow._arguments_in_brackets_or_arguments1050);
				arguments115=arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arguments115.Tree, arguments115, "arguments115", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("brackets_or_arguments", 24);
			LeaveRule("brackets_or_arguments", 24);
			LeaveRule_brackets_or_arguments();
			if (state.backtracking > 0) { Memoize(input, 24, brackets_or_arguments_StartIndex); }

		}
		DebugLocation(141, 22);
		} finally { DebugExitRule(GrammarFileName, "brackets_or_arguments"); }
		return retval;

	}
	// $ANTLR end "brackets_or_arguments"

	partial void EnterRule_brackets();
	partial void LeaveRule_brackets();
	// $ANTLR start "brackets"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:142:1: brackets : '[' ( expression_list )? ']' ;
	[GrammarRule("brackets")]
	private Antlr3AstNode brackets()
	{
		EnterRule_brackets();
		EnterRule("brackets", 25);
		var retval = new Antlr3AstNode("brackets");
		
		retval.Start = (IToken)input.LT(1);
		int brackets_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal116 = default(IToken);
		IToken char_literal118 = default(IToken);
		Antlr3AstNode expression_list117 = default(Antlr3AstNode);

		object char_literal116_tree = default(object);
		object char_literal118_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "brackets");
		DebugLocation(142, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 25)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:142:9: ( '[' ( expression_list )? ']' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:143:2: '[' ( expression_list )? ']'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(143, 2);
			char_literal116=(IToken)Match(input,91,Follow._91_in_brackets1058); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal116_tree = (object)adaptor.Create(char_literal116, "char_literal116", retval);
			adaptor.AddChild(root_0, char_literal116_tree);
			}
			DebugLocation(143, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:143:8: ( expression_list )?
			int alt32=2;
			try { DebugEnterSubRule(32);
			try { DebugEnterDecision(32, false);
			int LA32_1 = input.LA(1);

			if ((LA32_1==Character_literal||LA32_1==FALSE||(LA32_1>=Hex_number && LA32_1<=IDENTIFIER)||(LA32_1>=MINUS && LA32_1<=NUMBER)||LA32_1==Real_literal||LA32_1==STRINGLITERAL||LA32_1==TRUE||LA32_1==Verbatim_string_literal||LA32_1==61||LA32_1==66||(LA32_1>=68 && LA32_1<=69)||(LA32_1>=71 && LA32_1<=72)||LA32_1==75||LA32_1==95||(LA32_1>=97 && LA32_1<=98)||(LA32_1>=100 && LA32_1<=105)||(LA32_1>=107 && LA32_1<=108)||(LA32_1>=111 && LA32_1<=112)||(LA32_1>=116 && LA32_1<=119)||(LA32_1>=121 && LA32_1<=122)||LA32_1==124||LA32_1==128||LA32_1==131||LA32_1==134||LA32_1==137||LA32_1==140||LA32_1==143||(LA32_1>=145 && LA32_1<=146)||(LA32_1>=148 && LA32_1<=150)||(LA32_1>=152 && LA32_1<=154)||LA32_1==156||LA32_1==159||LA32_1==162||LA32_1==164||LA32_1==169||LA32_1==171||(LA32_1>=173 && LA32_1<=176)||LA32_1==179||LA32_1==182||(LA32_1>=185 && LA32_1<=189)||(LA32_1>=191 && LA32_1<=192)||LA32_1==196||LA32_1==198||LA32_1==204))
			{
				alt32 = 1;
			}
			} finally { DebugExitDecision(32); }
			switch (alt32)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:143:8: expression_list
				{
				DebugLocation(143, 8);
				PushFollow(Follow._expression_list_in_brackets1062);
				expression_list117=expression_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression_list117.Tree, expression_list117, "expression_list117", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(32); }

			DebugLocation(143, 27);
			char_literal118=(IToken)Match(input,92,Follow._92_in_brackets1067); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal118_tree = (object)adaptor.Create(char_literal118, "char_literal118", retval);
			adaptor.AddChild(root_0, char_literal118_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("brackets", 25);
			LeaveRule("brackets", 25);
			LeaveRule_brackets();
			if (state.backtracking > 0) { Memoize(input, 25, brackets_StartIndex); }

		}
		DebugLocation(143, 30);
		} finally { DebugExitRule(GrammarFileName, "brackets"); }
		return retval;

	}
	// $ANTLR end "brackets"

	partial void EnterRule_paren_expression();
	partial void LeaveRule_paren_expression();
	// $ANTLR start "paren_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:144:1: paren_expression : '(' expression ')' ;
	[GrammarRule("paren_expression")]
	private Antlr3AstNode paren_expression()
	{
		EnterRule_paren_expression();
		EnterRule("paren_expression", 26);
		var retval = new Antlr3AstNode("paren_expression");
		
		retval.Start = (IToken)input.LT(1);
		int paren_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal119 = default(IToken);
		IToken char_literal121 = default(IToken);
		Antlr3AstNode expression120 = default(Antlr3AstNode);

		object char_literal119_tree = default(object);
		object char_literal121_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "paren_expression");
		DebugLocation(144, 24);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 26)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:144:17: ( '(' expression ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:145:2: '(' expression ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(145, 2);
			char_literal119=(IToken)Match(input,68,Follow._68_in_paren_expression1077); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal119_tree = (object)adaptor.Create(char_literal119, "char_literal119", retval);
			adaptor.AddChild(root_0, char_literal119_tree);
			}
			DebugLocation(145, 8);
			PushFollow(Follow._expression_in_paren_expression1081);
			expression120=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression120.Tree, expression120, "expression120", retval);
			DebugLocation(145, 21);
			char_literal121=(IToken)Match(input,RPAREN,Follow._RPAREN_in_paren_expression1085); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal121_tree = (object)adaptor.Create(char_literal121, "char_literal121", retval);
			adaptor.AddChild(root_0, char_literal121_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("paren_expression", 26);
			LeaveRule("paren_expression", 26);
			LeaveRule_paren_expression();
			if (state.backtracking > 0) { Memoize(input, 26, paren_expression_StartIndex); }

		}
		DebugLocation(145, 24);
		} finally { DebugExitRule(GrammarFileName, "paren_expression"); }
		return retval;

	}
	// $ANTLR end "paren_expression"

	partial void EnterRule_arguments();
	partial void LeaveRule_arguments();
	// $ANTLR start "arguments"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:146:1: arguments : '(' ( argument_list )? ')' ;
	[GrammarRule("arguments")]
	private Antlr3AstNode arguments()
	{
		EnterRule_arguments();
		EnterRule("arguments", 27);
		var retval = new Antlr3AstNode("arguments");
		
		retval.Start = (IToken)input.LT(1);
		int arguments_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal122 = default(IToken);
		IToken char_literal124 = default(IToken);
		Antlr3AstNode argument_list123 = default(Antlr3AstNode);

		object char_literal122_tree = default(object);
		object char_literal124_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "arguments");
		DebugLocation(146, 28);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 27)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:146:10: ( '(' ( argument_list )? ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:147:2: '(' ( argument_list )? ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(147, 2);
			char_literal122=(IToken)Match(input,68,Follow._68_in_arguments1094); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal122_tree = (object)adaptor.Create(char_literal122, "char_literal122", retval);
			adaptor.AddChild(root_0, char_literal122_tree);
			}
			DebugLocation(147, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:147:8: ( argument_list )?
			int alt33=2;
			try { DebugEnterSubRule(33);
			try { DebugEnterDecision(33, false);
			int LA33_1 = input.LA(1);

			if ((LA33_1==Character_literal||LA33_1==FALSE||(LA33_1>=Hex_number && LA33_1<=IDENTIFIER)||(LA33_1>=MINUS && LA33_1<=NUMBER)||LA33_1==Real_literal||LA33_1==STRINGLITERAL||LA33_1==TRUE||LA33_1==Verbatim_string_literal||LA33_1==61||LA33_1==66||(LA33_1>=68 && LA33_1<=69)||(LA33_1>=71 && LA33_1<=72)||LA33_1==75||LA33_1==95||(LA33_1>=97 && LA33_1<=98)||(LA33_1>=100 && LA33_1<=105)||(LA33_1>=107 && LA33_1<=108)||(LA33_1>=111 && LA33_1<=112)||(LA33_1>=116 && LA33_1<=119)||(LA33_1>=121 && LA33_1<=122)||LA33_1==124||LA33_1==128||LA33_1==131||LA33_1==134||LA33_1==137||LA33_1==140||LA33_1==143||(LA33_1>=145 && LA33_1<=146)||(LA33_1>=148 && LA33_1<=150)||(LA33_1>=152 && LA33_1<=154)||(LA33_1>=156 && LA33_1<=157)||LA33_1==159||LA33_1==162||LA33_1==164||(LA33_1>=168 && LA33_1<=169)||LA33_1==171||(LA33_1>=173 && LA33_1<=176)||LA33_1==179||LA33_1==182||(LA33_1>=185 && LA33_1<=189)||(LA33_1>=191 && LA33_1<=192)||LA33_1==196||LA33_1==198||LA33_1==204))
			{
				alt33 = 1;
			}
			} finally { DebugExitDecision(33); }
			switch (alt33)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:147:8: argument_list
				{
				DebugLocation(147, 8);
				PushFollow(Follow._argument_list_in_arguments1098);
				argument_list123=argument_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, argument_list123.Tree, argument_list123, "argument_list123", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(33); }

			DebugLocation(147, 25);
			char_literal124=(IToken)Match(input,RPAREN,Follow._RPAREN_in_arguments1103); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal124_tree = (object)adaptor.Create(char_literal124, "char_literal124", retval);
			adaptor.AddChild(root_0, char_literal124_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("arguments", 27);
			LeaveRule("arguments", 27);
			LeaveRule_arguments();
			if (state.backtracking > 0) { Memoize(input, 27, arguments_StartIndex); }

		}
		DebugLocation(147, 28);
		} finally { DebugExitRule(GrammarFileName, "arguments"); }
		return retval;

	}
	// $ANTLR end "arguments"

	partial void EnterRule_argument_list();
	partial void LeaveRule_argument_list();
	// $ANTLR start "argument_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:148:1: argument_list : argument ( ',' argument )* ;
	[GrammarRule("argument_list")]
	private Antlr3AstNode argument_list()
	{
		EnterRule_argument_list();
		EnterRule("argument_list", 28);
		var retval = new Antlr3AstNode("argument_list");
		
		retval.Start = (IToken)input.LT(1);
		int argument_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal126 = default(IToken);
		Antlr3AstNode argument125 = default(Antlr3AstNode);
		Antlr3AstNode argument127 = default(Antlr3AstNode);

		object char_literal126_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "argument_list");
		DebugLocation(148, 25);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 28)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:148:14: ( argument ( ',' argument )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:149:2: argument ( ',' argument )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(149, 2);
			PushFollow(Follow._argument_in_argument_list1112);
			argument125=argument();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, argument125.Tree, argument125, "argument125", retval);
			DebugLocation(149, 11);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:149:11: ( ',' argument )*
			try { DebugEnterSubRule(34);
			while (true)
			{
				int alt34=2;
				try { DebugEnterDecision(34, false);
				int LA34_1 = input.LA(1);

				if ((LA34_1==74))
				{
					alt34 = 1;
				}


				} finally { DebugExitDecision(34); }
				switch ( alt34 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:149:12: ',' argument
					{
					DebugLocation(149, 12);
					char_literal126=(IToken)Match(input,74,Follow._74_in_argument_list1115); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal126_tree = (object)adaptor.Create(char_literal126, "char_literal126", retval);
					adaptor.AddChild(root_0, char_literal126_tree);
					}
					DebugLocation(149, 16);
					PushFollow(Follow._argument_in_argument_list1117);
					argument127=argument();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, argument127.Tree, argument127, "argument127", retval);

					}
					break;

				default:
					goto loop34;
				}
			}

			loop34:
				;

			} finally { DebugExitSubRule(34); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("argument_list", 28);
			LeaveRule("argument_list", 28);
			LeaveRule_argument_list();
			if (state.backtracking > 0) { Memoize(input, 28, argument_list_StartIndex); }

		}
		DebugLocation(149, 25);
		} finally { DebugExitRule(GrammarFileName, "argument_list"); }
		return retval;

	}
	// $ANTLR end "argument_list"

	partial void EnterRule_argument();
	partial void LeaveRule_argument();
	// $ANTLR start "argument"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:151:1: argument : ( argument_name argument_value | argument_value );
	[GrammarRule("argument")]
	private Antlr3AstNode argument()
	{
		EnterRule_argument();
		EnterRule("argument", 29);
		var retval = new Antlr3AstNode("argument");
		
		retval.Start = (IToken)input.LT(1);
		int argument_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode argument_name128 = default(Antlr3AstNode);
		Antlr3AstNode argument_value129 = default(Antlr3AstNode);
		Antlr3AstNode argument_value130 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "argument");
		DebugLocation(151, 17);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 29)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:151:9: ( argument_name argument_value | argument_value )
			int alt35=2;
			try { DebugEnterDecision(35, false);
			switch (input.LA(1))
			{
			case 134:
				{
				int LA35_2 = input.LA(2);

				if ((LA35_2==79))
				{
					alt35 = 1;
				}
				else if ((LA35_2==DOT||LA35_2==GT||LA35_2==IDENTIFIER||LA35_2==MINUS||(LA35_2>=PTR && LA35_2<=RPAREN)||(LA35_2>=62 && LA35_2<=78)||(LA35_2>=80 && LA35_2<=91)||(LA35_2>=93 && LA35_2<=95)||(LA35_2>=97 && LA35_2<=101)||LA35_2==105||(LA35_2>=107 && LA35_2<=108)||LA35_2==111||LA35_2==116||LA35_2==119||(LA35_2>=121 && LA35_2<=122)||LA35_2==124||LA35_2==128||LA35_2==131||LA35_2==134||LA35_2==137||LA35_2==140||(LA35_2>=143 && LA35_2<=146)||(LA35_2>=148 && LA35_2<=150)||(LA35_2>=153 && LA35_2<=154)||LA35_2==156||LA35_2==159||LA35_2==162||LA35_2==164||LA35_2==169||LA35_2==171||(LA35_2>=173 && LA35_2<=175)||LA35_2==179||LA35_2==185||(LA35_2>=187 && LA35_2<=188)||(LA35_2>=191 && LA35_2<=192)||LA35_2==194||LA35_2==196||LA35_2==198||(LA35_2>=200 && LA35_2<=202)))
				{
					alt35 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 35, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case MINUS:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 61:
			case 66:
			case 68:
			case 69:
			case 71:
			case 72:
			case 75:
			case 102:
			case 103:
			case 104:
			case 105:
			case 108:
			case 111:
			case 112:
			case 116:
			case 117:
			case 118:
			case 121:
			case 131:
			case 140:
			case 148:
			case 152:
			case 153:
			case 157:
			case 168:
			case 171:
			case 175:
			case 176:
			case 179:
			case 182:
			case 186:
			case 187:
			case 188:
			case 189:
			case 191:
			case 204:
				{
				alt35 = 2;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 107:
			case 119:
			case 122:
			case 124:
			case 128:
			case 137:
			case 143:
			case 145:
			case 146:
			case 149:
			case 150:
			case 154:
			case 156:
			case 159:
			case 162:
			case 164:
			case 169:
			case 173:
			case 174:
			case 185:
			case 192:
			case 196:
			case 198:
				{
				int LA35_2 = input.LA(2);

				if ((LA35_2==79))
				{
					alt35 = 1;
				}
				else if ((LA35_2==DOT||LA35_2==GT||LA35_2==MINUS||(LA35_2>=PTR && LA35_2<=RPAREN)||(LA35_2>=62 && LA35_2<=78)||(LA35_2>=80 && LA35_2<=91)||(LA35_2>=93 && LA35_2<=94)||LA35_2==99||LA35_2==144||(LA35_2>=200 && LA35_2<=202)))
				{
					alt35 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 35, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 35, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(35); }
			switch (alt35)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:152:2: argument_name argument_value
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(152, 2);
				PushFollow(Follow._argument_name_in_argument1127);
				argument_name128=argument_name();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, argument_name128.Tree, argument_name128, "argument_name128", retval);
				DebugLocation(152, 18);
				PushFollow(Follow._argument_value_in_argument1131);
				argument_value129=argument_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, argument_value129.Tree, argument_value129, "argument_value129", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:153:4: argument_value
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(153, 4);
				PushFollow(Follow._argument_value_in_argument1136);
				argument_value130=argument_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, argument_value130.Tree, argument_value130, "argument_value130", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("argument", 29);
			LeaveRule("argument", 29);
			LeaveRule_argument();
			if (state.backtracking > 0) { Memoize(input, 29, argument_StartIndex); }

		}
		DebugLocation(153, 17);
		} finally { DebugExitRule(GrammarFileName, "argument"); }
		return retval;

	}
	// $ANTLR end "argument"

	partial void EnterRule_argument_name();
	partial void LeaveRule_argument_name();
	// $ANTLR start "argument_name"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:154:1: argument_name : identifier ':' ;
	[GrammarRule("argument_name")]
	private Antlr3AstNode argument_name()
	{
		EnterRule_argument_name();
		EnterRule("argument_name", 30);
		var retval = new Antlr3AstNode("argument_name");
		
		retval.Start = (IToken)input.LT(1);
		int argument_name_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal132 = default(IToken);
		Antlr3AstNode identifier131 = default(Antlr3AstNode);

		object char_literal132_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "argument_name");
		DebugLocation(154, 17);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 30)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:154:14: ( identifier ':' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:155:2: identifier ':'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(155, 2);
			PushFollow(Follow._identifier_in_argument_name1143);
			identifier131=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier131.Tree, identifier131, "identifier131", retval);
			DebugLocation(155, 15);
			char_literal132=(IToken)Match(input,79,Follow._79_in_argument_name1147); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal132_tree = (object)adaptor.Create(char_literal132, "char_literal132", retval);
			adaptor.AddChild(root_0, char_literal132_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("argument_name", 30);
			LeaveRule("argument_name", 30);
			LeaveRule_argument_name();
			if (state.backtracking > 0) { Memoize(input, 30, argument_name_StartIndex); }

		}
		DebugLocation(155, 17);
		} finally { DebugExitRule(GrammarFileName, "argument_name"); }
		return retval;

	}
	// $ANTLR end "argument_name"

	partial void EnterRule_argument_value();
	partial void LeaveRule_argument_value();
	// $ANTLR start "argument_value"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:156:1: argument_value : ( expression | ref_variable_reference | 'out' variable_reference );
	[GrammarRule("argument_value")]
	private Antlr3AstNode argument_value()
	{
		EnterRule_argument_value();
		EnterRule("argument_value", 31);
		var retval = new Antlr3AstNode("argument_value");
		
		retval.Start = (IToken)input.LT(1);
		int argument_value_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal135 = default(IToken);
		Antlr3AstNode expression133 = default(Antlr3AstNode);
		Antlr3AstNode ref_variable_reference134 = default(Antlr3AstNode);
		Antlr3AstNode variable_reference136 = default(Antlr3AstNode);

		object string_literal135_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "argument_value");
		DebugLocation(156, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 31)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:156:15: ( expression | ref_variable_reference | 'out' variable_reference )
			int alt36=3;
			try { DebugEnterDecision(36, false);
			switch (input.LA(1))
			{
			case Character_literal:
			case FALSE:
			case Hex_number:
			case IDENTIFIER:
			case MINUS:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 61:
			case 66:
			case 68:
			case 69:
			case 71:
			case 72:
			case 75:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 102:
			case 103:
			case 104:
			case 105:
			case 107:
			case 108:
			case 111:
			case 112:
			case 116:
			case 117:
			case 118:
			case 119:
			case 121:
			case 122:
			case 124:
			case 128:
			case 131:
			case 134:
			case 137:
			case 140:
			case 143:
			case 145:
			case 146:
			case 148:
			case 149:
			case 150:
			case 152:
			case 153:
			case 154:
			case 156:
			case 159:
			case 162:
			case 164:
			case 169:
			case 171:
			case 173:
			case 174:
			case 175:
			case 176:
			case 179:
			case 182:
			case 185:
			case 186:
			case 187:
			case 188:
			case 189:
			case 191:
			case 192:
			case 196:
			case 198:
			case 204:
				{
				alt36 = 1;
				}
				break;
			case 168:
				{
				alt36 = 2;
				}
				break;
			case 157:
				{
				alt36 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 36, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(36); }
			switch (alt36)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:157:2: expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(157, 2);
				PushFollow(Follow._expression_in_argument_value1155);
				expression133=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression133.Tree, expression133, "expression133", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:158:4: ref_variable_reference
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(158, 4);
				PushFollow(Follow._ref_variable_reference_in_argument_value1161);
				ref_variable_reference134=ref_variable_reference();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, ref_variable_reference134.Tree, ref_variable_reference134, "ref_variable_reference134", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:159:4: 'out' variable_reference
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(159, 4);
				string_literal135=(IToken)Match(input,157,Follow._157_in_argument_value1167); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal135_tree = (object)adaptor.Create(string_literal135, "string_literal135", retval);
				adaptor.AddChild(root_0, string_literal135_tree);
				}
				DebugLocation(159, 12);
				PushFollow(Follow._variable_reference_in_argument_value1171);
				variable_reference136=variable_reference();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variable_reference136.Tree, variable_reference136, "variable_reference136", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("argument_value", 31);
			LeaveRule("argument_value", 31);
			LeaveRule_argument_value();
			if (state.backtracking > 0) { Memoize(input, 31, argument_value_StartIndex); }

		}
		DebugLocation(159, 30);
		} finally { DebugExitRule(GrammarFileName, "argument_value"); }
		return retval;

	}
	// $ANTLR end "argument_value"

	partial void EnterRule_ref_variable_reference();
	partial void LeaveRule_ref_variable_reference();
	// $ANTLR start "ref_variable_reference"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:160:1: ref_variable_reference : 'ref' ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference ) ;
	[GrammarRule("ref_variable_reference")]
	private Antlr3AstNode ref_variable_reference()
	{
		EnterRule_ref_variable_reference();
		EnterRule("ref_variable_reference", 32);
		var retval = new Antlr3AstNode("ref_variable_reference");
		
		retval.Start = (IToken)input.LT(1);
		int ref_variable_reference_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal137 = default(IToken);
		IToken char_literal138 = default(IToken);
		IToken char_literal140 = default(IToken);
		Antlr3AstNode type139 = default(Antlr3AstNode);
		Antlr3AstNode ref_variable_reference141 = default(Antlr3AstNode);
		Antlr3AstNode variable_reference142 = default(Antlr3AstNode);
		Antlr3AstNode variable_reference143 = default(Antlr3AstNode);

		object string_literal137_tree = default(object);
		object char_literal138_tree = default(object);
		object char_literal140_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "ref_variable_reference");
		DebugLocation(160, 23);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 32)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:160:23: ( 'ref' ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:161:2: 'ref' ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(161, 2);
			string_literal137=(IToken)Match(input,168,Follow._168_in_ref_variable_reference1179); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal137_tree = (object)adaptor.Create(string_literal137, "string_literal137", retval);
			adaptor.AddChild(root_0, string_literal137_tree);
			}
			DebugLocation(162, 3);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:162:3: ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference )
			int alt38=2;
			try { DebugEnterSubRule(38);
			try { DebugEnterDecision(38, false);
			int LA38_1 = input.LA(1);

			if ((LA38_1==68))
			{
				int LA38_2 = input.LA(2);

				if ((EvaluatePredicate(synpred9_cs_fragment)))
				{
					alt38 = 1;
				}
				else if ((true))
				{
					alt38 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 38, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA38_1==Character_literal||LA38_1==FALSE||(LA38_1>=Hex_number && LA38_1<=IDENTIFIER)||(LA38_1>=MINUS && LA38_1<=NUMBER)||LA38_1==Real_literal||LA38_1==STRINGLITERAL||LA38_1==TRUE||LA38_1==Verbatim_string_literal||LA38_1==61||LA38_1==66||LA38_1==69||(LA38_1>=71 && LA38_1<=72)||LA38_1==75||LA38_1==95||(LA38_1>=97 && LA38_1<=98)||(LA38_1>=100 && LA38_1<=105)||(LA38_1>=107 && LA38_1<=108)||(LA38_1>=111 && LA38_1<=112)||(LA38_1>=116 && LA38_1<=119)||(LA38_1>=121 && LA38_1<=122)||LA38_1==124||LA38_1==128||LA38_1==131||LA38_1==134||LA38_1==137||LA38_1==140||LA38_1==143||(LA38_1>=145 && LA38_1<=146)||(LA38_1>=148 && LA38_1<=150)||(LA38_1>=152 && LA38_1<=154)||LA38_1==156||LA38_1==159||LA38_1==162||LA38_1==164||LA38_1==169||LA38_1==171||(LA38_1>=173 && LA38_1<=176)||LA38_1==179||LA38_1==182||(LA38_1>=185 && LA38_1<=189)||(LA38_1>=191 && LA38_1<=192)||LA38_1==196||LA38_1==198||LA38_1==204))
			{
				alt38 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 38, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(38); }
			switch (alt38)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:162:4: ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference )
				{
				DebugLocation(162, 28);
				char_literal138=(IToken)Match(input,68,Follow._68_in_ref_variable_reference1201); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal138_tree = (object)adaptor.Create(char_literal138, "char_literal138", retval);
				adaptor.AddChild(root_0, char_literal138_tree);
				}
				DebugLocation(162, 34);
				PushFollow(Follow._type_in_ref_variable_reference1205);
				type139=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type139.Tree, type139, "type139", retval);
				DebugLocation(162, 41);
				char_literal140=(IToken)Match(input,RPAREN,Follow._RPAREN_in_ref_variable_reference1209); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal140_tree = (object)adaptor.Create(char_literal140, "char_literal140", retval);
				adaptor.AddChild(root_0, char_literal140_tree);
				}
				DebugLocation(162, 47);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:162:47: ( ref_variable_reference | variable_reference )
				int alt37=2;
				try { DebugEnterSubRule(37);
				try { DebugEnterDecision(37, false);
				int LA37_1 = input.LA(1);

				if ((LA37_1==168))
				{
					alt37 = 1;
				}
				else if ((LA37_1==Character_literal||LA37_1==FALSE||(LA37_1>=Hex_number && LA37_1<=IDENTIFIER)||(LA37_1>=MINUS && LA37_1<=NUMBER)||LA37_1==Real_literal||LA37_1==STRINGLITERAL||LA37_1==TRUE||LA37_1==Verbatim_string_literal||LA37_1==61||LA37_1==66||(LA37_1>=68 && LA37_1<=69)||(LA37_1>=71 && LA37_1<=72)||LA37_1==75||LA37_1==95||(LA37_1>=97 && LA37_1<=98)||(LA37_1>=100 && LA37_1<=105)||(LA37_1>=107 && LA37_1<=108)||(LA37_1>=111 && LA37_1<=112)||(LA37_1>=116 && LA37_1<=119)||(LA37_1>=121 && LA37_1<=122)||LA37_1==124||LA37_1==128||LA37_1==131||LA37_1==134||LA37_1==137||LA37_1==140||LA37_1==143||(LA37_1>=145 && LA37_1<=146)||(LA37_1>=148 && LA37_1<=150)||(LA37_1>=152 && LA37_1<=154)||LA37_1==156||LA37_1==159||LA37_1==162||LA37_1==164||LA37_1==169||LA37_1==171||(LA37_1>=173 && LA37_1<=176)||LA37_1==179||LA37_1==182||(LA37_1>=185 && LA37_1<=189)||(LA37_1>=191 && LA37_1<=192)||LA37_1==196||LA37_1==198||LA37_1==204))
				{
					alt37 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 37, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(37); }
				switch (alt37)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:162:48: ref_variable_reference
					{
					DebugLocation(162, 48);
					PushFollow(Follow._ref_variable_reference_in_ref_variable_reference1214);
					ref_variable_reference141=ref_variable_reference();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, ref_variable_reference141.Tree, ref_variable_reference141, "ref_variable_reference141", retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:162:73: variable_reference
					{
					DebugLocation(162, 73);
					PushFollow(Follow._variable_reference_in_ref_variable_reference1218);
					variable_reference142=variable_reference();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, variable_reference142.Tree, variable_reference142, "variable_reference142", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(37); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:164:5: variable_reference
				{
				DebugLocation(164, 5);
				PushFollow(Follow._variable_reference_in_ref_variable_reference1254);
				variable_reference143=variable_reference();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variable_reference143.Tree, variable_reference143, "variable_reference143", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(38); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("ref_variable_reference", 32);
			LeaveRule("ref_variable_reference", 32);
			LeaveRule_ref_variable_reference();
			if (state.backtracking > 0) { Memoize(input, 32, ref_variable_reference_StartIndex); }

		}
		DebugLocation(164, 23);
		} finally { DebugExitRule(GrammarFileName, "ref_variable_reference"); }
		return retval;

	}
	// $ANTLR end "ref_variable_reference"

	partial void EnterRule_variable_reference();
	partial void LeaveRule_variable_reference();
	// $ANTLR start "variable_reference"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:166:1: variable_reference : expression ;
	[GrammarRule("variable_reference")]
	private Antlr3AstNode variable_reference()
	{
		EnterRule_variable_reference();
		EnterRule("variable_reference", 33);
		var retval = new Antlr3AstNode("variable_reference");
		
		retval.Start = (IToken)input.LT(1);
		int variable_reference_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode expression144 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "variable_reference");
		DebugLocation(166, 11);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 33)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:166:19: ( expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:167:2: expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(167, 2);
			PushFollow(Follow._expression_in_variable_reference1264);
			expression144=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression144.Tree, expression144, "expression144", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variable_reference", 33);
			LeaveRule("variable_reference", 33);
			LeaveRule_variable_reference();
			if (state.backtracking > 0) { Memoize(input, 33, variable_reference_StartIndex); }

		}
		DebugLocation(167, 11);
		} finally { DebugExitRule(GrammarFileName, "variable_reference"); }
		return retval;

	}
	// $ANTLR end "variable_reference"

	partial void EnterRule_rank_specifiers();
	partial void LeaveRule_rank_specifiers();
	// $ANTLR start "rank_specifiers"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:168:1: rank_specifiers : ( rank_specifier )+ ;
	[GrammarRule("rank_specifiers")]
	private Antlr3AstNode rank_specifiers()
	{
		EnterRule_rank_specifiers();
		EnterRule("rank_specifiers", 34);
		var retval = new Antlr3AstNode("rank_specifiers");
		
		retval.Start = (IToken)input.LT(1);
		int rank_specifiers_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode rank_specifier145 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "rank_specifiers");
		DebugLocation(168, 17);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 34)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:168:16: ( ( rank_specifier )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:169:2: ( rank_specifier )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(169, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:169:2: ( rank_specifier )+
			int cnt39=0;
			try { DebugEnterSubRule(39);
			while (true)
			{
				int alt39=2;
				try { DebugEnterDecision(39, false);
				int LA39_1 = input.LA(1);

				if ((LA39_1==91))
				{
					int LA39_2 = input.LA(2);

					if ((LA39_2==74||LA39_2==92))
					{
						alt39 = 1;
					}


				}


				} finally { DebugExitDecision(39); }
				switch (alt39)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:169:2: rank_specifier
					{
					DebugLocation(169, 2);
					PushFollow(Follow._rank_specifier_in_rank_specifiers1272);
					rank_specifier145=rank_specifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, rank_specifier145.Tree, rank_specifier145, "rank_specifier145", retval);

					}
					break;

				default:
					if (cnt39 >= 1)
						goto loop39;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee39 = new EarlyExitException( 39, input );
					DebugRecognitionException(eee39);
					throw eee39;
				}
				cnt39++;
			}
			loop39:
				;

			} finally { DebugExitSubRule(39); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("rank_specifiers", 34);
			LeaveRule("rank_specifiers", 34);
			LeaveRule_rank_specifiers();
			if (state.backtracking > 0) { Memoize(input, 34, rank_specifiers_StartIndex); }

		}
		DebugLocation(169, 17);
		} finally { DebugExitRule(GrammarFileName, "rank_specifiers"); }
		return retval;

	}
	// $ANTLR end "rank_specifiers"

	partial void EnterRule_rank_specifier();
	partial void LeaveRule_rank_specifier();
	// $ANTLR start "rank_specifier"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:170:1: rank_specifier : '[' ( dim_separators )? ']' ;
	[GrammarRule("rank_specifier")]
	private Antlr3AstNode rank_specifier()
	{
		EnterRule_rank_specifier();
		EnterRule("rank_specifier", 35);
		var retval = new Antlr3AstNode("rank_specifier");
		
		retval.Start = (IToken)input.LT(1);
		int rank_specifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal146 = default(IToken);
		IToken char_literal148 = default(IToken);
		Antlr3AstNode dim_separators147 = default(Antlr3AstNode);

		object char_literal146_tree = default(object);
		object char_literal148_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "rank_specifier");
		DebugLocation(170, 29);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 35)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:170:15: ( '[' ( dim_separators )? ']' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:171:2: '[' ( dim_separators )? ']'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(171, 2);
			char_literal146=(IToken)Match(input,91,Follow._91_in_rank_specifier1290); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal146_tree = (object)adaptor.Create(char_literal146, "char_literal146", retval);
			adaptor.AddChild(root_0, char_literal146_tree);
			}
			DebugLocation(171, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:171:8: ( dim_separators )?
			int alt40=2;
			try { DebugEnterSubRule(40);
			try { DebugEnterDecision(40, false);
			int LA40_1 = input.LA(1);

			if ((LA40_1==74))
			{
				alt40 = 1;
			}
			} finally { DebugExitDecision(40); }
			switch (alt40)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:171:8: dim_separators
				{
				DebugLocation(171, 8);
				PushFollow(Follow._dim_separators_in_rank_specifier1294);
				dim_separators147=dim_separators();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, dim_separators147.Tree, dim_separators147, "dim_separators147", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(40); }

			DebugLocation(171, 26);
			char_literal148=(IToken)Match(input,92,Follow._92_in_rank_specifier1299); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal148_tree = (object)adaptor.Create(char_literal148, "char_literal148", retval);
			adaptor.AddChild(root_0, char_literal148_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("rank_specifier", 35);
			LeaveRule("rank_specifier", 35);
			LeaveRule_rank_specifier();
			if (state.backtracking > 0) { Memoize(input, 35, rank_specifier_StartIndex); }

		}
		DebugLocation(171, 29);
		} finally { DebugExitRule(GrammarFileName, "rank_specifier"); }
		return retval;

	}
	// $ANTLR end "rank_specifier"

	partial void EnterRule_dim_separators();
	partial void LeaveRule_dim_separators();
	// $ANTLR start "dim_separators"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:172:1: dim_separators : ( ',' )+ ;
	[GrammarRule("dim_separators")]
	private Antlr3AstNode dim_separators()
	{
		EnterRule_dim_separators();
		EnterRule("dim_separators", 36);
		var retval = new Antlr3AstNode("dim_separators");
		
		retval.Start = (IToken)input.LT(1);
		int dim_separators_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal149 = default(IToken);

		object char_literal149_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "dim_separators");
		DebugLocation(172, 6);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 36)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:172:15: ( ( ',' )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:173:2: ( ',' )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(173, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:173:2: ( ',' )+
			int cnt41=0;
			try { DebugEnterSubRule(41);
			while (true)
			{
				int alt41=2;
				try { DebugEnterDecision(41, false);
				int LA41_1 = input.LA(1);

				if ((LA41_1==74))
				{
					alt41 = 1;
				}


				} finally { DebugExitDecision(41); }
				switch (alt41)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:173:2: ','
					{
					DebugLocation(173, 2);
					char_literal149=(IToken)Match(input,74,Follow._74_in_dim_separators1308); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal149_tree = (object)adaptor.Create(char_literal149, "char_literal149", retval);
					adaptor.AddChild(root_0, char_literal149_tree);
					}

					}
					break;

				default:
					if (cnt41 >= 1)
						goto loop41;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee41 = new EarlyExitException( 41, input );
					DebugRecognitionException(eee41);
					throw eee41;
				}
				cnt41++;
			}
			loop41:
				;

			} finally { DebugExitSubRule(41); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("dim_separators", 36);
			LeaveRule("dim_separators", 36);
			LeaveRule_dim_separators();
			if (state.backtracking > 0) { Memoize(input, 36, dim_separators_StartIndex); }

		}
		DebugLocation(173, 6);
		} finally { DebugExitRule(GrammarFileName, "dim_separators"); }
		return retval;

	}
	// $ANTLR end "dim_separators"

	partial void EnterRule_delegate_creation_expression();
	partial void LeaveRule_delegate_creation_expression();
	// $ANTLR start "delegate_creation_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:175:1: delegate_creation_expression : type_name '(' type_name ')' ;
	[GrammarRule("delegate_creation_expression")]
	private Antlr3AstNode delegate_creation_expression()
	{
		EnterRule_delegate_creation_expression();
		EnterRule("delegate_creation_expression", 37);
		var retval = new Antlr3AstNode("delegate_creation_expression");
		
		retval.Start = (IToken)input.LT(1);
		int delegate_creation_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal151 = default(IToken);
		IToken char_literal153 = default(IToken);
		Antlr3AstNode type_name150 = default(Antlr3AstNode);
		Antlr3AstNode type_name152 = default(Antlr3AstNode);

		object char_literal151_tree = default(object);
		object char_literal153_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "delegate_creation_expression");
		DebugLocation(175, 35);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 37)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:175:29: ( type_name '(' type_name ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:177:2: type_name '(' type_name ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(177, 2);
			PushFollow(Follow._type_name_in_delegate_creation_expression1321);
			type_name150=type_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_name150.Tree, type_name150, "type_name150", retval);
			DebugLocation(177, 14);
			char_literal151=(IToken)Match(input,68,Follow._68_in_delegate_creation_expression1325); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal151_tree = (object)adaptor.Create(char_literal151, "char_literal151", retval);
			adaptor.AddChild(root_0, char_literal151_tree);
			}
			DebugLocation(177, 20);
			PushFollow(Follow._type_name_in_delegate_creation_expression1329);
			type_name152=type_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_name152.Tree, type_name152, "type_name152", retval);
			DebugLocation(177, 32);
			char_literal153=(IToken)Match(input,RPAREN,Follow._RPAREN_in_delegate_creation_expression1333); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal153_tree = (object)adaptor.Create(char_literal153, "char_literal153", retval);
			adaptor.AddChild(root_0, char_literal153_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("delegate_creation_expression", 37);
			LeaveRule("delegate_creation_expression", 37);
			LeaveRule_delegate_creation_expression();
			if (state.backtracking > 0) { Memoize(input, 37, delegate_creation_expression_StartIndex); }

		}
		DebugLocation(177, 35);
		} finally { DebugExitRule(GrammarFileName, "delegate_creation_expression"); }
		return retval;

	}
	// $ANTLR end "delegate_creation_expression"

	partial void EnterRule_anonymous_object_creation_expression();
	partial void LeaveRule_anonymous_object_creation_expression();
	// $ANTLR start "anonymous_object_creation_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:178:1: anonymous_object_creation_expression : anonymous_object_initializer ;
	[GrammarRule("anonymous_object_creation_expression")]
	private Antlr3AstNode anonymous_object_creation_expression()
	{
		EnterRule_anonymous_object_creation_expression();
		EnterRule("anonymous_object_creation_expression", 38);
		var retval = new Antlr3AstNode("anonymous_object_creation_expression");
		
		retval.Start = (IToken)input.LT(1);
		int anonymous_object_creation_expression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode anonymous_object_initializer154 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "anonymous_object_creation_expression");
		DebugLocation(178, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 38)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:178:37: ( anonymous_object_initializer )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:180:2: anonymous_object_initializer
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(180, 2);
			PushFollow(Follow._anonymous_object_initializer_in_anonymous_object_creation_expression1344);
			anonymous_object_initializer154=anonymous_object_initializer();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, anonymous_object_initializer154.Tree, anonymous_object_initializer154, "anonymous_object_initializer154", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("anonymous_object_creation_expression", 38);
			LeaveRule("anonymous_object_creation_expression", 38);
			LeaveRule_anonymous_object_creation_expression();
			if (state.backtracking > 0) { Memoize(input, 38, anonymous_object_creation_expression_StartIndex); }

		}
		DebugLocation(180, 30);
		} finally { DebugExitRule(GrammarFileName, "anonymous_object_creation_expression"); }
		return retval;

	}
	// $ANTLR end "anonymous_object_creation_expression"

	partial void EnterRule_anonymous_object_initializer();
	partial void LeaveRule_anonymous_object_initializer();
	// $ANTLR start "anonymous_object_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:181:1: anonymous_object_initializer : '{' ( member_declarator_list )? ( ',' )? '}' ;
	[GrammarRule("anonymous_object_initializer")]
	private Antlr3AstNode anonymous_object_initializer()
	{
		EnterRule_anonymous_object_initializer();
		EnterRule("anonymous_object_initializer", 39);
		var retval = new Antlr3AstNode("anonymous_object_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int anonymous_object_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal155 = default(IToken);
		IToken char_literal157 = default(IToken);
		IToken char_literal158 = default(IToken);
		Antlr3AstNode member_declarator_list156 = default(Antlr3AstNode);

		object char_literal155_tree = default(object);
		object char_literal157_tree = default(object);
		object char_literal158_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "anonymous_object_initializer");
		DebugLocation(181, 43);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 39)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:181:29: ( '{' ( member_declarator_list )? ( ',' )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:182:2: '{' ( member_declarator_list )? ( ',' )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(182, 2);
			char_literal155=(IToken)Match(input,199,Follow._199_in_anonymous_object_initializer1353); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal155_tree = (object)adaptor.Create(char_literal155, "char_literal155", retval);
			adaptor.AddChild(root_0, char_literal155_tree);
			}
			DebugLocation(182, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:182:8: ( member_declarator_list )?
			int alt42=2;
			try { DebugEnterSubRule(42);
			try { DebugEnterDecision(42, false);
			int LA42_1 = input.LA(1);

			if ((LA42_1==IDENTIFIER||LA42_1==95||(LA42_1>=97 && LA42_1<=98)||(LA42_1>=100 && LA42_1<=101)||LA42_1==107||LA42_1==119||LA42_1==122||LA42_1==124||LA42_1==128||LA42_1==134||LA42_1==137||LA42_1==143||(LA42_1>=145 && LA42_1<=146)||(LA42_1>=149 && LA42_1<=150)||LA42_1==154||LA42_1==156||LA42_1==159||LA42_1==162||LA42_1==164||LA42_1==169||(LA42_1>=173 && LA42_1<=174)||LA42_1==185||LA42_1==192||LA42_1==196||LA42_1==198))
			{
				alt42 = 1;
			}
			} finally { DebugExitDecision(42); }
			switch (alt42)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:182:8: member_declarator_list
				{
				DebugLocation(182, 8);
				PushFollow(Follow._member_declarator_list_in_anonymous_object_initializer1357);
				member_declarator_list156=member_declarator_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, member_declarator_list156.Tree, member_declarator_list156, "member_declarator_list156", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(42); }

			DebugLocation(182, 34);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:182:34: ( ',' )?
			int alt43=2;
			try { DebugEnterSubRule(43);
			try { DebugEnterDecision(43, false);
			int LA43_1 = input.LA(1);

			if ((LA43_1==74))
			{
				alt43 = 1;
			}
			} finally { DebugExitDecision(43); }
			switch (alt43)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:182:34: ','
				{
				DebugLocation(182, 34);
				char_literal157=(IToken)Match(input,74,Follow._74_in_anonymous_object_initializer1362); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal157_tree = (object)adaptor.Create(char_literal157, "char_literal157", retval);
				adaptor.AddChild(root_0, char_literal157_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(43); }

			DebugLocation(182, 41);
			char_literal158=(IToken)Match(input,203,Follow._203_in_anonymous_object_initializer1367); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal158_tree = (object)adaptor.Create(char_literal158, "char_literal158", retval);
			adaptor.AddChild(root_0, char_literal158_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("anonymous_object_initializer", 39);
			LeaveRule("anonymous_object_initializer", 39);
			LeaveRule_anonymous_object_initializer();
			if (state.backtracking > 0) { Memoize(input, 39, anonymous_object_initializer_StartIndex); }

		}
		DebugLocation(182, 43);
		} finally { DebugExitRule(GrammarFileName, "anonymous_object_initializer"); }
		return retval;

	}
	// $ANTLR end "anonymous_object_initializer"

	partial void EnterRule_member_declarator_list();
	partial void LeaveRule_member_declarator_list();
	// $ANTLR start "member_declarator_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:183:1: member_declarator_list : member_declarator ( ',' member_declarator )* ;
	[GrammarRule("member_declarator_list")]
	private Antlr3AstNode member_declarator_list()
	{
		EnterRule_member_declarator_list();
		EnterRule("member_declarator_list", 40);
		var retval = new Antlr3AstNode("member_declarator_list");
		
		retval.Start = (IToken)input.LT(1);
		int member_declarator_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal160 = default(IToken);
		Antlr3AstNode member_declarator159 = default(Antlr3AstNode);
		Antlr3AstNode member_declarator161 = default(Antlr3AstNode);

		object char_literal160_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "member_declarator_list");
		DebugLocation(183, 45);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 40)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:183:23: ( member_declarator ( ',' member_declarator )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:184:2: member_declarator ( ',' member_declarator )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(184, 2);
			PushFollow(Follow._member_declarator_in_member_declarator_list1375);
			member_declarator159=member_declarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, member_declarator159.Tree, member_declarator159, "member_declarator159", retval);
			DebugLocation(184, 21);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:184:21: ( ',' member_declarator )*
			try { DebugEnterSubRule(44);
			while (true)
			{
				int alt44=2;
				try { DebugEnterDecision(44, false);
				int LA44_1 = input.LA(1);

				if ((LA44_1==74))
				{
					int LA44_2 = input.LA(2);

					if ((LA44_2==IDENTIFIER||LA44_2==95||(LA44_2>=97 && LA44_2<=98)||(LA44_2>=100 && LA44_2<=101)||LA44_2==107||LA44_2==119||LA44_2==122||LA44_2==124||LA44_2==128||LA44_2==134||LA44_2==137||LA44_2==143||(LA44_2>=145 && LA44_2<=146)||(LA44_2>=149 && LA44_2<=150)||LA44_2==154||LA44_2==156||LA44_2==159||LA44_2==162||LA44_2==164||LA44_2==169||(LA44_2>=173 && LA44_2<=174)||LA44_2==185||LA44_2==192||LA44_2==196||LA44_2==198))
					{
						alt44 = 1;
					}


				}


				} finally { DebugExitDecision(44); }
				switch ( alt44 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:184:22: ',' member_declarator
					{
					DebugLocation(184, 22);
					char_literal160=(IToken)Match(input,74,Follow._74_in_member_declarator_list1379); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal160_tree = (object)adaptor.Create(char_literal160, "char_literal160", retval);
					adaptor.AddChild(root_0, char_literal160_tree);
					}
					DebugLocation(184, 26);
					PushFollow(Follow._member_declarator_in_member_declarator_list1381);
					member_declarator161=member_declarator();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, member_declarator161.Tree, member_declarator161, "member_declarator161", retval);

					}
					break;

				default:
					goto loop44;
				}
			}

			loop44:
				;

			} finally { DebugExitSubRule(44); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("member_declarator_list", 40);
			LeaveRule("member_declarator_list", 40);
			LeaveRule_member_declarator_list();
			if (state.backtracking > 0) { Memoize(input, 40, member_declarator_list_StartIndex); }

		}
		DebugLocation(184, 45);
		} finally { DebugExitRule(GrammarFileName, "member_declarator_list"); }
		return retval;

	}
	// $ANTLR end "member_declarator_list"

	partial void EnterRule_member_declarator();
	partial void LeaveRule_member_declarator();
	// $ANTLR start "member_declarator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:185:1: member_declarator : identifier ( generic_argument_list | ( '.' primary_or_array_creation_expression ) | '=' expression ) ;
	[GrammarRule("member_declarator")]
	private Antlr3AstNode member_declarator()
	{
		EnterRule_member_declarator();
		EnterRule("member_declarator", 41);
		var retval = new Antlr3AstNode("member_declarator");
		
		retval.Start = (IToken)input.LT(1);
		int member_declarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal164 = default(IToken);
		IToken char_literal166 = default(IToken);
		Antlr3AstNode identifier162 = default(Antlr3AstNode);
		Antlr3AstNode generic_argument_list163 = default(Antlr3AstNode);
		Antlr3AstNode primary_or_array_creation_expression165 = default(Antlr3AstNode);
		Antlr3AstNode expression167 = default(Antlr3AstNode);

		object char_literal164_tree = default(object);
		object char_literal166_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "member_declarator");
		DebugLocation(185, 25);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 41)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:185:18: ( identifier ( generic_argument_list | ( '.' primary_or_array_creation_expression ) | '=' expression ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:186:2: identifier ( generic_argument_list | ( '.' primary_or_array_creation_expression ) | '=' expression )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(186, 2);
			PushFollow(Follow._identifier_in_member_declarator1393);
			identifier162=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier162.Tree, identifier162, "identifier162", retval);
			DebugLocation(186, 15);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:186:15: ( generic_argument_list | ( '.' primary_or_array_creation_expression ) | '=' expression )
			int alt45=3;
			try { DebugEnterSubRule(45);
			try { DebugEnterDecision(45, false);
			switch (input.LA(1))
			{
			case 81:
				{
				alt45 = 1;
				}
				break;
			case DOT:
				{
				alt45 = 2;
				}
				break;
			case 85:
				{
				alt45 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 45, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(45); }
			switch (alt45)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:186:16: generic_argument_list
				{
				DebugLocation(186, 16);
				PushFollow(Follow._generic_argument_list_in_member_declarator1398);
				generic_argument_list163=generic_argument_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, generic_argument_list163.Tree, generic_argument_list163, "generic_argument_list163", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:187:8: ( '.' primary_or_array_creation_expression )
				{
				DebugLocation(187, 8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:187:8: ( '.' primary_or_array_creation_expression )
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:187:9: '.' primary_or_array_creation_expression
				{
				DebugLocation(187, 9);
				char_literal164=(IToken)Match(input,DOT,Follow._DOT_in_member_declarator1408); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal164_tree = (object)adaptor.Create(char_literal164, "char_literal164", retval);
				adaptor.AddChild(root_0, char_literal164_tree);
				}
				DebugLocation(187, 15);
				PushFollow(Follow._primary_or_array_creation_expression_in_member_declarator1412);
				primary_or_array_creation_expression165=primary_or_array_creation_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primary_or_array_creation_expression165.Tree, primary_or_array_creation_expression165, "primary_or_array_creation_expression165", retval);

				}


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:188:8: '=' expression
				{
				DebugLocation(188, 8);
				char_literal166=(IToken)Match(input,85,Follow._85_in_member_declarator1422); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal166_tree = (object)adaptor.Create(char_literal166, "char_literal166", retval);
				adaptor.AddChild(root_0, char_literal166_tree);
				}
				DebugLocation(188, 14);
				PushFollow(Follow._expression_in_member_declarator1426);
				expression167=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression167.Tree, expression167, "expression167", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(45); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("member_declarator", 41);
			LeaveRule("member_declarator", 41);
			LeaveRule_member_declarator();
			if (state.backtracking > 0) { Memoize(input, 41, member_declarator_StartIndex); }

		}
		DebugLocation(188, 25);
		} finally { DebugExitRule(GrammarFileName, "member_declarator"); }
		return retval;

	}
	// $ANTLR end "member_declarator"

	partial void EnterRule_primary_or_array_creation_expression();
	partial void LeaveRule_primary_or_array_creation_expression();
	// $ANTLR start "primary_or_array_creation_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:189:1: primary_or_array_creation_expression : ( ( array_creation_expression )=> array_creation_expression | primary_expression );
	[GrammarRule("primary_or_array_creation_expression")]
	private Antlr3AstNode primary_or_array_creation_expression()
	{
		EnterRule_primary_or_array_creation_expression();
		EnterRule("primary_or_array_creation_expression", 42);
		var retval = new Antlr3AstNode("primary_or_array_creation_expression");
		
		retval.Start = (IToken)input.LT(1);
		int primary_or_array_creation_expression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode array_creation_expression168 = default(Antlr3AstNode);
		Antlr3AstNode primary_expression169 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "primary_or_array_creation_expression");
		DebugLocation(189, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 42)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:189:37: ( ( array_creation_expression )=> array_creation_expression | primary_expression )
			int alt46=2;
			try { DebugEnterDecision(46, false);
			int LA46_1 = input.LA(1);

			if ((LA46_1==152))
			{
				int LA46_2 = input.LA(2);

				if ((EvaluatePredicate(synpred10_cs_fragment)))
				{
					alt46 = 1;
				}
				else if ((true))
				{
					alt46 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 46, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA46_1==Character_literal||LA46_1==FALSE||(LA46_1>=Hex_number && LA46_1<=IDENTIFIER)||(LA46_1>=NULL && LA46_1<=NUMBER)||LA46_1==Real_literal||LA46_1==STRINGLITERAL||LA46_1==TRUE||LA46_1==Verbatim_string_literal||LA46_1==68||LA46_1==95||(LA46_1>=97 && LA46_1<=98)||(LA46_1>=100 && LA46_1<=102)||(LA46_1>=104 && LA46_1<=105)||(LA46_1>=107 && LA46_1<=108)||(LA46_1>=111 && LA46_1<=112)||(LA46_1>=116 && LA46_1<=119)||(LA46_1>=121 && LA46_1<=122)||LA46_1==124||LA46_1==128||LA46_1==131||LA46_1==134||LA46_1==137||LA46_1==140||LA46_1==143||(LA46_1>=145 && LA46_1<=146)||(LA46_1>=148 && LA46_1<=150)||(LA46_1>=153 && LA46_1<=154)||LA46_1==156||LA46_1==159||LA46_1==162||LA46_1==164||LA46_1==169||LA46_1==171||(LA46_1>=173 && LA46_1<=176)||LA46_1==179||LA46_1==182||(LA46_1>=185 && LA46_1<=189)||(LA46_1>=191 && LA46_1<=192)||LA46_1==196||LA46_1==198))
			{
				alt46 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 46, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(46); }
			switch (alt46)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:190:2: ( array_creation_expression )=> array_creation_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(190, 33);
				PushFollow(Follow._array_creation_expression_in_primary_or_array_creation_expression1441);
				array_creation_expression168=array_creation_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, array_creation_expression168.Tree, array_creation_expression168, "array_creation_expression168", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:191:4: primary_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(191, 4);
				PushFollow(Follow._primary_expression_in_primary_or_array_creation_expression1446);
				primary_expression169=primary_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primary_expression169.Tree, primary_expression169, "primary_expression169", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("primary_or_array_creation_expression", 42);
			LeaveRule("primary_or_array_creation_expression", 42);
			LeaveRule_primary_or_array_creation_expression();
			if (state.backtracking > 0) { Memoize(input, 42, primary_or_array_creation_expression_StartIndex); }

		}
		DebugLocation(192, 1);
		} finally { DebugExitRule(GrammarFileName, "primary_or_array_creation_expression"); }
		return retval;

	}
	// $ANTLR end "primary_or_array_creation_expression"

	partial void EnterRule_array_creation_expression();
	partial void LeaveRule_array_creation_expression();
	// $ANTLR start "array_creation_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:194:1: array_creation_expression : 'new' ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) ) ;
	[GrammarRule("array_creation_expression")]
	private Antlr3AstNode array_creation_expression()
	{
		EnterRule_array_creation_expression();
		EnterRule("array_creation_expression", 43);
		var retval = new Antlr3AstNode("array_creation_expression");
		
		retval.Start = (IToken)input.LT(1);
		int array_creation_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal170 = default(IToken);
		IToken char_literal172 = default(IToken);
		IToken char_literal174 = default(IToken);
		Antlr3AstNode type171 = default(Antlr3AstNode);
		Antlr3AstNode expression_list173 = default(Antlr3AstNode);
		Antlr3AstNode rank_specifiers175 = default(Antlr3AstNode);
		Antlr3AstNode array_initializer176 = default(Antlr3AstNode);
		Antlr3AstNode arguments177 = default(Antlr3AstNode);
		Antlr3AstNode invocation_part178 = default(Antlr3AstNode);
		Antlr3AstNode invocation_part179 = default(Antlr3AstNode);
		Antlr3AstNode arguments180 = default(Antlr3AstNode);
		Antlr3AstNode array_initializer181 = default(Antlr3AstNode);
		Antlr3AstNode rank_specifier182 = default(Antlr3AstNode);
		Antlr3AstNode array_initializer183 = default(Antlr3AstNode);

		object string_literal170_tree = default(object);
		object char_literal172_tree = default(object);
		object char_literal174_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "array_creation_expression");
		DebugLocation(194, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 43)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:194:26: ( 'new' ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:195:2: 'new' ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(195, 2);
			string_literal170=(IToken)Match(input,152,Follow._152_in_array_creation_expression1457); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal170_tree = (object)adaptor.Create(string_literal170, "string_literal170", retval);
			adaptor.AddChild(root_0, string_literal170_tree);
			}
			DebugLocation(196, 3);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:196:3: ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) )
			int alt52=2;
			try { DebugEnterSubRule(52);
			try { DebugEnterDecision(52, false);
			int LA52_1 = input.LA(1);

			if ((LA52_1==IDENTIFIER||LA52_1==95||(LA52_1>=97 && LA52_1<=98)||(LA52_1>=100 && LA52_1<=101)||LA52_1==105||(LA52_1>=107 && LA52_1<=108)||LA52_1==111||LA52_1==116||LA52_1==119||(LA52_1>=121 && LA52_1<=122)||LA52_1==124||LA52_1==128||LA52_1==131||LA52_1==134||LA52_1==137||LA52_1==140||LA52_1==143||(LA52_1>=145 && LA52_1<=146)||(LA52_1>=148 && LA52_1<=150)||(LA52_1>=153 && LA52_1<=154)||LA52_1==156||LA52_1==159||LA52_1==162||LA52_1==164||LA52_1==169||LA52_1==171||(LA52_1>=173 && LA52_1<=175)||LA52_1==179||LA52_1==185||(LA52_1>=187 && LA52_1<=188)||(LA52_1>=191 && LA52_1<=192)||LA52_1==194||LA52_1==196||LA52_1==198))
			{
				alt52 = 1;
			}
			else if ((LA52_1==91))
			{
				alt52 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 52, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(52); }
			switch (alt52)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:196:4: type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer )
				{
				DebugLocation(196, 4);
				PushFollow(Follow._type_in_array_creation_expression1465);
				type171=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type171.Tree, type171, "type171", retval);
				DebugLocation(196, 11);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:196:11: ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer )
				int alt51=2;
				try { DebugEnterSubRule(51);
				try { DebugEnterDecision(51, false);
				int LA51_1 = input.LA(1);

				if ((LA51_1==91))
				{
					alt51 = 1;
				}
				else if ((LA51_1==199))
				{
					alt51 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 51, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(51); }
				switch (alt51)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:196:12: '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )
					{
					DebugLocation(196, 12);
					char_literal172=(IToken)Match(input,91,Follow._91_in_array_creation_expression1470); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal172_tree = (object)adaptor.Create(char_literal172, "char_literal172", retval);
					adaptor.AddChild(root_0, char_literal172_tree);
					}
					DebugLocation(196, 18);
					PushFollow(Follow._expression_list_in_array_creation_expression1474);
					expression_list173=expression_list();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, expression_list173.Tree, expression_list173, "expression_list173", retval);
					DebugLocation(196, 36);
					char_literal174=(IToken)Match(input,92,Follow._92_in_array_creation_expression1478); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal174_tree = (object)adaptor.Create(char_literal174, "char_literal174", retval);
					adaptor.AddChild(root_0, char_literal174_tree);
					}
					DebugLocation(197, 6);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:197:6: ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )
					int alt50=2;
					try { DebugEnterSubRule(50);
					try { DebugEnterDecision(50, false);
					try
					{
						alt50 = dfa50.Predict(input);
					}
					catch (NoViableAltException nvae)
					{
						DebugRecognitionException(nvae);
						throw;
					}
					} finally { DebugExitDecision(50); }
					switch (alt50)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:197:8: ( rank_specifiers )? ( array_initializer )?
						{
						DebugLocation(197, 8);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:197:8: ( rank_specifiers )?
						int alt47=2;
						try { DebugEnterSubRule(47);
						try { DebugEnterDecision(47, false);
						int LA47_1 = input.LA(1);

						if ((LA47_1==91))
						{
							alt47 = 1;
						}
						} finally { DebugExitDecision(47); }
						switch (alt47)
						{
						case 1:
							DebugEnterAlt(1);
							// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:197:8: rank_specifiers
							{
							DebugLocation(197, 8);
							PushFollow(Follow._rank_specifiers_in_array_creation_expression1490);
							rank_specifiers175=rank_specifiers();
							PopFollow();
							if (state.failed) return retval;
							if (state.backtracking == 0) adaptor.AddChild(root_0, rank_specifiers175.Tree, rank_specifiers175, "rank_specifiers175", retval);

							}
							break;

						}
						} finally { DebugExitSubRule(47); }

						DebugLocation(197, 27);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:197:27: ( array_initializer )?
						int alt48=2;
						try { DebugEnterSubRule(48);
						try { DebugEnterDecision(48, false);
						int LA48_1 = input.LA(1);

						if ((LA48_1==199))
						{
							alt48 = 1;
						}
						} finally { DebugExitDecision(48); }
						switch (alt48)
						{
						case 1:
							DebugEnterAlt(1);
							// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:197:27: array_initializer
							{
							DebugLocation(197, 27);
							PushFollow(Follow._array_initializer_in_array_creation_expression1495);
							array_initializer176=array_initializer();
							PopFollow();
							if (state.failed) return retval;
							if (state.backtracking == 0) adaptor.AddChild(root_0, array_initializer176.Tree, array_initializer176, "array_initializer176", retval);

							}
							break;

						}
						} finally { DebugExitSubRule(48); }


						}
						break;
					case 2:
						DebugEnterAlt(2);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:199:8: ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments
						{
						DebugLocation(199, 8);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:199:8: ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )*
						try { DebugEnterSubRule(49);
						while (true)
						{
							int alt49=3;
							try { DebugEnterDecision(49, false);
							int LA49_1 = input.LA(1);

							if ((LA49_1==68))
							{
								int LA49_2 = input.LA(2);

								if ((EvaluatePredicate(synpred11_cs_fragment)))
								{
									alt49 = 1;
								}


							}
							else if ((LA49_1==DOT||LA49_1==PTR||LA49_1==91))
							{
								alt49 = 2;
							}


							} finally { DebugExitDecision(49); }
							switch ( alt49 )
							{
							case 1:
								DebugEnterAlt(1);
								// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:199:10: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
								{
								DebugLocation(199, 10);
								// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:199:10: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
								DebugEnterAlt(1);
								// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:199:11: ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part
								{
								DebugLocation(199, 43);
								PushFollow(Follow._arguments_in_array_creation_expression1531);
								arguments177=arguments();
								PopFollow();
								if (state.failed) return retval;
								if (state.backtracking == 0) adaptor.AddChild(root_0, arguments177.Tree, arguments177, "arguments177", retval);
								DebugLocation(199, 55);
								PushFollow(Follow._invocation_part_in_array_creation_expression1535);
								invocation_part178=invocation_part();
								PopFollow();
								if (state.failed) return retval;
								if (state.backtracking == 0) adaptor.AddChild(root_0, invocation_part178.Tree, invocation_part178, "invocation_part178", retval);

								}


								}
								break;
							case 2:
								DebugEnterAlt(2);
								// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:200:10: invocation_part
								{
								DebugLocation(200, 10);
								PushFollow(Follow._invocation_part_in_array_creation_expression1547);
								invocation_part179=invocation_part();
								PopFollow();
								if (state.failed) return retval;
								if (state.backtracking == 0) adaptor.AddChild(root_0, invocation_part179.Tree, invocation_part179, "invocation_part179", retval);

								}
								break;

							default:
								goto loop49;
							}
						}

						loop49:
							;

						} finally { DebugExitSubRule(49); }

						DebugLocation(200, 30);
						PushFollow(Follow._arguments_in_array_creation_expression1553);
						arguments180=arguments();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, arguments180.Tree, arguments180, "arguments180", retval);

						}
						break;

					}
					} finally { DebugExitSubRule(50); }


					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:202:7: array_initializer
					{
					DebugLocation(202, 7);
					PushFollow(Follow._array_initializer_in_array_creation_expression1575);
					array_initializer181=array_initializer();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, array_initializer181.Tree, array_initializer181, "array_initializer181", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(51); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:204:5: rank_specifier ( array_initializer )
				{
				DebugLocation(204, 5);
				PushFollow(Follow._rank_specifier_in_array_creation_expression1589);
				rank_specifier182=rank_specifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, rank_specifier182.Tree, rank_specifier182, "rank_specifier182", retval);
				DebugLocation(205, 4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:205:4: ( array_initializer )
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:205:5: array_initializer
				{
				DebugLocation(205, 5);
				PushFollow(Follow._array_initializer_in_array_creation_expression1598);
				array_initializer183=array_initializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, array_initializer183.Tree, array_initializer183, "array_initializer183", retval);

				}


				}
				break;

			}
			} finally { DebugExitSubRule(52); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("array_creation_expression", 43);
			LeaveRule("array_creation_expression", 43);
			LeaveRule_array_creation_expression();
			if (state.backtracking > 0) { Memoize(input, 43, array_creation_expression_StartIndex); }

		}
		DebugLocation(207, 4);
		} finally { DebugExitRule(GrammarFileName, "array_creation_expression"); }
		return retval;

	}
	// $ANTLR end "array_creation_expression"

	partial void EnterRule_array_initializer();
	partial void LeaveRule_array_initializer();
	// $ANTLR start "array_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:208:1: array_initializer : '{' ( variable_initializer_list )? ( ',' )? '}' ;
	[GrammarRule("array_initializer")]
	private Antlr3AstNode array_initializer()
	{
		EnterRule_array_initializer();
		EnterRule("array_initializer", 44);
		var retval = new Antlr3AstNode("array_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int array_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal184 = default(IToken);
		IToken char_literal186 = default(IToken);
		IToken char_literal187 = default(IToken);
		Antlr3AstNode variable_initializer_list185 = default(Antlr3AstNode);

		object char_literal184_tree = default(object);
		object char_literal186_tree = default(object);
		object char_literal187_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "array_initializer");
		DebugLocation(208, 47);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 44)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:208:18: ( '{' ( variable_initializer_list )? ( ',' )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:209:2: '{' ( variable_initializer_list )? ( ',' )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(209, 2);
			char_literal184=(IToken)Match(input,199,Follow._199_in_array_initializer1619); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal184_tree = (object)adaptor.Create(char_literal184, "char_literal184", retval);
			adaptor.AddChild(root_0, char_literal184_tree);
			}
			DebugLocation(209, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:209:8: ( variable_initializer_list )?
			int alt53=2;
			try { DebugEnterSubRule(53);
			try { DebugEnterDecision(53, false);
			int LA53_1 = input.LA(1);

			if ((LA53_1==Character_literal||LA53_1==FALSE||(LA53_1>=Hex_number && LA53_1<=IDENTIFIER)||(LA53_1>=MINUS && LA53_1<=NUMBER)||LA53_1==Real_literal||LA53_1==STRINGLITERAL||LA53_1==TRUE||LA53_1==Verbatim_string_literal||LA53_1==61||LA53_1==66||(LA53_1>=68 && LA53_1<=69)||(LA53_1>=71 && LA53_1<=72)||LA53_1==75||LA53_1==95||(LA53_1>=97 && LA53_1<=98)||(LA53_1>=100 && LA53_1<=105)||(LA53_1>=107 && LA53_1<=108)||(LA53_1>=111 && LA53_1<=112)||(LA53_1>=116 && LA53_1<=119)||(LA53_1>=121 && LA53_1<=122)||LA53_1==124||LA53_1==128||LA53_1==131||LA53_1==134||LA53_1==137||LA53_1==140||LA53_1==143||(LA53_1>=145 && LA53_1<=146)||(LA53_1>=148 && LA53_1<=150)||(LA53_1>=152 && LA53_1<=154)||LA53_1==156||LA53_1==159||LA53_1==162||LA53_1==164||LA53_1==169||LA53_1==171||(LA53_1>=173 && LA53_1<=176)||LA53_1==179||LA53_1==182||(LA53_1>=185 && LA53_1<=189)||(LA53_1>=191 && LA53_1<=192)||LA53_1==196||(LA53_1>=198 && LA53_1<=199)||LA53_1==204))
			{
				alt53 = 1;
			}
			} finally { DebugExitDecision(53); }
			switch (alt53)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:209:8: variable_initializer_list
				{
				DebugLocation(209, 8);
				PushFollow(Follow._variable_initializer_list_in_array_initializer1623);
				variable_initializer_list185=variable_initializer_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variable_initializer_list185.Tree, variable_initializer_list185, "variable_initializer_list185", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(53); }

			DebugLocation(209, 37);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:209:37: ( ',' )?
			int alt54=2;
			try { DebugEnterSubRule(54);
			try { DebugEnterDecision(54, false);
			int LA54_1 = input.LA(1);

			if ((LA54_1==74))
			{
				alt54 = 1;
			}
			} finally { DebugExitDecision(54); }
			switch (alt54)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:209:37: ','
				{
				DebugLocation(209, 37);
				char_literal186=(IToken)Match(input,74,Follow._74_in_array_initializer1628); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal186_tree = (object)adaptor.Create(char_literal186, "char_literal186", retval);
				adaptor.AddChild(root_0, char_literal186_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(54); }

			DebugLocation(209, 44);
			char_literal187=(IToken)Match(input,203,Follow._203_in_array_initializer1633); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal187_tree = (object)adaptor.Create(char_literal187, "char_literal187", retval);
			adaptor.AddChild(root_0, char_literal187_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("array_initializer", 44);
			LeaveRule("array_initializer", 44);
			LeaveRule_array_initializer();
			if (state.backtracking > 0) { Memoize(input, 44, array_initializer_StartIndex); }

		}
		DebugLocation(209, 47);
		} finally { DebugExitRule(GrammarFileName, "array_initializer"); }
		return retval;

	}
	// $ANTLR end "array_initializer"

	partial void EnterRule_variable_initializer_list();
	partial void LeaveRule_variable_initializer_list();
	// $ANTLR start "variable_initializer_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:210:1: variable_initializer_list : variable_initializer ( ',' variable_initializer )* ;
	[GrammarRule("variable_initializer_list")]
	private Antlr3AstNode variable_initializer_list()
	{
		EnterRule_variable_initializer_list();
		EnterRule("variable_initializer_list", 45);
		var retval = new Antlr3AstNode("variable_initializer_list");
		
		retval.Start = (IToken)input.LT(1);
		int variable_initializer_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal189 = default(IToken);
		Antlr3AstNode variable_initializer188 = default(Antlr3AstNode);
		Antlr3AstNode variable_initializer190 = default(Antlr3AstNode);

		object char_literal189_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "variable_initializer_list");
		DebugLocation(210, 50);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 45)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:210:26: ( variable_initializer ( ',' variable_initializer )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:211:2: variable_initializer ( ',' variable_initializer )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(211, 2);
			PushFollow(Follow._variable_initializer_in_variable_initializer_list1641);
			variable_initializer188=variable_initializer();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variable_initializer188.Tree, variable_initializer188, "variable_initializer188", retval);
			DebugLocation(211, 23);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:211:23: ( ',' variable_initializer )*
			try { DebugEnterSubRule(55);
			while (true)
			{
				int alt55=2;
				try { DebugEnterDecision(55, false);
				int LA55_1 = input.LA(1);

				if ((LA55_1==74))
				{
					int LA55_2 = input.LA(2);

					if ((LA55_2==Character_literal||LA55_2==FALSE||(LA55_2>=Hex_number && LA55_2<=IDENTIFIER)||(LA55_2>=MINUS && LA55_2<=NUMBER)||LA55_2==Real_literal||LA55_2==STRINGLITERAL||LA55_2==TRUE||LA55_2==Verbatim_string_literal||LA55_2==61||LA55_2==66||(LA55_2>=68 && LA55_2<=69)||(LA55_2>=71 && LA55_2<=72)||LA55_2==75||LA55_2==95||(LA55_2>=97 && LA55_2<=98)||(LA55_2>=100 && LA55_2<=105)||(LA55_2>=107 && LA55_2<=108)||(LA55_2>=111 && LA55_2<=112)||(LA55_2>=116 && LA55_2<=119)||(LA55_2>=121 && LA55_2<=122)||LA55_2==124||LA55_2==128||LA55_2==131||LA55_2==134||LA55_2==137||LA55_2==140||LA55_2==143||(LA55_2>=145 && LA55_2<=146)||(LA55_2>=148 && LA55_2<=150)||(LA55_2>=152 && LA55_2<=154)||LA55_2==156||LA55_2==159||LA55_2==162||LA55_2==164||LA55_2==169||LA55_2==171||(LA55_2>=173 && LA55_2<=176)||LA55_2==179||LA55_2==182||(LA55_2>=185 && LA55_2<=189)||(LA55_2>=191 && LA55_2<=192)||LA55_2==196||(LA55_2>=198 && LA55_2<=199)||LA55_2==204))
					{
						alt55 = 1;
					}


				}


				} finally { DebugExitDecision(55); }
				switch ( alt55 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:211:24: ',' variable_initializer
					{
					DebugLocation(211, 24);
					char_literal189=(IToken)Match(input,74,Follow._74_in_variable_initializer_list1644); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal189_tree = (object)adaptor.Create(char_literal189, "char_literal189", retval);
					adaptor.AddChild(root_0, char_literal189_tree);
					}
					DebugLocation(211, 28);
					PushFollow(Follow._variable_initializer_in_variable_initializer_list1646);
					variable_initializer190=variable_initializer();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, variable_initializer190.Tree, variable_initializer190, "variable_initializer190", retval);

					}
					break;

				default:
					goto loop55;
				}
			}

			loop55:
				;

			} finally { DebugExitSubRule(55); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variable_initializer_list", 45);
			LeaveRule("variable_initializer_list", 45);
			LeaveRule_variable_initializer_list();
			if (state.backtracking > 0) { Memoize(input, 45, variable_initializer_list_StartIndex); }

		}
		DebugLocation(211, 50);
		} finally { DebugExitRule(GrammarFileName, "variable_initializer_list"); }
		return retval;

	}
	// $ANTLR end "variable_initializer_list"

	partial void EnterRule_variable_initializer();
	partial void LeaveRule_variable_initializer();
	// $ANTLR start "variable_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:212:1: variable_initializer : ( expression | array_initializer );
	[GrammarRule("variable_initializer")]
	private Antlr3AstNode variable_initializer()
	{
		EnterRule_variable_initializer();
		EnterRule("variable_initializer", 46);
		var retval = new Antlr3AstNode("variable_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int variable_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode expression191 = default(Antlr3AstNode);
		Antlr3AstNode array_initializer192 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "variable_initializer");
		DebugLocation(212, 32);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 46)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:212:21: ( expression | array_initializer )
			int alt56=2;
			try { DebugEnterDecision(56, false);
			int LA56_1 = input.LA(1);

			if ((LA56_1==Character_literal||LA56_1==FALSE||(LA56_1>=Hex_number && LA56_1<=IDENTIFIER)||(LA56_1>=MINUS && LA56_1<=NUMBER)||LA56_1==Real_literal||LA56_1==STRINGLITERAL||LA56_1==TRUE||LA56_1==Verbatim_string_literal||LA56_1==61||LA56_1==66||(LA56_1>=68 && LA56_1<=69)||(LA56_1>=71 && LA56_1<=72)||LA56_1==75||LA56_1==95||(LA56_1>=97 && LA56_1<=98)||(LA56_1>=100 && LA56_1<=105)||(LA56_1>=107 && LA56_1<=108)||(LA56_1>=111 && LA56_1<=112)||(LA56_1>=116 && LA56_1<=119)||(LA56_1>=121 && LA56_1<=122)||LA56_1==124||LA56_1==128||LA56_1==131||LA56_1==134||LA56_1==137||LA56_1==140||LA56_1==143||(LA56_1>=145 && LA56_1<=146)||(LA56_1>=148 && LA56_1<=150)||(LA56_1>=152 && LA56_1<=154)||LA56_1==156||LA56_1==159||LA56_1==162||LA56_1==164||LA56_1==169||LA56_1==171||(LA56_1>=173 && LA56_1<=176)||LA56_1==179||LA56_1==182||(LA56_1>=185 && LA56_1<=189)||(LA56_1>=191 && LA56_1<=192)||LA56_1==196||LA56_1==198||LA56_1==204))
			{
				alt56 = 1;
			}
			else if ((LA56_1==199))
			{
				alt56 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 56, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(56); }
			switch (alt56)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:213:2: expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(213, 2);
				PushFollow(Follow._expression_in_variable_initializer1656);
				expression191=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression191.Tree, expression191, "expression191", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:213:15: array_initializer
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(213, 15);
				PushFollow(Follow._array_initializer_in_variable_initializer1660);
				array_initializer192=array_initializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, array_initializer192.Tree, array_initializer192, "array_initializer192", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variable_initializer", 46);
			LeaveRule("variable_initializer", 46);
			LeaveRule_variable_initializer();
			if (state.backtracking > 0) { Memoize(input, 46, variable_initializer_StartIndex); }

		}
		DebugLocation(213, 32);
		} finally { DebugExitRule(GrammarFileName, "variable_initializer"); }
		return retval;

	}
	// $ANTLR end "variable_initializer"

	partial void EnterRule_sizeof_expression();
	partial void LeaveRule_sizeof_expression();
	// $ANTLR start "sizeof_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:214:1: sizeof_expression : 'sizeof' '(' unmanaged_type ')' ;
	[GrammarRule("sizeof_expression")]
	private Antlr3AstNode sizeof_expression()
	{
		EnterRule_sizeof_expression();
		EnterRule("sizeof_expression", 47);
		var retval = new Antlr3AstNode("sizeof_expression");
		
		retval.Start = (IToken)input.LT(1);
		int sizeof_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal193 = default(IToken);
		IToken char_literal194 = default(IToken);
		IToken char_literal196 = default(IToken);
		Antlr3AstNode unmanaged_type195 = default(Antlr3AstNode);

		object string_literal193_tree = default(object);
		object char_literal194_tree = default(object);
		object char_literal196_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "sizeof_expression");
		DebugLocation(214, 38);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 47)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:214:18: ( 'sizeof' '(' unmanaged_type ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:215:2: 'sizeof' '(' unmanaged_type ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(215, 2);
			string_literal193=(IToken)Match(input,176,Follow._176_in_sizeof_expression1668); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal193_tree = (object)adaptor.Create(string_literal193, "string_literal193", retval);
			adaptor.AddChild(root_0, string_literal193_tree);
			}
			DebugLocation(215, 13);
			char_literal194=(IToken)Match(input,68,Follow._68_in_sizeof_expression1672); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal194_tree = (object)adaptor.Create(char_literal194, "char_literal194", retval);
			adaptor.AddChild(root_0, char_literal194_tree);
			}
			DebugLocation(215, 19);
			PushFollow(Follow._unmanaged_type_in_sizeof_expression1676);
			unmanaged_type195=unmanaged_type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, unmanaged_type195.Tree, unmanaged_type195, "unmanaged_type195", retval);
			DebugLocation(215, 36);
			char_literal196=(IToken)Match(input,RPAREN,Follow._RPAREN_in_sizeof_expression1680); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal196_tree = (object)adaptor.Create(char_literal196, "char_literal196", retval);
			adaptor.AddChild(root_0, char_literal196_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("sizeof_expression", 47);
			LeaveRule("sizeof_expression", 47);
			LeaveRule_sizeof_expression();
			if (state.backtracking > 0) { Memoize(input, 47, sizeof_expression_StartIndex); }

		}
		DebugLocation(215, 38);
		} finally { DebugExitRule(GrammarFileName, "sizeof_expression"); }
		return retval;

	}
	// $ANTLR end "sizeof_expression"

	partial void EnterRule_checked_expression();
	partial void LeaveRule_checked_expression();
	// $ANTLR start "checked_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:216:1: checked_expression : 'checked' '(' expression ')' ;
	[GrammarRule("checked_expression")]
	private Antlr3AstNode checked_expression()
	{
		EnterRule_checked_expression();
		EnterRule("checked_expression", 48);
		var retval = new Antlr3AstNode("checked_expression");
		
		retval.Start = (IToken)input.LT(1);
		int checked_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal197 = default(IToken);
		IToken char_literal198 = default(IToken);
		IToken char_literal200 = default(IToken);
		Antlr3AstNode expression199 = default(Antlr3AstNode);

		object string_literal197_tree = default(object);
		object char_literal198_tree = default(object);
		object char_literal200_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "checked_expression");
		DebugLocation(216, 36);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 48)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:216:19: ( 'checked' '(' expression ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:217:2: 'checked' '(' expression ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(217, 2);
			string_literal197=(IToken)Match(input,112,Follow._112_in_checked_expression1688); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal197_tree = (object)adaptor.Create(string_literal197, "string_literal197", retval);
			adaptor.AddChild(root_0, string_literal197_tree);
			}
			DebugLocation(217, 14);
			char_literal198=(IToken)Match(input,68,Follow._68_in_checked_expression1692); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal198_tree = (object)adaptor.Create(char_literal198, "char_literal198", retval);
			adaptor.AddChild(root_0, char_literal198_tree);
			}
			DebugLocation(217, 20);
			PushFollow(Follow._expression_in_checked_expression1696);
			expression199=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression199.Tree, expression199, "expression199", retval);
			DebugLocation(217, 33);
			char_literal200=(IToken)Match(input,RPAREN,Follow._RPAREN_in_checked_expression1700); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal200_tree = (object)adaptor.Create(char_literal200, "char_literal200", retval);
			adaptor.AddChild(root_0, char_literal200_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("checked_expression", 48);
			LeaveRule("checked_expression", 48);
			LeaveRule_checked_expression();
			if (state.backtracking > 0) { Memoize(input, 48, checked_expression_StartIndex); }

		}
		DebugLocation(217, 36);
		} finally { DebugExitRule(GrammarFileName, "checked_expression"); }
		return retval;

	}
	// $ANTLR end "checked_expression"

	partial void EnterRule_unchecked_expression();
	partial void LeaveRule_unchecked_expression();
	// $ANTLR start "unchecked_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:218:1: unchecked_expression : 'unchecked' '(' expression ')' ;
	[GrammarRule("unchecked_expression")]
	private Antlr3AstNode unchecked_expression()
	{
		EnterRule_unchecked_expression();
		EnterRule("unchecked_expression", 49);
		var retval = new Antlr3AstNode("unchecked_expression");
		
		retval.Start = (IToken)input.LT(1);
		int unchecked_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal201 = default(IToken);
		IToken char_literal202 = default(IToken);
		IToken char_literal204 = default(IToken);
		Antlr3AstNode expression203 = default(Antlr3AstNode);

		object string_literal201_tree = default(object);
		object char_literal202_tree = default(object);
		object char_literal204_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "unchecked_expression");
		DebugLocation(218, 38);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 49)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:218:21: ( 'unchecked' '(' expression ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:219:2: 'unchecked' '(' expression ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(219, 2);
			string_literal201=(IToken)Match(input,189,Follow._189_in_unchecked_expression1709); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal201_tree = (object)adaptor.Create(string_literal201, "string_literal201", retval);
			adaptor.AddChild(root_0, string_literal201_tree);
			}
			DebugLocation(219, 16);
			char_literal202=(IToken)Match(input,68,Follow._68_in_unchecked_expression1713); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal202_tree = (object)adaptor.Create(char_literal202, "char_literal202", retval);
			adaptor.AddChild(root_0, char_literal202_tree);
			}
			DebugLocation(219, 22);
			PushFollow(Follow._expression_in_unchecked_expression1717);
			expression203=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression203.Tree, expression203, "expression203", retval);
			DebugLocation(219, 35);
			char_literal204=(IToken)Match(input,RPAREN,Follow._RPAREN_in_unchecked_expression1721); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal204_tree = (object)adaptor.Create(char_literal204, "char_literal204", retval);
			adaptor.AddChild(root_0, char_literal204_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unchecked_expression", 49);
			LeaveRule("unchecked_expression", 49);
			LeaveRule_unchecked_expression();
			if (state.backtracking > 0) { Memoize(input, 49, unchecked_expression_StartIndex); }

		}
		DebugLocation(219, 38);
		} finally { DebugExitRule(GrammarFileName, "unchecked_expression"); }
		return retval;

	}
	// $ANTLR end "unchecked_expression"

	partial void EnterRule_default_value_expression();
	partial void LeaveRule_default_value_expression();
	// $ANTLR start "default_value_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:220:1: default_value_expression : 'default' '(' type ')' ;
	[GrammarRule("default_value_expression")]
	private Antlr3AstNode default_value_expression()
	{
		EnterRule_default_value_expression();
		EnterRule("default_value_expression", 50);
		var retval = new Antlr3AstNode("default_value_expression");
		
		retval.Start = (IToken)input.LT(1);
		int default_value_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal205 = default(IToken);
		IToken char_literal206 = default(IToken);
		IToken char_literal208 = default(IToken);
		Antlr3AstNode type207 = default(Antlr3AstNode);

		object string_literal205_tree = default(object);
		object char_literal206_tree = default(object);
		object char_literal208_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "default_value_expression");
		DebugLocation(220, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 50)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:220:25: ( 'default' '(' type ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:221:2: 'default' '(' type ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(221, 2);
			string_literal205=(IToken)Match(input,117,Follow._117_in_default_value_expression1730); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal205_tree = (object)adaptor.Create(string_literal205, "string_literal205", retval);
			adaptor.AddChild(root_0, string_literal205_tree);
			}
			DebugLocation(221, 14);
			char_literal206=(IToken)Match(input,68,Follow._68_in_default_value_expression1734); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal206_tree = (object)adaptor.Create(char_literal206, "char_literal206", retval);
			adaptor.AddChild(root_0, char_literal206_tree);
			}
			DebugLocation(221, 20);
			PushFollow(Follow._type_in_default_value_expression1738);
			type207=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type207.Tree, type207, "type207", retval);
			DebugLocation(221, 27);
			char_literal208=(IToken)Match(input,RPAREN,Follow._RPAREN_in_default_value_expression1742); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal208_tree = (object)adaptor.Create(char_literal208, "char_literal208", retval);
			adaptor.AddChild(root_0, char_literal208_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("default_value_expression", 50);
			LeaveRule("default_value_expression", 50);
			LeaveRule_default_value_expression();
			if (state.backtracking > 0) { Memoize(input, 50, default_value_expression_StartIndex); }

		}
		DebugLocation(221, 30);
		} finally { DebugExitRule(GrammarFileName, "default_value_expression"); }
		return retval;

	}
	// $ANTLR end "default_value_expression"

	partial void EnterRule_anonymous_method_expression();
	partial void LeaveRule_anonymous_method_expression();
	// $ANTLR start "anonymous_method_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:222:1: anonymous_method_expression : ( 'async' )? 'delegate' ( explicit_anonymous_function_signature )? block ;
	[GrammarRule("anonymous_method_expression")]
	private Antlr3AstNode anonymous_method_expression()
	{
		EnterRule_anonymous_method_expression();
		EnterRule("anonymous_method_expression", 51);
		var retval = new Antlr3AstNode("anonymous_method_expression");
		
		retval.Start = (IToken)input.LT(1);
		int anonymous_method_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal209 = default(IToken);
		IToken string_literal210 = default(IToken);
		Antlr3AstNode explicit_anonymous_function_signature211 = default(Antlr3AstNode);
		Antlr3AstNode block212 = default(Antlr3AstNode);

		object string_literal209_tree = default(object);
		object string_literal210_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "anonymous_method_expression");
		DebugLocation(222, 67);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 51)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:222:28: ( ( 'async' )? 'delegate' ( explicit_anonymous_function_signature )? block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:223:2: ( 'async' )? 'delegate' ( explicit_anonymous_function_signature )? block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(223, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:223:2: ( 'async' )?
			int alt57=2;
			try { DebugEnterSubRule(57);
			try { DebugEnterDecision(57, false);
			int LA57_1 = input.LA(1);

			if ((LA57_1==102))
			{
				alt57 = 1;
			}
			} finally { DebugExitDecision(57); }
			switch (alt57)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:223:2: 'async'
				{
				DebugLocation(223, 2);
				string_literal209=(IToken)Match(input,102,Follow._102_in_anonymous_method_expression1750); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal209_tree = (object)adaptor.Create(string_literal209, "string_literal209", retval);
				adaptor.AddChild(root_0, string_literal209_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(57); }

			DebugLocation(223, 11);
			string_literal210=(IToken)Match(input,118,Follow._118_in_anonymous_method_expression1753); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal210_tree = (object)adaptor.Create(string_literal210, "string_literal210", retval);
			adaptor.AddChild(root_0, string_literal210_tree);
			}
			DebugLocation(223, 22);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:223:22: ( explicit_anonymous_function_signature )?
			int alt58=2;
			try { DebugEnterSubRule(58);
			try { DebugEnterDecision(58, false);
			int LA58_1 = input.LA(1);

			if ((LA58_1==68))
			{
				alt58 = 1;
			}
			} finally { DebugExitDecision(58); }
			switch (alt58)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:223:22: explicit_anonymous_function_signature
				{
				DebugLocation(223, 22);
				PushFollow(Follow._explicit_anonymous_function_signature_in_anonymous_method_expression1755);
				explicit_anonymous_function_signature211=explicit_anonymous_function_signature();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, explicit_anonymous_function_signature211.Tree, explicit_anonymous_function_signature211, "explicit_anonymous_function_signature211", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(58); }

			DebugLocation(223, 63);
			PushFollow(Follow._block_in_anonymous_method_expression1760);
			block212=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block212.Tree, block212, "block212", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("anonymous_method_expression", 51);
			LeaveRule("anonymous_method_expression", 51);
			LeaveRule_anonymous_method_expression();
			if (state.backtracking > 0) { Memoize(input, 51, anonymous_method_expression_StartIndex); }

		}
		DebugLocation(223, 67);
		} finally { DebugExitRule(GrammarFileName, "anonymous_method_expression"); }
		return retval;

	}
	// $ANTLR end "anonymous_method_expression"

	partial void EnterRule_explicit_anonymous_function_signature();
	partial void LeaveRule_explicit_anonymous_function_signature();
	// $ANTLR start "explicit_anonymous_function_signature"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:224:1: explicit_anonymous_function_signature : '(' ( explicit_anonymous_function_parameter_list )? ')' ;
	[GrammarRule("explicit_anonymous_function_signature")]
	private Antlr3AstNode explicit_anonymous_function_signature()
	{
		EnterRule_explicit_anonymous_function_signature();
		EnterRule("explicit_anonymous_function_signature", 52);
		var retval = new Antlr3AstNode("explicit_anonymous_function_signature");
		
		retval.Start = (IToken)input.LT(1);
		int explicit_anonymous_function_signature_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal213 = default(IToken);
		IToken char_literal215 = default(IToken);
		Antlr3AstNode explicit_anonymous_function_parameter_list214 = default(Antlr3AstNode);

		object char_literal213_tree = default(object);
		object char_literal215_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "explicit_anonymous_function_signature");
		DebugLocation(224, 57);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 52)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:224:38: ( '(' ( explicit_anonymous_function_parameter_list )? ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:225:2: '(' ( explicit_anonymous_function_parameter_list )? ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(225, 2);
			char_literal213=(IToken)Match(input,68,Follow._68_in_explicit_anonymous_function_signature1767); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal213_tree = (object)adaptor.Create(char_literal213, "char_literal213", retval);
			adaptor.AddChild(root_0, char_literal213_tree);
			}
			DebugLocation(225, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:225:8: ( explicit_anonymous_function_parameter_list )?
			int alt59=2;
			try { DebugEnterSubRule(59);
			try { DebugEnterDecision(59, false);
			int LA59_1 = input.LA(1);

			if ((LA59_1==IDENTIFIER||LA59_1==95||(LA59_1>=97 && LA59_1<=98)||(LA59_1>=100 && LA59_1<=101)||LA59_1==105||(LA59_1>=107 && LA59_1<=108)||LA59_1==111||LA59_1==116||LA59_1==119||(LA59_1>=121 && LA59_1<=122)||LA59_1==124||LA59_1==128||LA59_1==131||LA59_1==134||LA59_1==137||LA59_1==140||LA59_1==143||(LA59_1>=145 && LA59_1<=146)||(LA59_1>=148 && LA59_1<=150)||(LA59_1>=153 && LA59_1<=154)||(LA59_1>=156 && LA59_1<=157)||LA59_1==159||LA59_1==162||LA59_1==164||(LA59_1>=168 && LA59_1<=169)||LA59_1==171||(LA59_1>=173 && LA59_1<=175)||LA59_1==179||LA59_1==185||(LA59_1>=187 && LA59_1<=188)||(LA59_1>=191 && LA59_1<=192)||LA59_1==194||LA59_1==196||LA59_1==198))
			{
				alt59 = 1;
			}
			} finally { DebugExitDecision(59); }
			switch (alt59)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:225:8: explicit_anonymous_function_parameter_list
				{
				DebugLocation(225, 8);
				PushFollow(Follow._explicit_anonymous_function_parameter_list_in_explicit_anonymous_function_signature1771);
				explicit_anonymous_function_parameter_list214=explicit_anonymous_function_parameter_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, explicit_anonymous_function_parameter_list214.Tree, explicit_anonymous_function_parameter_list214, "explicit_anonymous_function_parameter_list214", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(59); }

			DebugLocation(225, 54);
			char_literal215=(IToken)Match(input,RPAREN,Follow._RPAREN_in_explicit_anonymous_function_signature1776); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal215_tree = (object)adaptor.Create(char_literal215, "char_literal215", retval);
			adaptor.AddChild(root_0, char_literal215_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("explicit_anonymous_function_signature", 52);
			LeaveRule("explicit_anonymous_function_signature", 52);
			LeaveRule_explicit_anonymous_function_signature();
			if (state.backtracking > 0) { Memoize(input, 52, explicit_anonymous_function_signature_StartIndex); }

		}
		DebugLocation(225, 57);
		} finally { DebugExitRule(GrammarFileName, "explicit_anonymous_function_signature"); }
		return retval;

	}
	// $ANTLR end "explicit_anonymous_function_signature"

	partial void EnterRule_explicit_anonymous_function_parameter_list();
	partial void LeaveRule_explicit_anonymous_function_parameter_list();
	// $ANTLR start "explicit_anonymous_function_parameter_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:226:1: explicit_anonymous_function_parameter_list : explicit_anonymous_function_parameter ( ',' explicit_anonymous_function_parameter )* ;
	[GrammarRule("explicit_anonymous_function_parameter_list")]
	private Antlr3AstNode explicit_anonymous_function_parameter_list()
	{
		EnterRule_explicit_anonymous_function_parameter_list();
		EnterRule("explicit_anonymous_function_parameter_list", 53);
		var retval = new Antlr3AstNode("explicit_anonymous_function_parameter_list");
		
		retval.Start = (IToken)input.LT(1);
		int explicit_anonymous_function_parameter_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal217 = default(IToken);
		Antlr3AstNode explicit_anonymous_function_parameter216 = default(Antlr3AstNode);
		Antlr3AstNode explicit_anonymous_function_parameter218 = default(Antlr3AstNode);

		object char_literal217_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "explicit_anonymous_function_parameter_list");
		DebugLocation(226, 88);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 53)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:226:43: ( explicit_anonymous_function_parameter ( ',' explicit_anonymous_function_parameter )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:227:2: explicit_anonymous_function_parameter ( ',' explicit_anonymous_function_parameter )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(227, 2);
			PushFollow(Follow._explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list1784);
			explicit_anonymous_function_parameter216=explicit_anonymous_function_parameter();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, explicit_anonymous_function_parameter216.Tree, explicit_anonymous_function_parameter216, "explicit_anonymous_function_parameter216", retval);
			DebugLocation(227, 42);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:227:42: ( ',' explicit_anonymous_function_parameter )*
			try { DebugEnterSubRule(60);
			while (true)
			{
				int alt60=2;
				try { DebugEnterDecision(60, false);
				int LA60_1 = input.LA(1);

				if ((LA60_1==74))
				{
					alt60 = 1;
				}


				} finally { DebugExitDecision(60); }
				switch ( alt60 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:227:43: ',' explicit_anonymous_function_parameter
					{
					DebugLocation(227, 43);
					char_literal217=(IToken)Match(input,74,Follow._74_in_explicit_anonymous_function_parameter_list1789); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal217_tree = (object)adaptor.Create(char_literal217, "char_literal217", retval);
					adaptor.AddChild(root_0, char_literal217_tree);
					}
					DebugLocation(227, 49);
					PushFollow(Follow._explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list1793);
					explicit_anonymous_function_parameter218=explicit_anonymous_function_parameter();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, explicit_anonymous_function_parameter218.Tree, explicit_anonymous_function_parameter218, "explicit_anonymous_function_parameter218", retval);

					}
					break;

				default:
					goto loop60;
				}
			}

			loop60:
				;

			} finally { DebugExitSubRule(60); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("explicit_anonymous_function_parameter_list", 53);
			LeaveRule("explicit_anonymous_function_parameter_list", 53);
			LeaveRule_explicit_anonymous_function_parameter_list();
			if (state.backtracking > 0) { Memoize(input, 53, explicit_anonymous_function_parameter_list_StartIndex); }

		}
		DebugLocation(227, 88);
		} finally { DebugExitRule(GrammarFileName, "explicit_anonymous_function_parameter_list"); }
		return retval;

	}
	// $ANTLR end "explicit_anonymous_function_parameter_list"

	partial void EnterRule_explicit_anonymous_function_parameter();
	partial void LeaveRule_explicit_anonymous_function_parameter();
	// $ANTLR start "explicit_anonymous_function_parameter"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:228:1: explicit_anonymous_function_parameter : ( anonymous_function_parameter_modifier )? type identifier ;
	[GrammarRule("explicit_anonymous_function_parameter")]
	private Antlr3AstNode explicit_anonymous_function_parameter()
	{
		EnterRule_explicit_anonymous_function_parameter();
		EnterRule("explicit_anonymous_function_parameter", 54);
		var retval = new Antlr3AstNode("explicit_anonymous_function_parameter");
		
		retval.Start = (IToken)input.LT(1);
		int explicit_anonymous_function_parameter_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode anonymous_function_parameter_modifier219 = default(Antlr3AstNode);
		Antlr3AstNode type220 = default(Antlr3AstNode);
		Antlr3AstNode identifier221 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "explicit_anonymous_function_parameter");
		DebugLocation(228, 59);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 54)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:228:38: ( ( anonymous_function_parameter_modifier )? type identifier )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:229:2: ( anonymous_function_parameter_modifier )? type identifier
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(229, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:229:2: ( anonymous_function_parameter_modifier )?
			int alt61=2;
			try { DebugEnterSubRule(61);
			try { DebugEnterDecision(61, false);
			int LA61_1 = input.LA(1);

			if ((LA61_1==157||LA61_1==168))
			{
				alt61 = 1;
			}
			} finally { DebugExitDecision(61); }
			switch (alt61)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:229:2: anonymous_function_parameter_modifier
				{
				DebugLocation(229, 2);
				PushFollow(Follow._anonymous_function_parameter_modifier_in_explicit_anonymous_function_parameter1804);
				anonymous_function_parameter_modifier219=anonymous_function_parameter_modifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, anonymous_function_parameter_modifier219.Tree, anonymous_function_parameter_modifier219, "anonymous_function_parameter_modifier219", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(61); }

			DebugLocation(229, 43);
			PushFollow(Follow._type_in_explicit_anonymous_function_parameter1809);
			type220=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type220.Tree, type220, "type220", retval);
			DebugLocation(229, 50);
			PushFollow(Follow._identifier_in_explicit_anonymous_function_parameter1813);
			identifier221=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier221.Tree, identifier221, "identifier221", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("explicit_anonymous_function_parameter", 54);
			LeaveRule("explicit_anonymous_function_parameter", 54);
			LeaveRule_explicit_anonymous_function_parameter();
			if (state.backtracking > 0) { Memoize(input, 54, explicit_anonymous_function_parameter_StartIndex); }

		}
		DebugLocation(229, 59);
		} finally { DebugExitRule(GrammarFileName, "explicit_anonymous_function_parameter"); }
		return retval;

	}
	// $ANTLR end "explicit_anonymous_function_parameter"

	partial void EnterRule_anonymous_function_parameter_modifier();
	partial void LeaveRule_anonymous_function_parameter_modifier();
	// $ANTLR start "anonymous_function_parameter_modifier"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:230:1: anonymous_function_parameter_modifier : ( 'ref' | 'out' );
	[GrammarRule("anonymous_function_parameter_modifier")]
	private Antlr3AstNode anonymous_function_parameter_modifier()
	{
		EnterRule_anonymous_function_parameter_modifier();
		EnterRule("anonymous_function_parameter_modifier", 55);
		var retval = new Antlr3AstNode("anonymous_function_parameter_modifier");
		
		retval.Start = (IToken)input.LT(1);
		int anonymous_function_parameter_modifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set222 = default(IToken);

		object set222_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "anonymous_function_parameter_modifier");
		DebugLocation(230, 14);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 55)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:230:38: ( 'ref' | 'out' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(230, 38);

			set222=(IToken)input.LT(1);
			if (input.LA(1)==157||input.LA(1)==168)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set222, "set222", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("anonymous_function_parameter_modifier", 55);
			LeaveRule("anonymous_function_parameter_modifier", 55);
			LeaveRule_anonymous_function_parameter_modifier();
			if (state.backtracking > 0) { Memoize(input, 55, anonymous_function_parameter_modifier_StartIndex); }

		}
		DebugLocation(231, 14);
		} finally { DebugExitRule(GrammarFileName, "anonymous_function_parameter_modifier"); }
		return retval;

	}
	// $ANTLR end "anonymous_function_parameter_modifier"

	partial void EnterRule_object_creation_expression();
	partial void LeaveRule_object_creation_expression();
	// $ANTLR start "object_creation_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:235:1: object_creation_expression : type ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer ) ;
	[GrammarRule("object_creation_expression")]
	private Antlr3AstNode object_creation_expression()
	{
		EnterRule_object_creation_expression();
		EnterRule("object_creation_expression", 56);
		var retval = new Antlr3AstNode("object_creation_expression");
		
		retval.Start = (IToken)input.LT(1);
		int object_creation_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal224 = default(IToken);
		IToken char_literal226 = default(IToken);
		Antlr3AstNode type223 = default(Antlr3AstNode);
		Antlr3AstNode argument_list225 = default(Antlr3AstNode);
		Antlr3AstNode object_or_collection_initializer227 = default(Antlr3AstNode);
		Antlr3AstNode object_or_collection_initializer228 = default(Antlr3AstNode);

		object char_literal224_tree = default(object);
		object char_literal226_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "object_creation_expression");
		DebugLocation(235, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 56)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:235:27: ( type ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:237:2: type ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(237, 2);
			PushFollow(Follow._type_in_object_creation_expression1837);
			type223=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type223.Tree, type223, "type223", retval);
			DebugLocation(238, 3);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:238:3: ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer )
			int alt64=2;
			try { DebugEnterSubRule(64);
			try { DebugEnterDecision(64, false);
			int LA64_1 = input.LA(1);

			if ((LA64_1==68))
			{
				alt64 = 1;
			}
			else if ((LA64_1==199))
			{
				alt64 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 64, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(64); }
			switch (alt64)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:238:5: '(' ( argument_list )? ')' ( object_or_collection_initializer )?
				{
				DebugLocation(238, 5);
				char_literal224=(IToken)Match(input,68,Follow._68_in_object_creation_expression1846); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal224_tree = (object)adaptor.Create(char_literal224, "char_literal224", retval);
				adaptor.AddChild(root_0, char_literal224_tree);
				}
				DebugLocation(238, 11);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:238:11: ( argument_list )?
				int alt62=2;
				try { DebugEnterSubRule(62);
				try { DebugEnterDecision(62, false);
				int LA62_1 = input.LA(1);

				if ((LA62_1==Character_literal||LA62_1==FALSE||(LA62_1>=Hex_number && LA62_1<=IDENTIFIER)||(LA62_1>=MINUS && LA62_1<=NUMBER)||LA62_1==Real_literal||LA62_1==STRINGLITERAL||LA62_1==TRUE||LA62_1==Verbatim_string_literal||LA62_1==61||LA62_1==66||(LA62_1>=68 && LA62_1<=69)||(LA62_1>=71 && LA62_1<=72)||LA62_1==75||LA62_1==95||(LA62_1>=97 && LA62_1<=98)||(LA62_1>=100 && LA62_1<=105)||(LA62_1>=107 && LA62_1<=108)||(LA62_1>=111 && LA62_1<=112)||(LA62_1>=116 && LA62_1<=119)||(LA62_1>=121 && LA62_1<=122)||LA62_1==124||LA62_1==128||LA62_1==131||LA62_1==134||LA62_1==137||LA62_1==140||LA62_1==143||(LA62_1>=145 && LA62_1<=146)||(LA62_1>=148 && LA62_1<=150)||(LA62_1>=152 && LA62_1<=154)||(LA62_1>=156 && LA62_1<=157)||LA62_1==159||LA62_1==162||LA62_1==164||(LA62_1>=168 && LA62_1<=169)||LA62_1==171||(LA62_1>=173 && LA62_1<=176)||LA62_1==179||LA62_1==182||(LA62_1>=185 && LA62_1<=189)||(LA62_1>=191 && LA62_1<=192)||LA62_1==196||LA62_1==198||LA62_1==204))
				{
					alt62 = 1;
				}
				} finally { DebugExitDecision(62); }
				switch (alt62)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:238:11: argument_list
					{
					DebugLocation(238, 11);
					PushFollow(Follow._argument_list_in_object_creation_expression1850);
					argument_list225=argument_list();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, argument_list225.Tree, argument_list225, "argument_list225", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(62); }

				DebugLocation(238, 28);
				char_literal226=(IToken)Match(input,RPAREN,Follow._RPAREN_in_object_creation_expression1855); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal226_tree = (object)adaptor.Create(char_literal226, "char_literal226", retval);
				adaptor.AddChild(root_0, char_literal226_tree);
				}
				DebugLocation(238, 34);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:238:34: ( object_or_collection_initializer )?
				int alt63=2;
				try { DebugEnterSubRule(63);
				try { DebugEnterDecision(63, false);
				int LA63_1 = input.LA(1);

				if ((LA63_1==199))
				{
					alt63 = 1;
				}
				} finally { DebugExitDecision(63); }
				switch (alt63)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:238:34: object_or_collection_initializer
					{
					DebugLocation(238, 34);
					PushFollow(Follow._object_or_collection_initializer_in_object_creation_expression1859);
					object_or_collection_initializer227=object_or_collection_initializer();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, object_or_collection_initializer227.Tree, object_or_collection_initializer227, "object_or_collection_initializer227", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(63); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:239:7: object_or_collection_initializer
				{
				DebugLocation(239, 7);
				PushFollow(Follow._object_or_collection_initializer_in_object_creation_expression1870);
				object_or_collection_initializer228=object_or_collection_initializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, object_or_collection_initializer228.Tree, object_or_collection_initializer228, "object_or_collection_initializer228", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(64); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("object_creation_expression", 56);
			LeaveRule("object_creation_expression", 56);
			LeaveRule_object_creation_expression();
			if (state.backtracking > 0) { Memoize(input, 56, object_creation_expression_StartIndex); }

		}
		DebugLocation(240, 1);
		} finally { DebugExitRule(GrammarFileName, "object_creation_expression"); }
		return retval;

	}
	// $ANTLR end "object_creation_expression"

	partial void EnterRule_object_or_collection_initializer();
	partial void LeaveRule_object_or_collection_initializer();
	// $ANTLR start "object_or_collection_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:241:1: object_or_collection_initializer : '{' ( object_initializer | collection_initializer )? '}' ;
	[GrammarRule("object_or_collection_initializer")]
	private Antlr3AstNode object_or_collection_initializer()
	{
		EnterRule_object_or_collection_initializer();
		EnterRule("object_or_collection_initializer", 57);
		var retval = new Antlr3AstNode("object_or_collection_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int object_or_collection_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal229 = default(IToken);
		IToken char_literal232 = default(IToken);
		Antlr3AstNode object_initializer230 = default(Antlr3AstNode);
		Antlr3AstNode collection_initializer231 = default(Antlr3AstNode);

		object char_literal229_tree = default(object);
		object char_literal232_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "object_or_collection_initializer");
		DebugLocation(241, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 57)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:241:33: ( '{' ( object_initializer | collection_initializer )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:242:2: '{' ( object_initializer | collection_initializer )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(242, 2);
			char_literal229=(IToken)Match(input,199,Follow._199_in_object_or_collection_initializer1882); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal229_tree = (object)adaptor.Create(char_literal229, "char_literal229", retval);
			adaptor.AddChild(root_0, char_literal229_tree);
			}
			DebugLocation(242, 6);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:242:6: ( object_initializer | collection_initializer )?
			int alt65=3;
			try { DebugEnterSubRule(65);
			try { DebugEnterDecision(65, false);
			switch (input.LA(1))
			{
			case 134:
				{
				int LA65_2 = input.LA(2);

				if ((LA65_2==85))
				{
					alt65 = 1;
				}
				else if ((LA65_2==DOT||LA65_2==GT||LA65_2==IDENTIFIER||LA65_2==MINUS||LA65_2==PTR||(LA65_2>=62 && LA65_2<=63)||(LA65_2>=65 && LA65_2<=66)||(LA65_2>=68 && LA65_2<=69)||(LA65_2>=71 && LA65_2<=72)||(LA65_2>=74 && LA65_2<=75)||LA65_2==77||(LA65_2>=80 && LA65_2<=82)||LA65_2==84||(LA65_2>=86 && LA65_2<=91)||LA65_2==93||LA65_2==95||(LA65_2>=97 && LA65_2<=101)||LA65_2==105||(LA65_2>=107 && LA65_2<=108)||LA65_2==111||LA65_2==116||LA65_2==119||(LA65_2>=121 && LA65_2<=122)||LA65_2==124||LA65_2==128||LA65_2==131||LA65_2==134||LA65_2==137||LA65_2==140||(LA65_2>=143 && LA65_2<=146)||(LA65_2>=148 && LA65_2<=150)||(LA65_2>=153 && LA65_2<=154)||LA65_2==156||LA65_2==159||LA65_2==162||LA65_2==164||LA65_2==169||LA65_2==171||(LA65_2>=173 && LA65_2<=175)||LA65_2==179||LA65_2==185||(LA65_2>=187 && LA65_2<=188)||(LA65_2>=191 && LA65_2<=192)||LA65_2==194||LA65_2==196||LA65_2==198||LA65_2==200||(LA65_2>=202 && LA65_2<=203)))
				{
					alt65 = 2;
				}
				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case MINUS:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 61:
			case 66:
			case 68:
			case 69:
			case 71:
			case 72:
			case 75:
			case 102:
			case 103:
			case 104:
			case 105:
			case 108:
			case 111:
			case 112:
			case 116:
			case 117:
			case 118:
			case 121:
			case 131:
			case 140:
			case 148:
			case 152:
			case 153:
			case 171:
			case 175:
			case 176:
			case 179:
			case 182:
			case 186:
			case 187:
			case 188:
			case 189:
			case 191:
			case 199:
			case 204:
				{
				alt65 = 2;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 107:
			case 119:
			case 122:
			case 124:
			case 128:
			case 137:
			case 143:
			case 145:
			case 146:
			case 149:
			case 150:
			case 154:
			case 156:
			case 159:
			case 162:
			case 164:
			case 169:
			case 173:
			case 174:
			case 185:
			case 192:
			case 196:
			case 198:
				{
				int LA65_2 = input.LA(2);

				if ((LA65_2==85))
				{
					alt65 = 1;
				}
				else if ((LA65_2==DOT||LA65_2==GT||LA65_2==MINUS||LA65_2==PTR||(LA65_2>=62 && LA65_2<=63)||(LA65_2>=65 && LA65_2<=66)||(LA65_2>=68 && LA65_2<=69)||(LA65_2>=71 && LA65_2<=72)||(LA65_2>=74 && LA65_2<=75)||LA65_2==77||(LA65_2>=80 && LA65_2<=82)||LA65_2==84||(LA65_2>=86 && LA65_2<=91)||LA65_2==93||LA65_2==99||LA65_2==144||LA65_2==200||(LA65_2>=202 && LA65_2<=203)))
				{
					alt65 = 2;
				}
				}
				break;
			}

			} finally { DebugExitDecision(65); }
			switch (alt65)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:242:7: object_initializer
				{
				DebugLocation(242, 7);
				PushFollow(Follow._object_initializer_in_object_or_collection_initializer1885);
				object_initializer230=object_initializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, object_initializer230.Tree, object_initializer230, "object_initializer230", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:242:28: collection_initializer
				{
				DebugLocation(242, 28);
				PushFollow(Follow._collection_initializer_in_object_or_collection_initializer1889);
				collection_initializer231=collection_initializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, collection_initializer231.Tree, collection_initializer231, "collection_initializer231", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(65); }

			DebugLocation(242, 53);
			char_literal232=(IToken)Match(input,203,Follow._203_in_object_or_collection_initializer1893); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal232_tree = (object)adaptor.Create(char_literal232, "char_literal232", retval);
			adaptor.AddChild(root_0, char_literal232_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("object_or_collection_initializer", 57);
			LeaveRule("object_or_collection_initializer", 57);
			LeaveRule_object_or_collection_initializer();
			if (state.backtracking > 0) { Memoize(input, 57, object_or_collection_initializer_StartIndex); }

		}
		DebugLocation(243, 1);
		} finally { DebugExitRule(GrammarFileName, "object_or_collection_initializer"); }
		return retval;

	}
	// $ANTLR end "object_or_collection_initializer"

	partial void EnterRule_collection_initializer();
	partial void LeaveRule_collection_initializer();
	// $ANTLR start "collection_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:244:1: collection_initializer : element_initializer ( ',' element_initializer )* ( ',' )? ;
	[GrammarRule("collection_initializer")]
	private Antlr3AstNode collection_initializer()
	{
		EnterRule_collection_initializer();
		EnterRule("collection_initializer", 58);
		var retval = new Antlr3AstNode("collection_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int collection_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal234 = default(IToken);
		IToken char_literal236 = default(IToken);
		Antlr3AstNode element_initializer233 = default(Antlr3AstNode);
		Antlr3AstNode element_initializer235 = default(Antlr3AstNode);

		object char_literal234_tree = default(object);
		object char_literal236_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "collection_initializer");
		DebugLocation(244, 53);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 58)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:244:23: ( element_initializer ( ',' element_initializer )* ( ',' )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:245:2: element_initializer ( ',' element_initializer )* ( ',' )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(245, 2);
			PushFollow(Follow._element_initializer_in_collection_initializer1903);
			element_initializer233=element_initializer();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, element_initializer233.Tree, element_initializer233, "element_initializer233", retval);
			DebugLocation(245, 23);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:245:23: ( ',' element_initializer )*
			try { DebugEnterSubRule(66);
			while (true)
			{
				int alt66=2;
				try { DebugEnterDecision(66, false);
				int LA66_1 = input.LA(1);

				if ((LA66_1==74))
				{
					int LA66_2 = input.LA(2);

					if ((LA66_2==Character_literal||LA66_2==FALSE||(LA66_2>=Hex_number && LA66_2<=IDENTIFIER)||(LA66_2>=MINUS && LA66_2<=NUMBER)||LA66_2==Real_literal||LA66_2==STRINGLITERAL||LA66_2==TRUE||LA66_2==Verbatim_string_literal||LA66_2==61||LA66_2==66||(LA66_2>=68 && LA66_2<=69)||(LA66_2>=71 && LA66_2<=72)||LA66_2==75||LA66_2==95||(LA66_2>=97 && LA66_2<=98)||(LA66_2>=100 && LA66_2<=105)||(LA66_2>=107 && LA66_2<=108)||(LA66_2>=111 && LA66_2<=112)||(LA66_2>=116 && LA66_2<=119)||(LA66_2>=121 && LA66_2<=122)||LA66_2==124||LA66_2==128||LA66_2==131||LA66_2==134||LA66_2==137||LA66_2==140||LA66_2==143||(LA66_2>=145 && LA66_2<=146)||(LA66_2>=148 && LA66_2<=150)||(LA66_2>=152 && LA66_2<=154)||LA66_2==156||LA66_2==159||LA66_2==162||LA66_2==164||LA66_2==169||LA66_2==171||(LA66_2>=173 && LA66_2<=176)||LA66_2==179||LA66_2==182||(LA66_2>=185 && LA66_2<=189)||(LA66_2>=191 && LA66_2<=192)||LA66_2==196||(LA66_2>=198 && LA66_2<=199)||LA66_2==204))
					{
						alt66 = 1;
					}


				}


				} finally { DebugExitDecision(66); }
				switch ( alt66 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:245:24: ',' element_initializer
					{
					DebugLocation(245, 24);
					char_literal234=(IToken)Match(input,74,Follow._74_in_collection_initializer1907); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal234_tree = (object)adaptor.Create(char_literal234, "char_literal234", retval);
					adaptor.AddChild(root_0, char_literal234_tree);
					}
					DebugLocation(245, 28);
					PushFollow(Follow._element_initializer_in_collection_initializer1909);
					element_initializer235=element_initializer();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, element_initializer235.Tree, element_initializer235, "element_initializer235", retval);

					}
					break;

				default:
					goto loop66;
				}
			}

			loop66:
				;

			} finally { DebugExitSubRule(66); }

			DebugLocation(245, 50);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:245:50: ( ',' )?
			int alt67=2;
			try { DebugEnterSubRule(67);
			try { DebugEnterDecision(67, false);
			int LA67_1 = input.LA(1);

			if ((LA67_1==74))
			{
				alt67 = 1;
			}
			} finally { DebugExitDecision(67); }
			switch (alt67)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:245:50: ','
				{
				DebugLocation(245, 50);
				char_literal236=(IToken)Match(input,74,Follow._74_in_collection_initializer1913); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal236_tree = (object)adaptor.Create(char_literal236, "char_literal236", retval);
				adaptor.AddChild(root_0, char_literal236_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(67); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("collection_initializer", 58);
			LeaveRule("collection_initializer", 58);
			LeaveRule_collection_initializer();
			if (state.backtracking > 0) { Memoize(input, 58, collection_initializer_StartIndex); }

		}
		DebugLocation(245, 53);
		} finally { DebugExitRule(GrammarFileName, "collection_initializer"); }
		return retval;

	}
	// $ANTLR end "collection_initializer"

	partial void EnterRule_element_initializer();
	partial void LeaveRule_element_initializer();
	// $ANTLR start "element_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:246:1: element_initializer : ( non_assignment_expression | '{' expression_list '}' );
	[GrammarRule("element_initializer")]
	private Antlr3AstNode element_initializer()
	{
		EnterRule_element_initializer();
		EnterRule("element_initializer", 59);
		var retval = new Antlr3AstNode("element_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int element_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal238 = default(IToken);
		IToken char_literal240 = default(IToken);
		Antlr3AstNode non_assignment_expression237 = default(Antlr3AstNode);
		Antlr3AstNode expression_list239 = default(Antlr3AstNode);

		object char_literal238_tree = default(object);
		object char_literal240_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "element_initializer");
		DebugLocation(246, 31);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 59)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:246:20: ( non_assignment_expression | '{' expression_list '}' )
			int alt68=2;
			try { DebugEnterDecision(68, false);
			int LA68_1 = input.LA(1);

			if ((LA68_1==Character_literal||LA68_1==FALSE||(LA68_1>=Hex_number && LA68_1<=IDENTIFIER)||(LA68_1>=MINUS && LA68_1<=NUMBER)||LA68_1==Real_literal||LA68_1==STRINGLITERAL||LA68_1==TRUE||LA68_1==Verbatim_string_literal||LA68_1==61||LA68_1==66||(LA68_1>=68 && LA68_1<=69)||(LA68_1>=71 && LA68_1<=72)||LA68_1==75||LA68_1==95||(LA68_1>=97 && LA68_1<=98)||(LA68_1>=100 && LA68_1<=105)||(LA68_1>=107 && LA68_1<=108)||(LA68_1>=111 && LA68_1<=112)||(LA68_1>=116 && LA68_1<=119)||(LA68_1>=121 && LA68_1<=122)||LA68_1==124||LA68_1==128||LA68_1==131||LA68_1==134||LA68_1==137||LA68_1==140||LA68_1==143||(LA68_1>=145 && LA68_1<=146)||(LA68_1>=148 && LA68_1<=150)||(LA68_1>=152 && LA68_1<=154)||LA68_1==156||LA68_1==159||LA68_1==162||LA68_1==164||LA68_1==169||LA68_1==171||(LA68_1>=173 && LA68_1<=176)||LA68_1==179||LA68_1==182||(LA68_1>=185 && LA68_1<=189)||(LA68_1>=191 && LA68_1<=192)||LA68_1==196||LA68_1==198||LA68_1==204))
			{
				alt68 = 1;
			}
			else if ((LA68_1==199))
			{
				alt68 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 68, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(68); }
			switch (alt68)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:247:2: non_assignment_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(247, 2);
				PushFollow(Follow._non_assignment_expression_in_element_initializer1922);
				non_assignment_expression237=non_assignment_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, non_assignment_expression237.Tree, non_assignment_expression237, "non_assignment_expression237", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:248:4: '{' expression_list '}'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(248, 4);
				char_literal238=(IToken)Match(input,199,Follow._199_in_element_initializer1928); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal238_tree = (object)adaptor.Create(char_literal238, "char_literal238", retval);
				adaptor.AddChild(root_0, char_literal238_tree);
				}
				DebugLocation(248, 10);
				PushFollow(Follow._expression_list_in_element_initializer1932);
				expression_list239=expression_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression_list239.Tree, expression_list239, "expression_list239", retval);
				DebugLocation(248, 28);
				char_literal240=(IToken)Match(input,203,Follow._203_in_element_initializer1936); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal240_tree = (object)adaptor.Create(char_literal240, "char_literal240", retval);
				adaptor.AddChild(root_0, char_literal240_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("element_initializer", 59);
			LeaveRule("element_initializer", 59);
			LeaveRule_element_initializer();
			if (state.backtracking > 0) { Memoize(input, 59, element_initializer_StartIndex); }

		}
		DebugLocation(248, 31);
		} finally { DebugExitRule(GrammarFileName, "element_initializer"); }
		return retval;

	}
	// $ANTLR end "element_initializer"

	partial void EnterRule_object_initializer();
	partial void LeaveRule_object_initializer();
	// $ANTLR start "object_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:255:1: object_initializer : member_initializer ( ',' member_initializer )* ( ',' )? ;
	[GrammarRule("object_initializer")]
	private Antlr3AstNode object_initializer()
	{
		EnterRule_object_initializer();
		EnterRule("object_initializer", 60);
		var retval = new Antlr3AstNode("object_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int object_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal242 = default(IToken);
		IToken char_literal244 = default(IToken);
		Antlr3AstNode member_initializer241 = default(Antlr3AstNode);
		Antlr3AstNode member_initializer243 = default(Antlr3AstNode);

		object char_literal242_tree = default(object);
		object char_literal244_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "object_initializer");
		DebugLocation(255, 51);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 60)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:255:19: ( member_initializer ( ',' member_initializer )* ( ',' )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:256:2: member_initializer ( ',' member_initializer )* ( ',' )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(256, 2);
			PushFollow(Follow._member_initializer_in_object_initializer1951);
			member_initializer241=member_initializer();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, member_initializer241.Tree, member_initializer241, "member_initializer241", retval);
			DebugLocation(256, 22);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:256:22: ( ',' member_initializer )*
			try { DebugEnterSubRule(69);
			while (true)
			{
				int alt69=2;
				try { DebugEnterDecision(69, false);
				int LA69_1 = input.LA(1);

				if ((LA69_1==74))
				{
					int LA69_2 = input.LA(2);

					if ((LA69_2==IDENTIFIER||LA69_2==95||(LA69_2>=97 && LA69_2<=98)||(LA69_2>=100 && LA69_2<=101)||LA69_2==107||LA69_2==119||LA69_2==122||LA69_2==124||LA69_2==128||LA69_2==134||LA69_2==137||LA69_2==143||(LA69_2>=145 && LA69_2<=146)||(LA69_2>=149 && LA69_2<=150)||LA69_2==154||LA69_2==156||LA69_2==159||LA69_2==162||LA69_2==164||LA69_2==169||(LA69_2>=173 && LA69_2<=174)||LA69_2==185||LA69_2==192||LA69_2==196||LA69_2==198))
					{
						alt69 = 1;
					}


				}


				} finally { DebugExitDecision(69); }
				switch ( alt69 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:256:23: ',' member_initializer
					{
					DebugLocation(256, 23);
					char_literal242=(IToken)Match(input,74,Follow._74_in_object_initializer1955); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal242_tree = (object)adaptor.Create(char_literal242, "char_literal242", retval);
					adaptor.AddChild(root_0, char_literal242_tree);
					}
					DebugLocation(256, 27);
					PushFollow(Follow._member_initializer_in_object_initializer1957);
					member_initializer243=member_initializer();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, member_initializer243.Tree, member_initializer243, "member_initializer243", retval);

					}
					break;

				default:
					goto loop69;
				}
			}

			loop69:
				;

			} finally { DebugExitSubRule(69); }

			DebugLocation(256, 48);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:256:48: ( ',' )?
			int alt70=2;
			try { DebugEnterSubRule(70);
			try { DebugEnterDecision(70, false);
			int LA70_1 = input.LA(1);

			if ((LA70_1==74))
			{
				alt70 = 1;
			}
			} finally { DebugExitDecision(70); }
			switch (alt70)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:256:48: ','
				{
				DebugLocation(256, 48);
				char_literal244=(IToken)Match(input,74,Follow._74_in_object_initializer1961); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal244_tree = (object)adaptor.Create(char_literal244, "char_literal244", retval);
				adaptor.AddChild(root_0, char_literal244_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(70); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("object_initializer", 60);
			LeaveRule("object_initializer", 60);
			LeaveRule_object_initializer();
			if (state.backtracking > 0) { Memoize(input, 60, object_initializer_StartIndex); }

		}
		DebugLocation(256, 51);
		} finally { DebugExitRule(GrammarFileName, "object_initializer"); }
		return retval;

	}
	// $ANTLR end "object_initializer"

	partial void EnterRule_member_initializer();
	partial void LeaveRule_member_initializer();
	// $ANTLR start "member_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:257:1: member_initializer : identifier '=' initializer_value ;
	[GrammarRule("member_initializer")]
	private Antlr3AstNode member_initializer()
	{
		EnterRule_member_initializer();
		EnterRule("member_initializer", 61);
		var retval = new Antlr3AstNode("member_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int member_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal246 = default(IToken);
		Antlr3AstNode identifier245 = default(Antlr3AstNode);
		Antlr3AstNode initializer_value247 = default(Antlr3AstNode);

		object char_literal246_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "member_initializer");
		DebugLocation(257, 33);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 61)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:257:19: ( identifier '=' initializer_value )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:258:2: identifier '=' initializer_value
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(258, 2);
			PushFollow(Follow._identifier_in_member_initializer1970);
			identifier245=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier245.Tree, identifier245, "identifier245", retval);
			DebugLocation(258, 13);
			char_literal246=(IToken)Match(input,85,Follow._85_in_member_initializer1972); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal246_tree = (object)adaptor.Create(char_literal246, "char_literal246", retval);
			adaptor.AddChild(root_0, char_literal246_tree);
			}
			DebugLocation(258, 17);
			PushFollow(Follow._initializer_value_in_member_initializer1974);
			initializer_value247=initializer_value();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, initializer_value247.Tree, initializer_value247, "initializer_value247", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("member_initializer", 61);
			LeaveRule("member_initializer", 61);
			LeaveRule_member_initializer();
			if (state.backtracking > 0) { Memoize(input, 61, member_initializer_StartIndex); }

		}
		DebugLocation(258, 33);
		} finally { DebugExitRule(GrammarFileName, "member_initializer"); }
		return retval;

	}
	// $ANTLR end "member_initializer"

	partial void EnterRule_initializer_value();
	partial void LeaveRule_initializer_value();
	// $ANTLR start "initializer_value"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:259:1: initializer_value : ( expression | object_or_collection_initializer );
	[GrammarRule("initializer_value")]
	private Antlr3AstNode initializer_value()
	{
		EnterRule_initializer_value();
		EnterRule("initializer_value", 62);
		var retval = new Antlr3AstNode("initializer_value");
		
		retval.Start = (IToken)input.LT(1);
		int initializer_value_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode expression248 = default(Antlr3AstNode);
		Antlr3AstNode object_or_collection_initializer249 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "initializer_value");
		DebugLocation(259, 36);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 62)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:259:18: ( expression | object_or_collection_initializer )
			int alt71=2;
			try { DebugEnterDecision(71, false);
			int LA71_1 = input.LA(1);

			if ((LA71_1==Character_literal||LA71_1==FALSE||(LA71_1>=Hex_number && LA71_1<=IDENTIFIER)||(LA71_1>=MINUS && LA71_1<=NUMBER)||LA71_1==Real_literal||LA71_1==STRINGLITERAL||LA71_1==TRUE||LA71_1==Verbatim_string_literal||LA71_1==61||LA71_1==66||(LA71_1>=68 && LA71_1<=69)||(LA71_1>=71 && LA71_1<=72)||LA71_1==75||LA71_1==95||(LA71_1>=97 && LA71_1<=98)||(LA71_1>=100 && LA71_1<=105)||(LA71_1>=107 && LA71_1<=108)||(LA71_1>=111 && LA71_1<=112)||(LA71_1>=116 && LA71_1<=119)||(LA71_1>=121 && LA71_1<=122)||LA71_1==124||LA71_1==128||LA71_1==131||LA71_1==134||LA71_1==137||LA71_1==140||LA71_1==143||(LA71_1>=145 && LA71_1<=146)||(LA71_1>=148 && LA71_1<=150)||(LA71_1>=152 && LA71_1<=154)||LA71_1==156||LA71_1==159||LA71_1==162||LA71_1==164||LA71_1==169||LA71_1==171||(LA71_1>=173 && LA71_1<=176)||LA71_1==179||LA71_1==182||(LA71_1>=185 && LA71_1<=189)||(LA71_1>=191 && LA71_1<=192)||LA71_1==196||LA71_1==198||LA71_1==204))
			{
				alt71 = 1;
			}
			else if ((LA71_1==199))
			{
				alt71 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 71, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(71); }
			switch (alt71)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:260:2: expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(260, 2);
				PushFollow(Follow._expression_in_initializer_value1982);
				expression248=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression248.Tree, expression248, "expression248", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:261:4: object_or_collection_initializer
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(261, 4);
				PushFollow(Follow._object_or_collection_initializer_in_initializer_value1988);
				object_or_collection_initializer249=object_or_collection_initializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, object_or_collection_initializer249.Tree, object_or_collection_initializer249, "object_or_collection_initializer249", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("initializer_value", 62);
			LeaveRule("initializer_value", 62);
			LeaveRule_initializer_value();
			if (state.backtracking > 0) { Memoize(input, 62, initializer_value_StartIndex); }

		}
		DebugLocation(261, 36);
		} finally { DebugExitRule(GrammarFileName, "initializer_value"); }
		return retval;

	}
	// $ANTLR end "initializer_value"

	partial void EnterRule_typeof_expression();
	partial void LeaveRule_typeof_expression();
	// $ANTLR start "typeof_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:265:1: typeof_expression : 'typeof' '(' ( ( unbound_type_name )=> unbound_type_name | type | 'void' ) ')' ;
	[GrammarRule("typeof_expression")]
	private Antlr3AstNode typeof_expression()
	{
		EnterRule_typeof_expression();
		EnterRule("typeof_expression", 63);
		var retval = new Antlr3AstNode("typeof_expression");
		
		retval.Start = (IToken)input.LT(1);
		int typeof_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal250 = default(IToken);
		IToken char_literal251 = default(IToken);
		IToken string_literal254 = default(IToken);
		IToken char_literal255 = default(IToken);
		Antlr3AstNode unbound_type_name252 = default(Antlr3AstNode);
		Antlr3AstNode type253 = default(Antlr3AstNode);

		object string_literal250_tree = default(object);
		object char_literal251_tree = default(object);
		object string_literal254_tree = default(object);
		object char_literal255_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeof_expression");
		DebugLocation(265, 23);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 63)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:265:18: ( 'typeof' '(' ( ( unbound_type_name )=> unbound_type_name | type | 'void' ) ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:266:2: 'typeof' '(' ( ( unbound_type_name )=> unbound_type_name | type | 'void' ) ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(266, 2);
			string_literal250=(IToken)Match(input,186,Follow._186_in_typeof_expression2000); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal250_tree = (object)adaptor.Create(string_literal250, "string_literal250", retval);
			adaptor.AddChild(root_0, string_literal250_tree);
			}
			DebugLocation(266, 13);
			char_literal251=(IToken)Match(input,68,Follow._68_in_typeof_expression2004); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal251_tree = (object)adaptor.Create(char_literal251, "char_literal251", retval);
			adaptor.AddChild(root_0, char_literal251_tree);
			}
			DebugLocation(266, 19);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:266:19: ( ( unbound_type_name )=> unbound_type_name | type | 'void' )
			int alt72=3;
			try { DebugEnterSubRule(72);
			try { DebugEnterDecision(72, false);
			try
			{
				alt72 = dfa72.Predict(input);
			}
			catch (NoViableAltException nvae)
			{
				DebugRecognitionException(nvae);
				throw;
			}
			} finally { DebugExitDecision(72); }
			switch (alt72)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:266:20: ( unbound_type_name )=> unbound_type_name
				{
				DebugLocation(266, 43);
				PushFollow(Follow._unbound_type_name_in_typeof_expression2015);
				unbound_type_name252=unbound_type_name();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unbound_type_name252.Tree, unbound_type_name252, "unbound_type_name252", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:267:10: type
				{
				DebugLocation(267, 10);
				PushFollow(Follow._type_in_typeof_expression2026);
				type253=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type253.Tree, type253, "type253", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:268:10: 'void'
				{
				DebugLocation(268, 10);
				string_literal254=(IToken)Match(input,194,Follow._194_in_typeof_expression2038); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal254_tree = (object)adaptor.Create(string_literal254, "string_literal254", retval);
				adaptor.AddChild(root_0, string_literal254_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(72); }

			DebugLocation(268, 20);
			char_literal255=(IToken)Match(input,RPAREN,Follow._RPAREN_in_typeof_expression2043); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal255_tree = (object)adaptor.Create(char_literal255, "char_literal255", retval);
			adaptor.AddChild(root_0, char_literal255_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeof_expression", 63);
			LeaveRule("typeof_expression", 63);
			LeaveRule_typeof_expression();
			if (state.backtracking > 0) { Memoize(input, 63, typeof_expression_StartIndex); }

		}
		DebugLocation(268, 23);
		} finally { DebugExitRule(GrammarFileName, "typeof_expression"); }
		return retval;

	}
	// $ANTLR end "typeof_expression"

	partial void EnterRule_unbound_type_name();
	partial void LeaveRule_unbound_type_name();
	// $ANTLR start "unbound_type_name"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:273:1: unbound_type_name : unbound_type_name_start ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )* generic_dimension_specifier ;
	[GrammarRule("unbound_type_name")]
	private Antlr3AstNode unbound_type_name()
	{
		EnterRule_unbound_type_name();
		EnterRule("unbound_type_name", 64);
		var retval = new Antlr3AstNode("unbound_type_name");
		
		retval.Start = (IToken)input.LT(1);
		int unbound_type_name_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode unbound_type_name_start256 = default(Antlr3AstNode);
		Antlr3AstNode generic_dimension_specifier257 = default(Antlr3AstNode);
		Antlr3AstNode unbound_type_name_part258 = default(Antlr3AstNode);
		Antlr3AstNode unbound_type_name_part259 = default(Antlr3AstNode);
		Antlr3AstNode generic_dimension_specifier260 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "unbound_type_name");
		DebugLocation(273, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 64)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:273:18: ( unbound_type_name_start ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )* generic_dimension_specifier )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:275:2: unbound_type_name_start ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )* generic_dimension_specifier
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(275, 2);
			PushFollow(Follow._unbound_type_name_start_in_unbound_type_name2058);
			unbound_type_name_start256=unbound_type_name_start();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, unbound_type_name_start256.Tree, unbound_type_name_start256, "unbound_type_name_start256", retval);
			DebugLocation(276, 3);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:276:3: ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )*
			try { DebugEnterSubRule(73);
			while (true)
			{
				int alt73=3;
				try { DebugEnterDecision(73, false);
				try
				{
					alt73 = dfa73.Predict(input);
				}
				catch (NoViableAltException nvae)
				{
					DebugRecognitionException(nvae);
					throw;
				}
				} finally { DebugExitDecision(73); }
				switch ( alt73 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:276:4: ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part )
					{
					DebugLocation(276, 4);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:276:4: ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part )
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:276:5: ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part
					{
					DebugLocation(276, 44);
					PushFollow(Follow._generic_dimension_specifier_in_unbound_type_name2077);
					generic_dimension_specifier257=generic_dimension_specifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, generic_dimension_specifier257.Tree, generic_dimension_specifier257, "generic_dimension_specifier257", retval);
					DebugLocation(276, 74);
					PushFollow(Follow._unbound_type_name_part_in_unbound_type_name2081);
					unbound_type_name_part258=unbound_type_name_part();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, unbound_type_name_part258.Tree, unbound_type_name_part258, "unbound_type_name_part258", retval);

					}


					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:277:5: unbound_type_name_part
					{
					DebugLocation(277, 5);
					PushFollow(Follow._unbound_type_name_part_in_unbound_type_name2088);
					unbound_type_name_part259=unbound_type_name_part();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, unbound_type_name_part259.Tree, unbound_type_name_part259, "unbound_type_name_part259", retval);

					}
					break;

				default:
					goto loop73;
				}
			}

			loop73:
				;

			} finally { DebugExitSubRule(73); }

			DebugLocation(278, 4);
			PushFollow(Follow._generic_dimension_specifier_in_unbound_type_name2098);
			generic_dimension_specifier260=generic_dimension_specifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, generic_dimension_specifier260.Tree, generic_dimension_specifier260, "generic_dimension_specifier260", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unbound_type_name", 64);
			LeaveRule("unbound_type_name", 64);
			LeaveRule_unbound_type_name();
			if (state.backtracking > 0) { Memoize(input, 64, unbound_type_name_StartIndex); }

		}
		DebugLocation(279, 1);
		} finally { DebugExitRule(GrammarFileName, "unbound_type_name"); }
		return retval;

	}
	// $ANTLR end "unbound_type_name"

	partial void EnterRule_unbound_type_name_start();
	partial void LeaveRule_unbound_type_name_start();
	// $ANTLR start "unbound_type_name_start"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:281:1: unbound_type_name_start : identifier ( '::' identifier )? ;
	[GrammarRule("unbound_type_name_start")]
	private Antlr3AstNode unbound_type_name_start()
	{
		EnterRule_unbound_type_name_start();
		EnterRule("unbound_type_name_start", 65);
		var retval = new Antlr3AstNode("unbound_type_name_start");
		
		retval.Start = (IToken)input.LT(1);
		int unbound_type_name_start_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal262 = default(IToken);
		Antlr3AstNode identifier261 = default(Antlr3AstNode);
		Antlr3AstNode identifier263 = default(Antlr3AstNode);

		object string_literal262_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "unbound_type_name_start");
		DebugLocation(281, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 65)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:281:24: ( identifier ( '::' identifier )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:282:2: identifier ( '::' identifier )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(282, 2);
			PushFollow(Follow._identifier_in_unbound_type_name_start2108);
			identifier261=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier261.Tree, identifier261, "identifier261", retval);
			DebugLocation(282, 13);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:282:13: ( '::' identifier )?
			int alt74=2;
			try { DebugEnterSubRule(74);
			try { DebugEnterDecision(74, false);
			int LA74_1 = input.LA(1);

			if ((LA74_1==80))
			{
				alt74 = 1;
			}
			} finally { DebugExitDecision(74); }
			switch (alt74)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:282:14: '::' identifier
				{
				DebugLocation(282, 14);
				string_literal262=(IToken)Match(input,80,Follow._80_in_unbound_type_name_start2111); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal262_tree = (object)adaptor.Create(string_literal262, "string_literal262", retval);
				adaptor.AddChild(root_0, string_literal262_tree);
				}
				DebugLocation(282, 19);
				PushFollow(Follow._identifier_in_unbound_type_name_start2113);
				identifier263=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier263.Tree, identifier263, "identifier263", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(74); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unbound_type_name_start", 65);
			LeaveRule("unbound_type_name_start", 65);
			LeaveRule_unbound_type_name_start();
			if (state.backtracking > 0) { Memoize(input, 65, unbound_type_name_start_StartIndex); }

		}
		DebugLocation(282, 30);
		} finally { DebugExitRule(GrammarFileName, "unbound_type_name_start"); }
		return retval;

	}
	// $ANTLR end "unbound_type_name_start"

	partial void EnterRule_unbound_type_name_part();
	partial void LeaveRule_unbound_type_name_part();
	// $ANTLR start "unbound_type_name_part"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:283:1: unbound_type_name_part : '.' identifier ;
	[GrammarRule("unbound_type_name_part")]
	private Antlr3AstNode unbound_type_name_part()
	{
		EnterRule_unbound_type_name_part();
		EnterRule("unbound_type_name_part", 66);
		var retval = new Antlr3AstNode("unbound_type_name_part");
		
		retval.Start = (IToken)input.LT(1);
		int unbound_type_name_part_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal264 = default(IToken);
		Antlr3AstNode identifier265 = default(Antlr3AstNode);

		object char_literal264_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "unbound_type_name_part");
		DebugLocation(283, 17);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 66)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:283:23: ( '.' identifier )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:284:2: '.' identifier
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(284, 2);
			char_literal264=(IToken)Match(input,DOT,Follow._DOT_in_unbound_type_name_part2122); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal264_tree = (object)adaptor.Create(char_literal264, "char_literal264", retval);
			adaptor.AddChild(root_0, char_literal264_tree);
			}
			DebugLocation(284, 8);
			PushFollow(Follow._identifier_in_unbound_type_name_part2126);
			identifier265=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier265.Tree, identifier265, "identifier265", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unbound_type_name_part", 66);
			LeaveRule("unbound_type_name_part", 66);
			LeaveRule_unbound_type_name_part();
			if (state.backtracking > 0) { Memoize(input, 66, unbound_type_name_part_StartIndex); }

		}
		DebugLocation(284, 17);
		} finally { DebugExitRule(GrammarFileName, "unbound_type_name_part"); }
		return retval;

	}
	// $ANTLR end "unbound_type_name_part"

	partial void EnterRule_generic_dimension_specifier();
	partial void LeaveRule_generic_dimension_specifier();
	// $ANTLR start "generic_dimension_specifier"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:285:1: generic_dimension_specifier : '<' ( commas )? '>' ;
	[GrammarRule("generic_dimension_specifier")]
	private Antlr3AstNode generic_dimension_specifier()
	{
		EnterRule_generic_dimension_specifier();
		EnterRule("generic_dimension_specifier", 67);
		var retval = new Antlr3AstNode("generic_dimension_specifier");
		
		retval.Start = (IToken)input.LT(1);
		int generic_dimension_specifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal266 = default(IToken);
		IToken char_literal268 = default(IToken);
		Antlr3AstNode commas267 = default(Antlr3AstNode);

		object char_literal266_tree = default(object);
		object char_literal268_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "generic_dimension_specifier");
		DebugLocation(285, 21);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 67)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:285:28: ( '<' ( commas )? '>' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:286:2: '<' ( commas )? '>'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(286, 2);
			char_literal266=(IToken)Match(input,81,Follow._81_in_generic_dimension_specifier2134); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal266_tree = (object)adaptor.Create(char_literal266, "char_literal266", retval);
			adaptor.AddChild(root_0, char_literal266_tree);
			}
			DebugLocation(286, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:286:8: ( commas )?
			int alt75=2;
			try { DebugEnterSubRule(75);
			try { DebugEnterDecision(75, false);
			int LA75_1 = input.LA(1);

			if ((LA75_1==74))
			{
				alt75 = 1;
			}
			} finally { DebugExitDecision(75); }
			switch (alt75)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:286:8: commas
				{
				DebugLocation(286, 8);
				PushFollow(Follow._commas_in_generic_dimension_specifier2138);
				commas267=commas();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, commas267.Tree, commas267, "commas267", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(75); }

			DebugLocation(286, 18);
			char_literal268=(IToken)Match(input,GT,Follow._GT_in_generic_dimension_specifier2143); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal268_tree = (object)adaptor.Create(char_literal268, "char_literal268", retval);
			adaptor.AddChild(root_0, char_literal268_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("generic_dimension_specifier", 67);
			LeaveRule("generic_dimension_specifier", 67);
			LeaveRule_generic_dimension_specifier();
			if (state.backtracking > 0) { Memoize(input, 67, generic_dimension_specifier_StartIndex); }

		}
		DebugLocation(286, 21);
		} finally { DebugExitRule(GrammarFileName, "generic_dimension_specifier"); }
		return retval;

	}
	// $ANTLR end "generic_dimension_specifier"

	partial void EnterRule_commas();
	partial void LeaveRule_commas();
	// $ANTLR start "commas"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:287:1: commas : ( ',' )+ ;
	[GrammarRule("commas")]
	private Antlr3AstNode commas()
	{
		EnterRule_commas();
		EnterRule("commas", 68);
		var retval = new Antlr3AstNode("commas");
		
		retval.Start = (IToken)input.LT(1);
		int commas_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal269 = default(IToken);

		object char_literal269_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "commas");
		DebugLocation(287, 6);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 68)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:287:7: ( ( ',' )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:288:2: ( ',' )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(288, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:288:2: ( ',' )+
			int cnt76=0;
			try { DebugEnterSubRule(76);
			while (true)
			{
				int alt76=2;
				try { DebugEnterDecision(76, false);
				int LA76_1 = input.LA(1);

				if ((LA76_1==74))
				{
					alt76 = 1;
				}


				} finally { DebugExitDecision(76); }
				switch (alt76)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:288:2: ','
					{
					DebugLocation(288, 2);
					char_literal269=(IToken)Match(input,74,Follow._74_in_commas2152); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal269_tree = (object)adaptor.Create(char_literal269, "char_literal269", retval);
					adaptor.AddChild(root_0, char_literal269_tree);
					}

					}
					break;

				default:
					if (cnt76 >= 1)
						goto loop76;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee76 = new EarlyExitException( 76, input );
					DebugRecognitionException(eee76);
					throw eee76;
				}
				cnt76++;
			}
			loop76:
				;

			} finally { DebugExitSubRule(76); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("commas", 68);
			LeaveRule("commas", 68);
			LeaveRule_commas();
			if (state.backtracking > 0) { Memoize(input, 68, commas_StartIndex); }

		}
		DebugLocation(288, 6);
		} finally { DebugExitRule(GrammarFileName, "commas"); }
		return retval;

	}
	// $ANTLR end "commas"

	partial void EnterRule_type_name();
	partial void LeaveRule_type_name();
	// $ANTLR start "type_name"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:294:1: type_name : namespace_or_type_name ;
	[GrammarRule("type_name")]
	private Antlr3AstNode type_name()
	{
		EnterRule_type_name();
		EnterRule("type_name", 69);
		var retval = new Antlr3AstNode("type_name");
		
		retval.Start = (IToken)input.LT(1);
		int type_name_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode namespace_or_type_name270 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "type_name");
		DebugLocation(294, 24);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 69)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:294:10: ( namespace_or_type_name )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:295:2: namespace_or_type_name
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(295, 2);
			PushFollow(Follow._namespace_or_type_name_in_type_name2168);
			namespace_or_type_name270=namespace_or_type_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, namespace_or_type_name270.Tree, namespace_or_type_name270, "namespace_or_type_name270", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("type_name", 69);
			LeaveRule("type_name", 69);
			LeaveRule_type_name();
			if (state.backtracking > 0) { Memoize(input, 69, type_name_StartIndex); }

		}
		DebugLocation(295, 24);
		} finally { DebugExitRule(GrammarFileName, "type_name"); }
		return retval;

	}
	// $ANTLR end "type_name"

	partial void EnterRule_namespace_or_type_name();
	partial void LeaveRule_namespace_or_type_name();
	// $ANTLR start "namespace_or_type_name"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:296:1: namespace_or_type_name : type_or_generic ( '::' type_or_generic )? ( '.' type_or_generic )* ;
	[GrammarRule("namespace_or_type_name")]
	private Antlr3AstNode namespace_or_type_name()
	{
		EnterRule_namespace_or_type_name();
		EnterRule("namespace_or_type_name", 70);
		var retval = new Antlr3AstNode("namespace_or_type_name");
		
		retval.Start = (IToken)input.LT(1);
		int namespace_or_type_name_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal272 = default(IToken);
		IToken char_literal274 = default(IToken);
		Antlr3AstNode type_or_generic271 = default(Antlr3AstNode);
		Antlr3AstNode type_or_generic273 = default(Antlr3AstNode);
		Antlr3AstNode type_or_generic275 = default(Antlr3AstNode);

		object string_literal272_tree = default(object);
		object char_literal274_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "namespace_or_type_name");
		DebugLocation(296, 65);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 70)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:296:23: ( type_or_generic ( '::' type_or_generic )? ( '.' type_or_generic )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:297:3: type_or_generic ( '::' type_or_generic )? ( '.' type_or_generic )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(297, 3);
			PushFollow(Follow._type_or_generic_in_namespace_or_type_name2177);
			type_or_generic271=type_or_generic();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_or_generic271.Tree, type_or_generic271, "type_or_generic271", retval);
			DebugLocation(297, 19);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:297:19: ( '::' type_or_generic )?
			int alt77=2;
			try { DebugEnterSubRule(77);
			try { DebugEnterDecision(77, false);
			int LA77_1 = input.LA(1);

			if ((LA77_1==80))
			{
				alt77 = 1;
			}
			} finally { DebugExitDecision(77); }
			switch (alt77)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:297:20: '::' type_or_generic
				{
				DebugLocation(297, 20);
				string_literal272=(IToken)Match(input,80,Follow._80_in_namespace_or_type_name2180); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal272_tree = (object)adaptor.Create(string_literal272, "string_literal272", retval);
				adaptor.AddChild(root_0, string_literal272_tree);
				}
				DebugLocation(297, 25);
				PushFollow(Follow._type_or_generic_in_namespace_or_type_name2182);
				type_or_generic273=type_or_generic();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type_or_generic273.Tree, type_or_generic273, "type_or_generic273", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(77); }

			DebugLocation(297, 43);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:297:43: ( '.' type_or_generic )*
			try { DebugEnterSubRule(78);
			while (true)
			{
				int alt78=2;
				try { DebugEnterDecision(78, false);
				int LA78_1 = input.LA(1);

				if ((LA78_1==DOT))
				{
					int LA78_2 = input.LA(2);

					if ((LA78_2==IDENTIFIER||LA78_2==95||(LA78_2>=97 && LA78_2<=98)||(LA78_2>=100 && LA78_2<=101)||LA78_2==107||LA78_2==119||LA78_2==122||LA78_2==124||LA78_2==128||LA78_2==134||LA78_2==137||LA78_2==143||(LA78_2>=145 && LA78_2<=146)||(LA78_2>=149 && LA78_2<=150)||LA78_2==154||LA78_2==156||LA78_2==159||LA78_2==162||LA78_2==164||LA78_2==169||(LA78_2>=173 && LA78_2<=174)||LA78_2==185||LA78_2==192||LA78_2==196||LA78_2==198))
					{
						alt78 = 1;
					}


				}


				} finally { DebugExitDecision(78); }
				switch ( alt78 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:297:44: '.' type_or_generic
					{
					DebugLocation(297, 44);
					char_literal274=(IToken)Match(input,DOT,Follow._DOT_in_namespace_or_type_name2187); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal274_tree = (object)adaptor.Create(char_literal274, "char_literal274", retval);
					adaptor.AddChild(root_0, char_literal274_tree);
					}
					DebugLocation(297, 48);
					PushFollow(Follow._type_or_generic_in_namespace_or_type_name2189);
					type_or_generic275=type_or_generic();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type_or_generic275.Tree, type_or_generic275, "type_or_generic275", retval);

					}
					break;

				default:
					goto loop78;
				}
			}

			loop78:
				;

			} finally { DebugExitSubRule(78); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("namespace_or_type_name", 70);
			LeaveRule("namespace_or_type_name", 70);
			LeaveRule_namespace_or_type_name();
			if (state.backtracking > 0) { Memoize(input, 70, namespace_or_type_name_StartIndex); }

		}
		DebugLocation(297, 65);
		} finally { DebugExitRule(GrammarFileName, "namespace_or_type_name"); }
		return retval;

	}
	// $ANTLR end "namespace_or_type_name"

	partial void EnterRule_type_or_generic();
	partial void LeaveRule_type_or_generic();
	// $ANTLR start "type_or_generic"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:298:1: type_or_generic : ( ( identifier generic_argument_list )=> identifier generic_argument_list | identifier );
	[GrammarRule("type_or_generic")]
	private Antlr3AstNode type_or_generic()
	{
		EnterRule_type_or_generic();
		EnterRule("type_or_generic", 71);
		var retval = new Antlr3AstNode("type_or_generic");
		
		retval.Start = (IToken)input.LT(1);
		int type_or_generic_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode identifier276 = default(Antlr3AstNode);
		Antlr3AstNode generic_argument_list277 = default(Antlr3AstNode);
		Antlr3AstNode identifier278 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "type_or_generic");
		DebugLocation(298, 14);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 71)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:298:16: ( ( identifier generic_argument_list )=> identifier generic_argument_list | identifier )
			int alt79=2;
			try { DebugEnterDecision(79, false);
			int LA79_1 = input.LA(1);

			if ((LA79_1==IDENTIFIER||LA79_1==95||(LA79_1>=97 && LA79_1<=98)||(LA79_1>=100 && LA79_1<=101)||LA79_1==107||LA79_1==119||LA79_1==122||LA79_1==124||LA79_1==128||LA79_1==134||LA79_1==137||LA79_1==143||(LA79_1>=145 && LA79_1<=146)||(LA79_1>=149 && LA79_1<=150)||LA79_1==154||LA79_1==156||LA79_1==159||LA79_1==162||LA79_1==164||LA79_1==169||(LA79_1>=173 && LA79_1<=174)||LA79_1==185||LA79_1==192||LA79_1==196||LA79_1==198))
			{
				int LA79_2 = input.LA(2);

				if ((EvaluatePredicate(synpred14_cs_fragment)))
				{
					alt79 = 1;
				}
				else if ((true))
				{
					alt79 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 79, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 79, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(79); }
			switch (alt79)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:299:2: ( identifier generic_argument_list )=> identifier generic_argument_list
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(299, 40);
				PushFollow(Follow._identifier_in_type_or_generic2207);
				identifier276=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier276.Tree, identifier276, "identifier276", retval);
				DebugLocation(299, 51);
				PushFollow(Follow._generic_argument_list_in_type_or_generic2209);
				generic_argument_list277=generic_argument_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, generic_argument_list277.Tree, generic_argument_list277, "generic_argument_list277", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:300:4: identifier
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(300, 4);
				PushFollow(Follow._identifier_in_type_or_generic2214);
				identifier278=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier278.Tree, identifier278, "identifier278", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("type_or_generic", 71);
			LeaveRule("type_or_generic", 71);
			LeaveRule_type_or_generic();
			if (state.backtracking > 0) { Memoize(input, 71, type_or_generic_StartIndex); }

		}
		DebugLocation(300, 14);
		} finally { DebugExitRule(GrammarFileName, "type_or_generic"); }
		return retval;

	}
	// $ANTLR end "type_or_generic"

	partial void EnterRule_qid();
	partial void LeaveRule_qid();
	// $ANTLR start "qid"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:302:1: qid : qid_start ( qid_part )* ;
	[GrammarRule("qid")]
	private Antlr3AstNode qid()
	{
		EnterRule_qid();
		EnterRule("qid", 72);
		var retval = new Antlr3AstNode("qid");
		
		retval.Start = (IToken)input.LT(1);
		int qid_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode qid_start279 = default(Antlr3AstNode);
		Antlr3AstNode qid_part280 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "qid");
		DebugLocation(302, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 72)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:302:4: ( qid_start ( qid_part )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:303:2: qid_start ( qid_part )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(303, 2);
			PushFollow(Follow._qid_start_in_qid2225);
			qid_start279=qid_start();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, qid_start279.Tree, qid_start279, "qid_start279", retval);
			DebugLocation(303, 14);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:303:14: ( qid_part )*
			try { DebugEnterSubRule(80);
			while (true)
			{
				int alt80=2;
				try { DebugEnterDecision(80, false);
				int LA80_1 = input.LA(1);

				if ((LA80_1==DOT))
				{
					int LA80_2 = input.LA(2);

					if ((LA80_2==IDENTIFIER||LA80_2==95||(LA80_2>=97 && LA80_2<=98)||(LA80_2>=100 && LA80_2<=101)||LA80_2==107||LA80_2==119||LA80_2==122||LA80_2==124||LA80_2==128||LA80_2==134||LA80_2==137||LA80_2==143||(LA80_2>=145 && LA80_2<=146)||(LA80_2>=149 && LA80_2<=150)||LA80_2==154||LA80_2==156||LA80_2==159||LA80_2==162||LA80_2==164||LA80_2==169||(LA80_2>=173 && LA80_2<=174)||LA80_2==185||LA80_2==192||LA80_2==196||LA80_2==198))
					{
						alt80 = 1;
					}


				}
				else if ((LA80_1==PTR))
				{
					alt80 = 1;
				}


				} finally { DebugExitDecision(80); }
				switch ( alt80 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:303:14: qid_part
					{
					DebugLocation(303, 14);
					PushFollow(Follow._qid_part_in_qid2229);
					qid_part280=qid_part();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, qid_part280.Tree, qid_part280, "qid_part280", retval);

					}
					break;

				default:
					goto loop80;
				}
			}

			loop80:
				;

			} finally { DebugExitSubRule(80); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("qid", 72);
			LeaveRule("qid", 72);
			LeaveRule_qid();
			if (state.backtracking > 0) { Memoize(input, 72, qid_StartIndex); }

		}
		DebugLocation(304, 1);
		} finally { DebugExitRule(GrammarFileName, "qid"); }
		return retval;

	}
	// $ANTLR end "qid"

	partial void EnterRule_qid_start();
	partial void LeaveRule_qid_start();
	// $ANTLR start "qid_start"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:305:1: qid_start : ( predefined_type | ( identifier '<' type_arguments '>' )=> identifier generic_argument_list | identifier ( '::' identifier )? | literal );
	[GrammarRule("qid_start")]
	private Antlr3AstNode qid_start()
	{
		EnterRule_qid_start();
		EnterRule("qid_start", 73);
		var retval = new Antlr3AstNode("qid_start");
		
		retval.Start = (IToken)input.LT(1);
		int qid_start_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal285 = default(IToken);
		Antlr3AstNode predefined_type281 = default(Antlr3AstNode);
		Antlr3AstNode identifier282 = default(Antlr3AstNode);
		Antlr3AstNode generic_argument_list283 = default(Antlr3AstNode);
		Antlr3AstNode identifier284 = default(Antlr3AstNode);
		Antlr3AstNode identifier286 = default(Antlr3AstNode);
		Antlr3AstNode literal287 = default(Antlr3AstNode);

		object string_literal285_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "qid_start");
		DebugLocation(305, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 73)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:305:10: ( predefined_type | ( identifier '<' type_arguments '>' )=> identifier generic_argument_list | identifier ( '::' identifier )? | literal )
			int alt82=4;
			try { DebugEnterDecision(82, false);
			switch (input.LA(1))
			{
			case 105:
			case 108:
			case 111:
			case 116:
			case 121:
			case 131:
			case 140:
			case 148:
			case 153:
			case 171:
			case 175:
			case 179:
			case 187:
			case 188:
			case 191:
				{
				alt82 = 1;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 107:
			case 119:
			case 122:
			case 124:
			case 128:
			case 134:
			case 137:
			case 143:
			case 145:
			case 146:
			case 149:
			case 150:
			case 154:
			case 156:
			case 159:
			case 162:
			case 164:
			case 169:
			case 173:
			case 174:
			case 185:
			case 192:
			case 196:
			case 198:
				{
				int LA82_2 = input.LA(2);

				if ((LA82_2==81) && (EvaluatePredicate(synpred15_cs_fragment)))
				{
					alt82 = 2;
				}
				else if ((LA82_2==DOT||LA82_2==PTR||LA82_2==68||LA82_2==80||LA82_2==199))
				{
					alt82 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 82, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
				{
				alt82 = 4;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 82, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(82); }
			switch (alt82)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:306:2: predefined_type
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(306, 2);
				PushFollow(Follow._predefined_type_in_qid_start2239);
				predefined_type281=predefined_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, predefined_type281.Tree, predefined_type281, "predefined_type281", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:307:4: ( identifier '<' type_arguments '>' )=> identifier generic_argument_list
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(307, 43);
				PushFollow(Follow._identifier_in_qid_start2256);
				identifier282=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier282.Tree, identifier282, "identifier282", retval);
				DebugLocation(307, 54);
				PushFollow(Follow._generic_argument_list_in_qid_start2258);
				generic_argument_list283=generic_argument_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, generic_argument_list283.Tree, generic_argument_list283, "generic_argument_list283", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:310:4: identifier ( '::' identifier )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(310, 4);
				PushFollow(Follow._identifier_in_qid_start2265);
				identifier284=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier284.Tree, identifier284, "identifier284", retval);
				DebugLocation(310, 17);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:310:17: ( '::' identifier )?
				int alt81=2;
				try { DebugEnterSubRule(81);
				try { DebugEnterDecision(81, false);
				int LA81_1 = input.LA(1);

				if ((LA81_1==80))
				{
					alt81 = 1;
				}
				} finally { DebugExitDecision(81); }
				switch (alt81)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:310:18: '::' identifier
					{
					DebugLocation(310, 18);
					string_literal285=(IToken)Match(input,80,Follow._80_in_qid_start2270); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal285_tree = (object)adaptor.Create(string_literal285, "string_literal285", retval);
					adaptor.AddChild(root_0, string_literal285_tree);
					}
					DebugLocation(310, 25);
					PushFollow(Follow._identifier_in_qid_start2274);
					identifier286=identifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, identifier286.Tree, identifier286, "identifier286", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(81); }


				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:311:4: literal
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(311, 4);
				PushFollow(Follow._literal_in_qid_start2281);
				literal287=literal();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, literal287.Tree, literal287, "literal287", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("qid_start", 73);
			LeaveRule("qid_start", 73);
			LeaveRule_qid_start();
			if (state.backtracking > 0) { Memoize(input, 73, qid_start_StartIndex); }

		}
		DebugLocation(312, 1);
		} finally { DebugExitRule(GrammarFileName, "qid_start"); }
		return retval;

	}
	// $ANTLR end "qid_start"

	partial void EnterRule_qid_part();
	partial void LeaveRule_qid_part();
	// $ANTLR start "qid_part"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:315:1: qid_part : access_identifier ;
	[GrammarRule("qid_part")]
	private Antlr3AstNode qid_part()
	{
		EnterRule_qid_part();
		EnterRule("qid_part", 74);
		var retval = new Antlr3AstNode("qid_part");
		
		retval.Start = (IToken)input.LT(1);
		int qid_part_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode access_identifier288 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "qid_part");
		DebugLocation(315, 19);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 74)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:315:9: ( access_identifier )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:316:2: access_identifier
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(316, 2);
			PushFollow(Follow._access_identifier_in_qid_part2295);
			access_identifier288=access_identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, access_identifier288.Tree, access_identifier288, "access_identifier288", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("qid_part", 74);
			LeaveRule("qid_part", 74);
			LeaveRule_qid_part();
			if (state.backtracking > 0) { Memoize(input, 74, qid_part_StartIndex); }

		}
		DebugLocation(316, 19);
		} finally { DebugExitRule(GrammarFileName, "qid_part"); }
		return retval;

	}
	// $ANTLR end "qid_part"

	partial void EnterRule_generic_argument_list();
	partial void LeaveRule_generic_argument_list();
	// $ANTLR start "generic_argument_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:318:1: generic_argument_list : '<' type_arguments '>' ;
	[GrammarRule("generic_argument_list")]
	private Antlr3AstNode generic_argument_list()
	{
		EnterRule_generic_argument_list();
		EnterRule("generic_argument_list", 75);
		var retval = new Antlr3AstNode("generic_argument_list");
		
		retval.Start = (IToken)input.LT(1);
		int generic_argument_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal289 = default(IToken);
		IToken char_literal291 = default(IToken);
		Antlr3AstNode type_arguments290 = default(Antlr3AstNode);

		object char_literal289_tree = default(object);
		object char_literal291_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "generic_argument_list");
		DebugLocation(318, 24);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 75)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:318:22: ( '<' type_arguments '>' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:319:2: '<' type_arguments '>'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(319, 2);
			char_literal289=(IToken)Match(input,81,Follow._81_in_generic_argument_list2304); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal289_tree = (object)adaptor.Create(char_literal289, "char_literal289", retval);
			adaptor.AddChild(root_0, char_literal289_tree);
			}
			DebugLocation(319, 6);
			PushFollow(Follow._type_arguments_in_generic_argument_list2306);
			type_arguments290=type_arguments();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_arguments290.Tree, type_arguments290, "type_arguments290", retval);
			DebugLocation(319, 21);
			char_literal291=(IToken)Match(input,GT,Follow._GT_in_generic_argument_list2308); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal291_tree = (object)adaptor.Create(char_literal291, "char_literal291", retval);
			adaptor.AddChild(root_0, char_literal291_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("generic_argument_list", 75);
			LeaveRule("generic_argument_list", 75);
			LeaveRule_generic_argument_list();
			if (state.backtracking > 0) { Memoize(input, 75, generic_argument_list_StartIndex); }

		}
		DebugLocation(319, 24);
		} finally { DebugExitRule(GrammarFileName, "generic_argument_list"); }
		return retval;

	}
	// $ANTLR end "generic_argument_list"

	partial void EnterRule_type_arguments();
	partial void LeaveRule_type_arguments();
	// $ANTLR start "type_arguments"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:320:1: type_arguments : type ( ',' type )* ;
	[GrammarRule("type_arguments")]
	private Antlr3AstNode type_arguments()
	{
		EnterRule_type_arguments();
		EnterRule("type_arguments", 76);
		var retval = new Antlr3AstNode("type_arguments");
		
		retval.Start = (IToken)input.LT(1);
		int type_arguments_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal293 = default(IToken);
		Antlr3AstNode type292 = default(Antlr3AstNode);
		Antlr3AstNode type294 = default(Antlr3AstNode);

		object char_literal293_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "type_arguments");
		DebugLocation(320, 18);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 76)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:320:15: ( type ( ',' type )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:321:2: type ( ',' type )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(321, 2);
			PushFollow(Follow._type_in_type_arguments2317);
			type292=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type292.Tree, type292, "type292", retval);
			DebugLocation(321, 7);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:321:7: ( ',' type )*
			try { DebugEnterSubRule(83);
			while (true)
			{
				int alt83=2;
				try { DebugEnterDecision(83, false);
				int LA83_1 = input.LA(1);

				if ((LA83_1==74))
				{
					alt83 = 1;
				}


				} finally { DebugExitDecision(83); }
				switch ( alt83 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:321:8: ',' type
					{
					DebugLocation(321, 8);
					char_literal293=(IToken)Match(input,74,Follow._74_in_type_arguments2320); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal293_tree = (object)adaptor.Create(char_literal293, "char_literal293", retval);
					adaptor.AddChild(root_0, char_literal293_tree);
					}
					DebugLocation(321, 12);
					PushFollow(Follow._type_in_type_arguments2322);
					type294=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type294.Tree, type294, "type294", retval);

					}
					break;

				default:
					goto loop83;
				}
			}

			loop83:
				;

			} finally { DebugExitSubRule(83); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("type_arguments", 76);
			LeaveRule("type_arguments", 76);
			LeaveRule_type_arguments();
			if (state.backtracking > 0) { Memoize(input, 76, type_arguments_StartIndex); }

		}
		DebugLocation(321, 18);
		} finally { DebugExitRule(GrammarFileName, "type_arguments"); }
		return retval;

	}
	// $ANTLR end "type_arguments"

	partial void EnterRule_type();
	partial void LeaveRule_type();
	// $ANTLR start "type"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:323:1: type : ( ( predefined_type | type_name ) ( ( '*' )+ | '?' )? ( rank_specifiers )? | 'void' ( '*' )+ );
	[GrammarRule("type")]
	private Antlr3AstNode type()
	{
		EnterRule_type();
		EnterRule("type", 77);
		var retval = new Antlr3AstNode("type");
		
		retval.Start = (IToken)input.LT(1);
		int type_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal297 = default(IToken);
		IToken char_literal298 = default(IToken);
		IToken string_literal300 = default(IToken);
		IToken char_literal301 = default(IToken);
		Antlr3AstNode predefined_type295 = default(Antlr3AstNode);
		Antlr3AstNode type_name296 = default(Antlr3AstNode);
		Antlr3AstNode rank_specifiers299 = default(Antlr3AstNode);

		object char_literal297_tree = default(object);
		object char_literal298_tree = default(object);
		object string_literal300_tree = default(object);
		object char_literal301_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "type");
		DebugLocation(323, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 77)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:323:5: ( ( predefined_type | type_name ) ( ( '*' )+ | '?' )? ( rank_specifiers )? | 'void' ( '*' )+ )
			int alt89=2;
			try { DebugEnterDecision(89, false);
			int LA89_1 = input.LA(1);

			if ((LA89_1==IDENTIFIER||LA89_1==95||(LA89_1>=97 && LA89_1<=98)||(LA89_1>=100 && LA89_1<=101)||LA89_1==105||(LA89_1>=107 && LA89_1<=108)||LA89_1==111||LA89_1==116||LA89_1==119||(LA89_1>=121 && LA89_1<=122)||LA89_1==124||LA89_1==128||LA89_1==131||LA89_1==134||LA89_1==137||LA89_1==140||LA89_1==143||(LA89_1>=145 && LA89_1<=146)||(LA89_1>=148 && LA89_1<=150)||(LA89_1>=153 && LA89_1<=154)||LA89_1==156||LA89_1==159||LA89_1==162||LA89_1==164||LA89_1==169||LA89_1==171||(LA89_1>=173 && LA89_1<=175)||LA89_1==179||LA89_1==185||(LA89_1>=187 && LA89_1<=188)||(LA89_1>=191 && LA89_1<=192)||LA89_1==196||LA89_1==198))
			{
				alt89 = 1;
			}
			else if ((LA89_1==194))
			{
				alt89 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 89, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(89); }
			switch (alt89)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:324:4: ( predefined_type | type_name ) ( ( '*' )+ | '?' )? ( rank_specifiers )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(324, 4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:324:4: ( predefined_type | type_name )
				int alt84=2;
				try { DebugEnterSubRule(84);
				try { DebugEnterDecision(84, false);
				int LA84_1 = input.LA(1);

				if ((LA84_1==105||LA84_1==108||LA84_1==111||LA84_1==116||LA84_1==121||LA84_1==131||LA84_1==140||LA84_1==148||LA84_1==153||LA84_1==171||LA84_1==175||LA84_1==179||(LA84_1>=187 && LA84_1<=188)||LA84_1==191))
				{
					alt84 = 1;
				}
				else if ((LA84_1==IDENTIFIER||LA84_1==95||(LA84_1>=97 && LA84_1<=98)||(LA84_1>=100 && LA84_1<=101)||LA84_1==107||LA84_1==119||LA84_1==122||LA84_1==124||LA84_1==128||LA84_1==134||LA84_1==137||LA84_1==143||(LA84_1>=145 && LA84_1<=146)||(LA84_1>=149 && LA84_1<=150)||LA84_1==154||LA84_1==156||LA84_1==159||LA84_1==162||LA84_1==164||LA84_1==169||(LA84_1>=173 && LA84_1<=174)||LA84_1==185||LA84_1==192||LA84_1==196||LA84_1==198))
				{
					alt84 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 84, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(84); }
				switch (alt84)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:324:5: predefined_type
					{
					DebugLocation(324, 5);
					PushFollow(Follow._predefined_type_in_type2336);
					predefined_type295=predefined_type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, predefined_type295.Tree, predefined_type295, "predefined_type295", retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:324:23: type_name
					{
					DebugLocation(324, 23);
					PushFollow(Follow._type_name_in_type2340);
					type_name296=type_name();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type_name296.Tree, type_name296, "type_name296", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(84); }

				DebugLocation(324, 34);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:324:34: ( ( '*' )+ | '?' )?
				int alt86=3;
				try { DebugEnterSubRule(86);
				try { DebugEnterDecision(86, false);
				int LA86_1 = input.LA(1);

				if ((LA86_1==69))
				{
					alt86 = 1;
				}
				else if ((LA86_1==89))
				{
					alt86 = 2;
				}
				} finally { DebugExitDecision(86); }
				switch (alt86)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:324:35: ( '*' )+
					{
					DebugLocation(324, 35);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:324:35: ( '*' )+
					int cnt85=0;
					try { DebugEnterSubRule(85);
					while (true)
					{
						int alt85=2;
						try { DebugEnterDecision(85, false);
						int LA85_1 = input.LA(1);

						if ((LA85_1==69))
						{
							alt85 = 1;
						}


						} finally { DebugExitDecision(85); }
						switch (alt85)
						{
						case 1:
							DebugEnterAlt(1);
							// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:324:35: '*'
							{
							DebugLocation(324, 35);
							char_literal297=(IToken)Match(input,69,Follow._69_in_type2344); if (state.failed) return retval;
							if (state.backtracking == 0) {
							char_literal297_tree = (object)adaptor.Create(char_literal297, "char_literal297", retval);
							adaptor.AddChild(root_0, char_literal297_tree);
							}

							}
							break;

						default:
							if (cnt85 >= 1)
								goto loop85;

							if (state.backtracking>0) {state.failed=true; return retval;}
							EarlyExitException eee85 = new EarlyExitException( 85, input );
							DebugRecognitionException(eee85);
							throw eee85;
						}
						cnt85++;
					}
					loop85:
						;

					} finally { DebugExitSubRule(85); }


					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:324:42: '?'
					{
					DebugLocation(324, 42);
					char_literal298=(IToken)Match(input,89,Follow._89_in_type2349); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal298_tree = (object)adaptor.Create(char_literal298, "char_literal298", retval);
					adaptor.AddChild(root_0, char_literal298_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(86); }

				DebugLocation(324, 48);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:324:48: ( rank_specifiers )?
				int alt87=2;
				try { DebugEnterSubRule(87);
				try { DebugEnterDecision(87, false);
				int LA87_1 = input.LA(1);

				if ((LA87_1==91))
				{
					int LA87_2 = input.LA(2);

					if ((LA87_2==74||LA87_2==92))
					{
						alt87 = 1;
					}
				}
				} finally { DebugExitDecision(87); }
				switch (alt87)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:324:48: rank_specifiers
					{
					DebugLocation(324, 48);
					PushFollow(Follow._rank_specifiers_in_type2353);
					rank_specifiers299=rank_specifiers();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, rank_specifiers299.Tree, rank_specifiers299, "rank_specifiers299", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(87); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:325:4: 'void' ( '*' )+
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(325, 4);
				string_literal300=(IToken)Match(input,194,Follow._194_in_type2359); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal300_tree = (object)adaptor.Create(string_literal300, "string_literal300", retval);
				adaptor.AddChild(root_0, string_literal300_tree);
				}
				DebugLocation(325, 11);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:325:11: ( '*' )+
				int cnt88=0;
				try { DebugEnterSubRule(88);
				while (true)
				{
					int alt88=2;
					try { DebugEnterDecision(88, false);
					int LA88_1 = input.LA(1);

					if ((LA88_1==69))
					{
						alt88 = 1;
					}


					} finally { DebugExitDecision(88); }
					switch (alt88)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:325:11: '*'
						{
						DebugLocation(325, 11);
						char_literal301=(IToken)Match(input,69,Follow._69_in_type2361); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal301_tree = (object)adaptor.Create(char_literal301, "char_literal301", retval);
						adaptor.AddChild(root_0, char_literal301_tree);
						}

						}
						break;

					default:
						if (cnt88 >= 1)
							goto loop88;

						if (state.backtracking>0) {state.failed=true; return retval;}
						EarlyExitException eee88 = new EarlyExitException( 88, input );
						DebugRecognitionException(eee88);
						throw eee88;
					}
					cnt88++;
				}
				loop88:
					;

				} finally { DebugExitSubRule(88); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("type", 77);
			LeaveRule("type", 77);
			LeaveRule_type();
			if (state.backtracking > 0) { Memoize(input, 77, type_StartIndex); }

		}
		DebugLocation(326, 1);
		} finally { DebugExitRule(GrammarFileName, "type"); }
		return retval;

	}
	// $ANTLR end "type"

	partial void EnterRule_non_nullable_type();
	partial void LeaveRule_non_nullable_type();
	// $ANTLR start "non_nullable_type"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:327:1: non_nullable_type : ( ( predefined_type | type_name ) ( rank_specifiers ( '*' )* | ( ( '*' )+ )? ) | 'void' ( '*' )+ );
	[GrammarRule("non_nullable_type")]
	private Antlr3AstNode non_nullable_type()
	{
		EnterRule_non_nullable_type();
		EnterRule("non_nullable_type", 78);
		var retval = new Antlr3AstNode("non_nullable_type");
		
		retval.Start = (IToken)input.LT(1);
		int non_nullable_type_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal305 = default(IToken);
		IToken char_literal306 = default(IToken);
		IToken string_literal307 = default(IToken);
		IToken char_literal308 = default(IToken);
		Antlr3AstNode predefined_type302 = default(Antlr3AstNode);
		Antlr3AstNode type_name303 = default(Antlr3AstNode);
		Antlr3AstNode rank_specifiers304 = default(Antlr3AstNode);

		object char_literal305_tree = default(object);
		object char_literal306_tree = default(object);
		object string_literal307_tree = default(object);
		object char_literal308_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "non_nullable_type");
		DebugLocation(327, 17);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 78)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:327:18: ( ( predefined_type | type_name ) ( rank_specifiers ( '*' )* | ( ( '*' )+ )? ) | 'void' ( '*' )+ )
			int alt96=2;
			try { DebugEnterDecision(96, false);
			int LA96_1 = input.LA(1);

			if ((LA96_1==IDENTIFIER||LA96_1==95||(LA96_1>=97 && LA96_1<=98)||(LA96_1>=100 && LA96_1<=101)||LA96_1==105||(LA96_1>=107 && LA96_1<=108)||LA96_1==111||LA96_1==116||LA96_1==119||(LA96_1>=121 && LA96_1<=122)||LA96_1==124||LA96_1==128||LA96_1==131||LA96_1==134||LA96_1==137||LA96_1==140||LA96_1==143||(LA96_1>=145 && LA96_1<=146)||(LA96_1>=148 && LA96_1<=150)||(LA96_1>=153 && LA96_1<=154)||LA96_1==156||LA96_1==159||LA96_1==162||LA96_1==164||LA96_1==169||LA96_1==171||(LA96_1>=173 && LA96_1<=175)||LA96_1==179||LA96_1==185||(LA96_1>=187 && LA96_1<=188)||(LA96_1>=191 && LA96_1<=192)||LA96_1==196||LA96_1==198))
			{
				alt96 = 1;
			}
			else if ((LA96_1==194))
			{
				alt96 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 96, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(96); }
			switch (alt96)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:328:2: ( predefined_type | type_name ) ( rank_specifiers ( '*' )* | ( ( '*' )+ )? )
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(328, 2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:328:2: ( predefined_type | type_name )
				int alt90=2;
				try { DebugEnterSubRule(90);
				try { DebugEnterDecision(90, false);
				int LA90_1 = input.LA(1);

				if ((LA90_1==105||LA90_1==108||LA90_1==111||LA90_1==116||LA90_1==121||LA90_1==131||LA90_1==140||LA90_1==148||LA90_1==153||LA90_1==171||LA90_1==175||LA90_1==179||(LA90_1>=187 && LA90_1<=188)||LA90_1==191))
				{
					alt90 = 1;
				}
				else if ((LA90_1==IDENTIFIER||LA90_1==95||(LA90_1>=97 && LA90_1<=98)||(LA90_1>=100 && LA90_1<=101)||LA90_1==107||LA90_1==119||LA90_1==122||LA90_1==124||LA90_1==128||LA90_1==134||LA90_1==137||LA90_1==143||(LA90_1>=145 && LA90_1<=146)||(LA90_1>=149 && LA90_1<=150)||LA90_1==154||LA90_1==156||LA90_1==159||LA90_1==162||LA90_1==164||LA90_1==169||(LA90_1>=173 && LA90_1<=174)||LA90_1==185||LA90_1==192||LA90_1==196||LA90_1==198))
				{
					alt90 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(90); }
				switch (alt90)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:328:3: predefined_type
					{
					DebugLocation(328, 3);
					PushFollow(Follow._predefined_type_in_non_nullable_type2372);
					predefined_type302=predefined_type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, predefined_type302.Tree, predefined_type302, "predefined_type302", retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:328:21: type_name
					{
					DebugLocation(328, 21);
					PushFollow(Follow._type_name_in_non_nullable_type2376);
					type_name303=type_name();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type_name303.Tree, type_name303, "type_name303", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(90); }

				DebugLocation(329, 3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:329:3: ( rank_specifiers ( '*' )* | ( ( '*' )+ )? )
				int alt94=2;
				try { DebugEnterSubRule(94);
				try { DebugEnterDecision(94, false);
				int LA94_1 = input.LA(1);

				if ((LA94_1==91))
				{
					alt94 = 1;
				}
				else if ((LA94_1==EOF||LA94_1==GT||LA94_1==IDENTIFIER||LA94_1==RPAREN||LA94_1==SEMI||LA94_1==62||(LA94_1>=65 && LA94_1<=66)||LA94_1==69||LA94_1==74||LA94_1==79||LA94_1==81||LA94_1==84||LA94_1==86||(LA94_1>=88 && LA94_1<=90)||(LA94_1>=92 && LA94_1<=93)||LA94_1==95||(LA94_1>=97 && LA94_1<=101)||LA94_1==107||LA94_1==119||LA94_1==122||LA94_1==124||LA94_1==128||LA94_1==134||LA94_1==137||(LA94_1>=143 && LA94_1<=146)||(LA94_1>=149 && LA94_1<=150)||LA94_1==154||LA94_1==156||LA94_1==159||LA94_1==162||LA94_1==164||LA94_1==169||(LA94_1>=173 && LA94_1<=174)||LA94_1==185||LA94_1==192||LA94_1==196||LA94_1==198||LA94_1==200||(LA94_1>=202 && LA94_1<=203)))
				{
					alt94 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 94, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(94); }
				switch (alt94)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:329:7: rank_specifiers ( '*' )*
					{
					DebugLocation(329, 7);
					PushFollow(Follow._rank_specifiers_in_non_nullable_type2385);
					rank_specifiers304=rank_specifiers();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, rank_specifiers304.Tree, rank_specifiers304, "rank_specifiers304", retval);
					DebugLocation(329, 25);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:329:25: ( '*' )*
					try { DebugEnterSubRule(91);
					while (true)
					{
						int alt91=2;
						try { DebugEnterDecision(91, false);
						int LA91_1 = input.LA(1);

						if ((LA91_1==69))
						{
							alt91 = 1;
						}


						} finally { DebugExitDecision(91); }
						switch ( alt91 )
						{
						case 1:
							DebugEnterAlt(1);
							// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:329:25: '*'
							{
							DebugLocation(329, 25);
							char_literal305=(IToken)Match(input,69,Follow._69_in_non_nullable_type2389); if (state.failed) return retval;
							if (state.backtracking == 0) {
							char_literal305_tree = (object)adaptor.Create(char_literal305, "char_literal305", retval);
							adaptor.AddChild(root_0, char_literal305_tree);
							}

							}
							break;

						default:
							goto loop91;
						}
					}

					loop91:
						;

					} finally { DebugExitSubRule(91); }


					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:330:6: ( ( '*' )+ )?
					{
					DebugLocation(330, 6);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:330:6: ( ( '*' )+ )?
					int alt93=2;
					try { DebugEnterSubRule(93);
					try { DebugEnterDecision(93, false);
					int LA93_1 = input.LA(1);

					if ((LA93_1==69))
					{
						alt93 = 1;
					}
					} finally { DebugExitDecision(93); }
					switch (alt93)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:330:7: ( '*' )+
						{
						DebugLocation(330, 7);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:330:7: ( '*' )+
						int cnt92=0;
						try { DebugEnterSubRule(92);
						while (true)
						{
							int alt92=2;
							try { DebugEnterDecision(92, false);
							int LA92_1 = input.LA(1);

							if ((LA92_1==69))
							{
								alt92 = 1;
							}


							} finally { DebugExitDecision(92); }
							switch (alt92)
							{
							case 1:
								DebugEnterAlt(1);
								// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:330:7: '*'
								{
								DebugLocation(330, 7);
								char_literal306=(IToken)Match(input,69,Follow._69_in_non_nullable_type2398); if (state.failed) return retval;
								if (state.backtracking == 0) {
								char_literal306_tree = (object)adaptor.Create(char_literal306, "char_literal306", retval);
								adaptor.AddChild(root_0, char_literal306_tree);
								}

								}
								break;

							default:
								if (cnt92 >= 1)
									goto loop92;

								if (state.backtracking>0) {state.failed=true; return retval;}
								EarlyExitException eee92 = new EarlyExitException( 92, input );
								DebugRecognitionException(eee92);
								throw eee92;
							}
							cnt92++;
						}
						loop92:
							;

						} finally { DebugExitSubRule(92); }


						}
						break;

					}
					} finally { DebugExitSubRule(93); }


					}
					break;

				}
				} finally { DebugExitSubRule(94); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:332:4: 'void' ( '*' )+
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(332, 4);
				string_literal307=(IToken)Match(input,194,Follow._194_in_non_nullable_type2410); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal307_tree = (object)adaptor.Create(string_literal307, "string_literal307", retval);
				adaptor.AddChild(root_0, string_literal307_tree);
				}
				DebugLocation(332, 13);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:332:13: ( '*' )+
				int cnt95=0;
				try { DebugEnterSubRule(95);
				while (true)
				{
					int alt95=2;
					try { DebugEnterDecision(95, false);
					int LA95_1 = input.LA(1);

					if ((LA95_1==69))
					{
						alt95 = 1;
					}


					} finally { DebugExitDecision(95); }
					switch (alt95)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:332:13: '*'
						{
						DebugLocation(332, 13);
						char_literal308=(IToken)Match(input,69,Follow._69_in_non_nullable_type2414); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal308_tree = (object)adaptor.Create(char_literal308, "char_literal308", retval);
						adaptor.AddChild(root_0, char_literal308_tree);
						}

						}
						break;

					default:
						if (cnt95 >= 1)
							goto loop95;

						if (state.backtracking>0) {state.failed=true; return retval;}
						EarlyExitException eee95 = new EarlyExitException( 95, input );
						DebugRecognitionException(eee95);
						throw eee95;
					}
					cnt95++;
				}
				loop95:
					;

				} finally { DebugExitSubRule(95); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("non_nullable_type", 78);
			LeaveRule("non_nullable_type", 78);
			LeaveRule_non_nullable_type();
			if (state.backtracking > 0) { Memoize(input, 78, non_nullable_type_StartIndex); }

		}
		DebugLocation(332, 17);
		} finally { DebugExitRule(GrammarFileName, "non_nullable_type"); }
		return retval;

	}
	// $ANTLR end "non_nullable_type"

	partial void EnterRule_non_array_type();
	partial void LeaveRule_non_array_type();
	// $ANTLR start "non_array_type"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:334:1: non_array_type : type ;
	[GrammarRule("non_array_type")]
	private Antlr3AstNode non_array_type()
	{
		EnterRule_non_array_type();
		EnterRule("non_array_type", 79);
		var retval = new Antlr3AstNode("non_array_type");
		
		retval.Start = (IToken)input.LT(1);
		int non_array_type_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode type309 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "non_array_type");
		DebugLocation(334, 5);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 79)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:334:15: ( type )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:335:2: type
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(335, 2);
			PushFollow(Follow._type_in_non_array_type2425);
			type309=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type309.Tree, type309, "type309", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("non_array_type", 79);
			LeaveRule("non_array_type", 79);
			LeaveRule_non_array_type();
			if (state.backtracking > 0) { Memoize(input, 79, non_array_type_StartIndex); }

		}
		DebugLocation(335, 5);
		} finally { DebugExitRule(GrammarFileName, "non_array_type"); }
		return retval;

	}
	// $ANTLR end "non_array_type"

	partial void EnterRule_array_type();
	partial void LeaveRule_array_type();
	// $ANTLR start "array_type"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:336:1: array_type : type ;
	[GrammarRule("array_type")]
	private Antlr3AstNode array_type()
	{
		EnterRule_array_type();
		EnterRule("array_type", 80);
		var retval = new Antlr3AstNode("array_type");
		
		retval.Start = (IToken)input.LT(1);
		int array_type_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode type310 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "array_type");
		DebugLocation(336, 5);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 80)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:336:11: ( type )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:337:2: type
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(337, 2);
			PushFollow(Follow._type_in_array_type2432);
			type310=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type310.Tree, type310, "type310", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("array_type", 80);
			LeaveRule("array_type", 80);
			LeaveRule_array_type();
			if (state.backtracking > 0) { Memoize(input, 80, array_type_StartIndex); }

		}
		DebugLocation(337, 5);
		} finally { DebugExitRule(GrammarFileName, "array_type"); }
		return retval;

	}
	// $ANTLR end "array_type"

	partial void EnterRule_unmanaged_type();
	partial void LeaveRule_unmanaged_type();
	// $ANTLR start "unmanaged_type"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:338:1: unmanaged_type : type ;
	[GrammarRule("unmanaged_type")]
	private Antlr3AstNode unmanaged_type()
	{
		EnterRule_unmanaged_type();
		EnterRule("unmanaged_type", 81);
		var retval = new Antlr3AstNode("unmanaged_type");
		
		retval.Start = (IToken)input.LT(1);
		int unmanaged_type_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode type311 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "unmanaged_type");
		DebugLocation(338, 5);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 81)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:338:15: ( type )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:339:2: type
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(339, 2);
			PushFollow(Follow._type_in_unmanaged_type2439);
			type311=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type311.Tree, type311, "type311", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unmanaged_type", 81);
			LeaveRule("unmanaged_type", 81);
			LeaveRule_unmanaged_type();
			if (state.backtracking > 0) { Memoize(input, 81, unmanaged_type_StartIndex); }

		}
		DebugLocation(339, 5);
		} finally { DebugExitRule(GrammarFileName, "unmanaged_type"); }
		return retval;

	}
	// $ANTLR end "unmanaged_type"

	partial void EnterRule_class_type();
	partial void LeaveRule_class_type();
	// $ANTLR start "class_type"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:340:1: class_type : type ;
	[GrammarRule("class_type")]
	private Antlr3AstNode class_type()
	{
		EnterRule_class_type();
		EnterRule("class_type", 82);
		var retval = new Antlr3AstNode("class_type");
		
		retval.Start = (IToken)input.LT(1);
		int class_type_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode type312 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "class_type");
		DebugLocation(340, 5);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 82)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:340:11: ( type )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:341:2: type
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(341, 2);
			PushFollow(Follow._type_in_class_type2446);
			type312=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type312.Tree, type312, "type312", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("class_type", 82);
			LeaveRule("class_type", 82);
			LeaveRule_class_type();
			if (state.backtracking > 0) { Memoize(input, 82, class_type_StartIndex); }

		}
		DebugLocation(341, 5);
		} finally { DebugExitRule(GrammarFileName, "class_type"); }
		return retval;

	}
	// $ANTLR end "class_type"

	partial void EnterRule_pointer_type();
	partial void LeaveRule_pointer_type();
	// $ANTLR start "pointer_type"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:342:1: pointer_type : type ;
	[GrammarRule("pointer_type")]
	private Antlr3AstNode pointer_type()
	{
		EnterRule_pointer_type();
		EnterRule("pointer_type", 83);
		var retval = new Antlr3AstNode("pointer_type");
		
		retval.Start = (IToken)input.LT(1);
		int pointer_type_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode type313 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "pointer_type");
		DebugLocation(342, 5);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 83)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:342:13: ( type )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:343:2: type
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(343, 2);
			PushFollow(Follow._type_in_pointer_type2453);
			type313=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type313.Tree, type313, "type313", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("pointer_type", 83);
			LeaveRule("pointer_type", 83);
			LeaveRule_pointer_type();
			if (state.backtracking > 0) { Memoize(input, 83, pointer_type_StartIndex); }

		}
		DebugLocation(343, 5);
		} finally { DebugExitRule(GrammarFileName, "pointer_type"); }
		return retval;

	}
	// $ANTLR end "pointer_type"

	partial void EnterRule_block();
	partial void LeaveRule_block();
	// $ANTLR start "block"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:349:1: block : ( ';' | '{' ( statement_list )? '}' );
	[GrammarRule("block")]
	private Antlr3AstNode block()
	{
		EnterRule_block();
		EnterRule("block", 84);
		var retval = new Antlr3AstNode("block");
		
		retval.Start = (IToken)input.LT(1);
		int block_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal314 = default(IToken);
		IToken char_literal315 = default(IToken);
		IToken char_literal317 = default(IToken);
		Antlr3AstNode statement_list316 = default(Antlr3AstNode);

		object char_literal314_tree = default(object);
		object char_literal315_tree = default(object);
		object char_literal317_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "block");
		DebugLocation(349, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 84)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:349:6: ( ';' | '{' ( statement_list )? '}' )
			int alt98=2;
			try { DebugEnterDecision(98, false);
			int LA98_1 = input.LA(1);

			if ((LA98_1==SEMI))
			{
				alt98 = 1;
			}
			else if ((LA98_1==199))
			{
				alt98 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 98, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(98); }
			switch (alt98)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:350:2: ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(350, 2);
				char_literal314=(IToken)Match(input,SEMI,Follow._SEMI_in_block2465); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal314_tree = (object)adaptor.Create(char_literal314, "char_literal314", retval);
				adaptor.AddChild(root_0, char_literal314_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:351:4: '{' ( statement_list )? '}'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(351, 4);
				char_literal315=(IToken)Match(input,199,Follow._199_in_block2470); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal315_tree = (object)adaptor.Create(char_literal315, "char_literal315", retval);
				adaptor.AddChild(root_0, char_literal315_tree);
				}
				DebugLocation(351, 10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:351:10: ( statement_list )?
				int alt97=2;
				try { DebugEnterSubRule(97);
				try { DebugEnterDecision(97, false);
				int LA97_1 = input.LA(1);

				if ((LA97_1==Character_literal||LA97_1==FALSE||(LA97_1>=Hex_number && LA97_1<=IF)||(LA97_1>=MINUS && LA97_1<=NUMBER)||LA97_1==Real_literal||(LA97_1>=SEMI && LA97_1<=STRINGLITERAL)||LA97_1==TRUE||(LA97_1>=USING && LA97_1<=Verbatim_string_literal)||LA97_1==61||LA97_1==66||(LA97_1>=68 && LA97_1<=69)||(LA97_1>=71 && LA97_1<=72)||LA97_1==75||LA97_1==95||(LA97_1>=97 && LA97_1<=98)||(LA97_1>=100 && LA97_1<=108)||(LA97_1>=111 && LA97_1<=112)||(LA97_1>=114 && LA97_1<=122)||LA97_1==124||LA97_1==128||(LA97_1>=130 && LA97_1<=134)||(LA97_1>=136 && LA97_1<=137)||LA97_1==140||LA97_1==143||(LA97_1>=145 && LA97_1<=150)||(LA97_1>=152 && LA97_1<=154)||LA97_1==156||LA97_1==159||LA97_1==162||LA97_1==164||(LA97_1>=169 && LA97_1<=171)||(LA97_1>=173 && LA97_1<=176)||LA97_1==179||(LA97_1>=181 && LA97_1<=192)||LA97_1==194||(LA97_1>=196 && LA97_1<=199)||LA97_1==204))
				{
					alt97 = 1;
				}
				} finally { DebugExitDecision(97); }
				switch (alt97)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:351:10: statement_list
					{
					DebugLocation(351, 10);
					PushFollow(Follow._statement_list_in_block2474);
					statement_list316=statement_list();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, statement_list316.Tree, statement_list316, "statement_list316", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(97); }

				DebugLocation(351, 28);
				char_literal317=(IToken)Match(input,203,Follow._203_in_block2479); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal317_tree = (object)adaptor.Create(char_literal317, "char_literal317", retval);
				adaptor.AddChild(root_0, char_literal317_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("block", 84);
			LeaveRule("block", 84);
			LeaveRule_block();
			if (state.backtracking > 0) { Memoize(input, 84, block_StartIndex); }

		}
		DebugLocation(351, 30);
		} finally { DebugExitRule(GrammarFileName, "block"); }
		return retval;

	}
	// $ANTLR end "block"

	partial void EnterRule_statement_list();
	partial void LeaveRule_statement_list();
	// $ANTLR start "statement_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:352:1: statement_list : ( statement )+ ;
	[GrammarRule("statement_list")]
	private Antlr3AstNode statement_list()
	{
		EnterRule_statement_list();
		EnterRule("statement_list", 85);
		var retval = new Antlr3AstNode("statement_list");
		
		retval.Start = (IToken)input.LT(1);
		int statement_list_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode statement318 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "statement_list");
		DebugLocation(352, 12);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 85)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:352:15: ( ( statement )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:353:2: ( statement )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(353, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:353:2: ( statement )+
			int cnt99=0;
			try { DebugEnterSubRule(99);
			while (true)
			{
				int alt99=2;
				try { DebugEnterDecision(99, false);
				int LA99_1 = input.LA(1);

				if ((LA99_1==117))
				{
					int LA99_2 = input.LA(2);

					if ((LA99_2==68))
					{
						alt99 = 1;
					}


				}
				else if ((LA99_1==Character_literal||LA99_1==FALSE||(LA99_1>=Hex_number && LA99_1<=IF)||(LA99_1>=MINUS && LA99_1<=NUMBER)||LA99_1==Real_literal||(LA99_1>=SEMI && LA99_1<=STRINGLITERAL)||LA99_1==TRUE||(LA99_1>=USING && LA99_1<=Verbatim_string_literal)||LA99_1==61||LA99_1==66||(LA99_1>=68 && LA99_1<=69)||(LA99_1>=71 && LA99_1<=72)||LA99_1==75||LA99_1==95||(LA99_1>=97 && LA99_1<=98)||(LA99_1>=100 && LA99_1<=108)||(LA99_1>=111 && LA99_1<=112)||(LA99_1>=114 && LA99_1<=116)||(LA99_1>=118 && LA99_1<=122)||LA99_1==124||LA99_1==128||(LA99_1>=130 && LA99_1<=134)||(LA99_1>=136 && LA99_1<=137)||LA99_1==140||LA99_1==143||(LA99_1>=145 && LA99_1<=150)||(LA99_1>=152 && LA99_1<=154)||LA99_1==156||LA99_1==159||LA99_1==162||LA99_1==164||(LA99_1>=169 && LA99_1<=171)||(LA99_1>=173 && LA99_1<=176)||LA99_1==179||(LA99_1>=181 && LA99_1<=192)||LA99_1==194||(LA99_1>=196 && LA99_1<=199)||LA99_1==204))
				{
					alt99 = 1;
				}


				} finally { DebugExitDecision(99); }
				switch (alt99)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:353:2: statement
					{
					DebugLocation(353, 2);
					PushFollow(Follow._statement_in_statement_list2486);
					statement318=statement();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, statement318.Tree, statement318, "statement318", retval);

					}
					break;

				default:
					if (cnt99 >= 1)
						goto loop99;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee99 = new EarlyExitException( 99, input );
					DebugRecognitionException(eee99);
					throw eee99;
				}
				cnt99++;
			}
			loop99:
				;

			} finally { DebugExitSubRule(99); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("statement_list", 85);
			LeaveRule("statement_list", 85);
			LeaveRule_statement_list();
			if (state.backtracking > 0) { Memoize(input, 85, statement_list_StartIndex); }

		}
		DebugLocation(353, 12);
		} finally { DebugExitRule(GrammarFileName, "statement_list"); }
		return retval;

	}
	// $ANTLR end "statement_list"

	partial void EnterRule_expression();
	partial void LeaveRule_expression();
	// $ANTLR start "expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:358:1: expression : ( ( unary_expression assignment_operator )=> assignment | non_assignment_expression );
	[GrammarRule("expression")]
	private Antlr3AstNode expression()
	{
		EnterRule_expression();
		EnterRule("expression", 86);
		var retval = new Antlr3AstNode("expression");
		
		retval.Start = (IToken)input.LT(1);
		int expression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode assignment319 = default(Antlr3AstNode);
		Antlr3AstNode non_assignment_expression320 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "expression");
		DebugLocation(358, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 86)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:358:11: ( ( unary_expression assignment_operator )=> assignment | non_assignment_expression )
			int alt100=2;
			try { DebugEnterDecision(100, false);
			switch (input.LA(1))
			{
			case 68:
				{
				int LA100_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt100 = 1;
				}
				else if ((true))
				{
					alt100 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 152:
				{
				int LA100_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt100 = 1;
				}
				else if ((true))
				{
					alt100 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 182:
				{
				int LA100_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt100 = 1;
				}
				else if ((true))
				{
					alt100 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 105:
			case 108:
			case 111:
			case 116:
			case 121:
			case 131:
			case 140:
			case 148:
			case 153:
			case 171:
			case 175:
			case 179:
			case 187:
			case 188:
			case 191:
				{
				int LA100_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt100 = 1;
				}
				else if ((true))
				{
					alt100 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 134:
				{
				int LA100_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt100 = 1;
				}
				else if ((true))
				{
					alt100 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 104:
				{
				int LA100_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt100 = 1;
				}
				else if ((true))
				{
					alt100 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 186:
				{
				int LA100_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt100 = 1;
				}
				else if ((true))
				{
					alt100 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 7, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
				{
				int LA100_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt100 = 1;
				}
				else if ((true))
				{
					alt100 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 8, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 176:
				{
				int LA100_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt100 = 1;
				}
				else if ((true))
				{
					alt100 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 9, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 112:
				{
				int LA100_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt100 = 1;
				}
				else if ((true))
				{
					alt100 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 10, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 189:
				{
				int LA100_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt100 = 1;
				}
				else if ((true))
				{
					alt100 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 117:
				{
				int LA100_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt100 = 1;
				}
				else if ((true))
				{
					alt100 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 12, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 102:
				{
				int LA100_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt100 = 1;
				}
				else if ((true))
				{
					alt100 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 13, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 118:
				{
				int LA100_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt100 = 1;
				}
				else if ((true))
				{
					alt100 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 14, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 71:
				{
				int LA100_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt100 = 1;
				}
				else if ((true))
				{
					alt100 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 15, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case MINUS:
				{
				int LA100_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt100 = 1;
				}
				else if ((true))
				{
					alt100 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 16, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 61:
				{
				int LA100_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt100 = 1;
				}
				else if ((true))
				{
					alt100 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 17, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 204:
				{
				int LA100_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt100 = 1;
				}
				else if ((true))
				{
					alt100 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 18, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 72:
				{
				int LA100_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt100 = 1;
				}
				else if ((true))
				{
					alt100 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 19, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 75:
				{
				int LA100_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt100 = 1;
				}
				else if ((true))
				{
					alt100 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 20, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 69:
				{
				int LA100_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt100 = 1;
				}
				else if ((true))
				{
					alt100 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 21, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 66:
				{
				int LA100_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt100 = 1;
				}
				else if ((true))
				{
					alt100 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 22, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 103:
				{
				int LA100_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt100 = 1;
				}
				else if ((true))
				{
					alt100 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 23, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 107:
			case 119:
			case 122:
			case 124:
			case 128:
			case 137:
			case 143:
			case 145:
			case 146:
			case 149:
			case 150:
			case 154:
			case 156:
			case 159:
			case 162:
			case 164:
			case 169:
			case 173:
			case 174:
			case 185:
			case 192:
			case 196:
			case 198:
				{
				int LA100_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt100 = 1;
				}
				else if ((true))
				{
					alt100 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 24, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 100, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(100); }
			switch (alt100)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:359:2: ( unary_expression assignment_operator )=> assignment
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(359, 46);
				PushFollow(Follow._assignment_in_expression2511);
				assignment319=assignment();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, assignment319.Tree, assignment319, "assignment319", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:360:4: non_assignment_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(360, 4);
				PushFollow(Follow._non_assignment_expression_in_expression2517);
				non_assignment_expression320=non_assignment_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, non_assignment_expression320.Tree, non_assignment_expression320, "non_assignment_expression320", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("expression", 86);
			LeaveRule("expression", 86);
			LeaveRule_expression();
			if (state.backtracking > 0) { Memoize(input, 86, expression_StartIndex); }

		}
		DebugLocation(361, 1);
		} finally { DebugExitRule(GrammarFileName, "expression"); }
		return retval;

	}
	// $ANTLR end "expression"

	partial void EnterRule_expression_list();
	partial void LeaveRule_expression_list();
	// $ANTLR start "expression_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:362:1: expression_list : expression ( ',' expression )* ;
	[GrammarRule("expression_list")]
	private Antlr3AstNode expression_list()
	{
		EnterRule_expression_list();
		EnterRule("expression_list", 87);
		var retval = new Antlr3AstNode("expression_list");
		
		retval.Start = (IToken)input.LT(1);
		int expression_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal322 = default(IToken);
		Antlr3AstNode expression321 = default(Antlr3AstNode);
		Antlr3AstNode expression323 = default(Antlr3AstNode);

		object char_literal322_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "expression_list");
		DebugLocation(362, 33);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 87)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:362:16: ( expression ( ',' expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:363:2: expression ( ',' expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(363, 2);
			PushFollow(Follow._expression_in_expression_list2526);
			expression321=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression321.Tree, expression321, "expression321", retval);
			DebugLocation(363, 14);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:363:14: ( ',' expression )*
			try { DebugEnterSubRule(101);
			while (true)
			{
				int alt101=2;
				try { DebugEnterDecision(101, false);
				int LA101_1 = input.LA(1);

				if ((LA101_1==74))
				{
					alt101 = 1;
				}


				} finally { DebugExitDecision(101); }
				switch ( alt101 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:363:15: ',' expression
					{
					DebugLocation(363, 15);
					char_literal322=(IToken)Match(input,74,Follow._74_in_expression_list2530); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal322_tree = (object)adaptor.Create(char_literal322, "char_literal322", retval);
					adaptor.AddChild(root_0, char_literal322_tree);
					}
					DebugLocation(363, 21);
					PushFollow(Follow._expression_in_expression_list2534);
					expression323=expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, expression323.Tree, expression323, "expression323", retval);

					}
					break;

				default:
					goto loop101;
				}
			}

			loop101:
				;

			} finally { DebugExitSubRule(101); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("expression_list", 87);
			LeaveRule("expression_list", 87);
			LeaveRule_expression_list();
			if (state.backtracking > 0) { Memoize(input, 87, expression_list_StartIndex); }

		}
		DebugLocation(363, 33);
		} finally { DebugExitRule(GrammarFileName, "expression_list"); }
		return retval;

	}
	// $ANTLR end "expression_list"

	partial void EnterRule_assignment();
	partial void LeaveRule_assignment();
	// $ANTLR start "assignment"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:364:1: assignment : unary_expression assignment_operator expression ;
	[GrammarRule("assignment")]
	private Antlr3AstNode assignment()
	{
		EnterRule_assignment();
		EnterRule("assignment", 88);
		var retval = new Antlr3AstNode("assignment");
		
		retval.Start = (IToken)input.LT(1);
		int assignment_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode unary_expression324 = default(Antlr3AstNode);
		Antlr3AstNode assignment_operator325 = default(Antlr3AstNode);
		Antlr3AstNode expression326 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "assignment");
		DebugLocation(364, 53);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 88)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:364:11: ( unary_expression assignment_operator expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:365:2: unary_expression assignment_operator expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(365, 2);
			PushFollow(Follow._unary_expression_in_assignment2544);
			unary_expression324=unary_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression324.Tree, unary_expression324, "unary_expression324", retval);
			DebugLocation(365, 21);
			PushFollow(Follow._assignment_operator_in_assignment2548);
			assignment_operator325=assignment_operator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, assignment_operator325.Tree, assignment_operator325, "assignment_operator325", retval);
			DebugLocation(365, 43);
			PushFollow(Follow._expression_in_assignment2552);
			expression326=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression326.Tree, expression326, "expression326", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("assignment", 88);
			LeaveRule("assignment", 88);
			LeaveRule_assignment();
			if (state.backtracking > 0) { Memoize(input, 88, assignment_StartIndex); }

		}
		DebugLocation(365, 53);
		} finally { DebugExitRule(GrammarFileName, "assignment"); }
		return retval;

	}
	// $ANTLR end "assignment"

	partial void EnterRule_unary_expression();
	partial void LeaveRule_unary_expression();
	// $ANTLR start "unary_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:366:1: unary_expression : ( ( cast_expression )=> cast_expression | primary_or_array_creation_expression ( '++' )? ( '--' )? | '+' unary_expression | '-' unary_expression | '!' unary_expression | '~' unary_expression | pre_increment_expression | pre_decrement_expression | pointer_indirection_expression | addressof_expression | await_expression );
	[GrammarRule("unary_expression")]
	private Antlr3AstNode unary_expression()
	{
		EnterRule_unary_expression();
		EnterRule("unary_expression", 89);
		var retval = new Antlr3AstNode("unary_expression");
		
		retval.Start = (IToken)input.LT(1);
		int unary_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal329 = default(IToken);
		IToken string_literal330 = default(IToken);
		IToken char_literal331 = default(IToken);
		IToken char_literal333 = default(IToken);
		IToken char_literal335 = default(IToken);
		IToken char_literal337 = default(IToken);
		Antlr3AstNode cast_expression327 = default(Antlr3AstNode);
		Antlr3AstNode primary_or_array_creation_expression328 = default(Antlr3AstNode);
		Antlr3AstNode unary_expression332 = default(Antlr3AstNode);
		Antlr3AstNode unary_expression334 = default(Antlr3AstNode);
		Antlr3AstNode unary_expression336 = default(Antlr3AstNode);
		Antlr3AstNode unary_expression338 = default(Antlr3AstNode);
		Antlr3AstNode pre_increment_expression339 = default(Antlr3AstNode);
		Antlr3AstNode pre_decrement_expression340 = default(Antlr3AstNode);
		Antlr3AstNode pointer_indirection_expression341 = default(Antlr3AstNode);
		Antlr3AstNode addressof_expression342 = default(Antlr3AstNode);
		Antlr3AstNode await_expression343 = default(Antlr3AstNode);

		object string_literal329_tree = default(object);
		object string_literal330_tree = default(object);
		object char_literal331_tree = default(object);
		object char_literal333_tree = default(object);
		object char_literal335_tree = default(object);
		object char_literal337_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "unary_expression");
		DebugLocation(366, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 89)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:366:17: ( ( cast_expression )=> cast_expression | primary_or_array_creation_expression ( '++' )? ( '--' )? | '+' unary_expression | '-' unary_expression | '!' unary_expression | '~' unary_expression | pre_increment_expression | pre_decrement_expression | pointer_indirection_expression | addressof_expression | await_expression )
			int alt104=11;
			try { DebugEnterDecision(104, false);
			switch (input.LA(1))
			{
			case 68:
				{
				int LA104_2 = input.LA(2);

				if ((EvaluatePredicate(synpred17_cs_fragment)))
				{
					alt104 = 1;
				}
				else if ((true))
				{
					alt104 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 104, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case IDENTIFIER:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 102:
			case 104:
			case 105:
			case 107:
			case 108:
			case 111:
			case 112:
			case 116:
			case 117:
			case 118:
			case 119:
			case 121:
			case 122:
			case 124:
			case 128:
			case 131:
			case 134:
			case 137:
			case 140:
			case 143:
			case 145:
			case 146:
			case 148:
			case 149:
			case 150:
			case 152:
			case 153:
			case 154:
			case 156:
			case 159:
			case 162:
			case 164:
			case 169:
			case 171:
			case 173:
			case 174:
			case 175:
			case 176:
			case 179:
			case 182:
			case 185:
			case 186:
			case 187:
			case 188:
			case 189:
			case 191:
			case 192:
			case 196:
			case 198:
				{
				alt104 = 2;
				}
				break;
			case 71:
				{
				alt104 = 3;
				}
				break;
			case MINUS:
				{
				alt104 = 4;
				}
				break;
			case 61:
				{
				alt104 = 5;
				}
				break;
			case 204:
				{
				alt104 = 6;
				}
				break;
			case 72:
				{
				alt104 = 7;
				}
				break;
			case 75:
				{
				alt104 = 8;
				}
				break;
			case 69:
				{
				alt104 = 9;
				}
				break;
			case 66:
				{
				alt104 = 10;
				}
				break;
			case 103:
				{
				alt104 = 11;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 104, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(104); }
			switch (alt104)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:368:2: ( cast_expression )=> cast_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(368, 23);
				PushFollow(Follow._cast_expression_in_unary_expression2569);
				cast_expression327=cast_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, cast_expression327.Tree, cast_expression327, "cast_expression327", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:369:4: primary_or_array_creation_expression ( '++' )? ( '--' )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(369, 4);
				PushFollow(Follow._primary_or_array_creation_expression_in_unary_expression2574);
				primary_or_array_creation_expression328=primary_or_array_creation_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primary_or_array_creation_expression328.Tree, primary_or_array_creation_expression328, "primary_or_array_creation_expression328", retval);
				DebugLocation(369, 43);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:369:43: ( '++' )?
				int alt102=2;
				try { DebugEnterSubRule(102);
				try { DebugEnterDecision(102, false);
				int LA102_1 = input.LA(1);

				if ((LA102_1==72))
				{
					alt102 = 1;
				}
				} finally { DebugExitDecision(102); }
				switch (alt102)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:369:43: '++'
					{
					DebugLocation(369, 43);
					string_literal329=(IToken)Match(input,72,Follow._72_in_unary_expression2578); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal329_tree = (object)adaptor.Create(string_literal329, "string_literal329", retval);
					adaptor.AddChild(root_0, string_literal329_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(102); }

				DebugLocation(369, 51);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:369:51: ( '--' )?
				int alt103=2;
				try { DebugEnterSubRule(103);
				try { DebugEnterDecision(103, false);
				int LA103_1 = input.LA(1);

				if ((LA103_1==75))
				{
					alt103 = 1;
				}
				} finally { DebugExitDecision(103); }
				switch (alt103)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:369:51: '--'
					{
					DebugLocation(369, 51);
					string_literal330=(IToken)Match(input,75,Follow._75_in_unary_expression2583); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal330_tree = (object)adaptor.Create(string_literal330, "string_literal330", retval);
					adaptor.AddChild(root_0, string_literal330_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(103); }


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:370:4: '+' unary_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(370, 4);
				char_literal331=(IToken)Match(input,71,Follow._71_in_unary_expression2589); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal331_tree = (object)adaptor.Create(char_literal331, "char_literal331", retval);
				adaptor.AddChild(root_0, char_literal331_tree);
				}
				DebugLocation(370, 10);
				PushFollow(Follow._unary_expression_in_unary_expression2593);
				unary_expression332=unary_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression332.Tree, unary_expression332, "unary_expression332", retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:371:4: '-' unary_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(371, 4);
				char_literal333=(IToken)Match(input,MINUS,Follow._MINUS_in_unary_expression2599); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal333_tree = (object)adaptor.Create(char_literal333, "char_literal333", retval);
				adaptor.AddChild(root_0, char_literal333_tree);
				}
				DebugLocation(371, 10);
				PushFollow(Follow._unary_expression_in_unary_expression2603);
				unary_expression334=unary_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression334.Tree, unary_expression334, "unary_expression334", retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:372:4: '!' unary_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(372, 4);
				char_literal335=(IToken)Match(input,61,Follow._61_in_unary_expression2609); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal335_tree = (object)adaptor.Create(char_literal335, "char_literal335", retval);
				adaptor.AddChild(root_0, char_literal335_tree);
				}
				DebugLocation(372, 10);
				PushFollow(Follow._unary_expression_in_unary_expression2613);
				unary_expression336=unary_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression336.Tree, unary_expression336, "unary_expression336", retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:373:4: '~' unary_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(373, 4);
				char_literal337=(IToken)Match(input,204,Follow._204_in_unary_expression2619); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal337_tree = (object)adaptor.Create(char_literal337, "char_literal337", retval);
				adaptor.AddChild(root_0, char_literal337_tree);
				}
				DebugLocation(373, 10);
				PushFollow(Follow._unary_expression_in_unary_expression2623);
				unary_expression338=unary_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression338.Tree, unary_expression338, "unary_expression338", retval);

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:374:4: pre_increment_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(374, 4);
				PushFollow(Follow._pre_increment_expression_in_unary_expression2629);
				pre_increment_expression339=pre_increment_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, pre_increment_expression339.Tree, pre_increment_expression339, "pre_increment_expression339", retval);

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:375:4: pre_decrement_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(375, 4);
				PushFollow(Follow._pre_decrement_expression_in_unary_expression2635);
				pre_decrement_expression340=pre_decrement_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, pre_decrement_expression340.Tree, pre_decrement_expression340, "pre_decrement_expression340", retval);

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:376:4: pointer_indirection_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(376, 4);
				PushFollow(Follow._pointer_indirection_expression_in_unary_expression2641);
				pointer_indirection_expression341=pointer_indirection_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, pointer_indirection_expression341.Tree, pointer_indirection_expression341, "pointer_indirection_expression341", retval);

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:377:4: addressof_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(377, 4);
				PushFollow(Follow._addressof_expression_in_unary_expression2646);
				addressof_expression342=addressof_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, addressof_expression342.Tree, addressof_expression342, "addressof_expression342", retval);

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:378:4: await_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(378, 4);
				PushFollow(Follow._await_expression_in_unary_expression2651);
				await_expression343=await_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, await_expression343.Tree, await_expression343, "await_expression343", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unary_expression", 89);
			LeaveRule("unary_expression", 89);
			LeaveRule_unary_expression();
			if (state.backtracking > 0) { Memoize(input, 89, unary_expression_StartIndex); }

		}
		DebugLocation(379, 1);
		} finally { DebugExitRule(GrammarFileName, "unary_expression"); }
		return retval;

	}
	// $ANTLR end "unary_expression"

	partial void EnterRule_await_expression();
	partial void LeaveRule_await_expression();
	// $ANTLR start "await_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:380:1: await_expression : 'await' unary_expression ;
	[GrammarRule("await_expression")]
	private Antlr3AstNode await_expression()
	{
		EnterRule_await_expression();
		EnterRule("await_expression", 90);
		var retval = new Antlr3AstNode("await_expression");
		
		retval.Start = (IToken)input.LT(1);
		int await_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal344 = default(IToken);
		Antlr3AstNode unary_expression345 = default(Antlr3AstNode);

		object string_literal344_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "await_expression");
		DebugLocation(380, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 90)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:380:17: ( 'await' unary_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:381:2: 'await' unary_expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(381, 2);
			string_literal344=(IToken)Match(input,103,Follow._103_in_await_expression2660); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal344_tree = (object)adaptor.Create(string_literal344, "string_literal344", retval);
			adaptor.AddChild(root_0, string_literal344_tree);
			}
			DebugLocation(381, 10);
			PushFollow(Follow._unary_expression_in_await_expression2662);
			unary_expression345=unary_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression345.Tree, unary_expression345, "unary_expression345", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("await_expression", 90);
			LeaveRule("await_expression", 90);
			LeaveRule_await_expression();
			if (state.backtracking > 0) { Memoize(input, 90, await_expression_StartIndex); }

		}
		DebugLocation(382, 1);
		} finally { DebugExitRule(GrammarFileName, "await_expression"); }
		return retval;

	}
	// $ANTLR end "await_expression"

	partial void EnterRule_cast_expression();
	partial void LeaveRule_cast_expression();
	// $ANTLR start "cast_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:383:1: cast_expression : '(' type ')' unary_expression ;
	[GrammarRule("cast_expression")]
	private Antlr3AstNode cast_expression()
	{
		EnterRule_cast_expression();
		EnterRule("cast_expression", 91);
		var retval = new Antlr3AstNode("cast_expression");
		
		retval.Start = (IToken)input.LT(1);
		int cast_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal346 = default(IToken);
		IToken char_literal348 = default(IToken);
		Antlr3AstNode type347 = default(Antlr3AstNode);
		Antlr3AstNode unary_expression349 = default(Antlr3AstNode);

		object char_literal346_tree = default(object);
		object char_literal348_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "cast_expression");
		DebugLocation(383, 37);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 91)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:383:16: ( '(' type ')' unary_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:384:2: '(' type ')' unary_expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(384, 2);
			char_literal346=(IToken)Match(input,68,Follow._68_in_cast_expression2671); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal346_tree = (object)adaptor.Create(char_literal346, "char_literal346", retval);
			adaptor.AddChild(root_0, char_literal346_tree);
			}
			DebugLocation(384, 8);
			PushFollow(Follow._type_in_cast_expression2675);
			type347=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type347.Tree, type347, "type347", retval);
			DebugLocation(384, 15);
			char_literal348=(IToken)Match(input,RPAREN,Follow._RPAREN_in_cast_expression2679); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal348_tree = (object)adaptor.Create(char_literal348, "char_literal348", retval);
			adaptor.AddChild(root_0, char_literal348_tree);
			}
			DebugLocation(384, 21);
			PushFollow(Follow._unary_expression_in_cast_expression2683);
			unary_expression349=unary_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression349.Tree, unary_expression349, "unary_expression349", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("cast_expression", 91);
			LeaveRule("cast_expression", 91);
			LeaveRule_cast_expression();
			if (state.backtracking > 0) { Memoize(input, 91, cast_expression_StartIndex); }

		}
		DebugLocation(384, 37);
		} finally { DebugExitRule(GrammarFileName, "cast_expression"); }
		return retval;

	}
	// $ANTLR end "cast_expression"

	partial void EnterRule_assignment_operator();
	partial void LeaveRule_assignment_operator();
	// $ANTLR start "assignment_operator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:385:1: assignment_operator : ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '&=' | '|=' | '^=' | '<<=' | '>' '>=' );
	[GrammarRule("assignment_operator")]
	private Antlr3AstNode assignment_operator()
	{
		EnterRule_assignment_operator();
		EnterRule("assignment_operator", 92);
		var retval = new Antlr3AstNode("assignment_operator");
		
		retval.Start = (IToken)input.LT(1);
		int assignment_operator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal350 = default(IToken);
		IToken string_literal351 = default(IToken);
		IToken string_literal352 = default(IToken);
		IToken string_literal353 = default(IToken);
		IToken string_literal354 = default(IToken);
		IToken string_literal355 = default(IToken);
		IToken string_literal356 = default(IToken);
		IToken string_literal357 = default(IToken);
		IToken string_literal358 = default(IToken);
		IToken string_literal359 = default(IToken);
		IToken char_literal360 = default(IToken);
		IToken string_literal361 = default(IToken);

		object char_literal350_tree = default(object);
		object string_literal351_tree = default(object);
		object string_literal352_tree = default(object);
		object string_literal353_tree = default(object);
		object string_literal354_tree = default(object);
		object string_literal355_tree = default(object);
		object string_literal356_tree = default(object);
		object string_literal357_tree = default(object);
		object string_literal358_tree = default(object);
		object string_literal359_tree = default(object);
		object char_literal360_tree = default(object);
		object string_literal361_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "assignment_operator");
		DebugLocation(385, 80);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 92)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:385:20: ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '&=' | '|=' | '^=' | '<<=' | '>' '>=' )
			int alt105=11;
			try { DebugEnterDecision(105, false);
			switch (input.LA(1))
			{
			case 85:
				{
				alt105 = 1;
				}
				break;
			case 73:
				{
				alt105 = 2;
				}
				break;
			case 76:
				{
				alt105 = 3;
				}
				break;
			case 70:
				{
				alt105 = 4;
				}
				break;
			case 78:
				{
				alt105 = 5;
				}
				break;
			case 64:
				{
				alt105 = 6;
				}
				break;
			case 67:
				{
				alt105 = 7;
				}
				break;
			case 201:
				{
				alt105 = 8;
				}
				break;
			case 94:
				{
				alt105 = 9;
				}
				break;
			case 83:
				{
				alt105 = 10;
				}
				break;
			case GT:
				{
				alt105 = 11;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 105, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(105); }
			switch (alt105)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:386:2: '='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(386, 2);
				char_literal350=(IToken)Match(input,85,Follow._85_in_assignment_operator2691); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal350_tree = (object)adaptor.Create(char_literal350, "char_literal350", retval);
				adaptor.AddChild(root_0, char_literal350_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:386:8: '+='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(386, 8);
				string_literal351=(IToken)Match(input,73,Follow._73_in_assignment_operator2695); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal351_tree = (object)adaptor.Create(string_literal351, "string_literal351", retval);
				adaptor.AddChild(root_0, string_literal351_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:386:15: '-='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(386, 15);
				string_literal352=(IToken)Match(input,76,Follow._76_in_assignment_operator2699); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal352_tree = (object)adaptor.Create(string_literal352, "string_literal352", retval);
				adaptor.AddChild(root_0, string_literal352_tree);
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:386:22: '*='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(386, 22);
				string_literal353=(IToken)Match(input,70,Follow._70_in_assignment_operator2703); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal353_tree = (object)adaptor.Create(string_literal353, "string_literal353", retval);
				adaptor.AddChild(root_0, string_literal353_tree);
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:386:29: '/='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(386, 29);
				string_literal354=(IToken)Match(input,78,Follow._78_in_assignment_operator2707); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal354_tree = (object)adaptor.Create(string_literal354, "string_literal354", retval);
				adaptor.AddChild(root_0, string_literal354_tree);
				}

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:386:36: '%='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(386, 36);
				string_literal355=(IToken)Match(input,64,Follow._64_in_assignment_operator2711); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal355_tree = (object)adaptor.Create(string_literal355, "string_literal355", retval);
				adaptor.AddChild(root_0, string_literal355_tree);
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:386:43: '&='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(386, 43);
				string_literal356=(IToken)Match(input,67,Follow._67_in_assignment_operator2715); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal356_tree = (object)adaptor.Create(string_literal356, "string_literal356", retval);
				adaptor.AddChild(root_0, string_literal356_tree);
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:386:50: '|='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(386, 50);
				string_literal357=(IToken)Match(input,201,Follow._201_in_assignment_operator2719); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal357_tree = (object)adaptor.Create(string_literal357, "string_literal357", retval);
				adaptor.AddChild(root_0, string_literal357_tree);
				}

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:386:57: '^='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(386, 57);
				string_literal358=(IToken)Match(input,94,Follow._94_in_assignment_operator2723); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal358_tree = (object)adaptor.Create(string_literal358, "string_literal358", retval);
				adaptor.AddChild(root_0, string_literal358_tree);
				}

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:386:64: '<<='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(386, 64);
				string_literal359=(IToken)Match(input,83,Follow._83_in_assignment_operator2727); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal359_tree = (object)adaptor.Create(string_literal359, "string_literal359", retval);
				adaptor.AddChild(root_0, string_literal359_tree);
				}

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:386:72: '>' '>='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(386, 72);
				char_literal360=(IToken)Match(input,GT,Follow._GT_in_assignment_operator2731); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal360_tree = (object)adaptor.Create(char_literal360, "char_literal360", retval);
				adaptor.AddChild(root_0, char_literal360_tree);
				}
				DebugLocation(386, 76);
				string_literal361=(IToken)Match(input,88,Follow._88_in_assignment_operator2733); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal361_tree = (object)adaptor.Create(string_literal361, "string_literal361", retval);
				adaptor.AddChild(root_0, string_literal361_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("assignment_operator", 92);
			LeaveRule("assignment_operator", 92);
			LeaveRule_assignment_operator();
			if (state.backtracking > 0) { Memoize(input, 92, assignment_operator_StartIndex); }

		}
		DebugLocation(386, 80);
		} finally { DebugExitRule(GrammarFileName, "assignment_operator"); }
		return retval;

	}
	// $ANTLR end "assignment_operator"

	partial void EnterRule_pre_increment_expression();
	partial void LeaveRule_pre_increment_expression();
	// $ANTLR start "pre_increment_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:387:1: pre_increment_expression : '++' unary_expression ;
	[GrammarRule("pre_increment_expression")]
	private Antlr3AstNode pre_increment_expression()
	{
		EnterRule_pre_increment_expression();
		EnterRule("pre_increment_expression", 93);
		var retval = new Antlr3AstNode("pre_increment_expression");
		
		retval.Start = (IToken)input.LT(1);
		int pre_increment_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal362 = default(IToken);
		Antlr3AstNode unary_expression363 = default(Antlr3AstNode);

		object string_literal362_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "pre_increment_expression");
		DebugLocation(387, 25);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 93)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:387:25: ( '++' unary_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:388:2: '++' unary_expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(388, 2);
			string_literal362=(IToken)Match(input,72,Follow._72_in_pre_increment_expression2742); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal362_tree = (object)adaptor.Create(string_literal362, "string_literal362", retval);
			adaptor.AddChild(root_0, string_literal362_tree);
			}
			DebugLocation(388, 9);
			PushFollow(Follow._unary_expression_in_pre_increment_expression2746);
			unary_expression363=unary_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression363.Tree, unary_expression363, "unary_expression363", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("pre_increment_expression", 93);
			LeaveRule("pre_increment_expression", 93);
			LeaveRule_pre_increment_expression();
			if (state.backtracking > 0) { Memoize(input, 93, pre_increment_expression_StartIndex); }

		}
		DebugLocation(388, 25);
		} finally { DebugExitRule(GrammarFileName, "pre_increment_expression"); }
		return retval;

	}
	// $ANTLR end "pre_increment_expression"

	partial void EnterRule_pre_decrement_expression();
	partial void LeaveRule_pre_decrement_expression();
	// $ANTLR start "pre_decrement_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:389:1: pre_decrement_expression : '--' unary_expression ;
	[GrammarRule("pre_decrement_expression")]
	private Antlr3AstNode pre_decrement_expression()
	{
		EnterRule_pre_decrement_expression();
		EnterRule("pre_decrement_expression", 94);
		var retval = new Antlr3AstNode("pre_decrement_expression");
		
		retval.Start = (IToken)input.LT(1);
		int pre_decrement_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal364 = default(IToken);
		Antlr3AstNode unary_expression365 = default(Antlr3AstNode);

		object string_literal364_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "pre_decrement_expression");
		DebugLocation(389, 25);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 94)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:389:25: ( '--' unary_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:390:2: '--' unary_expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(390, 2);
			string_literal364=(IToken)Match(input,75,Follow._75_in_pre_decrement_expression2755); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal364_tree = (object)adaptor.Create(string_literal364, "string_literal364", retval);
			adaptor.AddChild(root_0, string_literal364_tree);
			}
			DebugLocation(390, 9);
			PushFollow(Follow._unary_expression_in_pre_decrement_expression2759);
			unary_expression365=unary_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression365.Tree, unary_expression365, "unary_expression365", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("pre_decrement_expression", 94);
			LeaveRule("pre_decrement_expression", 94);
			LeaveRule_pre_decrement_expression();
			if (state.backtracking > 0) { Memoize(input, 94, pre_decrement_expression_StartIndex); }

		}
		DebugLocation(390, 25);
		} finally { DebugExitRule(GrammarFileName, "pre_decrement_expression"); }
		return retval;

	}
	// $ANTLR end "pre_decrement_expression"

	partial void EnterRule_pointer_indirection_expression();
	partial void LeaveRule_pointer_indirection_expression();
	// $ANTLR start "pointer_indirection_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:391:1: pointer_indirection_expression : '*' unary_expression ;
	[GrammarRule("pointer_indirection_expression")]
	private Antlr3AstNode pointer_indirection_expression()
	{
		EnterRule_pointer_indirection_expression();
		EnterRule("pointer_indirection_expression", 95);
		var retval = new Antlr3AstNode("pointer_indirection_expression");
		
		retval.Start = (IToken)input.LT(1);
		int pointer_indirection_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal366 = default(IToken);
		Antlr3AstNode unary_expression367 = default(Antlr3AstNode);

		object char_literal366_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "pointer_indirection_expression");
		DebugLocation(391, 24);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 95)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:391:31: ( '*' unary_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:392:2: '*' unary_expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(392, 2);
			char_literal366=(IToken)Match(input,69,Follow._69_in_pointer_indirection_expression2767); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal366_tree = (object)adaptor.Create(char_literal366, "char_literal366", retval);
			adaptor.AddChild(root_0, char_literal366_tree);
			}
			DebugLocation(392, 8);
			PushFollow(Follow._unary_expression_in_pointer_indirection_expression2771);
			unary_expression367=unary_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression367.Tree, unary_expression367, "unary_expression367", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("pointer_indirection_expression", 95);
			LeaveRule("pointer_indirection_expression", 95);
			LeaveRule_pointer_indirection_expression();
			if (state.backtracking > 0) { Memoize(input, 95, pointer_indirection_expression_StartIndex); }

		}
		DebugLocation(392, 24);
		} finally { DebugExitRule(GrammarFileName, "pointer_indirection_expression"); }
		return retval;

	}
	// $ANTLR end "pointer_indirection_expression"

	partial void EnterRule_addressof_expression();
	partial void LeaveRule_addressof_expression();
	// $ANTLR start "addressof_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:393:1: addressof_expression : '&' unary_expression ;
	[GrammarRule("addressof_expression")]
	private Antlr3AstNode addressof_expression()
	{
		EnterRule_addressof_expression();
		EnterRule("addressof_expression", 96);
		var retval = new Antlr3AstNode("addressof_expression");
		
		retval.Start = (IToken)input.LT(1);
		int addressof_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal368 = default(IToken);
		Antlr3AstNode unary_expression369 = default(Antlr3AstNode);

		object char_literal368_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "addressof_expression");
		DebugLocation(393, 24);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 96)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:393:21: ( '&' unary_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:394:2: '&' unary_expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(394, 2);
			char_literal368=(IToken)Match(input,66,Follow._66_in_addressof_expression2779); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal368_tree = (object)adaptor.Create(char_literal368, "char_literal368", retval);
			adaptor.AddChild(root_0, char_literal368_tree);
			}
			DebugLocation(394, 8);
			PushFollow(Follow._unary_expression_in_addressof_expression2783);
			unary_expression369=unary_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression369.Tree, unary_expression369, "unary_expression369", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("addressof_expression", 96);
			LeaveRule("addressof_expression", 96);
			LeaveRule_addressof_expression();
			if (state.backtracking > 0) { Memoize(input, 96, addressof_expression_StartIndex); }

		}
		DebugLocation(394, 24);
		} finally { DebugExitRule(GrammarFileName, "addressof_expression"); }
		return retval;

	}
	// $ANTLR end "addressof_expression"

	partial void EnterRule_non_assignment_expression();
	partial void LeaveRule_non_assignment_expression();
	// $ANTLR start "non_assignment_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:396:1: non_assignment_expression : ( ( ( 'async' )? anonymous_function_signature '=>' )=> lambda_expression | ( query_expression )=> query_expression | conditional_expression );
	[GrammarRule("non_assignment_expression")]
	private Antlr3AstNode non_assignment_expression()
	{
		EnterRule_non_assignment_expression();
		EnterRule("non_assignment_expression", 97);
		var retval = new Antlr3AstNode("non_assignment_expression");
		
		retval.Start = (IToken)input.LT(1);
		int non_assignment_expression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode lambda_expression370 = default(Antlr3AstNode);
		Antlr3AstNode query_expression371 = default(Antlr3AstNode);
		Antlr3AstNode conditional_expression372 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "non_assignment_expression");
		DebugLocation(396, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 97)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:396:26: ( ( ( 'async' )? anonymous_function_signature '=>' )=> lambda_expression | ( query_expression )=> query_expression | conditional_expression )
			int alt106=3;
			try { DebugEnterDecision(106, false);
			switch (input.LA(1))
			{
			case 102:
				{
				int LA106_2 = input.LA(2);

				if ((EvaluatePredicate(synpred18_cs_fragment)))
				{
					alt106 = 1;
				}
				else if ((true))
				{
					alt106 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 106, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 68:
				{
				int LA106_2 = input.LA(2);

				if ((EvaluatePredicate(synpred18_cs_fragment)))
				{
					alt106 = 1;
				}
				else if ((true))
				{
					alt106 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 106, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 134:
				{
				int LA106_2 = input.LA(2);

				if ((EvaluatePredicate(synpred18_cs_fragment)))
				{
					alt106 = 1;
				}
				else if ((EvaluatePredicate(synpred19_cs_fragment)))
				{
					alt106 = 2;
				}
				else if ((true))
				{
					alt106 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 106, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 107:
			case 119:
			case 122:
			case 124:
			case 128:
			case 137:
			case 143:
			case 145:
			case 146:
			case 149:
			case 150:
			case 154:
			case 156:
			case 159:
			case 162:
			case 164:
			case 169:
			case 173:
			case 174:
			case 185:
			case 192:
			case 196:
			case 198:
				{
				int LA106_2 = input.LA(2);

				if ((EvaluatePredicate(synpred18_cs_fragment)))
				{
					alt106 = 1;
				}
				else if ((true))
				{
					alt106 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 106, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case MINUS:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 61:
			case 66:
			case 69:
			case 71:
			case 72:
			case 75:
			case 103:
			case 104:
			case 105:
			case 108:
			case 111:
			case 112:
			case 116:
			case 117:
			case 118:
			case 121:
			case 131:
			case 140:
			case 148:
			case 152:
			case 153:
			case 171:
			case 175:
			case 176:
			case 179:
			case 182:
			case 186:
			case 187:
			case 188:
			case 189:
			case 191:
			case 204:
				{
				alt106 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 106, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(106); }
			switch (alt106)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:398:2: ( ( 'async' )? anonymous_function_signature '=>' )=> lambda_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(398, 50);
				PushFollow(Follow._lambda_expression_in_non_assignment_expression2805);
				lambda_expression370=lambda_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, lambda_expression370.Tree, lambda_expression370, "lambda_expression370", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:399:4: ( query_expression )=> query_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(399, 26);
				PushFollow(Follow._query_expression_in_non_assignment_expression2816);
				query_expression371=query_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, query_expression371.Tree, query_expression371, "query_expression371", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:400:4: conditional_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(400, 4);
				PushFollow(Follow._conditional_expression_in_non_assignment_expression2822);
				conditional_expression372=conditional_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, conditional_expression372.Tree, conditional_expression372, "conditional_expression372", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("non_assignment_expression", 97);
			LeaveRule("non_assignment_expression", 97);
			LeaveRule_non_assignment_expression();
			if (state.backtracking > 0) { Memoize(input, 97, non_assignment_expression_StartIndex); }

		}
		DebugLocation(401, 1);
		} finally { DebugExitRule(GrammarFileName, "non_assignment_expression"); }
		return retval;

	}
	// $ANTLR end "non_assignment_expression"

	partial void EnterRule_multiplicative_expression();
	partial void LeaveRule_multiplicative_expression();
	// $ANTLR start "multiplicative_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:407:1: multiplicative_expression : unary_expression ( ( '*' | '/' | '%' ) unary_expression )* ;
	[GrammarRule("multiplicative_expression")]
	private Antlr3AstNode multiplicative_expression()
	{
		EnterRule_multiplicative_expression();
		EnterRule("multiplicative_expression", 98);
		var retval = new Antlr3AstNode("multiplicative_expression");
		
		retval.Start = (IToken)input.LT(1);
		int multiplicative_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set374 = default(IToken);
		Antlr3AstNode unary_expression373 = default(Antlr3AstNode);
		Antlr3AstNode unary_expression375 = default(Antlr3AstNode);

		object set374_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "multiplicative_expression");
		DebugLocation(407, 56);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 98)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:407:26: ( unary_expression ( ( '*' | '/' | '%' ) unary_expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:408:2: unary_expression ( ( '*' | '/' | '%' ) unary_expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(408, 2);
			PushFollow(Follow._unary_expression_in_multiplicative_expression2836);
			unary_expression373=unary_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression373.Tree, unary_expression373, "unary_expression373", retval);
			DebugLocation(408, 19);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:408:19: ( ( '*' | '/' | '%' ) unary_expression )*
			try { DebugEnterSubRule(107);
			while (true)
			{
				int alt107=2;
				try { DebugEnterDecision(107, false);
				int LA107_1 = input.LA(1);

				if ((LA107_1==63||LA107_1==69||LA107_1==77))
				{
					alt107 = 1;
				}


				} finally { DebugExitDecision(107); }
				switch ( alt107 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:408:22: ( '*' | '/' | '%' ) unary_expression
					{
					DebugLocation(408, 22);

					set374=(IToken)input.LT(1);
					if (input.LA(1)==63||input.LA(1)==69||input.LA(1)==77)
					{
						input.Consume();
						if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set374, "set374", retval));
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}

					DebugLocation(408, 38);
					PushFollow(Follow._unary_expression_in_multiplicative_expression2851);
					unary_expression375=unary_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression375.Tree, unary_expression375, "unary_expression375", retval);

					}
					break;

				default:
					goto loop107;
				}
			}

			loop107:
				;

			} finally { DebugExitSubRule(107); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("multiplicative_expression", 98);
			LeaveRule("multiplicative_expression", 98);
			LeaveRule_multiplicative_expression();
			if (state.backtracking > 0) { Memoize(input, 98, multiplicative_expression_StartIndex); }

		}
		DebugLocation(408, 56);
		} finally { DebugExitRule(GrammarFileName, "multiplicative_expression"); }
		return retval;

	}
	// $ANTLR end "multiplicative_expression"

	partial void EnterRule_additive_expression();
	partial void LeaveRule_additive_expression();
	// $ANTLR start "additive_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:409:1: additive_expression : multiplicative_expression ( ( '+' | '-' ) multiplicative_expression )* ;
	[GrammarRule("additive_expression")]
	private Antlr3AstNode additive_expression()
	{
		EnterRule_additive_expression();
		EnterRule("additive_expression", 99);
		var retval = new Antlr3AstNode("additive_expression");
		
		retval.Start = (IToken)input.LT(1);
		int additive_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set377 = default(IToken);
		Antlr3AstNode multiplicative_expression376 = default(Antlr3AstNode);
		Antlr3AstNode multiplicative_expression378 = default(Antlr3AstNode);

		object set377_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "additive_expression");
		DebugLocation(409, 68);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 99)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:409:20: ( multiplicative_expression ( ( '+' | '-' ) multiplicative_expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:410:2: multiplicative_expression ( ( '+' | '-' ) multiplicative_expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(410, 2);
			PushFollow(Follow._multiplicative_expression_in_additive_expression2861);
			multiplicative_expression376=multiplicative_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, multiplicative_expression376.Tree, multiplicative_expression376, "multiplicative_expression376", retval);
			DebugLocation(410, 28);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:410:28: ( ( '+' | '-' ) multiplicative_expression )*
			try { DebugEnterSubRule(108);
			while (true)
			{
				int alt108=2;
				try { DebugEnterDecision(108, false);
				int LA108_1 = input.LA(1);

				if ((LA108_1==MINUS||LA108_1==71))
				{
					alt108 = 1;
				}


				} finally { DebugExitDecision(108); }
				switch ( alt108 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:410:29: ( '+' | '-' ) multiplicative_expression
					{
					DebugLocation(410, 29);

					set377=(IToken)input.LT(1);
					if (input.LA(1)==MINUS||input.LA(1)==71)
					{
						input.Consume();
						if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set377, "set377", retval));
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}

					DebugLocation(410, 41);
					PushFollow(Follow._multiplicative_expression_in_additive_expression2872);
					multiplicative_expression378=multiplicative_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, multiplicative_expression378.Tree, multiplicative_expression378, "multiplicative_expression378", retval);

					}
					break;

				default:
					goto loop108;
				}
			}

			loop108:
				;

			} finally { DebugExitSubRule(108); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("additive_expression", 99);
			LeaveRule("additive_expression", 99);
			LeaveRule_additive_expression();
			if (state.backtracking > 0) { Memoize(input, 99, additive_expression_StartIndex); }

		}
		DebugLocation(410, 68);
		} finally { DebugExitRule(GrammarFileName, "additive_expression"); }
		return retval;

	}
	// $ANTLR end "additive_expression"

	partial void EnterRule_shift_expression();
	partial void LeaveRule_shift_expression();
	// $ANTLR start "shift_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:412:1: shift_expression : additive_expression ( ( '<<' | '>' '>' ) additive_expression )* ;
	[GrammarRule("shift_expression")]
	private Antlr3AstNode shift_expression()
	{
		EnterRule_shift_expression();
		EnterRule("shift_expression", 100);
		var retval = new Antlr3AstNode("shift_expression");
		
		retval.Start = (IToken)input.LT(1);
		int shift_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal380 = default(IToken);
		IToken char_literal381 = default(IToken);
		IToken char_literal382 = default(IToken);
		Antlr3AstNode additive_expression379 = default(Antlr3AstNode);
		Antlr3AstNode additive_expression383 = default(Antlr3AstNode);

		object string_literal380_tree = default(object);
		object char_literal381_tree = default(object);
		object char_literal382_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "shift_expression");
		DebugLocation(412, 59);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 100)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:412:17: ( additive_expression ( ( '<<' | '>' '>' ) additive_expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:413:2: additive_expression ( ( '<<' | '>' '>' ) additive_expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(413, 2);
			PushFollow(Follow._additive_expression_in_shift_expression2883);
			additive_expression379=additive_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, additive_expression379.Tree, additive_expression379, "additive_expression379", retval);
			DebugLocation(413, 22);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:413:22: ( ( '<<' | '>' '>' ) additive_expression )*
			try { DebugEnterSubRule(110);
			while (true)
			{
				int alt110=2;
				try { DebugEnterDecision(110, false);
				int LA110_1 = input.LA(1);

				if ((LA110_1==GT))
				{
					int LA110_2 = input.LA(2);

					if ((LA110_2==GT))
					{
						alt110 = 1;
					}


				}
				else if ((LA110_1==82))
				{
					alt110 = 1;
				}


				} finally { DebugExitDecision(110); }
				switch ( alt110 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:413:23: ( '<<' | '>' '>' ) additive_expression
					{
					DebugLocation(413, 23);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:413:23: ( '<<' | '>' '>' )
					int alt109=2;
					try { DebugEnterSubRule(109);
					try { DebugEnterDecision(109, false);
					int LA109_1 = input.LA(1);

					if ((LA109_1==82))
					{
						alt109 = 1;
					}
					else if ((LA109_1==GT))
					{
						alt109 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 109, 0, input, 1);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					} finally { DebugExitDecision(109); }
					switch (alt109)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:413:24: '<<'
						{
						DebugLocation(413, 24);
						string_literal380=(IToken)Match(input,82,Follow._82_in_shift_expression2887); if (state.failed) return retval;
						if (state.backtracking == 0) {
						string_literal380_tree = (object)adaptor.Create(string_literal380, "string_literal380", retval);
						adaptor.AddChild(root_0, string_literal380_tree);
						}

						}
						break;
					case 2:
						DebugEnterAlt(2);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:413:29: '>' '>'
						{
						DebugLocation(413, 29);
						char_literal381=(IToken)Match(input,GT,Follow._GT_in_shift_expression2889); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal381_tree = (object)adaptor.Create(char_literal381, "char_literal381", retval);
						adaptor.AddChild(root_0, char_literal381_tree);
						}
						DebugLocation(413, 33);
						char_literal382=(IToken)Match(input,GT,Follow._GT_in_shift_expression2891); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal382_tree = (object)adaptor.Create(char_literal382, "char_literal382", retval);
						adaptor.AddChild(root_0, char_literal382_tree);
						}

						}
						break;

					}
					} finally { DebugExitSubRule(109); }

					DebugLocation(413, 38);
					PushFollow(Follow._additive_expression_in_shift_expression2894);
					additive_expression383=additive_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, additive_expression383.Tree, additive_expression383, "additive_expression383", retval);

					}
					break;

				default:
					goto loop110;
				}
			}

			loop110:
				;

			} finally { DebugExitSubRule(110); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("shift_expression", 100);
			LeaveRule("shift_expression", 100);
			LeaveRule_shift_expression();
			if (state.backtracking > 0) { Memoize(input, 100, shift_expression_StartIndex); }

		}
		DebugLocation(413, 59);
		} finally { DebugExitRule(GrammarFileName, "shift_expression"); }
		return retval;

	}
	// $ANTLR end "shift_expression"

	partial void EnterRule_relational_expression();
	partial void LeaveRule_relational_expression();
	// $ANTLR start "relational_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:414:1: relational_expression : shift_expression ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )* ;
	[GrammarRule("relational_expression")]
	private Antlr3AstNode relational_expression()
	{
		EnterRule_relational_expression();
		EnterRule("relational_expression", 101);
		var retval = new Antlr3AstNode("relational_expression");
		
		retval.Start = (IToken)input.LT(1);
		int relational_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set385 = default(IToken);
		IToken set387 = default(IToken);
		Antlr3AstNode shift_expression384 = default(Antlr3AstNode);
		Antlr3AstNode shift_expression386 = default(Antlr3AstNode);
		Antlr3AstNode non_nullable_type388 = default(Antlr3AstNode);

		object set385_tree = default(object);
		object set387_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "relational_expression");
		DebugLocation(414, 5);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 101)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:414:22: ( shift_expression ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:415:2: shift_expression ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(415, 2);
			PushFollow(Follow._shift_expression_in_relational_expression2904);
			shift_expression384=shift_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, shift_expression384.Tree, shift_expression384, "shift_expression384", retval);
			DebugLocation(416, 3);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:416:3: ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )*
			try { DebugEnterSubRule(111);
			while (true)
			{
				int alt111=3;
				try { DebugEnterDecision(111, false);
				int LA111_1 = input.LA(1);

				if ((LA111_1==GT||LA111_1==81||LA111_1==84||LA111_1==88))
				{
					alt111 = 1;
				}
				else if ((LA111_1==99||LA111_1==144))
				{
					alt111 = 2;
				}


				} finally { DebugExitDecision(111); }
				switch ( alt111 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:416:5: ( ( '<' | '>' | '>=' | '<=' ) shift_expression )
					{
					DebugLocation(416, 5);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:416:5: ( ( '<' | '>' | '>=' | '<=' ) shift_expression )
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:416:6: ( '<' | '>' | '>=' | '<=' ) shift_expression
					{
					DebugLocation(416, 6);

					set385=(IToken)input.LT(1);
					if (input.LA(1)==GT||input.LA(1)==81||input.LA(1)==84||input.LA(1)==88)
					{
						input.Consume();
						if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set385, "set385", retval));
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}

					DebugLocation(416, 26);
					PushFollow(Follow._shift_expression_in_relational_expression2921);
					shift_expression386=shift_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, shift_expression386.Tree, shift_expression386, "shift_expression386", retval);

					}


					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:417:6: ( ( 'is' | 'as' ) non_nullable_type )
					{
					DebugLocation(417, 6);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:417:6: ( ( 'is' | 'as' ) non_nullable_type )
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:417:7: ( 'is' | 'as' ) non_nullable_type
					{
					DebugLocation(417, 7);

					set387=(IToken)input.LT(1);
					if (input.LA(1)==99||input.LA(1)==144)
					{
						input.Consume();
						if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set387, "set387", retval));
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}

					DebugLocation(417, 21);
					PushFollow(Follow._non_nullable_type_in_relational_expression2938);
					non_nullable_type388=non_nullable_type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, non_nullable_type388.Tree, non_nullable_type388, "non_nullable_type388", retval);

					}


					}
					break;

				default:
					goto loop111;
				}
			}

			loop111:
				;

			} finally { DebugExitSubRule(111); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("relational_expression", 101);
			LeaveRule("relational_expression", 101);
			LeaveRule_relational_expression();
			if (state.backtracking > 0) { Memoize(input, 101, relational_expression_StartIndex); }

		}
		DebugLocation(418, 5);
		} finally { DebugExitRule(GrammarFileName, "relational_expression"); }
		return retval;

	}
	// $ANTLR end "relational_expression"

	partial void EnterRule_equality_expression();
	partial void LeaveRule_equality_expression();
	// $ANTLR start "equality_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:419:1: equality_expression : relational_expression ( ( '==' | '!=' ) relational_expression )* ;
	[GrammarRule("equality_expression")]
	private Antlr3AstNode equality_expression()
	{
		EnterRule_equality_expression();
		EnterRule("equality_expression", 102);
		var retval = new Antlr3AstNode("equality_expression");
		
		retval.Start = (IToken)input.LT(1);
		int equality_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set390 = default(IToken);
		Antlr3AstNode relational_expression389 = default(Antlr3AstNode);
		Antlr3AstNode relational_expression391 = default(Antlr3AstNode);

		object set390_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "equality_expression");
		DebugLocation(419, 43);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 102)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:419:20: ( relational_expression ( ( '==' | '!=' ) relational_expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:420:2: relational_expression ( ( '==' | '!=' ) relational_expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(420, 2);
			PushFollow(Follow._relational_expression_in_equality_expression2952);
			relational_expression389=relational_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, relational_expression389.Tree, relational_expression389, "relational_expression389", retval);
			DebugLocation(421, 5);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:421:5: ( ( '==' | '!=' ) relational_expression )*
			try { DebugEnterSubRule(112);
			while (true)
			{
				int alt112=2;
				try { DebugEnterDecision(112, false);
				int LA112_1 = input.LA(1);

				if ((LA112_1==62||LA112_1==86))
				{
					alt112 = 1;
				}


				} finally { DebugExitDecision(112); }
				switch ( alt112 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:421:6: ( '==' | '!=' ) relational_expression
					{
					DebugLocation(421, 6);

					set390=(IToken)input.LT(1);
					if (input.LA(1)==62||input.LA(1)==86)
					{
						input.Consume();
						if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set390, "set390", retval));
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}

					DebugLocation(421, 20);
					PushFollow(Follow._relational_expression_in_equality_expression2967);
					relational_expression391=relational_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, relational_expression391.Tree, relational_expression391, "relational_expression391", retval);

					}
					break;

				default:
					goto loop112;
				}
			}

			loop112:
				;

			} finally { DebugExitSubRule(112); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("equality_expression", 102);
			LeaveRule("equality_expression", 102);
			LeaveRule_equality_expression();
			if (state.backtracking > 0) { Memoize(input, 102, equality_expression_StartIndex); }

		}
		DebugLocation(421, 43);
		} finally { DebugExitRule(GrammarFileName, "equality_expression"); }
		return retval;

	}
	// $ANTLR end "equality_expression"

	partial void EnterRule_and_expression();
	partial void LeaveRule_and_expression();
	// $ANTLR start "and_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:422:1: and_expression : equality_expression ( '&' equality_expression )* ;
	[GrammarRule("and_expression")]
	private Antlr3AstNode and_expression()
	{
		EnterRule_and_expression();
		EnterRule("and_expression", 103);
		var retval = new Antlr3AstNode("and_expression");
		
		retval.Start = (IToken)input.LT(1);
		int and_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal393 = default(IToken);
		Antlr3AstNode equality_expression392 = default(Antlr3AstNode);
		Antlr3AstNode equality_expression394 = default(Antlr3AstNode);

		object char_literal393_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "and_expression");
		DebugLocation(422, 50);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 103)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:422:15: ( equality_expression ( '&' equality_expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:423:2: equality_expression ( '&' equality_expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(423, 2);
			PushFollow(Follow._equality_expression_in_and_expression2977);
			equality_expression392=equality_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, equality_expression392.Tree, equality_expression392, "equality_expression392", retval);
			DebugLocation(423, 22);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:423:22: ( '&' equality_expression )*
			try { DebugEnterSubRule(113);
			while (true)
			{
				int alt113=2;
				try { DebugEnterDecision(113, false);
				int LA113_1 = input.LA(1);

				if ((LA113_1==66))
				{
					alt113 = 1;
				}


				} finally { DebugExitDecision(113); }
				switch ( alt113 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:423:23: '&' equality_expression
					{
					DebugLocation(423, 23);
					char_literal393=(IToken)Match(input,66,Follow._66_in_and_expression2980); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal393_tree = (object)adaptor.Create(char_literal393, "char_literal393", retval);
					adaptor.AddChild(root_0, char_literal393_tree);
					}
					DebugLocation(423, 29);
					PushFollow(Follow._equality_expression_in_and_expression2984);
					equality_expression394=equality_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, equality_expression394.Tree, equality_expression394, "equality_expression394", retval);

					}
					break;

				default:
					goto loop113;
				}
			}

			loop113:
				;

			} finally { DebugExitSubRule(113); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("and_expression", 103);
			LeaveRule("and_expression", 103);
			LeaveRule_and_expression();
			if (state.backtracking > 0) { Memoize(input, 103, and_expression_StartIndex); }

		}
		DebugLocation(423, 50);
		} finally { DebugExitRule(GrammarFileName, "and_expression"); }
		return retval;

	}
	// $ANTLR end "and_expression"

	partial void EnterRule_exclusive_or_expression();
	partial void LeaveRule_exclusive_or_expression();
	// $ANTLR start "exclusive_or_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:424:1: exclusive_or_expression : and_expression ( '^' and_expression )* ;
	[GrammarRule("exclusive_or_expression")]
	private Antlr3AstNode exclusive_or_expression()
	{
		EnterRule_exclusive_or_expression();
		EnterRule("exclusive_or_expression", 104);
		var retval = new Antlr3AstNode("exclusive_or_expression");
		
		retval.Start = (IToken)input.LT(1);
		int exclusive_or_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal396 = default(IToken);
		Antlr3AstNode and_expression395 = default(Antlr3AstNode);
		Antlr3AstNode and_expression397 = default(Antlr3AstNode);

		object char_literal396_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "exclusive_or_expression");
		DebugLocation(424, 40);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 104)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:424:24: ( and_expression ( '^' and_expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:425:2: and_expression ( '^' and_expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(425, 2);
			PushFollow(Follow._and_expression_in_exclusive_or_expression2994);
			and_expression395=and_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, and_expression395.Tree, and_expression395, "and_expression395", retval);
			DebugLocation(425, 17);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:425:17: ( '^' and_expression )*
			try { DebugEnterSubRule(114);
			while (true)
			{
				int alt114=2;
				try { DebugEnterDecision(114, false);
				int LA114_1 = input.LA(1);

				if ((LA114_1==93))
				{
					alt114 = 1;
				}


				} finally { DebugExitDecision(114); }
				switch ( alt114 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:425:18: '^' and_expression
					{
					DebugLocation(425, 18);
					char_literal396=(IToken)Match(input,93,Follow._93_in_exclusive_or_expression2997); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal396_tree = (object)adaptor.Create(char_literal396, "char_literal396", retval);
					adaptor.AddChild(root_0, char_literal396_tree);
					}
					DebugLocation(425, 24);
					PushFollow(Follow._and_expression_in_exclusive_or_expression3001);
					and_expression397=and_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, and_expression397.Tree, and_expression397, "and_expression397", retval);

					}
					break;

				default:
					goto loop114;
				}
			}

			loop114:
				;

			} finally { DebugExitSubRule(114); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("exclusive_or_expression", 104);
			LeaveRule("exclusive_or_expression", 104);
			LeaveRule_exclusive_or_expression();
			if (state.backtracking > 0) { Memoize(input, 104, exclusive_or_expression_StartIndex); }

		}
		DebugLocation(425, 40);
		} finally { DebugExitRule(GrammarFileName, "exclusive_or_expression"); }
		return retval;

	}
	// $ANTLR end "exclusive_or_expression"

	partial void EnterRule_inclusive_or_expression();
	partial void LeaveRule_inclusive_or_expression();
	// $ANTLR start "inclusive_or_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:426:1: inclusive_or_expression : exclusive_or_expression ( '|' exclusive_or_expression )* ;
	[GrammarRule("inclusive_or_expression")]
	private Antlr3AstNode inclusive_or_expression()
	{
		EnterRule_inclusive_or_expression();
		EnterRule("inclusive_or_expression", 105);
		var retval = new Antlr3AstNode("inclusive_or_expression");
		
		retval.Start = (IToken)input.LT(1);
		int inclusive_or_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal399 = default(IToken);
		Antlr3AstNode exclusive_or_expression398 = default(Antlr3AstNode);
		Antlr3AstNode exclusive_or_expression400 = default(Antlr3AstNode);

		object char_literal399_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "inclusive_or_expression");
		DebugLocation(426, 60);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 105)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:426:24: ( exclusive_or_expression ( '|' exclusive_or_expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:427:2: exclusive_or_expression ( '|' exclusive_or_expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(427, 2);
			PushFollow(Follow._exclusive_or_expression_in_inclusive_or_expression3011);
			exclusive_or_expression398=exclusive_or_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, exclusive_or_expression398.Tree, exclusive_or_expression398, "exclusive_or_expression398", retval);
			DebugLocation(427, 28);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:427:28: ( '|' exclusive_or_expression )*
			try { DebugEnterSubRule(115);
			while (true)
			{
				int alt115=2;
				try { DebugEnterDecision(115, false);
				int LA115_1 = input.LA(1);

				if ((LA115_1==200))
				{
					alt115 = 1;
				}


				} finally { DebugExitDecision(115); }
				switch ( alt115 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:427:29: '|' exclusive_or_expression
					{
					DebugLocation(427, 29);
					char_literal399=(IToken)Match(input,200,Follow._200_in_inclusive_or_expression3016); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal399_tree = (object)adaptor.Create(char_literal399, "char_literal399", retval);
					adaptor.AddChild(root_0, char_literal399_tree);
					}
					DebugLocation(427, 35);
					PushFollow(Follow._exclusive_or_expression_in_inclusive_or_expression3020);
					exclusive_or_expression400=exclusive_or_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, exclusive_or_expression400.Tree, exclusive_or_expression400, "exclusive_or_expression400", retval);

					}
					break;

				default:
					goto loop115;
				}
			}

			loop115:
				;

			} finally { DebugExitSubRule(115); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("inclusive_or_expression", 105);
			LeaveRule("inclusive_or_expression", 105);
			LeaveRule_inclusive_or_expression();
			if (state.backtracking > 0) { Memoize(input, 105, inclusive_or_expression_StartIndex); }

		}
		DebugLocation(427, 60);
		} finally { DebugExitRule(GrammarFileName, "inclusive_or_expression"); }
		return retval;

	}
	// $ANTLR end "inclusive_or_expression"

	partial void EnterRule_conditional_and_expression();
	partial void LeaveRule_conditional_and_expression();
	// $ANTLR start "conditional_and_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:428:1: conditional_and_expression : inclusive_or_expression ( '&&' inclusive_or_expression )* ;
	[GrammarRule("conditional_and_expression")]
	private Antlr3AstNode conditional_and_expression()
	{
		EnterRule_conditional_and_expression();
		EnterRule("conditional_and_expression", 106);
		var retval = new Antlr3AstNode("conditional_and_expression");
		
		retval.Start = (IToken)input.LT(1);
		int conditional_and_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal402 = default(IToken);
		Antlr3AstNode inclusive_or_expression401 = default(Antlr3AstNode);
		Antlr3AstNode inclusive_or_expression403 = default(Antlr3AstNode);

		object string_literal402_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "conditional_and_expression");
		DebugLocation(428, 61);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 106)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:428:27: ( inclusive_or_expression ( '&&' inclusive_or_expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:429:2: inclusive_or_expression ( '&&' inclusive_or_expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(429, 2);
			PushFollow(Follow._inclusive_or_expression_in_conditional_and_expression3030);
			inclusive_or_expression401=inclusive_or_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, inclusive_or_expression401.Tree, inclusive_or_expression401, "inclusive_or_expression401", retval);
			DebugLocation(429, 28);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:429:28: ( '&&' inclusive_or_expression )*
			try { DebugEnterSubRule(116);
			while (true)
			{
				int alt116=2;
				try { DebugEnterDecision(116, false);
				int LA116_1 = input.LA(1);

				if ((LA116_1==65))
				{
					alt116 = 1;
				}


				} finally { DebugExitDecision(116); }
				switch ( alt116 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:429:29: '&&' inclusive_or_expression
					{
					DebugLocation(429, 29);
					string_literal402=(IToken)Match(input,65,Follow._65_in_conditional_and_expression3035); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal402_tree = (object)adaptor.Create(string_literal402, "string_literal402", retval);
					adaptor.AddChild(root_0, string_literal402_tree);
					}
					DebugLocation(429, 36);
					PushFollow(Follow._inclusive_or_expression_in_conditional_and_expression3039);
					inclusive_or_expression403=inclusive_or_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, inclusive_or_expression403.Tree, inclusive_or_expression403, "inclusive_or_expression403", retval);

					}
					break;

				default:
					goto loop116;
				}
			}

			loop116:
				;

			} finally { DebugExitSubRule(116); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("conditional_and_expression", 106);
			LeaveRule("conditional_and_expression", 106);
			LeaveRule_conditional_and_expression();
			if (state.backtracking > 0) { Memoize(input, 106, conditional_and_expression_StartIndex); }

		}
		DebugLocation(429, 61);
		} finally { DebugExitRule(GrammarFileName, "conditional_and_expression"); }
		return retval;

	}
	// $ANTLR end "conditional_and_expression"

	partial void EnterRule_conditional_or_expression();
	partial void LeaveRule_conditional_or_expression();
	// $ANTLR start "conditional_or_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:430:1: conditional_or_expression : conditional_and_expression ( '||' conditional_and_expression )* ;
	[GrammarRule("conditional_or_expression")]
	private Antlr3AstNode conditional_or_expression()
	{
		EnterRule_conditional_or_expression();
		EnterRule("conditional_or_expression", 107);
		var retval = new Antlr3AstNode("conditional_or_expression");
		
		retval.Start = (IToken)input.LT(1);
		int conditional_or_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal405 = default(IToken);
		Antlr3AstNode conditional_and_expression404 = default(Antlr3AstNode);
		Antlr3AstNode conditional_and_expression406 = default(Antlr3AstNode);

		object string_literal405_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "conditional_or_expression");
		DebugLocation(430, 66);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 107)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:430:26: ( conditional_and_expression ( '||' conditional_and_expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:431:2: conditional_and_expression ( '||' conditional_and_expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(431, 2);
			PushFollow(Follow._conditional_and_expression_in_conditional_or_expression3049);
			conditional_and_expression404=conditional_and_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, conditional_and_expression404.Tree, conditional_and_expression404, "conditional_and_expression404", retval);
			DebugLocation(431, 30);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:431:30: ( '||' conditional_and_expression )*
			try { DebugEnterSubRule(117);
			while (true)
			{
				int alt117=2;
				try { DebugEnterDecision(117, false);
				int LA117_1 = input.LA(1);

				if ((LA117_1==202))
				{
					alt117 = 1;
				}


				} finally { DebugExitDecision(117); }
				switch ( alt117 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:431:31: '||' conditional_and_expression
					{
					DebugLocation(431, 31);
					string_literal405=(IToken)Match(input,202,Follow._202_in_conditional_or_expression3053); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal405_tree = (object)adaptor.Create(string_literal405, "string_literal405", retval);
					adaptor.AddChild(root_0, string_literal405_tree);
					}
					DebugLocation(431, 38);
					PushFollow(Follow._conditional_and_expression_in_conditional_or_expression3057);
					conditional_and_expression406=conditional_and_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, conditional_and_expression406.Tree, conditional_and_expression406, "conditional_and_expression406", retval);

					}
					break;

				default:
					goto loop117;
				}
			}

			loop117:
				;

			} finally { DebugExitSubRule(117); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("conditional_or_expression", 107);
			LeaveRule("conditional_or_expression", 107);
			LeaveRule_conditional_or_expression();
			if (state.backtracking > 0) { Memoize(input, 107, conditional_or_expression_StartIndex); }

		}
		DebugLocation(431, 66);
		} finally { DebugExitRule(GrammarFileName, "conditional_or_expression"); }
		return retval;

	}
	// $ANTLR end "conditional_or_expression"

	partial void EnterRule_null_coalescing_expression();
	partial void LeaveRule_null_coalescing_expression();
	// $ANTLR start "null_coalescing_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:433:1: null_coalescing_expression : conditional_or_expression ( '??' conditional_or_expression )* ;
	[GrammarRule("null_coalescing_expression")]
	private Antlr3AstNode null_coalescing_expression()
	{
		EnterRule_null_coalescing_expression();
		EnterRule("null_coalescing_expression", 108);
		var retval = new Antlr3AstNode("null_coalescing_expression");
		
		retval.Start = (IToken)input.LT(1);
		int null_coalescing_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal408 = default(IToken);
		Antlr3AstNode conditional_or_expression407 = default(Antlr3AstNode);
		Antlr3AstNode conditional_or_expression409 = default(Antlr3AstNode);

		object string_literal408_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "null_coalescing_expression");
		DebugLocation(433, 65);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 108)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:433:27: ( conditional_or_expression ( '??' conditional_or_expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:434:2: conditional_or_expression ( '??' conditional_or_expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(434, 2);
			PushFollow(Follow._conditional_or_expression_in_null_coalescing_expression3068);
			conditional_or_expression407=conditional_or_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, conditional_or_expression407.Tree, conditional_or_expression407, "conditional_or_expression407", retval);
			DebugLocation(434, 30);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:434:30: ( '??' conditional_or_expression )*
			try { DebugEnterSubRule(118);
			while (true)
			{
				int alt118=2;
				try { DebugEnterDecision(118, false);
				int LA118_1 = input.LA(1);

				if ((LA118_1==90))
				{
					alt118 = 1;
				}


				} finally { DebugExitDecision(118); }
				switch ( alt118 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:434:31: '??' conditional_or_expression
					{
					DebugLocation(434, 31);
					string_literal408=(IToken)Match(input,90,Follow._90_in_null_coalescing_expression3073); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal408_tree = (object)adaptor.Create(string_literal408, "string_literal408", retval);
					adaptor.AddChild(root_0, string_literal408_tree);
					}
					DebugLocation(434, 38);
					PushFollow(Follow._conditional_or_expression_in_null_coalescing_expression3077);
					conditional_or_expression409=conditional_or_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, conditional_or_expression409.Tree, conditional_or_expression409, "conditional_or_expression409", retval);

					}
					break;

				default:
					goto loop118;
				}
			}

			loop118:
				;

			} finally { DebugExitSubRule(118); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("null_coalescing_expression", 108);
			LeaveRule("null_coalescing_expression", 108);
			LeaveRule_null_coalescing_expression();
			if (state.backtracking > 0) { Memoize(input, 108, null_coalescing_expression_StartIndex); }

		}
		DebugLocation(434, 65);
		} finally { DebugExitRule(GrammarFileName, "null_coalescing_expression"); }
		return retval;

	}
	// $ANTLR end "null_coalescing_expression"

	partial void EnterRule_conditional_expression();
	partial void LeaveRule_conditional_expression();
	// $ANTLR start "conditional_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:435:1: conditional_expression : null_coalescing_expression ( '?' expression ':' expression )? ;
	[GrammarRule("conditional_expression")]
	private Antlr3AstNode conditional_expression()
	{
		EnterRule_conditional_expression();
		EnterRule("conditional_expression", 109);
		var retval = new Antlr3AstNode("conditional_expression");
		
		retval.Start = (IToken)input.LT(1);
		int conditional_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal411 = default(IToken);
		IToken char_literal413 = default(IToken);
		Antlr3AstNode null_coalescing_expression410 = default(Antlr3AstNode);
		Antlr3AstNode expression412 = default(Antlr3AstNode);
		Antlr3AstNode expression414 = default(Antlr3AstNode);

		object char_literal411_tree = default(object);
		object char_literal413_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "conditional_expression");
		DebugLocation(435, 69);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 109)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:435:23: ( null_coalescing_expression ( '?' expression ':' expression )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:436:2: null_coalescing_expression ( '?' expression ':' expression )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(436, 2);
			PushFollow(Follow._null_coalescing_expression_in_conditional_expression3087);
			null_coalescing_expression410=null_coalescing_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, null_coalescing_expression410.Tree, null_coalescing_expression410, "null_coalescing_expression410", retval);
			DebugLocation(436, 31);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:436:31: ( '?' expression ':' expression )?
			int alt119=2;
			try { DebugEnterSubRule(119);
			try { DebugEnterDecision(119, false);
			int LA119_1 = input.LA(1);

			if ((LA119_1==89))
			{
				alt119 = 1;
			}
			} finally { DebugExitDecision(119); }
			switch (alt119)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:436:32: '?' expression ':' expression
				{
				DebugLocation(436, 32);
				char_literal411=(IToken)Match(input,89,Follow._89_in_conditional_expression3092); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal411_tree = (object)adaptor.Create(char_literal411, "char_literal411", retval);
				adaptor.AddChild(root_0, char_literal411_tree);
				}
				DebugLocation(436, 38);
				PushFollow(Follow._expression_in_conditional_expression3096);
				expression412=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression412.Tree, expression412, "expression412", retval);
				DebugLocation(436, 51);
				char_literal413=(IToken)Match(input,79,Follow._79_in_conditional_expression3100); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal413_tree = (object)adaptor.Create(char_literal413, "char_literal413", retval);
				adaptor.AddChild(root_0, char_literal413_tree);
				}
				DebugLocation(436, 57);
				PushFollow(Follow._expression_in_conditional_expression3104);
				expression414=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression414.Tree, expression414, "expression414", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(119); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("conditional_expression", 109);
			LeaveRule("conditional_expression", 109);
			LeaveRule_conditional_expression();
			if (state.backtracking > 0) { Memoize(input, 109, conditional_expression_StartIndex); }

		}
		DebugLocation(436, 69);
		} finally { DebugExitRule(GrammarFileName, "conditional_expression"); }
		return retval;

	}
	// $ANTLR end "conditional_expression"

	partial void EnterRule_lambda_expression();
	partial void LeaveRule_lambda_expression();
	// $ANTLR start "lambda_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:441:1: lambda_expression : ( 'async' )? anonymous_function_signature '=>' anonymous_function_body ;
	[GrammarRule("lambda_expression")]
	private Antlr3AstNode lambda_expression()
	{
		EnterRule_lambda_expression();
		EnterRule("lambda_expression", 110);
		var retval = new Antlr3AstNode("lambda_expression");
		
		retval.Start = (IToken)input.LT(1);
		int lambda_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal415 = default(IToken);
		IToken string_literal417 = default(IToken);
		Antlr3AstNode anonymous_function_signature416 = default(Antlr3AstNode);
		Antlr3AstNode anonymous_function_body418 = default(Antlr3AstNode);

		object string_literal415_tree = default(object);
		object string_literal417_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "lambda_expression");
		DebugLocation(441, 71);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 110)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:441:18: ( ( 'async' )? anonymous_function_signature '=>' anonymous_function_body )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:442:2: ( 'async' )? anonymous_function_signature '=>' anonymous_function_body
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(442, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:442:2: ( 'async' )?
			int alt120=2;
			try { DebugEnterSubRule(120);
			try { DebugEnterDecision(120, false);
			int LA120_1 = input.LA(1);

			if ((LA120_1==102))
			{
				alt120 = 1;
			}
			} finally { DebugExitDecision(120); }
			switch (alt120)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:442:2: 'async'
				{
				DebugLocation(442, 2);
				string_literal415=(IToken)Match(input,102,Follow._102_in_lambda_expression3124); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal415_tree = (object)adaptor.Create(string_literal415, "string_literal415", retval);
				adaptor.AddChild(root_0, string_literal415_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(120); }

			DebugLocation(442, 11);
			PushFollow(Follow._anonymous_function_signature_in_lambda_expression3127);
			anonymous_function_signature416=anonymous_function_signature();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, anonymous_function_signature416.Tree, anonymous_function_signature416, "anonymous_function_signature416", retval);
			DebugLocation(442, 42);
			string_literal417=(IToken)Match(input,87,Follow._87_in_lambda_expression3131); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal417_tree = (object)adaptor.Create(string_literal417, "string_literal417", retval);
			adaptor.AddChild(root_0, string_literal417_tree);
			}
			DebugLocation(442, 49);
			PushFollow(Follow._anonymous_function_body_in_lambda_expression3135);
			anonymous_function_body418=anonymous_function_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, anonymous_function_body418.Tree, anonymous_function_body418, "anonymous_function_body418", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("lambda_expression", 110);
			LeaveRule("lambda_expression", 110);
			LeaveRule_lambda_expression();
			if (state.backtracking > 0) { Memoize(input, 110, lambda_expression_StartIndex); }

		}
		DebugLocation(442, 71);
		} finally { DebugExitRule(GrammarFileName, "lambda_expression"); }
		return retval;

	}
	// $ANTLR end "lambda_expression"

	partial void EnterRule_anonymous_function_signature();
	partial void LeaveRule_anonymous_function_signature();
	// $ANTLR start "anonymous_function_signature"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:443:1: anonymous_function_signature : ( '(' ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )? ')' | implicit_anonymous_function_parameter_list );
	[GrammarRule("anonymous_function_signature")]
	private Antlr3AstNode anonymous_function_signature()
	{
		EnterRule_anonymous_function_signature();
		EnterRule("anonymous_function_signature", 111);
		var retval = new Antlr3AstNode("anonymous_function_signature");
		
		retval.Start = (IToken)input.LT(1);
		int anonymous_function_signature_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal419 = default(IToken);
		IToken char_literal422 = default(IToken);
		Antlr3AstNode explicit_anonymous_function_parameter_list420 = default(Antlr3AstNode);
		Antlr3AstNode implicit_anonymous_function_parameter_list421 = default(Antlr3AstNode);
		Antlr3AstNode implicit_anonymous_function_parameter_list423 = default(Antlr3AstNode);

		object char_literal419_tree = default(object);
		object char_literal422_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "anonymous_function_signature");
		DebugLocation(443, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 111)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:443:29: ( '(' ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )? ')' | implicit_anonymous_function_parameter_list )
			int alt122=2;
			try { DebugEnterDecision(122, false);
			int LA122_1 = input.LA(1);

			if ((LA122_1==68))
			{
				alt122 = 1;
			}
			else if ((LA122_1==IDENTIFIER||LA122_1==95||(LA122_1>=97 && LA122_1<=98)||(LA122_1>=100 && LA122_1<=101)||LA122_1==107||LA122_1==119||LA122_1==122||LA122_1==124||LA122_1==128||LA122_1==134||LA122_1==137||LA122_1==143||(LA122_1>=145 && LA122_1<=146)||(LA122_1>=149 && LA122_1<=150)||LA122_1==154||LA122_1==156||LA122_1==159||LA122_1==162||LA122_1==164||LA122_1==169||(LA122_1>=173 && LA122_1<=174)||LA122_1==185||LA122_1==192||LA122_1==196||LA122_1==198))
			{
				alt122 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 122, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(122); }
			switch (alt122)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:444:2: '(' ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )? ')'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(444, 2);
				char_literal419=(IToken)Match(input,68,Follow._68_in_anonymous_function_signature3142); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal419_tree = (object)adaptor.Create(char_literal419, "char_literal419", retval);
				adaptor.AddChild(root_0, char_literal419_tree);
				}
				DebugLocation(444, 6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:444:6: ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )?
				int alt121=3;
				try { DebugEnterSubRule(121);
				try { DebugEnterDecision(121, false);
				int LA121_1 = input.LA(1);

				if ((LA121_1==105||LA121_1==108||LA121_1==111||LA121_1==116||LA121_1==121||LA121_1==131||LA121_1==140||LA121_1==148||LA121_1==153||LA121_1==157||LA121_1==168||LA121_1==171||LA121_1==175||LA121_1==179||(LA121_1>=187 && LA121_1<=188)||LA121_1==191||LA121_1==194))
				{
					alt121 = 1;
				}
				else if ((LA121_1==IDENTIFIER||LA121_1==95||(LA121_1>=97 && LA121_1<=98)||(LA121_1>=100 && LA121_1<=101)||LA121_1==107||LA121_1==119||LA121_1==122||LA121_1==124||LA121_1==128||LA121_1==134||LA121_1==137||LA121_1==143||(LA121_1>=145 && LA121_1<=146)||(LA121_1>=149 && LA121_1<=150)||LA121_1==154||LA121_1==156||LA121_1==159||LA121_1==162||LA121_1==164||LA121_1==169||(LA121_1>=173 && LA121_1<=174)||LA121_1==185||LA121_1==192||LA121_1==196||LA121_1==198))
				{
					int LA121_2 = input.LA(2);

					if ((LA121_2==DOT||LA121_2==IDENTIFIER||LA121_2==69||(LA121_2>=80 && LA121_2<=81)||LA121_2==89||LA121_2==91||LA121_2==95||(LA121_2>=97 && LA121_2<=98)||(LA121_2>=100 && LA121_2<=101)||LA121_2==107||LA121_2==119||LA121_2==122||LA121_2==124||LA121_2==128||LA121_2==134||LA121_2==137||LA121_2==143||(LA121_2>=145 && LA121_2<=146)||(LA121_2>=149 && LA121_2<=150)||LA121_2==154||LA121_2==156||LA121_2==159||LA121_2==162||LA121_2==164||LA121_2==169||(LA121_2>=173 && LA121_2<=174)||LA121_2==185||LA121_2==192||LA121_2==196||LA121_2==198))
					{
						alt121 = 1;
					}
					else if ((LA121_2==RPAREN||LA121_2==74))
					{
						alt121 = 2;
					}
				}
				} finally { DebugExitDecision(121); }
				switch (alt121)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:444:7: explicit_anonymous_function_parameter_list
					{
					DebugLocation(444, 7);
					PushFollow(Follow._explicit_anonymous_function_parameter_list_in_anonymous_function_signature3145);
					explicit_anonymous_function_parameter_list420=explicit_anonymous_function_parameter_list();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, explicit_anonymous_function_parameter_list420.Tree, explicit_anonymous_function_parameter_list420, "explicit_anonymous_function_parameter_list420", retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:445:5: implicit_anonymous_function_parameter_list
					{
					DebugLocation(445, 5);
					PushFollow(Follow._implicit_anonymous_function_parameter_list_in_anonymous_function_signature3151);
					implicit_anonymous_function_parameter_list421=implicit_anonymous_function_parameter_list();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, implicit_anonymous_function_parameter_list421.Tree, implicit_anonymous_function_parameter_list421, "implicit_anonymous_function_parameter_list421", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(121); }

				DebugLocation(445, 50);
				char_literal422=(IToken)Match(input,RPAREN,Follow._RPAREN_in_anonymous_function_signature3155); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal422_tree = (object)adaptor.Create(char_literal422, "char_literal422", retval);
				adaptor.AddChild(root_0, char_literal422_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:446:4: implicit_anonymous_function_parameter_list
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(446, 4);
				PushFollow(Follow._implicit_anonymous_function_parameter_list_in_anonymous_function_signature3160);
				implicit_anonymous_function_parameter_list423=implicit_anonymous_function_parameter_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, implicit_anonymous_function_parameter_list423.Tree, implicit_anonymous_function_parameter_list423, "implicit_anonymous_function_parameter_list423", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("anonymous_function_signature", 111);
			LeaveRule("anonymous_function_signature", 111);
			LeaveRule_anonymous_function_signature();
			if (state.backtracking > 0) { Memoize(input, 111, anonymous_function_signature_StartIndex); }

		}
		DebugLocation(447, 1);
		} finally { DebugExitRule(GrammarFileName, "anonymous_function_signature"); }
		return retval;

	}
	// $ANTLR end "anonymous_function_signature"

	partial void EnterRule_implicit_anonymous_function_parameter_list();
	partial void LeaveRule_implicit_anonymous_function_parameter_list();
	// $ANTLR start "implicit_anonymous_function_parameter_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:448:1: implicit_anonymous_function_parameter_list : implicit_anonymous_function_parameter ( ',' implicit_anonymous_function_parameter )* ;
	[GrammarRule("implicit_anonymous_function_parameter_list")]
	private Antlr3AstNode implicit_anonymous_function_parameter_list()
	{
		EnterRule_implicit_anonymous_function_parameter_list();
		EnterRule("implicit_anonymous_function_parameter_list", 112);
		var retval = new Antlr3AstNode("implicit_anonymous_function_parameter_list");
		
		retval.Start = (IToken)input.LT(1);
		int implicit_anonymous_function_parameter_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal425 = default(IToken);
		Antlr3AstNode implicit_anonymous_function_parameter424 = default(Antlr3AstNode);
		Antlr3AstNode implicit_anonymous_function_parameter426 = default(Antlr3AstNode);

		object char_literal425_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "implicit_anonymous_function_parameter_list");
		DebugLocation(448, 88);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 112)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:448:43: ( implicit_anonymous_function_parameter ( ',' implicit_anonymous_function_parameter )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:449:2: implicit_anonymous_function_parameter ( ',' implicit_anonymous_function_parameter )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(449, 2);
			PushFollow(Follow._implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list3169);
			implicit_anonymous_function_parameter424=implicit_anonymous_function_parameter();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, implicit_anonymous_function_parameter424.Tree, implicit_anonymous_function_parameter424, "implicit_anonymous_function_parameter424", retval);
			DebugLocation(449, 42);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:449:42: ( ',' implicit_anonymous_function_parameter )*
			try { DebugEnterSubRule(123);
			while (true)
			{
				int alt123=2;
				try { DebugEnterDecision(123, false);
				int LA123_1 = input.LA(1);

				if ((LA123_1==74))
				{
					alt123 = 1;
				}


				} finally { DebugExitDecision(123); }
				switch ( alt123 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:449:43: ',' implicit_anonymous_function_parameter
					{
					DebugLocation(449, 43);
					char_literal425=(IToken)Match(input,74,Follow._74_in_implicit_anonymous_function_parameter_list3174); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal425_tree = (object)adaptor.Create(char_literal425, "char_literal425", retval);
					adaptor.AddChild(root_0, char_literal425_tree);
					}
					DebugLocation(449, 49);
					PushFollow(Follow._implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list3178);
					implicit_anonymous_function_parameter426=implicit_anonymous_function_parameter();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, implicit_anonymous_function_parameter426.Tree, implicit_anonymous_function_parameter426, "implicit_anonymous_function_parameter426", retval);

					}
					break;

				default:
					goto loop123;
				}
			}

			loop123:
				;

			} finally { DebugExitSubRule(123); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("implicit_anonymous_function_parameter_list", 112);
			LeaveRule("implicit_anonymous_function_parameter_list", 112);
			LeaveRule_implicit_anonymous_function_parameter_list();
			if (state.backtracking > 0) { Memoize(input, 112, implicit_anonymous_function_parameter_list_StartIndex); }

		}
		DebugLocation(449, 88);
		} finally { DebugExitRule(GrammarFileName, "implicit_anonymous_function_parameter_list"); }
		return retval;

	}
	// $ANTLR end "implicit_anonymous_function_parameter_list"

	partial void EnterRule_implicit_anonymous_function_parameter();
	partial void LeaveRule_implicit_anonymous_function_parameter();
	// $ANTLR start "implicit_anonymous_function_parameter"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:450:1: implicit_anonymous_function_parameter : identifier ;
	[GrammarRule("implicit_anonymous_function_parameter")]
	private Antlr3AstNode implicit_anonymous_function_parameter()
	{
		EnterRule_implicit_anonymous_function_parameter();
		EnterRule("implicit_anonymous_function_parameter", 113);
		var retval = new Antlr3AstNode("implicit_anonymous_function_parameter");
		
		retval.Start = (IToken)input.LT(1);
		int implicit_anonymous_function_parameter_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode identifier427 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "implicit_anonymous_function_parameter");
		DebugLocation(450, 11);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 113)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:450:38: ( identifier )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:451:2: identifier
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(451, 2);
			PushFollow(Follow._identifier_in_implicit_anonymous_function_parameter3188);
			identifier427=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier427.Tree, identifier427, "identifier427", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("implicit_anonymous_function_parameter", 113);
			LeaveRule("implicit_anonymous_function_parameter", 113);
			LeaveRule_implicit_anonymous_function_parameter();
			if (state.backtracking > 0) { Memoize(input, 113, implicit_anonymous_function_parameter_StartIndex); }

		}
		DebugLocation(451, 11);
		} finally { DebugExitRule(GrammarFileName, "implicit_anonymous_function_parameter"); }
		return retval;

	}
	// $ANTLR end "implicit_anonymous_function_parameter"

	partial void EnterRule_anonymous_function_body();
	partial void LeaveRule_anonymous_function_body();
	// $ANTLR start "anonymous_function_body"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:452:1: anonymous_function_body : ( expression | block );
	[GrammarRule("anonymous_function_body")]
	private Antlr3AstNode anonymous_function_body()
	{
		EnterRule_anonymous_function_body();
		EnterRule("anonymous_function_body", 114);
		var retval = new Antlr3AstNode("anonymous_function_body");
		
		retval.Start = (IToken)input.LT(1);
		int anonymous_function_body_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode expression428 = default(Antlr3AstNode);
		Antlr3AstNode block429 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "anonymous_function_body");
		DebugLocation(452, 9);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 114)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:452:24: ( expression | block )
			int alt124=2;
			try { DebugEnterDecision(124, false);
			int LA124_1 = input.LA(1);

			if ((LA124_1==Character_literal||LA124_1==FALSE||(LA124_1>=Hex_number && LA124_1<=IDENTIFIER)||(LA124_1>=MINUS && LA124_1<=NUMBER)||LA124_1==Real_literal||LA124_1==STRINGLITERAL||LA124_1==TRUE||LA124_1==Verbatim_string_literal||LA124_1==61||LA124_1==66||(LA124_1>=68 && LA124_1<=69)||(LA124_1>=71 && LA124_1<=72)||LA124_1==75||LA124_1==95||(LA124_1>=97 && LA124_1<=98)||(LA124_1>=100 && LA124_1<=105)||(LA124_1>=107 && LA124_1<=108)||(LA124_1>=111 && LA124_1<=112)||(LA124_1>=116 && LA124_1<=119)||(LA124_1>=121 && LA124_1<=122)||LA124_1==124||LA124_1==128||LA124_1==131||LA124_1==134||LA124_1==137||LA124_1==140||LA124_1==143||(LA124_1>=145 && LA124_1<=146)||(LA124_1>=148 && LA124_1<=150)||(LA124_1>=152 && LA124_1<=154)||LA124_1==156||LA124_1==159||LA124_1==162||LA124_1==164||LA124_1==169||LA124_1==171||(LA124_1>=173 && LA124_1<=176)||LA124_1==179||LA124_1==182||(LA124_1>=185 && LA124_1<=189)||(LA124_1>=191 && LA124_1<=192)||LA124_1==196||LA124_1==198||LA124_1==204))
			{
				alt124 = 1;
			}
			else if ((LA124_1==SEMI||LA124_1==199))
			{
				alt124 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 124, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(124); }
			switch (alt124)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:453:2: expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(453, 2);
				PushFollow(Follow._expression_in_anonymous_function_body3195);
				expression428=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression428.Tree, expression428, "expression428", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:454:4: block
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(454, 4);
				PushFollow(Follow._block_in_anonymous_function_body3200);
				block429=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block429.Tree, block429, "block429", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("anonymous_function_body", 114);
			LeaveRule("anonymous_function_body", 114);
			LeaveRule_anonymous_function_body();
			if (state.backtracking > 0) { Memoize(input, 114, anonymous_function_body_StartIndex); }

		}
		DebugLocation(454, 9);
		} finally { DebugExitRule(GrammarFileName, "anonymous_function_body"); }
		return retval;

	}
	// $ANTLR end "anonymous_function_body"

	partial void EnterRule_query_expression();
	partial void LeaveRule_query_expression();
	// $ANTLR start "query_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:459:1: query_expression : from_clause query_body ;
	[GrammarRule("query_expression")]
	private Antlr3AstNode query_expression()
	{
		EnterRule_query_expression();
		EnterRule("query_expression", 115);
		var retval = new Antlr3AstNode("query_expression");
		
		retval.Start = (IToken)input.LT(1);
		int query_expression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode from_clause430 = default(Antlr3AstNode);
		Antlr3AstNode query_body431 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "query_expression");
		DebugLocation(459, 26);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 115)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:459:17: ( from_clause query_body )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:460:2: from_clause query_body
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(460, 2);
			PushFollow(Follow._from_clause_in_query_expression3212);
			from_clause430=from_clause();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, from_clause430.Tree, from_clause430, "from_clause430", retval);
			DebugLocation(460, 16);
			PushFollow(Follow._query_body_in_query_expression3216);
			query_body431=query_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, query_body431.Tree, query_body431, "query_body431", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("query_expression", 115);
			LeaveRule("query_expression", 115);
			LeaveRule_query_expression();
			if (state.backtracking > 0) { Memoize(input, 115, query_expression_StartIndex); }

		}
		DebugLocation(460, 26);
		} finally { DebugExitRule(GrammarFileName, "query_expression"); }
		return retval;

	}
	// $ANTLR end "query_expression"

	partial void EnterRule_query_body();
	partial void LeaveRule_query_body();
	// $ANTLR start "query_body"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:461:1: query_body : ( query_body_clauses )? select_or_group_clause ( ( 'into' )=> query_continuation )? ;
	[GrammarRule("query_body")]
	private Antlr3AstNode query_body()
	{
		EnterRule_query_body();
		EnterRule("query_body", 116);
		var retval = new Antlr3AstNode("query_body");
		
		retval.Start = (IToken)input.LT(1);
		int query_body_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode query_body_clauses432 = default(Antlr3AstNode);
		Antlr3AstNode select_or_group_clause433 = default(Antlr3AstNode);
		Antlr3AstNode query_continuation434 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "query_body");
		DebugLocation(461, 82);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 116)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:461:11: ( ( query_body_clauses )? select_or_group_clause ( ( 'into' )=> query_continuation )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:463:2: ( query_body_clauses )? select_or_group_clause ( ( 'into' )=> query_continuation )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(463, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:463:2: ( query_body_clauses )?
			int alt125=2;
			try { DebugEnterSubRule(125);
			try { DebugEnterDecision(125, false);
			int LA125_1 = input.LA(1);

			if ((LA125_1==134||(LA125_1>=145 && LA125_1<=146)||LA125_1==156||LA125_1==196))
			{
				alt125 = 1;
			}
			} finally { DebugExitDecision(125); }
			switch (alt125)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:463:2: query_body_clauses
				{
				DebugLocation(463, 2);
				PushFollow(Follow._query_body_clauses_in_query_body3226);
				query_body_clauses432=query_body_clauses();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, query_body_clauses432.Tree, query_body_clauses432, "query_body_clauses432", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(125); }

			DebugLocation(463, 24);
			PushFollow(Follow._select_or_group_clause_in_query_body3231);
			select_or_group_clause433=select_or_group_clause();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, select_or_group_clause433.Tree, select_or_group_clause433, "select_or_group_clause433", retval);
			DebugLocation(463, 49);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:463:49: ( ( 'into' )=> query_continuation )?
			int alt126=2;
			try { DebugEnterSubRule(126);
			try { DebugEnterDecision(126, false);
			int LA126_1 = input.LA(1);

			if ((LA126_1==143))
			{
				int LA126_2 = input.LA(2);

				if ((EvaluatePredicate(synpred20_cs_fragment)))
				{
					alt126 = 1;
				}
			}
			} finally { DebugExitDecision(126); }
			switch (alt126)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:463:50: ( 'into' )=> query_continuation
				{
				DebugLocation(463, 62);
				PushFollow(Follow._query_continuation_in_query_body3242);
				query_continuation434=query_continuation();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, query_continuation434.Tree, query_continuation434, "query_continuation434", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(126); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("query_body", 116);
			LeaveRule("query_body", 116);
			LeaveRule_query_body();
			if (state.backtracking > 0) { Memoize(input, 116, query_body_StartIndex); }

		}
		DebugLocation(463, 82);
		} finally { DebugExitRule(GrammarFileName, "query_body"); }
		return retval;

	}
	// $ANTLR end "query_body"

	partial void EnterRule_query_continuation();
	partial void LeaveRule_query_continuation();
	// $ANTLR start "query_continuation"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:464:1: query_continuation : 'into' identifier query_body ;
	[GrammarRule("query_continuation")]
	private Antlr3AstNode query_continuation()
	{
		EnterRule_query_continuation();
		EnterRule("query_continuation", 117);
		var retval = new Antlr3AstNode("query_continuation");
		
		retval.Start = (IToken)input.LT(1);
		int query_continuation_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal435 = default(IToken);
		Antlr3AstNode identifier436 = default(Antlr3AstNode);
		Antlr3AstNode query_body437 = default(Antlr3AstNode);

		object string_literal435_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "query_continuation");
		DebugLocation(464, 33);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 117)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:464:19: ( 'into' identifier query_body )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:465:2: 'into' identifier query_body
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(465, 2);
			string_literal435=(IToken)Match(input,143,Follow._143_in_query_continuation3252); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal435_tree = (object)adaptor.Create(string_literal435, "string_literal435", retval);
			adaptor.AddChild(root_0, string_literal435_tree);
			}
			DebugLocation(465, 11);
			PushFollow(Follow._identifier_in_query_continuation3256);
			identifier436=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier436.Tree, identifier436, "identifier436", retval);
			DebugLocation(465, 24);
			PushFollow(Follow._query_body_in_query_continuation3260);
			query_body437=query_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, query_body437.Tree, query_body437, "query_body437", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("query_continuation", 117);
			LeaveRule("query_continuation", 117);
			LeaveRule_query_continuation();
			if (state.backtracking > 0) { Memoize(input, 117, query_continuation_StartIndex); }

		}
		DebugLocation(465, 33);
		} finally { DebugExitRule(GrammarFileName, "query_continuation"); }
		return retval;

	}
	// $ANTLR end "query_continuation"

	partial void EnterRule_query_body_clauses();
	partial void LeaveRule_query_body_clauses();
	// $ANTLR start "query_body_clauses"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:466:1: query_body_clauses : ( query_body_clause )+ ;
	[GrammarRule("query_body_clauses")]
	private Antlr3AstNode query_body_clauses()
	{
		EnterRule_query_body_clauses();
		EnterRule("query_body_clauses", 118);
		var retval = new Antlr3AstNode("query_body_clauses");
		
		retval.Start = (IToken)input.LT(1);
		int query_body_clauses_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode query_body_clause438 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "query_body_clauses");
		DebugLocation(466, 20);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 118)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:466:19: ( ( query_body_clause )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:467:2: ( query_body_clause )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(467, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:467:2: ( query_body_clause )+
			int cnt127=0;
			try { DebugEnterSubRule(127);
			while (true)
			{
				int alt127=2;
				try { DebugEnterDecision(127, false);
				int LA127_1 = input.LA(1);

				if ((LA127_1==134||(LA127_1>=145 && LA127_1<=146)||LA127_1==156||LA127_1==196))
				{
					alt127 = 1;
				}


				} finally { DebugExitDecision(127); }
				switch (alt127)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:467:2: query_body_clause
					{
					DebugLocation(467, 2);
					PushFollow(Follow._query_body_clause_in_query_body_clauses3267);
					query_body_clause438=query_body_clause();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, query_body_clause438.Tree, query_body_clause438, "query_body_clause438", retval);

					}
					break;

				default:
					if (cnt127 >= 1)
						goto loop127;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee127 = new EarlyExitException( 127, input );
					DebugRecognitionException(eee127);
					throw eee127;
				}
				cnt127++;
			}
			loop127:
				;

			} finally { DebugExitSubRule(127); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("query_body_clauses", 118);
			LeaveRule("query_body_clauses", 118);
			LeaveRule_query_body_clauses();
			if (state.backtracking > 0) { Memoize(input, 118, query_body_clauses_StartIndex); }

		}
		DebugLocation(467, 20);
		} finally { DebugExitRule(GrammarFileName, "query_body_clauses"); }
		return retval;

	}
	// $ANTLR end "query_body_clauses"

	partial void EnterRule_query_body_clause();
	partial void LeaveRule_query_body_clause();
	// $ANTLR start "query_body_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:468:1: query_body_clause : ( from_clause | let_clause | where_clause | join_clause | orderby_clause );
	[GrammarRule("query_body_clause")]
	private Antlr3AstNode query_body_clause()
	{
		EnterRule_query_body_clause();
		EnterRule("query_body_clause", 119);
		var retval = new Antlr3AstNode("query_body_clause");
		
		retval.Start = (IToken)input.LT(1);
		int query_body_clause_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode from_clause439 = default(Antlr3AstNode);
		Antlr3AstNode let_clause440 = default(Antlr3AstNode);
		Antlr3AstNode where_clause441 = default(Antlr3AstNode);
		Antlr3AstNode join_clause442 = default(Antlr3AstNode);
		Antlr3AstNode orderby_clause443 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "query_body_clause");
		DebugLocation(468, 17);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 119)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:468:18: ( from_clause | let_clause | where_clause | join_clause | orderby_clause )
			int alt128=5;
			try { DebugEnterDecision(128, false);
			switch (input.LA(1))
			{
			case 134:
				{
				alt128 = 1;
				}
				break;
			case 146:
				{
				alt128 = 2;
				}
				break;
			case 196:
				{
				alt128 = 3;
				}
				break;
			case 145:
				{
				alt128 = 4;
				}
				break;
			case 156:
				{
				alt128 = 5;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 128, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(128); }
			switch (alt128)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:469:2: from_clause
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(469, 2);
				PushFollow(Follow._from_clause_in_query_body_clause3276);
				from_clause439=from_clause();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, from_clause439.Tree, from_clause439, "from_clause439", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:470:4: let_clause
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(470, 4);
				PushFollow(Follow._let_clause_in_query_body_clause3281);
				let_clause440=let_clause();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, let_clause440.Tree, let_clause440, "let_clause440", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:471:4: where_clause
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(471, 4);
				PushFollow(Follow._where_clause_in_query_body_clause3286);
				where_clause441=where_clause();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, where_clause441.Tree, where_clause441, "where_clause441", retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:472:4: join_clause
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(472, 4);
				PushFollow(Follow._join_clause_in_query_body_clause3291);
				join_clause442=join_clause();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, join_clause442.Tree, join_clause442, "join_clause442", retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:473:4: orderby_clause
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(473, 4);
				PushFollow(Follow._orderby_clause_in_query_body_clause3296);
				orderby_clause443=orderby_clause();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, orderby_clause443.Tree, orderby_clause443, "orderby_clause443", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("query_body_clause", 119);
			LeaveRule("query_body_clause", 119);
			LeaveRule_query_body_clause();
			if (state.backtracking > 0) { Memoize(input, 119, query_body_clause_StartIndex); }

		}
		DebugLocation(473, 17);
		} finally { DebugExitRule(GrammarFileName, "query_body_clause"); }
		return retval;

	}
	// $ANTLR end "query_body_clause"

	partial void EnterRule_from_clause();
	partial void LeaveRule_from_clause();
	// $ANTLR start "from_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:474:1: from_clause : 'from' ( type )? identifier 'in' expression ;
	[GrammarRule("from_clause")]
	private Antlr3AstNode from_clause()
	{
		EnterRule_from_clause();
		EnterRule("from_clause", 120);
		var retval = new Antlr3AstNode("from_clause");
		
		retval.Start = (IToken)input.LT(1);
		int from_clause_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal444 = default(IToken);
		IToken string_literal447 = default(IToken);
		Antlr3AstNode type445 = default(Antlr3AstNode);
		Antlr3AstNode identifier446 = default(Antlr3AstNode);
		Antlr3AstNode expression448 = default(Antlr3AstNode);

		object string_literal444_tree = default(object);
		object string_literal447_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "from_clause");
		DebugLocation(474, 49);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 120)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:474:12: ( 'from' ( type )? identifier 'in' expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:475:2: 'from' ( type )? identifier 'in' expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(475, 2);
			string_literal444=(IToken)Match(input,134,Follow._134_in_from_clause3303); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal444_tree = (object)adaptor.Create(string_literal444, "string_literal444", retval);
			adaptor.AddChild(root_0, string_literal444_tree);
			}
			DebugLocation(475, 11);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:475:11: ( type )?
			int alt129=2;
			try { DebugEnterSubRule(129);
			try { DebugEnterDecision(129, false);
			int LA129_1 = input.LA(1);

			if ((LA129_1==105||LA129_1==108||LA129_1==111||LA129_1==116||LA129_1==121||LA129_1==131||LA129_1==140||LA129_1==148||LA129_1==153||LA129_1==171||LA129_1==175||LA129_1==179||(LA129_1>=187 && LA129_1<=188)||LA129_1==191||LA129_1==194))
			{
				alt129 = 1;
			}
			else if ((LA129_1==IDENTIFIER||LA129_1==95||(LA129_1>=97 && LA129_1<=98)||(LA129_1>=100 && LA129_1<=101)||LA129_1==107||LA129_1==119||LA129_1==122||LA129_1==124||LA129_1==128||LA129_1==134||LA129_1==137||LA129_1==143||(LA129_1>=145 && LA129_1<=146)||(LA129_1>=149 && LA129_1<=150)||LA129_1==154||LA129_1==156||LA129_1==159||LA129_1==162||LA129_1==164||LA129_1==169||(LA129_1>=173 && LA129_1<=174)||LA129_1==185||LA129_1==192||LA129_1==196||LA129_1==198))
			{
				int LA129_2 = input.LA(2);

				if ((LA129_2==DOT||LA129_2==IDENTIFIER||LA129_2==69||(LA129_2>=80 && LA129_2<=81)||LA129_2==89||LA129_2==91||LA129_2==95||(LA129_2>=97 && LA129_2<=98)||(LA129_2>=100 && LA129_2<=101)||LA129_2==107||LA129_2==119||LA129_2==122||LA129_2==124||LA129_2==128||LA129_2==134||LA129_2==137||LA129_2==143||(LA129_2>=145 && LA129_2<=146)||(LA129_2>=149 && LA129_2<=150)||LA129_2==154||LA129_2==156||LA129_2==159||LA129_2==162||LA129_2==164||LA129_2==169||(LA129_2>=173 && LA129_2<=174)||LA129_2==185||LA129_2==192||LA129_2==196||LA129_2==198))
				{
					alt129 = 1;
				}
			}
			} finally { DebugExitDecision(129); }
			switch (alt129)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:475:11: type
				{
				DebugLocation(475, 11);
				PushFollow(Follow._type_in_from_clause3307);
				type445=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type445.Tree, type445, "type445", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(129); }

			DebugLocation(475, 19);
			PushFollow(Follow._identifier_in_from_clause3312);
			identifier446=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier446.Tree, identifier446, "identifier446", retval);
			DebugLocation(475, 32);
			string_literal447=(IToken)Match(input,139,Follow._139_in_from_clause3316); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal447_tree = (object)adaptor.Create(string_literal447, "string_literal447", retval);
			adaptor.AddChild(root_0, string_literal447_tree);
			}
			DebugLocation(475, 39);
			PushFollow(Follow._expression_in_from_clause3320);
			expression448=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression448.Tree, expression448, "expression448", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("from_clause", 120);
			LeaveRule("from_clause", 120);
			LeaveRule_from_clause();
			if (state.backtracking > 0) { Memoize(input, 120, from_clause_StartIndex); }

		}
		DebugLocation(475, 49);
		} finally { DebugExitRule(GrammarFileName, "from_clause"); }
		return retval;

	}
	// $ANTLR end "from_clause"

	partial void EnterRule_join_clause();
	partial void LeaveRule_join_clause();
	// $ANTLR start "join_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:476:1: join_clause : 'join' ( type )? identifier 'in' expression 'on' expression 'equals' expression ( 'into' identifier )? ;
	[GrammarRule("join_clause")]
	private Antlr3AstNode join_clause()
	{
		EnterRule_join_clause();
		EnterRule("join_clause", 121);
		var retval = new Antlr3AstNode("join_clause");
		
		retval.Start = (IToken)input.LT(1);
		int join_clause_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal449 = default(IToken);
		IToken string_literal452 = default(IToken);
		IToken string_literal454 = default(IToken);
		IToken string_literal456 = default(IToken);
		IToken string_literal458 = default(IToken);
		Antlr3AstNode type450 = default(Antlr3AstNode);
		Antlr3AstNode identifier451 = default(Antlr3AstNode);
		Antlr3AstNode expression453 = default(Antlr3AstNode);
		Antlr3AstNode expression455 = default(Antlr3AstNode);
		Antlr3AstNode expression457 = default(Antlr3AstNode);
		Antlr3AstNode identifier459 = default(Antlr3AstNode);

		object string_literal449_tree = default(object);
		object string_literal452_tree = default(object);
		object string_literal454_tree = default(object);
		object string_literal456_tree = default(object);
		object string_literal458_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "join_clause");
		DebugLocation(476, 114);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 121)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:476:12: ( 'join' ( type )? identifier 'in' expression 'on' expression 'equals' expression ( 'into' identifier )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:477:2: 'join' ( type )? identifier 'in' expression 'on' expression 'equals' expression ( 'into' identifier )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(477, 2);
			string_literal449=(IToken)Match(input,145,Follow._145_in_join_clause3328); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal449_tree = (object)adaptor.Create(string_literal449, "string_literal449", retval);
			adaptor.AddChild(root_0, string_literal449_tree);
			}
			DebugLocation(477, 11);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:477:11: ( type )?
			int alt130=2;
			try { DebugEnterSubRule(130);
			try { DebugEnterDecision(130, false);
			int LA130_1 = input.LA(1);

			if ((LA130_1==105||LA130_1==108||LA130_1==111||LA130_1==116||LA130_1==121||LA130_1==131||LA130_1==140||LA130_1==148||LA130_1==153||LA130_1==171||LA130_1==175||LA130_1==179||(LA130_1>=187 && LA130_1<=188)||LA130_1==191||LA130_1==194))
			{
				alt130 = 1;
			}
			else if ((LA130_1==IDENTIFIER||LA130_1==95||(LA130_1>=97 && LA130_1<=98)||(LA130_1>=100 && LA130_1<=101)||LA130_1==107||LA130_1==119||LA130_1==122||LA130_1==124||LA130_1==128||LA130_1==134||LA130_1==137||LA130_1==143||(LA130_1>=145 && LA130_1<=146)||(LA130_1>=149 && LA130_1<=150)||LA130_1==154||LA130_1==156||LA130_1==159||LA130_1==162||LA130_1==164||LA130_1==169||(LA130_1>=173 && LA130_1<=174)||LA130_1==185||LA130_1==192||LA130_1==196||LA130_1==198))
			{
				int LA130_2 = input.LA(2);

				if ((LA130_2==DOT||LA130_2==IDENTIFIER||LA130_2==69||(LA130_2>=80 && LA130_2<=81)||LA130_2==89||LA130_2==91||LA130_2==95||(LA130_2>=97 && LA130_2<=98)||(LA130_2>=100 && LA130_2<=101)||LA130_2==107||LA130_2==119||LA130_2==122||LA130_2==124||LA130_2==128||LA130_2==134||LA130_2==137||LA130_2==143||(LA130_2>=145 && LA130_2<=146)||(LA130_2>=149 && LA130_2<=150)||LA130_2==154||LA130_2==156||LA130_2==159||LA130_2==162||LA130_2==164||LA130_2==169||(LA130_2>=173 && LA130_2<=174)||LA130_2==185||LA130_2==192||LA130_2==196||LA130_2==198))
				{
					alt130 = 1;
				}
			}
			} finally { DebugExitDecision(130); }
			switch (alt130)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:477:11: type
				{
				DebugLocation(477, 11);
				PushFollow(Follow._type_in_join_clause3332);
				type450=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type450.Tree, type450, "type450", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(130); }

			DebugLocation(477, 19);
			PushFollow(Follow._identifier_in_join_clause3337);
			identifier451=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier451.Tree, identifier451, "identifier451", retval);
			DebugLocation(477, 32);
			string_literal452=(IToken)Match(input,139,Follow._139_in_join_clause3341); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal452_tree = (object)adaptor.Create(string_literal452, "string_literal452", retval);
			adaptor.AddChild(root_0, string_literal452_tree);
			}
			DebugLocation(477, 39);
			PushFollow(Follow._expression_in_join_clause3345);
			expression453=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression453.Tree, expression453, "expression453", retval);
			DebugLocation(477, 52);
			string_literal454=(IToken)Match(input,154,Follow._154_in_join_clause3349); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal454_tree = (object)adaptor.Create(string_literal454, "string_literal454", retval);
			adaptor.AddChild(root_0, string_literal454_tree);
			}
			DebugLocation(477, 59);
			PushFollow(Follow._expression_in_join_clause3353);
			expression455=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression455.Tree, expression455, "expression455", retval);
			DebugLocation(477, 72);
			string_literal456=(IToken)Match(input,124,Follow._124_in_join_clause3357); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal456_tree = (object)adaptor.Create(string_literal456, "string_literal456", retval);
			adaptor.AddChild(root_0, string_literal456_tree);
			}
			DebugLocation(477, 83);
			PushFollow(Follow._expression_in_join_clause3361);
			expression457=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression457.Tree, expression457, "expression457", retval);
			DebugLocation(477, 94);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:477:94: ( 'into' identifier )?
			int alt131=2;
			try { DebugEnterSubRule(131);
			try { DebugEnterDecision(131, false);
			int LA131_1 = input.LA(1);

			if ((LA131_1==143))
			{
				alt131 = 1;
			}
			} finally { DebugExitDecision(131); }
			switch (alt131)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:477:95: 'into' identifier
				{
				DebugLocation(477, 95);
				string_literal458=(IToken)Match(input,143,Follow._143_in_join_clause3364); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal458_tree = (object)adaptor.Create(string_literal458, "string_literal458", retval);
				adaptor.AddChild(root_0, string_literal458_tree);
				}
				DebugLocation(477, 102);
				PushFollow(Follow._identifier_in_join_clause3366);
				identifier459=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier459.Tree, identifier459, "identifier459", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(131); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("join_clause", 121);
			LeaveRule("join_clause", 121);
			LeaveRule_join_clause();
			if (state.backtracking > 0) { Memoize(input, 121, join_clause_StartIndex); }

		}
		DebugLocation(477, 114);
		} finally { DebugExitRule(GrammarFileName, "join_clause"); }
		return retval;

	}
	// $ANTLR end "join_clause"

	partial void EnterRule_let_clause();
	partial void LeaveRule_let_clause();
	// $ANTLR start "let_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:478:1: let_clause : 'let' identifier '=' expression ;
	[GrammarRule("let_clause")]
	private Antlr3AstNode let_clause()
	{
		EnterRule_let_clause();
		EnterRule("let_clause", 122);
		var retval = new Antlr3AstNode("let_clause");
		
		retval.Start = (IToken)input.LT(1);
		int let_clause_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal460 = default(IToken);
		IToken char_literal462 = default(IToken);
		Antlr3AstNode identifier461 = default(Antlr3AstNode);
		Antlr3AstNode expression463 = default(Antlr3AstNode);

		object string_literal460_tree = default(object);
		object char_literal462_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "let_clause");
		DebugLocation(478, 38);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 122)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:478:11: ( 'let' identifier '=' expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:479:2: 'let' identifier '=' expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(479, 2);
			string_literal460=(IToken)Match(input,146,Follow._146_in_let_clause3376); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal460_tree = (object)adaptor.Create(string_literal460, "string_literal460", retval);
			adaptor.AddChild(root_0, string_literal460_tree);
			}
			DebugLocation(479, 10);
			PushFollow(Follow._identifier_in_let_clause3380);
			identifier461=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier461.Tree, identifier461, "identifier461", retval);
			DebugLocation(479, 23);
			char_literal462=(IToken)Match(input,85,Follow._85_in_let_clause3384); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal462_tree = (object)adaptor.Create(char_literal462, "char_literal462", retval);
			adaptor.AddChild(root_0, char_literal462_tree);
			}
			DebugLocation(479, 29);
			PushFollow(Follow._expression_in_let_clause3388);
			expression463=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression463.Tree, expression463, "expression463", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("let_clause", 122);
			LeaveRule("let_clause", 122);
			LeaveRule_let_clause();
			if (state.backtracking > 0) { Memoize(input, 122, let_clause_StartIndex); }

		}
		DebugLocation(479, 38);
		} finally { DebugExitRule(GrammarFileName, "let_clause"); }
		return retval;

	}
	// $ANTLR end "let_clause"

	partial void EnterRule_orderby_clause();
	partial void LeaveRule_orderby_clause();
	// $ANTLR start "orderby_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:480:1: orderby_clause : 'orderby' ordering_list ;
	[GrammarRule("orderby_clause")]
	private Antlr3AstNode orderby_clause()
	{
		EnterRule_orderby_clause();
		EnterRule("orderby_clause", 123);
		var retval = new Antlr3AstNode("orderby_clause");
		
		retval.Start = (IToken)input.LT(1);
		int orderby_clause_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal464 = default(IToken);
		Antlr3AstNode ordering_list465 = default(Antlr3AstNode);

		object string_literal464_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "orderby_clause");
		DebugLocation(480, 27);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 123)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:480:15: ( 'orderby' ordering_list )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:481:2: 'orderby' ordering_list
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(481, 2);
			string_literal464=(IToken)Match(input,156,Follow._156_in_orderby_clause3395); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal464_tree = (object)adaptor.Create(string_literal464, "string_literal464", retval);
			adaptor.AddChild(root_0, string_literal464_tree);
			}
			DebugLocation(481, 14);
			PushFollow(Follow._ordering_list_in_orderby_clause3399);
			ordering_list465=ordering_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, ordering_list465.Tree, ordering_list465, "ordering_list465", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("orderby_clause", 123);
			LeaveRule("orderby_clause", 123);
			LeaveRule_orderby_clause();
			if (state.backtracking > 0) { Memoize(input, 123, orderby_clause_StartIndex); }

		}
		DebugLocation(481, 27);
		} finally { DebugExitRule(GrammarFileName, "orderby_clause"); }
		return retval;

	}
	// $ANTLR end "orderby_clause"

	partial void EnterRule_ordering_list();
	partial void LeaveRule_ordering_list();
	// $ANTLR start "ordering_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:482:1: ordering_list : ordering ( ',' ordering )* ;
	[GrammarRule("ordering_list")]
	private Antlr3AstNode ordering_list()
	{
		EnterRule_ordering_list();
		EnterRule("ordering_list", 124);
		var retval = new Antlr3AstNode("ordering_list");
		
		retval.Start = (IToken)input.LT(1);
		int ordering_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal467 = default(IToken);
		Antlr3AstNode ordering466 = default(Antlr3AstNode);
		Antlr3AstNode ordering468 = default(Antlr3AstNode);

		object char_literal467_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "ordering_list");
		DebugLocation(482, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 124)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:482:14: ( ordering ( ',' ordering )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:483:2: ordering ( ',' ordering )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(483, 2);
			PushFollow(Follow._ordering_in_ordering_list3407);
			ordering466=ordering();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, ordering466.Tree, ordering466, "ordering466", retval);
			DebugLocation(483, 13);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:483:13: ( ',' ordering )*
			try { DebugEnterSubRule(132);
			while (true)
			{
				int alt132=2;
				try { DebugEnterDecision(132, false);
				int LA132_1 = input.LA(1);

				if ((LA132_1==74))
				{
					alt132 = 1;
				}


				} finally { DebugExitDecision(132); }
				switch ( alt132 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:483:14: ',' ordering
					{
					DebugLocation(483, 14);
					char_literal467=(IToken)Match(input,74,Follow._74_in_ordering_list3412); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal467_tree = (object)adaptor.Create(char_literal467, "char_literal467", retval);
					adaptor.AddChild(root_0, char_literal467_tree);
					}
					DebugLocation(483, 20);
					PushFollow(Follow._ordering_in_ordering_list3416);
					ordering468=ordering();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, ordering468.Tree, ordering468, "ordering468", retval);

					}
					break;

				default:
					goto loop132;
				}
			}

			loop132:
				;

			} finally { DebugExitSubRule(132); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("ordering_list", 124);
			LeaveRule("ordering_list", 124);
			LeaveRule_ordering_list();
			if (state.backtracking > 0) { Memoize(input, 124, ordering_list_StartIndex); }

		}
		DebugLocation(483, 30);
		} finally { DebugExitRule(GrammarFileName, "ordering_list"); }
		return retval;

	}
	// $ANTLR end "ordering_list"

	partial void EnterRule_ordering();
	partial void LeaveRule_ordering();
	// $ANTLR start "ordering"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:484:1: ordering : expression ( ordering_direction )? ;
	[GrammarRule("ordering")]
	private Antlr3AstNode ordering()
	{
		EnterRule_ordering();
		EnterRule("ordering", 125);
		var retval = new Antlr3AstNode("ordering");
		
		retval.Start = (IToken)input.LT(1);
		int ordering_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode expression469 = default(Antlr3AstNode);
		Antlr3AstNode ordering_direction470 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "ordering");
		DebugLocation(484, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 125)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:484:9: ( expression ( ordering_direction )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:485:2: expression ( ordering_direction )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(485, 2);
			PushFollow(Follow._expression_in_ordering3426);
			expression469=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression469.Tree, expression469, "expression469", retval);
			DebugLocation(485, 16);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:485:16: ( ordering_direction )?
			int alt133=2;
			try { DebugEnterSubRule(133);
			try { DebugEnterDecision(133, false);
			int LA133_1 = input.LA(1);

			if ((LA133_1==100||LA133_1==119))
			{
				alt133 = 1;
			}
			} finally { DebugExitDecision(133); }
			switch (alt133)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:485:16: ordering_direction
				{
				DebugLocation(485, 16);
				PushFollow(Follow._ordering_direction_in_ordering3431);
				ordering_direction470=ordering_direction();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, ordering_direction470.Tree, ordering_direction470, "ordering_direction470", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(133); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("ordering", 125);
			LeaveRule("ordering", 125);
			LeaveRule_ordering();
			if (state.backtracking > 0) { Memoize(input, 125, ordering_StartIndex); }

		}
		DebugLocation(486, 1);
		} finally { DebugExitRule(GrammarFileName, "ordering"); }
		return retval;

	}
	// $ANTLR end "ordering"

	partial void EnterRule_ordering_direction();
	partial void LeaveRule_ordering_direction();
	// $ANTLR start "ordering_direction"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:487:1: ordering_direction : ( 'ascending' | 'descending' );
	[GrammarRule("ordering_direction")]
	private Antlr3AstNode ordering_direction()
	{
		EnterRule_ordering_direction();
		EnterRule("ordering_direction", 126);
		var retval = new Antlr3AstNode("ordering_direction");
		
		retval.Start = (IToken)input.LT(1);
		int ordering_direction_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set471 = default(IToken);

		object set471_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "ordering_direction");
		DebugLocation(487, 16);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 126)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:487:19: ( 'ascending' | 'descending' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(487, 19);

			set471=(IToken)input.LT(1);
			if (input.LA(1)==100||input.LA(1)==119)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set471, "set471", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("ordering_direction", 126);
			LeaveRule("ordering_direction", 126);
			LeaveRule_ordering_direction();
			if (state.backtracking > 0) { Memoize(input, 126, ordering_direction_StartIndex); }

		}
		DebugLocation(489, 16);
		} finally { DebugExitRule(GrammarFileName, "ordering_direction"); }
		return retval;

	}
	// $ANTLR end "ordering_direction"

	partial void EnterRule_select_or_group_clause();
	partial void LeaveRule_select_or_group_clause();
	// $ANTLR start "select_or_group_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:490:1: select_or_group_clause : ( select_clause | group_clause );
	[GrammarRule("select_or_group_clause")]
	private Antlr3AstNode select_or_group_clause()
	{
		EnterRule_select_or_group_clause();
		EnterRule("select_or_group_clause", 127);
		var retval = new Antlr3AstNode("select_or_group_clause");
		
		retval.Start = (IToken)input.LT(1);
		int select_or_group_clause_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode select_clause472 = default(Antlr3AstNode);
		Antlr3AstNode group_clause473 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "select_or_group_clause");
		DebugLocation(490, 16);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 127)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:490:23: ( select_clause | group_clause )
			int alt134=2;
			try { DebugEnterDecision(134, false);
			int LA134_1 = input.LA(1);

			if ((LA134_1==173))
			{
				alt134 = 1;
			}
			else if ((LA134_1==137))
			{
				alt134 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 134, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(134); }
			switch (alt134)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:491:2: select_clause
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(491, 2);
				PushFollow(Follow._select_clause_in_select_or_group_clause3454);
				select_clause472=select_clause();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, select_clause472.Tree, select_clause472, "select_clause472", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:492:4: group_clause
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(492, 4);
				PushFollow(Follow._group_clause_in_select_or_group_clause3459);
				group_clause473=group_clause();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, group_clause473.Tree, group_clause473, "group_clause473", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("select_or_group_clause", 127);
			LeaveRule("select_or_group_clause", 127);
			LeaveRule_select_or_group_clause();
			if (state.backtracking > 0) { Memoize(input, 127, select_or_group_clause_StartIndex); }

		}
		DebugLocation(492, 16);
		} finally { DebugExitRule(GrammarFileName, "select_or_group_clause"); }
		return retval;

	}
	// $ANTLR end "select_or_group_clause"

	partial void EnterRule_select_clause();
	partial void LeaveRule_select_clause();
	// $ANTLR start "select_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:493:1: select_clause : 'select' expression ;
	[GrammarRule("select_clause")]
	private Antlr3AstNode select_clause()
	{
		EnterRule_select_clause();
		EnterRule("select_clause", 128);
		var retval = new Antlr3AstNode("select_clause");
		
		retval.Start = (IToken)input.LT(1);
		int select_clause_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal474 = default(IToken);
		Antlr3AstNode expression475 = default(Antlr3AstNode);

		object string_literal474_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "select_clause");
		DebugLocation(493, 23);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 128)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:493:14: ( 'select' expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:494:2: 'select' expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(494, 2);
			string_literal474=(IToken)Match(input,173,Follow._173_in_select_clause3467); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal474_tree = (object)adaptor.Create(string_literal474, "string_literal474", retval);
			adaptor.AddChild(root_0, string_literal474_tree);
			}
			DebugLocation(494, 13);
			PushFollow(Follow._expression_in_select_clause3471);
			expression475=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression475.Tree, expression475, "expression475", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("select_clause", 128);
			LeaveRule("select_clause", 128);
			LeaveRule_select_clause();
			if (state.backtracking > 0) { Memoize(input, 128, select_clause_StartIndex); }

		}
		DebugLocation(494, 23);
		} finally { DebugExitRule(GrammarFileName, "select_clause"); }
		return retval;

	}
	// $ANTLR end "select_clause"

	partial void EnterRule_group_clause();
	partial void LeaveRule_group_clause();
	// $ANTLR start "group_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:495:1: group_clause : 'group' expression 'by' expression ;
	[GrammarRule("group_clause")]
	private Antlr3AstNode group_clause()
	{
		EnterRule_group_clause();
		EnterRule("group_clause", 129);
		var retval = new Antlr3AstNode("group_clause");
		
		retval.Start = (IToken)input.LT(1);
		int group_clause_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal476 = default(IToken);
		IToken string_literal478 = default(IToken);
		Antlr3AstNode expression477 = default(Antlr3AstNode);
		Antlr3AstNode expression479 = default(Antlr3AstNode);

		object string_literal476_tree = default(object);
		object string_literal478_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "group_clause");
		DebugLocation(495, 42);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 129)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:495:13: ( 'group' expression 'by' expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:496:2: 'group' expression 'by' expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(496, 2);
			string_literal476=(IToken)Match(input,137,Follow._137_in_group_clause3479); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal476_tree = (object)adaptor.Create(string_literal476, "string_literal476", retval);
			adaptor.AddChild(root_0, string_literal476_tree);
			}
			DebugLocation(496, 12);
			PushFollow(Follow._expression_in_group_clause3483);
			expression477=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression477.Tree, expression477, "expression477", retval);
			DebugLocation(496, 25);
			string_literal478=(IToken)Match(input,107,Follow._107_in_group_clause3487); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal478_tree = (object)adaptor.Create(string_literal478, "string_literal478", retval);
			adaptor.AddChild(root_0, string_literal478_tree);
			}
			DebugLocation(496, 32);
			PushFollow(Follow._expression_in_group_clause3491);
			expression479=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression479.Tree, expression479, "expression479", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("group_clause", 129);
			LeaveRule("group_clause", 129);
			LeaveRule_group_clause();
			if (state.backtracking > 0) { Memoize(input, 129, group_clause_StartIndex); }

		}
		DebugLocation(496, 42);
		} finally { DebugExitRule(GrammarFileName, "group_clause"); }
		return retval;

	}
	// $ANTLR end "group_clause"

	partial void EnterRule_where_clause();
	partial void LeaveRule_where_clause();
	// $ANTLR start "where_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:497:1: where_clause : 'where' boolean_expression ;
	[GrammarRule("where_clause")]
	private Antlr3AstNode where_clause()
	{
		EnterRule_where_clause();
		EnterRule("where_clause", 130);
		var retval = new Antlr3AstNode("where_clause");
		
		retval.Start = (IToken)input.LT(1);
		int where_clause_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal480 = default(IToken);
		Antlr3AstNode boolean_expression481 = default(Antlr3AstNode);

		object string_literal480_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "where_clause");
		DebugLocation(497, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 130)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:497:13: ( 'where' boolean_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:498:2: 'where' boolean_expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(498, 2);
			string_literal480=(IToken)Match(input,196,Follow._196_in_where_clause3499); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal480_tree = (object)adaptor.Create(string_literal480, "string_literal480", retval);
			adaptor.AddChild(root_0, string_literal480_tree);
			}
			DebugLocation(498, 12);
			PushFollow(Follow._boolean_expression_in_where_clause3503);
			boolean_expression481=boolean_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, boolean_expression481.Tree, boolean_expression481, "boolean_expression481", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("where_clause", 130);
			LeaveRule("where_clause", 130);
			LeaveRule_where_clause();
			if (state.backtracking > 0) { Memoize(input, 130, where_clause_StartIndex); }

		}
		DebugLocation(498, 30);
		} finally { DebugExitRule(GrammarFileName, "where_clause"); }
		return retval;

	}
	// $ANTLR end "where_clause"

	partial void EnterRule_boolean_expression();
	partial void LeaveRule_boolean_expression();
	// $ANTLR start "boolean_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:499:1: boolean_expression : expression ;
	[GrammarRule("boolean_expression")]
	private Antlr3AstNode boolean_expression()
	{
		EnterRule_boolean_expression();
		EnterRule("boolean_expression", 131);
		var retval = new Antlr3AstNode("boolean_expression");
		
		retval.Start = (IToken)input.LT(1);
		int boolean_expression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode expression482 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "boolean_expression");
		DebugLocation(499, 11);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 131)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:499:19: ( expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:500:2: expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(500, 2);
			PushFollow(Follow._expression_in_boolean_expression3511);
			expression482=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression482.Tree, expression482, "expression482", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("boolean_expression", 131);
			LeaveRule("boolean_expression", 131);
			LeaveRule_boolean_expression();
			if (state.backtracking > 0) { Memoize(input, 131, boolean_expression_StartIndex); }

		}
		DebugLocation(500, 11);
		} finally { DebugExitRule(GrammarFileName, "boolean_expression"); }
		return retval;

	}
	// $ANTLR end "boolean_expression"

	partial void EnterRule_global_attributes();
	partial void LeaveRule_global_attributes();
	// $ANTLR start "global_attributes"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:505:1: global_attributes : ( global_attribute )+ ;
	[GrammarRule("global_attributes")]
	private Antlr3AstNode global_attributes()
	{
		EnterRule_global_attributes();
		EnterRule("global_attributes", 132);
		var retval = new Antlr3AstNode("global_attributes");
		
		retval.Start = (IToken)input.LT(1);
		int global_attributes_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode global_attribute483 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "global_attributes");
		DebugLocation(505, 19);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 132)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:505:18: ( ( global_attribute )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:506:2: ( global_attribute )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(506, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:506:2: ( global_attribute )+
			int cnt135=0;
			try { DebugEnterSubRule(135);
			while (true)
			{
				int alt135=2;
				try { DebugEnterDecision(135, false);
				int LA135_1 = input.LA(1);

				if ((LA135_1==91))
				{
					int LA135_2 = input.LA(2);

					if ((LA135_2==101||LA135_2==150))
					{
						int LA135_3 = input.LA(3);

						if ((LA135_3==79))
						{
							alt135 = 1;
						}


					}


				}


				} finally { DebugExitDecision(135); }
				switch (alt135)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:506:2: global_attribute
					{
					DebugLocation(506, 2);
					PushFollow(Follow._global_attribute_in_global_attributes3523);
					global_attribute483=global_attribute();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, global_attribute483.Tree, global_attribute483, "global_attribute483", retval);

					}
					break;

				default:
					if (cnt135 >= 1)
						goto loop135;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee135 = new EarlyExitException( 135, input );
					DebugRecognitionException(eee135);
					throw eee135;
				}
				cnt135++;
			}
			loop135:
				;

			} finally { DebugExitSubRule(135); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("global_attributes", 132);
			LeaveRule("global_attributes", 132);
			LeaveRule_global_attributes();
			if (state.backtracking > 0) { Memoize(input, 132, global_attributes_StartIndex); }

		}
		DebugLocation(506, 19);
		} finally { DebugExitRule(GrammarFileName, "global_attributes"); }
		return retval;

	}
	// $ANTLR end "global_attributes"

	partial void EnterRule_global_attribute();
	partial void LeaveRule_global_attribute();
	// $ANTLR start "global_attribute"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:507:1: global_attribute : '[' global_attribute_target_specifier attribute_list ( ',' )? ']' ;
	[GrammarRule("global_attribute")]
	private Antlr3AstNode global_attribute()
	{
		EnterRule_global_attribute();
		EnterRule("global_attribute", 133);
		var retval = new Antlr3AstNode("global_attribute");
		
		retval.Start = (IToken)input.LT(1);
		int global_attribute_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal484 = default(IToken);
		IToken char_literal487 = default(IToken);
		IToken char_literal488 = default(IToken);
		Antlr3AstNode global_attribute_target_specifier485 = default(Antlr3AstNode);
		Antlr3AstNode attribute_list486 = default(Antlr3AstNode);

		object char_literal484_tree = default(object);
		object char_literal487_tree = default(object);
		object char_literal488_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "global_attribute");
		DebugLocation(507, 71);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 133)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:507:17: ( '[' global_attribute_target_specifier attribute_list ( ',' )? ']' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:508:2: '[' global_attribute_target_specifier attribute_list ( ',' )? ']'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(508, 2);
			char_literal484=(IToken)Match(input,91,Follow._91_in_global_attribute3533); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal484_tree = (object)adaptor.Create(char_literal484, "char_literal484", retval);
			adaptor.AddChild(root_0, char_literal484_tree);
			}
			DebugLocation(508, 8);
			PushFollow(Follow._global_attribute_target_specifier_in_global_attribute3537);
			global_attribute_target_specifier485=global_attribute_target_specifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, global_attribute_target_specifier485.Tree, global_attribute_target_specifier485, "global_attribute_target_specifier485", retval);
			DebugLocation(508, 44);
			PushFollow(Follow._attribute_list_in_global_attribute3541);
			attribute_list486=attribute_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, attribute_list486.Tree, attribute_list486, "attribute_list486", retval);
			DebugLocation(508, 61);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:508:61: ( ',' )?
			int alt136=2;
			try { DebugEnterSubRule(136);
			try { DebugEnterDecision(136, false);
			int LA136_1 = input.LA(1);

			if ((LA136_1==74))
			{
				alt136 = 1;
			}
			} finally { DebugExitDecision(136); }
			switch (alt136)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:508:61: ','
				{
				DebugLocation(508, 61);
				char_literal487=(IToken)Match(input,74,Follow._74_in_global_attribute3545); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal487_tree = (object)adaptor.Create(char_literal487, "char_literal487", retval);
				adaptor.AddChild(root_0, char_literal487_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(136); }

			DebugLocation(508, 68);
			char_literal488=(IToken)Match(input,92,Follow._92_in_global_attribute3550); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal488_tree = (object)adaptor.Create(char_literal488, "char_literal488", retval);
			adaptor.AddChild(root_0, char_literal488_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("global_attribute", 133);
			LeaveRule("global_attribute", 133);
			LeaveRule_global_attribute();
			if (state.backtracking > 0) { Memoize(input, 133, global_attribute_StartIndex); }

		}
		DebugLocation(508, 71);
		} finally { DebugExitRule(GrammarFileName, "global_attribute"); }
		return retval;

	}
	// $ANTLR end "global_attribute"

	partial void EnterRule_global_attribute_target_specifier();
	partial void LeaveRule_global_attribute_target_specifier();
	// $ANTLR start "global_attribute_target_specifier"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:509:1: global_attribute_target_specifier : global_attribute_target ':' ;
	[GrammarRule("global_attribute_target_specifier")]
	private Antlr3AstNode global_attribute_target_specifier()
	{
		EnterRule_global_attribute_target_specifier();
		EnterRule("global_attribute_target_specifier", 134);
		var retval = new Antlr3AstNode("global_attribute_target_specifier");
		
		retval.Start = (IToken)input.LT(1);
		int global_attribute_target_specifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal490 = default(IToken);
		Antlr3AstNode global_attribute_target489 = default(Antlr3AstNode);

		object char_literal490_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "global_attribute_target_specifier");
		DebugLocation(509, 31);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 134)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:509:34: ( global_attribute_target ':' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:510:2: global_attribute_target ':'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(510, 2);
			PushFollow(Follow._global_attribute_target_in_global_attribute_target_specifier3559);
			global_attribute_target489=global_attribute_target();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, global_attribute_target489.Tree, global_attribute_target489, "global_attribute_target489", retval);
			DebugLocation(510, 28);
			char_literal490=(IToken)Match(input,79,Follow._79_in_global_attribute_target_specifier3563); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal490_tree = (object)adaptor.Create(char_literal490, "char_literal490", retval);
			adaptor.AddChild(root_0, char_literal490_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("global_attribute_target_specifier", 134);
			LeaveRule("global_attribute_target_specifier", 134);
			LeaveRule_global_attribute_target_specifier();
			if (state.backtracking > 0) { Memoize(input, 134, global_attribute_target_specifier_StartIndex); }

		}
		DebugLocation(510, 31);
		} finally { DebugExitRule(GrammarFileName, "global_attribute_target_specifier"); }
		return retval;

	}
	// $ANTLR end "global_attribute_target_specifier"

	partial void EnterRule_global_attribute_target();
	partial void LeaveRule_global_attribute_target();
	// $ANTLR start "global_attribute_target"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:511:1: global_attribute_target : ( 'assembly' | 'module' );
	[GrammarRule("global_attribute_target")]
	private Antlr3AstNode global_attribute_target()
	{
		EnterRule_global_attribute_target();
		EnterRule("global_attribute_target", 135);
		var retval = new Antlr3AstNode("global_attribute_target");
		
		retval.Start = (IToken)input.LT(1);
		int global_attribute_target_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set491 = default(IToken);

		object set491_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "global_attribute_target");
		DebugLocation(511, 23);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 135)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:511:24: ( 'assembly' | 'module' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(511, 24);

			set491=(IToken)input.LT(1);
			if (input.LA(1)==101||input.LA(1)==150)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set491, "set491", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("global_attribute_target", 135);
			LeaveRule("global_attribute_target", 135);
			LeaveRule_global_attribute_target();
			if (state.backtracking > 0) { Memoize(input, 135, global_attribute_target_StartIndex); }

		}
		DebugLocation(512, 23);
		} finally { DebugExitRule(GrammarFileName, "global_attribute_target"); }
		return retval;

	}
	// $ANTLR end "global_attribute_target"

	partial void EnterRule_attributes();
	partial void LeaveRule_attributes();
	// $ANTLR start "attributes"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:513:1: attributes : attribute_sections ;
	[GrammarRule("attributes")]
	private Antlr3AstNode attributes()
	{
		EnterRule_attributes();
		EnterRule("attributes", 136);
		var retval = new Antlr3AstNode("attributes");
		
		retval.Start = (IToken)input.LT(1);
		int attributes_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode attribute_sections492 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "attributes");
		DebugLocation(513, 20);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 136)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:513:11: ( attribute_sections )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:514:2: attribute_sections
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(514, 2);
			PushFollow(Follow._attribute_sections_in_attributes3585);
			attribute_sections492=attribute_sections();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, attribute_sections492.Tree, attribute_sections492, "attribute_sections492", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("attributes", 136);
			LeaveRule("attributes", 136);
			LeaveRule_attributes();
			if (state.backtracking > 0) { Memoize(input, 136, attributes_StartIndex); }

		}
		DebugLocation(514, 20);
		} finally { DebugExitRule(GrammarFileName, "attributes"); }
		return retval;

	}
	// $ANTLR end "attributes"

	partial void EnterRule_attribute_sections();
	partial void LeaveRule_attribute_sections();
	// $ANTLR start "attribute_sections"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:515:1: attribute_sections : ( attribute_section )+ ;
	[GrammarRule("attribute_sections")]
	private Antlr3AstNode attribute_sections()
	{
		EnterRule_attribute_sections();
		EnterRule("attribute_sections", 137);
		var retval = new Antlr3AstNode("attribute_sections");
		
		retval.Start = (IToken)input.LT(1);
		int attribute_sections_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode attribute_section493 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "attribute_sections");
		DebugLocation(515, 20);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 137)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:515:19: ( ( attribute_section )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:516:2: ( attribute_section )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(516, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:516:2: ( attribute_section )+
			int cnt137=0;
			try { DebugEnterSubRule(137);
			while (true)
			{
				int alt137=2;
				try { DebugEnterDecision(137, false);
				int LA137_1 = input.LA(1);

				if ((LA137_1==91))
				{
					alt137 = 1;
				}


				} finally { DebugExitDecision(137); }
				switch (alt137)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:516:2: attribute_section
					{
					DebugLocation(516, 2);
					PushFollow(Follow._attribute_section_in_attribute_sections3594);
					attribute_section493=attribute_section();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, attribute_section493.Tree, attribute_section493, "attribute_section493", retval);

					}
					break;

				default:
					if (cnt137 >= 1)
						goto loop137;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee137 = new EarlyExitException( 137, input );
					DebugRecognitionException(eee137);
					throw eee137;
				}
				cnt137++;
			}
			loop137:
				;

			} finally { DebugExitSubRule(137); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("attribute_sections", 137);
			LeaveRule("attribute_sections", 137);
			LeaveRule_attribute_sections();
			if (state.backtracking > 0) { Memoize(input, 137, attribute_sections_StartIndex); }

		}
		DebugLocation(516, 20);
		} finally { DebugExitRule(GrammarFileName, "attribute_sections"); }
		return retval;

	}
	// $ANTLR end "attribute_sections"

	partial void EnterRule_attribute_section();
	partial void LeaveRule_attribute_section();
	// $ANTLR start "attribute_section"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:517:1: attribute_section : '[' ( attribute_target_specifier )? attribute_list ( ',' )? ']' ;
	[GrammarRule("attribute_section")]
	private Antlr3AstNode attribute_section()
	{
		EnterRule_attribute_section();
		EnterRule("attribute_section", 138);
		var retval = new Antlr3AstNode("attribute_section");
		
		retval.Start = (IToken)input.LT(1);
		int attribute_section_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal494 = default(IToken);
		IToken char_literal497 = default(IToken);
		IToken char_literal498 = default(IToken);
		Antlr3AstNode attribute_target_specifier495 = default(Antlr3AstNode);
		Antlr3AstNode attribute_list496 = default(Antlr3AstNode);

		object char_literal494_tree = default(object);
		object char_literal497_tree = default(object);
		object char_literal498_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "attribute_section");
		DebugLocation(517, 65);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 138)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:517:18: ( '[' ( attribute_target_specifier )? attribute_list ( ',' )? ']' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:518:2: '[' ( attribute_target_specifier )? attribute_list ( ',' )? ']'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(518, 2);
			char_literal494=(IToken)Match(input,91,Follow._91_in_attribute_section3604); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal494_tree = (object)adaptor.Create(char_literal494, "char_literal494", retval);
			adaptor.AddChild(root_0, char_literal494_tree);
			}
			DebugLocation(518, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:518:8: ( attribute_target_specifier )?
			int alt138=2;
			try { DebugEnterSubRule(138);
			try { DebugEnterDecision(138, false);
			int LA138_1 = input.LA(1);

			if ((LA138_1==128||LA138_1==149||LA138_1==159||LA138_1==164||LA138_1==185))
			{
				int LA138_2 = input.LA(2);

				if ((LA138_2==79))
				{
					alt138 = 1;
				}
			}
			else if ((LA138_1==125||LA138_1==170))
			{
				alt138 = 1;
			}
			} finally { DebugExitDecision(138); }
			switch (alt138)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:518:8: attribute_target_specifier
				{
				DebugLocation(518, 8);
				PushFollow(Follow._attribute_target_specifier_in_attribute_section3608);
				attribute_target_specifier495=attribute_target_specifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, attribute_target_specifier495.Tree, attribute_target_specifier495, "attribute_target_specifier495", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(138); }

			DebugLocation(518, 38);
			PushFollow(Follow._attribute_list_in_attribute_section3613);
			attribute_list496=attribute_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, attribute_list496.Tree, attribute_list496, "attribute_list496", retval);
			DebugLocation(518, 55);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:518:55: ( ',' )?
			int alt139=2;
			try { DebugEnterSubRule(139);
			try { DebugEnterDecision(139, false);
			int LA139_1 = input.LA(1);

			if ((LA139_1==74))
			{
				alt139 = 1;
			}
			} finally { DebugExitDecision(139); }
			switch (alt139)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:518:55: ','
				{
				DebugLocation(518, 55);
				char_literal497=(IToken)Match(input,74,Follow._74_in_attribute_section3617); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal497_tree = (object)adaptor.Create(char_literal497, "char_literal497", retval);
				adaptor.AddChild(root_0, char_literal497_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(139); }

			DebugLocation(518, 62);
			char_literal498=(IToken)Match(input,92,Follow._92_in_attribute_section3622); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal498_tree = (object)adaptor.Create(char_literal498, "char_literal498", retval);
			adaptor.AddChild(root_0, char_literal498_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("attribute_section", 138);
			LeaveRule("attribute_section", 138);
			LeaveRule_attribute_section();
			if (state.backtracking > 0) { Memoize(input, 138, attribute_section_StartIndex); }

		}
		DebugLocation(518, 65);
		} finally { DebugExitRule(GrammarFileName, "attribute_section"); }
		return retval;

	}
	// $ANTLR end "attribute_section"

	partial void EnterRule_attribute_target_specifier();
	partial void LeaveRule_attribute_target_specifier();
	// $ANTLR start "attribute_target_specifier"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:519:1: attribute_target_specifier : attribute_target ':' ;
	[GrammarRule("attribute_target_specifier")]
	private Antlr3AstNode attribute_target_specifier()
	{
		EnterRule_attribute_target_specifier();
		EnterRule("attribute_target_specifier", 139);
		var retval = new Antlr3AstNode("attribute_target_specifier");
		
		retval.Start = (IToken)input.LT(1);
		int attribute_target_specifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal500 = default(IToken);
		Antlr3AstNode attribute_target499 = default(Antlr3AstNode);

		object char_literal500_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "attribute_target_specifier");
		DebugLocation(519, 24);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 139)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:519:27: ( attribute_target ':' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:520:2: attribute_target ':'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(520, 2);
			PushFollow(Follow._attribute_target_in_attribute_target_specifier3631);
			attribute_target499=attribute_target();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, attribute_target499.Tree, attribute_target499, "attribute_target499", retval);
			DebugLocation(520, 21);
			char_literal500=(IToken)Match(input,79,Follow._79_in_attribute_target_specifier3635); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal500_tree = (object)adaptor.Create(char_literal500, "char_literal500", retval);
			adaptor.AddChild(root_0, char_literal500_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("attribute_target_specifier", 139);
			LeaveRule("attribute_target_specifier", 139);
			LeaveRule_attribute_target_specifier();
			if (state.backtracking > 0) { Memoize(input, 139, attribute_target_specifier_StartIndex); }

		}
		DebugLocation(520, 24);
		} finally { DebugExitRule(GrammarFileName, "attribute_target_specifier"); }
		return retval;

	}
	// $ANTLR end "attribute_target_specifier"

	partial void EnterRule_attribute_target();
	partial void LeaveRule_attribute_target();
	// $ANTLR start "attribute_target"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:521:1: attribute_target : ( 'field' | 'event' | 'method' | 'param' | 'property' | 'return' | 'type' );
	[GrammarRule("attribute_target")]
	private Antlr3AstNode attribute_target()
	{
		EnterRule_attribute_target();
		EnterRule("attribute_target", 140);
		var retval = new Antlr3AstNode("attribute_target");
		
		retval.Start = (IToken)input.LT(1);
		int attribute_target_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set501 = default(IToken);

		object set501_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "attribute_target");
		DebugLocation(521, 73);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 140)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:521:17: ( 'field' | 'event' | 'method' | 'param' | 'property' | 'return' | 'type' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(521, 17);

			set501=(IToken)input.LT(1);
			if (input.LA(1)==125||input.LA(1)==128||input.LA(1)==149||input.LA(1)==159||input.LA(1)==164||input.LA(1)==170||input.LA(1)==185)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set501, "set501", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("attribute_target", 140);
			LeaveRule("attribute_target", 140);
			LeaveRule_attribute_target();
			if (state.backtracking > 0) { Memoize(input, 140, attribute_target_StartIndex); }

		}
		DebugLocation(522, 73);
		} finally { DebugExitRule(GrammarFileName, "attribute_target"); }
		return retval;

	}
	// $ANTLR end "attribute_target"

	partial void EnterRule_attribute_list();
	partial void LeaveRule_attribute_list();
	// $ANTLR start "attribute_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:523:1: attribute_list : attribute ( ',' attribute )* ;
	[GrammarRule("attribute_list")]
	private Antlr3AstNode attribute_list()
	{
		EnterRule_attribute_list();
		EnterRule("attribute_list", 141);
		var retval = new Antlr3AstNode("attribute_list");
		
		retval.Start = (IToken)input.LT(1);
		int attribute_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal503 = default(IToken);
		Antlr3AstNode attribute502 = default(Antlr3AstNode);
		Antlr3AstNode attribute504 = default(Antlr3AstNode);

		object char_literal503_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "attribute_list");
		DebugLocation(523, 28);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 141)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:523:15: ( attribute ( ',' attribute )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:524:2: attribute ( ',' attribute )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(524, 2);
			PushFollow(Follow._attribute_in_attribute_list3677);
			attribute502=attribute();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, attribute502.Tree, attribute502, "attribute502", retval);
			DebugLocation(524, 12);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:524:12: ( ',' attribute )*
			try { DebugEnterSubRule(140);
			while (true)
			{
				int alt140=2;
				try { DebugEnterDecision(140, false);
				int LA140_1 = input.LA(1);

				if ((LA140_1==74))
				{
					int LA140_2 = input.LA(2);

					if ((LA140_2==IDENTIFIER||LA140_2==95||(LA140_2>=97 && LA140_2<=98)||(LA140_2>=100 && LA140_2<=101)||LA140_2==107||LA140_2==119||LA140_2==122||LA140_2==124||LA140_2==128||LA140_2==134||LA140_2==137||LA140_2==143||(LA140_2>=145 && LA140_2<=146)||(LA140_2>=149 && LA140_2<=150)||LA140_2==154||LA140_2==156||LA140_2==159||LA140_2==162||LA140_2==164||LA140_2==169||(LA140_2>=173 && LA140_2<=174)||LA140_2==185||LA140_2==192||LA140_2==196||LA140_2==198))
					{
						alt140 = 1;
					}


				}


				} finally { DebugExitDecision(140); }
				switch ( alt140 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:524:13: ',' attribute
					{
					DebugLocation(524, 13);
					char_literal503=(IToken)Match(input,74,Follow._74_in_attribute_list3680); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal503_tree = (object)adaptor.Create(char_literal503, "char_literal503", retval);
					adaptor.AddChild(root_0, char_literal503_tree);
					}
					DebugLocation(524, 17);
					PushFollow(Follow._attribute_in_attribute_list3682);
					attribute504=attribute();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, attribute504.Tree, attribute504, "attribute504", retval);

					}
					break;

				default:
					goto loop140;
				}
			}

			loop140:
				;

			} finally { DebugExitSubRule(140); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("attribute_list", 141);
			LeaveRule("attribute_list", 141);
			LeaveRule_attribute_list();
			if (state.backtracking > 0) { Memoize(input, 141, attribute_list_StartIndex); }

		}
		DebugLocation(524, 28);
		} finally { DebugExitRule(GrammarFileName, "attribute_list"); }
		return retval;

	}
	// $ANTLR end "attribute_list"

	partial void EnterRule_attribute();
	partial void LeaveRule_attribute();
	// $ANTLR start "attribute"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:525:1: attribute : type_name ( attribute_arguments )? ;
	[GrammarRule("attribute")]
	private Antlr3AstNode attribute()
	{
		EnterRule_attribute();
		EnterRule("attribute", 142);
		var retval = new Antlr3AstNode("attribute");
		
		retval.Start = (IToken)input.LT(1);
		int attribute_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode type_name505 = default(Antlr3AstNode);
		Antlr3AstNode attribute_arguments506 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "attribute");
		DebugLocation(525, 34);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 142)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:525:10: ( type_name ( attribute_arguments )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:526:2: type_name ( attribute_arguments )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(526, 2);
			PushFollow(Follow._type_name_in_attribute3694);
			type_name505=type_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_name505.Tree, type_name505, "type_name505", retval);
			DebugLocation(526, 14);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:526:14: ( attribute_arguments )?
			int alt141=2;
			try { DebugEnterSubRule(141);
			try { DebugEnterDecision(141, false);
			int LA141_1 = input.LA(1);

			if ((LA141_1==68))
			{
				alt141 = 1;
			}
			} finally { DebugExitDecision(141); }
			switch (alt141)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:526:14: attribute_arguments
				{
				DebugLocation(526, 14);
				PushFollow(Follow._attribute_arguments_in_attribute3698);
				attribute_arguments506=attribute_arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, attribute_arguments506.Tree, attribute_arguments506, "attribute_arguments506", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(141); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("attribute", 142);
			LeaveRule("attribute", 142);
			LeaveRule_attribute();
			if (state.backtracking > 0) { Memoize(input, 142, attribute_StartIndex); }

		}
		DebugLocation(526, 34);
		} finally { DebugExitRule(GrammarFileName, "attribute"); }
		return retval;

	}
	// $ANTLR end "attribute"

	partial void EnterRule_attribute_arguments();
	partial void LeaveRule_attribute_arguments();
	// $ANTLR start "attribute_arguments"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:528:1: attribute_arguments : '(' ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' ) ;
	[GrammarRule("attribute_arguments")]
	private Antlr3AstNode attribute_arguments()
	{
		EnterRule_attribute_arguments();
		EnterRule("attribute_arguments", 143);
		var retval = new Antlr3AstNode("attribute_arguments");
		
		retval.Start = (IToken)input.LT(1);
		int attribute_arguments_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal507 = default(IToken);
		IToken char_literal508 = default(IToken);
		IToken char_literal511 = default(IToken);
		IToken char_literal513 = default(IToken);
		Antlr3AstNode positional_argument509 = default(Antlr3AstNode);
		Antlr3AstNode named_argument510 = default(Antlr3AstNode);
		Antlr3AstNode positional_argument512 = default(Antlr3AstNode);

		object char_literal507_tree = default(object);
		object char_literal508_tree = default(object);
		object char_literal511_tree = default(object);
		object char_literal513_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "attribute_arguments");
		DebugLocation(528, 5);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 143)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:528:20: ( '(' ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:529:2: '(' ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(529, 2);
			char_literal507=(IToken)Match(input,68,Follow._68_in_attribute_arguments3709); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal507_tree = (object)adaptor.Create(char_literal507, "char_literal507", retval);
			adaptor.AddChild(root_0, char_literal507_tree);
			}
			DebugLocation(529, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:529:8: ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' )
			int alt143=2;
			try { DebugEnterSubRule(143);
			try { DebugEnterDecision(143, false);
			int LA143_1 = input.LA(1);

			if ((LA143_1==RPAREN))
			{
				alt143 = 1;
			}
			else if ((LA143_1==Character_literal||LA143_1==FALSE||(LA143_1>=Hex_number && LA143_1<=IDENTIFIER)||(LA143_1>=MINUS && LA143_1<=NUMBER)||LA143_1==Real_literal||LA143_1==STRINGLITERAL||LA143_1==TRUE||LA143_1==Verbatim_string_literal||LA143_1==61||LA143_1==66||(LA143_1>=68 && LA143_1<=69)||(LA143_1>=71 && LA143_1<=72)||LA143_1==75||LA143_1==95||(LA143_1>=97 && LA143_1<=98)||(LA143_1>=100 && LA143_1<=105)||(LA143_1>=107 && LA143_1<=108)||(LA143_1>=111 && LA143_1<=112)||(LA143_1>=116 && LA143_1<=119)||(LA143_1>=121 && LA143_1<=122)||LA143_1==124||LA143_1==128||LA143_1==131||LA143_1==134||LA143_1==137||LA143_1==140||LA143_1==143||(LA143_1>=145 && LA143_1<=146)||(LA143_1>=148 && LA143_1<=150)||(LA143_1>=152 && LA143_1<=154)||LA143_1==156||LA143_1==159||LA143_1==162||LA143_1==164||LA143_1==169||LA143_1==171||(LA143_1>=173 && LA143_1<=176)||LA143_1==179||LA143_1==182||(LA143_1>=185 && LA143_1<=189)||(LA143_1>=191 && LA143_1<=192)||LA143_1==196||LA143_1==198||LA143_1==204))
			{
				alt143 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 143, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(143); }
			switch (alt143)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:529:9: ')'
				{
				DebugLocation(529, 9);
				char_literal508=(IToken)Match(input,RPAREN,Follow._RPAREN_in_attribute_arguments3714); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal508_tree = (object)adaptor.Create(char_literal508, "char_literal508", retval);
				adaptor.AddChild(root_0, char_literal508_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:530:8: ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')'
				{
				DebugLocation(530, 8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:530:8: ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* )
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:530:9: positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )*
				{
				DebugLocation(530, 9);
				PushFollow(Follow._positional_argument_in_attribute_arguments3734);
				positional_argument509=positional_argument();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, positional_argument509.Tree, positional_argument509, "positional_argument509", retval);
				DebugLocation(530, 31);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:530:31: ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )*
				try { DebugEnterSubRule(142);
				while (true)
				{
					int alt142=3;
					try { DebugEnterDecision(142, false);
					int LA142_1 = input.LA(1);

					if ((LA142_1==IDENTIFIER||LA142_1==95||(LA142_1>=97 && LA142_1<=98)||(LA142_1>=100 && LA142_1<=101)||LA142_1==107||LA142_1==119||LA142_1==122||LA142_1==124||LA142_1==128||LA142_1==134||LA142_1==137||LA142_1==143||(LA142_1>=145 && LA142_1<=146)||(LA142_1>=149 && LA142_1<=150)||LA142_1==154||LA142_1==156||LA142_1==159||LA142_1==162||LA142_1==164||LA142_1==169||(LA142_1>=173 && LA142_1<=174)||LA142_1==185||LA142_1==192||LA142_1==196||LA142_1==198) && (EvaluatePredicate(synpred21_cs_fragment)))
					{
						alt142 = 1;
					}
					else if ((LA142_1==74))
					{
						alt142 = 2;
					}


					} finally { DebugExitDecision(142); }
					switch ( alt142 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:530:32: ( ',' identifier '=' )=> named_argument
						{
						DebugLocation(530, 60);
						PushFollow(Follow._named_argument_in_attribute_arguments3753);
						named_argument510=named_argument();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, named_argument510.Tree, named_argument510, "named_argument510", retval);

						}
						break;
					case 2:
						DebugEnterAlt(2);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:531:15: ',' positional_argument
						{
						DebugLocation(531, 15);
						char_literal511=(IToken)Match(input,74,Follow._74_in_attribute_arguments3769); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal511_tree = (object)adaptor.Create(char_literal511, "char_literal511", retval);
						adaptor.AddChild(root_0, char_literal511_tree);
						}
						DebugLocation(531, 19);
						PushFollow(Follow._positional_argument_in_attribute_arguments3771);
						positional_argument512=positional_argument();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, positional_argument512.Tree, positional_argument512, "positional_argument512", retval);

						}
						break;

					default:
						goto loop142;
					}
				}

				loop142:
					;

				} finally { DebugExitSubRule(142); }


				}

				DebugLocation(532, 8);
				char_literal513=(IToken)Match(input,RPAREN,Follow._RPAREN_in_attribute_arguments3782); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal513_tree = (object)adaptor.Create(char_literal513, "char_literal513", retval);
				adaptor.AddChild(root_0, char_literal513_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(143); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("attribute_arguments", 143);
			LeaveRule("attribute_arguments", 143);
			LeaveRule_attribute_arguments();
			if (state.backtracking > 0) { Memoize(input, 143, attribute_arguments_StartIndex); }

		}
		DebugLocation(533, 5);
		} finally { DebugExitRule(GrammarFileName, "attribute_arguments"); }
		return retval;

	}
	// $ANTLR end "attribute_arguments"

	partial void EnterRule_positional_argument_list();
	partial void LeaveRule_positional_argument_list();
	// $ANTLR start "positional_argument_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:534:1: positional_argument_list : positional_argument ( ',' positional_argument )* ;
	[GrammarRule("positional_argument_list")]
	private Antlr3AstNode positional_argument_list()
	{
		EnterRule_positional_argument_list();
		EnterRule("positional_argument_list", 144);
		var retval = new Antlr3AstNode("positional_argument_list");
		
		retval.Start = (IToken)input.LT(1);
		int positional_argument_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal515 = default(IToken);
		Antlr3AstNode positional_argument514 = default(Antlr3AstNode);
		Antlr3AstNode positional_argument516 = default(Antlr3AstNode);

		object char_literal515_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "positional_argument_list");
		DebugLocation(534, 48);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 144)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:534:25: ( positional_argument ( ',' positional_argument )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:535:2: positional_argument ( ',' positional_argument )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(535, 2);
			PushFollow(Follow._positional_argument_in_positional_argument_list3796);
			positional_argument514=positional_argument();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, positional_argument514.Tree, positional_argument514, "positional_argument514", retval);
			DebugLocation(535, 22);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:535:22: ( ',' positional_argument )*
			try { DebugEnterSubRule(144);
			while (true)
			{
				int alt144=2;
				try { DebugEnterDecision(144, false);
				int LA144_1 = input.LA(1);

				if ((LA144_1==74))
				{
					alt144 = 1;
				}


				} finally { DebugExitDecision(144); }
				switch ( alt144 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:535:23: ',' positional_argument
					{
					DebugLocation(535, 23);
					char_literal515=(IToken)Match(input,74,Follow._74_in_positional_argument_list3799); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal515_tree = (object)adaptor.Create(char_literal515, "char_literal515", retval);
					adaptor.AddChild(root_0, char_literal515_tree);
					}
					DebugLocation(535, 27);
					PushFollow(Follow._positional_argument_in_positional_argument_list3801);
					positional_argument516=positional_argument();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, positional_argument516.Tree, positional_argument516, "positional_argument516", retval);

					}
					break;

				default:
					goto loop144;
				}
			}

			loop144:
				;

			} finally { DebugExitSubRule(144); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("positional_argument_list", 144);
			LeaveRule("positional_argument_list", 144);
			LeaveRule_positional_argument_list();
			if (state.backtracking > 0) { Memoize(input, 144, positional_argument_list_StartIndex); }

		}
		DebugLocation(535, 48);
		} finally { DebugExitRule(GrammarFileName, "positional_argument_list"); }
		return retval;

	}
	// $ANTLR end "positional_argument_list"

	partial void EnterRule_positional_argument();
	partial void LeaveRule_positional_argument();
	// $ANTLR start "positional_argument"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:536:1: positional_argument : attribute_argument_expression ;
	[GrammarRule("positional_argument")]
	private Antlr3AstNode positional_argument()
	{
		EnterRule_positional_argument();
		EnterRule("positional_argument", 145);
		var retval = new Antlr3AstNode("positional_argument");
		
		retval.Start = (IToken)input.LT(1);
		int positional_argument_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode attribute_argument_expression517 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "positional_argument");
		DebugLocation(536, 31);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 145)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:536:20: ( attribute_argument_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:537:2: attribute_argument_expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(537, 2);
			PushFollow(Follow._attribute_argument_expression_in_positional_argument3812);
			attribute_argument_expression517=attribute_argument_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, attribute_argument_expression517.Tree, attribute_argument_expression517, "attribute_argument_expression517", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("positional_argument", 145);
			LeaveRule("positional_argument", 145);
			LeaveRule_positional_argument();
			if (state.backtracking > 0) { Memoize(input, 145, positional_argument_StartIndex); }

		}
		DebugLocation(537, 31);
		} finally { DebugExitRule(GrammarFileName, "positional_argument"); }
		return retval;

	}
	// $ANTLR end "positional_argument"

	partial void EnterRule_named_argument_list();
	partial void LeaveRule_named_argument_list();
	// $ANTLR start "named_argument_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:538:1: named_argument_list : named_argument ( ',' named_argument )* ;
	[GrammarRule("named_argument_list")]
	private Antlr3AstNode named_argument_list()
	{
		EnterRule_named_argument_list();
		EnterRule("named_argument_list", 146);
		var retval = new Antlr3AstNode("named_argument_list");
		
		retval.Start = (IToken)input.LT(1);
		int named_argument_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal519 = default(IToken);
		Antlr3AstNode named_argument518 = default(Antlr3AstNode);
		Antlr3AstNode named_argument520 = default(Antlr3AstNode);

		object char_literal519_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "named_argument_list");
		DebugLocation(538, 38);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 146)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:538:20: ( named_argument ( ',' named_argument )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:539:2: named_argument ( ',' named_argument )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(539, 2);
			PushFollow(Follow._named_argument_in_named_argument_list3821);
			named_argument518=named_argument();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, named_argument518.Tree, named_argument518, "named_argument518", retval);
			DebugLocation(539, 17);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:539:17: ( ',' named_argument )*
			try { DebugEnterSubRule(145);
			while (true)
			{
				int alt145=2;
				try { DebugEnterDecision(145, false);
				int LA145_1 = input.LA(1);

				if ((LA145_1==74))
				{
					alt145 = 1;
				}


				} finally { DebugExitDecision(145); }
				switch ( alt145 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:539:18: ',' named_argument
					{
					DebugLocation(539, 18);
					char_literal519=(IToken)Match(input,74,Follow._74_in_named_argument_list3824); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal519_tree = (object)adaptor.Create(char_literal519, "char_literal519", retval);
					adaptor.AddChild(root_0, char_literal519_tree);
					}
					DebugLocation(539, 22);
					PushFollow(Follow._named_argument_in_named_argument_list3826);
					named_argument520=named_argument();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, named_argument520.Tree, named_argument520, "named_argument520", retval);

					}
					break;

				default:
					goto loop145;
				}
			}

			loop145:
				;

			} finally { DebugExitSubRule(145); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("named_argument_list", 146);
			LeaveRule("named_argument_list", 146);
			LeaveRule_named_argument_list();
			if (state.backtracking > 0) { Memoize(input, 146, named_argument_list_StartIndex); }

		}
		DebugLocation(539, 38);
		} finally { DebugExitRule(GrammarFileName, "named_argument_list"); }
		return retval;

	}
	// $ANTLR end "named_argument_list"

	partial void EnterRule_named_argument();
	partial void LeaveRule_named_argument();
	// $ANTLR start "named_argument"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:540:1: named_argument : identifier '=' attribute_argument_expression ;
	[GrammarRule("named_argument")]
	private Antlr3AstNode named_argument()
	{
		EnterRule_named_argument();
		EnterRule("named_argument", 147);
		var retval = new Antlr3AstNode("named_argument");
		
		retval.Start = (IToken)input.LT(1);
		int named_argument_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal522 = default(IToken);
		Antlr3AstNode identifier521 = default(Antlr3AstNode);
		Antlr3AstNode attribute_argument_expression523 = default(Antlr3AstNode);

		object char_literal522_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "named_argument");
		DebugLocation(540, 50);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 147)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:540:15: ( identifier '=' attribute_argument_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:541:2: identifier '=' attribute_argument_expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(541, 2);
			PushFollow(Follow._identifier_in_named_argument3837);
			identifier521=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier521.Tree, identifier521, "identifier521", retval);
			DebugLocation(541, 15);
			char_literal522=(IToken)Match(input,85,Follow._85_in_named_argument3841); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal522_tree = (object)adaptor.Create(char_literal522, "char_literal522", retval);
			adaptor.AddChild(root_0, char_literal522_tree);
			}
			DebugLocation(541, 21);
			PushFollow(Follow._attribute_argument_expression_in_named_argument3845);
			attribute_argument_expression523=attribute_argument_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, attribute_argument_expression523.Tree, attribute_argument_expression523, "attribute_argument_expression523", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("named_argument", 147);
			LeaveRule("named_argument", 147);
			LeaveRule_named_argument();
			if (state.backtracking > 0) { Memoize(input, 147, named_argument_StartIndex); }

		}
		DebugLocation(541, 50);
		} finally { DebugExitRule(GrammarFileName, "named_argument"); }
		return retval;

	}
	// $ANTLR end "named_argument"

	partial void EnterRule_attribute_argument_expression();
	partial void LeaveRule_attribute_argument_expression();
	// $ANTLR start "attribute_argument_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:542:1: attribute_argument_expression : expression ;
	[GrammarRule("attribute_argument_expression")]
	private Antlr3AstNode attribute_argument_expression()
	{
		EnterRule_attribute_argument_expression();
		EnterRule("attribute_argument_expression", 148);
		var retval = new Antlr3AstNode("attribute_argument_expression");
		
		retval.Start = (IToken)input.LT(1);
		int attribute_argument_expression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode expression524 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "attribute_argument_expression");
		DebugLocation(542, 12);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 148)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:542:30: ( expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:543:2: expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(543, 2);
			PushFollow(Follow._expression_in_attribute_argument_expression3854);
			expression524=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression524.Tree, expression524, "expression524", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("attribute_argument_expression", 148);
			LeaveRule("attribute_argument_expression", 148);
			LeaveRule_attribute_argument_expression();
			if (state.backtracking > 0) { Memoize(input, 148, attribute_argument_expression_StartIndex); }

		}
		DebugLocation(543, 12);
		} finally { DebugExitRule(GrammarFileName, "attribute_argument_expression"); }
		return retval;

	}
	// $ANTLR end "attribute_argument_expression"

	partial void EnterRule_class_declaration();
	partial void LeaveRule_class_declaration();
	// $ANTLR start "class_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:549:1: class_declaration : 'class' type_or_generic ( class_base )? ( type_parameter_constraints_clauses )? class_body ( ';' )? ;
	[GrammarRule("class_declaration")]
	private Antlr3AstNode class_declaration()
	{
		EnterRule_class_declaration();
		EnterRule("class_declaration", 149);
		var retval = new Antlr3AstNode("class_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int class_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal525 = default(IToken);
		IToken char_literal530 = default(IToken);
		Antlr3AstNode type_or_generic526 = default(Antlr3AstNode);
		Antlr3AstNode class_base527 = default(Antlr3AstNode);
		Antlr3AstNode type_parameter_constraints_clauses528 = default(Antlr3AstNode);
		Antlr3AstNode class_body529 = default(Antlr3AstNode);

		object string_literal525_tree = default(object);
		object char_literal530_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "class_declaration");
		DebugLocation(549, 98);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 149)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:549:18: ( 'class' type_or_generic ( class_base )? ( type_parameter_constraints_clauses )? class_body ( ';' )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:550:2: 'class' type_or_generic ( class_base )? ( type_parameter_constraints_clauses )? class_body ( ';' )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(550, 2);
			string_literal525=(IToken)Match(input,113,Follow._113_in_class_declaration3867); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal525_tree = (object)adaptor.Create(string_literal525, "string_literal525", retval);
			adaptor.AddChild(root_0, string_literal525_tree);
			}
			DebugLocation(550, 11);
			PushFollow(Follow._type_or_generic_in_class_declaration3870);
			type_or_generic526=type_or_generic();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_or_generic526.Tree, type_or_generic526, "type_or_generic526", retval);
			DebugLocation(550, 29);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:550:29: ( class_base )?
			int alt146=2;
			try { DebugEnterSubRule(146);
			try { DebugEnterDecision(146, false);
			int LA146_1 = input.LA(1);

			if ((LA146_1==79))
			{
				alt146 = 1;
			}
			} finally { DebugExitDecision(146); }
			switch (alt146)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:550:29: class_base
				{
				DebugLocation(550, 29);
				PushFollow(Follow._class_base_in_class_declaration3874);
				class_base527=class_base();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, class_base527.Tree, class_base527, "class_base527", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(146); }

			DebugLocation(550, 43);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:550:43: ( type_parameter_constraints_clauses )?
			int alt147=2;
			try { DebugEnterSubRule(147);
			try { DebugEnterDecision(147, false);
			int LA147_1 = input.LA(1);

			if ((LA147_1==196))
			{
				alt147 = 1;
			}
			} finally { DebugExitDecision(147); }
			switch (alt147)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:550:43: type_parameter_constraints_clauses
				{
				DebugLocation(550, 43);
				PushFollow(Follow._type_parameter_constraints_clauses_in_class_declaration3879);
				type_parameter_constraints_clauses528=type_parameter_constraints_clauses();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type_parameter_constraints_clauses528.Tree, type_parameter_constraints_clauses528, "type_parameter_constraints_clauses528", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(147); }

			DebugLocation(550, 81);
			PushFollow(Follow._class_body_in_class_declaration3884);
			class_body529=class_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, class_body529.Tree, class_body529, "class_body529", retval);
			DebugLocation(550, 94);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:550:94: ( ';' )?
			int alt148=2;
			try { DebugEnterSubRule(148);
			try { DebugEnterDecision(148, false);
			int LA148_1 = input.LA(1);

			if ((LA148_1==SEMI))
			{
				alt148 = 1;
			}
			} finally { DebugExitDecision(148); }
			switch (alt148)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:550:94: ';'
				{
				DebugLocation(550, 94);
				char_literal530=(IToken)Match(input,SEMI,Follow._SEMI_in_class_declaration3888); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal530_tree = (object)adaptor.Create(char_literal530, "char_literal530", retval);
				adaptor.AddChild(root_0, char_literal530_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(148); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("class_declaration", 149);
			LeaveRule("class_declaration", 149);
			LeaveRule_class_declaration();
			if (state.backtracking > 0) { Memoize(input, 149, class_declaration_StartIndex); }

		}
		DebugLocation(550, 98);
		} finally { DebugExitRule(GrammarFileName, "class_declaration"); }
		return retval;

	}
	// $ANTLR end "class_declaration"

	partial void EnterRule_class_base();
	partial void LeaveRule_class_base();
	// $ANTLR start "class_base"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:551:1: class_base : ':' interface_type_list ;
	[GrammarRule("class_base")]
	private Antlr3AstNode class_base()
	{
		EnterRule_class_base();
		EnterRule("class_base", 150);
		var retval = new Antlr3AstNode("class_base");
		
		retval.Start = (IToken)input.LT(1);
		int class_base_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal531 = default(IToken);
		Antlr3AstNode interface_type_list532 = default(Antlr3AstNode);

		object char_literal531_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "class_base");
		DebugLocation(551, 27);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 150)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:551:11: ( ':' interface_type_list )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:554:2: ':' interface_type_list
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(554, 2);
			char_literal531=(IToken)Match(input,79,Follow._79_in_class_base3901); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal531_tree = (object)adaptor.Create(char_literal531, "char_literal531", retval);
			adaptor.AddChild(root_0, char_literal531_tree);
			}
			DebugLocation(554, 8);
			PushFollow(Follow._interface_type_list_in_class_base3905);
			interface_type_list532=interface_type_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, interface_type_list532.Tree, interface_type_list532, "interface_type_list532", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("class_base", 150);
			LeaveRule("class_base", 150);
			LeaveRule_class_base();
			if (state.backtracking > 0) { Memoize(input, 150, class_base_StartIndex); }

		}
		DebugLocation(554, 27);
		} finally { DebugExitRule(GrammarFileName, "class_base"); }
		return retval;

	}
	// $ANTLR end "class_base"

	partial void EnterRule_interface_type_list();
	partial void LeaveRule_interface_type_list();
	// $ANTLR start "interface_type_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:556:1: interface_type_list : type ( ',' type )* ;
	[GrammarRule("interface_type_list")]
	private Antlr3AstNode interface_type_list()
	{
		EnterRule_interface_type_list();
		EnterRule("interface_type_list", 151);
		var retval = new Antlr3AstNode("interface_type_list");
		
		retval.Start = (IToken)input.LT(1);
		int interface_type_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal534 = default(IToken);
		Antlr3AstNode type533 = default(Antlr3AstNode);
		Antlr3AstNode type535 = default(Antlr3AstNode);

		object char_literal534_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interface_type_list");
		DebugLocation(556, 20);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 151)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:556:20: ( type ( ',' type )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:557:2: type ( ',' type )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(557, 2);
			PushFollow(Follow._type_in_interface_type_list3915);
			type533=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type533.Tree, type533, "type533", retval);
			DebugLocation(557, 7);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:557:7: ( ',' type )*
			try { DebugEnterSubRule(149);
			while (true)
			{
				int alt149=2;
				try { DebugEnterDecision(149, false);
				int LA149_1 = input.LA(1);

				if ((LA149_1==74))
				{
					alt149 = 1;
				}


				} finally { DebugExitDecision(149); }
				switch ( alt149 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:557:8: ',' type
					{
					DebugLocation(557, 8);
					char_literal534=(IToken)Match(input,74,Follow._74_in_interface_type_list3918); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal534_tree = (object)adaptor.Create(char_literal534, "char_literal534", retval);
					adaptor.AddChild(root_0, char_literal534_tree);
					}
					DebugLocation(557, 14);
					PushFollow(Follow._type_in_interface_type_list3922);
					type535=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type535.Tree, type535, "type535", retval);

					}
					break;

				default:
					goto loop149;
				}
			}

			loop149:
				;

			} finally { DebugExitSubRule(149); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_type_list", 151);
			LeaveRule("interface_type_list", 151);
			LeaveRule_interface_type_list();
			if (state.backtracking > 0) { Memoize(input, 151, interface_type_list_StartIndex); }

		}
		DebugLocation(557, 20);
		} finally { DebugExitRule(GrammarFileName, "interface_type_list"); }
		return retval;

	}
	// $ANTLR end "interface_type_list"

	partial void EnterRule_class_body();
	partial void LeaveRule_class_body();
	// $ANTLR start "class_body"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:559:1: class_body : '{' ( class_member_declarations )? '}' ;
	[GrammarRule("class_body")]
	private Antlr3AstNode class_body()
	{
		EnterRule_class_body();
		EnterRule("class_body", 152);
		var retval = new Antlr3AstNode("class_body");
		
		retval.Start = (IToken)input.LT(1);
		int class_body_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal536 = default(IToken);
		IToken char_literal538 = default(IToken);
		Antlr3AstNode class_member_declarations537 = default(Antlr3AstNode);

		object char_literal536_tree = default(object);
		object char_literal538_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "class_body");
		DebugLocation(559, 40);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 152)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:559:11: ( '{' ( class_member_declarations )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:560:2: '{' ( class_member_declarations )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(560, 2);
			char_literal536=(IToken)Match(input,199,Follow._199_in_class_body3933); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal536_tree = (object)adaptor.Create(char_literal536, "char_literal536", retval);
			adaptor.AddChild(root_0, char_literal536_tree);
			}
			DebugLocation(560, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:560:8: ( class_member_declarations )?
			int alt150=2;
			try { DebugEnterSubRule(150);
			try { DebugEnterDecision(150, false);
			int LA150_1 = input.LA(1);

			if ((LA150_1==ENUM||LA150_1==IDENTIFIER||LA150_1==91||(LA150_1>=95 && LA150_1<=98)||(LA150_1>=100 && LA150_1<=102)||LA150_1==105||(LA150_1>=107 && LA150_1<=108)||LA150_1==111||(LA150_1>=113 && LA150_1<=114)||LA150_1==116||(LA150_1>=118 && LA150_1<=119)||(LA150_1>=121 && LA150_1<=122)||(LA150_1>=124 && LA150_1<=128)||LA150_1==131||LA150_1==134||(LA150_1>=137 && LA150_1<=138)||(LA150_1>=140 && LA150_1<=143)||(LA150_1>=145 && LA150_1<=146)||(LA150_1>=148 && LA150_1<=150)||(LA150_1>=152 && LA150_1<=154)||LA150_1==156||(LA150_1>=158 && LA150_1<=159)||(LA150_1>=161 && LA150_1<=167)||LA150_1==169||(LA150_1>=171 && LA150_1<=175)||(LA150_1>=178 && LA150_1<=180)||LA150_1==185||(LA150_1>=187 && LA150_1<=188)||(LA150_1>=190 && LA150_1<=196)||LA150_1==198||LA150_1==204))
			{
				alt150 = 1;
			}
			} finally { DebugExitDecision(150); }
			switch (alt150)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:560:8: class_member_declarations
				{
				DebugLocation(560, 8);
				PushFollow(Follow._class_member_declarations_in_class_body3937);
				class_member_declarations537=class_member_declarations();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, class_member_declarations537.Tree, class_member_declarations537, "class_member_declarations537", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(150); }

			DebugLocation(560, 37);
			char_literal538=(IToken)Match(input,203,Follow._203_in_class_body3942); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal538_tree = (object)adaptor.Create(char_literal538, "char_literal538", retval);
			adaptor.AddChild(root_0, char_literal538_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("class_body", 152);
			LeaveRule("class_body", 152);
			LeaveRule_class_body();
			if (state.backtracking > 0) { Memoize(input, 152, class_body_StartIndex); }

		}
		DebugLocation(560, 40);
		} finally { DebugExitRule(GrammarFileName, "class_body"); }
		return retval;

	}
	// $ANTLR end "class_body"

	partial void EnterRule_class_member_declarations();
	partial void LeaveRule_class_member_declarations();
	// $ANTLR start "class_member_declarations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:561:1: class_member_declarations : ( class_member_declaration )+ ;
	[GrammarRule("class_member_declarations")]
	private Antlr3AstNode class_member_declarations()
	{
		EnterRule_class_member_declarations();
		EnterRule("class_member_declarations", 153);
		var retval = new Antlr3AstNode("class_member_declarations");
		
		retval.Start = (IToken)input.LT(1);
		int class_member_declarations_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode class_member_declaration539 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "class_member_declarations");
		DebugLocation(561, 27);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 153)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:561:26: ( ( class_member_declaration )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:562:2: ( class_member_declaration )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(562, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:562:2: ( class_member_declaration )+
			int cnt151=0;
			try { DebugEnterSubRule(151);
			while (true)
			{
				int alt151=2;
				try { DebugEnterDecision(151, false);
				int LA151_1 = input.LA(1);

				if ((LA151_1==ENUM||LA151_1==IDENTIFIER||LA151_1==91||(LA151_1>=95 && LA151_1<=98)||(LA151_1>=100 && LA151_1<=102)||LA151_1==105||(LA151_1>=107 && LA151_1<=108)||LA151_1==111||(LA151_1>=113 && LA151_1<=114)||LA151_1==116||(LA151_1>=118 && LA151_1<=119)||(LA151_1>=121 && LA151_1<=122)||(LA151_1>=124 && LA151_1<=128)||LA151_1==131||LA151_1==134||(LA151_1>=137 && LA151_1<=138)||(LA151_1>=140 && LA151_1<=143)||(LA151_1>=145 && LA151_1<=146)||(LA151_1>=148 && LA151_1<=150)||(LA151_1>=152 && LA151_1<=154)||LA151_1==156||(LA151_1>=158 && LA151_1<=159)||(LA151_1>=161 && LA151_1<=167)||LA151_1==169||(LA151_1>=171 && LA151_1<=175)||(LA151_1>=178 && LA151_1<=180)||LA151_1==185||(LA151_1>=187 && LA151_1<=188)||(LA151_1>=190 && LA151_1<=196)||LA151_1==198||LA151_1==204))
				{
					alt151 = 1;
				}


				} finally { DebugExitDecision(151); }
				switch (alt151)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:562:2: class_member_declaration
					{
					DebugLocation(562, 2);
					PushFollow(Follow._class_member_declaration_in_class_member_declarations3950);
					class_member_declaration539=class_member_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, class_member_declaration539.Tree, class_member_declaration539, "class_member_declaration539", retval);

					}
					break;

				default:
					if (cnt151 >= 1)
						goto loop151;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee151 = new EarlyExitException( 151, input );
					DebugRecognitionException(eee151);
					throw eee151;
				}
				cnt151++;
			}
			loop151:
				;

			} finally { DebugExitSubRule(151); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("class_member_declarations", 153);
			LeaveRule("class_member_declarations", 153);
			LeaveRule_class_member_declarations();
			if (state.backtracking > 0) { Memoize(input, 153, class_member_declarations_StartIndex); }

		}
		DebugLocation(562, 27);
		} finally { DebugExitRule(GrammarFileName, "class_member_declarations"); }
		return retval;

	}
	// $ANTLR end "class_member_declarations"

	partial void EnterRule_constant_declaration();
	partial void LeaveRule_constant_declaration();
	// $ANTLR start "constant_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:565:1: constant_declaration : 'const' type constant_declarators ';' ;
	[GrammarRule("constant_declaration")]
	private Antlr3AstNode constant_declaration()
	{
		EnterRule_constant_declaration();
		EnterRule("constant_declaration", 154);
		var retval = new Antlr3AstNode("constant_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int constant_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal540 = default(IToken);
		IToken char_literal543 = default(IToken);
		Antlr3AstNode type541 = default(Antlr3AstNode);
		Antlr3AstNode constant_declarators542 = default(Antlr3AstNode);

		object string_literal540_tree = default(object);
		object char_literal543_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "constant_declaration");
		DebugLocation(565, 45);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 154)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:565:21: ( 'const' type constant_declarators ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:566:2: 'const' type constant_declarators ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(566, 2);
			string_literal540=(IToken)Match(input,114,Follow._114_in_constant_declaration3961); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal540_tree = (object)adaptor.Create(string_literal540, "string_literal540", retval);
			adaptor.AddChild(root_0, string_literal540_tree);
			}
			DebugLocation(566, 12);
			PushFollow(Follow._type_in_constant_declaration3965);
			type541=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type541.Tree, type541, "type541", retval);
			DebugLocation(566, 19);
			PushFollow(Follow._constant_declarators_in_constant_declaration3969);
			constant_declarators542=constant_declarators();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, constant_declarators542.Tree, constant_declarators542, "constant_declarators542", retval);
			DebugLocation(566, 42);
			char_literal543=(IToken)Match(input,SEMI,Follow._SEMI_in_constant_declaration3973); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal543_tree = (object)adaptor.Create(char_literal543, "char_literal543", retval);
			adaptor.AddChild(root_0, char_literal543_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constant_declaration", 154);
			LeaveRule("constant_declaration", 154);
			LeaveRule_constant_declaration();
			if (state.backtracking > 0) { Memoize(input, 154, constant_declaration_StartIndex); }

		}
		DebugLocation(566, 45);
		} finally { DebugExitRule(GrammarFileName, "constant_declaration"); }
		return retval;

	}
	// $ANTLR end "constant_declaration"

	partial void EnterRule_constant_declarators();
	partial void LeaveRule_constant_declarators();
	// $ANTLR start "constant_declarators"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:567:1: constant_declarators : constant_declarator ( ',' constant_declarator )* ;
	[GrammarRule("constant_declarators")]
	private Antlr3AstNode constant_declarators()
	{
		EnterRule_constant_declarators();
		EnterRule("constant_declarators", 155);
		var retval = new Antlr3AstNode("constant_declarators");
		
		retval.Start = (IToken)input.LT(1);
		int constant_declarators_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal545 = default(IToken);
		Antlr3AstNode constant_declarator544 = default(Antlr3AstNode);
		Antlr3AstNode constant_declarator546 = default(Antlr3AstNode);

		object char_literal545_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "constant_declarators");
		DebugLocation(567, 48);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 155)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:567:21: ( constant_declarator ( ',' constant_declarator )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:568:2: constant_declarator ( ',' constant_declarator )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(568, 2);
			PushFollow(Follow._constant_declarator_in_constant_declarators3981);
			constant_declarator544=constant_declarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, constant_declarator544.Tree, constant_declarator544, "constant_declarator544", retval);
			DebugLocation(568, 22);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:568:22: ( ',' constant_declarator )*
			try { DebugEnterSubRule(152);
			while (true)
			{
				int alt152=2;
				try { DebugEnterDecision(152, false);
				int LA152_1 = input.LA(1);

				if ((LA152_1==74))
				{
					alt152 = 1;
				}


				} finally { DebugExitDecision(152); }
				switch ( alt152 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:568:23: ',' constant_declarator
					{
					DebugLocation(568, 23);
					char_literal545=(IToken)Match(input,74,Follow._74_in_constant_declarators3984); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal545_tree = (object)adaptor.Create(char_literal545, "char_literal545", retval);
					adaptor.AddChild(root_0, char_literal545_tree);
					}
					DebugLocation(568, 27);
					PushFollow(Follow._constant_declarator_in_constant_declarators3986);
					constant_declarator546=constant_declarator();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, constant_declarator546.Tree, constant_declarator546, "constant_declarator546", retval);

					}
					break;

				default:
					goto loop152;
				}
			}

			loop152:
				;

			} finally { DebugExitSubRule(152); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constant_declarators", 155);
			LeaveRule("constant_declarators", 155);
			LeaveRule_constant_declarators();
			if (state.backtracking > 0) { Memoize(input, 155, constant_declarators_StartIndex); }

		}
		DebugLocation(568, 48);
		} finally { DebugExitRule(GrammarFileName, "constant_declarators"); }
		return retval;

	}
	// $ANTLR end "constant_declarators"

	partial void EnterRule_constant_declarator();
	partial void LeaveRule_constant_declarator();
	// $ANTLR start "constant_declarator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:569:1: constant_declarator : identifier ( '=' constant_expression )? ;
	[GrammarRule("constant_declarator")]
	private Antlr3AstNode constant_declarator()
	{
		EnterRule_constant_declarator();
		EnterRule("constant_declarator", 156);
		var retval = new Antlr3AstNode("constant_declarator");
		
		retval.Start = (IToken)input.LT(1);
		int constant_declarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal548 = default(IToken);
		Antlr3AstNode identifier547 = default(Antlr3AstNode);
		Antlr3AstNode constant_expression549 = default(Antlr3AstNode);

		object char_literal548_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "constant_declarator");
		DebugLocation(569, 43);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 156)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:569:20: ( identifier ( '=' constant_expression )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:570:2: identifier ( '=' constant_expression )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(570, 2);
			PushFollow(Follow._identifier_in_constant_declarator3996);
			identifier547=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier547.Tree, identifier547, "identifier547", retval);
			DebugLocation(570, 15);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:570:15: ( '=' constant_expression )?
			int alt153=2;
			try { DebugEnterSubRule(153);
			try { DebugEnterDecision(153, false);
			int LA153_1 = input.LA(1);

			if ((LA153_1==85))
			{
				alt153 = 1;
			}
			} finally { DebugExitDecision(153); }
			switch (alt153)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:570:16: '=' constant_expression
				{
				DebugLocation(570, 16);
				char_literal548=(IToken)Match(input,85,Follow._85_in_constant_declarator4001); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal548_tree = (object)adaptor.Create(char_literal548, "char_literal548", retval);
				adaptor.AddChild(root_0, char_literal548_tree);
				}
				DebugLocation(570, 22);
				PushFollow(Follow._constant_expression_in_constant_declarator4005);
				constant_expression549=constant_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constant_expression549.Tree, constant_expression549, "constant_expression549", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(153); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constant_declarator", 156);
			LeaveRule("constant_declarator", 156);
			LeaveRule_constant_declarator();
			if (state.backtracking > 0) { Memoize(input, 156, constant_declarator_StartIndex); }

		}
		DebugLocation(570, 43);
		} finally { DebugExitRule(GrammarFileName, "constant_declarator"); }
		return retval;

	}
	// $ANTLR end "constant_declarator"

	partial void EnterRule_constant_expression();
	partial void LeaveRule_constant_expression();
	// $ANTLR start "constant_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:571:1: constant_expression : expression ;
	[GrammarRule("constant_expression")]
	private Antlr3AstNode constant_expression()
	{
		EnterRule_constant_expression();
		EnterRule("constant_expression", 157);
		var retval = new Antlr3AstNode("constant_expression");
		
		retval.Start = (IToken)input.LT(1);
		int constant_expression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode expression550 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "constant_expression");
		DebugLocation(571, 11);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 157)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:571:20: ( expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:572:2: expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(572, 2);
			PushFollow(Follow._expression_in_constant_expression4015);
			expression550=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression550.Tree, expression550, "expression550", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constant_expression", 157);
			LeaveRule("constant_expression", 157);
			LeaveRule_constant_expression();
			if (state.backtracking > 0) { Memoize(input, 157, constant_expression_StartIndex); }

		}
		DebugLocation(572, 11);
		} finally { DebugExitRule(GrammarFileName, "constant_expression"); }
		return retval;

	}
	// $ANTLR end "constant_expression"

	partial void EnterRule_field_declaration();
	partial void LeaveRule_field_declaration();
	// $ANTLR start "field_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:575:1: field_declaration : variable_declarators ';' ;
	[GrammarRule("field_declaration")]
	private Antlr3AstNode field_declaration()
	{
		EnterRule_field_declaration();
		EnterRule("field_declaration", 158);
		var retval = new Antlr3AstNode("field_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int field_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal552 = default(IToken);
		Antlr3AstNode variable_declarators551 = default(Antlr3AstNode);

		object char_literal552_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "field_declaration");
		DebugLocation(575, 28);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 158)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:575:18: ( variable_declarators ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:576:2: variable_declarators ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(576, 2);
			PushFollow(Follow._variable_declarators_in_field_declaration4024);
			variable_declarators551=variable_declarators();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variable_declarators551.Tree, variable_declarators551, "variable_declarators551", retval);
			DebugLocation(576, 25);
			char_literal552=(IToken)Match(input,SEMI,Follow._SEMI_in_field_declaration4028); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal552_tree = (object)adaptor.Create(char_literal552, "char_literal552", retval);
			adaptor.AddChild(root_0, char_literal552_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("field_declaration", 158);
			LeaveRule("field_declaration", 158);
			LeaveRule_field_declaration();
			if (state.backtracking > 0) { Memoize(input, 158, field_declaration_StartIndex); }

		}
		DebugLocation(576, 28);
		} finally { DebugExitRule(GrammarFileName, "field_declaration"); }
		return retval;

	}
	// $ANTLR end "field_declaration"

	partial void EnterRule_variable_declarators();
	partial void LeaveRule_variable_declarators();
	// $ANTLR start "variable_declarators"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:577:1: variable_declarators : variable_declarator ( ',' variable_declarator )* ;
	[GrammarRule("variable_declarators")]
	private Antlr3AstNode variable_declarators()
	{
		EnterRule_variable_declarators();
		EnterRule("variable_declarators", 159);
		var retval = new Antlr3AstNode("variable_declarators");
		
		retval.Start = (IToken)input.LT(1);
		int variable_declarators_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal554 = default(IToken);
		Antlr3AstNode variable_declarator553 = default(Antlr3AstNode);
		Antlr3AstNode variable_declarator555 = default(Antlr3AstNode);

		object char_literal554_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "variable_declarators");
		DebugLocation(577, 50);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 159)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:577:21: ( variable_declarator ( ',' variable_declarator )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:578:2: variable_declarator ( ',' variable_declarator )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(578, 2);
			PushFollow(Follow._variable_declarator_in_variable_declarators4036);
			variable_declarator553=variable_declarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variable_declarator553.Tree, variable_declarator553, "variable_declarator553", retval);
			DebugLocation(578, 22);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:578:22: ( ',' variable_declarator )*
			try { DebugEnterSubRule(154);
			while (true)
			{
				int alt154=2;
				try { DebugEnterDecision(154, false);
				int LA154_1 = input.LA(1);

				if ((LA154_1==74))
				{
					alt154 = 1;
				}


				} finally { DebugExitDecision(154); }
				switch ( alt154 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:578:23: ',' variable_declarator
					{
					DebugLocation(578, 23);
					char_literal554=(IToken)Match(input,74,Follow._74_in_variable_declarators4039); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal554_tree = (object)adaptor.Create(char_literal554, "char_literal554", retval);
					adaptor.AddChild(root_0, char_literal554_tree);
					}
					DebugLocation(578, 29);
					PushFollow(Follow._variable_declarator_in_variable_declarators4043);
					variable_declarator555=variable_declarator();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, variable_declarator555.Tree, variable_declarator555, "variable_declarator555", retval);

					}
					break;

				default:
					goto loop154;
				}
			}

			loop154:
				;

			} finally { DebugExitSubRule(154); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variable_declarators", 159);
			LeaveRule("variable_declarators", 159);
			LeaveRule_variable_declarators();
			if (state.backtracking > 0) { Memoize(input, 159, variable_declarators_StartIndex); }

		}
		DebugLocation(578, 50);
		} finally { DebugExitRule(GrammarFileName, "variable_declarators"); }
		return retval;

	}
	// $ANTLR end "variable_declarators"

	partial void EnterRule_variable_declarator();
	partial void LeaveRule_variable_declarator();
	// $ANTLR start "variable_declarator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:579:1: variable_declarator : type_name ( '=' variable_initializer )? ;
	[GrammarRule("variable_declarator")]
	private Antlr3AstNode variable_declarator()
	{
		EnterRule_variable_declarator();
		EnterRule("variable_declarator", 160);
		var retval = new Antlr3AstNode("variable_declarator");
		
		retval.Start = (IToken)input.LT(1);
		int variable_declarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal557 = default(IToken);
		Antlr3AstNode type_name556 = default(Antlr3AstNode);
		Antlr3AstNode variable_initializer558 = default(Antlr3AstNode);

		object char_literal557_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "variable_declarator");
		DebugLocation(579, 41);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 160)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:579:20: ( type_name ( '=' variable_initializer )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:580:2: type_name ( '=' variable_initializer )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(580, 2);
			PushFollow(Follow._type_name_in_variable_declarator4053);
			type_name556=type_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_name556.Tree, type_name556, "type_name556", retval);
			DebugLocation(580, 12);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:580:12: ( '=' variable_initializer )?
			int alt155=2;
			try { DebugEnterSubRule(155);
			try { DebugEnterDecision(155, false);
			int LA155_1 = input.LA(1);

			if ((LA155_1==85))
			{
				alt155 = 1;
			}
			} finally { DebugExitDecision(155); }
			switch (alt155)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:580:13: '=' variable_initializer
				{
				DebugLocation(580, 13);
				char_literal557=(IToken)Match(input,85,Follow._85_in_variable_declarator4056); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal557_tree = (object)adaptor.Create(char_literal557, "char_literal557", retval);
				adaptor.AddChild(root_0, char_literal557_tree);
				}
				DebugLocation(580, 19);
				PushFollow(Follow._variable_initializer_in_variable_declarator4060);
				variable_initializer558=variable_initializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variable_initializer558.Tree, variable_initializer558, "variable_initializer558", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(155); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variable_declarator", 160);
			LeaveRule("variable_declarator", 160);
			LeaveRule_variable_declarator();
			if (state.backtracking > 0) { Memoize(input, 160, variable_declarator_StartIndex); }

		}
		DebugLocation(580, 41);
		} finally { DebugExitRule(GrammarFileName, "variable_declarator"); }
		return retval;

	}
	// $ANTLR end "variable_declarator"

	partial void EnterRule_method_declaration();
	partial void LeaveRule_method_declaration();
	// $ANTLR start "method_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:583:1: method_declaration : method_header method_body ;
	[GrammarRule("method_declaration")]
	private Antlr3AstNode method_declaration()
	{
		EnterRule_method_declaration();
		EnterRule("method_declaration", 161);
		var retval = new Antlr3AstNode("method_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int method_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode method_header559 = default(Antlr3AstNode);
		Antlr3AstNode method_body560 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "method_declaration");
		DebugLocation(583, 29);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 161)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:583:19: ( method_header method_body )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:584:2: method_header method_body
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(584, 2);
			PushFollow(Follow._method_header_in_method_declaration4074);
			method_header559=method_header();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, method_header559.Tree, method_header559, "method_header559", retval);
			DebugLocation(584, 18);
			PushFollow(Follow._method_body_in_method_declaration4078);
			method_body560=method_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, method_body560.Tree, method_body560, "method_body560", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("method_declaration", 161);
			LeaveRule("method_declaration", 161);
			LeaveRule_method_declaration();
			if (state.backtracking > 0) { Memoize(input, 161, method_declaration_StartIndex); }

		}
		DebugLocation(584, 29);
		} finally { DebugExitRule(GrammarFileName, "method_declaration"); }
		return retval;

	}
	// $ANTLR end "method_declaration"

	partial void EnterRule_method_header();
	partial void LeaveRule_method_header();
	// $ANTLR start "method_header"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:585:1: method_header : member_name '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ;
	[GrammarRule("method_header")]
	private Antlr3AstNode method_header()
	{
		EnterRule_method_header();
		EnterRule("method_header", 162);
		var retval = new Antlr3AstNode("method_header");
		
		retval.Start = (IToken)input.LT(1);
		int method_header_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal562 = default(IToken);
		IToken char_literal564 = default(IToken);
		Antlr3AstNode member_name561 = default(Antlr3AstNode);
		Antlr3AstNode formal_parameter_list563 = default(Antlr3AstNode);
		Antlr3AstNode type_parameter_constraints_clauses565 = default(Antlr3AstNode);

		object char_literal562_tree = default(object);
		object char_literal564_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "method_header");
		DebugLocation(585, 87);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 162)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:585:14: ( member_name '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:586:2: member_name '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(586, 2);
			PushFollow(Follow._member_name_in_method_header4086);
			member_name561=member_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, member_name561.Tree, member_name561, "member_name561", retval);
			DebugLocation(586, 15);
			char_literal562=(IToken)Match(input,68,Follow._68_in_method_header4089); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal562_tree = (object)adaptor.Create(char_literal562, "char_literal562", retval);
			adaptor.AddChild(root_0, char_literal562_tree);
			}
			DebugLocation(586, 21);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:586:21: ( formal_parameter_list )?
			int alt156=2;
			try { DebugEnterSubRule(156);
			try { DebugEnterDecision(156, false);
			int LA156_1 = input.LA(1);

			if ((LA156_1==IDENTIFIER||LA156_1==91||LA156_1==95||(LA156_1>=97 && LA156_1<=98)||(LA156_1>=100 && LA156_1<=101)||LA156_1==105||(LA156_1>=107 && LA156_1<=108)||LA156_1==111||LA156_1==116||LA156_1==119||(LA156_1>=121 && LA156_1<=122)||LA156_1==124||LA156_1==128||LA156_1==131||LA156_1==134||LA156_1==137||LA156_1==140||LA156_1==143||(LA156_1>=145 && LA156_1<=146)||(LA156_1>=148 && LA156_1<=150)||(LA156_1>=153 && LA156_1<=154)||(LA156_1>=156 && LA156_1<=157)||(LA156_1>=159 && LA156_1<=160)||LA156_1==162||LA156_1==164||(LA156_1>=168 && LA156_1<=169)||LA156_1==171||(LA156_1>=173 && LA156_1<=175)||LA156_1==179||LA156_1==182||LA156_1==185||(LA156_1>=187 && LA156_1<=188)||(LA156_1>=191 && LA156_1<=192)||LA156_1==194||LA156_1==196||LA156_1==198))
			{
				alt156 = 1;
			}
			} finally { DebugExitDecision(156); }
			switch (alt156)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:586:21: formal_parameter_list
				{
				DebugLocation(586, 21);
				PushFollow(Follow._formal_parameter_list_in_method_header4093);
				formal_parameter_list563=formal_parameter_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, formal_parameter_list563.Tree, formal_parameter_list563, "formal_parameter_list563", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(156); }

			DebugLocation(586, 46);
			char_literal564=(IToken)Match(input,RPAREN,Follow._RPAREN_in_method_header4098); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal564_tree = (object)adaptor.Create(char_literal564, "char_literal564", retval);
			adaptor.AddChild(root_0, char_literal564_tree);
			}
			DebugLocation(586, 52);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:586:52: ( type_parameter_constraints_clauses )?
			int alt157=2;
			try { DebugEnterSubRule(157);
			try { DebugEnterDecision(157, false);
			int LA157_1 = input.LA(1);

			if ((LA157_1==196))
			{
				alt157 = 1;
			}
			} finally { DebugExitDecision(157); }
			switch (alt157)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:586:52: type_parameter_constraints_clauses
				{
				DebugLocation(586, 52);
				PushFollow(Follow._type_parameter_constraints_clauses_in_method_header4102);
				type_parameter_constraints_clauses565=type_parameter_constraints_clauses();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type_parameter_constraints_clauses565.Tree, type_parameter_constraints_clauses565, "type_parameter_constraints_clauses565", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(157); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("method_header", 162);
			LeaveRule("method_header", 162);
			LeaveRule_method_header();
			if (state.backtracking > 0) { Memoize(input, 162, method_header_StartIndex); }

		}
		DebugLocation(586, 87);
		} finally { DebugExitRule(GrammarFileName, "method_header"); }
		return retval;

	}
	// $ANTLR end "method_header"

	partial void EnterRule_method_body();
	partial void LeaveRule_method_body();
	// $ANTLR start "method_body"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:587:1: method_body : block ;
	[GrammarRule("method_body")]
	private Antlr3AstNode method_body()
	{
		EnterRule_method_body();
		EnterRule("method_body", 163);
		var retval = new Antlr3AstNode("method_body");
		
		retval.Start = (IToken)input.LT(1);
		int method_body_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode block566 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "method_body");
		DebugLocation(587, 7);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 163)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:587:12: ( block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:588:2: block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(588, 2);
			PushFollow(Follow._block_in_method_body4111);
			block566=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block566.Tree, block566, "block566", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("method_body", 163);
			LeaveRule("method_body", 163);
			LeaveRule_method_body();
			if (state.backtracking > 0) { Memoize(input, 163, method_body_StartIndex); }

		}
		DebugLocation(588, 7);
		} finally { DebugExitRule(GrammarFileName, "method_body"); }
		return retval;

	}
	// $ANTLR end "method_body"

	partial void EnterRule_member_name();
	partial void LeaveRule_member_name();
	// $ANTLR start "member_name"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:589:1: member_name : qid ;
	[GrammarRule("member_name")]
	private Antlr3AstNode member_name()
	{
		EnterRule_member_name();
		EnterRule("member_name", 164);
		var retval = new Antlr3AstNode("member_name");
		
		retval.Start = (IToken)input.LT(1);
		int member_name_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode qid567 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "member_name");
		DebugLocation(589, 5);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 164)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:589:12: ( qid )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:590:2: qid
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(590, 2);
			PushFollow(Follow._qid_in_member_name4119);
			qid567=qid();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, qid567.Tree, qid567, "qid567", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("member_name", 164);
			LeaveRule("member_name", 164);
			LeaveRule_member_name();
			if (state.backtracking > 0) { Memoize(input, 164, member_name_StartIndex); }

		}
		DebugLocation(590, 5);
		} finally { DebugExitRule(GrammarFileName, "member_name"); }
		return retval;

	}
	// $ANTLR end "member_name"

	partial void EnterRule_property_declaration();
	partial void LeaveRule_property_declaration();
	// $ANTLR start "property_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:593:1: property_declaration : member_name '{' accessor_declarations '}' ;
	[GrammarRule("property_declaration")]
	private Antlr3AstNode property_declaration()
	{
		EnterRule_property_declaration();
		EnterRule("property_declaration", 165);
		var retval = new Antlr3AstNode("property_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int property_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal569 = default(IToken);
		IToken char_literal571 = default(IToken);
		Antlr3AstNode member_name568 = default(Antlr3AstNode);
		Antlr3AstNode accessor_declarations570 = default(Antlr3AstNode);

		object char_literal569_tree = default(object);
		object char_literal571_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "property_declaration");
		DebugLocation(593, 49);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 165)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:593:21: ( member_name '{' accessor_declarations '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:594:2: member_name '{' accessor_declarations '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(594, 2);
			PushFollow(Follow._member_name_in_property_declaration4131);
			member_name568=member_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, member_name568.Tree, member_name568, "member_name568", retval);
			DebugLocation(594, 16);
			char_literal569=(IToken)Match(input,199,Follow._199_in_property_declaration4135); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal569_tree = (object)adaptor.Create(char_literal569, "char_literal569", retval);
			adaptor.AddChild(root_0, char_literal569_tree);
			}
			DebugLocation(594, 22);
			PushFollow(Follow._accessor_declarations_in_property_declaration4139);
			accessor_declarations570=accessor_declarations();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, accessor_declarations570.Tree, accessor_declarations570, "accessor_declarations570", retval);
			DebugLocation(594, 46);
			char_literal571=(IToken)Match(input,203,Follow._203_in_property_declaration4143); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal571_tree = (object)adaptor.Create(char_literal571, "char_literal571", retval);
			adaptor.AddChild(root_0, char_literal571_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("property_declaration", 165);
			LeaveRule("property_declaration", 165);
			LeaveRule_property_declaration();
			if (state.backtracking > 0) { Memoize(input, 165, property_declaration_StartIndex); }

		}
		DebugLocation(594, 49);
		} finally { DebugExitRule(GrammarFileName, "property_declaration"); }
		return retval;

	}
	// $ANTLR end "property_declaration"

	partial void EnterRule_accessor_declarations();
	partial void LeaveRule_accessor_declarations();
	// $ANTLR start "accessor_declarations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:595:1: accessor_declarations : ( attributes )? ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? ) ;
	[GrammarRule("accessor_declarations")]
	private Antlr3AstNode accessor_declarations()
	{
		EnterRule_accessor_declarations();
		EnterRule("accessor_declarations", 166);
		var retval = new Antlr3AstNode("accessor_declarations");
		
		retval.Start = (IToken)input.LT(1);
		int accessor_declarations_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode attributes572 = default(Antlr3AstNode);
		Antlr3AstNode get_accessor_declaration573 = default(Antlr3AstNode);
		Antlr3AstNode attributes574 = default(Antlr3AstNode);
		Antlr3AstNode set_accessor_declaration575 = default(Antlr3AstNode);
		Antlr3AstNode set_accessor_declaration576 = default(Antlr3AstNode);
		Antlr3AstNode attributes577 = default(Antlr3AstNode);
		Antlr3AstNode get_accessor_declaration578 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "accessor_declarations");
		DebugLocation(595, 72);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 166)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:595:22: ( ( attributes )? ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:596:2: ( attributes )? ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(596, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:596:2: ( attributes )?
			int alt158=2;
			try { DebugEnterSubRule(158);
			try { DebugEnterDecision(158, false);
			int LA158_1 = input.LA(1);

			if ((LA158_1==91))
			{
				alt158 = 1;
			}
			} finally { DebugExitDecision(158); }
			switch (alt158)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:596:2: attributes
				{
				DebugLocation(596, 2);
				PushFollow(Follow._attributes_in_accessor_declarations4151);
				attributes572=attributes();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, attributes572.Tree, attributes572, "attributes572", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(158); }

			DebugLocation(597, 3);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:597:3: ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? )
			int alt163=2;
			try { DebugEnterSubRule(163);
			try { DebugEnterDecision(163, false);
			switch (input.LA(1))
			{
			case 142:
			case 163:
			case 165:
			case 166:
				{
				int LA163_2 = input.LA(2);

				if ((LA163_2==135))
				{
					alt163 = 1;
				}
				else if ((LA163_2==174))
				{
					alt163 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 163, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 135:
				{
				alt163 = 1;
				}
				break;
			case 174:
				{
				alt163 = 2;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 163, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(163); }
			switch (alt163)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:597:4: get_accessor_declaration ( attributes )? ( set_accessor_declaration )?
				{
				DebugLocation(597, 4);
				PushFollow(Follow._get_accessor_declaration_in_accessor_declarations4157);
				get_accessor_declaration573=get_accessor_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, get_accessor_declaration573.Tree, get_accessor_declaration573, "get_accessor_declaration573", retval);
				DebugLocation(597, 31);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:597:31: ( attributes )?
				int alt159=2;
				try { DebugEnterSubRule(159);
				try { DebugEnterDecision(159, false);
				int LA159_1 = input.LA(1);

				if ((LA159_1==91))
				{
					alt159 = 1;
				}
				} finally { DebugExitDecision(159); }
				switch (alt159)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:597:31: attributes
					{
					DebugLocation(597, 31);
					PushFollow(Follow._attributes_in_accessor_declarations4161);
					attributes574=attributes();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, attributes574.Tree, attributes574, "attributes574", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(159); }

				DebugLocation(597, 45);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:597:45: ( set_accessor_declaration )?
				int alt160=2;
				try { DebugEnterSubRule(160);
				try { DebugEnterDecision(160, false);
				int LA160_1 = input.LA(1);

				if ((LA160_1==142||LA160_1==163||(LA160_1>=165 && LA160_1<=166)||LA160_1==174))
				{
					alt160 = 1;
				}
				} finally { DebugExitDecision(160); }
				switch (alt160)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:597:45: set_accessor_declaration
					{
					DebugLocation(597, 45);
					PushFollow(Follow._set_accessor_declaration_in_accessor_declarations4166);
					set_accessor_declaration575=set_accessor_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, set_accessor_declaration575.Tree, set_accessor_declaration575, "set_accessor_declaration575", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(160); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:598:5: set_accessor_declaration ( attributes )? ( get_accessor_declaration )?
				{
				DebugLocation(598, 5);
				PushFollow(Follow._set_accessor_declaration_in_accessor_declarations4173);
				set_accessor_declaration576=set_accessor_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, set_accessor_declaration576.Tree, set_accessor_declaration576, "set_accessor_declaration576", retval);
				DebugLocation(598, 32);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:598:32: ( attributes )?
				int alt161=2;
				try { DebugEnterSubRule(161);
				try { DebugEnterDecision(161, false);
				int LA161_1 = input.LA(1);

				if ((LA161_1==91))
				{
					alt161 = 1;
				}
				} finally { DebugExitDecision(161); }
				switch (alt161)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:598:32: attributes
					{
					DebugLocation(598, 32);
					PushFollow(Follow._attributes_in_accessor_declarations4177);
					attributes577=attributes();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, attributes577.Tree, attributes577, "attributes577", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(161); }

				DebugLocation(598, 46);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:598:46: ( get_accessor_declaration )?
				int alt162=2;
				try { DebugEnterSubRule(162);
				try { DebugEnterDecision(162, false);
				int LA162_1 = input.LA(1);

				if ((LA162_1==135||LA162_1==142||LA162_1==163||(LA162_1>=165 && LA162_1<=166)))
				{
					alt162 = 1;
				}
				} finally { DebugExitDecision(162); }
				switch (alt162)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:598:46: get_accessor_declaration
					{
					DebugLocation(598, 46);
					PushFollow(Follow._get_accessor_declaration_in_accessor_declarations4182);
					get_accessor_declaration578=get_accessor_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, get_accessor_declaration578.Tree, get_accessor_declaration578, "get_accessor_declaration578", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(162); }


				}
				break;

			}
			} finally { DebugExitSubRule(163); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("accessor_declarations", 166);
			LeaveRule("accessor_declarations", 166);
			LeaveRule_accessor_declarations();
			if (state.backtracking > 0) { Memoize(input, 166, accessor_declarations_StartIndex); }

		}
		DebugLocation(598, 72);
		} finally { DebugExitRule(GrammarFileName, "accessor_declarations"); }
		return retval;

	}
	// $ANTLR end "accessor_declarations"

	partial void EnterRule_get_accessor_declaration();
	partial void LeaveRule_get_accessor_declaration();
	// $ANTLR start "get_accessor_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:599:1: get_accessor_declaration : ( accessor_modifier )? 'get' accessor_body ;
	[GrammarRule("get_accessor_declaration")]
	private Antlr3AstNode get_accessor_declaration()
	{
		EnterRule_get_accessor_declaration();
		EnterRule("get_accessor_declaration", 167);
		var retval = new Antlr3AstNode("get_accessor_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int get_accessor_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal580 = default(IToken);
		Antlr3AstNode accessor_modifier579 = default(Antlr3AstNode);
		Antlr3AstNode accessor_body581 = default(Antlr3AstNode);

		object string_literal580_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "get_accessor_declaration");
		DebugLocation(599, 44);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 167)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:599:25: ( ( accessor_modifier )? 'get' accessor_body )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:600:2: ( accessor_modifier )? 'get' accessor_body
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(600, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:600:2: ( accessor_modifier )?
			int alt164=2;
			try { DebugEnterSubRule(164);
			try { DebugEnterDecision(164, false);
			int LA164_1 = input.LA(1);

			if ((LA164_1==142||LA164_1==163||(LA164_1>=165 && LA164_1<=166)))
			{
				alt164 = 1;
			}
			} finally { DebugExitDecision(164); }
			switch (alt164)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:600:2: accessor_modifier
				{
				DebugLocation(600, 2);
				PushFollow(Follow._accessor_modifier_in_get_accessor_declaration4192);
				accessor_modifier579=accessor_modifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, accessor_modifier579.Tree, accessor_modifier579, "accessor_modifier579", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(164); }

			DebugLocation(600, 23);
			string_literal580=(IToken)Match(input,135,Follow._135_in_get_accessor_declaration4197); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal580_tree = (object)adaptor.Create(string_literal580, "string_literal580", retval);
			adaptor.AddChild(root_0, string_literal580_tree);
			}
			DebugLocation(600, 31);
			PushFollow(Follow._accessor_body_in_get_accessor_declaration4201);
			accessor_body581=accessor_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, accessor_body581.Tree, accessor_body581, "accessor_body581", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("get_accessor_declaration", 167);
			LeaveRule("get_accessor_declaration", 167);
			LeaveRule_get_accessor_declaration();
			if (state.backtracking > 0) { Memoize(input, 167, get_accessor_declaration_StartIndex); }

		}
		DebugLocation(600, 44);
		} finally { DebugExitRule(GrammarFileName, "get_accessor_declaration"); }
		return retval;

	}
	// $ANTLR end "get_accessor_declaration"

	partial void EnterRule_set_accessor_declaration();
	partial void LeaveRule_set_accessor_declaration();
	// $ANTLR start "set_accessor_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:601:1: set_accessor_declaration : ( accessor_modifier )? 'set' accessor_body ;
	[GrammarRule("set_accessor_declaration")]
	private Antlr3AstNode set_accessor_declaration()
	{
		EnterRule_set_accessor_declaration();
		EnterRule("set_accessor_declaration", 168);
		var retval = new Antlr3AstNode("set_accessor_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int set_accessor_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal583 = default(IToken);
		Antlr3AstNode accessor_modifier582 = default(Antlr3AstNode);
		Antlr3AstNode accessor_body584 = default(Antlr3AstNode);

		object string_literal583_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "set_accessor_declaration");
		DebugLocation(601, 44);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 168)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:601:25: ( ( accessor_modifier )? 'set' accessor_body )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:602:2: ( accessor_modifier )? 'set' accessor_body
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(602, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:602:2: ( accessor_modifier )?
			int alt165=2;
			try { DebugEnterSubRule(165);
			try { DebugEnterDecision(165, false);
			int LA165_1 = input.LA(1);

			if ((LA165_1==142||LA165_1==163||(LA165_1>=165 && LA165_1<=166)))
			{
				alt165 = 1;
			}
			} finally { DebugExitDecision(165); }
			switch (alt165)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:602:2: accessor_modifier
				{
				DebugLocation(602, 2);
				PushFollow(Follow._accessor_modifier_in_set_accessor_declaration4209);
				accessor_modifier582=accessor_modifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, accessor_modifier582.Tree, accessor_modifier582, "accessor_modifier582", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(165); }

			DebugLocation(602, 23);
			string_literal583=(IToken)Match(input,174,Follow._174_in_set_accessor_declaration4214); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal583_tree = (object)adaptor.Create(string_literal583, "string_literal583", retval);
			adaptor.AddChild(root_0, string_literal583_tree);
			}
			DebugLocation(602, 31);
			PushFollow(Follow._accessor_body_in_set_accessor_declaration4218);
			accessor_body584=accessor_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, accessor_body584.Tree, accessor_body584, "accessor_body584", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("set_accessor_declaration", 168);
			LeaveRule("set_accessor_declaration", 168);
			LeaveRule_set_accessor_declaration();
			if (state.backtracking > 0) { Memoize(input, 168, set_accessor_declaration_StartIndex); }

		}
		DebugLocation(602, 44);
		} finally { DebugExitRule(GrammarFileName, "set_accessor_declaration"); }
		return retval;

	}
	// $ANTLR end "set_accessor_declaration"

	partial void EnterRule_accessor_modifier();
	partial void LeaveRule_accessor_modifier();
	// $ANTLR start "accessor_modifier"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:603:1: accessor_modifier : ( 'public' | 'protected' | 'private' | 'internal' );
	[GrammarRule("accessor_modifier")]
	private Antlr3AstNode accessor_modifier()
	{
		EnterRule_accessor_modifier();
		EnterRule("accessor_modifier", 169);
		var retval = new Antlr3AstNode("accessor_modifier");
		
		retval.Start = (IToken)input.LT(1);
		int accessor_modifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set585 = default(IToken);

		object set585_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "accessor_modifier");
		DebugLocation(603, 49);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 169)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:603:18: ( 'public' | 'protected' | 'private' | 'internal' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(603, 18);

			set585=(IToken)input.LT(1);
			if (input.LA(1)==142||input.LA(1)==163||(input.LA(1)>=165 && input.LA(1)<=166))
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set585, "set585", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("accessor_modifier", 169);
			LeaveRule("accessor_modifier", 169);
			LeaveRule_accessor_modifier();
			if (state.backtracking > 0) { Memoize(input, 169, accessor_modifier_StartIndex); }

		}
		DebugLocation(604, 49);
		} finally { DebugExitRule(GrammarFileName, "accessor_modifier"); }
		return retval;

	}
	// $ANTLR end "accessor_modifier"

	partial void EnterRule_accessor_body();
	partial void LeaveRule_accessor_body();
	// $ANTLR start "accessor_body"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:605:1: accessor_body : block ;
	[GrammarRule("accessor_body")]
	private Antlr3AstNode accessor_body()
	{
		EnterRule_accessor_body();
		EnterRule("accessor_body", 170);
		var retval = new Antlr3AstNode("accessor_body");
		
		retval.Start = (IToken)input.LT(1);
		int accessor_body_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode block586 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "accessor_body");
		DebugLocation(605, 7);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 170)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:605:14: ( block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:606:2: block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(606, 2);
			PushFollow(Follow._block_in_accessor_body4246);
			block586=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block586.Tree, block586, "block586", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("accessor_body", 170);
			LeaveRule("accessor_body", 170);
			LeaveRule_accessor_body();
			if (state.backtracking > 0) { Memoize(input, 170, accessor_body_StartIndex); }

		}
		DebugLocation(606, 7);
		} finally { DebugExitRule(GrammarFileName, "accessor_body"); }
		return retval;

	}
	// $ANTLR end "accessor_body"

	partial void EnterRule_event_declaration();
	partial void LeaveRule_event_declaration();
	// $ANTLR start "event_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:609:1: event_declaration : 'event' type ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators ';' ) ;
	[GrammarRule("event_declaration")]
	private Antlr3AstNode event_declaration()
	{
		EnterRule_event_declaration();
		EnterRule("event_declaration", 171);
		var retval = new Antlr3AstNode("event_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int event_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal587 = default(IToken);
		IToken char_literal590 = default(IToken);
		IToken char_literal592 = default(IToken);
		IToken char_literal594 = default(IToken);
		Antlr3AstNode type588 = default(Antlr3AstNode);
		Antlr3AstNode member_name589 = default(Antlr3AstNode);
		Antlr3AstNode event_accessor_declarations591 = default(Antlr3AstNode);
		Antlr3AstNode variable_declarators593 = default(Antlr3AstNode);

		object string_literal587_tree = default(object);
		object char_literal590_tree = default(object);
		object char_literal592_tree = default(object);
		object char_literal594_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "event_declaration");
		DebugLocation(609, 2);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 171)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:609:18: ( 'event' type ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators ';' ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:610:2: 'event' type ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators ';' )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(610, 2);
			string_literal587=(IToken)Match(input,125,Follow._125_in_event_declaration4256); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal587_tree = (object)adaptor.Create(string_literal587, "string_literal587", retval);
			adaptor.AddChild(root_0, string_literal587_tree);
			}
			DebugLocation(610, 12);
			PushFollow(Follow._type_in_event_declaration4260);
			type588=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type588.Tree, type588, "type588", retval);
			DebugLocation(611, 3);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:611:3: ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators ';' )
			int alt166=2;
			try { DebugEnterSubRule(166);
			try { DebugEnterDecision(166, false);
			int LA166_1 = input.LA(1);

			if ((LA166_1==105||LA166_1==108||LA166_1==111||LA166_1==116||LA166_1==121||LA166_1==131||LA166_1==140||LA166_1==148||LA166_1==153||LA166_1==171||LA166_1==175||LA166_1==179||(LA166_1>=187 && LA166_1<=188)||LA166_1==191) && (EvaluatePredicate(synpred22_cs_fragment)))
			{
				alt166 = 1;
			}
			else if ((LA166_1==IDENTIFIER||LA166_1==95||(LA166_1>=97 && LA166_1<=98)||(LA166_1>=100 && LA166_1<=101)||LA166_1==107||LA166_1==119||LA166_1==122||LA166_1==124||LA166_1==128||LA166_1==134||LA166_1==137||LA166_1==143||(LA166_1>=145 && LA166_1<=146)||(LA166_1>=149 && LA166_1<=150)||LA166_1==154||LA166_1==156||LA166_1==159||LA166_1==162||LA166_1==164||LA166_1==169||(LA166_1>=173 && LA166_1<=174)||LA166_1==185||LA166_1==192||LA166_1==196||LA166_1==198))
			{
				int LA166_2 = input.LA(2);

				if ((EvaluatePredicate(synpred22_cs_fragment)))
				{
					alt166 = 1;
				}
				else if ((true))
				{
					alt166 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 166, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA166_1==Character_literal||LA166_1==FALSE||LA166_1==Hex_number||(LA166_1>=NULL && LA166_1<=NUMBER)||LA166_1==Real_literal||LA166_1==STRINGLITERAL||LA166_1==TRUE||LA166_1==Verbatim_string_literal) && (EvaluatePredicate(synpred22_cs_fragment)))
			{
				alt166 = 1;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 166, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(166); }
			switch (alt166)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:611:4: ( member_name '{' )=> member_name '{' event_accessor_declarations '}'
				{
				DebugLocation(611, 27);
				PushFollow(Follow._member_name_in_event_declaration4275);
				member_name589=member_name();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, member_name589.Tree, member_name589, "member_name589", retval);
				DebugLocation(611, 41);
				char_literal590=(IToken)Match(input,199,Follow._199_in_event_declaration4279); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal590_tree = (object)adaptor.Create(char_literal590, "char_literal590", retval);
				adaptor.AddChild(root_0, char_literal590_tree);
				}
				DebugLocation(611, 47);
				PushFollow(Follow._event_accessor_declarations_in_event_declaration4283);
				event_accessor_declarations591=event_accessor_declarations();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, event_accessor_declarations591.Tree, event_accessor_declarations591, "event_accessor_declarations591", retval);
				DebugLocation(611, 77);
				char_literal592=(IToken)Match(input,203,Follow._203_in_event_declaration4287); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal592_tree = (object)adaptor.Create(char_literal592, "char_literal592", retval);
				adaptor.AddChild(root_0, char_literal592_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:612:5: variable_declarators ';'
				{
				DebugLocation(612, 5);
				PushFollow(Follow._variable_declarators_in_event_declaration4293);
				variable_declarators593=variable_declarators();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variable_declarators593.Tree, variable_declarators593, "variable_declarators593", retval);
				DebugLocation(612, 28);
				char_literal594=(IToken)Match(input,SEMI,Follow._SEMI_in_event_declaration4297); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal594_tree = (object)adaptor.Create(char_literal594, "char_literal594", retval);
				adaptor.AddChild(root_0, char_literal594_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(166); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("event_declaration", 171);
			LeaveRule("event_declaration", 171);
			LeaveRule_event_declaration();
			if (state.backtracking > 0) { Memoize(input, 171, event_declaration_StartIndex); }

		}
		DebugLocation(613, 2);
		} finally { DebugExitRule(GrammarFileName, "event_declaration"); }
		return retval;

	}
	// $ANTLR end "event_declaration"

	partial void EnterRule_event_modifiers();
	partial void LeaveRule_event_modifiers();
	// $ANTLR start "event_modifiers"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:614:1: event_modifiers : ( modifier )+ ;
	[GrammarRule("event_modifiers")]
	private Antlr3AstNode event_modifiers()
	{
		EnterRule_event_modifiers();
		EnterRule("event_modifiers", 172);
		var retval = new Antlr3AstNode("event_modifiers");
		
		retval.Start = (IToken)input.LT(1);
		int event_modifiers_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode modifier595 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "event_modifiers");
		DebugLocation(614, 11);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 172)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:614:16: ( ( modifier )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:615:2: ( modifier )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(615, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:615:2: ( modifier )+
			int cnt167=0;
			try { DebugEnterSubRule(167);
			while (true)
			{
				int alt167=2;
				try { DebugEnterDecision(167, false);
				int LA167_1 = input.LA(1);

				if ((LA167_1==96||LA167_1==102||LA167_1==127||LA167_1==142||LA167_1==152||LA167_1==158||LA167_1==163||(LA167_1>=165 && LA167_1<=167)||LA167_1==172||LA167_1==178||LA167_1==190||LA167_1==193||LA167_1==195))
				{
					alt167 = 1;
				}


				} finally { DebugExitDecision(167); }
				switch (alt167)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:615:2: modifier
					{
					DebugLocation(615, 2);
					PushFollow(Follow._modifier_in_event_modifiers4309);
					modifier595=modifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, modifier595.Tree, modifier595, "modifier595", retval);

					}
					break;

				default:
					if (cnt167 >= 1)
						goto loop167;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee167 = new EarlyExitException( 167, input );
					DebugRecognitionException(eee167);
					throw eee167;
				}
				cnt167++;
			}
			loop167:
				;

			} finally { DebugExitSubRule(167); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("event_modifiers", 172);
			LeaveRule("event_modifiers", 172);
			LeaveRule_event_modifiers();
			if (state.backtracking > 0) { Memoize(input, 172, event_modifiers_StartIndex); }

		}
		DebugLocation(615, 11);
		} finally { DebugExitRule(GrammarFileName, "event_modifiers"); }
		return retval;

	}
	// $ANTLR end "event_modifiers"

	partial void EnterRule_event_accessor_declarations();
	partial void LeaveRule_event_accessor_declarations();
	// $ANTLR start "event_accessor_declarations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:616:1: event_accessor_declarations : ( attributes )? ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) ) ;
	[GrammarRule("event_accessor_declarations")]
	private Antlr3AstNode event_accessor_declarations()
	{
		EnterRule_event_accessor_declarations();
		EnterRule("event_accessor_declarations", 173);
		var retval = new Antlr3AstNode("event_accessor_declarations");
		
		retval.Start = (IToken)input.LT(1);
		int event_accessor_declarations_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode attributes596 = default(Antlr3AstNode);
		Antlr3AstNode add_accessor_declaration597 = default(Antlr3AstNode);
		Antlr3AstNode attributes598 = default(Antlr3AstNode);
		Antlr3AstNode remove_accessor_declaration599 = default(Antlr3AstNode);
		Antlr3AstNode remove_accessor_declaration600 = default(Antlr3AstNode);
		Antlr3AstNode attributes601 = default(Antlr3AstNode);
		Antlr3AstNode add_accessor_declaration602 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "event_accessor_declarations");
		DebugLocation(616, 89);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 173)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:616:28: ( ( attributes )? ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:617:2: ( attributes )? ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(617, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:617:2: ( attributes )?
			int alt168=2;
			try { DebugEnterSubRule(168);
			try { DebugEnterDecision(168, false);
			int LA168_1 = input.LA(1);

			if ((LA168_1==91))
			{
				alt168 = 1;
			}
			} finally { DebugExitDecision(168); }
			switch (alt168)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:617:2: attributes
				{
				DebugLocation(617, 2);
				PushFollow(Follow._attributes_in_event_accessor_declarations4318);
				attributes596=attributes();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, attributes596.Tree, attributes596, "attributes596", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(168); }

			DebugLocation(617, 16);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:617:16: ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) )
			int alt171=2;
			try { DebugEnterSubRule(171);
			try { DebugEnterDecision(171, false);
			int LA171_1 = input.LA(1);

			if ((LA171_1==97))
			{
				alt171 = 1;
			}
			else if ((LA171_1==169))
			{
				alt171 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 171, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(171); }
			switch (alt171)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:617:17: ( add_accessor_declaration ( attributes )? remove_accessor_declaration )
				{
				DebugLocation(617, 17);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:617:17: ( add_accessor_declaration ( attributes )? remove_accessor_declaration )
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:617:18: add_accessor_declaration ( attributes )? remove_accessor_declaration
				{
				DebugLocation(617, 18);
				PushFollow(Follow._add_accessor_declaration_in_event_accessor_declarations4325);
				add_accessor_declaration597=add_accessor_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, add_accessor_declaration597.Tree, add_accessor_declaration597, "add_accessor_declaration597", retval);
				DebugLocation(617, 45);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:617:45: ( attributes )?
				int alt169=2;
				try { DebugEnterSubRule(169);
				try { DebugEnterDecision(169, false);
				int LA169_1 = input.LA(1);

				if ((LA169_1==91))
				{
					alt169 = 1;
				}
				} finally { DebugExitDecision(169); }
				switch (alt169)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:617:45: attributes
					{
					DebugLocation(617, 45);
					PushFollow(Follow._attributes_in_event_accessor_declarations4329);
					attributes598=attributes();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, attributes598.Tree, attributes598, "attributes598", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(169); }

				DebugLocation(617, 59);
				PushFollow(Follow._remove_accessor_declaration_in_event_accessor_declarations4334);
				remove_accessor_declaration599=remove_accessor_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, remove_accessor_declaration599.Tree, remove_accessor_declaration599, "remove_accessor_declaration599", retval);

				}


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:618:18: ( remove_accessor_declaration ( attributes )? add_accessor_declaration )
				{
				DebugLocation(618, 18);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:618:18: ( remove_accessor_declaration ( attributes )? add_accessor_declaration )
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:618:19: remove_accessor_declaration ( attributes )? add_accessor_declaration
				{
				DebugLocation(618, 19);
				PushFollow(Follow._remove_accessor_declaration_in_event_accessor_declarations4355);
				remove_accessor_declaration600=remove_accessor_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, remove_accessor_declaration600.Tree, remove_accessor_declaration600, "remove_accessor_declaration600", retval);
				DebugLocation(618, 49);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:618:49: ( attributes )?
				int alt170=2;
				try { DebugEnterSubRule(170);
				try { DebugEnterDecision(170, false);
				int LA170_1 = input.LA(1);

				if ((LA170_1==91))
				{
					alt170 = 1;
				}
				} finally { DebugExitDecision(170); }
				switch (alt170)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:618:49: attributes
					{
					DebugLocation(618, 49);
					PushFollow(Follow._attributes_in_event_accessor_declarations4359);
					attributes601=attributes();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, attributes601.Tree, attributes601, "attributes601", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(170); }

				DebugLocation(618, 63);
				PushFollow(Follow._add_accessor_declaration_in_event_accessor_declarations4364);
				add_accessor_declaration602=add_accessor_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, add_accessor_declaration602.Tree, add_accessor_declaration602, "add_accessor_declaration602", retval);

				}


				}
				break;

			}
			} finally { DebugExitSubRule(171); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("event_accessor_declarations", 173);
			LeaveRule("event_accessor_declarations", 173);
			LeaveRule_event_accessor_declarations();
			if (state.backtracking > 0) { Memoize(input, 173, event_accessor_declarations_StartIndex); }

		}
		DebugLocation(618, 89);
		} finally { DebugExitRule(GrammarFileName, "event_accessor_declarations"); }
		return retval;

	}
	// $ANTLR end "event_accessor_declarations"

	partial void EnterRule_add_accessor_declaration();
	partial void LeaveRule_add_accessor_declaration();
	// $ANTLR start "add_accessor_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:619:1: add_accessor_declaration : 'add' block ;
	[GrammarRule("add_accessor_declaration")]
	private Antlr3AstNode add_accessor_declaration()
	{
		EnterRule_add_accessor_declaration();
		EnterRule("add_accessor_declaration", 174);
		var retval = new Antlr3AstNode("add_accessor_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int add_accessor_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal603 = default(IToken);
		Antlr3AstNode block604 = default(Antlr3AstNode);

		object string_literal603_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "add_accessor_declaration");
		DebugLocation(619, 15);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 174)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:619:25: ( 'add' block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:620:2: 'add' block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(620, 2);
			string_literal603=(IToken)Match(input,97,Follow._97_in_add_accessor_declaration4374); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal603_tree = (object)adaptor.Create(string_literal603, "string_literal603", retval);
			adaptor.AddChild(root_0, string_literal603_tree);
			}
			DebugLocation(620, 10);
			PushFollow(Follow._block_in_add_accessor_declaration4378);
			block604=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block604.Tree, block604, "block604", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("add_accessor_declaration", 174);
			LeaveRule("add_accessor_declaration", 174);
			LeaveRule_add_accessor_declaration();
			if (state.backtracking > 0) { Memoize(input, 174, add_accessor_declaration_StartIndex); }

		}
		DebugLocation(620, 15);
		} finally { DebugExitRule(GrammarFileName, "add_accessor_declaration"); }
		return retval;

	}
	// $ANTLR end "add_accessor_declaration"

	partial void EnterRule_remove_accessor_declaration();
	partial void LeaveRule_remove_accessor_declaration();
	// $ANTLR start "remove_accessor_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:621:1: remove_accessor_declaration : 'remove' block ;
	[GrammarRule("remove_accessor_declaration")]
	private Antlr3AstNode remove_accessor_declaration()
	{
		EnterRule_remove_accessor_declaration();
		EnterRule("remove_accessor_declaration", 175);
		var retval = new Antlr3AstNode("remove_accessor_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int remove_accessor_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal605 = default(IToken);
		Antlr3AstNode block606 = default(Antlr3AstNode);

		object string_literal605_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "remove_accessor_declaration");
		DebugLocation(621, 18);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 175)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:621:28: ( 'remove' block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:622:2: 'remove' block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(622, 2);
			string_literal605=(IToken)Match(input,169,Follow._169_in_remove_accessor_declaration4386); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal605_tree = (object)adaptor.Create(string_literal605, "string_literal605", retval);
			adaptor.AddChild(root_0, string_literal605_tree);
			}
			DebugLocation(622, 13);
			PushFollow(Follow._block_in_remove_accessor_declaration4390);
			block606=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block606.Tree, block606, "block606", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("remove_accessor_declaration", 175);
			LeaveRule("remove_accessor_declaration", 175);
			LeaveRule_remove_accessor_declaration();
			if (state.backtracking > 0) { Memoize(input, 175, remove_accessor_declaration_StartIndex); }

		}
		DebugLocation(622, 18);
		} finally { DebugExitRule(GrammarFileName, "remove_accessor_declaration"); }
		return retval;

	}
	// $ANTLR end "remove_accessor_declaration"

	partial void EnterRule_enum_declaration();
	partial void LeaveRule_enum_declaration();
	// $ANTLR start "enum_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:627:1: enum_declaration : 'enum' identifier ( enum_base )? enum_body ( ';' )? ;
	[GrammarRule("enum_declaration")]
	private Antlr3AstNode enum_declaration()
	{
		EnterRule_enum_declaration();
		EnterRule("enum_declaration", 176);
		var retval = new Antlr3AstNode("enum_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int enum_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal607 = default(IToken);
		IToken char_literal611 = default(IToken);
		Antlr3AstNode identifier608 = default(Antlr3AstNode);
		Antlr3AstNode enum_base609 = default(Antlr3AstNode);
		Antlr3AstNode enum_body610 = default(Antlr3AstNode);

		object string_literal607_tree = default(object);
		object char_literal611_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enum_declaration");
		DebugLocation(627, 53);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 176)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:627:17: ( 'enum' identifier ( enum_base )? enum_body ( ';' )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:628:2: 'enum' identifier ( enum_base )? enum_body ( ';' )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(628, 2);
			string_literal607=(IToken)Match(input,ENUM,Follow._ENUM_in_enum_declaration4402); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal607_tree = (object)adaptor.Create(string_literal607, "string_literal607", retval);
			adaptor.AddChild(root_0, string_literal607_tree);
			}
			DebugLocation(628, 11);
			PushFollow(Follow._identifier_in_enum_declaration4406);
			identifier608=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier608.Tree, identifier608, "identifier608", retval);
			DebugLocation(628, 24);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:628:24: ( enum_base )?
			int alt172=2;
			try { DebugEnterSubRule(172);
			try { DebugEnterDecision(172, false);
			int LA172_1 = input.LA(1);

			if ((LA172_1==79))
			{
				alt172 = 1;
			}
			} finally { DebugExitDecision(172); }
			switch (alt172)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:628:24: enum_base
				{
				DebugLocation(628, 24);
				PushFollow(Follow._enum_base_in_enum_declaration4410);
				enum_base609=enum_base();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enum_base609.Tree, enum_base609, "enum_base609", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(172); }

			DebugLocation(628, 37);
			PushFollow(Follow._enum_body_in_enum_declaration4415);
			enum_body610=enum_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, enum_body610.Tree, enum_body610, "enum_body610", retval);
			DebugLocation(628, 49);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:628:49: ( ';' )?
			int alt173=2;
			try { DebugEnterSubRule(173);
			try { DebugEnterDecision(173, false);
			int LA173_1 = input.LA(1);

			if ((LA173_1==SEMI))
			{
				alt173 = 1;
			}
			} finally { DebugExitDecision(173); }
			switch (alt173)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:628:49: ';'
				{
				DebugLocation(628, 49);
				char_literal611=(IToken)Match(input,SEMI,Follow._SEMI_in_enum_declaration4419); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal611_tree = (object)adaptor.Create(char_literal611, "char_literal611", retval);
				adaptor.AddChild(root_0, char_literal611_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(173); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enum_declaration", 176);
			LeaveRule("enum_declaration", 176);
			LeaveRule_enum_declaration();
			if (state.backtracking > 0) { Memoize(input, 176, enum_declaration_StartIndex); }

		}
		DebugLocation(628, 53);
		} finally { DebugExitRule(GrammarFileName, "enum_declaration"); }
		return retval;

	}
	// $ANTLR end "enum_declaration"

	partial void EnterRule_enum_base();
	partial void LeaveRule_enum_base();
	// $ANTLR start "enum_base"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:629:1: enum_base : ':' integral_type ;
	[GrammarRule("enum_base")]
	private Antlr3AstNode enum_base()
	{
		EnterRule_enum_base();
		EnterRule("enum_base", 177);
		var retval = new Antlr3AstNode("enum_base");
		
		retval.Start = (IToken)input.LT(1);
		int enum_base_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal612 = default(IToken);
		Antlr3AstNode integral_type613 = default(Antlr3AstNode);

		object char_literal612_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enum_base");
		DebugLocation(629, 21);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 177)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:629:10: ( ':' integral_type )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:630:2: ':' integral_type
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(630, 2);
			char_literal612=(IToken)Match(input,79,Follow._79_in_enum_base4428); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal612_tree = (object)adaptor.Create(char_literal612, "char_literal612", retval);
			adaptor.AddChild(root_0, char_literal612_tree);
			}
			DebugLocation(630, 8);
			PushFollow(Follow._integral_type_in_enum_base4432);
			integral_type613=integral_type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, integral_type613.Tree, integral_type613, "integral_type613", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enum_base", 177);
			LeaveRule("enum_base", 177);
			LeaveRule_enum_base();
			if (state.backtracking > 0) { Memoize(input, 177, enum_base_StartIndex); }

		}
		DebugLocation(630, 21);
		} finally { DebugExitRule(GrammarFileName, "enum_base"); }
		return retval;

	}
	// $ANTLR end "enum_base"

	partial void EnterRule_enum_body();
	partial void LeaveRule_enum_body();
	// $ANTLR start "enum_body"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:631:1: enum_body : '{' ( enum_member_declarations ( ',' )? )? '}' ;
	[GrammarRule("enum_body")]
	private Antlr3AstNode enum_body()
	{
		EnterRule_enum_body();
		EnterRule("enum_body", 178);
		var retval = new Antlr3AstNode("enum_body");
		
		retval.Start = (IToken)input.LT(1);
		int enum_body_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal614 = default(IToken);
		IToken char_literal616 = default(IToken);
		IToken char_literal617 = default(IToken);
		Antlr3AstNode enum_member_declarations615 = default(Antlr3AstNode);

		object char_literal614_tree = default(object);
		object char_literal616_tree = default(object);
		object char_literal617_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enum_body");
		DebugLocation(631, 44);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 178)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:631:10: ( '{' ( enum_member_declarations ( ',' )? )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:632:2: '{' ( enum_member_declarations ( ',' )? )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(632, 2);
			char_literal614=(IToken)Match(input,199,Follow._199_in_enum_body4440); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal614_tree = (object)adaptor.Create(char_literal614, "char_literal614", retval);
			adaptor.AddChild(root_0, char_literal614_tree);
			}
			DebugLocation(632, 6);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:632:6: ( enum_member_declarations ( ',' )? )?
			int alt175=2;
			try { DebugEnterSubRule(175);
			try { DebugEnterDecision(175, false);
			int LA175_1 = input.LA(1);

			if ((LA175_1==IDENTIFIER||LA175_1==91||LA175_1==95||(LA175_1>=97 && LA175_1<=98)||(LA175_1>=100 && LA175_1<=101)||LA175_1==107||LA175_1==119||LA175_1==122||LA175_1==124||LA175_1==128||LA175_1==134||LA175_1==137||LA175_1==143||(LA175_1>=145 && LA175_1<=146)||(LA175_1>=149 && LA175_1<=150)||LA175_1==154||LA175_1==156||LA175_1==159||LA175_1==162||LA175_1==164||LA175_1==169||(LA175_1>=173 && LA175_1<=174)||LA175_1==185||LA175_1==192||LA175_1==196||LA175_1==198))
			{
				alt175 = 1;
			}
			} finally { DebugExitDecision(175); }
			switch (alt175)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:632:7: enum_member_declarations ( ',' )?
				{
				DebugLocation(632, 7);
				PushFollow(Follow._enum_member_declarations_in_enum_body4443);
				enum_member_declarations615=enum_member_declarations();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enum_member_declarations615.Tree, enum_member_declarations615, "enum_member_declarations615", retval);
				DebugLocation(632, 32);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:632:32: ( ',' )?
				int alt174=2;
				try { DebugEnterSubRule(174);
				try { DebugEnterDecision(174, false);
				int LA174_1 = input.LA(1);

				if ((LA174_1==74))
				{
					alt174 = 1;
				}
				} finally { DebugExitDecision(174); }
				switch (alt174)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:632:32: ','
					{
					DebugLocation(632, 32);
					char_literal616=(IToken)Match(input,74,Follow._74_in_enum_body4445); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal616_tree = (object)adaptor.Create(char_literal616, "char_literal616", retval);
					adaptor.AddChild(root_0, char_literal616_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(174); }


				}
				break;

			}
			} finally { DebugExitSubRule(175); }

			DebugLocation(632, 41);
			char_literal617=(IToken)Match(input,203,Follow._203_in_enum_body4452); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal617_tree = (object)adaptor.Create(char_literal617, "char_literal617", retval);
			adaptor.AddChild(root_0, char_literal617_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enum_body", 178);
			LeaveRule("enum_body", 178);
			LeaveRule_enum_body();
			if (state.backtracking > 0) { Memoize(input, 178, enum_body_StartIndex); }

		}
		DebugLocation(632, 44);
		} finally { DebugExitRule(GrammarFileName, "enum_body"); }
		return retval;

	}
	// $ANTLR end "enum_body"

	partial void EnterRule_enum_member_declarations();
	partial void LeaveRule_enum_member_declarations();
	// $ANTLR start "enum_member_declarations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:633:1: enum_member_declarations : enum_member_declaration ( ',' enum_member_declaration )* ;
	[GrammarRule("enum_member_declarations")]
	private Antlr3AstNode enum_member_declarations()
	{
		EnterRule_enum_member_declarations();
		EnterRule("enum_member_declarations", 179);
		var retval = new Antlr3AstNode("enum_member_declarations");
		
		retval.Start = (IToken)input.LT(1);
		int enum_member_declarations_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal619 = default(IToken);
		Antlr3AstNode enum_member_declaration618 = default(Antlr3AstNode);
		Antlr3AstNode enum_member_declaration620 = default(Antlr3AstNode);

		object char_literal619_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enum_member_declarations");
		DebugLocation(633, 56);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 179)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:633:25: ( enum_member_declaration ( ',' enum_member_declaration )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:634:2: enum_member_declaration ( ',' enum_member_declaration )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(634, 2);
			PushFollow(Follow._enum_member_declaration_in_enum_member_declarations4460);
			enum_member_declaration618=enum_member_declaration();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, enum_member_declaration618.Tree, enum_member_declaration618, "enum_member_declaration618", retval);
			DebugLocation(634, 26);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:634:26: ( ',' enum_member_declaration )*
			try { DebugEnterSubRule(176);
			while (true)
			{
				int alt176=2;
				try { DebugEnterDecision(176, false);
				int LA176_1 = input.LA(1);

				if ((LA176_1==74))
				{
					int LA176_2 = input.LA(2);

					if ((LA176_2==IDENTIFIER||LA176_2==91||LA176_2==95||(LA176_2>=97 && LA176_2<=98)||(LA176_2>=100 && LA176_2<=101)||LA176_2==107||LA176_2==119||LA176_2==122||LA176_2==124||LA176_2==128||LA176_2==134||LA176_2==137||LA176_2==143||(LA176_2>=145 && LA176_2<=146)||(LA176_2>=149 && LA176_2<=150)||LA176_2==154||LA176_2==156||LA176_2==159||LA176_2==162||LA176_2==164||LA176_2==169||(LA176_2>=173 && LA176_2<=174)||LA176_2==185||LA176_2==192||LA176_2==196||LA176_2==198))
					{
						alt176 = 1;
					}


				}


				} finally { DebugExitDecision(176); }
				switch ( alt176 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:634:27: ',' enum_member_declaration
					{
					DebugLocation(634, 27);
					char_literal619=(IToken)Match(input,74,Follow._74_in_enum_member_declarations4463); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal619_tree = (object)adaptor.Create(char_literal619, "char_literal619", retval);
					adaptor.AddChild(root_0, char_literal619_tree);
					}
					DebugLocation(634, 31);
					PushFollow(Follow._enum_member_declaration_in_enum_member_declarations4465);
					enum_member_declaration620=enum_member_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, enum_member_declaration620.Tree, enum_member_declaration620, "enum_member_declaration620", retval);

					}
					break;

				default:
					goto loop176;
				}
			}

			loop176:
				;

			} finally { DebugExitSubRule(176); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enum_member_declarations", 179);
			LeaveRule("enum_member_declarations", 179);
			LeaveRule_enum_member_declarations();
			if (state.backtracking > 0) { Memoize(input, 179, enum_member_declarations_StartIndex); }

		}
		DebugLocation(634, 56);
		} finally { DebugExitRule(GrammarFileName, "enum_member_declarations"); }
		return retval;

	}
	// $ANTLR end "enum_member_declarations"

	partial void EnterRule_enum_member_declaration();
	partial void LeaveRule_enum_member_declaration();
	// $ANTLR start "enum_member_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:635:1: enum_member_declaration : ( attributes )? identifier ( '=' expression )? ;
	[GrammarRule("enum_member_declaration")]
	private Antlr3AstNode enum_member_declaration()
	{
		EnterRule_enum_member_declaration();
		EnterRule("enum_member_declaration", 180);
		var retval = new Antlr3AstNode("enum_member_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int enum_member_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal623 = default(IToken);
		Antlr3AstNode attributes621 = default(Antlr3AstNode);
		Antlr3AstNode identifier622 = default(Antlr3AstNode);
		Antlr3AstNode expression624 = default(Antlr3AstNode);

		object char_literal623_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enum_member_declaration");
		DebugLocation(635, 48);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 180)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:635:24: ( ( attributes )? identifier ( '=' expression )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:636:2: ( attributes )? identifier ( '=' expression )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(636, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:636:2: ( attributes )?
			int alt177=2;
			try { DebugEnterSubRule(177);
			try { DebugEnterDecision(177, false);
			int LA177_1 = input.LA(1);

			if ((LA177_1==91))
			{
				alt177 = 1;
			}
			} finally { DebugExitDecision(177); }
			switch (alt177)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:636:2: attributes
				{
				DebugLocation(636, 2);
				PushFollow(Follow._attributes_in_enum_member_declaration4475);
				attributes621=attributes();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, attributes621.Tree, attributes621, "attributes621", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(177); }

			DebugLocation(636, 16);
			PushFollow(Follow._identifier_in_enum_member_declaration4480);
			identifier622=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier622.Tree, identifier622, "identifier622", retval);
			DebugLocation(636, 29);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:636:29: ( '=' expression )?
			int alt178=2;
			try { DebugEnterSubRule(178);
			try { DebugEnterDecision(178, false);
			int LA178_1 = input.LA(1);

			if ((LA178_1==85))
			{
				alt178 = 1;
			}
			} finally { DebugExitDecision(178); }
			switch (alt178)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:636:30: '=' expression
				{
				DebugLocation(636, 30);
				char_literal623=(IToken)Match(input,85,Follow._85_in_enum_member_declaration4485); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal623_tree = (object)adaptor.Create(char_literal623, "char_literal623", retval);
				adaptor.AddChild(root_0, char_literal623_tree);
				}
				DebugLocation(636, 36);
				PushFollow(Follow._expression_in_enum_member_declaration4489);
				expression624=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression624.Tree, expression624, "expression624", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(178); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enum_member_declaration", 180);
			LeaveRule("enum_member_declaration", 180);
			LeaveRule_enum_member_declaration();
			if (state.backtracking > 0) { Memoize(input, 180, enum_member_declaration_StartIndex); }

		}
		DebugLocation(636, 48);
		} finally { DebugExitRule(GrammarFileName, "enum_member_declaration"); }
		return retval;

	}
	// $ANTLR end "enum_member_declaration"

	partial void EnterRule_integral_type();
	partial void LeaveRule_integral_type();
	// $ANTLR start "integral_type"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:641:1: integral_type : ( 'sbyte' | 'byte' | 'short' | 'ushort' | 'int' | 'uint' | 'long' | 'ulong' | 'char' );
	[GrammarRule("integral_type")]
	private Antlr3AstNode integral_type()
	{
		EnterRule_integral_type();
		EnterRule("integral_type", 181);
		var retval = new Antlr3AstNode("integral_type");
		
		retval.Start = (IToken)input.LT(1);
		int integral_type_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set625 = default(IToken);

		object set625_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "integral_type");
		DebugLocation(641, 84);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 181)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:641:14: ( 'sbyte' | 'byte' | 'short' | 'ushort' | 'int' | 'uint' | 'long' | 'ulong' | 'char' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(641, 14);

			set625=(IToken)input.LT(1);
			if (input.LA(1)==108||input.LA(1)==111||input.LA(1)==140||input.LA(1)==148||input.LA(1)==171||input.LA(1)==175||(input.LA(1)>=187 && input.LA(1)<=188)||input.LA(1)==191)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set625, "set625", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("integral_type", 181);
			LeaveRule("integral_type", 181);
			LeaveRule_integral_type();
			if (state.backtracking > 0) { Memoize(input, 181, integral_type_StartIndex); }

		}
		DebugLocation(642, 84);
		} finally { DebugExitRule(GrammarFileName, "integral_type"); }
		return retval;

	}
	// $ANTLR end "integral_type"

	partial void EnterRule_delegate_declaration();
	partial void LeaveRule_delegate_declaration();
	// $ANTLR start "delegate_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:645:1: delegate_declaration : 'delegate' return_type identifier ( variant_generic_parameter_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' ;
	[GrammarRule("delegate_declaration")]
	private Antlr3AstNode delegate_declaration()
	{
		EnterRule_delegate_declaration();
		EnterRule("delegate_declaration", 182);
		var retval = new Antlr3AstNode("delegate_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int delegate_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal626 = default(IToken);
		IToken char_literal630 = default(IToken);
		IToken char_literal632 = default(IToken);
		IToken char_literal634 = default(IToken);
		Antlr3AstNode return_type627 = default(Antlr3AstNode);
		Antlr3AstNode identifier628 = default(Antlr3AstNode);
		Antlr3AstNode variant_generic_parameter_list629 = default(Antlr3AstNode);
		Antlr3AstNode formal_parameter_list631 = default(Antlr3AstNode);
		Antlr3AstNode type_parameter_constraints_clauses633 = default(Antlr3AstNode);

		object string_literal626_tree = default(object);
		object char_literal630_tree = default(object);
		object char_literal632_tree = default(object);
		object char_literal634_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "delegate_declaration");
		DebugLocation(645, 81);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 182)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:645:21: ( 'delegate' return_type identifier ( variant_generic_parameter_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:646:2: 'delegate' return_type identifier ( variant_generic_parameter_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(646, 2);
			string_literal626=(IToken)Match(input,118,Follow._118_in_delegate_declaration4546); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal626_tree = (object)adaptor.Create(string_literal626, "string_literal626", retval);
			adaptor.AddChild(root_0, string_literal626_tree);
			}
			DebugLocation(646, 15);
			PushFollow(Follow._return_type_in_delegate_declaration4550);
			return_type627=return_type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, return_type627.Tree, return_type627, "return_type627", retval);
			DebugLocation(646, 29);
			PushFollow(Follow._identifier_in_delegate_declaration4554);
			identifier628=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier628.Tree, identifier628, "identifier628", retval);
			DebugLocation(646, 41);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:646:41: ( variant_generic_parameter_list )?
			int alt179=2;
			try { DebugEnterSubRule(179);
			try { DebugEnterDecision(179, false);
			int LA179_1 = input.LA(1);

			if ((LA179_1==81))
			{
				alt179 = 1;
			}
			} finally { DebugExitDecision(179); }
			switch (alt179)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:646:41: variant_generic_parameter_list
				{
				DebugLocation(646, 41);
				PushFollow(Follow._variant_generic_parameter_list_in_delegate_declaration4557);
				variant_generic_parameter_list629=variant_generic_parameter_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variant_generic_parameter_list629.Tree, variant_generic_parameter_list629, "variant_generic_parameter_list629", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(179); }

			DebugLocation(647, 3);
			char_literal630=(IToken)Match(input,68,Follow._68_in_delegate_declaration4565); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal630_tree = (object)adaptor.Create(char_literal630, "char_literal630", retval);
			adaptor.AddChild(root_0, char_literal630_tree);
			}
			DebugLocation(647, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:647:9: ( formal_parameter_list )?
			int alt180=2;
			try { DebugEnterSubRule(180);
			try { DebugEnterDecision(180, false);
			int LA180_1 = input.LA(1);

			if ((LA180_1==IDENTIFIER||LA180_1==91||LA180_1==95||(LA180_1>=97 && LA180_1<=98)||(LA180_1>=100 && LA180_1<=101)||LA180_1==105||(LA180_1>=107 && LA180_1<=108)||LA180_1==111||LA180_1==116||LA180_1==119||(LA180_1>=121 && LA180_1<=122)||LA180_1==124||LA180_1==128||LA180_1==131||LA180_1==134||LA180_1==137||LA180_1==140||LA180_1==143||(LA180_1>=145 && LA180_1<=146)||(LA180_1>=148 && LA180_1<=150)||(LA180_1>=153 && LA180_1<=154)||(LA180_1>=156 && LA180_1<=157)||(LA180_1>=159 && LA180_1<=160)||LA180_1==162||LA180_1==164||(LA180_1>=168 && LA180_1<=169)||LA180_1==171||(LA180_1>=173 && LA180_1<=175)||LA180_1==179||LA180_1==182||LA180_1==185||(LA180_1>=187 && LA180_1<=188)||(LA180_1>=191 && LA180_1<=192)||LA180_1==194||LA180_1==196||LA180_1==198))
			{
				alt180 = 1;
			}
			} finally { DebugExitDecision(180); }
			switch (alt180)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:647:9: formal_parameter_list
				{
				DebugLocation(647, 9);
				PushFollow(Follow._formal_parameter_list_in_delegate_declaration4569);
				formal_parameter_list631=formal_parameter_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, formal_parameter_list631.Tree, formal_parameter_list631, "formal_parameter_list631", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(180); }

			DebugLocation(647, 34);
			char_literal632=(IToken)Match(input,RPAREN,Follow._RPAREN_in_delegate_declaration4574); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal632_tree = (object)adaptor.Create(char_literal632, "char_literal632", retval);
			adaptor.AddChild(root_0, char_literal632_tree);
			}
			DebugLocation(647, 40);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:647:40: ( type_parameter_constraints_clauses )?
			int alt181=2;
			try { DebugEnterSubRule(181);
			try { DebugEnterDecision(181, false);
			int LA181_1 = input.LA(1);

			if ((LA181_1==196))
			{
				alt181 = 1;
			}
			} finally { DebugExitDecision(181); }
			switch (alt181)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:647:40: type_parameter_constraints_clauses
				{
				DebugLocation(647, 40);
				PushFollow(Follow._type_parameter_constraints_clauses_in_delegate_declaration4578);
				type_parameter_constraints_clauses633=type_parameter_constraints_clauses();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type_parameter_constraints_clauses633.Tree, type_parameter_constraints_clauses633, "type_parameter_constraints_clauses633", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(181); }

			DebugLocation(647, 78);
			char_literal634=(IToken)Match(input,SEMI,Follow._SEMI_in_delegate_declaration4583); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal634_tree = (object)adaptor.Create(char_literal634, "char_literal634", retval);
			adaptor.AddChild(root_0, char_literal634_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("delegate_declaration", 182);
			LeaveRule("delegate_declaration", 182);
			LeaveRule_delegate_declaration();
			if (state.backtracking > 0) { Memoize(input, 182, delegate_declaration_StartIndex); }

		}
		DebugLocation(647, 81);
		} finally { DebugExitRule(GrammarFileName, "delegate_declaration"); }
		return retval;

	}
	// $ANTLR end "delegate_declaration"

	partial void EnterRule_delegate_modifiers();
	partial void LeaveRule_delegate_modifiers();
	// $ANTLR start "delegate_modifiers"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:648:1: delegate_modifiers : ( modifier )+ ;
	[GrammarRule("delegate_modifiers")]
	private Antlr3AstNode delegate_modifiers()
	{
		EnterRule_delegate_modifiers();
		EnterRule("delegate_modifiers", 183);
		var retval = new Antlr3AstNode("delegate_modifiers");
		
		retval.Start = (IToken)input.LT(1);
		int delegate_modifiers_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode modifier635 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "delegate_modifiers");
		DebugLocation(648, 11);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 183)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:648:19: ( ( modifier )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:649:2: ( modifier )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(649, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:649:2: ( modifier )+
			int cnt182=0;
			try { DebugEnterSubRule(182);
			while (true)
			{
				int alt182=2;
				try { DebugEnterDecision(182, false);
				int LA182_1 = input.LA(1);

				if ((LA182_1==96||LA182_1==102||LA182_1==127||LA182_1==142||LA182_1==152||LA182_1==158||LA182_1==163||(LA182_1>=165 && LA182_1<=167)||LA182_1==172||LA182_1==178||LA182_1==190||LA182_1==193||LA182_1==195))
				{
					alt182 = 1;
				}


				} finally { DebugExitDecision(182); }
				switch (alt182)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:649:2: modifier
					{
					DebugLocation(649, 2);
					PushFollow(Follow._modifier_in_delegate_modifiers4591);
					modifier635=modifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, modifier635.Tree, modifier635, "modifier635", retval);

					}
					break;

				default:
					if (cnt182 >= 1)
						goto loop182;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee182 = new EarlyExitException( 182, input );
					DebugRecognitionException(eee182);
					throw eee182;
				}
				cnt182++;
			}
			loop182:
				;

			} finally { DebugExitSubRule(182); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("delegate_modifiers", 183);
			LeaveRule("delegate_modifiers", 183);
			LeaveRule_delegate_modifiers();
			if (state.backtracking > 0) { Memoize(input, 183, delegate_modifiers_StartIndex); }

		}
		DebugLocation(649, 11);
		} finally { DebugExitRule(GrammarFileName, "delegate_modifiers"); }
		return retval;

	}
	// $ANTLR end "delegate_modifiers"

	partial void EnterRule_variant_generic_parameter_list();
	partial void LeaveRule_variant_generic_parameter_list();
	// $ANTLR start "variant_generic_parameter_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:651:1: variant_generic_parameter_list : '<' variant_type_parameters '>' ;
	[GrammarRule("variant_generic_parameter_list")]
	private Antlr3AstNode variant_generic_parameter_list()
	{
		EnterRule_variant_generic_parameter_list();
		EnterRule("variant_generic_parameter_list", 184);
		var retval = new Antlr3AstNode("variant_generic_parameter_list");
		
		retval.Start = (IToken)input.LT(1);
		int variant_generic_parameter_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal636 = default(IToken);
		IToken char_literal638 = default(IToken);
		Antlr3AstNode variant_type_parameters637 = default(Antlr3AstNode);

		object char_literal636_tree = default(object);
		object char_literal638_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "variant_generic_parameter_list");
		DebugLocation(651, 37);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 184)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:651:31: ( '<' variant_type_parameters '>' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:652:2: '<' variant_type_parameters '>'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(652, 2);
			char_literal636=(IToken)Match(input,81,Follow._81_in_variant_generic_parameter_list4601); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal636_tree = (object)adaptor.Create(char_literal636, "char_literal636", retval);
			adaptor.AddChild(root_0, char_literal636_tree);
			}
			DebugLocation(652, 8);
			PushFollow(Follow._variant_type_parameters_in_variant_generic_parameter_list4605);
			variant_type_parameters637=variant_type_parameters();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variant_type_parameters637.Tree, variant_type_parameters637, "variant_type_parameters637", retval);
			DebugLocation(652, 34);
			char_literal638=(IToken)Match(input,GT,Follow._GT_in_variant_generic_parameter_list4609); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal638_tree = (object)adaptor.Create(char_literal638, "char_literal638", retval);
			adaptor.AddChild(root_0, char_literal638_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variant_generic_parameter_list", 184);
			LeaveRule("variant_generic_parameter_list", 184);
			LeaveRule_variant_generic_parameter_list();
			if (state.backtracking > 0) { Memoize(input, 184, variant_generic_parameter_list_StartIndex); }

		}
		DebugLocation(652, 37);
		} finally { DebugExitRule(GrammarFileName, "variant_generic_parameter_list"); }
		return retval;

	}
	// $ANTLR end "variant_generic_parameter_list"

	partial void EnterRule_variant_type_parameters();
	partial void LeaveRule_variant_type_parameters();
	// $ANTLR start "variant_type_parameters"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:653:1: variant_type_parameters : variant_type_variable_name ( ',' variant_type_variable_name )* ;
	[GrammarRule("variant_type_parameters")]
	private Antlr3AstNode variant_type_parameters()
	{
		EnterRule_variant_type_parameters();
		EnterRule("variant_type_parameters", 185);
		var retval = new Antlr3AstNode("variant_type_parameters");
		
		retval.Start = (IToken)input.LT(1);
		int variant_type_parameters_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal640 = default(IToken);
		Antlr3AstNode variant_type_variable_name639 = default(Antlr3AstNode);
		Antlr3AstNode variant_type_variable_name641 = default(Antlr3AstNode);

		object char_literal640_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "variant_type_parameters");
		DebugLocation(653, 62);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 185)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:653:24: ( variant_type_variable_name ( ',' variant_type_variable_name )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:654:2: variant_type_variable_name ( ',' variant_type_variable_name )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(654, 2);
			PushFollow(Follow._variant_type_variable_name_in_variant_type_parameters4617);
			variant_type_variable_name639=variant_type_variable_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variant_type_variable_name639.Tree, variant_type_variable_name639, "variant_type_variable_name639", retval);
			DebugLocation(654, 29);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:654:29: ( ',' variant_type_variable_name )*
			try { DebugEnterSubRule(183);
			while (true)
			{
				int alt183=2;
				try { DebugEnterDecision(183, false);
				int LA183_1 = input.LA(1);

				if ((LA183_1==74))
				{
					alt183 = 1;
				}


				} finally { DebugExitDecision(183); }
				switch ( alt183 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:654:30: ',' variant_type_variable_name
					{
					DebugLocation(654, 30);
					char_literal640=(IToken)Match(input,74,Follow._74_in_variant_type_parameters4620); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal640_tree = (object)adaptor.Create(char_literal640, "char_literal640", retval);
					adaptor.AddChild(root_0, char_literal640_tree);
					}
					DebugLocation(654, 34);
					PushFollow(Follow._variant_type_variable_name_in_variant_type_parameters4622);
					variant_type_variable_name641=variant_type_variable_name();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, variant_type_variable_name641.Tree, variant_type_variable_name641, "variant_type_variable_name641", retval);

					}
					break;

				default:
					goto loop183;
				}
			}

			loop183:
				;

			} finally { DebugExitSubRule(183); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variant_type_parameters", 185);
			LeaveRule("variant_type_parameters", 185);
			LeaveRule_variant_type_parameters();
			if (state.backtracking > 0) { Memoize(input, 185, variant_type_parameters_StartIndex); }

		}
		DebugLocation(654, 62);
		} finally { DebugExitRule(GrammarFileName, "variant_type_parameters"); }
		return retval;

	}
	// $ANTLR end "variant_type_parameters"

	partial void EnterRule_variant_type_variable_name();
	partial void LeaveRule_variant_type_variable_name();
	// $ANTLR start "variant_type_variable_name"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:655:1: variant_type_variable_name : ( attributes )? ( variance_annotation )? type_variable_name ;
	[GrammarRule("variant_type_variable_name")]
	private Antlr3AstNode variant_type_variable_name()
	{
		EnterRule_variant_type_variable_name();
		EnterRule("variant_type_variable_name", 186);
		var retval = new Antlr3AstNode("variant_type_variable_name");
		
		retval.Start = (IToken)input.LT(1);
		int variant_type_variable_name_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode attributes642 = default(Antlr3AstNode);
		Antlr3AstNode variance_annotation643 = default(Antlr3AstNode);
		Antlr3AstNode type_variable_name644 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "variant_type_variable_name");
		DebugLocation(655, 57);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 186)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:655:27: ( ( attributes )? ( variance_annotation )? type_variable_name )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:656:2: ( attributes )? ( variance_annotation )? type_variable_name
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(656, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:656:2: ( attributes )?
			int alt184=2;
			try { DebugEnterSubRule(184);
			try { DebugEnterDecision(184, false);
			int LA184_1 = input.LA(1);

			if ((LA184_1==91))
			{
				alt184 = 1;
			}
			} finally { DebugExitDecision(184); }
			switch (alt184)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:656:2: attributes
				{
				DebugLocation(656, 2);
				PushFollow(Follow._attributes_in_variant_type_variable_name4632);
				attributes642=attributes();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, attributes642.Tree, attributes642, "attributes642", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(184); }

			DebugLocation(656, 16);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:656:16: ( variance_annotation )?
			int alt185=2;
			try { DebugEnterSubRule(185);
			try { DebugEnterDecision(185, false);
			int LA185_1 = input.LA(1);

			if ((LA185_1==139||LA185_1==157))
			{
				alt185 = 1;
			}
			} finally { DebugExitDecision(185); }
			switch (alt185)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:656:16: variance_annotation
				{
				DebugLocation(656, 16);
				PushFollow(Follow._variance_annotation_in_variant_type_variable_name4637);
				variance_annotation643=variance_annotation();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variance_annotation643.Tree, variance_annotation643, "variance_annotation643", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(185); }

			DebugLocation(656, 39);
			PushFollow(Follow._type_variable_name_in_variant_type_variable_name4642);
			type_variable_name644=type_variable_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_variable_name644.Tree, type_variable_name644, "type_variable_name644", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variant_type_variable_name", 186);
			LeaveRule("variant_type_variable_name", 186);
			LeaveRule_variant_type_variable_name();
			if (state.backtracking > 0) { Memoize(input, 186, variant_type_variable_name_StartIndex); }

		}
		DebugLocation(656, 57);
		} finally { DebugExitRule(GrammarFileName, "variant_type_variable_name"); }
		return retval;

	}
	// $ANTLR end "variant_type_variable_name"

	partial void EnterRule_variance_annotation();
	partial void LeaveRule_variance_annotation();
	// $ANTLR start "variance_annotation"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:657:1: variance_annotation : ( 'in' | 'out' );
	[GrammarRule("variance_annotation")]
	private Antlr3AstNode variance_annotation()
	{
		EnterRule_variance_annotation();
		EnterRule("variance_annotation", 187);
		var retval = new Antlr3AstNode("variance_annotation");
		
		retval.Start = (IToken)input.LT(1);
		int variance_annotation_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set645 = default(IToken);

		object set645_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "variance_annotation");
		DebugLocation(657, 14);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 187)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:657:20: ( 'in' | 'out' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(657, 20);

			set645=(IToken)input.LT(1);
			if (input.LA(1)==139||input.LA(1)==157)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set645, "set645", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variance_annotation", 187);
			LeaveRule("variance_annotation", 187);
			LeaveRule_variance_annotation();
			if (state.backtracking > 0) { Memoize(input, 187, variance_annotation_StartIndex); }

		}
		DebugLocation(658, 14);
		} finally { DebugExitRule(GrammarFileName, "variance_annotation"); }
		return retval;

	}
	// $ANTLR end "variance_annotation"

	partial void EnterRule_type_parameter_constraints_clauses();
	partial void LeaveRule_type_parameter_constraints_clauses();
	// $ANTLR start "type_parameter_constraints_clauses"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:660:1: type_parameter_constraints_clauses : type_parameter_constraints_clause ( ',' type_parameter_constraints_clause )* ;
	[GrammarRule("type_parameter_constraints_clauses")]
	private Antlr3AstNode type_parameter_constraints_clauses()
	{
		EnterRule_type_parameter_constraints_clauses();
		EnterRule("type_parameter_constraints_clauses", 188);
		var retval = new Antlr3AstNode("type_parameter_constraints_clauses");
		
		retval.Start = (IToken)input.LT(1);
		int type_parameter_constraints_clauses_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal647 = default(IToken);
		Antlr3AstNode type_parameter_constraints_clause646 = default(Antlr3AstNode);
		Antlr3AstNode type_parameter_constraints_clause648 = default(Antlr3AstNode);

		object char_literal647_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "type_parameter_constraints_clauses");
		DebugLocation(660, 80);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 188)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:660:35: ( type_parameter_constraints_clause ( ',' type_parameter_constraints_clause )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:661:2: type_parameter_constraints_clause ( ',' type_parameter_constraints_clause )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(661, 2);
			PushFollow(Follow._type_parameter_constraints_clause_in_type_parameter_constraints_clauses4663);
			type_parameter_constraints_clause646=type_parameter_constraints_clause();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_parameter_constraints_clause646.Tree, type_parameter_constraints_clause646, "type_parameter_constraints_clause646", retval);
			DebugLocation(661, 38);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:661:38: ( ',' type_parameter_constraints_clause )*
			try { DebugEnterSubRule(186);
			while (true)
			{
				int alt186=2;
				try { DebugEnterDecision(186, false);
				int LA186_1 = input.LA(1);

				if ((LA186_1==74))
				{
					alt186 = 1;
				}


				} finally { DebugExitDecision(186); }
				switch ( alt186 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:661:39: ',' type_parameter_constraints_clause
					{
					DebugLocation(661, 39);
					char_literal647=(IToken)Match(input,74,Follow._74_in_type_parameter_constraints_clauses4668); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal647_tree = (object)adaptor.Create(char_literal647, "char_literal647", retval);
					adaptor.AddChild(root_0, char_literal647_tree);
					}
					DebugLocation(661, 45);
					PushFollow(Follow._type_parameter_constraints_clause_in_type_parameter_constraints_clauses4672);
					type_parameter_constraints_clause648=type_parameter_constraints_clause();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type_parameter_constraints_clause648.Tree, type_parameter_constraints_clause648, "type_parameter_constraints_clause648", retval);

					}
					break;

				default:
					goto loop186;
				}
			}

			loop186:
				;

			} finally { DebugExitSubRule(186); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("type_parameter_constraints_clauses", 188);
			LeaveRule("type_parameter_constraints_clauses", 188);
			LeaveRule_type_parameter_constraints_clauses();
			if (state.backtracking > 0) { Memoize(input, 188, type_parameter_constraints_clauses_StartIndex); }

		}
		DebugLocation(661, 80);
		} finally { DebugExitRule(GrammarFileName, "type_parameter_constraints_clauses"); }
		return retval;

	}
	// $ANTLR end "type_parameter_constraints_clauses"

	partial void EnterRule_type_parameter_constraints_clause();
	partial void LeaveRule_type_parameter_constraints_clause();
	// $ANTLR start "type_parameter_constraints_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:662:1: type_parameter_constraints_clause : 'where' type_variable_name ':' type_parameter_constraint_list ;
	[GrammarRule("type_parameter_constraints_clause")]
	private Antlr3AstNode type_parameter_constraints_clause()
	{
		EnterRule_type_parameter_constraints_clause();
		EnterRule("type_parameter_constraints_clause", 189);
		var retval = new Antlr3AstNode("type_parameter_constraints_clause");
		
		retval.Start = (IToken)input.LT(1);
		int type_parameter_constraints_clause_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal649 = default(IToken);
		IToken char_literal651 = default(IToken);
		Antlr3AstNode type_variable_name650 = default(Antlr3AstNode);
		Antlr3AstNode type_parameter_constraint_list652 = default(Antlr3AstNode);

		object string_literal649_tree = default(object);
		object char_literal651_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "type_parameter_constraints_clause");
		DebugLocation(662, 69);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 189)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:662:34: ( 'where' type_variable_name ':' type_parameter_constraint_list )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:663:2: 'where' type_variable_name ':' type_parameter_constraint_list
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(663, 2);
			string_literal649=(IToken)Match(input,196,Follow._196_in_type_parameter_constraints_clause4682); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal649_tree = (object)adaptor.Create(string_literal649, "string_literal649", retval);
			adaptor.AddChild(root_0, string_literal649_tree);
			}
			DebugLocation(663, 12);
			PushFollow(Follow._type_variable_name_in_type_parameter_constraints_clause4686);
			type_variable_name650=type_variable_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_variable_name650.Tree, type_variable_name650, "type_variable_name650", retval);
			DebugLocation(663, 33);
			char_literal651=(IToken)Match(input,79,Follow._79_in_type_parameter_constraints_clause4690); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal651_tree = (object)adaptor.Create(char_literal651, "char_literal651", retval);
			adaptor.AddChild(root_0, char_literal651_tree);
			}
			DebugLocation(663, 39);
			PushFollow(Follow._type_parameter_constraint_list_in_type_parameter_constraints_clause4694);
			type_parameter_constraint_list652=type_parameter_constraint_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_parameter_constraint_list652.Tree, type_parameter_constraint_list652, "type_parameter_constraint_list652", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("type_parameter_constraints_clause", 189);
			LeaveRule("type_parameter_constraints_clause", 189);
			LeaveRule_type_parameter_constraints_clause();
			if (state.backtracking > 0) { Memoize(input, 189, type_parameter_constraints_clause_StartIndex); }

		}
		DebugLocation(663, 69);
		} finally { DebugExitRule(GrammarFileName, "type_parameter_constraints_clause"); }
		return retval;

	}
	// $ANTLR end "type_parameter_constraints_clause"

	partial void EnterRule_type_parameter_constraint_list();
	partial void LeaveRule_type_parameter_constraint_list();
	// $ANTLR start "type_parameter_constraint_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:665:1: type_parameter_constraint_list : ( ( 'class' | 'struct' ) ( ',' secondary_constraint_list )? ( ',' constructor_constraint )? | secondary_constraint_list ( ',' constructor_constraint )? | constructor_constraint );
	[GrammarRule("type_parameter_constraint_list")]
	private Antlr3AstNode type_parameter_constraint_list()
	{
		EnterRule_type_parameter_constraint_list();
		EnterRule("type_parameter_constraint_list", 190);
		var retval = new Antlr3AstNode("type_parameter_constraint_list");
		
		retval.Start = (IToken)input.LT(1);
		int type_parameter_constraint_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set653 = default(IToken);
		IToken char_literal654 = default(IToken);
		IToken char_literal656 = default(IToken);
		IToken char_literal659 = default(IToken);
		Antlr3AstNode secondary_constraint_list655 = default(Antlr3AstNode);
		Antlr3AstNode constructor_constraint657 = default(Antlr3AstNode);
		Antlr3AstNode secondary_constraint_list658 = default(Antlr3AstNode);
		Antlr3AstNode constructor_constraint660 = default(Antlr3AstNode);
		Antlr3AstNode constructor_constraint661 = default(Antlr3AstNode);

		object set653_tree = default(object);
		object char_literal654_tree = default(object);
		object char_literal656_tree = default(object);
		object char_literal659_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "type_parameter_constraint_list");
		DebugLocation(665, 26);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 190)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:665:31: ( ( 'class' | 'struct' ) ( ',' secondary_constraint_list )? ( ',' constructor_constraint )? | secondary_constraint_list ( ',' constructor_constraint )? | constructor_constraint )
			int alt190=3;
			try { DebugEnterDecision(190, false);
			switch (input.LA(1))
			{
			case 113:
			case 180:
				{
				alt190 = 1;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 107:
			case 119:
			case 122:
			case 124:
			case 128:
			case 134:
			case 137:
			case 143:
			case 145:
			case 146:
			case 149:
			case 150:
			case 154:
			case 156:
			case 159:
			case 162:
			case 164:
			case 169:
			case 173:
			case 174:
			case 185:
			case 192:
			case 196:
			case 198:
				{
				alt190 = 2;
				}
				break;
			case 152:
				{
				alt190 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 190, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(190); }
			switch (alt190)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:666:5: ( 'class' | 'struct' ) ( ',' secondary_constraint_list )? ( ',' constructor_constraint )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(666, 5);

				set653=(IToken)input.LT(1);
				if (input.LA(1)==113||input.LA(1)==180)
				{
					input.Consume();
					if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set653, "set653", retval));
					state.errorRecovery=false;state.failed=false;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					DebugRecognitionException(mse);
					throw mse;
				}

				DebugLocation(666, 28);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:666:28: ( ',' secondary_constraint_list )?
				int alt187=2;
				try { DebugEnterSubRule(187);
				try { DebugEnterDecision(187, false);
				int LA187_1 = input.LA(1);

				if ((LA187_1==74))
				{
					int LA187_2 = input.LA(2);

					if ((LA187_2==196))
					{
						int LA187_3 = input.LA(3);

						if ((LA187_3==DOT||LA187_3==SEMI||LA187_3==74||(LA187_3>=80 && LA187_3<=81)||LA187_3==199))
						{
							alt187 = 1;
						}
					}
					else if ((LA187_2==IDENTIFIER||LA187_2==95||(LA187_2>=97 && LA187_2<=98)||(LA187_2>=100 && LA187_2<=101)||LA187_2==107||LA187_2==119||LA187_2==122||LA187_2==124||LA187_2==128||LA187_2==134||LA187_2==137||LA187_2==143||(LA187_2>=145 && LA187_2<=146)||(LA187_2>=149 && LA187_2<=150)||LA187_2==154||LA187_2==156||LA187_2==159||LA187_2==162||LA187_2==164||LA187_2==169||(LA187_2>=173 && LA187_2<=174)||LA187_2==185||LA187_2==192||LA187_2==198))
					{
						alt187 = 1;
					}
				}
				} finally { DebugExitDecision(187); }
				switch (alt187)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:666:29: ',' secondary_constraint_list
					{
					DebugLocation(666, 29);
					char_literal654=(IToken)Match(input,74,Follow._74_in_type_parameter_constraint_list4768); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal654_tree = (object)adaptor.Create(char_literal654, "char_literal654", retval);
					adaptor.AddChild(root_0, char_literal654_tree);
					}
					DebugLocation(666, 35);
					PushFollow(Follow._secondary_constraint_list_in_type_parameter_constraint_list4772);
					secondary_constraint_list655=secondary_constraint_list();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, secondary_constraint_list655.Tree, secondary_constraint_list655, "secondary_constraint_list655", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(187); }

				DebugLocation(666, 65);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:666:65: ( ',' constructor_constraint )?
				int alt188=2;
				try { DebugEnterSubRule(188);
				try { DebugEnterDecision(188, false);
				int LA188_1 = input.LA(1);

				if ((LA188_1==74))
				{
					int LA188_2 = input.LA(2);

					if ((LA188_2==152))
					{
						alt188 = 1;
					}
				}
				} finally { DebugExitDecision(188); }
				switch (alt188)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:666:66: ',' constructor_constraint
					{
					DebugLocation(666, 66);
					char_literal656=(IToken)Match(input,74,Follow._74_in_type_parameter_constraint_list4779); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal656_tree = (object)adaptor.Create(char_literal656, "char_literal656", retval);
					adaptor.AddChild(root_0, char_literal656_tree);
					}
					DebugLocation(666, 72);
					PushFollow(Follow._constructor_constraint_in_type_parameter_constraint_list4783);
					constructor_constraint657=constructor_constraint();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, constructor_constraint657.Tree, constructor_constraint657, "constructor_constraint657", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(188); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:667:4: secondary_constraint_list ( ',' constructor_constraint )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(667, 4);
				PushFollow(Follow._secondary_constraint_list_in_type_parameter_constraint_list4790);
				secondary_constraint_list658=secondary_constraint_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, secondary_constraint_list658.Tree, secondary_constraint_list658, "secondary_constraint_list658", retval);
				DebugLocation(667, 32);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:667:32: ( ',' constructor_constraint )?
				int alt189=2;
				try { DebugEnterSubRule(189);
				try { DebugEnterDecision(189, false);
				int LA189_1 = input.LA(1);

				if ((LA189_1==74))
				{
					int LA189_2 = input.LA(2);

					if ((LA189_2==152))
					{
						alt189 = 1;
					}
				}
				} finally { DebugExitDecision(189); }
				switch (alt189)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:667:33: ',' constructor_constraint
					{
					DebugLocation(667, 33);
					char_literal659=(IToken)Match(input,74,Follow._74_in_type_parameter_constraint_list4795); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal659_tree = (object)adaptor.Create(char_literal659, "char_literal659", retval);
					adaptor.AddChild(root_0, char_literal659_tree);
					}
					DebugLocation(667, 39);
					PushFollow(Follow._constructor_constraint_in_type_parameter_constraint_list4799);
					constructor_constraint660=constructor_constraint();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, constructor_constraint660.Tree, constructor_constraint660, "constructor_constraint660", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(189); }


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:668:4: constructor_constraint
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(668, 4);
				PushFollow(Follow._constructor_constraint_in_type_parameter_constraint_list4806);
				constructor_constraint661=constructor_constraint();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constructor_constraint661.Tree, constructor_constraint661, "constructor_constraint661", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("type_parameter_constraint_list", 190);
			LeaveRule("type_parameter_constraint_list", 190);
			LeaveRule_type_parameter_constraint_list();
			if (state.backtracking > 0) { Memoize(input, 190, type_parameter_constraint_list_StartIndex); }

		}
		DebugLocation(668, 26);
		} finally { DebugExitRule(GrammarFileName, "type_parameter_constraint_list"); }
		return retval;

	}
	// $ANTLR end "type_parameter_constraint_list"

	partial void EnterRule_secondary_constraint_list();
	partial void LeaveRule_secondary_constraint_list();
	// $ANTLR start "secondary_constraint_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:673:1: secondary_constraint_list : secondary_constraint ( ',' secondary_constraint )* ;
	[GrammarRule("secondary_constraint_list")]
	private Antlr3AstNode secondary_constraint_list()
	{
		EnterRule_secondary_constraint_list();
		EnterRule("secondary_constraint_list", 191);
		var retval = new Antlr3AstNode("secondary_constraint_list");
		
		retval.Start = (IToken)input.LT(1);
		int secondary_constraint_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal663 = default(IToken);
		Antlr3AstNode secondary_constraint662 = default(Antlr3AstNode);
		Antlr3AstNode secondary_constraint664 = default(Antlr3AstNode);

		object char_literal663_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "secondary_constraint_list");
		DebugLocation(673, 50);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 191)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:673:26: ( secondary_constraint ( ',' secondary_constraint )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:674:2: secondary_constraint ( ',' secondary_constraint )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(674, 2);
			PushFollow(Follow._secondary_constraint_in_secondary_constraint_list4818);
			secondary_constraint662=secondary_constraint();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, secondary_constraint662.Tree, secondary_constraint662, "secondary_constraint662", retval);
			DebugLocation(674, 23);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:674:23: ( ',' secondary_constraint )*
			try { DebugEnterSubRule(191);
			while (true)
			{
				int alt191=2;
				try { DebugEnterDecision(191, false);
				int LA191_1 = input.LA(1);

				if ((LA191_1==74))
				{
					int LA191_2 = input.LA(2);

					if ((LA191_2==196))
					{
						int LA191_3 = input.LA(3);

						if ((LA191_3==DOT||LA191_3==SEMI||LA191_3==74||(LA191_3>=80 && LA191_3<=81)||LA191_3==199))
						{
							alt191 = 1;
						}


					}
					else if ((LA191_2==IDENTIFIER||LA191_2==95||(LA191_2>=97 && LA191_2<=98)||(LA191_2>=100 && LA191_2<=101)||LA191_2==107||LA191_2==119||LA191_2==122||LA191_2==124||LA191_2==128||LA191_2==134||LA191_2==137||LA191_2==143||(LA191_2>=145 && LA191_2<=146)||(LA191_2>=149 && LA191_2<=150)||LA191_2==154||LA191_2==156||LA191_2==159||LA191_2==162||LA191_2==164||LA191_2==169||(LA191_2>=173 && LA191_2<=174)||LA191_2==185||LA191_2==192||LA191_2==198))
					{
						alt191 = 1;
					}


				}


				} finally { DebugExitDecision(191); }
				switch ( alt191 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:674:24: ',' secondary_constraint
					{
					DebugLocation(674, 24);
					char_literal663=(IToken)Match(input,74,Follow._74_in_secondary_constraint_list4821); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal663_tree = (object)adaptor.Create(char_literal663, "char_literal663", retval);
					adaptor.AddChild(root_0, char_literal663_tree);
					}
					DebugLocation(674, 28);
					PushFollow(Follow._secondary_constraint_in_secondary_constraint_list4823);
					secondary_constraint664=secondary_constraint();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, secondary_constraint664.Tree, secondary_constraint664, "secondary_constraint664", retval);

					}
					break;

				default:
					goto loop191;
				}
			}

			loop191:
				;

			} finally { DebugExitSubRule(191); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("secondary_constraint_list", 191);
			LeaveRule("secondary_constraint_list", 191);
			LeaveRule_secondary_constraint_list();
			if (state.backtracking > 0) { Memoize(input, 191, secondary_constraint_list_StartIndex); }

		}
		DebugLocation(674, 50);
		} finally { DebugExitRule(GrammarFileName, "secondary_constraint_list"); }
		return retval;

	}
	// $ANTLR end "secondary_constraint_list"

	partial void EnterRule_secondary_constraint();
	partial void LeaveRule_secondary_constraint();
	// $ANTLR start "secondary_constraint"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:675:1: secondary_constraint : type_name ;
	[GrammarRule("secondary_constraint")]
	private Antlr3AstNode secondary_constraint()
	{
		EnterRule_secondary_constraint();
		EnterRule("secondary_constraint", 192);
		var retval = new Antlr3AstNode("secondary_constraint");
		
		retval.Start = (IToken)input.LT(1);
		int secondary_constraint_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode type_name665 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "secondary_constraint");
		DebugLocation(675, 11);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 192)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:675:21: ( type_name )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:676:2: type_name
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(676, 2);
			PushFollow(Follow._type_name_in_secondary_constraint4833);
			type_name665=type_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_name665.Tree, type_name665, "type_name665", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("secondary_constraint", 192);
			LeaveRule("secondary_constraint", 192);
			LeaveRule_secondary_constraint();
			if (state.backtracking > 0) { Memoize(input, 192, secondary_constraint_StartIndex); }

		}
		DebugLocation(676, 11);
		} finally { DebugExitRule(GrammarFileName, "secondary_constraint"); }
		return retval;

	}
	// $ANTLR end "secondary_constraint"

	partial void EnterRule_type_variable_name();
	partial void LeaveRule_type_variable_name();
	// $ANTLR start "type_variable_name"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:677:1: type_variable_name : identifier ;
	[GrammarRule("type_variable_name")]
	private Antlr3AstNode type_variable_name()
	{
		EnterRule_type_variable_name();
		EnterRule("type_variable_name", 193);
		var retval = new Antlr3AstNode("type_variable_name");
		
		retval.Start = (IToken)input.LT(1);
		int type_variable_name_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode identifier666 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "type_variable_name");
		DebugLocation(677, 12);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 193)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:677:19: ( identifier )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:678:2: identifier
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(678, 2);
			PushFollow(Follow._identifier_in_type_variable_name4843);
			identifier666=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier666.Tree, identifier666, "identifier666", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("type_variable_name", 193);
			LeaveRule("type_variable_name", 193);
			LeaveRule_type_variable_name();
			if (state.backtracking > 0) { Memoize(input, 193, type_variable_name_StartIndex); }

		}
		DebugLocation(678, 12);
		} finally { DebugExitRule(GrammarFileName, "type_variable_name"); }
		return retval;

	}
	// $ANTLR end "type_variable_name"

	partial void EnterRule_constructor_constraint();
	partial void LeaveRule_constructor_constraint();
	// $ANTLR start "constructor_constraint"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:679:1: constructor_constraint : 'new' '(' ')' ;
	[GrammarRule("constructor_constraint")]
	private Antlr3AstNode constructor_constraint()
	{
		EnterRule_constructor_constraint();
		EnterRule("constructor_constraint", 194);
		var retval = new Antlr3AstNode("constructor_constraint");
		
		retval.Start = (IToken)input.LT(1);
		int constructor_constraint_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal667 = default(IToken);
		IToken char_literal668 = default(IToken);
		IToken char_literal669 = default(IToken);

		object string_literal667_tree = default(object);
		object char_literal668_tree = default(object);
		object char_literal669_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "constructor_constraint");
		DebugLocation(679, 19);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 194)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:679:23: ( 'new' '(' ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:680:2: 'new' '(' ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(680, 2);
			string_literal667=(IToken)Match(input,152,Follow._152_in_constructor_constraint4851); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal667_tree = (object)adaptor.Create(string_literal667, "string_literal667", retval);
			adaptor.AddChild(root_0, string_literal667_tree);
			}
			DebugLocation(680, 10);
			char_literal668=(IToken)Match(input,68,Follow._68_in_constructor_constraint4855); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal668_tree = (object)adaptor.Create(char_literal668, "char_literal668", retval);
			adaptor.AddChild(root_0, char_literal668_tree);
			}
			DebugLocation(680, 16);
			char_literal669=(IToken)Match(input,RPAREN,Follow._RPAREN_in_constructor_constraint4859); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal669_tree = (object)adaptor.Create(char_literal669, "char_literal669", retval);
			adaptor.AddChild(root_0, char_literal669_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constructor_constraint", 194);
			LeaveRule("constructor_constraint", 194);
			LeaveRule_constructor_constraint();
			if (state.backtracking > 0) { Memoize(input, 194, constructor_constraint_StartIndex); }

		}
		DebugLocation(680, 19);
		} finally { DebugExitRule(GrammarFileName, "constructor_constraint"); }
		return retval;

	}
	// $ANTLR end "constructor_constraint"

	partial void EnterRule_return_type();
	partial void LeaveRule_return_type();
	// $ANTLR start "return_type"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:681:1: return_type : ( type | 'void' );
	[GrammarRule("return_type")]
	private Antlr3AstNode return_type()
	{
		EnterRule_return_type();
		EnterRule("return_type", 195);
		var retval = new Antlr3AstNode("return_type");
		
		retval.Start = (IToken)input.LT(1);
		int return_type_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal671 = default(IToken);
		Antlr3AstNode type670 = default(Antlr3AstNode);

		object string_literal671_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "return_type");
		DebugLocation(681, 10);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 195)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:681:12: ( type | 'void' )
			int alt192=2;
			try { DebugEnterDecision(192, false);
			int LA192_1 = input.LA(1);

			if ((LA192_1==IDENTIFIER||LA192_1==95||(LA192_1>=97 && LA192_1<=98)||(LA192_1>=100 && LA192_1<=101)||LA192_1==105||(LA192_1>=107 && LA192_1<=108)||LA192_1==111||LA192_1==116||LA192_1==119||(LA192_1>=121 && LA192_1<=122)||LA192_1==124||LA192_1==128||LA192_1==131||LA192_1==134||LA192_1==137||LA192_1==140||LA192_1==143||(LA192_1>=145 && LA192_1<=146)||(LA192_1>=148 && LA192_1<=150)||(LA192_1>=153 && LA192_1<=154)||LA192_1==156||LA192_1==159||LA192_1==162||LA192_1==164||LA192_1==169||LA192_1==171||(LA192_1>=173 && LA192_1<=175)||LA192_1==179||LA192_1==185||(LA192_1>=187 && LA192_1<=188)||(LA192_1>=191 && LA192_1<=192)||LA192_1==196||LA192_1==198))
			{
				alt192 = 1;
			}
			else if ((LA192_1==194))
			{
				int LA192_2 = input.LA(2);

				if ((LA192_2==69))
				{
					alt192 = 1;
				}
				else if ((LA192_2==IDENTIFIER||LA192_2==95||(LA192_2>=97 && LA192_2<=98)||(LA192_2>=100 && LA192_2<=101)||LA192_2==107||LA192_2==119||LA192_2==122||LA192_2==124||LA192_2==128||LA192_2==134||LA192_2==137||LA192_2==143||(LA192_2>=145 && LA192_2<=146)||(LA192_2>=149 && LA192_2<=150)||LA192_2==154||LA192_2==156||LA192_2==159||LA192_2==162||LA192_2==164||LA192_2==169||(LA192_2>=173 && LA192_2<=174)||LA192_2==185||LA192_2==192||LA192_2==196||LA192_2==198))
				{
					alt192 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 192, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 192, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(192); }
			switch (alt192)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:682:2: type
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(682, 2);
				PushFollow(Follow._type_in_return_type4867);
				type670=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type670.Tree, type670, "type670", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:683:5: 'void'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(683, 5);
				string_literal671=(IToken)Match(input,194,Follow._194_in_return_type4873); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal671_tree = (object)adaptor.Create(string_literal671, "string_literal671", retval);
				adaptor.AddChild(root_0, string_literal671_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("return_type", 195);
			LeaveRule("return_type", 195);
			LeaveRule_return_type();
			if (state.backtracking > 0) { Memoize(input, 195, return_type_StartIndex); }

		}
		DebugLocation(683, 10);
		} finally { DebugExitRule(GrammarFileName, "return_type"); }
		return retval;

	}
	// $ANTLR end "return_type"

	partial void EnterRule_formal_parameter_list();
	partial void LeaveRule_formal_parameter_list();
	// $ANTLR start "formal_parameter_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:684:1: formal_parameter_list : formal_parameter ( ',' formal_parameter )* ;
	[GrammarRule("formal_parameter_list")]
	private Antlr3AstNode formal_parameter_list()
	{
		EnterRule_formal_parameter_list();
		EnterRule("formal_parameter_list", 196);
		var retval = new Antlr3AstNode("formal_parameter_list");
		
		retval.Start = (IToken)input.LT(1);
		int formal_parameter_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal673 = default(IToken);
		Antlr3AstNode formal_parameter672 = default(Antlr3AstNode);
		Antlr3AstNode formal_parameter674 = default(Antlr3AstNode);

		object char_literal673_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "formal_parameter_list");
		DebugLocation(684, 42);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 196)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:684:22: ( formal_parameter ( ',' formal_parameter )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:685:2: formal_parameter ( ',' formal_parameter )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(685, 2);
			PushFollow(Follow._formal_parameter_in_formal_parameter_list4880);
			formal_parameter672=formal_parameter();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, formal_parameter672.Tree, formal_parameter672, "formal_parameter672", retval);
			DebugLocation(685, 19);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:685:19: ( ',' formal_parameter )*
			try { DebugEnterSubRule(193);
			while (true)
			{
				int alt193=2;
				try { DebugEnterDecision(193, false);
				int LA193_1 = input.LA(1);

				if ((LA193_1==74))
				{
					alt193 = 1;
				}


				} finally { DebugExitDecision(193); }
				switch ( alt193 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:685:20: ',' formal_parameter
					{
					DebugLocation(685, 20);
					char_literal673=(IToken)Match(input,74,Follow._74_in_formal_parameter_list4883); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal673_tree = (object)adaptor.Create(char_literal673, "char_literal673", retval);
					adaptor.AddChild(root_0, char_literal673_tree);
					}
					DebugLocation(685, 24);
					PushFollow(Follow._formal_parameter_in_formal_parameter_list4885);
					formal_parameter674=formal_parameter();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, formal_parameter674.Tree, formal_parameter674, "formal_parameter674", retval);

					}
					break;

				default:
					goto loop193;
				}
			}

			loop193:
				;

			} finally { DebugExitSubRule(193); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("formal_parameter_list", 196);
			LeaveRule("formal_parameter_list", 196);
			LeaveRule_formal_parameter_list();
			if (state.backtracking > 0) { Memoize(input, 196, formal_parameter_list_StartIndex); }

		}
		DebugLocation(685, 42);
		} finally { DebugExitRule(GrammarFileName, "formal_parameter_list"); }
		return retval;

	}
	// $ANTLR end "formal_parameter_list"

	partial void EnterRule_formal_parameter();
	partial void LeaveRule_formal_parameter();
	// $ANTLR start "formal_parameter"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:686:1: formal_parameter : ( ( attributes )? ( fixed_parameter | parameter_array ) | '__arglist' );
	[GrammarRule("formal_parameter")]
	private Antlr3AstNode formal_parameter()
	{
		EnterRule_formal_parameter();
		EnterRule("formal_parameter", 197);
		var retval = new Antlr3AstNode("formal_parameter");
		
		retval.Start = (IToken)input.LT(1);
		int formal_parameter_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal678 = default(IToken);
		Antlr3AstNode attributes675 = default(Antlr3AstNode);
		Antlr3AstNode fixed_parameter676 = default(Antlr3AstNode);
		Antlr3AstNode parameter_array677 = default(Antlr3AstNode);

		object string_literal678_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "formal_parameter");
		DebugLocation(686, 14);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 197)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:686:17: ( ( attributes )? ( fixed_parameter | parameter_array ) | '__arglist' )
			int alt196=2;
			try { DebugEnterDecision(196, false);
			int LA196_1 = input.LA(1);

			if ((LA196_1==IDENTIFIER||LA196_1==91||(LA196_1>=97 && LA196_1<=98)||(LA196_1>=100 && LA196_1<=101)||LA196_1==105||(LA196_1>=107 && LA196_1<=108)||LA196_1==111||LA196_1==116||LA196_1==119||(LA196_1>=121 && LA196_1<=122)||LA196_1==124||LA196_1==128||LA196_1==131||LA196_1==134||LA196_1==137||LA196_1==140||LA196_1==143||(LA196_1>=145 && LA196_1<=146)||(LA196_1>=148 && LA196_1<=150)||(LA196_1>=153 && LA196_1<=154)||(LA196_1>=156 && LA196_1<=157)||(LA196_1>=159 && LA196_1<=160)||LA196_1==162||LA196_1==164||(LA196_1>=168 && LA196_1<=169)||LA196_1==171||(LA196_1>=173 && LA196_1<=175)||LA196_1==179||LA196_1==182||LA196_1==185||(LA196_1>=187 && LA196_1<=188)||(LA196_1>=191 && LA196_1<=192)||LA196_1==194||LA196_1==196||LA196_1==198))
			{
				alt196 = 1;
			}
			else if ((LA196_1==95))
			{
				int LA196_2 = input.LA(2);

				if ((LA196_2==DOT||LA196_2==IDENTIFIER||LA196_2==69||(LA196_2>=80 && LA196_2<=81)||LA196_2==89||LA196_2==91||LA196_2==95||(LA196_2>=97 && LA196_2<=98)||(LA196_2>=100 && LA196_2<=101)||LA196_2==107||LA196_2==119||LA196_2==122||LA196_2==124||LA196_2==128||LA196_2==134||LA196_2==137||LA196_2==143||(LA196_2>=145 && LA196_2<=146)||(LA196_2>=149 && LA196_2<=150)||LA196_2==154||LA196_2==156||LA196_2==159||LA196_2==162||LA196_2==164||LA196_2==169||(LA196_2>=173 && LA196_2<=174)||LA196_2==185||LA196_2==192||LA196_2==196||LA196_2==198))
				{
					alt196 = 1;
				}
				else if ((LA196_2==RPAREN||LA196_2==74||LA196_2==92))
				{
					alt196 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 196, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 196, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(196); }
			switch (alt196)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:687:2: ( attributes )? ( fixed_parameter | parameter_array )
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(687, 2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:687:2: ( attributes )?
				int alt194=2;
				try { DebugEnterSubRule(194);
				try { DebugEnterDecision(194, false);
				int LA194_1 = input.LA(1);

				if ((LA194_1==91))
				{
					alt194 = 1;
				}
				} finally { DebugExitDecision(194); }
				switch (alt194)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:687:2: attributes
					{
					DebugLocation(687, 2);
					PushFollow(Follow._attributes_in_formal_parameter4895);
					attributes675=attributes();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, attributes675.Tree, attributes675, "attributes675", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(194); }

				DebugLocation(687, 16);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:687:16: ( fixed_parameter | parameter_array )
				int alt195=2;
				try { DebugEnterSubRule(195);
				try { DebugEnterDecision(195, false);
				int LA195_1 = input.LA(1);

				if ((LA195_1==IDENTIFIER||LA195_1==95||(LA195_1>=97 && LA195_1<=98)||(LA195_1>=100 && LA195_1<=101)||LA195_1==105||(LA195_1>=107 && LA195_1<=108)||LA195_1==111||LA195_1==116||LA195_1==119||(LA195_1>=121 && LA195_1<=122)||LA195_1==124||LA195_1==128||LA195_1==131||LA195_1==134||LA195_1==137||LA195_1==140||LA195_1==143||(LA195_1>=145 && LA195_1<=146)||(LA195_1>=148 && LA195_1<=150)||(LA195_1>=153 && LA195_1<=154)||(LA195_1>=156 && LA195_1<=157)||LA195_1==159||LA195_1==162||LA195_1==164||(LA195_1>=168 && LA195_1<=169)||LA195_1==171||(LA195_1>=173 && LA195_1<=175)||LA195_1==179||LA195_1==182||LA195_1==185||(LA195_1>=187 && LA195_1<=188)||(LA195_1>=191 && LA195_1<=192)||LA195_1==194||LA195_1==196||LA195_1==198))
				{
					alt195 = 1;
				}
				else if ((LA195_1==160))
				{
					alt195 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 195, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(195); }
				switch (alt195)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:687:17: fixed_parameter
					{
					DebugLocation(687, 17);
					PushFollow(Follow._fixed_parameter_in_formal_parameter4901);
					fixed_parameter676=fixed_parameter();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, fixed_parameter676.Tree, fixed_parameter676, "fixed_parameter676", retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:687:35: parameter_array
					{
					DebugLocation(687, 35);
					PushFollow(Follow._parameter_array_in_formal_parameter4905);
					parameter_array677=parameter_array();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, parameter_array677.Tree, parameter_array677, "parameter_array677", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(195); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:688:4: '__arglist'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(688, 4);
				string_literal678=(IToken)Match(input,95,Follow._95_in_formal_parameter4912); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal678_tree = (object)adaptor.Create(string_literal678, "string_literal678", retval);
				adaptor.AddChild(root_0, string_literal678_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("formal_parameter", 197);
			LeaveRule("formal_parameter", 197);
			LeaveRule_formal_parameter();
			if (state.backtracking > 0) { Memoize(input, 197, formal_parameter_StartIndex); }

		}
		DebugLocation(688, 14);
		} finally { DebugExitRule(GrammarFileName, "formal_parameter"); }
		return retval;

	}
	// $ANTLR end "formal_parameter"

	partial void EnterRule_fixed_parameters();
	partial void LeaveRule_fixed_parameters();
	// $ANTLR start "fixed_parameters"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:689:1: fixed_parameters : fixed_parameter ( ',' fixed_parameter )* ;
	[GrammarRule("fixed_parameters")]
	private Antlr3AstNode fixed_parameters()
	{
		EnterRule_fixed_parameters();
		EnterRule("fixed_parameters", 198);
		var retval = new Antlr3AstNode("fixed_parameters");
		
		retval.Start = (IToken)input.LT(1);
		int fixed_parameters_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal680 = default(IToken);
		Antlr3AstNode fixed_parameter679 = default(Antlr3AstNode);
		Antlr3AstNode fixed_parameter681 = default(Antlr3AstNode);

		object char_literal680_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "fixed_parameters");
		DebugLocation(689, 44);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 198)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:689:17: ( fixed_parameter ( ',' fixed_parameter )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:690:2: fixed_parameter ( ',' fixed_parameter )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(690, 2);
			PushFollow(Follow._fixed_parameter_in_fixed_parameters4920);
			fixed_parameter679=fixed_parameter();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, fixed_parameter679.Tree, fixed_parameter679, "fixed_parameter679", retval);
			DebugLocation(690, 20);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:690:20: ( ',' fixed_parameter )*
			try { DebugEnterSubRule(197);
			while (true)
			{
				int alt197=2;
				try { DebugEnterDecision(197, false);
				int LA197_1 = input.LA(1);

				if ((LA197_1==74))
				{
					alt197 = 1;
				}


				} finally { DebugExitDecision(197); }
				switch ( alt197 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:690:21: ',' fixed_parameter
					{
					DebugLocation(690, 21);
					char_literal680=(IToken)Match(input,74,Follow._74_in_fixed_parameters4925); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal680_tree = (object)adaptor.Create(char_literal680, "char_literal680", retval);
					adaptor.AddChild(root_0, char_literal680_tree);
					}
					DebugLocation(690, 27);
					PushFollow(Follow._fixed_parameter_in_fixed_parameters4929);
					fixed_parameter681=fixed_parameter();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, fixed_parameter681.Tree, fixed_parameter681, "fixed_parameter681", retval);

					}
					break;

				default:
					goto loop197;
				}
			}

			loop197:
				;

			} finally { DebugExitSubRule(197); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("fixed_parameters", 198);
			LeaveRule("fixed_parameters", 198);
			LeaveRule_fixed_parameters();
			if (state.backtracking > 0) { Memoize(input, 198, fixed_parameters_StartIndex); }

		}
		DebugLocation(690, 44);
		} finally { DebugExitRule(GrammarFileName, "fixed_parameters"); }
		return retval;

	}
	// $ANTLR end "fixed_parameters"

	partial void EnterRule_fixed_parameter();
	partial void LeaveRule_fixed_parameter();
	// $ANTLR start "fixed_parameter"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:692:1: fixed_parameter : ( parameter_modifier )? type identifier ( default_argument )? ;
	[GrammarRule("fixed_parameter")]
	private Antlr3AstNode fixed_parameter()
	{
		EnterRule_fixed_parameter();
		EnterRule("fixed_parameter", 199);
		var retval = new Antlr3AstNode("fixed_parameter");
		
		retval.Start = (IToken)input.LT(1);
		int fixed_parameter_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode parameter_modifier682 = default(Antlr3AstNode);
		Antlr3AstNode type683 = default(Antlr3AstNode);
		Antlr3AstNode identifier684 = default(Antlr3AstNode);
		Antlr3AstNode default_argument685 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "fixed_parameter");
		DebugLocation(692, 61);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 199)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:692:16: ( ( parameter_modifier )? type identifier ( default_argument )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:693:2: ( parameter_modifier )? type identifier ( default_argument )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(693, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:693:2: ( parameter_modifier )?
			int alt198=2;
			try { DebugEnterSubRule(198);
			try { DebugEnterDecision(198, false);
			int LA198_1 = input.LA(1);

			if ((LA198_1==157||LA198_1==168||LA198_1==182))
			{
				alt198 = 1;
			}
			} finally { DebugExitDecision(198); }
			switch (alt198)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:693:2: parameter_modifier
				{
				DebugLocation(693, 2);
				PushFollow(Follow._parameter_modifier_in_fixed_parameter4940);
				parameter_modifier682=parameter_modifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, parameter_modifier682.Tree, parameter_modifier682, "parameter_modifier682", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(198); }

			DebugLocation(693, 24);
			PushFollow(Follow._type_in_fixed_parameter4945);
			type683=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type683.Tree, type683, "type683", retval);
			DebugLocation(693, 31);
			PushFollow(Follow._identifier_in_fixed_parameter4949);
			identifier684=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier684.Tree, identifier684, "identifier684", retval);
			DebugLocation(693, 44);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:693:44: ( default_argument )?
			int alt199=2;
			try { DebugEnterSubRule(199);
			try { DebugEnterDecision(199, false);
			int LA199_1 = input.LA(1);

			if ((LA199_1==85))
			{
				alt199 = 1;
			}
			} finally { DebugExitDecision(199); }
			switch (alt199)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:693:44: default_argument
				{
				DebugLocation(693, 44);
				PushFollow(Follow._default_argument_in_fixed_parameter4953);
				default_argument685=default_argument();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, default_argument685.Tree, default_argument685, "default_argument685", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(199); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("fixed_parameter", 199);
			LeaveRule("fixed_parameter", 199);
			LeaveRule_fixed_parameter();
			if (state.backtracking > 0) { Memoize(input, 199, fixed_parameter_StartIndex); }

		}
		DebugLocation(693, 61);
		} finally { DebugExitRule(GrammarFileName, "fixed_parameter"); }
		return retval;

	}
	// $ANTLR end "fixed_parameter"

	partial void EnterRule_default_argument();
	partial void LeaveRule_default_argument();
	// $ANTLR start "default_argument"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:695:1: default_argument : '=' expression ;
	[GrammarRule("default_argument")]
	private Antlr3AstNode default_argument()
	{
		EnterRule_default_argument();
		EnterRule("default_argument", 200);
		var retval = new Antlr3AstNode("default_argument");
		
		retval.Start = (IToken)input.LT(1);
		int default_argument_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal686 = default(IToken);
		Antlr3AstNode expression687 = default(Antlr3AstNode);

		object char_literal686_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "default_argument");
		DebugLocation(695, 15);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 200)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:695:17: ( '=' expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:696:2: '=' expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(696, 2);
			char_literal686=(IToken)Match(input,85,Follow._85_in_default_argument4963); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal686_tree = (object)adaptor.Create(char_literal686, "char_literal686", retval);
			adaptor.AddChild(root_0, char_literal686_tree);
			}
			DebugLocation(696, 6);
			PushFollow(Follow._expression_in_default_argument4965);
			expression687=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression687.Tree, expression687, "expression687", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("default_argument", 200);
			LeaveRule("default_argument", 200);
			LeaveRule_default_argument();
			if (state.backtracking > 0) { Memoize(input, 200, default_argument_StartIndex); }

		}
		DebugLocation(696, 15);
		} finally { DebugExitRule(GrammarFileName, "default_argument"); }
		return retval;

	}
	// $ANTLR end "default_argument"

	partial void EnterRule_parameter_modifier();
	partial void LeaveRule_parameter_modifier();
	// $ANTLR start "parameter_modifier"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:697:1: parameter_modifier : ( 'ref' | 'out' | 'this' );
	[GrammarRule("parameter_modifier")]
	private Antlr3AstNode parameter_modifier()
	{
		EnterRule_parameter_modifier();
		EnterRule("parameter_modifier", 201);
		var retval = new Antlr3AstNode("parameter_modifier");
		
		retval.Start = (IToken)input.LT(1);
		int parameter_modifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set688 = default(IToken);

		object set688_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "parameter_modifier");
		DebugLocation(697, 24);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 201)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:697:19: ( 'ref' | 'out' | 'this' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(697, 19);

			set688=(IToken)input.LT(1);
			if (input.LA(1)==157||input.LA(1)==168||input.LA(1)==182)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set688, "set688", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("parameter_modifier", 201);
			LeaveRule("parameter_modifier", 201);
			LeaveRule_parameter_modifier();
			if (state.backtracking > 0) { Memoize(input, 201, parameter_modifier_StartIndex); }

		}
		DebugLocation(698, 24);
		} finally { DebugExitRule(GrammarFileName, "parameter_modifier"); }
		return retval;

	}
	// $ANTLR end "parameter_modifier"

	partial void EnterRule_parameter_array();
	partial void LeaveRule_parameter_array();
	// $ANTLR start "parameter_array"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:699:1: parameter_array : 'params' type identifier ;
	[GrammarRule("parameter_array")]
	private Antlr3AstNode parameter_array()
	{
		EnterRule_parameter_array();
		EnterRule("parameter_array", 202);
		var retval = new Antlr3AstNode("parameter_array");
		
		retval.Start = (IToken)input.LT(1);
		int parameter_array_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal689 = default(IToken);
		Antlr3AstNode type690 = default(Antlr3AstNode);
		Antlr3AstNode identifier691 = default(Antlr3AstNode);

		object string_literal689_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "parameter_array");
		DebugLocation(699, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 202)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:699:16: ( 'params' type identifier )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:700:2: 'params' type identifier
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(700, 2);
			string_literal689=(IToken)Match(input,160,Follow._160_in_parameter_array4988); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal689_tree = (object)adaptor.Create(string_literal689, "string_literal689", retval);
			adaptor.AddChild(root_0, string_literal689_tree);
			}
			DebugLocation(700, 13);
			PushFollow(Follow._type_in_parameter_array4992);
			type690=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type690.Tree, type690, "type690", retval);
			DebugLocation(700, 20);
			PushFollow(Follow._identifier_in_parameter_array4996);
			identifier691=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier691.Tree, identifier691, "identifier691", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("parameter_array", 202);
			LeaveRule("parameter_array", 202);
			LeaveRule_parameter_array();
			if (state.backtracking > 0) { Memoize(input, 202, parameter_array_StartIndex); }

		}
		DebugLocation(700, 30);
		} finally { DebugExitRule(GrammarFileName, "parameter_array"); }
		return retval;

	}
	// $ANTLR end "parameter_array"

	partial void EnterRule_interface_declaration();
	partial void LeaveRule_interface_declaration();
	// $ANTLR start "interface_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:703:1: interface_declaration : 'interface' identifier ( variant_generic_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( ';' )? ;
	[GrammarRule("interface_declaration")]
	private Antlr3AstNode interface_declaration()
	{
		EnterRule_interface_declaration();
		EnterRule("interface_declaration", 203);
		var retval = new Antlr3AstNode("interface_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int interface_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal692 = default(IToken);
		IToken char_literal698 = default(IToken);
		Antlr3AstNode identifier693 = default(Antlr3AstNode);
		Antlr3AstNode variant_generic_parameter_list694 = default(Antlr3AstNode);
		Antlr3AstNode interface_base695 = default(Antlr3AstNode);
		Antlr3AstNode type_parameter_constraints_clauses696 = default(Antlr3AstNode);
		Antlr3AstNode interface_body697 = default(Antlr3AstNode);

		object string_literal692_tree = default(object);
		object char_literal698_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interface_declaration");
		DebugLocation(703, 83);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 203)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:703:22: ( 'interface' identifier ( variant_generic_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( ';' )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:704:2: 'interface' identifier ( variant_generic_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( ';' )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(704, 2);
			string_literal692=(IToken)Match(input,141,Follow._141_in_interface_declaration5006); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal692_tree = (object)adaptor.Create(string_literal692, "string_literal692", retval);
			adaptor.AddChild(root_0, string_literal692_tree);
			}
			DebugLocation(704, 16);
			PushFollow(Follow._identifier_in_interface_declaration5010);
			identifier693=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier693.Tree, identifier693, "identifier693", retval);
			DebugLocation(704, 29);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:704:29: ( variant_generic_parameter_list )?
			int alt200=2;
			try { DebugEnterSubRule(200);
			try { DebugEnterDecision(200, false);
			int LA200_1 = input.LA(1);

			if ((LA200_1==81))
			{
				alt200 = 1;
			}
			} finally { DebugExitDecision(200); }
			switch (alt200)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:704:29: variant_generic_parameter_list
				{
				DebugLocation(704, 29);
				PushFollow(Follow._variant_generic_parameter_list_in_interface_declaration5014);
				variant_generic_parameter_list694=variant_generic_parameter_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variant_generic_parameter_list694.Tree, variant_generic_parameter_list694, "variant_generic_parameter_list694", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(200); }

			DebugLocation(705, 6);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:705:6: ( interface_base )?
			int alt201=2;
			try { DebugEnterSubRule(201);
			try { DebugEnterDecision(201, false);
			int LA201_1 = input.LA(1);

			if ((LA201_1==79))
			{
				alt201 = 1;
			}
			} finally { DebugExitDecision(201); }
			switch (alt201)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:705:6: interface_base
				{
				DebugLocation(705, 6);
				PushFollow(Follow._interface_base_in_interface_declaration5023);
				interface_base695=interface_base();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interface_base695.Tree, interface_base695, "interface_base695", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(201); }

			DebugLocation(705, 24);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:705:24: ( type_parameter_constraints_clauses )?
			int alt202=2;
			try { DebugEnterSubRule(202);
			try { DebugEnterDecision(202, false);
			int LA202_1 = input.LA(1);

			if ((LA202_1==196))
			{
				alt202 = 1;
			}
			} finally { DebugExitDecision(202); }
			switch (alt202)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:705:24: type_parameter_constraints_clauses
				{
				DebugLocation(705, 24);
				PushFollow(Follow._type_parameter_constraints_clauses_in_interface_declaration5028);
				type_parameter_constraints_clauses696=type_parameter_constraints_clauses();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type_parameter_constraints_clauses696.Tree, type_parameter_constraints_clauses696, "type_parameter_constraints_clauses696", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(202); }

			DebugLocation(705, 62);
			PushFollow(Follow._interface_body_in_interface_declaration5033);
			interface_body697=interface_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, interface_body697.Tree, interface_body697, "interface_body697", retval);
			DebugLocation(705, 79);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:705:79: ( ';' )?
			int alt203=2;
			try { DebugEnterSubRule(203);
			try { DebugEnterDecision(203, false);
			int LA203_1 = input.LA(1);

			if ((LA203_1==SEMI))
			{
				alt203 = 1;
			}
			} finally { DebugExitDecision(203); }
			switch (alt203)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:705:79: ';'
				{
				DebugLocation(705, 79);
				char_literal698=(IToken)Match(input,SEMI,Follow._SEMI_in_interface_declaration5037); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal698_tree = (object)adaptor.Create(char_literal698, "char_literal698", retval);
				adaptor.AddChild(root_0, char_literal698_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(203); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_declaration", 203);
			LeaveRule("interface_declaration", 203);
			LeaveRule_interface_declaration();
			if (state.backtracking > 0) { Memoize(input, 203, interface_declaration_StartIndex); }

		}
		DebugLocation(705, 83);
		} finally { DebugExitRule(GrammarFileName, "interface_declaration"); }
		return retval;

	}
	// $ANTLR end "interface_declaration"

	partial void EnterRule_interface_modifiers();
	partial void LeaveRule_interface_modifiers();
	// $ANTLR start "interface_modifiers"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:706:1: interface_modifiers : ( modifier )+ ;
	[GrammarRule("interface_modifiers")]
	private Antlr3AstNode interface_modifiers()
	{
		EnterRule_interface_modifiers();
		EnterRule("interface_modifiers", 204);
		var retval = new Antlr3AstNode("interface_modifiers");
		
		retval.Start = (IToken)input.LT(1);
		int interface_modifiers_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode modifier699 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "interface_modifiers");
		DebugLocation(706, 11);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 204)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:706:20: ( ( modifier )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:707:2: ( modifier )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(707, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:707:2: ( modifier )+
			int cnt204=0;
			try { DebugEnterSubRule(204);
			while (true)
			{
				int alt204=2;
				try { DebugEnterDecision(204, false);
				int LA204_1 = input.LA(1);

				if ((LA204_1==96||LA204_1==102||LA204_1==127||LA204_1==142||LA204_1==152||LA204_1==158||LA204_1==163||(LA204_1>=165 && LA204_1<=167)||LA204_1==172||LA204_1==178||LA204_1==190||LA204_1==193||LA204_1==195))
				{
					alt204 = 1;
				}


				} finally { DebugExitDecision(204); }
				switch (alt204)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:707:2: modifier
					{
					DebugLocation(707, 2);
					PushFollow(Follow._modifier_in_interface_modifiers5047);
					modifier699=modifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, modifier699.Tree, modifier699, "modifier699", retval);

					}
					break;

				default:
					if (cnt204 >= 1)
						goto loop204;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee204 = new EarlyExitException( 204, input );
					DebugRecognitionException(eee204);
					throw eee204;
				}
				cnt204++;
			}
			loop204:
				;

			} finally { DebugExitSubRule(204); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_modifiers", 204);
			LeaveRule("interface_modifiers", 204);
			LeaveRule_interface_modifiers();
			if (state.backtracking > 0) { Memoize(input, 204, interface_modifiers_StartIndex); }

		}
		DebugLocation(707, 11);
		} finally { DebugExitRule(GrammarFileName, "interface_modifiers"); }
		return retval;

	}
	// $ANTLR end "interface_modifiers"

	partial void EnterRule_interface_base();
	partial void LeaveRule_interface_base();
	// $ANTLR start "interface_base"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:708:1: interface_base : ':' interface_type_list ;
	[GrammarRule("interface_base")]
	private Antlr3AstNode interface_base()
	{
		EnterRule_interface_base();
		EnterRule("interface_base", 205);
		var retval = new Antlr3AstNode("interface_base");
		
		retval.Start = (IToken)input.LT(1);
		int interface_base_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal700 = default(IToken);
		Antlr3AstNode interface_type_list701 = default(Antlr3AstNode);

		object char_literal700_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interface_base");
		DebugLocation(708, 28);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 205)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:708:15: ( ':' interface_type_list )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:709:5: ':' interface_type_list
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(709, 5);
			char_literal700=(IToken)Match(input,79,Follow._79_in_interface_base5060); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal700_tree = (object)adaptor.Create(char_literal700, "char_literal700", retval);
			adaptor.AddChild(root_0, char_literal700_tree);
			}
			DebugLocation(709, 9);
			PushFollow(Follow._interface_type_list_in_interface_base5062);
			interface_type_list701=interface_type_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, interface_type_list701.Tree, interface_type_list701, "interface_type_list701", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_base", 205);
			LeaveRule("interface_base", 205);
			LeaveRule_interface_base();
			if (state.backtracking > 0) { Memoize(input, 205, interface_base_StartIndex); }

		}
		DebugLocation(709, 28);
		} finally { DebugExitRule(GrammarFileName, "interface_base"); }
		return retval;

	}
	// $ANTLR end "interface_base"

	partial void EnterRule_interface_body();
	partial void LeaveRule_interface_body();
	// $ANTLR start "interface_body"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:710:1: interface_body : '{' ( interface_member_declarations )? '}' ;
	[GrammarRule("interface_body")]
	private Antlr3AstNode interface_body()
	{
		EnterRule_interface_body();
		EnterRule("interface_body", 206);
		var retval = new Antlr3AstNode("interface_body");
		
		retval.Start = (IToken)input.LT(1);
		int interface_body_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal702 = default(IToken);
		IToken char_literal704 = default(IToken);
		Antlr3AstNode interface_member_declarations703 = default(Antlr3AstNode);

		object char_literal702_tree = default(object);
		object char_literal704_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interface_body");
		DebugLocation(710, 44);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 206)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:710:15: ( '{' ( interface_member_declarations )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:711:2: '{' ( interface_member_declarations )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(711, 2);
			char_literal702=(IToken)Match(input,199,Follow._199_in_interface_body5070); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal702_tree = (object)adaptor.Create(char_literal702, "char_literal702", retval);
			adaptor.AddChild(root_0, char_literal702_tree);
			}
			DebugLocation(711, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:711:8: ( interface_member_declarations )?
			int alt205=2;
			try { DebugEnterSubRule(205);
			try { DebugEnterDecision(205, false);
			int LA205_1 = input.LA(1);

			if ((LA205_1==IDENTIFIER||LA205_1==91||(LA205_1>=95 && LA205_1<=98)||(LA205_1>=100 && LA205_1<=102)||LA205_1==105||(LA205_1>=107 && LA205_1<=108)||LA205_1==111||LA205_1==116||LA205_1==119||(LA205_1>=121 && LA205_1<=122)||(LA205_1>=124 && LA205_1<=125)||(LA205_1>=127 && LA205_1<=128)||LA205_1==131||LA205_1==134||LA205_1==137||LA205_1==140||(LA205_1>=142 && LA205_1<=143)||(LA205_1>=145 && LA205_1<=146)||(LA205_1>=148 && LA205_1<=150)||(LA205_1>=152 && LA205_1<=154)||LA205_1==156||(LA205_1>=158 && LA205_1<=159)||(LA205_1>=162 && LA205_1<=167)||LA205_1==169||(LA205_1>=171 && LA205_1<=175)||(LA205_1>=178 && LA205_1<=179)||LA205_1==185||(LA205_1>=187 && LA205_1<=188)||(LA205_1>=190 && LA205_1<=196)||LA205_1==198))
			{
				alt205 = 1;
			}
			} finally { DebugExitDecision(205); }
			switch (alt205)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:711:8: interface_member_declarations
				{
				DebugLocation(711, 8);
				PushFollow(Follow._interface_member_declarations_in_interface_body5074);
				interface_member_declarations703=interface_member_declarations();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interface_member_declarations703.Tree, interface_member_declarations703, "interface_member_declarations703", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(205); }

			DebugLocation(711, 41);
			char_literal704=(IToken)Match(input,203,Follow._203_in_interface_body5079); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal704_tree = (object)adaptor.Create(char_literal704, "char_literal704", retval);
			adaptor.AddChild(root_0, char_literal704_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_body", 206);
			LeaveRule("interface_body", 206);
			LeaveRule_interface_body();
			if (state.backtracking > 0) { Memoize(input, 206, interface_body_StartIndex); }

		}
		DebugLocation(711, 44);
		} finally { DebugExitRule(GrammarFileName, "interface_body"); }
		return retval;

	}
	// $ANTLR end "interface_body"

	partial void EnterRule_interface_member_declarations();
	partial void LeaveRule_interface_member_declarations();
	// $ANTLR start "interface_member_declarations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:712:1: interface_member_declarations : ( interface_member_declaration )+ ;
	[GrammarRule("interface_member_declarations")]
	private Antlr3AstNode interface_member_declarations()
	{
		EnterRule_interface_member_declarations();
		EnterRule("interface_member_declarations", 207);
		var retval = new Antlr3AstNode("interface_member_declarations");
		
		retval.Start = (IToken)input.LT(1);
		int interface_member_declarations_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode interface_member_declaration705 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "interface_member_declarations");
		DebugLocation(712, 31);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 207)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:712:30: ( ( interface_member_declaration )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:713:2: ( interface_member_declaration )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(713, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:713:2: ( interface_member_declaration )+
			int cnt206=0;
			try { DebugEnterSubRule(206);
			while (true)
			{
				int alt206=2;
				try { DebugEnterDecision(206, false);
				int LA206_1 = input.LA(1);

				if ((LA206_1==IDENTIFIER||LA206_1==91||(LA206_1>=95 && LA206_1<=98)||(LA206_1>=100 && LA206_1<=102)||LA206_1==105||(LA206_1>=107 && LA206_1<=108)||LA206_1==111||LA206_1==116||LA206_1==119||(LA206_1>=121 && LA206_1<=122)||(LA206_1>=124 && LA206_1<=125)||(LA206_1>=127 && LA206_1<=128)||LA206_1==131||LA206_1==134||LA206_1==137||LA206_1==140||(LA206_1>=142 && LA206_1<=143)||(LA206_1>=145 && LA206_1<=146)||(LA206_1>=148 && LA206_1<=150)||(LA206_1>=152 && LA206_1<=154)||LA206_1==156||(LA206_1>=158 && LA206_1<=159)||(LA206_1>=162 && LA206_1<=167)||LA206_1==169||(LA206_1>=171 && LA206_1<=175)||(LA206_1>=178 && LA206_1<=179)||LA206_1==185||(LA206_1>=187 && LA206_1<=188)||(LA206_1>=190 && LA206_1<=196)||LA206_1==198))
				{
					alt206 = 1;
				}


				} finally { DebugExitDecision(206); }
				switch (alt206)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:713:2: interface_member_declaration
					{
					DebugLocation(713, 2);
					PushFollow(Follow._interface_member_declaration_in_interface_member_declarations5087);
					interface_member_declaration705=interface_member_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, interface_member_declaration705.Tree, interface_member_declaration705, "interface_member_declaration705", retval);

					}
					break;

				default:
					if (cnt206 >= 1)
						goto loop206;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee206 = new EarlyExitException( 206, input );
					DebugRecognitionException(eee206);
					throw eee206;
				}
				cnt206++;
			}
			loop206:
				;

			} finally { DebugExitSubRule(206); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_member_declarations", 207);
			LeaveRule("interface_member_declarations", 207);
			LeaveRule_interface_member_declarations();
			if (state.backtracking > 0) { Memoize(input, 207, interface_member_declarations_StartIndex); }

		}
		DebugLocation(713, 31);
		} finally { DebugExitRule(GrammarFileName, "interface_member_declarations"); }
		return retval;

	}
	// $ANTLR end "interface_member_declarations"

	partial void EnterRule_interface_member_declaration();
	partial void LeaveRule_interface_member_declaration();
	// $ANTLR start "interface_member_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:714:1: interface_member_declaration : ( attributes )? ( modifiers )? ( 'void' interface_method_declaration | interface_event_declaration | type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration ) ) ;
	[GrammarRule("interface_member_declaration")]
	private Antlr3AstNode interface_member_declaration()
	{
		EnterRule_interface_member_declaration();
		EnterRule("interface_member_declaration", 208);
		var retval = new Antlr3AstNode("interface_member_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int interface_member_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal708 = default(IToken);
		Antlr3AstNode attributes706 = default(Antlr3AstNode);
		Antlr3AstNode modifiers707 = default(Antlr3AstNode);
		Antlr3AstNode interface_method_declaration709 = default(Antlr3AstNode);
		Antlr3AstNode interface_event_declaration710 = default(Antlr3AstNode);
		Antlr3AstNode type711 = default(Antlr3AstNode);
		Antlr3AstNode interface_method_declaration712 = default(Antlr3AstNode);
		Antlr3AstNode interface_property_declaration713 = default(Antlr3AstNode);
		Antlr3AstNode interface_indexer_declaration714 = default(Antlr3AstNode);

		object string_literal708_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interface_member_declaration");
		DebugLocation(714, 2);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 208)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:714:29: ( ( attributes )? ( modifiers )? ( 'void' interface_method_declaration | interface_event_declaration | type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration ) ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:715:2: ( attributes )? ( modifiers )? ( 'void' interface_method_declaration | interface_event_declaration | type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration ) )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(715, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:715:2: ( attributes )?
			int alt207=2;
			try { DebugEnterSubRule(207);
			try { DebugEnterDecision(207, false);
			int LA207_1 = input.LA(1);

			if ((LA207_1==91))
			{
				alt207 = 1;
			}
			} finally { DebugExitDecision(207); }
			switch (alt207)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:715:2: attributes
				{
				DebugLocation(715, 2);
				PushFollow(Follow._attributes_in_interface_member_declaration5096);
				attributes706=attributes();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, attributes706.Tree, attributes706, "attributes706", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(207); }

			DebugLocation(715, 17);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:715:17: ( modifiers )?
			int alt208=2;
			try { DebugEnterSubRule(208);
			try { DebugEnterDecision(208, false);
			int LA208_1 = input.LA(1);

			if ((LA208_1==96||LA208_1==102||LA208_1==127||LA208_1==142||LA208_1==152||LA208_1==158||LA208_1==163||(LA208_1>=165 && LA208_1<=167)||LA208_1==172||LA208_1==178||LA208_1==190||LA208_1==193||LA208_1==195))
			{
				alt208 = 1;
			}
			} finally { DebugExitDecision(208); }
			switch (alt208)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:715:17: modifiers
				{
				DebugLocation(715, 17);
				PushFollow(Follow._modifiers_in_interface_member_declaration5102);
				modifiers707=modifiers();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers707.Tree, modifiers707, "modifiers707", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(208); }

			DebugLocation(716, 3);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:716:3: ( 'void' interface_method_declaration | interface_event_declaration | type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration ) )
			int alt210=3;
			try { DebugEnterSubRule(210);
			try { DebugEnterDecision(210, false);
			switch (input.LA(1))
			{
			case 194:
				{
				int LA210_2 = input.LA(2);

				if ((LA210_2==IDENTIFIER||LA210_2==95||(LA210_2>=97 && LA210_2<=98)||(LA210_2>=100 && LA210_2<=101)||LA210_2==107||LA210_2==119||LA210_2==122||LA210_2==124||LA210_2==128||LA210_2==134||LA210_2==137||LA210_2==143||(LA210_2>=145 && LA210_2<=146)||(LA210_2>=149 && LA210_2<=150)||LA210_2==154||LA210_2==156||LA210_2==159||LA210_2==162||LA210_2==164||LA210_2==169||(LA210_2>=173 && LA210_2<=174)||LA210_2==185||LA210_2==192||LA210_2==196||LA210_2==198))
				{
					alt210 = 1;
				}
				else if ((LA210_2==69))
				{
					alt210 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 210, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 125:
				{
				alt210 = 2;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 107:
			case 108:
			case 111:
			case 116:
			case 119:
			case 121:
			case 122:
			case 124:
			case 128:
			case 131:
			case 134:
			case 137:
			case 140:
			case 143:
			case 145:
			case 146:
			case 148:
			case 149:
			case 150:
			case 153:
			case 154:
			case 156:
			case 159:
			case 162:
			case 164:
			case 169:
			case 171:
			case 173:
			case 174:
			case 175:
			case 179:
			case 185:
			case 187:
			case 188:
			case 191:
			case 192:
			case 196:
			case 198:
				{
				alt210 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 210, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(210); }
			switch (alt210)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:716:4: 'void' interface_method_declaration
				{
				DebugLocation(716, 4);
				string_literal708=(IToken)Match(input,194,Follow._194_in_interface_member_declaration5108); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal708_tree = (object)adaptor.Create(string_literal708, "string_literal708", retval);
				adaptor.AddChild(root_0, string_literal708_tree);
				}
				DebugLocation(716, 13);
				PushFollow(Follow._interface_method_declaration_in_interface_member_declaration5112);
				interface_method_declaration709=interface_method_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interface_method_declaration709.Tree, interface_method_declaration709, "interface_method_declaration709", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:717:5: interface_event_declaration
				{
				DebugLocation(717, 5);
				PushFollow(Follow._interface_event_declaration_in_interface_member_declaration5118);
				interface_event_declaration710=interface_event_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interface_event_declaration710.Tree, interface_event_declaration710, "interface_event_declaration710", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:718:5: type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration )
				{
				DebugLocation(718, 5);
				PushFollow(Follow._type_in_interface_member_declaration5124);
				type711=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type711.Tree, type711, "type711", retval);
				DebugLocation(718, 12);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:718:12: ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration )
				int alt209=3;
				try { DebugEnterSubRule(209);
				try { DebugEnterDecision(209, false);
				int LA209_1 = input.LA(1);

				if ((LA209_1==IDENTIFIER||LA209_1==95||(LA209_1>=97 && LA209_1<=98)||(LA209_1>=100 && LA209_1<=101)||LA209_1==107||LA209_1==119||LA209_1==122||LA209_1==124||LA209_1==128||LA209_1==134||LA209_1==137||LA209_1==143||(LA209_1>=145 && LA209_1<=146)||(LA209_1>=149 && LA209_1<=150)||LA209_1==154||LA209_1==156||LA209_1==159||LA209_1==162||LA209_1==164||LA209_1==169||(LA209_1>=173 && LA209_1<=174)||LA209_1==185||LA209_1==192||LA209_1==196||LA209_1==198))
				{
					int LA209_2 = input.LA(2);

					if ((LA209_2==81) && (EvaluatePredicate(synpred23_cs_fragment)))
					{
						alt209 = 1;
					}
					else if ((LA209_2==68) && (EvaluatePredicate(synpred23_cs_fragment)))
					{
						alt209 = 1;
					}
					else if ((LA209_2==199) && (EvaluatePredicate(synpred24_cs_fragment)))
					{
						alt209 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 209, 1, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else if ((LA209_1==182))
				{
					alt209 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 209, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(209); }
				switch (alt209)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:718:14: ( member_name '(' )=> interface_method_declaration
					{
					DebugLocation(718, 37);
					PushFollow(Follow._interface_method_declaration_in_interface_member_declaration5140);
					interface_method_declaration712=interface_method_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, interface_method_declaration712.Tree, interface_method_declaration712, "interface_method_declaration712", retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:719:14: ( member_name '{' )=> interface_property_declaration
					{
					DebugLocation(719, 37);
					PushFollow(Follow._interface_property_declaration_in_interface_member_declaration5165);
					interface_property_declaration713=interface_property_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, interface_property_declaration713.Tree, interface_property_declaration713, "interface_property_declaration713", retval);

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:720:8: interface_indexer_declaration
					{
					DebugLocation(720, 8);
					PushFollow(Follow._interface_indexer_declaration_in_interface_member_declaration5175);
					interface_indexer_declaration714=interface_indexer_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, interface_indexer_declaration714.Tree, interface_indexer_declaration714, "interface_indexer_declaration714", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(209); }


				}
				break;

			}
			} finally { DebugExitSubRule(210); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_member_declaration", 208);
			LeaveRule("interface_member_declaration", 208);
			LeaveRule_interface_member_declaration();
			if (state.backtracking > 0) { Memoize(input, 208, interface_member_declaration_StartIndex); }

		}
		DebugLocation(722, 2);
		} finally { DebugExitRule(GrammarFileName, "interface_member_declaration"); }
		return retval;

	}
	// $ANTLR end "interface_member_declaration"

	partial void EnterRule_interface_property_declaration();
	partial void LeaveRule_interface_property_declaration();
	// $ANTLR start "interface_property_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:723:1: interface_property_declaration : identifier '{' interface_accessor_declarations '}' ;
	[GrammarRule("interface_property_declaration")]
	private Antlr3AstNode interface_property_declaration()
	{
		EnterRule_interface_property_declaration();
		EnterRule("interface_property_declaration", 209);
		var retval = new Antlr3AstNode("interface_property_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int interface_property_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal716 = default(IToken);
		IToken char_literal718 = default(IToken);
		Antlr3AstNode identifier715 = default(Antlr3AstNode);
		Antlr3AstNode interface_accessor_declarations717 = default(Antlr3AstNode);

		object char_literal716_tree = default(object);
		object char_literal718_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interface_property_declaration");
		DebugLocation(723, 58);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 209)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:723:31: ( identifier '{' interface_accessor_declarations '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:724:2: identifier '{' interface_accessor_declarations '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(724, 2);
			PushFollow(Follow._identifier_in_interface_property_declaration5192);
			identifier715=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier715.Tree, identifier715, "identifier715", retval);
			DebugLocation(724, 15);
			char_literal716=(IToken)Match(input,199,Follow._199_in_interface_property_declaration5196); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal716_tree = (object)adaptor.Create(char_literal716, "char_literal716", retval);
			adaptor.AddChild(root_0, char_literal716_tree);
			}
			DebugLocation(724, 21);
			PushFollow(Follow._interface_accessor_declarations_in_interface_property_declaration5200);
			interface_accessor_declarations717=interface_accessor_declarations();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, interface_accessor_declarations717.Tree, interface_accessor_declarations717, "interface_accessor_declarations717", retval);
			DebugLocation(724, 55);
			char_literal718=(IToken)Match(input,203,Follow._203_in_interface_property_declaration5204); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal718_tree = (object)adaptor.Create(char_literal718, "char_literal718", retval);
			adaptor.AddChild(root_0, char_literal718_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_property_declaration", 209);
			LeaveRule("interface_property_declaration", 209);
			LeaveRule_interface_property_declaration();
			if (state.backtracking > 0) { Memoize(input, 209, interface_property_declaration_StartIndex); }

		}
		DebugLocation(724, 58);
		} finally { DebugExitRule(GrammarFileName, "interface_property_declaration"); }
		return retval;

	}
	// $ANTLR end "interface_property_declaration"

	partial void EnterRule_interface_method_declaration();
	partial void LeaveRule_interface_method_declaration();
	// $ANTLR start "interface_method_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:725:1: interface_method_declaration : identifier ( generic_argument_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' ;
	[GrammarRule("interface_method_declaration")]
	private Antlr3AstNode interface_method_declaration()
	{
		EnterRule_interface_method_declaration();
		EnterRule("interface_method_declaration", 210);
		var retval = new Antlr3AstNode("interface_method_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int interface_method_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal721 = default(IToken);
		IToken char_literal723 = default(IToken);
		IToken char_literal725 = default(IToken);
		Antlr3AstNode identifier719 = default(Antlr3AstNode);
		Antlr3AstNode generic_argument_list720 = default(Antlr3AstNode);
		Antlr3AstNode formal_parameter_list722 = default(Antlr3AstNode);
		Antlr3AstNode type_parameter_constraints_clauses724 = default(Antlr3AstNode);

		object char_literal721_tree = default(object);
		object char_literal723_tree = default(object);
		object char_literal725_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interface_method_declaration");
		DebugLocation(725, 84);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 210)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:725:29: ( identifier ( generic_argument_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:726:2: identifier ( generic_argument_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(726, 2);
			PushFollow(Follow._identifier_in_interface_method_declaration5212);
			identifier719=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier719.Tree, identifier719, "identifier719", retval);
			DebugLocation(726, 15);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:726:15: ( generic_argument_list )?
			int alt211=2;
			try { DebugEnterSubRule(211);
			try { DebugEnterDecision(211, false);
			int LA211_1 = input.LA(1);

			if ((LA211_1==81))
			{
				alt211 = 1;
			}
			} finally { DebugExitDecision(211); }
			switch (alt211)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:726:15: generic_argument_list
				{
				DebugLocation(726, 15);
				PushFollow(Follow._generic_argument_list_in_interface_method_declaration5216);
				generic_argument_list720=generic_argument_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, generic_argument_list720.Tree, generic_argument_list720, "generic_argument_list720", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(211); }

			DebugLocation(727, 6);
			char_literal721=(IToken)Match(input,68,Follow._68_in_interface_method_declaration5224); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal721_tree = (object)adaptor.Create(char_literal721, "char_literal721", retval);
			adaptor.AddChild(root_0, char_literal721_tree);
			}
			DebugLocation(727, 12);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:727:12: ( formal_parameter_list )?
			int alt212=2;
			try { DebugEnterSubRule(212);
			try { DebugEnterDecision(212, false);
			int LA212_1 = input.LA(1);

			if ((LA212_1==IDENTIFIER||LA212_1==91||LA212_1==95||(LA212_1>=97 && LA212_1<=98)||(LA212_1>=100 && LA212_1<=101)||LA212_1==105||(LA212_1>=107 && LA212_1<=108)||LA212_1==111||LA212_1==116||LA212_1==119||(LA212_1>=121 && LA212_1<=122)||LA212_1==124||LA212_1==128||LA212_1==131||LA212_1==134||LA212_1==137||LA212_1==140||LA212_1==143||(LA212_1>=145 && LA212_1<=146)||(LA212_1>=148 && LA212_1<=150)||(LA212_1>=153 && LA212_1<=154)||(LA212_1>=156 && LA212_1<=157)||(LA212_1>=159 && LA212_1<=160)||LA212_1==162||LA212_1==164||(LA212_1>=168 && LA212_1<=169)||LA212_1==171||(LA212_1>=173 && LA212_1<=175)||LA212_1==179||LA212_1==182||LA212_1==185||(LA212_1>=187 && LA212_1<=188)||(LA212_1>=191 && LA212_1<=192)||LA212_1==194||LA212_1==196||LA212_1==198))
			{
				alt212 = 1;
			}
			} finally { DebugExitDecision(212); }
			switch (alt212)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:727:12: formal_parameter_list
				{
				DebugLocation(727, 12);
				PushFollow(Follow._formal_parameter_list_in_interface_method_declaration5228);
				formal_parameter_list722=formal_parameter_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, formal_parameter_list722.Tree, formal_parameter_list722, "formal_parameter_list722", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(212); }

			DebugLocation(727, 37);
			char_literal723=(IToken)Match(input,RPAREN,Follow._RPAREN_in_interface_method_declaration5233); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal723_tree = (object)adaptor.Create(char_literal723, "char_literal723", retval);
			adaptor.AddChild(root_0, char_literal723_tree);
			}
			DebugLocation(727, 43);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:727:43: ( type_parameter_constraints_clauses )?
			int alt213=2;
			try { DebugEnterSubRule(213);
			try { DebugEnterDecision(213, false);
			int LA213_1 = input.LA(1);

			if ((LA213_1==196))
			{
				alt213 = 1;
			}
			} finally { DebugExitDecision(213); }
			switch (alt213)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:727:43: type_parameter_constraints_clauses
				{
				DebugLocation(727, 43);
				PushFollow(Follow._type_parameter_constraints_clauses_in_interface_method_declaration5237);
				type_parameter_constraints_clauses724=type_parameter_constraints_clauses();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type_parameter_constraints_clauses724.Tree, type_parameter_constraints_clauses724, "type_parameter_constraints_clauses724", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(213); }

			DebugLocation(727, 81);
			char_literal725=(IToken)Match(input,SEMI,Follow._SEMI_in_interface_method_declaration5242); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal725_tree = (object)adaptor.Create(char_literal725, "char_literal725", retval);
			adaptor.AddChild(root_0, char_literal725_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_method_declaration", 210);
			LeaveRule("interface_method_declaration", 210);
			LeaveRule_interface_method_declaration();
			if (state.backtracking > 0) { Memoize(input, 210, interface_method_declaration_StartIndex); }

		}
		DebugLocation(727, 84);
		} finally { DebugExitRule(GrammarFileName, "interface_method_declaration"); }
		return retval;

	}
	// $ANTLR end "interface_method_declaration"

	partial void EnterRule_interface_event_declaration();
	partial void LeaveRule_interface_event_declaration();
	// $ANTLR start "interface_event_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:728:1: interface_event_declaration : 'event' type identifier ';' ;
	[GrammarRule("interface_event_declaration")]
	private Antlr3AstNode interface_event_declaration()
	{
		EnterRule_interface_event_declaration();
		EnterRule("interface_event_declaration", 211);
		var retval = new Antlr3AstNode("interface_event_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int interface_event_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal726 = default(IToken);
		IToken char_literal729 = default(IToken);
		Antlr3AstNode type727 = default(Antlr3AstNode);
		Antlr3AstNode identifier728 = default(Antlr3AstNode);

		object string_literal726_tree = default(object);
		object char_literal729_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interface_event_declaration");
		DebugLocation(728, 35);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 211)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:728:28: ( 'event' type identifier ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:730:2: 'event' type identifier ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(730, 2);
			string_literal726=(IToken)Match(input,125,Follow._125_in_interface_event_declaration5253); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal726_tree = (object)adaptor.Create(string_literal726, "string_literal726", retval);
			adaptor.AddChild(root_0, string_literal726_tree);
			}
			DebugLocation(730, 12);
			PushFollow(Follow._type_in_interface_event_declaration5257);
			type727=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type727.Tree, type727, "type727", retval);
			DebugLocation(730, 19);
			PushFollow(Follow._identifier_in_interface_event_declaration5261);
			identifier728=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier728.Tree, identifier728, "identifier728", retval);
			DebugLocation(730, 32);
			char_literal729=(IToken)Match(input,SEMI,Follow._SEMI_in_interface_event_declaration5265); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal729_tree = (object)adaptor.Create(char_literal729, "char_literal729", retval);
			adaptor.AddChild(root_0, char_literal729_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_event_declaration", 211);
			LeaveRule("interface_event_declaration", 211);
			LeaveRule_interface_event_declaration();
			if (state.backtracking > 0) { Memoize(input, 211, interface_event_declaration_StartIndex); }

		}
		DebugLocation(730, 35);
		} finally { DebugExitRule(GrammarFileName, "interface_event_declaration"); }
		return retval;

	}
	// $ANTLR end "interface_event_declaration"

	partial void EnterRule_interface_indexer_declaration();
	partial void LeaveRule_interface_indexer_declaration();
	// $ANTLR start "interface_indexer_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:731:1: interface_indexer_declaration : 'this' '[' formal_parameter_list ']' '{' interface_accessor_declarations '}' ;
	[GrammarRule("interface_indexer_declaration")]
	private Antlr3AstNode interface_indexer_declaration()
	{
		EnterRule_interface_indexer_declaration();
		EnterRule("interface_indexer_declaration", 212);
		var retval = new Antlr3AstNode("interface_indexer_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int interface_indexer_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal730 = default(IToken);
		IToken char_literal731 = default(IToken);
		IToken char_literal733 = default(IToken);
		IToken char_literal734 = default(IToken);
		IToken char_literal736 = default(IToken);
		Antlr3AstNode formal_parameter_list732 = default(Antlr3AstNode);
		Antlr3AstNode interface_accessor_declarations735 = default(Antlr3AstNode);

		object string_literal730_tree = default(object);
		object char_literal731_tree = default(object);
		object char_literal733_tree = default(object);
		object char_literal734_tree = default(object);
		object char_literal736_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interface_indexer_declaration");
		DebugLocation(731, 90);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 212)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:731:30: ( 'this' '[' formal_parameter_list ']' '{' interface_accessor_declarations '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:733:2: 'this' '[' formal_parameter_list ']' '{' interface_accessor_declarations '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(733, 2);
			string_literal730=(IToken)Match(input,182,Follow._182_in_interface_indexer_declaration5277); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal730_tree = (object)adaptor.Create(string_literal730, "string_literal730", retval);
			adaptor.AddChild(root_0, string_literal730_tree);
			}
			DebugLocation(733, 11);
			char_literal731=(IToken)Match(input,91,Follow._91_in_interface_indexer_declaration5281); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal731_tree = (object)adaptor.Create(char_literal731, "char_literal731", retval);
			adaptor.AddChild(root_0, char_literal731_tree);
			}
			DebugLocation(733, 17);
			PushFollow(Follow._formal_parameter_list_in_interface_indexer_declaration5285);
			formal_parameter_list732=formal_parameter_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, formal_parameter_list732.Tree, formal_parameter_list732, "formal_parameter_list732", retval);
			DebugLocation(733, 41);
			char_literal733=(IToken)Match(input,92,Follow._92_in_interface_indexer_declaration5289); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal733_tree = (object)adaptor.Create(char_literal733, "char_literal733", retval);
			adaptor.AddChild(root_0, char_literal733_tree);
			}
			DebugLocation(733, 47);
			char_literal734=(IToken)Match(input,199,Follow._199_in_interface_indexer_declaration5293); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal734_tree = (object)adaptor.Create(char_literal734, "char_literal734", retval);
			adaptor.AddChild(root_0, char_literal734_tree);
			}
			DebugLocation(733, 53);
			PushFollow(Follow._interface_accessor_declarations_in_interface_indexer_declaration5297);
			interface_accessor_declarations735=interface_accessor_declarations();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, interface_accessor_declarations735.Tree, interface_accessor_declarations735, "interface_accessor_declarations735", retval);
			DebugLocation(733, 87);
			char_literal736=(IToken)Match(input,203,Follow._203_in_interface_indexer_declaration5301); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal736_tree = (object)adaptor.Create(char_literal736, "char_literal736", retval);
			adaptor.AddChild(root_0, char_literal736_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_indexer_declaration", 212);
			LeaveRule("interface_indexer_declaration", 212);
			LeaveRule_interface_indexer_declaration();
			if (state.backtracking > 0) { Memoize(input, 212, interface_indexer_declaration_StartIndex); }

		}
		DebugLocation(733, 90);
		} finally { DebugExitRule(GrammarFileName, "interface_indexer_declaration"); }
		return retval;

	}
	// $ANTLR end "interface_indexer_declaration"

	partial void EnterRule_interface_accessor_declarations();
	partial void LeaveRule_interface_accessor_declarations();
	// $ANTLR start "interface_accessor_declarations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:734:1: interface_accessor_declarations : ( attributes )? ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? ) ;
	[GrammarRule("interface_accessor_declarations")]
	private Antlr3AstNode interface_accessor_declarations()
	{
		EnterRule_interface_accessor_declarations();
		EnterRule("interface_accessor_declarations", 213);
		var retval = new Antlr3AstNode("interface_accessor_declarations");
		
		retval.Start = (IToken)input.LT(1);
		int interface_accessor_declarations_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode attributes737 = default(Antlr3AstNode);
		Antlr3AstNode interface_get_accessor_declaration738 = default(Antlr3AstNode);
		Antlr3AstNode attributes739 = default(Antlr3AstNode);
		Antlr3AstNode interface_set_accessor_declaration740 = default(Antlr3AstNode);
		Antlr3AstNode interface_set_accessor_declaration741 = default(Antlr3AstNode);
		Antlr3AstNode attributes742 = default(Antlr3AstNode);
		Antlr3AstNode interface_get_accessor_declaration743 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "interface_accessor_declarations");
		DebugLocation(734, 92);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 213)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:734:32: ( ( attributes )? ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:735:2: ( attributes )? ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(735, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:735:2: ( attributes )?
			int alt214=2;
			try { DebugEnterSubRule(214);
			try { DebugEnterDecision(214, false);
			int LA214_1 = input.LA(1);

			if ((LA214_1==91))
			{
				alt214 = 1;
			}
			} finally { DebugExitDecision(214); }
			switch (alt214)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:735:2: attributes
				{
				DebugLocation(735, 2);
				PushFollow(Follow._attributes_in_interface_accessor_declarations5309);
				attributes737=attributes();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, attributes737.Tree, attributes737, "attributes737", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(214); }

			DebugLocation(736, 3);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:736:3: ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? )
			int alt219=2;
			try { DebugEnterSubRule(219);
			try { DebugEnterDecision(219, false);
			int LA219_1 = input.LA(1);

			if ((LA219_1==135))
			{
				alt219 = 1;
			}
			else if ((LA219_1==174))
			{
				alt219 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 219, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(219); }
			switch (alt219)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:736:4: interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )?
				{
				DebugLocation(736, 4);
				PushFollow(Follow._interface_get_accessor_declaration_in_interface_accessor_declarations5318);
				interface_get_accessor_declaration738=interface_get_accessor_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interface_get_accessor_declaration738.Tree, interface_get_accessor_declaration738, "interface_get_accessor_declaration738", retval);
				DebugLocation(736, 41);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:736:41: ( attributes )?
				int alt215=2;
				try { DebugEnterSubRule(215);
				try { DebugEnterDecision(215, false);
				int LA215_1 = input.LA(1);

				if ((LA215_1==91))
				{
					alt215 = 1;
				}
				} finally { DebugExitDecision(215); }
				switch (alt215)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:736:41: attributes
					{
					DebugLocation(736, 41);
					PushFollow(Follow._attributes_in_interface_accessor_declarations5322);
					attributes739=attributes();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, attributes739.Tree, attributes739, "attributes739", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(215); }

				DebugLocation(736, 55);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:736:55: ( interface_set_accessor_declaration )?
				int alt216=2;
				try { DebugEnterSubRule(216);
				try { DebugEnterDecision(216, false);
				int LA216_1 = input.LA(1);

				if ((LA216_1==174))
				{
					alt216 = 1;
				}
				} finally { DebugExitDecision(216); }
				switch (alt216)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:736:55: interface_set_accessor_declaration
					{
					DebugLocation(736, 55);
					PushFollow(Follow._interface_set_accessor_declaration_in_interface_accessor_declarations5327);
					interface_set_accessor_declaration740=interface_set_accessor_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, interface_set_accessor_declaration740.Tree, interface_set_accessor_declaration740, "interface_set_accessor_declaration740", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(216); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:737:5: interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )?
				{
				DebugLocation(737, 5);
				PushFollow(Follow._interface_set_accessor_declaration_in_interface_accessor_declarations5334);
				interface_set_accessor_declaration741=interface_set_accessor_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interface_set_accessor_declaration741.Tree, interface_set_accessor_declaration741, "interface_set_accessor_declaration741", retval);
				DebugLocation(737, 42);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:737:42: ( attributes )?
				int alt217=2;
				try { DebugEnterSubRule(217);
				try { DebugEnterDecision(217, false);
				int LA217_1 = input.LA(1);

				if ((LA217_1==91))
				{
					alt217 = 1;
				}
				} finally { DebugExitDecision(217); }
				switch (alt217)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:737:42: attributes
					{
					DebugLocation(737, 42);
					PushFollow(Follow._attributes_in_interface_accessor_declarations5338);
					attributes742=attributes();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, attributes742.Tree, attributes742, "attributes742", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(217); }

				DebugLocation(737, 56);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:737:56: ( interface_get_accessor_declaration )?
				int alt218=2;
				try { DebugEnterSubRule(218);
				try { DebugEnterDecision(218, false);
				int LA218_1 = input.LA(1);

				if ((LA218_1==135))
				{
					alt218 = 1;
				}
				} finally { DebugExitDecision(218); }
				switch (alt218)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:737:56: interface_get_accessor_declaration
					{
					DebugLocation(737, 56);
					PushFollow(Follow._interface_get_accessor_declaration_in_interface_accessor_declarations5343);
					interface_get_accessor_declaration743=interface_get_accessor_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, interface_get_accessor_declaration743.Tree, interface_get_accessor_declaration743, "interface_get_accessor_declaration743", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(218); }


				}
				break;

			}
			} finally { DebugExitSubRule(219); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_accessor_declarations", 213);
			LeaveRule("interface_accessor_declarations", 213);
			LeaveRule_interface_accessor_declarations();
			if (state.backtracking > 0) { Memoize(input, 213, interface_accessor_declarations_StartIndex); }

		}
		DebugLocation(737, 92);
		} finally { DebugExitRule(GrammarFileName, "interface_accessor_declarations"); }
		return retval;

	}
	// $ANTLR end "interface_accessor_declarations"

	partial void EnterRule_interface_get_accessor_declaration();
	partial void LeaveRule_interface_get_accessor_declaration();
	// $ANTLR start "interface_get_accessor_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:738:1: interface_get_accessor_declaration : 'get' ';' ;
	[GrammarRule("interface_get_accessor_declaration")]
	private Antlr3AstNode interface_get_accessor_declaration()
	{
		EnterRule_interface_get_accessor_declaration();
		EnterRule("interface_get_accessor_declaration", 214);
		var retval = new Antlr3AstNode("interface_get_accessor_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int interface_get_accessor_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal744 = default(IToken);
		IToken char_literal745 = default(IToken);

		object string_literal744_tree = default(object);
		object char_literal745_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interface_get_accessor_declaration");
		DebugLocation(738, 13);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 214)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:738:35: ( 'get' ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:739:2: 'get' ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(739, 2);
			string_literal744=(IToken)Match(input,135,Follow._135_in_interface_get_accessor_declaration5353); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal744_tree = (object)adaptor.Create(string_literal744, "string_literal744", retval);
			adaptor.AddChild(root_0, string_literal744_tree);
			}
			DebugLocation(739, 10);
			char_literal745=(IToken)Match(input,SEMI,Follow._SEMI_in_interface_get_accessor_declaration5357); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal745_tree = (object)adaptor.Create(char_literal745, "char_literal745", retval);
			adaptor.AddChild(root_0, char_literal745_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_get_accessor_declaration", 214);
			LeaveRule("interface_get_accessor_declaration", 214);
			LeaveRule_interface_get_accessor_declaration();
			if (state.backtracking > 0) { Memoize(input, 214, interface_get_accessor_declaration_StartIndex); }

		}
		DebugLocation(739, 13);
		} finally { DebugExitRule(GrammarFileName, "interface_get_accessor_declaration"); }
		return retval;

	}
	// $ANTLR end "interface_get_accessor_declaration"

	partial void EnterRule_interface_set_accessor_declaration();
	partial void LeaveRule_interface_set_accessor_declaration();
	// $ANTLR start "interface_set_accessor_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:740:1: interface_set_accessor_declaration : 'set' ';' ;
	[GrammarRule("interface_set_accessor_declaration")]
	private Antlr3AstNode interface_set_accessor_declaration()
	{
		EnterRule_interface_set_accessor_declaration();
		EnterRule("interface_set_accessor_declaration", 215);
		var retval = new Antlr3AstNode("interface_set_accessor_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int interface_set_accessor_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal746 = default(IToken);
		IToken char_literal747 = default(IToken);

		object string_literal746_tree = default(object);
		object char_literal747_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interface_set_accessor_declaration");
		DebugLocation(740, 13);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 215)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:740:35: ( 'set' ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:741:2: 'set' ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(741, 2);
			string_literal746=(IToken)Match(input,174,Follow._174_in_interface_set_accessor_declaration5367); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal746_tree = (object)adaptor.Create(string_literal746, "string_literal746", retval);
			adaptor.AddChild(root_0, string_literal746_tree);
			}
			DebugLocation(741, 10);
			char_literal747=(IToken)Match(input,SEMI,Follow._SEMI_in_interface_set_accessor_declaration5371); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal747_tree = (object)adaptor.Create(char_literal747, "char_literal747", retval);
			adaptor.AddChild(root_0, char_literal747_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_set_accessor_declaration", 215);
			LeaveRule("interface_set_accessor_declaration", 215);
			LeaveRule_interface_set_accessor_declaration();
			if (state.backtracking > 0) { Memoize(input, 215, interface_set_accessor_declaration_StartIndex); }

		}
		DebugLocation(741, 13);
		} finally { DebugExitRule(GrammarFileName, "interface_set_accessor_declaration"); }
		return retval;

	}
	// $ANTLR end "interface_set_accessor_declaration"

	partial void EnterRule_method_modifiers();
	partial void LeaveRule_method_modifiers();
	// $ANTLR start "method_modifiers"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:742:1: method_modifiers : ( modifier )+ ;
	[GrammarRule("method_modifiers")]
	private Antlr3AstNode method_modifiers()
	{
		EnterRule_method_modifiers();
		EnterRule("method_modifiers", 216);
		var retval = new Antlr3AstNode("method_modifiers");
		
		retval.Start = (IToken)input.LT(1);
		int method_modifiers_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode modifier748 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "method_modifiers");
		DebugLocation(742, 11);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 216)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:742:17: ( ( modifier )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:743:2: ( modifier )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(743, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:743:2: ( modifier )+
			int cnt220=0;
			try { DebugEnterSubRule(220);
			while (true)
			{
				int alt220=2;
				try { DebugEnterDecision(220, false);
				int LA220_1 = input.LA(1);

				if ((LA220_1==96||LA220_1==102||LA220_1==127||LA220_1==142||LA220_1==152||LA220_1==158||LA220_1==163||(LA220_1>=165 && LA220_1<=167)||LA220_1==172||LA220_1==178||LA220_1==190||LA220_1==193||LA220_1==195))
				{
					alt220 = 1;
				}


				} finally { DebugExitDecision(220); }
				switch (alt220)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:743:2: modifier
					{
					DebugLocation(743, 2);
					PushFollow(Follow._modifier_in_method_modifiers5381);
					modifier748=modifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, modifier748.Tree, modifier748, "modifier748", retval);

					}
					break;

				default:
					if (cnt220 >= 1)
						goto loop220;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee220 = new EarlyExitException( 220, input );
					DebugRecognitionException(eee220);
					throw eee220;
				}
				cnt220++;
			}
			loop220:
				;

			} finally { DebugExitSubRule(220); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("method_modifiers", 216);
			LeaveRule("method_modifiers", 216);
			LeaveRule_method_modifiers();
			if (state.backtracking > 0) { Memoize(input, 216, method_modifiers_StartIndex); }

		}
		DebugLocation(743, 11);
		} finally { DebugExitRule(GrammarFileName, "method_modifiers"); }
		return retval;

	}
	// $ANTLR end "method_modifiers"

	partial void EnterRule_struct_declaration();
	partial void LeaveRule_struct_declaration();
	// $ANTLR start "struct_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:746:1: struct_declaration : 'struct' type_or_generic ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( ';' )? ;
	[GrammarRule("struct_declaration")]
	private Antlr3AstNode struct_declaration()
	{
		EnterRule_struct_declaration();
		EnterRule("struct_declaration", 217);
		var retval = new Antlr3AstNode("struct_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int struct_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal749 = default(IToken);
		IToken char_literal754 = default(IToken);
		Antlr3AstNode type_or_generic750 = default(Antlr3AstNode);
		Antlr3AstNode struct_interfaces751 = default(Antlr3AstNode);
		Antlr3AstNode type_parameter_constraints_clauses752 = default(Antlr3AstNode);
		Antlr3AstNode struct_body753 = default(Antlr3AstNode);

		object string_literal749_tree = default(object);
		object char_literal754_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "struct_declaration");
		DebugLocation(746, 108);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 217)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:746:19: ( 'struct' type_or_generic ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( ';' )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:747:2: 'struct' type_or_generic ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( ';' )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(747, 2);
			string_literal749=(IToken)Match(input,180,Follow._180_in_struct_declaration5393); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal749_tree = (object)adaptor.Create(string_literal749, "string_literal749", retval);
			adaptor.AddChild(root_0, string_literal749_tree);
			}
			DebugLocation(747, 13);
			PushFollow(Follow._type_or_generic_in_struct_declaration5397);
			type_or_generic750=type_or_generic();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_or_generic750.Tree, type_or_generic750, "type_or_generic750", retval);
			DebugLocation(747, 31);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:747:31: ( struct_interfaces )?
			int alt221=2;
			try { DebugEnterSubRule(221);
			try { DebugEnterDecision(221, false);
			int LA221_1 = input.LA(1);

			if ((LA221_1==79))
			{
				alt221 = 1;
			}
			} finally { DebugExitDecision(221); }
			switch (alt221)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:747:31: struct_interfaces
				{
				DebugLocation(747, 31);
				PushFollow(Follow._struct_interfaces_in_struct_declaration5401);
				struct_interfaces751=struct_interfaces();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, struct_interfaces751.Tree, struct_interfaces751, "struct_interfaces751", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(221); }

			DebugLocation(747, 52);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:747:52: ( type_parameter_constraints_clauses )?
			int alt222=2;
			try { DebugEnterSubRule(222);
			try { DebugEnterDecision(222, false);
			int LA222_1 = input.LA(1);

			if ((LA222_1==196))
			{
				alt222 = 1;
			}
			} finally { DebugExitDecision(222); }
			switch (alt222)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:747:52: type_parameter_constraints_clauses
				{
				DebugLocation(747, 52);
				PushFollow(Follow._type_parameter_constraints_clauses_in_struct_declaration5406);
				type_parameter_constraints_clauses752=type_parameter_constraints_clauses();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type_parameter_constraints_clauses752.Tree, type_parameter_constraints_clauses752, "type_parameter_constraints_clauses752", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(222); }

			DebugLocation(747, 90);
			PushFollow(Follow._struct_body_in_struct_declaration5411);
			struct_body753=struct_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, struct_body753.Tree, struct_body753, "struct_body753", retval);
			DebugLocation(747, 104);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:747:104: ( ';' )?
			int alt223=2;
			try { DebugEnterSubRule(223);
			try { DebugEnterDecision(223, false);
			int LA223_1 = input.LA(1);

			if ((LA223_1==SEMI))
			{
				alt223 = 1;
			}
			} finally { DebugExitDecision(223); }
			switch (alt223)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:747:104: ';'
				{
				DebugLocation(747, 104);
				char_literal754=(IToken)Match(input,SEMI,Follow._SEMI_in_struct_declaration5415); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal754_tree = (object)adaptor.Create(char_literal754, "char_literal754", retval);
				adaptor.AddChild(root_0, char_literal754_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(223); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("struct_declaration", 217);
			LeaveRule("struct_declaration", 217);
			LeaveRule_struct_declaration();
			if (state.backtracking > 0) { Memoize(input, 217, struct_declaration_StartIndex); }

		}
		DebugLocation(747, 108);
		} finally { DebugExitRule(GrammarFileName, "struct_declaration"); }
		return retval;

	}
	// $ANTLR end "struct_declaration"

	partial void EnterRule_struct_modifiers();
	partial void LeaveRule_struct_modifiers();
	// $ANTLR start "struct_modifiers"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:748:1: struct_modifiers : ( struct_modifier )+ ;
	[GrammarRule("struct_modifiers")]
	private Antlr3AstNode struct_modifiers()
	{
		EnterRule_struct_modifiers();
		EnterRule("struct_modifiers", 218);
		var retval = new Antlr3AstNode("struct_modifiers");
		
		retval.Start = (IToken)input.LT(1);
		int struct_modifiers_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode struct_modifier755 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "struct_modifiers");
		DebugLocation(748, 18);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 218)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:748:17: ( ( struct_modifier )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:749:2: ( struct_modifier )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(749, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:749:2: ( struct_modifier )+
			int cnt224=0;
			try { DebugEnterSubRule(224);
			while (true)
			{
				int alt224=2;
				try { DebugEnterDecision(224, false);
				int LA224_1 = input.LA(1);

				if ((LA224_1==142||LA224_1==152||LA224_1==163||(LA224_1>=165 && LA224_1<=166)||LA224_1==190))
				{
					alt224 = 1;
				}


				} finally { DebugExitDecision(224); }
				switch (alt224)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:749:2: struct_modifier
					{
					DebugLocation(749, 2);
					PushFollow(Follow._struct_modifier_in_struct_modifiers5424);
					struct_modifier755=struct_modifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, struct_modifier755.Tree, struct_modifier755, "struct_modifier755", retval);

					}
					break;

				default:
					if (cnt224 >= 1)
						goto loop224;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee224 = new EarlyExitException( 224, input );
					DebugRecognitionException(eee224);
					throw eee224;
				}
				cnt224++;
			}
			loop224:
				;

			} finally { DebugExitSubRule(224); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("struct_modifiers", 218);
			LeaveRule("struct_modifiers", 218);
			LeaveRule_struct_modifiers();
			if (state.backtracking > 0) { Memoize(input, 218, struct_modifiers_StartIndex); }

		}
		DebugLocation(749, 18);
		} finally { DebugExitRule(GrammarFileName, "struct_modifiers"); }
		return retval;

	}
	// $ANTLR end "struct_modifiers"

	partial void EnterRule_struct_modifier();
	partial void LeaveRule_struct_modifier();
	// $ANTLR start "struct_modifier"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:750:1: struct_modifier : ( 'new' | 'public' | 'protected' | 'internal' | 'private' | 'unsafe' );
	[GrammarRule("struct_modifier")]
	private Antlr3AstNode struct_modifier()
	{
		EnterRule_struct_modifier();
		EnterRule("struct_modifier", 219);
		var retval = new Antlr3AstNode("struct_modifier");
		
		retval.Start = (IToken)input.LT(1);
		int struct_modifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set756 = default(IToken);

		object set756_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "struct_modifier");
		DebugLocation(750, 68);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 219)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:750:16: ( 'new' | 'public' | 'protected' | 'internal' | 'private' | 'unsafe' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(750, 16);

			set756=(IToken)input.LT(1);
			if (input.LA(1)==142||input.LA(1)==152||input.LA(1)==163||(input.LA(1)>=165 && input.LA(1)<=166)||input.LA(1)==190)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set756, "set756", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("struct_modifier", 219);
			LeaveRule("struct_modifier", 219);
			LeaveRule_struct_modifier();
			if (state.backtracking > 0) { Memoize(input, 219, struct_modifier_StartIndex); }

		}
		DebugLocation(751, 68);
		} finally { DebugExitRule(GrammarFileName, "struct_modifier"); }
		return retval;

	}
	// $ANTLR end "struct_modifier"

	partial void EnterRule_struct_interfaces();
	partial void LeaveRule_struct_interfaces();
	// $ANTLR start "struct_interfaces"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:752:1: struct_interfaces : ':' interface_type_list ;
	[GrammarRule("struct_interfaces")]
	private Antlr3AstNode struct_interfaces()
	{
		EnterRule_struct_interfaces();
		EnterRule("struct_interfaces", 220);
		var retval = new Antlr3AstNode("struct_interfaces");
		
		retval.Start = (IToken)input.LT(1);
		int struct_interfaces_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal757 = default(IToken);
		Antlr3AstNode interface_type_list758 = default(Antlr3AstNode);

		object char_literal757_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "struct_interfaces");
		DebugLocation(752, 26);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 220)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:752:18: ( ':' interface_type_list )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:753:2: ':' interface_type_list
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(753, 2);
			char_literal757=(IToken)Match(input,79,Follow._79_in_struct_interfaces5461); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal757_tree = (object)adaptor.Create(char_literal757, "char_literal757", retval);
			adaptor.AddChild(root_0, char_literal757_tree);
			}
			DebugLocation(753, 8);
			PushFollow(Follow._interface_type_list_in_struct_interfaces5465);
			interface_type_list758=interface_type_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, interface_type_list758.Tree, interface_type_list758, "interface_type_list758", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("struct_interfaces", 220);
			LeaveRule("struct_interfaces", 220);
			LeaveRule_struct_interfaces();
			if (state.backtracking > 0) { Memoize(input, 220, struct_interfaces_StartIndex); }

		}
		DebugLocation(753, 26);
		} finally { DebugExitRule(GrammarFileName, "struct_interfaces"); }
		return retval;

	}
	// $ANTLR end "struct_interfaces"

	partial void EnterRule_struct_body();
	partial void LeaveRule_struct_body();
	// $ANTLR start "struct_body"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:754:1: struct_body : '{' ( struct_member_declarations )? '}' ;
	[GrammarRule("struct_body")]
	private Antlr3AstNode struct_body()
	{
		EnterRule_struct_body();
		EnterRule("struct_body", 221);
		var retval = new Antlr3AstNode("struct_body");
		
		retval.Start = (IToken)input.LT(1);
		int struct_body_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal759 = default(IToken);
		IToken char_literal761 = default(IToken);
		Antlr3AstNode struct_member_declarations760 = default(Antlr3AstNode);

		object char_literal759_tree = default(object);
		object char_literal761_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "struct_body");
		DebugLocation(754, 40);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 221)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:754:12: ( '{' ( struct_member_declarations )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:755:2: '{' ( struct_member_declarations )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(755, 2);
			char_literal759=(IToken)Match(input,199,Follow._199_in_struct_body5472); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal759_tree = (object)adaptor.Create(char_literal759, "char_literal759", retval);
			adaptor.AddChild(root_0, char_literal759_tree);
			}
			DebugLocation(755, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:755:8: ( struct_member_declarations )?
			int alt225=2;
			try { DebugEnterSubRule(225);
			try { DebugEnterDecision(225, false);
			int LA225_1 = input.LA(1);

			if ((LA225_1==ENUM||LA225_1==IDENTIFIER||LA225_1==91||(LA225_1>=95 && LA225_1<=98)||(LA225_1>=100 && LA225_1<=102)||LA225_1==105||(LA225_1>=107 && LA225_1<=108)||LA225_1==111||(LA225_1>=113 && LA225_1<=114)||LA225_1==116||(LA225_1>=118 && LA225_1<=119)||(LA225_1>=121 && LA225_1<=122)||(LA225_1>=124 && LA225_1<=128)||LA225_1==131||LA225_1==134||(LA225_1>=137 && LA225_1<=138)||(LA225_1>=140 && LA225_1<=143)||(LA225_1>=145 && LA225_1<=146)||(LA225_1>=148 && LA225_1<=150)||(LA225_1>=152 && LA225_1<=154)||LA225_1==156||(LA225_1>=158 && LA225_1<=159)||(LA225_1>=161 && LA225_1<=167)||LA225_1==169||(LA225_1>=171 && LA225_1<=175)||(LA225_1>=178 && LA225_1<=180)||LA225_1==185||(LA225_1>=187 && LA225_1<=188)||(LA225_1>=190 && LA225_1<=196)||LA225_1==198))
			{
				alt225 = 1;
			}
			} finally { DebugExitDecision(225); }
			switch (alt225)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:755:8: struct_member_declarations
				{
				DebugLocation(755, 8);
				PushFollow(Follow._struct_member_declarations_in_struct_body5476);
				struct_member_declarations760=struct_member_declarations();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, struct_member_declarations760.Tree, struct_member_declarations760, "struct_member_declarations760", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(225); }

			DebugLocation(755, 38);
			char_literal761=(IToken)Match(input,203,Follow._203_in_struct_body5481); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal761_tree = (object)adaptor.Create(char_literal761, "char_literal761", retval);
			adaptor.AddChild(root_0, char_literal761_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("struct_body", 221);
			LeaveRule("struct_body", 221);
			LeaveRule_struct_body();
			if (state.backtracking > 0) { Memoize(input, 221, struct_body_StartIndex); }

		}
		DebugLocation(755, 40);
		} finally { DebugExitRule(GrammarFileName, "struct_body"); }
		return retval;

	}
	// $ANTLR end "struct_body"

	partial void EnterRule_struct_member_declarations();
	partial void LeaveRule_struct_member_declarations();
	// $ANTLR start "struct_member_declarations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:756:1: struct_member_declarations : ( struct_member_declaration )+ ;
	[GrammarRule("struct_member_declarations")]
	private Antlr3AstNode struct_member_declarations()
	{
		EnterRule_struct_member_declarations();
		EnterRule("struct_member_declarations", 222);
		var retval = new Antlr3AstNode("struct_member_declarations");
		
		retval.Start = (IToken)input.LT(1);
		int struct_member_declarations_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode struct_member_declaration762 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "struct_member_declarations");
		DebugLocation(756, 28);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 222)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:756:27: ( ( struct_member_declaration )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:757:2: ( struct_member_declaration )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(757, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:757:2: ( struct_member_declaration )+
			int cnt226=0;
			try { DebugEnterSubRule(226);
			while (true)
			{
				int alt226=2;
				try { DebugEnterDecision(226, false);
				int LA226_1 = input.LA(1);

				if ((LA226_1==ENUM||LA226_1==IDENTIFIER||LA226_1==91||(LA226_1>=95 && LA226_1<=98)||(LA226_1>=100 && LA226_1<=102)||LA226_1==105||(LA226_1>=107 && LA226_1<=108)||LA226_1==111||(LA226_1>=113 && LA226_1<=114)||LA226_1==116||(LA226_1>=118 && LA226_1<=119)||(LA226_1>=121 && LA226_1<=122)||(LA226_1>=124 && LA226_1<=128)||LA226_1==131||LA226_1==134||(LA226_1>=137 && LA226_1<=138)||(LA226_1>=140 && LA226_1<=143)||(LA226_1>=145 && LA226_1<=146)||(LA226_1>=148 && LA226_1<=150)||(LA226_1>=152 && LA226_1<=154)||LA226_1==156||(LA226_1>=158 && LA226_1<=159)||(LA226_1>=161 && LA226_1<=167)||LA226_1==169||(LA226_1>=171 && LA226_1<=175)||(LA226_1>=178 && LA226_1<=180)||LA226_1==185||(LA226_1>=187 && LA226_1<=188)||(LA226_1>=190 && LA226_1<=196)||LA226_1==198))
				{
					alt226 = 1;
				}


				} finally { DebugExitDecision(226); }
				switch (alt226)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:757:2: struct_member_declaration
					{
					DebugLocation(757, 2);
					PushFollow(Follow._struct_member_declaration_in_struct_member_declarations5488);
					struct_member_declaration762=struct_member_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, struct_member_declaration762.Tree, struct_member_declaration762, "struct_member_declaration762", retval);

					}
					break;

				default:
					if (cnt226 >= 1)
						goto loop226;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee226 = new EarlyExitException( 226, input );
					DebugRecognitionException(eee226);
					throw eee226;
				}
				cnt226++;
			}
			loop226:
				;

			} finally { DebugExitSubRule(226); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("struct_member_declarations", 222);
			LeaveRule("struct_member_declarations", 222);
			LeaveRule_struct_member_declarations();
			if (state.backtracking > 0) { Memoize(input, 222, struct_member_declarations_StartIndex); }

		}
		DebugLocation(757, 28);
		} finally { DebugExitRule(GrammarFileName, "struct_member_declarations"); }
		return retval;

	}
	// $ANTLR end "struct_member_declarations"

	partial void EnterRule_struct_member_declaration();
	partial void LeaveRule_struct_member_declaration();
	// $ANTLR start "struct_member_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:758:1: struct_member_declaration : ( attributes )? ( modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration ) ;
	[GrammarRule("struct_member_declaration")]
	private Antlr3AstNode struct_member_declaration()
	{
		EnterRule_struct_member_declaration();
		EnterRule("struct_member_declaration", 223);
		var retval = new Antlr3AstNode("struct_member_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int struct_member_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal765 = default(IToken);
		IToken char_literal768 = default(IToken);
		IToken string_literal770 = default(IToken);
		IToken string_literal777 = default(IToken);
		IToken char_literal783 = default(IToken);
		Antlr3AstNode attributes763 = default(Antlr3AstNode);
		Antlr3AstNode modifiers764 = default(Antlr3AstNode);
		Antlr3AstNode type766 = default(Antlr3AstNode);
		Antlr3AstNode constant_declarators767 = default(Antlr3AstNode);
		Antlr3AstNode event_declaration769 = default(Antlr3AstNode);
		Antlr3AstNode method_declaration771 = default(Antlr3AstNode);
		Antlr3AstNode interface_declaration772 = default(Antlr3AstNode);
		Antlr3AstNode class_declaration773 = default(Antlr3AstNode);
		Antlr3AstNode struct_declaration774 = default(Antlr3AstNode);
		Antlr3AstNode interface_declaration775 = default(Antlr3AstNode);
		Antlr3AstNode class_declaration776 = default(Antlr3AstNode);
		Antlr3AstNode method_declaration778 = default(Antlr3AstNode);
		Antlr3AstNode type779 = default(Antlr3AstNode);
		Antlr3AstNode method_declaration780 = default(Antlr3AstNode);
		Antlr3AstNode property_declaration781 = default(Antlr3AstNode);
		Antlr3AstNode type_name782 = default(Antlr3AstNode);
		Antlr3AstNode indexer_declaration784 = default(Antlr3AstNode);
		Antlr3AstNode indexer_declaration785 = default(Antlr3AstNode);
		Antlr3AstNode field_declaration786 = default(Antlr3AstNode);
		Antlr3AstNode operator_declaration787 = default(Antlr3AstNode);
		Antlr3AstNode struct_declaration788 = default(Antlr3AstNode);
		Antlr3AstNode enum_declaration789 = default(Antlr3AstNode);
		Antlr3AstNode delegate_declaration790 = default(Antlr3AstNode);
		Antlr3AstNode conversion_operator_declaration791 = default(Antlr3AstNode);
		Antlr3AstNode constructor_declaration792 = default(Antlr3AstNode);

		object string_literal765_tree = default(object);
		object char_literal768_tree = default(object);
		object string_literal770_tree = default(object);
		object string_literal777_tree = default(object);
		object char_literal783_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "struct_member_declaration");
		DebugLocation(758, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 223)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:758:26: ( ( attributes )? ( modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:759:2: ( attributes )? ( modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(759, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:759:2: ( attributes )?
			int alt227=2;
			try { DebugEnterSubRule(227);
			try { DebugEnterDecision(227, false);
			int LA227_1 = input.LA(1);

			if ((LA227_1==91))
			{
				alt227 = 1;
			}
			} finally { DebugExitDecision(227); }
			switch (alt227)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:759:2: attributes
				{
				DebugLocation(759, 2);
				PushFollow(Follow._attributes_in_struct_member_declaration5497);
				attributes763=attributes();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, attributes763.Tree, attributes763, "attributes763", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(227); }

			DebugLocation(759, 16);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:759:16: ( modifiers )?
			int alt228=2;
			try { DebugEnterSubRule(228);
			try { DebugEnterDecision(228, false);
			int LA228_1 = input.LA(1);

			if ((LA228_1==96||LA228_1==102||LA228_1==127||LA228_1==142||LA228_1==152||LA228_1==158||LA228_1==163||(LA228_1>=165 && LA228_1<=167)||LA228_1==172||LA228_1==178||LA228_1==190||LA228_1==193||LA228_1==195))
			{
				alt228 = 1;
			}
			} finally { DebugExitDecision(228); }
			switch (alt228)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:759:16: modifiers
				{
				DebugLocation(759, 16);
				PushFollow(Follow._modifiers_in_struct_member_declaration5502);
				modifiers764=modifiers();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers764.Tree, modifiers764, "modifiers764", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(228); }

			DebugLocation(760, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:760:2: ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration )
			int alt231=12;
			try { DebugEnterSubRule(231);
			try { DebugEnterDecision(231, false);
			switch (input.LA(1))
			{
			case 114:
				{
				alt231 = 1;
				}
				break;
			case 125:
				{
				alt231 = 2;
				}
				break;
			case 161:
				{
				alt231 = 3;
				}
				break;
			case 141:
				{
				alt231 = 4;
				}
				break;
			case 113:
				{
				alt231 = 5;
				}
				break;
			case 194:
				{
				int LA231_2 = input.LA(2);

				if ((LA231_2==Character_literal||LA231_2==FALSE||(LA231_2>=Hex_number && LA231_2<=IDENTIFIER)||(LA231_2>=NULL && LA231_2<=NUMBER)||LA231_2==Real_literal||LA231_2==STRINGLITERAL||LA231_2==TRUE||LA231_2==Verbatim_string_literal||LA231_2==95||(LA231_2>=97 && LA231_2<=98)||(LA231_2>=100 && LA231_2<=101)||LA231_2==105||(LA231_2>=107 && LA231_2<=108)||LA231_2==111||LA231_2==116||LA231_2==119||(LA231_2>=121 && LA231_2<=122)||LA231_2==124||LA231_2==128||LA231_2==131||LA231_2==134||LA231_2==137||LA231_2==140||LA231_2==143||(LA231_2>=145 && LA231_2<=146)||(LA231_2>=148 && LA231_2<=150)||(LA231_2>=153 && LA231_2<=154)||LA231_2==156||LA231_2==159||LA231_2==162||LA231_2==164||LA231_2==169||LA231_2==171||(LA231_2>=173 && LA231_2<=175)||LA231_2==179||LA231_2==185||(LA231_2>=187 && LA231_2<=188)||(LA231_2>=191 && LA231_2<=192)||LA231_2==196||LA231_2==198))
				{
					alt231 = 6;
				}
				else if ((LA231_2==69))
				{
					alt231 = 7;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 231, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 105:
			case 108:
			case 111:
			case 116:
			case 121:
			case 131:
			case 140:
			case 148:
			case 153:
			case 171:
			case 175:
			case 179:
			case 187:
			case 188:
			case 191:
				{
				alt231 = 7;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 107:
			case 119:
			case 122:
			case 124:
			case 128:
			case 134:
			case 137:
			case 143:
			case 145:
			case 146:
			case 149:
			case 150:
			case 154:
			case 156:
			case 159:
			case 162:
			case 164:
			case 169:
			case 173:
			case 174:
			case 185:
			case 192:
			case 196:
			case 198:
				{
				int LA231_2 = input.LA(2);

				if ((LA231_2==Character_literal||LA231_2==DOT||LA231_2==FALSE||(LA231_2>=Hex_number && LA231_2<=IDENTIFIER)||(LA231_2>=NULL && LA231_2<=NUMBER)||LA231_2==Real_literal||LA231_2==STRINGLITERAL||LA231_2==TRUE||LA231_2==Verbatim_string_literal||LA231_2==69||(LA231_2>=80 && LA231_2<=81)||LA231_2==89||LA231_2==91||LA231_2==95||(LA231_2>=97 && LA231_2<=98)||(LA231_2>=100 && LA231_2<=101)||LA231_2==105||(LA231_2>=107 && LA231_2<=108)||LA231_2==111||LA231_2==116||LA231_2==119||(LA231_2>=121 && LA231_2<=122)||LA231_2==124||LA231_2==128||LA231_2==131||LA231_2==134||LA231_2==137||LA231_2==140||LA231_2==143||(LA231_2>=145 && LA231_2<=146)||(LA231_2>=148 && LA231_2<=150)||(LA231_2>=153 && LA231_2<=156)||LA231_2==159||LA231_2==162||LA231_2==164||LA231_2==169||LA231_2==171||(LA231_2>=173 && LA231_2<=175)||LA231_2==179||LA231_2==182||LA231_2==185||(LA231_2>=187 && LA231_2<=188)||(LA231_2>=191 && LA231_2<=192)||LA231_2==196||LA231_2==198))
				{
					alt231 = 7;
				}
				else if ((LA231_2==68))
				{
					alt231 = 12;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 231, 8, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 180:
				{
				alt231 = 8;
				}
				break;
			case ENUM:
				{
				alt231 = 9;
				}
				break;
			case 118:
				{
				alt231 = 10;
				}
				break;
			case 126:
			case 138:
				{
				alt231 = 11;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 231, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(231); }
			switch (alt231)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:760:4: 'const' type constant_declarators ';'
				{
				DebugLocation(760, 4);
				string_literal765=(IToken)Match(input,114,Follow._114_in_struct_member_declaration5508); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal765_tree = (object)adaptor.Create(string_literal765, "string_literal765", retval);
				adaptor.AddChild(root_0, string_literal765_tree);
				}
				DebugLocation(760, 14);
				PushFollow(Follow._type_in_struct_member_declaration5512);
				type766=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type766.Tree, type766, "type766", retval);
				DebugLocation(760, 21);
				PushFollow(Follow._constant_declarators_in_struct_member_declaration5516);
				constant_declarators767=constant_declarators();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constant_declarators767.Tree, constant_declarators767, "constant_declarators767", retval);
				DebugLocation(760, 44);
				char_literal768=(IToken)Match(input,SEMI,Follow._SEMI_in_struct_member_declaration5520); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal768_tree = (object)adaptor.Create(char_literal768, "char_literal768", retval);
				adaptor.AddChild(root_0, char_literal768_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:761:4: event_declaration
				{
				DebugLocation(761, 4);
				PushFollow(Follow._event_declaration_in_struct_member_declaration5525);
				event_declaration769=event_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, event_declaration769.Tree, event_declaration769, "event_declaration769", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:762:4: 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration )
				{
				DebugLocation(762, 4);
				string_literal770=(IToken)Match(input,161,Follow._161_in_struct_member_declaration5532); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal770_tree = (object)adaptor.Create(string_literal770, "string_literal770", retval);
				adaptor.AddChild(root_0, string_literal770_tree);
				}
				DebugLocation(762, 14);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:762:14: ( method_declaration | interface_declaration | class_declaration | struct_declaration )
				int alt229=4;
				try { DebugEnterSubRule(229);
				try { DebugEnterDecision(229, false);
				switch (input.LA(1))
				{
				case Character_literal:
				case FALSE:
				case Hex_number:
				case IDENTIFIER:
				case NULL:
				case NUMBER:
				case Real_literal:
				case STRINGLITERAL:
				case TRUE:
				case Verbatim_string_literal:
				case 95:
				case 97:
				case 98:
				case 100:
				case 101:
				case 105:
				case 107:
				case 108:
				case 111:
				case 116:
				case 119:
				case 121:
				case 122:
				case 124:
				case 128:
				case 131:
				case 134:
				case 137:
				case 140:
				case 143:
				case 145:
				case 146:
				case 148:
				case 149:
				case 150:
				case 153:
				case 154:
				case 156:
				case 159:
				case 162:
				case 164:
				case 169:
				case 171:
				case 173:
				case 174:
				case 175:
				case 179:
				case 185:
				case 187:
				case 188:
				case 191:
				case 192:
				case 196:
				case 198:
					{
					alt229 = 1;
					}
					break;
				case 141:
					{
					alt229 = 2;
					}
					break;
				case 113:
					{
					alt229 = 3;
					}
					break;
				case 180:
					{
					alt229 = 4;
					}
					break;
				default:
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 229, 0, input, 1);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}

				} finally { DebugExitDecision(229); }
				switch (alt229)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:762:15: method_declaration
					{
					DebugLocation(762, 15);
					PushFollow(Follow._method_declaration_in_struct_member_declaration5535);
					method_declaration771=method_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, method_declaration771.Tree, method_declaration771, "method_declaration771", retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:763:9: interface_declaration
					{
					DebugLocation(763, 9);
					PushFollow(Follow._interface_declaration_in_struct_member_declaration5546);
					interface_declaration772=interface_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, interface_declaration772.Tree, interface_declaration772, "interface_declaration772", retval);

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:764:9: class_declaration
					{
					DebugLocation(764, 9);
					PushFollow(Follow._class_declaration_in_struct_member_declaration5557);
					class_declaration773=class_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, class_declaration773.Tree, class_declaration773, "class_declaration773", retval);

					}
					break;
				case 4:
					DebugEnterAlt(4);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:765:9: struct_declaration
					{
					DebugLocation(765, 9);
					PushFollow(Follow._struct_declaration_in_struct_member_declaration5568);
					struct_declaration774=struct_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, struct_declaration774.Tree, struct_declaration774, "struct_declaration774", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(229); }


				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:767:4: interface_declaration
				{
				DebugLocation(767, 4);
				PushFollow(Follow._interface_declaration_in_struct_member_declaration5575);
				interface_declaration775=interface_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interface_declaration775.Tree, interface_declaration775, "interface_declaration775", retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:768:4: class_declaration
				{
				DebugLocation(768, 4);
				PushFollow(Follow._class_declaration_in_struct_member_declaration5581);
				class_declaration776=class_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, class_declaration776.Tree, class_declaration776, "class_declaration776", retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:769:4: 'void' method_declaration
				{
				DebugLocation(769, 4);
				string_literal777=(IToken)Match(input,194,Follow._194_in_struct_member_declaration5588); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal777_tree = (object)adaptor.Create(string_literal777, "string_literal777", retval);
				adaptor.AddChild(root_0, string_literal777_tree);
				}
				DebugLocation(769, 13);
				PushFollow(Follow._method_declaration_in_struct_member_declaration5592);
				method_declaration778=method_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, method_declaration778.Tree, method_declaration778, "method_declaration778", retval);

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:770:4: type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )
				{
				DebugLocation(770, 4);
				PushFollow(Follow._type_in_struct_member_declaration5597);
				type779=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type779.Tree, type779, "type779", retval);
				DebugLocation(770, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:770:9: ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )
				int alt230=6;
				try { DebugEnterSubRule(230);
				try { DebugEnterDecision(230, false);
				switch (input.LA(1))
				{
				case 105:
				case 108:
				case 111:
				case 116:
				case 121:
				case 131:
				case 140:
				case 148:
				case 153:
				case 171:
				case 175:
				case 179:
				case 187:
				case 188:
				case 191:
					{
					int LA230_2 = input.LA(2);

					if ((EvaluatePredicate(synpred25_cs_fragment)))
					{
						alt230 = 1;
					}
					else if ((EvaluatePredicate(synpred26_cs_fragment)))
					{
						alt230 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 230, 1, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					}
					break;
				case IDENTIFIER:
				case 95:
				case 97:
				case 98:
				case 100:
				case 101:
				case 107:
				case 119:
				case 122:
				case 124:
				case 128:
				case 134:
				case 137:
				case 143:
				case 145:
				case 146:
				case 149:
				case 150:
				case 154:
				case 156:
				case 159:
				case 162:
				case 164:
				case 169:
				case 173:
				case 174:
				case 185:
				case 192:
				case 196:
				case 198:
					{
					int LA230_2 = input.LA(2);

					if ((EvaluatePredicate(synpred25_cs_fragment)))
					{
						alt230 = 1;
					}
					else if ((EvaluatePredicate(synpred26_cs_fragment)))
					{
						alt230 = 2;
					}
					else if ((EvaluatePredicate(synpred27_cs_fragment)))
					{
						alt230 = 3;
					}
					else if ((true))
					{
						alt230 = 5;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 230, 2, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					}
					break;
				case Character_literal:
				case FALSE:
				case Hex_number:
				case NULL:
				case NUMBER:
				case Real_literal:
				case STRINGLITERAL:
				case TRUE:
				case Verbatim_string_literal:
					{
					int LA230_2 = input.LA(2);

					if ((EvaluatePredicate(synpred25_cs_fragment)))
					{
						alt230 = 1;
					}
					else if ((EvaluatePredicate(synpred26_cs_fragment)))
					{
						alt230 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 230, 3, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					}
					break;
				case 182:
					{
					alt230 = 4;
					}
					break;
				case 155:
					{
					alt230 = 6;
					}
					break;
				default:
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 230, 0, input, 1);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}

				} finally { DebugExitDecision(230); }
				switch (alt230)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:770:11: ( member_name '(' )=> method_declaration
					{
					DebugLocation(770, 34);
					PushFollow(Follow._method_declaration_in_struct_member_declaration5611);
					method_declaration780=method_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, method_declaration780.Tree, method_declaration780, "method_declaration780", retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:771:8: ( member_name '{' )=> property_declaration
					{
					DebugLocation(771, 31);
					PushFollow(Follow._property_declaration_in_struct_member_declaration5630);
					property_declaration781=property_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, property_declaration781.Tree, property_declaration781, "property_declaration781", retval);

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:772:8: ( member_name '.' 'this' )=> type_name '.' indexer_declaration
					{
					DebugLocation(772, 40);
					PushFollow(Follow._type_name_in_struct_member_declaration5653);
					type_name782=type_name();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type_name782.Tree, type_name782, "type_name782", retval);
					DebugLocation(772, 50);
					char_literal783=(IToken)Match(input,DOT,Follow._DOT_in_struct_member_declaration5655); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal783_tree = (object)adaptor.Create(char_literal783, "char_literal783", retval);
					adaptor.AddChild(root_0, char_literal783_tree);
					}
					DebugLocation(772, 54);
					PushFollow(Follow._indexer_declaration_in_struct_member_declaration5657);
					indexer_declaration784=indexer_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, indexer_declaration784.Tree, indexer_declaration784, "indexer_declaration784", retval);

					}
					break;
				case 4:
					DebugEnterAlt(4);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:773:8: indexer_declaration
					{
					DebugLocation(773, 8);
					PushFollow(Follow._indexer_declaration_in_struct_member_declaration5666);
					indexer_declaration785=indexer_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, indexer_declaration785.Tree, indexer_declaration785, "indexer_declaration785", retval);

					}
					break;
				case 5:
					DebugEnterAlt(5);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:774:11: field_declaration
					{
					DebugLocation(774, 11);
					PushFollow(Follow._field_declaration_in_struct_member_declaration5679);
					field_declaration786=field_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, field_declaration786.Tree, field_declaration786, "field_declaration786", retval);

					}
					break;
				case 6:
					DebugEnterAlt(6);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:775:11: operator_declaration
					{
					DebugLocation(775, 11);
					PushFollow(Follow._operator_declaration_in_struct_member_declaration5697);
					operator_declaration787=operator_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, operator_declaration787.Tree, operator_declaration787, "operator_declaration787", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(230); }


				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:779:4: struct_declaration
				{
				DebugLocation(779, 4);
				PushFollow(Follow._struct_declaration_in_struct_member_declaration5715);
				struct_declaration788=struct_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, struct_declaration788.Tree, struct_declaration788, "struct_declaration788", retval);

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:780:4: enum_declaration
				{
				DebugLocation(780, 4);
				PushFollow(Follow._enum_declaration_in_struct_member_declaration5721);
				enum_declaration789=enum_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enum_declaration789.Tree, enum_declaration789, "enum_declaration789", retval);

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:781:4: delegate_declaration
				{
				DebugLocation(781, 4);
				PushFollow(Follow._delegate_declaration_in_struct_member_declaration5728);
				delegate_declaration790=delegate_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, delegate_declaration790.Tree, delegate_declaration790, "delegate_declaration790", retval);

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:782:4: conversion_operator_declaration
				{
				DebugLocation(782, 4);
				PushFollow(Follow._conversion_operator_declaration_in_struct_member_declaration5734);
				conversion_operator_declaration791=conversion_operator_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, conversion_operator_declaration791.Tree, conversion_operator_declaration791, "conversion_operator_declaration791", retval);

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:783:4: constructor_declaration
				{
				DebugLocation(783, 4);
				PushFollow(Follow._constructor_declaration_in_struct_member_declaration5739);
				constructor_declaration792=constructor_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constructor_declaration792.Tree, constructor_declaration792, "constructor_declaration792", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(231); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("struct_member_declaration", 223);
			LeaveRule("struct_member_declaration", 223);
			LeaveRule_struct_member_declaration();
			if (state.backtracking > 0) { Memoize(input, 223, struct_member_declaration_StartIndex); }

		}
		DebugLocation(785, 1);
		} finally { DebugExitRule(GrammarFileName, "struct_member_declaration"); }
		return retval;

	}
	// $ANTLR end "struct_member_declaration"

	partial void EnterRule_indexer_declaration();
	partial void LeaveRule_indexer_declaration();
	// $ANTLR start "indexer_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:789:1: indexer_declaration : indexer_declarator '{' accessor_declarations '}' ;
	[GrammarRule("indexer_declaration")]
	private Antlr3AstNode indexer_declaration()
	{
		EnterRule_indexer_declaration();
		EnterRule("indexer_declaration", 224);
		var retval = new Antlr3AstNode("indexer_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int indexer_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal794 = default(IToken);
		IToken char_literal796 = default(IToken);
		Antlr3AstNode indexer_declarator793 = default(Antlr3AstNode);
		Antlr3AstNode accessor_declarations795 = default(Antlr3AstNode);

		object char_literal794_tree = default(object);
		object char_literal796_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "indexer_declaration");
		DebugLocation(789, 56);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 224)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:789:20: ( indexer_declarator '{' accessor_declarations '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:790:2: indexer_declarator '{' accessor_declarations '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(790, 2);
			PushFollow(Follow._indexer_declarator_in_indexer_declaration5756);
			indexer_declarator793=indexer_declarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, indexer_declarator793.Tree, indexer_declarator793, "indexer_declarator793", retval);
			DebugLocation(790, 23);
			char_literal794=(IToken)Match(input,199,Follow._199_in_indexer_declaration5760); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal794_tree = (object)adaptor.Create(char_literal794, "char_literal794", retval);
			adaptor.AddChild(root_0, char_literal794_tree);
			}
			DebugLocation(790, 29);
			PushFollow(Follow._accessor_declarations_in_indexer_declaration5764);
			accessor_declarations795=accessor_declarations();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, accessor_declarations795.Tree, accessor_declarations795, "accessor_declarations795", retval);
			DebugLocation(790, 53);
			char_literal796=(IToken)Match(input,203,Follow._203_in_indexer_declaration5768); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal796_tree = (object)adaptor.Create(char_literal796, "char_literal796", retval);
			adaptor.AddChild(root_0, char_literal796_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("indexer_declaration", 224);
			LeaveRule("indexer_declaration", 224);
			LeaveRule_indexer_declaration();
			if (state.backtracking > 0) { Memoize(input, 224, indexer_declaration_StartIndex); }

		}
		DebugLocation(790, 56);
		} finally { DebugExitRule(GrammarFileName, "indexer_declaration"); }
		return retval;

	}
	// $ANTLR end "indexer_declaration"

	partial void EnterRule_indexer_declarator();
	partial void LeaveRule_indexer_declarator();
	// $ANTLR start "indexer_declarator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:791:1: indexer_declarator : 'this' '[' formal_parameter_list ']' ;
	[GrammarRule("indexer_declarator")]
	private Antlr3AstNode indexer_declarator()
	{
		EnterRule_indexer_declarator();
		EnterRule("indexer_declarator", 225);
		var retval = new Antlr3AstNode("indexer_declarator");
		
		retval.Start = (IToken)input.LT(1);
		int indexer_declarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal797 = default(IToken);
		IToken char_literal798 = default(IToken);
		IToken char_literal800 = default(IToken);
		Antlr3AstNode formal_parameter_list799 = default(Antlr3AstNode);

		object string_literal797_tree = default(object);
		object char_literal798_tree = default(object);
		object char_literal800_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "indexer_declarator");
		DebugLocation(791, 44);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 225)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:791:19: ( 'this' '[' formal_parameter_list ']' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:793:2: 'this' '[' formal_parameter_list ']'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(793, 2);
			string_literal797=(IToken)Match(input,182,Follow._182_in_indexer_declarator5778); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal797_tree = (object)adaptor.Create(string_literal797, "string_literal797", retval);
			adaptor.AddChild(root_0, string_literal797_tree);
			}
			DebugLocation(793, 11);
			char_literal798=(IToken)Match(input,91,Follow._91_in_indexer_declarator5782); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal798_tree = (object)adaptor.Create(char_literal798, "char_literal798", retval);
			adaptor.AddChild(root_0, char_literal798_tree);
			}
			DebugLocation(793, 17);
			PushFollow(Follow._formal_parameter_list_in_indexer_declarator5786);
			formal_parameter_list799=formal_parameter_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, formal_parameter_list799.Tree, formal_parameter_list799, "formal_parameter_list799", retval);
			DebugLocation(793, 41);
			char_literal800=(IToken)Match(input,92,Follow._92_in_indexer_declarator5790); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal800_tree = (object)adaptor.Create(char_literal800, "char_literal800", retval);
			adaptor.AddChild(root_0, char_literal800_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("indexer_declarator", 225);
			LeaveRule("indexer_declarator", 225);
			LeaveRule_indexer_declarator();
			if (state.backtracking > 0) { Memoize(input, 225, indexer_declarator_StartIndex); }

		}
		DebugLocation(793, 44);
		} finally { DebugExitRule(GrammarFileName, "indexer_declarator"); }
		return retval;

	}
	// $ANTLR end "indexer_declarator"

	partial void EnterRule_operator_declaration();
	partial void LeaveRule_operator_declaration();
	// $ANTLR start "operator_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:796:1: operator_declaration : operator_declarator operator_body ;
	[GrammarRule("operator_declaration")]
	private Antlr3AstNode operator_declaration()
	{
		EnterRule_operator_declaration();
		EnterRule("operator_declaration", 226);
		var retval = new Antlr3AstNode("operator_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int operator_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode operator_declarator801 = default(Antlr3AstNode);
		Antlr3AstNode operator_body802 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "operator_declaration");
		DebugLocation(796, 37);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 226)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:796:21: ( operator_declarator operator_body )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:797:2: operator_declarator operator_body
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(797, 2);
			PushFollow(Follow._operator_declarator_in_operator_declaration5801);
			operator_declarator801=operator_declarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, operator_declarator801.Tree, operator_declarator801, "operator_declarator801", retval);
			DebugLocation(797, 24);
			PushFollow(Follow._operator_body_in_operator_declaration5805);
			operator_body802=operator_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, operator_body802.Tree, operator_body802, "operator_body802", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("operator_declaration", 226);
			LeaveRule("operator_declaration", 226);
			LeaveRule_operator_declaration();
			if (state.backtracking > 0) { Memoize(input, 226, operator_declaration_StartIndex); }

		}
		DebugLocation(797, 37);
		} finally { DebugExitRule(GrammarFileName, "operator_declaration"); }
		return retval;

	}
	// $ANTLR end "operator_declaration"

	partial void EnterRule_operator_declarator();
	partial void LeaveRule_operator_declarator();
	// $ANTLR start "operator_declarator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:798:1: operator_declarator : 'operator' ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator unary_operator_declarator | overloadable_binary_operator binary_operator_declarator ) ;
	[GrammarRule("operator_declarator")]
	private Antlr3AstNode operator_declarator()
	{
		EnterRule_operator_declarator();
		EnterRule("operator_declarator", 227);
		var retval = new Antlr3AstNode("operator_declarator");
		
		retval.Start = (IToken)input.LT(1);
		int operator_declarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal803 = default(IToken);
		IToken set804 = default(IToken);
		IToken char_literal805 = default(IToken);
		Antlr3AstNode type806 = default(Antlr3AstNode);
		Antlr3AstNode identifier807 = default(Antlr3AstNode);
		Antlr3AstNode binary_operator_declarator808 = default(Antlr3AstNode);
		Antlr3AstNode unary_operator_declarator809 = default(Antlr3AstNode);
		Antlr3AstNode overloadable_unary_operator810 = default(Antlr3AstNode);
		Antlr3AstNode unary_operator_declarator811 = default(Antlr3AstNode);
		Antlr3AstNode overloadable_binary_operator812 = default(Antlr3AstNode);
		Antlr3AstNode binary_operator_declarator813 = default(Antlr3AstNode);

		object string_literal803_tree = default(object);
		object set804_tree = default(object);
		object char_literal805_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "operator_declarator");
		DebugLocation(798, 63);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 227)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:798:20: ( 'operator' ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator unary_operator_declarator | overloadable_binary_operator binary_operator_declarator ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:799:2: 'operator' ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator unary_operator_declarator | overloadable_binary_operator binary_operator_declarator )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(799, 2);
			string_literal803=(IToken)Match(input,155,Follow._155_in_operator_declarator5813); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal803_tree = (object)adaptor.Create(string_literal803, "string_literal803", retval);
			adaptor.AddChild(root_0, string_literal803_tree);
			}
			DebugLocation(800, 3);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:800:3: ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator unary_operator_declarator | overloadable_binary_operator binary_operator_declarator )
			int alt233=3;
			try { DebugEnterSubRule(233);
			try { DebugEnterDecision(233, false);
			switch (input.LA(1))
			{
			case MINUS:
			case 71:
				{
				alt233 = 1;
				}
				break;
			case FALSE:
			case TRUE:
			case 61:
			case 72:
			case 75:
			case 204:
				{
				alt233 = 2;
				}
				break;
			case GT:
			case 62:
			case 63:
			case 66:
			case 69:
			case 77:
			case 81:
			case 82:
			case 84:
			case 86:
			case 88:
			case 93:
			case 200:
				{
				alt233 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 233, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(233); }
			switch (alt233)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:800:4: ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator )
				{
				DebugLocation(800, 4);

				set804=(IToken)input.LT(1);
				if (input.LA(1)==MINUS||input.LA(1)==71)
				{
					input.Consume();
					if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set804, "set804", retval));
					state.errorRecovery=false;state.failed=false;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					DebugRecognitionException(mse);
					throw mse;
				}

				DebugLocation(800, 18);
				char_literal805=(IToken)Match(input,68,Follow._68_in_operator_declarator5831); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal805_tree = (object)adaptor.Create(char_literal805, "char_literal805", retval);
				adaptor.AddChild(root_0, char_literal805_tree);
				}
				DebugLocation(800, 24);
				PushFollow(Follow._type_in_operator_declarator5835);
				type806=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type806.Tree, type806, "type806", retval);
				DebugLocation(800, 31);
				PushFollow(Follow._identifier_in_operator_declarator5839);
				identifier807=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier807.Tree, identifier807, "identifier807", retval);
				DebugLocation(800, 42);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:800:42: ( binary_operator_declarator | unary_operator_declarator )
				int alt232=2;
				try { DebugEnterSubRule(232);
				try { DebugEnterDecision(232, false);
				int LA232_1 = input.LA(1);

				if ((LA232_1==74))
				{
					alt232 = 1;
				}
				else if ((LA232_1==RPAREN))
				{
					alt232 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 232, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(232); }
				switch (alt232)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:800:43: binary_operator_declarator
					{
					DebugLocation(800, 43);
					PushFollow(Follow._binary_operator_declarator_in_operator_declarator5842);
					binary_operator_declarator808=binary_operator_declarator();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, binary_operator_declarator808.Tree, binary_operator_declarator808, "binary_operator_declarator808", retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:800:72: unary_operator_declarator
					{
					DebugLocation(800, 72);
					PushFollow(Follow._unary_operator_declarator_in_operator_declarator5846);
					unary_operator_declarator809=unary_operator_declarator();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, unary_operator_declarator809.Tree, unary_operator_declarator809, "unary_operator_declarator809", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(232); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:801:5: overloadable_unary_operator unary_operator_declarator
				{
				DebugLocation(801, 5);
				PushFollow(Follow._overloadable_unary_operator_in_operator_declarator5853);
				overloadable_unary_operator810=overloadable_unary_operator();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, overloadable_unary_operator810.Tree, overloadable_unary_operator810, "overloadable_unary_operator810", retval);
				DebugLocation(801, 35);
				PushFollow(Follow._unary_operator_declarator_in_operator_declarator5857);
				unary_operator_declarator811=unary_operator_declarator();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unary_operator_declarator811.Tree, unary_operator_declarator811, "unary_operator_declarator811", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:802:5: overloadable_binary_operator binary_operator_declarator
				{
				DebugLocation(802, 5);
				PushFollow(Follow._overloadable_binary_operator_in_operator_declarator5863);
				overloadable_binary_operator812=overloadable_binary_operator();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, overloadable_binary_operator812.Tree, overloadable_binary_operator812, "overloadable_binary_operator812", retval);
				DebugLocation(802, 36);
				PushFollow(Follow._binary_operator_declarator_in_operator_declarator5867);
				binary_operator_declarator813=binary_operator_declarator();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, binary_operator_declarator813.Tree, binary_operator_declarator813, "binary_operator_declarator813", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(233); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("operator_declarator", 227);
			LeaveRule("operator_declarator", 227);
			LeaveRule_operator_declarator();
			if (state.backtracking > 0) { Memoize(input, 227, operator_declarator_StartIndex); }

		}
		DebugLocation(802, 63);
		} finally { DebugExitRule(GrammarFileName, "operator_declarator"); }
		return retval;

	}
	// $ANTLR end "operator_declarator"

	partial void EnterRule_unary_operator_declarator();
	partial void LeaveRule_unary_operator_declarator();
	// $ANTLR start "unary_operator_declarator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:803:1: unary_operator_declarator : ')' ;
	[GrammarRule("unary_operator_declarator")]
	private Antlr3AstNode unary_operator_declarator()
	{
		EnterRule_unary_operator_declarator();
		EnterRule("unary_operator_declarator", 228);
		var retval = new Antlr3AstNode("unary_operator_declarator");
		
		retval.Start = (IToken)input.LT(1);
		int unary_operator_declarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal814 = default(IToken);

		object char_literal814_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "unary_operator_declarator");
		DebugLocation(803, 8);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 228)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:803:26: ( ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:804:5: ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(804, 5);
			char_literal814=(IToken)Match(input,RPAREN,Follow._RPAREN_in_unary_operator_declarator5879); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal814_tree = (object)adaptor.Create(char_literal814, "char_literal814", retval);
			adaptor.AddChild(root_0, char_literal814_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unary_operator_declarator", 228);
			LeaveRule("unary_operator_declarator", 228);
			LeaveRule_unary_operator_declarator();
			if (state.backtracking > 0) { Memoize(input, 228, unary_operator_declarator_StartIndex); }

		}
		DebugLocation(804, 8);
		} finally { DebugExitRule(GrammarFileName, "unary_operator_declarator"); }
		return retval;

	}
	// $ANTLR end "unary_operator_declarator"

	partial void EnterRule_overloadable_unary_operator();
	partial void LeaveRule_overloadable_unary_operator();
	// $ANTLR start "overloadable_unary_operator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:805:1: overloadable_unary_operator : ( '!' | '~' | '++' | '--' | 'true' | 'false' );
	[GrammarRule("overloadable_unary_operator")]
	private Antlr3AstNode overloadable_unary_operator()
	{
		EnterRule_overloadable_unary_operator();
		EnterRule("overloadable_unary_operator", 229);
		var retval = new Antlr3AstNode("overloadable_unary_operator");
		
		retval.Start = (IToken)input.LT(1);
		int overloadable_unary_operator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set815 = default(IToken);

		object set815_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "overloadable_unary_operator");
		DebugLocation(805, 67);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 229)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:805:28: ( '!' | '~' | '++' | '--' | 'true' | 'false' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(805, 28);

			set815=(IToken)input.LT(1);
			if (input.LA(1)==FALSE||input.LA(1)==TRUE||input.LA(1)==61||input.LA(1)==72||input.LA(1)==75||input.LA(1)==204)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set815, "set815", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("overloadable_unary_operator", 229);
			LeaveRule("overloadable_unary_operator", 229);
			LeaveRule_overloadable_unary_operator();
			if (state.backtracking > 0) { Memoize(input, 229, overloadable_unary_operator_StartIndex); }

		}
		DebugLocation(806, 67);
		} finally { DebugExitRule(GrammarFileName, "overloadable_unary_operator"); }
		return retval;

	}
	// $ANTLR end "overloadable_unary_operator"

	partial void EnterRule_binary_operator_declarator();
	partial void LeaveRule_binary_operator_declarator();
	// $ANTLR start "binary_operator_declarator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:807:1: binary_operator_declarator : ',' type identifier ')' ;
	[GrammarRule("binary_operator_declarator")]
	private Antlr3AstNode binary_operator_declarator()
	{
		EnterRule_binary_operator_declarator();
		EnterRule("binary_operator_declarator", 230);
		var retval = new Antlr3AstNode("binary_operator_declarator");
		
		retval.Start = (IToken)input.LT(1);
		int binary_operator_declarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal816 = default(IToken);
		IToken char_literal819 = default(IToken);
		Antlr3AstNode type817 = default(Antlr3AstNode);
		Antlr3AstNode identifier818 = default(Antlr3AstNode);

		object char_literal816_tree = default(object);
		object char_literal819_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "binary_operator_declarator");
		DebugLocation(807, 31);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 230)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:807:27: ( ',' type identifier ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:808:2: ',' type identifier ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(808, 2);
			char_literal816=(IToken)Match(input,74,Follow._74_in_binary_operator_declarator5922); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal816_tree = (object)adaptor.Create(char_literal816, "char_literal816", retval);
			adaptor.AddChild(root_0, char_literal816_tree);
			}
			DebugLocation(808, 8);
			PushFollow(Follow._type_in_binary_operator_declarator5926);
			type817=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type817.Tree, type817, "type817", retval);
			DebugLocation(808, 15);
			PushFollow(Follow._identifier_in_binary_operator_declarator5930);
			identifier818=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier818.Tree, identifier818, "identifier818", retval);
			DebugLocation(808, 28);
			char_literal819=(IToken)Match(input,RPAREN,Follow._RPAREN_in_binary_operator_declarator5934); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal819_tree = (object)adaptor.Create(char_literal819, "char_literal819", retval);
			adaptor.AddChild(root_0, char_literal819_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("binary_operator_declarator", 230);
			LeaveRule("binary_operator_declarator", 230);
			LeaveRule_binary_operator_declarator();
			if (state.backtracking > 0) { Memoize(input, 230, binary_operator_declarator_StartIndex); }

		}
		DebugLocation(808, 31);
		} finally { DebugExitRule(GrammarFileName, "binary_operator_declarator"); }
		return retval;

	}
	// $ANTLR end "binary_operator_declarator"

	partial void EnterRule_overloadable_binary_operator();
	partial void LeaveRule_overloadable_binary_operator();
	// $ANTLR start "overloadable_binary_operator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:810:1: overloadable_binary_operator : ( '*' | '/' | '%' | '&' | '|' | '^' | '<<' | '>' '>' | '==' | '!=' | '>' | '<' | '>=' | '<=' );
	[GrammarRule("overloadable_binary_operator")]
	private Antlr3AstNode overloadable_binary_operator()
	{
		EnterRule_overloadable_binary_operator();
		EnterRule("overloadable_binary_operator", 231);
		var retval = new Antlr3AstNode("overloadable_binary_operator");
		
		retval.Start = (IToken)input.LT(1);
		int overloadable_binary_operator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal820 = default(IToken);
		IToken char_literal821 = default(IToken);
		IToken char_literal822 = default(IToken);
		IToken char_literal823 = default(IToken);
		IToken char_literal824 = default(IToken);
		IToken char_literal825 = default(IToken);
		IToken string_literal826 = default(IToken);
		IToken char_literal827 = default(IToken);
		IToken char_literal828 = default(IToken);
		IToken string_literal829 = default(IToken);
		IToken string_literal830 = default(IToken);
		IToken char_literal831 = default(IToken);
		IToken char_literal832 = default(IToken);
		IToken string_literal833 = default(IToken);
		IToken string_literal834 = default(IToken);

		object char_literal820_tree = default(object);
		object char_literal821_tree = default(object);
		object char_literal822_tree = default(object);
		object char_literal823_tree = default(object);
		object char_literal824_tree = default(object);
		object char_literal825_tree = default(object);
		object string_literal826_tree = default(object);
		object char_literal827_tree = default(object);
		object char_literal828_tree = default(object);
		object string_literal829_tree = default(object);
		object string_literal830_tree = default(object);
		object char_literal831_tree = default(object);
		object char_literal832_tree = default(object);
		object string_literal833_tree = default(object);
		object string_literal834_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "overloadable_binary_operator");
		DebugLocation(810, 109);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 231)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:810:29: ( '*' | '/' | '%' | '&' | '|' | '^' | '<<' | '>' '>' | '==' | '!=' | '>' | '<' | '>=' | '<=' )
			int alt234=14;
			try { DebugEnterDecision(234, false);
			switch (input.LA(1))
			{
			case 69:
				{
				alt234 = 1;
				}
				break;
			case 77:
				{
				alt234 = 2;
				}
				break;
			case 63:
				{
				alt234 = 3;
				}
				break;
			case 66:
				{
				alt234 = 4;
				}
				break;
			case 200:
				{
				alt234 = 5;
				}
				break;
			case 93:
				{
				alt234 = 6;
				}
				break;
			case 82:
				{
				alt234 = 7;
				}
				break;
			case GT:
				{
				int LA234_2 = input.LA(2);

				if ((LA234_2==GT))
				{
					alt234 = 8;
				}
				else if ((LA234_2==74))
				{
					alt234 = 11;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 234, 8, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 86:
				{
				alt234 = 9;
				}
				break;
			case 62:
				{
				alt234 = 10;
				}
				break;
			case 81:
				{
				alt234 = 12;
				}
				break;
			case 88:
				{
				alt234 = 13;
				}
				break;
			case 84:
				{
				alt234 = 14;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 234, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(234); }
			switch (alt234)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:811:19: '*'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(811, 19);
				char_literal820=(IToken)Match(input,69,Follow._69_in_overloadable_binary_operator5945); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal820_tree = (object)adaptor.Create(char_literal820, "char_literal820", retval);
				adaptor.AddChild(root_0, char_literal820_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:811:25: '/'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(811, 25);
				char_literal821=(IToken)Match(input,77,Follow._77_in_overloadable_binary_operator5949); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal821_tree = (object)adaptor.Create(char_literal821, "char_literal821", retval);
				adaptor.AddChild(root_0, char_literal821_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:811:31: '%'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(811, 31);
				char_literal822=(IToken)Match(input,63,Follow._63_in_overloadable_binary_operator5953); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal822_tree = (object)adaptor.Create(char_literal822, "char_literal822", retval);
				adaptor.AddChild(root_0, char_literal822_tree);
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:811:37: '&'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(811, 37);
				char_literal823=(IToken)Match(input,66,Follow._66_in_overloadable_binary_operator5957); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal823_tree = (object)adaptor.Create(char_literal823, "char_literal823", retval);
				adaptor.AddChild(root_0, char_literal823_tree);
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:811:43: '|'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(811, 43);
				char_literal824=(IToken)Match(input,200,Follow._200_in_overloadable_binary_operator5961); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal824_tree = (object)adaptor.Create(char_literal824, "char_literal824", retval);
				adaptor.AddChild(root_0, char_literal824_tree);
				}

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:811:49: '^'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(811, 49);
				char_literal825=(IToken)Match(input,93,Follow._93_in_overloadable_binary_operator5965); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal825_tree = (object)adaptor.Create(char_literal825, "char_literal825", retval);
				adaptor.AddChild(root_0, char_literal825_tree);
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:811:55: '<<'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(811, 55);
				string_literal826=(IToken)Match(input,82,Follow._82_in_overloadable_binary_operator5969); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal826_tree = (object)adaptor.Create(string_literal826, "string_literal826", retval);
				adaptor.AddChild(root_0, string_literal826_tree);
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:811:62: '>' '>'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(811, 62);
				char_literal827=(IToken)Match(input,GT,Follow._GT_in_overloadable_binary_operator5973); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal827_tree = (object)adaptor.Create(char_literal827, "char_literal827", retval);
				adaptor.AddChild(root_0, char_literal827_tree);
				}
				DebugLocation(811, 66);
				char_literal828=(IToken)Match(input,GT,Follow._GT_in_overloadable_binary_operator5975); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal828_tree = (object)adaptor.Create(char_literal828, "char_literal828", retval);
				adaptor.AddChild(root_0, char_literal828_tree);
				}

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:811:72: '=='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(811, 72);
				string_literal829=(IToken)Match(input,86,Follow._86_in_overloadable_binary_operator5979); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal829_tree = (object)adaptor.Create(string_literal829, "string_literal829", retval);
				adaptor.AddChild(root_0, string_literal829_tree);
				}

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:811:79: '!='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(811, 79);
				string_literal830=(IToken)Match(input,62,Follow._62_in_overloadable_binary_operator5983); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal830_tree = (object)adaptor.Create(string_literal830, "string_literal830", retval);
				adaptor.AddChild(root_0, string_literal830_tree);
				}

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:811:86: '>'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(811, 86);
				char_literal831=(IToken)Match(input,GT,Follow._GT_in_overloadable_binary_operator5987); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal831_tree = (object)adaptor.Create(char_literal831, "char_literal831", retval);
				adaptor.AddChild(root_0, char_literal831_tree);
				}

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:811:92: '<'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(811, 92);
				char_literal832=(IToken)Match(input,81,Follow._81_in_overloadable_binary_operator5991); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal832_tree = (object)adaptor.Create(char_literal832, "char_literal832", retval);
				adaptor.AddChild(root_0, char_literal832_tree);
				}

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:811:98: '>='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(811, 98);
				string_literal833=(IToken)Match(input,88,Follow._88_in_overloadable_binary_operator5995); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal833_tree = (object)adaptor.Create(string_literal833, "string_literal833", retval);
				adaptor.AddChild(root_0, string_literal833_tree);
				}

				}
				break;
			case 14:
				DebugEnterAlt(14);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:811:105: '<='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(811, 105);
				string_literal834=(IToken)Match(input,84,Follow._84_in_overloadable_binary_operator5999); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal834_tree = (object)adaptor.Create(string_literal834, "string_literal834", retval);
				adaptor.AddChild(root_0, string_literal834_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("overloadable_binary_operator", 231);
			LeaveRule("overloadable_binary_operator", 231);
			LeaveRule_overloadable_binary_operator();
			if (state.backtracking > 0) { Memoize(input, 231, overloadable_binary_operator_StartIndex); }

		}
		DebugLocation(811, 109);
		} finally { DebugExitRule(GrammarFileName, "overloadable_binary_operator"); }
		return retval;

	}
	// $ANTLR end "overloadable_binary_operator"

	partial void EnterRule_conversion_operator_declaration();
	partial void LeaveRule_conversion_operator_declaration();
	// $ANTLR start "conversion_operator_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:813:1: conversion_operator_declaration : conversion_operator_declarator operator_body ;
	[GrammarRule("conversion_operator_declaration")]
	private Antlr3AstNode conversion_operator_declaration()
	{
		EnterRule_conversion_operator_declaration();
		EnterRule("conversion_operator_declaration", 232);
		var retval = new Antlr3AstNode("conversion_operator_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int conversion_operator_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode conversion_operator_declarator835 = default(Antlr3AstNode);
		Antlr3AstNode operator_body836 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "conversion_operator_declaration");
		DebugLocation(813, 48);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 232)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:813:32: ( conversion_operator_declarator operator_body )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:814:2: conversion_operator_declarator operator_body
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(814, 2);
			PushFollow(Follow._conversion_operator_declarator_in_conversion_operator_declaration6009);
			conversion_operator_declarator835=conversion_operator_declarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, conversion_operator_declarator835.Tree, conversion_operator_declarator835, "conversion_operator_declarator835", retval);
			DebugLocation(814, 35);
			PushFollow(Follow._operator_body_in_conversion_operator_declaration6013);
			operator_body836=operator_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, operator_body836.Tree, operator_body836, "operator_body836", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("conversion_operator_declaration", 232);
			LeaveRule("conversion_operator_declaration", 232);
			LeaveRule_conversion_operator_declaration();
			if (state.backtracking > 0) { Memoize(input, 232, conversion_operator_declaration_StartIndex); }

		}
		DebugLocation(814, 48);
		} finally { DebugExitRule(GrammarFileName, "conversion_operator_declaration"); }
		return retval;

	}
	// $ANTLR end "conversion_operator_declaration"

	partial void EnterRule_conversion_operator_declarator();
	partial void LeaveRule_conversion_operator_declarator();
	// $ANTLR start "conversion_operator_declarator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:815:1: conversion_operator_declarator : ( 'implicit' | 'explicit' ) 'operator' type '(' type identifier ')' ;
	[GrammarRule("conversion_operator_declarator")]
	private Antlr3AstNode conversion_operator_declarator()
	{
		EnterRule_conversion_operator_declarator();
		EnterRule("conversion_operator_declarator", 233);
		var retval = new Antlr3AstNode("conversion_operator_declarator");
		
		retval.Start = (IToken)input.LT(1);
		int conversion_operator_declarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set837 = default(IToken);
		IToken string_literal838 = default(IToken);
		IToken char_literal840 = default(IToken);
		IToken char_literal843 = default(IToken);
		Antlr3AstNode type839 = default(Antlr3AstNode);
		Antlr3AstNode type841 = default(Antlr3AstNode);
		Antlr3AstNode identifier842 = default(Antlr3AstNode);

		object set837_tree = default(object);
		object string_literal838_tree = default(object);
		object char_literal840_tree = default(object);
		object char_literal843_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "conversion_operator_declarator");
		DebugLocation(815, 78);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 233)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:815:31: ( ( 'implicit' | 'explicit' ) 'operator' type '(' type identifier ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:816:2: ( 'implicit' | 'explicit' ) 'operator' type '(' type identifier ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(816, 2);

			set837=(IToken)input.LT(1);
			if (input.LA(1)==126||input.LA(1)==138)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set837, "set837", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}

			DebugLocation(816, 29);
			string_literal838=(IToken)Match(input,155,Follow._155_in_conversion_operator_declarator6030); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal838_tree = (object)adaptor.Create(string_literal838, "string_literal838", retval);
			adaptor.AddChild(root_0, string_literal838_tree);
			}
			DebugLocation(816, 42);
			PushFollow(Follow._type_in_conversion_operator_declarator6034);
			type839=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type839.Tree, type839, "type839", retval);
			DebugLocation(816, 49);
			char_literal840=(IToken)Match(input,68,Follow._68_in_conversion_operator_declarator6038); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal840_tree = (object)adaptor.Create(char_literal840, "char_literal840", retval);
			adaptor.AddChild(root_0, char_literal840_tree);
			}
			DebugLocation(816, 55);
			PushFollow(Follow._type_in_conversion_operator_declarator6042);
			type841=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type841.Tree, type841, "type841", retval);
			DebugLocation(816, 62);
			PushFollow(Follow._identifier_in_conversion_operator_declarator6046);
			identifier842=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier842.Tree, identifier842, "identifier842", retval);
			DebugLocation(816, 75);
			char_literal843=(IToken)Match(input,RPAREN,Follow._RPAREN_in_conversion_operator_declarator6050); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal843_tree = (object)adaptor.Create(char_literal843, "char_literal843", retval);
			adaptor.AddChild(root_0, char_literal843_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("conversion_operator_declarator", 233);
			LeaveRule("conversion_operator_declarator", 233);
			LeaveRule_conversion_operator_declarator();
			if (state.backtracking > 0) { Memoize(input, 233, conversion_operator_declarator_StartIndex); }

		}
		DebugLocation(816, 78);
		} finally { DebugExitRule(GrammarFileName, "conversion_operator_declarator"); }
		return retval;

	}
	// $ANTLR end "conversion_operator_declarator"

	partial void EnterRule_operator_body();
	partial void LeaveRule_operator_body();
	// $ANTLR start "operator_body"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:817:1: operator_body : block ;
	[GrammarRule("operator_body")]
	private Antlr3AstNode operator_body()
	{
		EnterRule_operator_body();
		EnterRule("operator_body", 234);
		var retval = new Antlr3AstNode("operator_body");
		
		retval.Start = (IToken)input.LT(1);
		int operator_body_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode block844 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "operator_body");
		DebugLocation(817, 7);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 234)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:817:14: ( block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:818:2: block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(818, 2);
			PushFollow(Follow._block_in_operator_body6058);
			block844=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block844.Tree, block844, "block844", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("operator_body", 234);
			LeaveRule("operator_body", 234);
			LeaveRule_operator_body();
			if (state.backtracking > 0) { Memoize(input, 234, operator_body_StartIndex); }

		}
		DebugLocation(818, 7);
		} finally { DebugExitRule(GrammarFileName, "operator_body"); }
		return retval;

	}
	// $ANTLR end "operator_body"

	partial void EnterRule_constructor_declaration();
	partial void LeaveRule_constructor_declaration();
	// $ANTLR start "constructor_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:821:1: constructor_declaration : constructor_declarator constructor_body ;
	[GrammarRule("constructor_declaration")]
	private Antlr3AstNode constructor_declaration()
	{
		EnterRule_constructor_declaration();
		EnterRule("constructor_declaration", 235);
		var retval = new Antlr3AstNode("constructor_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int constructor_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode constructor_declarator845 = default(Antlr3AstNode);
		Antlr3AstNode constructor_body846 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "constructor_declaration");
		DebugLocation(821, 43);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 235)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:821:24: ( constructor_declarator constructor_body )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:822:2: constructor_declarator constructor_body
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(822, 2);
			PushFollow(Follow._constructor_declarator_in_constructor_declaration6068);
			constructor_declarator845=constructor_declarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, constructor_declarator845.Tree, constructor_declarator845, "constructor_declarator845", retval);
			DebugLocation(822, 27);
			PushFollow(Follow._constructor_body_in_constructor_declaration6072);
			constructor_body846=constructor_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, constructor_body846.Tree, constructor_body846, "constructor_body846", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constructor_declaration", 235);
			LeaveRule("constructor_declaration", 235);
			LeaveRule_constructor_declaration();
			if (state.backtracking > 0) { Memoize(input, 235, constructor_declaration_StartIndex); }

		}
		DebugLocation(822, 43);
		} finally { DebugExitRule(GrammarFileName, "constructor_declaration"); }
		return retval;

	}
	// $ANTLR end "constructor_declaration"

	partial void EnterRule_constructor_declarator();
	partial void LeaveRule_constructor_declarator();
	// $ANTLR start "constructor_declarator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:823:1: constructor_declarator : identifier '(' ( formal_parameter_list )? ')' ( constructor_initializer )? ;
	[GrammarRule("constructor_declarator")]
	private Antlr3AstNode constructor_declarator()
	{
		EnterRule_constructor_declarator();
		EnterRule("constructor_declarator", 236);
		var retval = new Antlr3AstNode("constructor_declarator");
		
		retval.Start = (IToken)input.LT(1);
		int constructor_declarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal848 = default(IToken);
		IToken char_literal850 = default(IToken);
		Antlr3AstNode identifier847 = default(Antlr3AstNode);
		Antlr3AstNode formal_parameter_list849 = default(Antlr3AstNode);
		Antlr3AstNode constructor_initializer851 = default(Antlr3AstNode);

		object char_literal848_tree = default(object);
		object char_literal850_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "constructor_declarator");
		DebugLocation(823, 76);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 236)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:823:23: ( identifier '(' ( formal_parameter_list )? ')' ( constructor_initializer )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:824:2: identifier '(' ( formal_parameter_list )? ')' ( constructor_initializer )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(824, 2);
			PushFollow(Follow._identifier_in_constructor_declarator6080);
			identifier847=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier847.Tree, identifier847, "identifier847", retval);
			DebugLocation(824, 15);
			char_literal848=(IToken)Match(input,68,Follow._68_in_constructor_declarator6084); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal848_tree = (object)adaptor.Create(char_literal848, "char_literal848", retval);
			adaptor.AddChild(root_0, char_literal848_tree);
			}
			DebugLocation(824, 21);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:824:21: ( formal_parameter_list )?
			int alt235=2;
			try { DebugEnterSubRule(235);
			try { DebugEnterDecision(235, false);
			int LA235_1 = input.LA(1);

			if ((LA235_1==IDENTIFIER||LA235_1==91||LA235_1==95||(LA235_1>=97 && LA235_1<=98)||(LA235_1>=100 && LA235_1<=101)||LA235_1==105||(LA235_1>=107 && LA235_1<=108)||LA235_1==111||LA235_1==116||LA235_1==119||(LA235_1>=121 && LA235_1<=122)||LA235_1==124||LA235_1==128||LA235_1==131||LA235_1==134||LA235_1==137||LA235_1==140||LA235_1==143||(LA235_1>=145 && LA235_1<=146)||(LA235_1>=148 && LA235_1<=150)||(LA235_1>=153 && LA235_1<=154)||(LA235_1>=156 && LA235_1<=157)||(LA235_1>=159 && LA235_1<=160)||LA235_1==162||LA235_1==164||(LA235_1>=168 && LA235_1<=169)||LA235_1==171||(LA235_1>=173 && LA235_1<=175)||LA235_1==179||LA235_1==182||LA235_1==185||(LA235_1>=187 && LA235_1<=188)||(LA235_1>=191 && LA235_1<=192)||LA235_1==194||LA235_1==196||LA235_1==198))
			{
				alt235 = 1;
			}
			} finally { DebugExitDecision(235); }
			switch (alt235)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:824:21: formal_parameter_list
				{
				DebugLocation(824, 21);
				PushFollow(Follow._formal_parameter_list_in_constructor_declarator6088);
				formal_parameter_list849=formal_parameter_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, formal_parameter_list849.Tree, formal_parameter_list849, "formal_parameter_list849", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(235); }

			DebugLocation(824, 46);
			char_literal850=(IToken)Match(input,RPAREN,Follow._RPAREN_in_constructor_declarator6093); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal850_tree = (object)adaptor.Create(char_literal850, "char_literal850", retval);
			adaptor.AddChild(root_0, char_literal850_tree);
			}
			DebugLocation(824, 52);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:824:52: ( constructor_initializer )?
			int alt236=2;
			try { DebugEnterSubRule(236);
			try { DebugEnterDecision(236, false);
			int LA236_1 = input.LA(1);

			if ((LA236_1==79))
			{
				alt236 = 1;
			}
			} finally { DebugExitDecision(236); }
			switch (alt236)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:824:52: constructor_initializer
				{
				DebugLocation(824, 52);
				PushFollow(Follow._constructor_initializer_in_constructor_declarator6097);
				constructor_initializer851=constructor_initializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constructor_initializer851.Tree, constructor_initializer851, "constructor_initializer851", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(236); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constructor_declarator", 236);
			LeaveRule("constructor_declarator", 236);
			LeaveRule_constructor_declarator();
			if (state.backtracking > 0) { Memoize(input, 236, constructor_declarator_StartIndex); }

		}
		DebugLocation(824, 76);
		} finally { DebugExitRule(GrammarFileName, "constructor_declarator"); }
		return retval;

	}
	// $ANTLR end "constructor_declarator"

	partial void EnterRule_constructor_initializer();
	partial void LeaveRule_constructor_initializer();
	// $ANTLR start "constructor_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:825:1: constructor_initializer : ':' ( 'base' | 'this' ) '(' ( argument_list )? ')' ;
	[GrammarRule("constructor_initializer")]
	private Antlr3AstNode constructor_initializer()
	{
		EnterRule_constructor_initializer();
		EnterRule("constructor_initializer", 237);
		var retval = new Antlr3AstNode("constructor_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int constructor_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal852 = default(IToken);
		IToken set853 = default(IToken);
		IToken char_literal854 = default(IToken);
		IToken char_literal856 = default(IToken);
		Antlr3AstNode argument_list855 = default(Antlr3AstNode);

		object char_literal852_tree = default(object);
		object set853_tree = default(object);
		object char_literal854_tree = default(object);
		object char_literal856_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "constructor_initializer");
		DebugLocation(825, 54);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 237)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:825:24: ( ':' ( 'base' | 'this' ) '(' ( argument_list )? ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:826:2: ':' ( 'base' | 'this' ) '(' ( argument_list )? ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(826, 2);
			char_literal852=(IToken)Match(input,79,Follow._79_in_constructor_initializer6106); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal852_tree = (object)adaptor.Create(char_literal852, "char_literal852", retval);
			adaptor.AddChild(root_0, char_literal852_tree);
			}
			DebugLocation(826, 8);

			set853=(IToken)input.LT(1);
			if (input.LA(1)==104||input.LA(1)==182)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set853, "set853", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}

			DebugLocation(826, 28);
			char_literal854=(IToken)Match(input,68,Follow._68_in_constructor_initializer6120); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal854_tree = (object)adaptor.Create(char_literal854, "char_literal854", retval);
			adaptor.AddChild(root_0, char_literal854_tree);
			}
			DebugLocation(826, 34);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:826:34: ( argument_list )?
			int alt237=2;
			try { DebugEnterSubRule(237);
			try { DebugEnterDecision(237, false);
			int LA237_1 = input.LA(1);

			if ((LA237_1==Character_literal||LA237_1==FALSE||(LA237_1>=Hex_number && LA237_1<=IDENTIFIER)||(LA237_1>=MINUS && LA237_1<=NUMBER)||LA237_1==Real_literal||LA237_1==STRINGLITERAL||LA237_1==TRUE||LA237_1==Verbatim_string_literal||LA237_1==61||LA237_1==66||(LA237_1>=68 && LA237_1<=69)||(LA237_1>=71 && LA237_1<=72)||LA237_1==75||LA237_1==95||(LA237_1>=97 && LA237_1<=98)||(LA237_1>=100 && LA237_1<=105)||(LA237_1>=107 && LA237_1<=108)||(LA237_1>=111 && LA237_1<=112)||(LA237_1>=116 && LA237_1<=119)||(LA237_1>=121 && LA237_1<=122)||LA237_1==124||LA237_1==128||LA237_1==131||LA237_1==134||LA237_1==137||LA237_1==140||LA237_1==143||(LA237_1>=145 && LA237_1<=146)||(LA237_1>=148 && LA237_1<=150)||(LA237_1>=152 && LA237_1<=154)||(LA237_1>=156 && LA237_1<=157)||LA237_1==159||LA237_1==162||LA237_1==164||(LA237_1>=168 && LA237_1<=169)||LA237_1==171||(LA237_1>=173 && LA237_1<=176)||LA237_1==179||LA237_1==182||(LA237_1>=185 && LA237_1<=189)||(LA237_1>=191 && LA237_1<=192)||LA237_1==196||LA237_1==198||LA237_1==204))
			{
				alt237 = 1;
			}
			} finally { DebugExitDecision(237); }
			switch (alt237)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:826:34: argument_list
				{
				DebugLocation(826, 34);
				PushFollow(Follow._argument_list_in_constructor_initializer6124);
				argument_list855=argument_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, argument_list855.Tree, argument_list855, "argument_list855", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(237); }

			DebugLocation(826, 51);
			char_literal856=(IToken)Match(input,RPAREN,Follow._RPAREN_in_constructor_initializer6129); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal856_tree = (object)adaptor.Create(char_literal856, "char_literal856", retval);
			adaptor.AddChild(root_0, char_literal856_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constructor_initializer", 237);
			LeaveRule("constructor_initializer", 237);
			LeaveRule_constructor_initializer();
			if (state.backtracking > 0) { Memoize(input, 237, constructor_initializer_StartIndex); }

		}
		DebugLocation(826, 54);
		} finally { DebugExitRule(GrammarFileName, "constructor_initializer"); }
		return retval;

	}
	// $ANTLR end "constructor_initializer"

	partial void EnterRule_constructor_body();
	partial void LeaveRule_constructor_body();
	// $ANTLR start "constructor_body"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:827:1: constructor_body : block ;
	[GrammarRule("constructor_body")]
	private Antlr3AstNode constructor_body()
	{
		EnterRule_constructor_body();
		EnterRule("constructor_body", 238);
		var retval = new Antlr3AstNode("constructor_body");
		
		retval.Start = (IToken)input.LT(1);
		int constructor_body_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode block857 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "constructor_body");
		DebugLocation(827, 7);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 238)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:827:17: ( block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:828:2: block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(828, 2);
			PushFollow(Follow._block_in_constructor_body6137);
			block857=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block857.Tree, block857, "block857", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constructor_body", 238);
			LeaveRule("constructor_body", 238);
			LeaveRule_constructor_body();
			if (state.backtracking > 0) { Memoize(input, 238, constructor_body_StartIndex); }

		}
		DebugLocation(828, 7);
		} finally { DebugExitRule(GrammarFileName, "constructor_body"); }
		return retval;

	}
	// $ANTLR end "constructor_body"

	partial void EnterRule_destructor_declaration();
	partial void LeaveRule_destructor_declaration();
	// $ANTLR start "destructor_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:837:1: destructor_declaration : '~' identifier '(' ')' destructor_body ;
	[GrammarRule("destructor_declaration")]
	private Antlr3AstNode destructor_declaration()
	{
		EnterRule_destructor_declaration();
		EnterRule("destructor_declaration", 239);
		var retval = new Antlr3AstNode("destructor_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int destructor_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal858 = default(IToken);
		IToken char_literal860 = default(IToken);
		IToken char_literal861 = default(IToken);
		Antlr3AstNode identifier859 = default(Antlr3AstNode);
		Antlr3AstNode destructor_body862 = default(Antlr3AstNode);

		object char_literal858_tree = default(object);
		object char_literal860_tree = default(object);
		object char_literal861_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "destructor_declaration");
		DebugLocation(837, 48);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 239)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:837:23: ( '~' identifier '(' ')' destructor_body )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:838:2: '~' identifier '(' ')' destructor_body
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(838, 2);
			char_literal858=(IToken)Match(input,204,Follow._204_in_destructor_declaration6153); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal858_tree = (object)adaptor.Create(char_literal858, "char_literal858", retval);
			adaptor.AddChild(root_0, char_literal858_tree);
			}
			DebugLocation(838, 7);
			PushFollow(Follow._identifier_in_destructor_declaration6156);
			identifier859=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier859.Tree, identifier859, "identifier859", retval);
			DebugLocation(838, 20);
			char_literal860=(IToken)Match(input,68,Follow._68_in_destructor_declaration6160); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal860_tree = (object)adaptor.Create(char_literal860, "char_literal860", retval);
			adaptor.AddChild(root_0, char_literal860_tree);
			}
			DebugLocation(838, 26);
			char_literal861=(IToken)Match(input,RPAREN,Follow._RPAREN_in_destructor_declaration6164); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal861_tree = (object)adaptor.Create(char_literal861, "char_literal861", retval);
			adaptor.AddChild(root_0, char_literal861_tree);
			}
			DebugLocation(838, 33);
			PushFollow(Follow._destructor_body_in_destructor_declaration6169);
			destructor_body862=destructor_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, destructor_body862.Tree, destructor_body862, "destructor_body862", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("destructor_declaration", 239);
			LeaveRule("destructor_declaration", 239);
			LeaveRule_destructor_declaration();
			if (state.backtracking > 0) { Memoize(input, 239, destructor_declaration_StartIndex); }

		}
		DebugLocation(838, 48);
		} finally { DebugExitRule(GrammarFileName, "destructor_declaration"); }
		return retval;

	}
	// $ANTLR end "destructor_declaration"

	partial void EnterRule_destructor_body();
	partial void LeaveRule_destructor_body();
	// $ANTLR start "destructor_body"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:839:1: destructor_body : block ;
	[GrammarRule("destructor_body")]
	private Antlr3AstNode destructor_body()
	{
		EnterRule_destructor_body();
		EnterRule("destructor_body", 240);
		var retval = new Antlr3AstNode("destructor_body");
		
		retval.Start = (IToken)input.LT(1);
		int destructor_body_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode block863 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "destructor_body");
		DebugLocation(839, 7);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 240)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:839:16: ( block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:840:2: block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(840, 2);
			PushFollow(Follow._block_in_destructor_body6177);
			block863=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block863.Tree, block863, "block863", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("destructor_body", 240);
			LeaveRule("destructor_body", 240);
			LeaveRule_destructor_body();
			if (state.backtracking > 0) { Memoize(input, 240, destructor_body_StartIndex); }

		}
		DebugLocation(840, 7);
		} finally { DebugExitRule(GrammarFileName, "destructor_body"); }
		return retval;

	}
	// $ANTLR end "destructor_body"

	partial void EnterRule_invocation_expression();
	partial void LeaveRule_invocation_expression();
	// $ANTLR start "invocation_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:843:1: invocation_expression : invocation_start ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ;
	[GrammarRule("invocation_expression")]
	private Antlr3AstNode invocation_expression()
	{
		EnterRule_invocation_expression();
		EnterRule("invocation_expression", 241);
		var retval = new Antlr3AstNode("invocation_expression");
		
		retval.Start = (IToken)input.LT(1);
		int invocation_expression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode invocation_start864 = default(Antlr3AstNode);
		Antlr3AstNode arguments865 = default(Antlr3AstNode);
		Antlr3AstNode invocation_part866 = default(Antlr3AstNode);
		Antlr3AstNode invocation_part867 = default(Antlr3AstNode);
		Antlr3AstNode arguments868 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "invocation_expression");
		DebugLocation(843, 38);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 241)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:843:22: ( invocation_start ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:844:2: invocation_start ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(844, 2);
			PushFollow(Follow._invocation_start_in_invocation_expression6187);
			invocation_start864=invocation_start();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, invocation_start864.Tree, invocation_start864, "invocation_start864", retval);
			DebugLocation(844, 21);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:844:21: ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )*
			try { DebugEnterSubRule(238);
			while (true)
			{
				int alt238=3;
				try { DebugEnterDecision(238, false);
				int LA238_1 = input.LA(1);

				if ((LA238_1==68))
				{
					int LA238_2 = input.LA(2);

					if ((EvaluatePredicate(synpred28_cs_fragment)))
					{
						alt238 = 1;
					}


				}
				else if ((LA238_1==DOT||LA238_1==PTR||LA238_1==91))
				{
					alt238 = 2;
				}


				} finally { DebugExitDecision(238); }
				switch ( alt238 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:844:22: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
					{
					DebugLocation(844, 22);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:844:22: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:844:23: ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part
					{
					DebugLocation(844, 55);
					PushFollow(Follow._arguments_in_invocation_expression6209);
					arguments865=arguments();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, arguments865.Tree, arguments865, "arguments865", retval);
					DebugLocation(844, 67);
					PushFollow(Follow._invocation_part_in_invocation_expression6213);
					invocation_part866=invocation_part();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, invocation_part866.Tree, invocation_part866, "invocation_part866", retval);

					}


					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:845:9: invocation_part
					{
					DebugLocation(845, 9);
					PushFollow(Follow._invocation_part_in_invocation_expression6224);
					invocation_part867=invocation_part();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, invocation_part867.Tree, invocation_part867, "invocation_part867", retval);

					}
					break;

				default:
					goto loop238;
				}
			}

			loop238:
				;

			} finally { DebugExitSubRule(238); }

			DebugLocation(845, 29);
			PushFollow(Follow._arguments_in_invocation_expression6230);
			arguments868=arguments();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, arguments868.Tree, arguments868, "arguments868", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("invocation_expression", 241);
			LeaveRule("invocation_expression", 241);
			LeaveRule_invocation_expression();
			if (state.backtracking > 0) { Memoize(input, 241, invocation_expression_StartIndex); }

		}
		DebugLocation(845, 38);
		} finally { DebugExitRule(GrammarFileName, "invocation_expression"); }
		return retval;

	}
	// $ANTLR end "invocation_expression"

	partial void EnterRule_invocation_start();
	partial void LeaveRule_invocation_start();
	// $ANTLR start "invocation_start"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:846:1: invocation_start : ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | 'this' | 'base' | identifier ( '::' identifier )? | typeof_expression );
	[GrammarRule("invocation_start")]
	private Antlr3AstNode invocation_start()
	{
		EnterRule_invocation_start();
		EnterRule("invocation_start", 242);
		var retval = new Antlr3AstNode("invocation_start");
		
		retval.Start = (IToken)input.LT(1);
		int invocation_start_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal872 = default(IToken);
		IToken string_literal873 = default(IToken);
		IToken string_literal875 = default(IToken);
		Antlr3AstNode predefined_type869 = default(Antlr3AstNode);
		Antlr3AstNode identifier870 = default(Antlr3AstNode);
		Antlr3AstNode generic_argument_list871 = default(Antlr3AstNode);
		Antlr3AstNode identifier874 = default(Antlr3AstNode);
		Antlr3AstNode identifier876 = default(Antlr3AstNode);
		Antlr3AstNode typeof_expression877 = default(Antlr3AstNode);

		object string_literal872_tree = default(object);
		object string_literal873_tree = default(object);
		object string_literal875_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "invocation_start");
		DebugLocation(846, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 242)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:846:17: ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | 'this' | 'base' | identifier ( '::' identifier )? | typeof_expression )
			int alt240=6;
			try { DebugEnterDecision(240, false);
			switch (input.LA(1))
			{
			case 105:
			case 108:
			case 111:
			case 116:
			case 121:
			case 131:
			case 140:
			case 148:
			case 153:
			case 171:
			case 175:
			case 179:
			case 187:
			case 188:
			case 191:
				{
				alt240 = 1;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 107:
			case 119:
			case 122:
			case 124:
			case 128:
			case 134:
			case 137:
			case 143:
			case 145:
			case 146:
			case 149:
			case 150:
			case 154:
			case 156:
			case 159:
			case 162:
			case 164:
			case 169:
			case 173:
			case 174:
			case 185:
			case 192:
			case 196:
			case 198:
				{
				int LA240_2 = input.LA(2);

				if ((LA240_2==81) && (EvaluatePredicate(synpred29_cs_fragment)))
				{
					alt240 = 2;
				}
				else if ((LA240_2==DOT||LA240_2==PTR||LA240_2==68||LA240_2==80||LA240_2==91))
				{
					alt240 = 5;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 240, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 182:
				{
				alt240 = 3;
				}
				break;
			case 104:
				{
				alt240 = 4;
				}
				break;
			case 186:
				{
				alt240 = 6;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 240, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(240); }
			switch (alt240)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:847:2: predefined_type
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(847, 2);
				PushFollow(Follow._predefined_type_in_invocation_start6238);
				predefined_type869=predefined_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, predefined_type869.Tree, predefined_type869, "predefined_type869", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:848:4: ( identifier '<' )=> identifier generic_argument_list
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(848, 27);
				PushFollow(Follow._identifier_in_invocation_start6255);
				identifier870=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier870.Tree, identifier870, "identifier870", retval);
				DebugLocation(848, 40);
				PushFollow(Follow._generic_argument_list_in_invocation_start6259);
				generic_argument_list871=generic_argument_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, generic_argument_list871.Tree, generic_argument_list871, "generic_argument_list871", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:849:4: 'this'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(849, 4);
				string_literal872=(IToken)Match(input,182,Follow._182_in_invocation_start6264); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal872_tree = (object)adaptor.Create(string_literal872, "string_literal872", retval);
				adaptor.AddChild(root_0, string_literal872_tree);
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:850:4: 'base'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(850, 4);
				string_literal873=(IToken)Match(input,104,Follow._104_in_invocation_start6270); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal873_tree = (object)adaptor.Create(string_literal873, "string_literal873", retval);
				adaptor.AddChild(root_0, string_literal873_tree);
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:851:4: identifier ( '::' identifier )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(851, 4);
				PushFollow(Follow._identifier_in_invocation_start6275);
				identifier874=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier874.Tree, identifier874, "identifier874", retval);
				DebugLocation(851, 17);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:851:17: ( '::' identifier )?
				int alt239=2;
				try { DebugEnterSubRule(239);
				try { DebugEnterDecision(239, false);
				int LA239_1 = input.LA(1);

				if ((LA239_1==80))
				{
					alt239 = 1;
				}
				} finally { DebugExitDecision(239); }
				switch (alt239)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:851:18: '::' identifier
					{
					DebugLocation(851, 18);
					string_literal875=(IToken)Match(input,80,Follow._80_in_invocation_start6280); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal875_tree = (object)adaptor.Create(string_literal875, "string_literal875", retval);
					adaptor.AddChild(root_0, string_literal875_tree);
					}
					DebugLocation(851, 25);
					PushFollow(Follow._identifier_in_invocation_start6284);
					identifier876=identifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, identifier876.Tree, identifier876, "identifier876", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(239); }


				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:852:4: typeof_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(852, 4);
				PushFollow(Follow._typeof_expression_in_invocation_start6291);
				typeof_expression877=typeof_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeof_expression877.Tree, typeof_expression877, "typeof_expression877", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("invocation_start", 242);
			LeaveRule("invocation_start", 242);
			LeaveRule_invocation_start();
			if (state.backtracking > 0) { Memoize(input, 242, invocation_start_StartIndex); }

		}
		DebugLocation(853, 1);
		} finally { DebugExitRule(GrammarFileName, "invocation_start"); }
		return retval;

	}
	// $ANTLR end "invocation_start"

	partial void EnterRule_invocation_part();
	partial void LeaveRule_invocation_part();
	// $ANTLR start "invocation_part"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:854:1: invocation_part : ( access_identifier | brackets );
	[GrammarRule("invocation_part")]
	private Antlr3AstNode invocation_part()
	{
		EnterRule_invocation_part();
		EnterRule("invocation_part", 243);
		var retval = new Antlr3AstNode("invocation_part");
		
		retval.Start = (IToken)input.LT(1);
		int invocation_part_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode access_identifier878 = default(Antlr3AstNode);
		Antlr3AstNode brackets879 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "invocation_part");
		DebugLocation(854, 12);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 243)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:854:16: ( access_identifier | brackets )
			int alt241=2;
			try { DebugEnterDecision(241, false);
			int LA241_1 = input.LA(1);

			if ((LA241_1==DOT||LA241_1==PTR))
			{
				alt241 = 1;
			}
			else if ((LA241_1==91))
			{
				alt241 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 241, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(241); }
			switch (alt241)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:855:3: access_identifier
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(855, 3);
				PushFollow(Follow._access_identifier_in_invocation_part6314);
				access_identifier878=access_identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, access_identifier878.Tree, access_identifier878, "access_identifier878", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:856:4: brackets
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(856, 4);
				PushFollow(Follow._brackets_in_invocation_part6319);
				brackets879=brackets();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, brackets879.Tree, brackets879, "brackets879", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("invocation_part", 243);
			LeaveRule("invocation_part", 243);
			LeaveRule_invocation_part();
			if (state.backtracking > 0) { Memoize(input, 243, invocation_part_StartIndex); }

		}
		DebugLocation(856, 12);
		} finally { DebugExitRule(GrammarFileName, "invocation_part"); }
		return retval;

	}
	// $ANTLR end "invocation_part"

	partial void EnterRule_statement();
	partial void LeaveRule_statement();
	// $ANTLR start "statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:860:1: statement : ( ( declaration_statement )=> declaration_statement | ( identifier ':' )=> labeled_statement | embedded_statement );
	[GrammarRule("statement")]
	private Antlr3AstNode statement()
	{
		EnterRule_statement();
		EnterRule("statement", 244);
		var retval = new Antlr3AstNode("statement");
		
		retval.Start = (IToken)input.LT(1);
		int statement_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode declaration_statement880 = default(Antlr3AstNode);
		Antlr3AstNode labeled_statement881 = default(Antlr3AstNode);
		Antlr3AstNode embedded_statement882 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "statement");
		DebugLocation(860, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 244)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:860:10: ( ( declaration_statement )=> declaration_statement | ( identifier ':' )=> labeled_statement | embedded_statement )
			int alt242=3;
			try { DebugEnterDecision(242, false);
			int LA242_1 = input.LA(1);

			if ((LA242_1==192))
			{
				int LA242_2 = input.LA(2);

				if ((EvaluatePredicate(synpred30_cs_fragment)))
				{
					alt242 = 1;
				}
				else if ((EvaluatePredicate(synpred31_cs_fragment)))
				{
					alt242 = 2;
				}
				else if ((true))
				{
					alt242 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 242, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA242_1==122))
			{
				int LA242_2 = input.LA(2);

				if ((EvaluatePredicate(synpred30_cs_fragment)))
				{
					alt242 = 1;
				}
				else if ((EvaluatePredicate(synpred31_cs_fragment)))
				{
					alt242 = 2;
				}
				else if ((true))
				{
					alt242 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 242, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA242_1==105||LA242_1==108||LA242_1==111||LA242_1==116||LA242_1==121||LA242_1==131||LA242_1==140||LA242_1==148||LA242_1==153||LA242_1==171||LA242_1==175||LA242_1==179||(LA242_1>=187 && LA242_1<=188)||LA242_1==191))
			{
				int LA242_2 = input.LA(2);

				if ((EvaluatePredicate(synpred30_cs_fragment)))
				{
					alt242 = 1;
				}
				else if ((true))
				{
					alt242 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 242, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA242_1==198))
			{
				int LA242_2 = input.LA(2);

				if ((EvaluatePredicate(synpred30_cs_fragment)))
				{
					alt242 = 1;
				}
				else if ((EvaluatePredicate(synpred31_cs_fragment)))
				{
					alt242 = 2;
				}
				else if ((true))
				{
					alt242 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 242, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA242_1==194) && (EvaluatePredicate(synpred30_cs_fragment)))
			{
				alt242 = 1;
			}
			else if ((LA242_1==114) && (EvaluatePredicate(synpred30_cs_fragment)))
			{
				alt242 = 1;
			}
			else if ((LA242_1==Character_literal||LA242_1==FALSE||LA242_1==Hex_number||LA242_1==IF||(LA242_1>=MINUS && LA242_1<=NUMBER)||LA242_1==Real_literal||(LA242_1>=SEMI && LA242_1<=STRINGLITERAL)||LA242_1==TRUE||(LA242_1>=USING && LA242_1<=Verbatim_string_literal)||LA242_1==61||LA242_1==66||(LA242_1>=68 && LA242_1<=69)||(LA242_1>=71 && LA242_1<=72)||LA242_1==75||(LA242_1>=102 && LA242_1<=104)||LA242_1==106||LA242_1==112||LA242_1==115||(LA242_1>=117 && LA242_1<=118)||LA242_1==120||LA242_1==130||(LA242_1>=132 && LA242_1<=133)||LA242_1==136||LA242_1==147||LA242_1==152||LA242_1==170||LA242_1==176||(LA242_1>=181 && LA242_1<=184)||LA242_1==186||(LA242_1>=189 && LA242_1<=190)||LA242_1==197||LA242_1==199||LA242_1==204))
			{
				alt242 = 3;
			}
			else if ((LA242_1==134))
			{
				int LA242_2 = input.LA(2);

				if ((EvaluatePredicate(synpred30_cs_fragment)))
				{
					alt242 = 1;
				}
				else if ((EvaluatePredicate(synpred31_cs_fragment)))
				{
					alt242 = 2;
				}
				else if ((true))
				{
					alt242 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 242, 25, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA242_1==IDENTIFIER||LA242_1==95||(LA242_1>=97 && LA242_1<=98)||(LA242_1>=100 && LA242_1<=101)||LA242_1==107||LA242_1==119||LA242_1==124||LA242_1==128||LA242_1==137||LA242_1==143||(LA242_1>=145 && LA242_1<=146)||(LA242_1>=149 && LA242_1<=150)||LA242_1==154||LA242_1==156||LA242_1==159||LA242_1==162||LA242_1==164||LA242_1==169||(LA242_1>=173 && LA242_1<=174)||LA242_1==185||LA242_1==196))
			{
				int LA242_2 = input.LA(2);

				if ((EvaluatePredicate(synpred30_cs_fragment)))
				{
					alt242 = 1;
				}
				else if ((EvaluatePredicate(synpred31_cs_fragment)))
				{
					alt242 = 2;
				}
				else if ((true))
				{
					alt242 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 242, 47, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 242, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(242); }
			switch (alt242)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:861:2: ( declaration_statement )=> declaration_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(861, 29);
				PushFollow(Follow._declaration_statement_in_statement6336);
				declaration_statement880=declaration_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, declaration_statement880.Tree, declaration_statement880, "declaration_statement880", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:862:4: ( identifier ':' )=> labeled_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(862, 26);
				PushFollow(Follow._labeled_statement_in_statement6351);
				labeled_statement881=labeled_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, labeled_statement881.Tree, labeled_statement881, "labeled_statement881", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:863:4: embedded_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(863, 4);
				PushFollow(Follow._embedded_statement_in_statement6356);
				embedded_statement882=embedded_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, embedded_statement882.Tree, embedded_statement882, "embedded_statement882", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("statement", 244);
			LeaveRule("statement", 244);
			LeaveRule_statement();
			if (state.backtracking > 0) { Memoize(input, 244, statement_StartIndex); }

		}
		DebugLocation(864, 1);
		} finally { DebugExitRule(GrammarFileName, "statement"); }
		return retval;

	}
	// $ANTLR end "statement"

	partial void EnterRule_embedded_statement();
	partial void LeaveRule_embedded_statement();
	// $ANTLR start "embedded_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:865:1: embedded_statement : ( block | selection_statement | iteration_statement | jump_statement | try_statement | checked_statement | unchecked_statement | lock_statement | using_statement | yield_statement | unsafe_statement | fixed_statement | expression_statement );
	[GrammarRule("embedded_statement")]
	private Antlr3AstNode embedded_statement()
	{
		EnterRule_embedded_statement();
		EnterRule("embedded_statement", 245);
		var retval = new Antlr3AstNode("embedded_statement");
		
		retval.Start = (IToken)input.LT(1);
		int embedded_statement_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode block883 = default(Antlr3AstNode);
		Antlr3AstNode selection_statement884 = default(Antlr3AstNode);
		Antlr3AstNode iteration_statement885 = default(Antlr3AstNode);
		Antlr3AstNode jump_statement886 = default(Antlr3AstNode);
		Antlr3AstNode try_statement887 = default(Antlr3AstNode);
		Antlr3AstNode checked_statement888 = default(Antlr3AstNode);
		Antlr3AstNode unchecked_statement889 = default(Antlr3AstNode);
		Antlr3AstNode lock_statement890 = default(Antlr3AstNode);
		Antlr3AstNode using_statement891 = default(Antlr3AstNode);
		Antlr3AstNode yield_statement892 = default(Antlr3AstNode);
		Antlr3AstNode unsafe_statement893 = default(Antlr3AstNode);
		Antlr3AstNode fixed_statement894 = default(Antlr3AstNode);
		Antlr3AstNode expression_statement895 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "embedded_statement");
		DebugLocation(865, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 245)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:865:19: ( block | selection_statement | iteration_statement | jump_statement | try_statement | checked_statement | unchecked_statement | lock_statement | using_statement | yield_statement | unsafe_statement | fixed_statement | expression_statement )
			int alt243=13;
			try { DebugEnterDecision(243, false);
			switch (input.LA(1))
			{
			case SEMI:
			case 199:
				{
				alt243 = 1;
				}
				break;
			case IF:
			case 181:
				{
				alt243 = 2;
				}
				break;
			case 120:
			case 132:
			case 133:
			case 197:
				{
				alt243 = 3;
				}
				break;
			case 106:
			case 115:
			case 136:
			case 170:
			case 183:
				{
				alt243 = 4;
				}
				break;
			case 184:
				{
				alt243 = 5;
				}
				break;
			case 112:
				{
				int LA243_2 = input.LA(2);

				if ((LA243_2==68))
				{
					alt243 = 13;
				}
				else if ((LA243_2==SEMI||LA243_2==199))
				{
					alt243 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 243, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 189:
				{
				int LA243_2 = input.LA(2);

				if ((LA243_2==68))
				{
					alt243 = 13;
				}
				else if ((LA243_2==SEMI||LA243_2==199))
				{
					alt243 = 7;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 243, 7, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 147:
				{
				alt243 = 8;
				}
				break;
			case USING:
				{
				alt243 = 9;
				}
				break;
			case 198:
				{
				int LA243_2 = input.LA(2);

				if ((LA243_2==106||LA243_2==170))
				{
					alt243 = 10;
				}
				else if ((LA243_2==DOT||LA243_2==GT||LA243_2==MINUS||LA243_2==PTR||LA243_2==SEMI||(LA243_2>=62 && LA243_2<=78)||(LA243_2>=80 && LA243_2<=91)||(LA243_2>=93 && LA243_2<=94)||LA243_2==99||LA243_2==144||(LA243_2>=200 && LA243_2<=202)))
				{
					alt243 = 13;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 243, 10, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 190:
				{
				alt243 = 11;
				}
				break;
			case 130:
				{
				alt243 = 12;
				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case IDENTIFIER:
			case MINUS:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 61:
			case 66:
			case 68:
			case 69:
			case 71:
			case 72:
			case 75:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 102:
			case 103:
			case 104:
			case 105:
			case 107:
			case 108:
			case 111:
			case 116:
			case 117:
			case 118:
			case 119:
			case 121:
			case 122:
			case 124:
			case 128:
			case 131:
			case 134:
			case 137:
			case 140:
			case 143:
			case 145:
			case 146:
			case 148:
			case 149:
			case 150:
			case 152:
			case 153:
			case 154:
			case 156:
			case 159:
			case 162:
			case 164:
			case 169:
			case 171:
			case 173:
			case 174:
			case 175:
			case 176:
			case 179:
			case 182:
			case 185:
			case 186:
			case 187:
			case 188:
			case 191:
			case 192:
			case 196:
			case 204:
				{
				alt243 = 13;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 243, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(243); }
			switch (alt243)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:866:2: block
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(866, 2);
				PushFollow(Follow._block_in_embedded_statement6366);
				block883=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block883.Tree, block883, "block883", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:867:4: selection_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(867, 4);
				PushFollow(Follow._selection_statement_in_embedded_statement6371);
				selection_statement884=selection_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, selection_statement884.Tree, selection_statement884, "selection_statement884", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:868:4: iteration_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(868, 4);
				PushFollow(Follow._iteration_statement_in_embedded_statement6377);
				iteration_statement885=iteration_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, iteration_statement885.Tree, iteration_statement885, "iteration_statement885", retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:869:4: jump_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(869, 4);
				PushFollow(Follow._jump_statement_in_embedded_statement6383);
				jump_statement886=jump_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, jump_statement886.Tree, jump_statement886, "jump_statement886", retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:870:4: try_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(870, 4);
				PushFollow(Follow._try_statement_in_embedded_statement6390);
				try_statement887=try_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, try_statement887.Tree, try_statement887, "try_statement887", retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:871:4: checked_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(871, 4);
				PushFollow(Follow._checked_statement_in_embedded_statement6395);
				checked_statement888=checked_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, checked_statement888.Tree, checked_statement888, "checked_statement888", retval);

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:872:4: unchecked_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(872, 4);
				PushFollow(Follow._unchecked_statement_in_embedded_statement6400);
				unchecked_statement889=unchecked_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unchecked_statement889.Tree, unchecked_statement889, "unchecked_statement889", retval);

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:873:4: lock_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(873, 4);
				PushFollow(Follow._lock_statement_in_embedded_statement6405);
				lock_statement890=lock_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, lock_statement890.Tree, lock_statement890, "lock_statement890", retval);

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:874:4: using_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(874, 4);
				PushFollow(Follow._using_statement_in_embedded_statement6410);
				using_statement891=using_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, using_statement891.Tree, using_statement891, "using_statement891", retval);

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:875:4: yield_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(875, 4);
				PushFollow(Follow._yield_statement_in_embedded_statement6416);
				yield_statement892=yield_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, yield_statement892.Tree, yield_statement892, "yield_statement892", retval);

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:876:4: unsafe_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(876, 4);
				PushFollow(Follow._unsafe_statement_in_embedded_statement6422);
				unsafe_statement893=unsafe_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unsafe_statement893.Tree, unsafe_statement893, "unsafe_statement893", retval);

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:877:4: fixed_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(877, 4);
				PushFollow(Follow._fixed_statement_in_embedded_statement6427);
				fixed_statement894=fixed_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, fixed_statement894.Tree, fixed_statement894, "fixed_statement894", retval);

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:878:4: expression_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(878, 4);
				PushFollow(Follow._expression_statement_in_embedded_statement6432);
				expression_statement895=expression_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression_statement895.Tree, expression_statement895, "expression_statement895", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("embedded_statement", 245);
			LeaveRule("embedded_statement", 245);
			LeaveRule_embedded_statement();
			if (state.backtracking > 0) { Memoize(input, 245, embedded_statement_StartIndex); }

		}
		DebugLocation(879, 1);
		} finally { DebugExitRule(GrammarFileName, "embedded_statement"); }
		return retval;

	}
	// $ANTLR end "embedded_statement"

	partial void EnterRule_fixed_statement();
	partial void LeaveRule_fixed_statement();
	// $ANTLR start "fixed_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:880:1: fixed_statement : 'fixed' '(' pointer_type fixed_pointer_declarators ')' embedded_statement ;
	[GrammarRule("fixed_statement")]
	private Antlr3AstNode fixed_statement()
	{
		EnterRule_fixed_statement();
		EnterRule("fixed_statement", 246);
		var retval = new Antlr3AstNode("fixed_statement");
		
		retval.Start = (IToken)input.LT(1);
		int fixed_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal896 = default(IToken);
		IToken char_literal897 = default(IToken);
		IToken char_literal900 = default(IToken);
		Antlr3AstNode pointer_type898 = default(Antlr3AstNode);
		Antlr3AstNode fixed_pointer_declarators899 = default(Antlr3AstNode);
		Antlr3AstNode embedded_statement901 = default(Antlr3AstNode);

		object string_literal896_tree = default(object);
		object char_literal897_tree = default(object);
		object char_literal900_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "fixed_statement");
		DebugLocation(880, 83);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 246)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:880:16: ( 'fixed' '(' pointer_type fixed_pointer_declarators ')' embedded_statement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:881:2: 'fixed' '(' pointer_type fixed_pointer_declarators ')' embedded_statement
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(881, 2);
			string_literal896=(IToken)Match(input,130,Follow._130_in_fixed_statement6442); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal896_tree = (object)adaptor.Create(string_literal896, "string_literal896", retval);
			adaptor.AddChild(root_0, string_literal896_tree);
			}
			DebugLocation(881, 12);
			char_literal897=(IToken)Match(input,68,Follow._68_in_fixed_statement6446); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal897_tree = (object)adaptor.Create(char_literal897, "char_literal897", retval);
			adaptor.AddChild(root_0, char_literal897_tree);
			}
			DebugLocation(881, 18);
			PushFollow(Follow._pointer_type_in_fixed_statement6450);
			pointer_type898=pointer_type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, pointer_type898.Tree, pointer_type898, "pointer_type898", retval);
			DebugLocation(881, 31);
			PushFollow(Follow._fixed_pointer_declarators_in_fixed_statement6452);
			fixed_pointer_declarators899=fixed_pointer_declarators();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, fixed_pointer_declarators899.Tree, fixed_pointer_declarators899, "fixed_pointer_declarators899", retval);
			DebugLocation(881, 59);
			char_literal900=(IToken)Match(input,RPAREN,Follow._RPAREN_in_fixed_statement6456); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal900_tree = (object)adaptor.Create(char_literal900, "char_literal900", retval);
			adaptor.AddChild(root_0, char_literal900_tree);
			}
			DebugLocation(881, 65);
			PushFollow(Follow._embedded_statement_in_fixed_statement6460);
			embedded_statement901=embedded_statement();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, embedded_statement901.Tree, embedded_statement901, "embedded_statement901", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("fixed_statement", 246);
			LeaveRule("fixed_statement", 246);
			LeaveRule_fixed_statement();
			if (state.backtracking > 0) { Memoize(input, 246, fixed_statement_StartIndex); }

		}
		DebugLocation(881, 83);
		} finally { DebugExitRule(GrammarFileName, "fixed_statement"); }
		return retval;

	}
	// $ANTLR end "fixed_statement"

	partial void EnterRule_fixed_pointer_declarators();
	partial void LeaveRule_fixed_pointer_declarators();
	// $ANTLR start "fixed_pointer_declarators"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:882:1: fixed_pointer_declarators : fixed_pointer_declarator ( ',' fixed_pointer_declarator )* ;
	[GrammarRule("fixed_pointer_declarators")]
	private Antlr3AstNode fixed_pointer_declarators()
	{
		EnterRule_fixed_pointer_declarators();
		EnterRule("fixed_pointer_declarators", 247);
		var retval = new Antlr3AstNode("fixed_pointer_declarators");
		
		retval.Start = (IToken)input.LT(1);
		int fixed_pointer_declarators_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal903 = default(IToken);
		Antlr3AstNode fixed_pointer_declarator902 = default(Antlr3AstNode);
		Antlr3AstNode fixed_pointer_declarator904 = default(Antlr3AstNode);

		object char_literal903_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "fixed_pointer_declarators");
		DebugLocation(882, 62);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 247)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:882:26: ( fixed_pointer_declarator ( ',' fixed_pointer_declarator )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:883:2: fixed_pointer_declarator ( ',' fixed_pointer_declarator )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(883, 2);
			PushFollow(Follow._fixed_pointer_declarator_in_fixed_pointer_declarators6468);
			fixed_pointer_declarator902=fixed_pointer_declarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, fixed_pointer_declarator902.Tree, fixed_pointer_declarator902, "fixed_pointer_declarator902", retval);
			DebugLocation(883, 29);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:883:29: ( ',' fixed_pointer_declarator )*
			try { DebugEnterSubRule(244);
			while (true)
			{
				int alt244=2;
				try { DebugEnterDecision(244, false);
				int LA244_1 = input.LA(1);

				if ((LA244_1==74))
				{
					alt244 = 1;
				}


				} finally { DebugExitDecision(244); }
				switch ( alt244 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:883:30: ',' fixed_pointer_declarator
					{
					DebugLocation(883, 30);
					char_literal903=(IToken)Match(input,74,Follow._74_in_fixed_pointer_declarators6473); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal903_tree = (object)adaptor.Create(char_literal903, "char_literal903", retval);
					adaptor.AddChild(root_0, char_literal903_tree);
					}
					DebugLocation(883, 36);
					PushFollow(Follow._fixed_pointer_declarator_in_fixed_pointer_declarators6477);
					fixed_pointer_declarator904=fixed_pointer_declarator();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, fixed_pointer_declarator904.Tree, fixed_pointer_declarator904, "fixed_pointer_declarator904", retval);

					}
					break;

				default:
					goto loop244;
				}
			}

			loop244:
				;

			} finally { DebugExitSubRule(244); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("fixed_pointer_declarators", 247);
			LeaveRule("fixed_pointer_declarators", 247);
			LeaveRule_fixed_pointer_declarators();
			if (state.backtracking > 0) { Memoize(input, 247, fixed_pointer_declarators_StartIndex); }

		}
		DebugLocation(883, 62);
		} finally { DebugExitRule(GrammarFileName, "fixed_pointer_declarators"); }
		return retval;

	}
	// $ANTLR end "fixed_pointer_declarators"

	partial void EnterRule_fixed_pointer_declarator();
	partial void LeaveRule_fixed_pointer_declarator();
	// $ANTLR start "fixed_pointer_declarator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:884:1: fixed_pointer_declarator : identifier '=' fixed_pointer_initializer ;
	[GrammarRule("fixed_pointer_declarator")]
	private Antlr3AstNode fixed_pointer_declarator()
	{
		EnterRule_fixed_pointer_declarator();
		EnterRule("fixed_pointer_declarator", 248);
		var retval = new Antlr3AstNode("fixed_pointer_declarator");
		
		retval.Start = (IToken)input.LT(1);
		int fixed_pointer_declarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal906 = default(IToken);
		Antlr3AstNode identifier905 = default(Antlr3AstNode);
		Antlr3AstNode fixed_pointer_initializer907 = default(Antlr3AstNode);

		object char_literal906_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "fixed_pointer_declarator");
		DebugLocation(884, 46);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 248)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:884:25: ( identifier '=' fixed_pointer_initializer )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:885:2: identifier '=' fixed_pointer_initializer
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(885, 2);
			PushFollow(Follow._identifier_in_fixed_pointer_declarator6487);
			identifier905=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier905.Tree, identifier905, "identifier905", retval);
			DebugLocation(885, 15);
			char_literal906=(IToken)Match(input,85,Follow._85_in_fixed_pointer_declarator6491); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal906_tree = (object)adaptor.Create(char_literal906, "char_literal906", retval);
			adaptor.AddChild(root_0, char_literal906_tree);
			}
			DebugLocation(885, 21);
			PushFollow(Follow._fixed_pointer_initializer_in_fixed_pointer_declarator6495);
			fixed_pointer_initializer907=fixed_pointer_initializer();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, fixed_pointer_initializer907.Tree, fixed_pointer_initializer907, "fixed_pointer_initializer907", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("fixed_pointer_declarator", 248);
			LeaveRule("fixed_pointer_declarator", 248);
			LeaveRule_fixed_pointer_declarator();
			if (state.backtracking > 0) { Memoize(input, 248, fixed_pointer_declarator_StartIndex); }

		}
		DebugLocation(885, 46);
		} finally { DebugExitRule(GrammarFileName, "fixed_pointer_declarator"); }
		return retval;

	}
	// $ANTLR end "fixed_pointer_declarator"

	partial void EnterRule_fixed_pointer_initializer();
	partial void LeaveRule_fixed_pointer_initializer();
	// $ANTLR start "fixed_pointer_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:886:1: fixed_pointer_initializer : expression ;
	[GrammarRule("fixed_pointer_initializer")]
	private Antlr3AstNode fixed_pointer_initializer()
	{
		EnterRule_fixed_pointer_initializer();
		EnterRule("fixed_pointer_initializer", 249);
		var retval = new Antlr3AstNode("fixed_pointer_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int fixed_pointer_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode expression908 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "fixed_pointer_initializer");
		DebugLocation(886, 11);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 249)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:886:26: ( expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:888:2: expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(888, 2);
			PushFollow(Follow._expression_in_fixed_pointer_initializer6505);
			expression908=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression908.Tree, expression908, "expression908", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("fixed_pointer_initializer", 249);
			LeaveRule("fixed_pointer_initializer", 249);
			LeaveRule_fixed_pointer_initializer();
			if (state.backtracking > 0) { Memoize(input, 249, fixed_pointer_initializer_StartIndex); }

		}
		DebugLocation(888, 11);
		} finally { DebugExitRule(GrammarFileName, "fixed_pointer_initializer"); }
		return retval;

	}
	// $ANTLR end "fixed_pointer_initializer"

	partial void EnterRule_unsafe_statement();
	partial void LeaveRule_unsafe_statement();
	// $ANTLR start "unsafe_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:889:1: unsafe_statement : 'unsafe' block ;
	[GrammarRule("unsafe_statement")]
	private Antlr3AstNode unsafe_statement()
	{
		EnterRule_unsafe_statement();
		EnterRule("unsafe_statement", 250);
		var retval = new Antlr3AstNode("unsafe_statement");
		
		retval.Start = (IToken)input.LT(1);
		int unsafe_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal909 = default(IToken);
		Antlr3AstNode block910 = default(Antlr3AstNode);

		object string_literal909_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "unsafe_statement");
		DebugLocation(889, 17);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 250)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:889:17: ( 'unsafe' block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:890:2: 'unsafe' block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(890, 2);
			string_literal909=(IToken)Match(input,190,Follow._190_in_unsafe_statement6512); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal909_tree = (object)adaptor.Create(string_literal909, "string_literal909", retval);
			adaptor.AddChild(root_0, string_literal909_tree);
			}
			DebugLocation(890, 13);
			PushFollow(Follow._block_in_unsafe_statement6516);
			block910=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block910.Tree, block910, "block910", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unsafe_statement", 250);
			LeaveRule("unsafe_statement", 250);
			LeaveRule_unsafe_statement();
			if (state.backtracking > 0) { Memoize(input, 250, unsafe_statement_StartIndex); }

		}
		DebugLocation(890, 17);
		} finally { DebugExitRule(GrammarFileName, "unsafe_statement"); }
		return retval;

	}
	// $ANTLR end "unsafe_statement"

	partial void EnterRule_labeled_statement();
	partial void LeaveRule_labeled_statement();
	// $ANTLR start "labeled_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:891:1: labeled_statement : identifier ':' statement ;
	[GrammarRule("labeled_statement")]
	private Antlr3AstNode labeled_statement()
	{
		EnterRule_labeled_statement();
		EnterRule("labeled_statement", 251);
		var retval = new Antlr3AstNode("labeled_statement");
		
		retval.Start = (IToken)input.LT(1);
		int labeled_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal912 = default(IToken);
		Antlr3AstNode identifier911 = default(Antlr3AstNode);
		Antlr3AstNode statement913 = default(Antlr3AstNode);

		object char_literal912_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "labeled_statement");
		DebugLocation(891, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 251)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:891:18: ( identifier ':' statement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:892:2: identifier ':' statement
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(892, 2);
			PushFollow(Follow._identifier_in_labeled_statement6523);
			identifier911=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier911.Tree, identifier911, "identifier911", retval);
			DebugLocation(892, 15);
			char_literal912=(IToken)Match(input,79,Follow._79_in_labeled_statement6527); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal912_tree = (object)adaptor.Create(char_literal912, "char_literal912", retval);
			adaptor.AddChild(root_0, char_literal912_tree);
			}
			DebugLocation(892, 21);
			PushFollow(Follow._statement_in_labeled_statement6531);
			statement913=statement();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, statement913.Tree, statement913, "statement913", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("labeled_statement", 251);
			LeaveRule("labeled_statement", 251);
			LeaveRule_labeled_statement();
			if (state.backtracking > 0) { Memoize(input, 251, labeled_statement_StartIndex); }

		}
		DebugLocation(892, 30);
		} finally { DebugExitRule(GrammarFileName, "labeled_statement"); }
		return retval;

	}
	// $ANTLR end "labeled_statement"

	partial void EnterRule_declaration_statement();
	partial void LeaveRule_declaration_statement();
	// $ANTLR start "declaration_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:893:1: declaration_statement : ( local_variable_declaration | local_constant_declaration ) ';' ;
	[GrammarRule("declaration_statement")]
	private Antlr3AstNode declaration_statement()
	{
		EnterRule_declaration_statement();
		EnterRule("declaration_statement", 252);
		var retval = new Antlr3AstNode("declaration_statement");
		
		retval.Start = (IToken)input.LT(1);
		int declaration_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal916 = default(IToken);
		Antlr3AstNode local_variable_declaration914 = default(Antlr3AstNode);
		Antlr3AstNode local_constant_declaration915 = default(Antlr3AstNode);

		object char_literal916_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "declaration_statement");
		DebugLocation(893, 35);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 252)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:893:22: ( ( local_variable_declaration | local_constant_declaration ) ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:894:2: ( local_variable_declaration | local_constant_declaration ) ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(894, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:894:2: ( local_variable_declaration | local_constant_declaration )
			int alt245=2;
			try { DebugEnterSubRule(245);
			try { DebugEnterDecision(245, false);
			int LA245_1 = input.LA(1);

			if ((LA245_1==IDENTIFIER||LA245_1==95||(LA245_1>=97 && LA245_1<=98)||(LA245_1>=100 && LA245_1<=101)||LA245_1==105||(LA245_1>=107 && LA245_1<=108)||LA245_1==111||LA245_1==116||LA245_1==119||(LA245_1>=121 && LA245_1<=122)||LA245_1==124||LA245_1==128||LA245_1==131||LA245_1==134||LA245_1==137||LA245_1==140||LA245_1==143||(LA245_1>=145 && LA245_1<=146)||(LA245_1>=148 && LA245_1<=150)||(LA245_1>=153 && LA245_1<=154)||LA245_1==156||LA245_1==159||LA245_1==162||LA245_1==164||LA245_1==169||LA245_1==171||(LA245_1>=173 && LA245_1<=175)||LA245_1==179||LA245_1==185||(LA245_1>=187 && LA245_1<=188)||(LA245_1>=191 && LA245_1<=192)||LA245_1==194||LA245_1==196||LA245_1==198))
			{
				alt245 = 1;
			}
			else if ((LA245_1==114))
			{
				alt245 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 245, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(245); }
			switch (alt245)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:894:3: local_variable_declaration
				{
				DebugLocation(894, 3);
				PushFollow(Follow._local_variable_declaration_in_declaration_statement6540);
				local_variable_declaration914=local_variable_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, local_variable_declaration914.Tree, local_variable_declaration914, "local_variable_declaration914", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:895:4: local_constant_declaration
				{
				DebugLocation(895, 4);
				PushFollow(Follow._local_constant_declaration_in_declaration_statement6546);
				local_constant_declaration915=local_constant_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, local_constant_declaration915.Tree, local_constant_declaration915, "local_constant_declaration915", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(245); }

			DebugLocation(895, 32);
			char_literal916=(IToken)Match(input,SEMI,Follow._SEMI_in_declaration_statement6549); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal916_tree = (object)adaptor.Create(char_literal916, "char_literal916", retval);
			adaptor.AddChild(root_0, char_literal916_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("declaration_statement", 252);
			LeaveRule("declaration_statement", 252);
			LeaveRule_declaration_statement();
			if (state.backtracking > 0) { Memoize(input, 252, declaration_statement_StartIndex); }

		}
		DebugLocation(895, 35);
		} finally { DebugExitRule(GrammarFileName, "declaration_statement"); }
		return retval;

	}
	// $ANTLR end "declaration_statement"

	partial void EnterRule_local_variable_declaration();
	partial void LeaveRule_local_variable_declaration();
	// $ANTLR start "local_variable_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:896:1: local_variable_declaration : local_variable_type local_variable_declarators ;
	[GrammarRule("local_variable_declaration")]
	private Antlr3AstNode local_variable_declaration()
	{
		EnterRule_local_variable_declaration();
		EnterRule("local_variable_declaration", 253);
		var retval = new Antlr3AstNode("local_variable_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int local_variable_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode local_variable_type917 = default(Antlr3AstNode);
		Antlr3AstNode local_variable_declarators918 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "local_variable_declaration");
		DebugLocation(896, 50);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 253)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:896:27: ( local_variable_type local_variable_declarators )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:897:2: local_variable_type local_variable_declarators
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(897, 2);
			PushFollow(Follow._local_variable_type_in_local_variable_declaration6557);
			local_variable_type917=local_variable_type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, local_variable_type917.Tree, local_variable_type917, "local_variable_type917", retval);
			DebugLocation(897, 24);
			PushFollow(Follow._local_variable_declarators_in_local_variable_declaration6561);
			local_variable_declarators918=local_variable_declarators();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, local_variable_declarators918.Tree, local_variable_declarators918, "local_variable_declarators918", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("local_variable_declaration", 253);
			LeaveRule("local_variable_declaration", 253);
			LeaveRule_local_variable_declaration();
			if (state.backtracking > 0) { Memoize(input, 253, local_variable_declaration_StartIndex); }

		}
		DebugLocation(897, 50);
		} finally { DebugExitRule(GrammarFileName, "local_variable_declaration"); }
		return retval;

	}
	// $ANTLR end "local_variable_declaration"

	partial void EnterRule_local_variable_type();
	partial void LeaveRule_local_variable_type();
	// $ANTLR start "local_variable_type"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:898:1: local_variable_type : ( ( 'var' )=> 'var' | ( 'dynamic' )=> 'dynamic' | type );
	[GrammarRule("local_variable_type")]
	private Antlr3AstNode local_variable_type()
	{
		EnterRule_local_variable_type();
		EnterRule("local_variable_type", 254);
		var retval = new Antlr3AstNode("local_variable_type");
		
		retval.Start = (IToken)input.LT(1);
		int local_variable_type_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal919 = default(IToken);
		IToken string_literal920 = default(IToken);
		Antlr3AstNode type921 = default(Antlr3AstNode);

		object string_literal919_tree = default(object);
		object string_literal920_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "local_variable_type");
		DebugLocation(898, 8);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 254)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:898:20: ( ( 'var' )=> 'var' | ( 'dynamic' )=> 'dynamic' | type )
			int alt246=3;
			try { DebugEnterDecision(246, false);
			switch (input.LA(1))
			{
			case 192:
				{
				int LA246_2 = input.LA(2);

				if ((EvaluatePredicate(synpred32_cs_fragment)))
				{
					alt246 = 1;
				}
				else if ((true))
				{
					alt246 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 246, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 122:
				{
				int LA246_2 = input.LA(2);

				if ((EvaluatePredicate(synpred33_cs_fragment)))
				{
					alt246 = 2;
				}
				else if ((true))
				{
					alt246 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 246, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 107:
			case 108:
			case 111:
			case 116:
			case 119:
			case 121:
			case 124:
			case 128:
			case 131:
			case 134:
			case 137:
			case 140:
			case 143:
			case 145:
			case 146:
			case 148:
			case 149:
			case 150:
			case 153:
			case 154:
			case 156:
			case 159:
			case 162:
			case 164:
			case 169:
			case 171:
			case 173:
			case 174:
			case 175:
			case 179:
			case 185:
			case 187:
			case 188:
			case 191:
			case 194:
			case 196:
			case 198:
				{
				alt246 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 246, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(246); }
			switch (alt246)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:899:2: ( 'var' )=> 'var'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(899, 13);
				string_literal919=(IToken)Match(input,192,Follow._192_in_local_variable_type6575); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal919_tree = (object)adaptor.Create(string_literal919, "string_literal919", retval);
				adaptor.AddChild(root_0, string_literal919_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:900:4: ( 'dynamic' )=> 'dynamic'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(900, 19);
				string_literal920=(IToken)Match(input,122,Follow._122_in_local_variable_type6586); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal920_tree = (object)adaptor.Create(string_literal920, "string_literal920", retval);
				adaptor.AddChild(root_0, string_literal920_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:901:4: type
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(901, 4);
				PushFollow(Follow._type_in_local_variable_type6591);
				type921=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type921.Tree, type921, "type921", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("local_variable_type", 254);
			LeaveRule("local_variable_type", 254);
			LeaveRule_local_variable_type();
			if (state.backtracking > 0) { Memoize(input, 254, local_variable_type_StartIndex); }

		}
		DebugLocation(901, 8);
		} finally { DebugExitRule(GrammarFileName, "local_variable_type"); }
		return retval;

	}
	// $ANTLR end "local_variable_type"

	partial void EnterRule_local_variable_declarators();
	partial void LeaveRule_local_variable_declarators();
	// $ANTLR start "local_variable_declarators"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:902:1: local_variable_declarators : local_variable_declarator ( ',' local_variable_declarator )* ;
	[GrammarRule("local_variable_declarators")]
	private Antlr3AstNode local_variable_declarators()
	{
		EnterRule_local_variable_declarators();
		EnterRule("local_variable_declarators", 255);
		var retval = new Antlr3AstNode("local_variable_declarators");
		
		retval.Start = (IToken)input.LT(1);
		int local_variable_declarators_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal923 = default(IToken);
		Antlr3AstNode local_variable_declarator922 = default(Antlr3AstNode);
		Antlr3AstNode local_variable_declarator924 = default(Antlr3AstNode);

		object char_literal923_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "local_variable_declarators");
		DebugLocation(902, 60);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 255)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:902:27: ( local_variable_declarator ( ',' local_variable_declarator )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:903:2: local_variable_declarator ( ',' local_variable_declarator )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(903, 2);
			PushFollow(Follow._local_variable_declarator_in_local_variable_declarators6599);
			local_variable_declarator922=local_variable_declarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, local_variable_declarator922.Tree, local_variable_declarator922, "local_variable_declarator922", retval);
			DebugLocation(903, 28);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:903:28: ( ',' local_variable_declarator )*
			try { DebugEnterSubRule(247);
			while (true)
			{
				int alt247=2;
				try { DebugEnterDecision(247, false);
				int LA247_1 = input.LA(1);

				if ((LA247_1==74))
				{
					alt247 = 1;
				}


				} finally { DebugExitDecision(247); }
				switch ( alt247 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:903:29: ',' local_variable_declarator
					{
					DebugLocation(903, 29);
					char_literal923=(IToken)Match(input,74,Follow._74_in_local_variable_declarators6602); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal923_tree = (object)adaptor.Create(char_literal923, "char_literal923", retval);
					adaptor.AddChild(root_0, char_literal923_tree);
					}
					DebugLocation(903, 33);
					PushFollow(Follow._local_variable_declarator_in_local_variable_declarators6604);
					local_variable_declarator924=local_variable_declarator();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, local_variable_declarator924.Tree, local_variable_declarator924, "local_variable_declarator924", retval);

					}
					break;

				default:
					goto loop247;
				}
			}

			loop247:
				;

			} finally { DebugExitSubRule(247); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("local_variable_declarators", 255);
			LeaveRule("local_variable_declarators", 255);
			LeaveRule_local_variable_declarators();
			if (state.backtracking > 0) { Memoize(input, 255, local_variable_declarators_StartIndex); }

		}
		DebugLocation(903, 60);
		} finally { DebugExitRule(GrammarFileName, "local_variable_declarators"); }
		return retval;

	}
	// $ANTLR end "local_variable_declarators"

	partial void EnterRule_local_variable_declarator();
	partial void LeaveRule_local_variable_declarator();
	// $ANTLR start "local_variable_declarator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:904:1: local_variable_declarator : identifier ( '=' local_variable_initializer )? ;
	[GrammarRule("local_variable_declarator")]
	private Antlr3AstNode local_variable_declarator()
	{
		EnterRule_local_variable_declarator();
		EnterRule("local_variable_declarator", 256);
		var retval = new Antlr3AstNode("local_variable_declarator");
		
		retval.Start = (IToken)input.LT(1);
		int local_variable_declarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal926 = default(IToken);
		Antlr3AstNode identifier925 = default(Antlr3AstNode);
		Antlr3AstNode local_variable_initializer927 = default(Antlr3AstNode);

		object char_literal926_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "local_variable_declarator");
		DebugLocation(904, 48);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 256)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:904:26: ( identifier ( '=' local_variable_initializer )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:905:2: identifier ( '=' local_variable_initializer )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(905, 2);
			PushFollow(Follow._identifier_in_local_variable_declarator6614);
			identifier925=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier925.Tree, identifier925, "identifier925", retval);
			DebugLocation(905, 13);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:905:13: ( '=' local_variable_initializer )?
			int alt248=2;
			try { DebugEnterSubRule(248);
			try { DebugEnterDecision(248, false);
			int LA248_1 = input.LA(1);

			if ((LA248_1==85))
			{
				alt248 = 1;
			}
			} finally { DebugExitDecision(248); }
			switch (alt248)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:905:14: '=' local_variable_initializer
				{
				DebugLocation(905, 14);
				char_literal926=(IToken)Match(input,85,Follow._85_in_local_variable_declarator6617); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal926_tree = (object)adaptor.Create(char_literal926, "char_literal926", retval);
				adaptor.AddChild(root_0, char_literal926_tree);
				}
				DebugLocation(905, 20);
				PushFollow(Follow._local_variable_initializer_in_local_variable_declarator6621);
				local_variable_initializer927=local_variable_initializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, local_variable_initializer927.Tree, local_variable_initializer927, "local_variable_initializer927", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(248); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("local_variable_declarator", 256);
			LeaveRule("local_variable_declarator", 256);
			LeaveRule_local_variable_declarator();
			if (state.backtracking > 0) { Memoize(input, 256, local_variable_declarator_StartIndex); }

		}
		DebugLocation(905, 48);
		} finally { DebugExitRule(GrammarFileName, "local_variable_declarator"); }
		return retval;

	}
	// $ANTLR end "local_variable_declarator"

	partial void EnterRule_local_variable_initializer();
	partial void LeaveRule_local_variable_initializer();
	// $ANTLR start "local_variable_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:906:1: local_variable_initializer : ( expression | array_initializer | stackalloc_initializer );
	[GrammarRule("local_variable_initializer")]
	private Antlr3AstNode local_variable_initializer()
	{
		EnterRule_local_variable_initializer();
		EnterRule("local_variable_initializer", 257);
		var retval = new Antlr3AstNode("local_variable_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int local_variable_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode expression928 = default(Antlr3AstNode);
		Antlr3AstNode array_initializer929 = default(Antlr3AstNode);
		Antlr3AstNode stackalloc_initializer930 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "local_variable_initializer");
		DebugLocation(906, 25);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 257)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:906:27: ( expression | array_initializer | stackalloc_initializer )
			int alt249=3;
			try { DebugEnterDecision(249, false);
			switch (input.LA(1))
			{
			case Character_literal:
			case FALSE:
			case Hex_number:
			case IDENTIFIER:
			case MINUS:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 61:
			case 66:
			case 68:
			case 69:
			case 71:
			case 72:
			case 75:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 102:
			case 103:
			case 104:
			case 105:
			case 107:
			case 108:
			case 111:
			case 112:
			case 116:
			case 117:
			case 118:
			case 119:
			case 121:
			case 122:
			case 124:
			case 128:
			case 131:
			case 134:
			case 137:
			case 140:
			case 143:
			case 145:
			case 146:
			case 148:
			case 149:
			case 150:
			case 152:
			case 153:
			case 154:
			case 156:
			case 159:
			case 162:
			case 164:
			case 169:
			case 171:
			case 173:
			case 174:
			case 175:
			case 176:
			case 179:
			case 182:
			case 185:
			case 186:
			case 187:
			case 188:
			case 189:
			case 191:
			case 192:
			case 196:
			case 198:
			case 204:
				{
				alt249 = 1;
				}
				break;
			case 199:
				{
				alt249 = 2;
				}
				break;
			case 177:
				{
				alt249 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 249, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(249); }
			switch (alt249)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:907:2: expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(907, 2);
				PushFollow(Follow._expression_in_local_variable_initializer6632);
				expression928=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression928.Tree, expression928, "expression928", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:908:4: array_initializer
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(908, 4);
				PushFollow(Follow._array_initializer_in_local_variable_initializer6637);
				array_initializer929=array_initializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, array_initializer929.Tree, array_initializer929, "array_initializer929", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:909:4: stackalloc_initializer
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(909, 4);
				PushFollow(Follow._stackalloc_initializer_in_local_variable_initializer6643);
				stackalloc_initializer930=stackalloc_initializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, stackalloc_initializer930.Tree, stackalloc_initializer930, "stackalloc_initializer930", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("local_variable_initializer", 257);
			LeaveRule("local_variable_initializer", 257);
			LeaveRule_local_variable_initializer();
			if (state.backtracking > 0) { Memoize(input, 257, local_variable_initializer_StartIndex); }

		}
		DebugLocation(909, 25);
		} finally { DebugExitRule(GrammarFileName, "local_variable_initializer"); }
		return retval;

	}
	// $ANTLR end "local_variable_initializer"

	partial void EnterRule_stackalloc_initializer();
	partial void LeaveRule_stackalloc_initializer();
	// $ANTLR start "stackalloc_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:910:1: stackalloc_initializer : 'stackalloc' unmanaged_type '[' expression ']' ;
	[GrammarRule("stackalloc_initializer")]
	private Antlr3AstNode stackalloc_initializer()
	{
		EnterRule_stackalloc_initializer();
		EnterRule("stackalloc_initializer", 258);
		var retval = new Antlr3AstNode("stackalloc_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int stackalloc_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal931 = default(IToken);
		IToken char_literal933 = default(IToken);
		IToken char_literal935 = default(IToken);
		Antlr3AstNode unmanaged_type932 = default(Antlr3AstNode);
		Antlr3AstNode expression934 = default(Antlr3AstNode);

		object string_literal931_tree = default(object);
		object char_literal933_tree = default(object);
		object char_literal935_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "stackalloc_initializer");
		DebugLocation(910, 56);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 258)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:910:23: ( 'stackalloc' unmanaged_type '[' expression ']' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:911:2: 'stackalloc' unmanaged_type '[' expression ']'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(911, 2);
			string_literal931=(IToken)Match(input,177,Follow._177_in_stackalloc_initializer6650); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal931_tree = (object)adaptor.Create(string_literal931, "string_literal931", retval);
			adaptor.AddChild(root_0, string_literal931_tree);
			}
			DebugLocation(911, 17);
			PushFollow(Follow._unmanaged_type_in_stackalloc_initializer6654);
			unmanaged_type932=unmanaged_type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, unmanaged_type932.Tree, unmanaged_type932, "unmanaged_type932", retval);
			DebugLocation(911, 34);
			char_literal933=(IToken)Match(input,91,Follow._91_in_stackalloc_initializer6658); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal933_tree = (object)adaptor.Create(char_literal933, "char_literal933", retval);
			adaptor.AddChild(root_0, char_literal933_tree);
			}
			DebugLocation(911, 40);
			PushFollow(Follow._expression_in_stackalloc_initializer6662);
			expression934=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression934.Tree, expression934, "expression934", retval);
			DebugLocation(911, 53);
			char_literal935=(IToken)Match(input,92,Follow._92_in_stackalloc_initializer6666); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal935_tree = (object)adaptor.Create(char_literal935, "char_literal935", retval);
			adaptor.AddChild(root_0, char_literal935_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("stackalloc_initializer", 258);
			LeaveRule("stackalloc_initializer", 258);
			LeaveRule_stackalloc_initializer();
			if (state.backtracking > 0) { Memoize(input, 258, stackalloc_initializer_StartIndex); }

		}
		DebugLocation(911, 56);
		} finally { DebugExitRule(GrammarFileName, "stackalloc_initializer"); }
		return retval;

	}
	// $ANTLR end "stackalloc_initializer"

	partial void EnterRule_local_constant_declaration();
	partial void LeaveRule_local_constant_declaration();
	// $ANTLR start "local_constant_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:912:1: local_constant_declaration : 'const' type constant_declarators ;
	[GrammarRule("local_constant_declaration")]
	private Antlr3AstNode local_constant_declaration()
	{
		EnterRule_local_constant_declaration();
		EnterRule("local_constant_declaration", 259);
		var retval = new Antlr3AstNode("local_constant_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int local_constant_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal936 = default(IToken);
		Antlr3AstNode type937 = default(Antlr3AstNode);
		Antlr3AstNode constant_declarators938 = default(Antlr3AstNode);

		object string_literal936_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "local_constant_declaration");
		DebugLocation(912, 39);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 259)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:912:27: ( 'const' type constant_declarators )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:913:2: 'const' type constant_declarators
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(913, 2);
			string_literal936=(IToken)Match(input,114,Follow._114_in_local_constant_declaration6674); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal936_tree = (object)adaptor.Create(string_literal936, "string_literal936", retval);
			adaptor.AddChild(root_0, string_literal936_tree);
			}
			DebugLocation(913, 12);
			PushFollow(Follow._type_in_local_constant_declaration6678);
			type937=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type937.Tree, type937, "type937", retval);
			DebugLocation(913, 19);
			PushFollow(Follow._constant_declarators_in_local_constant_declaration6682);
			constant_declarators938=constant_declarators();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, constant_declarators938.Tree, constant_declarators938, "constant_declarators938", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("local_constant_declaration", 259);
			LeaveRule("local_constant_declaration", 259);
			LeaveRule_local_constant_declaration();
			if (state.backtracking > 0) { Memoize(input, 259, local_constant_declaration_StartIndex); }

		}
		DebugLocation(913, 39);
		} finally { DebugExitRule(GrammarFileName, "local_constant_declaration"); }
		return retval;

	}
	// $ANTLR end "local_constant_declaration"

	partial void EnterRule_expression_statement();
	partial void LeaveRule_expression_statement();
	// $ANTLR start "expression_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:914:1: expression_statement : expression ';' ;
	[GrammarRule("expression_statement")]
	private Antlr3AstNode expression_statement()
	{
		EnterRule_expression_statement();
		EnterRule("expression_statement", 260);
		var retval = new Antlr3AstNode("expression_statement");
		
		retval.Start = (IToken)input.LT(1);
		int expression_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal940 = default(IToken);
		Antlr3AstNode expression939 = default(Antlr3AstNode);

		object char_literal940_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "expression_statement");
		DebugLocation(914, 18);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 260)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:914:21: ( expression ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:915:2: expression ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(915, 2);
			PushFollow(Follow._expression_in_expression_statement6690);
			expression939=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression939.Tree, expression939, "expression939", retval);
			DebugLocation(915, 15);
			char_literal940=(IToken)Match(input,SEMI,Follow._SEMI_in_expression_statement6694); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal940_tree = (object)adaptor.Create(char_literal940, "char_literal940", retval);
			adaptor.AddChild(root_0, char_literal940_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("expression_statement", 260);
			LeaveRule("expression_statement", 260);
			LeaveRule_expression_statement();
			if (state.backtracking > 0) { Memoize(input, 260, expression_statement_StartIndex); }

		}
		DebugLocation(915, 18);
		} finally { DebugExitRule(GrammarFileName, "expression_statement"); }
		return retval;

	}
	// $ANTLR end "expression_statement"

	partial void EnterRule_statement_expression();
	partial void LeaveRule_statement_expression();
	// $ANTLR start "statement_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:918:1: statement_expression : expression ;
	[GrammarRule("statement_expression")]
	private Antlr3AstNode statement_expression()
	{
		EnterRule_statement_expression();
		EnterRule("statement_expression", 261);
		var retval = new Antlr3AstNode("statement_expression");
		
		retval.Start = (IToken)input.LT(1);
		int statement_expression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode expression941 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "statement_expression");
		DebugLocation(918, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 261)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:918:21: ( expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:919:2: expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(919, 2);
			PushFollow(Follow._expression_in_statement_expression6704);
			expression941=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression941.Tree, expression941, "expression941", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("statement_expression", 261);
			LeaveRule("statement_expression", 261);
			LeaveRule_statement_expression();
			if (state.backtracking > 0) { Memoize(input, 261, statement_expression_StartIndex); }

		}
		DebugLocation(920, 1);
		} finally { DebugExitRule(GrammarFileName, "statement_expression"); }
		return retval;

	}
	// $ANTLR end "statement_expression"

	partial void EnterRule_selection_statement();
	partial void LeaveRule_selection_statement();
	// $ANTLR start "selection_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:921:1: selection_statement : ( if_statement | switch_statement );
	[GrammarRule("selection_statement")]
	private Antlr3AstNode selection_statement()
	{
		EnterRule_selection_statement();
		EnterRule("selection_statement", 262);
		var retval = new Antlr3AstNode("selection_statement");
		
		retval.Start = (IToken)input.LT(1);
		int selection_statement_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode if_statement942 = default(Antlr3AstNode);
		Antlr3AstNode switch_statement943 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "selection_statement");
		DebugLocation(921, 20);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 262)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:921:20: ( if_statement | switch_statement )
			int alt250=2;
			try { DebugEnterDecision(250, false);
			int LA250_1 = input.LA(1);

			if ((LA250_1==IF))
			{
				alt250 = 1;
			}
			else if ((LA250_1==181))
			{
				alt250 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 250, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(250); }
			switch (alt250)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:922:2: if_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(922, 2);
				PushFollow(Follow._if_statement_in_selection_statement6713);
				if_statement942=if_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, if_statement942.Tree, if_statement942, "if_statement942", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:923:4: switch_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(923, 4);
				PushFollow(Follow._switch_statement_in_selection_statement6718);
				switch_statement943=switch_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, switch_statement943.Tree, switch_statement943, "switch_statement943", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("selection_statement", 262);
			LeaveRule("selection_statement", 262);
			LeaveRule_selection_statement();
			if (state.backtracking > 0) { Memoize(input, 262, selection_statement_StartIndex); }

		}
		DebugLocation(923, 20);
		} finally { DebugExitRule(GrammarFileName, "selection_statement"); }
		return retval;

	}
	// $ANTLR end "selection_statement"

	partial void EnterRule_if_statement();
	partial void LeaveRule_if_statement();
	// $ANTLR start "if_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:924:1: if_statement : 'if' '(' boolean_expression ')' embedded_statement ( ( 'else' )=> else_statement )? ;
	[GrammarRule("if_statement")]
	private Antlr3AstNode if_statement()
	{
		EnterRule_if_statement();
		EnterRule("if_statement", 263);
		var retval = new Antlr3AstNode("if_statement");
		
		retval.Start = (IToken)input.LT(1);
		int if_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal944 = default(IToken);
		IToken char_literal945 = default(IToken);
		IToken char_literal947 = default(IToken);
		Antlr3AstNode boolean_expression946 = default(Antlr3AstNode);
		Antlr3AstNode embedded_statement948 = default(Antlr3AstNode);
		Antlr3AstNode else_statement949 = default(Antlr3AstNode);

		object string_literal944_tree = default(object);
		object char_literal945_tree = default(object);
		object char_literal947_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "if_statement");
		DebugLocation(924, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 263)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:924:13: ( 'if' '(' boolean_expression ')' embedded_statement ( ( 'else' )=> else_statement )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:926:2: 'if' '(' boolean_expression ')' embedded_statement ( ( 'else' )=> else_statement )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(926, 2);
			string_literal944=(IToken)Match(input,IF,Follow._IF_in_if_statement6728); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal944_tree = (object)adaptor.Create(string_literal944, "string_literal944", retval);
			adaptor.AddChild(root_0, string_literal944_tree);
			}
			DebugLocation(926, 9);
			char_literal945=(IToken)Match(input,68,Follow._68_in_if_statement6732); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal945_tree = (object)adaptor.Create(char_literal945, "char_literal945", retval);
			adaptor.AddChild(root_0, char_literal945_tree);
			}
			DebugLocation(926, 15);
			PushFollow(Follow._boolean_expression_in_if_statement6736);
			boolean_expression946=boolean_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, boolean_expression946.Tree, boolean_expression946, "boolean_expression946", retval);
			DebugLocation(926, 36);
			char_literal947=(IToken)Match(input,RPAREN,Follow._RPAREN_in_if_statement6740); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal947_tree = (object)adaptor.Create(char_literal947, "char_literal947", retval);
			adaptor.AddChild(root_0, char_literal947_tree);
			}
			DebugLocation(926, 42);
			PushFollow(Follow._embedded_statement_in_if_statement6744);
			embedded_statement948=embedded_statement();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, embedded_statement948.Tree, embedded_statement948, "embedded_statement948", retval);
			DebugLocation(926, 61);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:926:61: ( ( 'else' )=> else_statement )?
			int alt251=2;
			try { DebugEnterSubRule(251);
			try { DebugEnterDecision(251, false);
			int LA251_1 = input.LA(1);

			if ((LA251_1==123))
			{
				int LA251_2 = input.LA(2);

				if ((EvaluatePredicate(synpred34_cs_fragment)))
				{
					alt251 = 1;
				}
			}
			} finally { DebugExitDecision(251); }
			switch (alt251)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:926:62: ( 'else' )=> else_statement
				{
				DebugLocation(926, 74);
				PushFollow(Follow._else_statement_in_if_statement6753);
				else_statement949=else_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, else_statement949.Tree, else_statement949, "else_statement949", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(251); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("if_statement", 263);
			LeaveRule("if_statement", 263);
			LeaveRule_if_statement();
			if (state.backtracking > 0) { Memoize(input, 263, if_statement_StartIndex); }

		}
		DebugLocation(927, 1);
		} finally { DebugExitRule(GrammarFileName, "if_statement"); }
		return retval;

	}
	// $ANTLR end "if_statement"

	partial void EnterRule_else_statement();
	partial void LeaveRule_else_statement();
	// $ANTLR start "else_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:928:1: else_statement : 'else' embedded_statement ;
	[GrammarRule("else_statement")]
	private Antlr3AstNode else_statement()
	{
		EnterRule_else_statement();
		EnterRule("else_statement", 264);
		var retval = new Antlr3AstNode("else_statement");
		
		retval.Start = (IToken)input.LT(1);
		int else_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal950 = default(IToken);
		Antlr3AstNode embedded_statement951 = default(Antlr3AstNode);

		object string_literal950_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "else_statement");
		DebugLocation(928, 29);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 264)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:928:15: ( 'else' embedded_statement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:929:2: 'else' embedded_statement
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(929, 2);
			string_literal950=(IToken)Match(input,123,Follow._123_in_else_statement6764); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal950_tree = (object)adaptor.Create(string_literal950, "string_literal950", retval);
			adaptor.AddChild(root_0, string_literal950_tree);
			}
			DebugLocation(929, 11);
			PushFollow(Follow._embedded_statement_in_else_statement6768);
			embedded_statement951=embedded_statement();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, embedded_statement951.Tree, embedded_statement951, "embedded_statement951", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("else_statement", 264);
			LeaveRule("else_statement", 264);
			LeaveRule_else_statement();
			if (state.backtracking > 0) { Memoize(input, 264, else_statement_StartIndex); }

		}
		DebugLocation(929, 29);
		} finally { DebugExitRule(GrammarFileName, "else_statement"); }
		return retval;

	}
	// $ANTLR end "else_statement"

	partial void EnterRule_switch_statement();
	partial void LeaveRule_switch_statement();
	// $ANTLR start "switch_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:930:1: switch_statement : 'switch' '(' expression ')' switch_block ;
	[GrammarRule("switch_statement")]
	private Antlr3AstNode switch_statement()
	{
		EnterRule_switch_statement();
		EnterRule("switch_statement", 265);
		var retval = new Antlr3AstNode("switch_statement");
		
		retval.Start = (IToken)input.LT(1);
		int switch_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal952 = default(IToken);
		IToken char_literal953 = default(IToken);
		IToken char_literal955 = default(IToken);
		Antlr3AstNode expression954 = default(Antlr3AstNode);
		Antlr3AstNode switch_block956 = default(Antlr3AstNode);

		object string_literal952_tree = default(object);
		object char_literal953_tree = default(object);
		object char_literal955_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "switch_statement");
		DebugLocation(930, 50);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 265)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:930:17: ( 'switch' '(' expression ')' switch_block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:931:2: 'switch' '(' expression ')' switch_block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(931, 2);
			string_literal952=(IToken)Match(input,181,Follow._181_in_switch_statement6776); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal952_tree = (object)adaptor.Create(string_literal952, "string_literal952", retval);
			adaptor.AddChild(root_0, string_literal952_tree);
			}
			DebugLocation(931, 13);
			char_literal953=(IToken)Match(input,68,Follow._68_in_switch_statement6780); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal953_tree = (object)adaptor.Create(char_literal953, "char_literal953", retval);
			adaptor.AddChild(root_0, char_literal953_tree);
			}
			DebugLocation(931, 19);
			PushFollow(Follow._expression_in_switch_statement6784);
			expression954=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression954.Tree, expression954, "expression954", retval);
			DebugLocation(931, 32);
			char_literal955=(IToken)Match(input,RPAREN,Follow._RPAREN_in_switch_statement6788); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal955_tree = (object)adaptor.Create(char_literal955, "char_literal955", retval);
			adaptor.AddChild(root_0, char_literal955_tree);
			}
			DebugLocation(931, 38);
			PushFollow(Follow._switch_block_in_switch_statement6792);
			switch_block956=switch_block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, switch_block956.Tree, switch_block956, "switch_block956", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("switch_statement", 265);
			LeaveRule("switch_statement", 265);
			LeaveRule_switch_statement();
			if (state.backtracking > 0) { Memoize(input, 265, switch_statement_StartIndex); }

		}
		DebugLocation(931, 50);
		} finally { DebugExitRule(GrammarFileName, "switch_statement"); }
		return retval;

	}
	// $ANTLR end "switch_statement"

	partial void EnterRule_switch_block();
	partial void LeaveRule_switch_block();
	// $ANTLR start "switch_block"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:932:1: switch_block : '{' ( switch_sections )? '}' ;
	[GrammarRule("switch_block")]
	private Antlr3AstNode switch_block()
	{
		EnterRule_switch_block();
		EnterRule("switch_block", 266);
		var retval = new Antlr3AstNode("switch_block");
		
		retval.Start = (IToken)input.LT(1);
		int switch_block_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal957 = default(IToken);
		IToken char_literal959 = default(IToken);
		Antlr3AstNode switch_sections958 = default(Antlr3AstNode);

		object char_literal957_tree = default(object);
		object char_literal959_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "switch_block");
		DebugLocation(932, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 266)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:932:13: ( '{' ( switch_sections )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:933:2: '{' ( switch_sections )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(933, 2);
			char_literal957=(IToken)Match(input,199,Follow._199_in_switch_block6800); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal957_tree = (object)adaptor.Create(char_literal957, "char_literal957", retval);
			adaptor.AddChild(root_0, char_literal957_tree);
			}
			DebugLocation(933, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:933:8: ( switch_sections )?
			int alt252=2;
			try { DebugEnterSubRule(252);
			try { DebugEnterDecision(252, false);
			int LA252_1 = input.LA(1);

			if ((LA252_1==109||LA252_1==117))
			{
				alt252 = 1;
			}
			} finally { DebugExitDecision(252); }
			switch (alt252)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:933:8: switch_sections
				{
				DebugLocation(933, 8);
				PushFollow(Follow._switch_sections_in_switch_block6804);
				switch_sections958=switch_sections();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, switch_sections958.Tree, switch_sections958, "switch_sections958", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(252); }

			DebugLocation(933, 27);
			char_literal959=(IToken)Match(input,203,Follow._203_in_switch_block6809); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal959_tree = (object)adaptor.Create(char_literal959, "char_literal959", retval);
			adaptor.AddChild(root_0, char_literal959_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("switch_block", 266);
			LeaveRule("switch_block", 266);
			LeaveRule_switch_block();
			if (state.backtracking > 0) { Memoize(input, 266, switch_block_StartIndex); }

		}
		DebugLocation(933, 30);
		} finally { DebugExitRule(GrammarFileName, "switch_block"); }
		return retval;

	}
	// $ANTLR end "switch_block"

	partial void EnterRule_switch_sections();
	partial void LeaveRule_switch_sections();
	// $ANTLR start "switch_sections"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:934:1: switch_sections : ( switch_section )+ ;
	[GrammarRule("switch_sections")]
	private Antlr3AstNode switch_sections()
	{
		EnterRule_switch_sections();
		EnterRule("switch_sections", 267);
		var retval = new Antlr3AstNode("switch_sections");
		
		retval.Start = (IToken)input.LT(1);
		int switch_sections_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode switch_section960 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "switch_sections");
		DebugLocation(934, 17);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 267)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:934:16: ( ( switch_section )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:935:2: ( switch_section )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(935, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:935:2: ( switch_section )+
			int cnt253=0;
			try { DebugEnterSubRule(253);
			while (true)
			{
				int alt253=2;
				try { DebugEnterDecision(253, false);
				int LA253_1 = input.LA(1);

				if ((LA253_1==109||LA253_1==117))
				{
					alt253 = 1;
				}


				} finally { DebugExitDecision(253); }
				switch (alt253)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:935:2: switch_section
					{
					DebugLocation(935, 2);
					PushFollow(Follow._switch_section_in_switch_sections6817);
					switch_section960=switch_section();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, switch_section960.Tree, switch_section960, "switch_section960", retval);

					}
					break;

				default:
					if (cnt253 >= 1)
						goto loop253;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee253 = new EarlyExitException( 253, input );
					DebugRecognitionException(eee253);
					throw eee253;
				}
				cnt253++;
			}
			loop253:
				;

			} finally { DebugExitSubRule(253); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("switch_sections", 267);
			LeaveRule("switch_sections", 267);
			LeaveRule_switch_sections();
			if (state.backtracking > 0) { Memoize(input, 267, switch_sections_StartIndex); }

		}
		DebugLocation(935, 17);
		} finally { DebugExitRule(GrammarFileName, "switch_sections"); }
		return retval;

	}
	// $ANTLR end "switch_sections"

	partial void EnterRule_switch_section();
	partial void LeaveRule_switch_section();
	// $ANTLR start "switch_section"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:936:1: switch_section : switch_labels statement_list ;
	[GrammarRule("switch_section")]
	private Antlr3AstNode switch_section()
	{
		EnterRule_switch_section();
		EnterRule("switch_section", 268);
		var retval = new Antlr3AstNode("switch_section");
		
		retval.Start = (IToken)input.LT(1);
		int switch_section_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode switch_labels961 = default(Antlr3AstNode);
		Antlr3AstNode statement_list962 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "switch_section");
		DebugLocation(936, 32);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 268)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:936:15: ( switch_labels statement_list )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:937:2: switch_labels statement_list
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(937, 2);
			PushFollow(Follow._switch_labels_in_switch_section6826);
			switch_labels961=switch_labels();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, switch_labels961.Tree, switch_labels961, "switch_labels961", retval);
			DebugLocation(937, 18);
			PushFollow(Follow._statement_list_in_switch_section6830);
			statement_list962=statement_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, statement_list962.Tree, statement_list962, "statement_list962", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("switch_section", 268);
			LeaveRule("switch_section", 268);
			LeaveRule_switch_section();
			if (state.backtracking > 0) { Memoize(input, 268, switch_section_StartIndex); }

		}
		DebugLocation(937, 32);
		} finally { DebugExitRule(GrammarFileName, "switch_section"); }
		return retval;

	}
	// $ANTLR end "switch_section"

	partial void EnterRule_switch_labels();
	partial void LeaveRule_switch_labels();
	// $ANTLR start "switch_labels"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:938:1: switch_labels : ( switch_label )+ ;
	[GrammarRule("switch_labels")]
	private Antlr3AstNode switch_labels()
	{
		EnterRule_switch_labels();
		EnterRule("switch_labels", 269);
		var retval = new Antlr3AstNode("switch_labels");
		
		retval.Start = (IToken)input.LT(1);
		int switch_labels_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode switch_label963 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "switch_labels");
		DebugLocation(938, 15);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 269)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:938:14: ( ( switch_label )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:939:2: ( switch_label )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(939, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:939:2: ( switch_label )+
			int cnt254=0;
			try { DebugEnterSubRule(254);
			while (true)
			{
				int alt254=2;
				try { DebugEnterDecision(254, false);
				int LA254_1 = input.LA(1);

				if ((LA254_1==117))
				{
					int LA254_2 = input.LA(2);

					if ((LA254_2==79))
					{
						alt254 = 1;
					}


				}
				else if ((LA254_1==109))
				{
					alt254 = 1;
				}


				} finally { DebugExitDecision(254); }
				switch (alt254)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:939:2: switch_label
					{
					DebugLocation(939, 2);
					PushFollow(Follow._switch_label_in_switch_labels6838);
					switch_label963=switch_label();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, switch_label963.Tree, switch_label963, "switch_label963", retval);

					}
					break;

				default:
					if (cnt254 >= 1)
						goto loop254;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee254 = new EarlyExitException( 254, input );
					DebugRecognitionException(eee254);
					throw eee254;
				}
				cnt254++;
			}
			loop254:
				;

			} finally { DebugExitSubRule(254); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("switch_labels", 269);
			LeaveRule("switch_labels", 269);
			LeaveRule_switch_labels();
			if (state.backtracking > 0) { Memoize(input, 269, switch_labels_StartIndex); }

		}
		DebugLocation(939, 15);
		} finally { DebugExitRule(GrammarFileName, "switch_labels"); }
		return retval;

	}
	// $ANTLR end "switch_labels"

	partial void EnterRule_switch_label();
	partial void LeaveRule_switch_label();
	// $ANTLR start "switch_label"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:940:1: switch_label : ( ( 'case' constant_expression ':' ) | ( 'default' ':' ) );
	[GrammarRule("switch_label")]
	private Antlr3AstNode switch_label()
	{
		EnterRule_switch_label();
		EnterRule("switch_label", 270);
		var retval = new Antlr3AstNode("switch_label");
		
		retval.Start = (IToken)input.LT(1);
		int switch_label_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal964 = default(IToken);
		IToken char_literal966 = default(IToken);
		IToken string_literal967 = default(IToken);
		IToken char_literal968 = default(IToken);
		Antlr3AstNode constant_expression965 = default(Antlr3AstNode);

		object string_literal964_tree = default(object);
		object char_literal966_tree = default(object);
		object string_literal967_tree = default(object);
		object char_literal968_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "switch_label");
		DebugLocation(940, 21);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 270)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:940:13: ( ( 'case' constant_expression ':' ) | ( 'default' ':' ) )
			int alt255=2;
			try { DebugEnterDecision(255, false);
			int LA255_1 = input.LA(1);

			if ((LA255_1==109))
			{
				alt255 = 1;
			}
			else if ((LA255_1==117))
			{
				alt255 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 255, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(255); }
			switch (alt255)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:941:2: ( 'case' constant_expression ':' )
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(941, 2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:941:2: ( 'case' constant_expression ':' )
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:941:3: 'case' constant_expression ':'
				{
				DebugLocation(941, 3);
				string_literal964=(IToken)Match(input,109,Follow._109_in_switch_label6848); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal964_tree = (object)adaptor.Create(string_literal964, "string_literal964", retval);
				adaptor.AddChild(root_0, string_literal964_tree);
				}
				DebugLocation(941, 12);
				PushFollow(Follow._constant_expression_in_switch_label6852);
				constant_expression965=constant_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constant_expression965.Tree, constant_expression965, "constant_expression965", retval);
				DebugLocation(941, 34);
				char_literal966=(IToken)Match(input,79,Follow._79_in_switch_label6856); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal966_tree = (object)adaptor.Create(char_literal966, "char_literal966", retval);
				adaptor.AddChild(root_0, char_literal966_tree);
				}

				}


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:942:4: ( 'default' ':' )
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(942, 4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:942:4: ( 'default' ':' )
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:942:5: 'default' ':'
				{
				DebugLocation(942, 5);
				string_literal967=(IToken)Match(input,117,Follow._117_in_switch_label6863); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal967_tree = (object)adaptor.Create(string_literal967, "string_literal967", retval);
				adaptor.AddChild(root_0, string_literal967_tree);
				}
				DebugLocation(942, 17);
				char_literal968=(IToken)Match(input,79,Follow._79_in_switch_label6867); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal968_tree = (object)adaptor.Create(char_literal968, "char_literal968", retval);
				adaptor.AddChild(root_0, char_literal968_tree);
				}

				}


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("switch_label", 270);
			LeaveRule("switch_label", 270);
			LeaveRule_switch_label();
			if (state.backtracking > 0) { Memoize(input, 270, switch_label_StartIndex); }

		}
		DebugLocation(942, 21);
		} finally { DebugExitRule(GrammarFileName, "switch_label"); }
		return retval;

	}
	// $ANTLR end "switch_label"

	partial void EnterRule_iteration_statement();
	partial void LeaveRule_iteration_statement();
	// $ANTLR start "iteration_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:943:1: iteration_statement : ( while_statement | do_statement | for_statement | foreach_statement );
	[GrammarRule("iteration_statement")]
	private Antlr3AstNode iteration_statement()
	{
		EnterRule_iteration_statement();
		EnterRule("iteration_statement", 271);
		var retval = new Antlr3AstNode("iteration_statement");
		
		retval.Start = (IToken)input.LT(1);
		int iteration_statement_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode while_statement969 = default(Antlr3AstNode);
		Antlr3AstNode do_statement970 = default(Antlr3AstNode);
		Antlr3AstNode for_statement971 = default(Antlr3AstNode);
		Antlr3AstNode foreach_statement972 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "iteration_statement");
		DebugLocation(943, 21);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 271)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:943:20: ( while_statement | do_statement | for_statement | foreach_statement )
			int alt256=4;
			try { DebugEnterDecision(256, false);
			switch (input.LA(1))
			{
			case 197:
				{
				alt256 = 1;
				}
				break;
			case 120:
				{
				alt256 = 2;
				}
				break;
			case 132:
				{
				alt256 = 3;
				}
				break;
			case 133:
				{
				alt256 = 4;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 256, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(256); }
			switch (alt256)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:944:2: while_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(944, 2);
				PushFollow(Follow._while_statement_in_iteration_statement6876);
				while_statement969=while_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, while_statement969.Tree, while_statement969, "while_statement969", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:945:4: do_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(945, 4);
				PushFollow(Follow._do_statement_in_iteration_statement6881);
				do_statement970=do_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, do_statement970.Tree, do_statement970, "do_statement970", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:946:4: for_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(946, 4);
				PushFollow(Follow._for_statement_in_iteration_statement6886);
				for_statement971=for_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, for_statement971.Tree, for_statement971, "for_statement971", retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:947:4: foreach_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(947, 4);
				PushFollow(Follow._foreach_statement_in_iteration_statement6891);
				foreach_statement972=foreach_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, foreach_statement972.Tree, foreach_statement972, "foreach_statement972", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("iteration_statement", 271);
			LeaveRule("iteration_statement", 271);
			LeaveRule_iteration_statement();
			if (state.backtracking > 0) { Memoize(input, 271, iteration_statement_StartIndex); }

		}
		DebugLocation(947, 21);
		} finally { DebugExitRule(GrammarFileName, "iteration_statement"); }
		return retval;

	}
	// $ANTLR end "iteration_statement"

	partial void EnterRule_while_statement();
	partial void LeaveRule_while_statement();
	// $ANTLR start "while_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:948:1: while_statement : 'while' '(' boolean_expression ')' embedded_statement ;
	[GrammarRule("while_statement")]
	private Antlr3AstNode while_statement()
	{
		EnterRule_while_statement();
		EnterRule("while_statement", 272);
		var retval = new Antlr3AstNode("while_statement");
		
		retval.Start = (IToken)input.LT(1);
		int while_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal973 = default(IToken);
		IToken char_literal974 = default(IToken);
		IToken char_literal976 = default(IToken);
		Antlr3AstNode boolean_expression975 = default(Antlr3AstNode);
		Antlr3AstNode embedded_statement977 = default(Antlr3AstNode);

		object string_literal973_tree = default(object);
		object char_literal974_tree = default(object);
		object char_literal976_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "while_statement");
		DebugLocation(948, 63);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 272)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:948:16: ( 'while' '(' boolean_expression ')' embedded_statement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:949:2: 'while' '(' boolean_expression ')' embedded_statement
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(949, 2);
			string_literal973=(IToken)Match(input,197,Follow._197_in_while_statement6899); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal973_tree = (object)adaptor.Create(string_literal973, "string_literal973", retval);
			adaptor.AddChild(root_0, string_literal973_tree);
			}
			DebugLocation(949, 12);
			char_literal974=(IToken)Match(input,68,Follow._68_in_while_statement6903); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal974_tree = (object)adaptor.Create(char_literal974, "char_literal974", retval);
			adaptor.AddChild(root_0, char_literal974_tree);
			}
			DebugLocation(949, 18);
			PushFollow(Follow._boolean_expression_in_while_statement6907);
			boolean_expression975=boolean_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, boolean_expression975.Tree, boolean_expression975, "boolean_expression975", retval);
			DebugLocation(949, 39);
			char_literal976=(IToken)Match(input,RPAREN,Follow._RPAREN_in_while_statement6911); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal976_tree = (object)adaptor.Create(char_literal976, "char_literal976", retval);
			adaptor.AddChild(root_0, char_literal976_tree);
			}
			DebugLocation(949, 45);
			PushFollow(Follow._embedded_statement_in_while_statement6915);
			embedded_statement977=embedded_statement();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, embedded_statement977.Tree, embedded_statement977, "embedded_statement977", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("while_statement", 272);
			LeaveRule("while_statement", 272);
			LeaveRule_while_statement();
			if (state.backtracking > 0) { Memoize(input, 272, while_statement_StartIndex); }

		}
		DebugLocation(949, 63);
		} finally { DebugExitRule(GrammarFileName, "while_statement"); }
		return retval;

	}
	// $ANTLR end "while_statement"

	partial void EnterRule_do_statement();
	partial void LeaveRule_do_statement();
	// $ANTLR start "do_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:950:1: do_statement : 'do' embedded_statement 'while' '(' boolean_expression ')' ';' ;
	[GrammarRule("do_statement")]
	private Antlr3AstNode do_statement()
	{
		EnterRule_do_statement();
		EnterRule("do_statement", 273);
		var retval = new Antlr3AstNode("do_statement");
		
		retval.Start = (IToken)input.LT(1);
		int do_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal978 = default(IToken);
		IToken string_literal980 = default(IToken);
		IToken char_literal981 = default(IToken);
		IToken char_literal983 = default(IToken);
		IToken char_literal984 = default(IToken);
		Antlr3AstNode embedded_statement979 = default(Antlr3AstNode);
		Antlr3AstNode boolean_expression982 = default(Antlr3AstNode);

		object string_literal978_tree = default(object);
		object string_literal980_tree = default(object);
		object char_literal981_tree = default(object);
		object char_literal983_tree = default(object);
		object char_literal984_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "do_statement");
		DebugLocation(950, 76);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 273)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:950:13: ( 'do' embedded_statement 'while' '(' boolean_expression ')' ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:951:2: 'do' embedded_statement 'while' '(' boolean_expression ')' ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(951, 2);
			string_literal978=(IToken)Match(input,120,Follow._120_in_do_statement6923); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal978_tree = (object)adaptor.Create(string_literal978, "string_literal978", retval);
			adaptor.AddChild(root_0, string_literal978_tree);
			}
			DebugLocation(951, 9);
			PushFollow(Follow._embedded_statement_in_do_statement6927);
			embedded_statement979=embedded_statement();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, embedded_statement979.Tree, embedded_statement979, "embedded_statement979", retval);
			DebugLocation(951, 30);
			string_literal980=(IToken)Match(input,197,Follow._197_in_do_statement6931); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal980_tree = (object)adaptor.Create(string_literal980, "string_literal980", retval);
			adaptor.AddChild(root_0, string_literal980_tree);
			}
			DebugLocation(951, 40);
			char_literal981=(IToken)Match(input,68,Follow._68_in_do_statement6935); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal981_tree = (object)adaptor.Create(char_literal981, "char_literal981", retval);
			adaptor.AddChild(root_0, char_literal981_tree);
			}
			DebugLocation(951, 46);
			PushFollow(Follow._boolean_expression_in_do_statement6939);
			boolean_expression982=boolean_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, boolean_expression982.Tree, boolean_expression982, "boolean_expression982", retval);
			DebugLocation(951, 67);
			char_literal983=(IToken)Match(input,RPAREN,Follow._RPAREN_in_do_statement6943); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal983_tree = (object)adaptor.Create(char_literal983, "char_literal983", retval);
			adaptor.AddChild(root_0, char_literal983_tree);
			}
			DebugLocation(951, 73);
			char_literal984=(IToken)Match(input,SEMI,Follow._SEMI_in_do_statement6947); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal984_tree = (object)adaptor.Create(char_literal984, "char_literal984", retval);
			adaptor.AddChild(root_0, char_literal984_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("do_statement", 273);
			LeaveRule("do_statement", 273);
			LeaveRule_do_statement();
			if (state.backtracking > 0) { Memoize(input, 273, do_statement_StartIndex); }

		}
		DebugLocation(951, 76);
		} finally { DebugExitRule(GrammarFileName, "do_statement"); }
		return retval;

	}
	// $ANTLR end "do_statement"

	partial void EnterRule_for_statement();
	partial void LeaveRule_for_statement();
	// $ANTLR start "for_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:952:1: for_statement : 'for' '(' ( for_initializer )? ';' ( for_condition )? ';' ( for_iterator )? ')' embedded_statement ;
	[GrammarRule("for_statement")]
	private Antlr3AstNode for_statement()
	{
		EnterRule_for_statement();
		EnterRule("for_statement", 274);
		var retval = new Antlr3AstNode("for_statement");
		
		retval.Start = (IToken)input.LT(1);
		int for_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal985 = default(IToken);
		IToken char_literal986 = default(IToken);
		IToken char_literal988 = default(IToken);
		IToken char_literal990 = default(IToken);
		IToken char_literal992 = default(IToken);
		Antlr3AstNode for_initializer987 = default(Antlr3AstNode);
		Antlr3AstNode for_condition989 = default(Antlr3AstNode);
		Antlr3AstNode for_iterator991 = default(Antlr3AstNode);
		Antlr3AstNode embedded_statement993 = default(Antlr3AstNode);

		object string_literal985_tree = default(object);
		object char_literal986_tree = default(object);
		object char_literal988_tree = default(object);
		object char_literal990_tree = default(object);
		object char_literal992_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "for_statement");
		DebugLocation(952, 104);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 274)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:952:14: ( 'for' '(' ( for_initializer )? ';' ( for_condition )? ';' ( for_iterator )? ')' embedded_statement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:953:2: 'for' '(' ( for_initializer )? ';' ( for_condition )? ';' ( for_iterator )? ')' embedded_statement
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(953, 2);
			string_literal985=(IToken)Match(input,132,Follow._132_in_for_statement6955); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal985_tree = (object)adaptor.Create(string_literal985, "string_literal985", retval);
			adaptor.AddChild(root_0, string_literal985_tree);
			}
			DebugLocation(953, 10);
			char_literal986=(IToken)Match(input,68,Follow._68_in_for_statement6959); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal986_tree = (object)adaptor.Create(char_literal986, "char_literal986", retval);
			adaptor.AddChild(root_0, char_literal986_tree);
			}
			DebugLocation(953, 16);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:953:16: ( for_initializer )?
			int alt257=2;
			try { DebugEnterSubRule(257);
			try { DebugEnterDecision(257, false);
			int LA257_1 = input.LA(1);

			if ((LA257_1==Character_literal||LA257_1==FALSE||(LA257_1>=Hex_number && LA257_1<=IDENTIFIER)||(LA257_1>=MINUS && LA257_1<=NUMBER)||LA257_1==Real_literal||LA257_1==STRINGLITERAL||LA257_1==TRUE||LA257_1==Verbatim_string_literal||LA257_1==61||LA257_1==66||(LA257_1>=68 && LA257_1<=69)||(LA257_1>=71 && LA257_1<=72)||LA257_1==75||LA257_1==95||(LA257_1>=97 && LA257_1<=98)||(LA257_1>=100 && LA257_1<=105)||(LA257_1>=107 && LA257_1<=108)||(LA257_1>=111 && LA257_1<=112)||(LA257_1>=116 && LA257_1<=119)||(LA257_1>=121 && LA257_1<=122)||LA257_1==124||LA257_1==128||LA257_1==131||LA257_1==134||LA257_1==137||LA257_1==140||LA257_1==143||(LA257_1>=145 && LA257_1<=146)||(LA257_1>=148 && LA257_1<=150)||(LA257_1>=152 && LA257_1<=154)||LA257_1==156||LA257_1==159||LA257_1==162||LA257_1==164||LA257_1==169||LA257_1==171||(LA257_1>=173 && LA257_1<=176)||LA257_1==179||LA257_1==182||(LA257_1>=185 && LA257_1<=189)||(LA257_1>=191 && LA257_1<=192)||LA257_1==194||LA257_1==196||LA257_1==198||LA257_1==204))
			{
				alt257 = 1;
			}
			} finally { DebugExitDecision(257); }
			switch (alt257)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:953:16: for_initializer
				{
				DebugLocation(953, 16);
				PushFollow(Follow._for_initializer_in_for_statement6963);
				for_initializer987=for_initializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, for_initializer987.Tree, for_initializer987, "for_initializer987", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(257); }

			DebugLocation(953, 35);
			char_literal988=(IToken)Match(input,SEMI,Follow._SEMI_in_for_statement6968); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal988_tree = (object)adaptor.Create(char_literal988, "char_literal988", retval);
			adaptor.AddChild(root_0, char_literal988_tree);
			}
			DebugLocation(953, 41);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:953:41: ( for_condition )?
			int alt258=2;
			try { DebugEnterSubRule(258);
			try { DebugEnterDecision(258, false);
			int LA258_1 = input.LA(1);

			if ((LA258_1==Character_literal||LA258_1==FALSE||(LA258_1>=Hex_number && LA258_1<=IDENTIFIER)||(LA258_1>=MINUS && LA258_1<=NUMBER)||LA258_1==Real_literal||LA258_1==STRINGLITERAL||LA258_1==TRUE||LA258_1==Verbatim_string_literal||LA258_1==61||LA258_1==66||(LA258_1>=68 && LA258_1<=69)||(LA258_1>=71 && LA258_1<=72)||LA258_1==75||LA258_1==95||(LA258_1>=97 && LA258_1<=98)||(LA258_1>=100 && LA258_1<=105)||(LA258_1>=107 && LA258_1<=108)||(LA258_1>=111 && LA258_1<=112)||(LA258_1>=116 && LA258_1<=119)||(LA258_1>=121 && LA258_1<=122)||LA258_1==124||LA258_1==128||LA258_1==131||LA258_1==134||LA258_1==137||LA258_1==140||LA258_1==143||(LA258_1>=145 && LA258_1<=146)||(LA258_1>=148 && LA258_1<=150)||(LA258_1>=152 && LA258_1<=154)||LA258_1==156||LA258_1==159||LA258_1==162||LA258_1==164||LA258_1==169||LA258_1==171||(LA258_1>=173 && LA258_1<=176)||LA258_1==179||LA258_1==182||(LA258_1>=185 && LA258_1<=189)||(LA258_1>=191 && LA258_1<=192)||LA258_1==196||LA258_1==198||LA258_1==204))
			{
				alt258 = 1;
			}
			} finally { DebugExitDecision(258); }
			switch (alt258)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:953:41: for_condition
				{
				DebugLocation(953, 41);
				PushFollow(Follow._for_condition_in_for_statement6972);
				for_condition989=for_condition();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, for_condition989.Tree, for_condition989, "for_condition989", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(258); }

			DebugLocation(953, 58);
			char_literal990=(IToken)Match(input,SEMI,Follow._SEMI_in_for_statement6977); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal990_tree = (object)adaptor.Create(char_literal990, "char_literal990", retval);
			adaptor.AddChild(root_0, char_literal990_tree);
			}
			DebugLocation(953, 64);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:953:64: ( for_iterator )?
			int alt259=2;
			try { DebugEnterSubRule(259);
			try { DebugEnterDecision(259, false);
			int LA259_1 = input.LA(1);

			if ((LA259_1==Character_literal||LA259_1==FALSE||(LA259_1>=Hex_number && LA259_1<=IDENTIFIER)||(LA259_1>=MINUS && LA259_1<=NUMBER)||LA259_1==Real_literal||LA259_1==STRINGLITERAL||LA259_1==TRUE||LA259_1==Verbatim_string_literal||LA259_1==61||LA259_1==66||(LA259_1>=68 && LA259_1<=69)||(LA259_1>=71 && LA259_1<=72)||LA259_1==75||LA259_1==95||(LA259_1>=97 && LA259_1<=98)||(LA259_1>=100 && LA259_1<=105)||(LA259_1>=107 && LA259_1<=108)||(LA259_1>=111 && LA259_1<=112)||(LA259_1>=116 && LA259_1<=119)||(LA259_1>=121 && LA259_1<=122)||LA259_1==124||LA259_1==128||LA259_1==131||LA259_1==134||LA259_1==137||LA259_1==140||LA259_1==143||(LA259_1>=145 && LA259_1<=146)||(LA259_1>=148 && LA259_1<=150)||(LA259_1>=152 && LA259_1<=154)||LA259_1==156||LA259_1==159||LA259_1==162||LA259_1==164||LA259_1==169||LA259_1==171||(LA259_1>=173 && LA259_1<=176)||LA259_1==179||LA259_1==182||(LA259_1>=185 && LA259_1<=189)||(LA259_1>=191 && LA259_1<=192)||LA259_1==196||LA259_1==198||LA259_1==204))
			{
				alt259 = 1;
			}
			} finally { DebugExitDecision(259); }
			switch (alt259)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:953:64: for_iterator
				{
				DebugLocation(953, 64);
				PushFollow(Follow._for_iterator_in_for_statement6981);
				for_iterator991=for_iterator();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, for_iterator991.Tree, for_iterator991, "for_iterator991", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(259); }

			DebugLocation(953, 80);
			char_literal992=(IToken)Match(input,RPAREN,Follow._RPAREN_in_for_statement6986); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal992_tree = (object)adaptor.Create(char_literal992, "char_literal992", retval);
			adaptor.AddChild(root_0, char_literal992_tree);
			}
			DebugLocation(953, 86);
			PushFollow(Follow._embedded_statement_in_for_statement6990);
			embedded_statement993=embedded_statement();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, embedded_statement993.Tree, embedded_statement993, "embedded_statement993", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("for_statement", 274);
			LeaveRule("for_statement", 274);
			LeaveRule_for_statement();
			if (state.backtracking > 0) { Memoize(input, 274, for_statement_StartIndex); }

		}
		DebugLocation(953, 104);
		} finally { DebugExitRule(GrammarFileName, "for_statement"); }
		return retval;

	}
	// $ANTLR end "for_statement"

	partial void EnterRule_for_initializer();
	partial void LeaveRule_for_initializer();
	// $ANTLR start "for_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:954:1: for_initializer : ( ( local_variable_declaration )=> local_variable_declaration | statement_expression_list );
	[GrammarRule("for_initializer")]
	private Antlr3AstNode for_initializer()
	{
		EnterRule_for_initializer();
		EnterRule("for_initializer", 275);
		var retval = new Antlr3AstNode("for_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int for_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode local_variable_declaration994 = default(Antlr3AstNode);
		Antlr3AstNode statement_expression_list995 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "for_initializer");
		DebugLocation(954, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 275)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:954:16: ( ( local_variable_declaration )=> local_variable_declaration | statement_expression_list )
			int alt260=2;
			try { DebugEnterDecision(260, false);
			int LA260_1 = input.LA(1);

			if ((LA260_1==192))
			{
				int LA260_2 = input.LA(2);

				if ((EvaluatePredicate(synpred35_cs_fragment)))
				{
					alt260 = 1;
				}
				else if ((true))
				{
					alt260 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 260, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA260_1==122))
			{
				int LA260_2 = input.LA(2);

				if ((EvaluatePredicate(synpred35_cs_fragment)))
				{
					alt260 = 1;
				}
				else if ((true))
				{
					alt260 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 260, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA260_1==105||LA260_1==108||LA260_1==111||LA260_1==116||LA260_1==121||LA260_1==131||LA260_1==140||LA260_1==148||LA260_1==153||LA260_1==171||LA260_1==175||LA260_1==179||(LA260_1>=187 && LA260_1<=188)||LA260_1==191))
			{
				int LA260_2 = input.LA(2);

				if ((EvaluatePredicate(synpred35_cs_fragment)))
				{
					alt260 = 1;
				}
				else if ((true))
				{
					alt260 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 260, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA260_1==134))
			{
				int LA260_2 = input.LA(2);

				if ((EvaluatePredicate(synpred35_cs_fragment)))
				{
					alt260 = 1;
				}
				else if ((true))
				{
					alt260 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 260, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA260_1==194) && (EvaluatePredicate(synpred35_cs_fragment)))
			{
				alt260 = 1;
			}
			else if ((LA260_1==Character_literal||LA260_1==FALSE||LA260_1==Hex_number||(LA260_1>=MINUS && LA260_1<=NUMBER)||LA260_1==Real_literal||LA260_1==STRINGLITERAL||LA260_1==TRUE||LA260_1==Verbatim_string_literal||LA260_1==61||LA260_1==66||(LA260_1>=68 && LA260_1<=69)||(LA260_1>=71 && LA260_1<=72)||LA260_1==75||(LA260_1>=102 && LA260_1<=104)||LA260_1==112||(LA260_1>=117 && LA260_1<=118)||LA260_1==152||LA260_1==176||LA260_1==182||LA260_1==186||LA260_1==189||LA260_1==204))
			{
				alt260 = 2;
			}
			else if ((LA260_1==IDENTIFIER||LA260_1==95||(LA260_1>=97 && LA260_1<=98)||(LA260_1>=100 && LA260_1<=101)||LA260_1==107||LA260_1==119||LA260_1==124||LA260_1==128||LA260_1==137||LA260_1==143||(LA260_1>=145 && LA260_1<=146)||(LA260_1>=149 && LA260_1<=150)||LA260_1==154||LA260_1==156||LA260_1==159||LA260_1==162||LA260_1==164||LA260_1==169||(LA260_1>=173 && LA260_1<=174)||LA260_1==185||LA260_1==196||LA260_1==198))
			{
				int LA260_2 = input.LA(2);

				if ((EvaluatePredicate(synpred35_cs_fragment)))
				{
					alt260 = 1;
				}
				else if ((true))
				{
					alt260 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 260, 27, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 260, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(260); }
			switch (alt260)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:955:2: ( local_variable_declaration )=> local_variable_declaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(955, 34);
				PushFollow(Follow._local_variable_declaration_in_for_initializer7004);
				local_variable_declaration994=local_variable_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, local_variable_declaration994.Tree, local_variable_declaration994, "local_variable_declaration994", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:956:4: statement_expression_list
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(956, 4);
				PushFollow(Follow._statement_expression_list_in_for_initializer7009);
				statement_expression_list995=statement_expression_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, statement_expression_list995.Tree, statement_expression_list995, "statement_expression_list995", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("for_initializer", 275);
			LeaveRule("for_initializer", 275);
			LeaveRule_for_initializer();
			if (state.backtracking > 0) { Memoize(input, 275, for_initializer_StartIndex); }

		}
		DebugLocation(957, 1);
		} finally { DebugExitRule(GrammarFileName, "for_initializer"); }
		return retval;

	}
	// $ANTLR end "for_initializer"

	partial void EnterRule_for_condition();
	partial void LeaveRule_for_condition();
	// $ANTLR start "for_condition"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:958:1: for_condition : boolean_expression ;
	[GrammarRule("for_condition")]
	private Antlr3AstNode for_condition()
	{
		EnterRule_for_condition();
		EnterRule("for_condition", 276);
		var retval = new Antlr3AstNode("for_condition");
		
		retval.Start = (IToken)input.LT(1);
		int for_condition_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode boolean_expression996 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "for_condition");
		DebugLocation(958, 20);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 276)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:958:14: ( boolean_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:959:2: boolean_expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(959, 2);
			PushFollow(Follow._boolean_expression_in_for_condition7019);
			boolean_expression996=boolean_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, boolean_expression996.Tree, boolean_expression996, "boolean_expression996", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("for_condition", 276);
			LeaveRule("for_condition", 276);
			LeaveRule_for_condition();
			if (state.backtracking > 0) { Memoize(input, 276, for_condition_StartIndex); }

		}
		DebugLocation(959, 20);
		} finally { DebugExitRule(GrammarFileName, "for_condition"); }
		return retval;

	}
	// $ANTLR end "for_condition"

	partial void EnterRule_for_iterator();
	partial void LeaveRule_for_iterator();
	// $ANTLR start "for_iterator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:960:1: for_iterator : statement_expression_list ;
	[GrammarRule("for_iterator")]
	private Antlr3AstNode for_iterator()
	{
		EnterRule_for_iterator();
		EnterRule("for_iterator", 277);
		var retval = new Antlr3AstNode("for_iterator");
		
		retval.Start = (IToken)input.LT(1);
		int for_iterator_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode statement_expression_list997 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "for_iterator");
		DebugLocation(960, 27);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 277)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:960:13: ( statement_expression_list )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:961:2: statement_expression_list
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(961, 2);
			PushFollow(Follow._statement_expression_list_in_for_iterator7027);
			statement_expression_list997=statement_expression_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, statement_expression_list997.Tree, statement_expression_list997, "statement_expression_list997", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("for_iterator", 277);
			LeaveRule("for_iterator", 277);
			LeaveRule_for_iterator();
			if (state.backtracking > 0) { Memoize(input, 277, for_iterator_StartIndex); }

		}
		DebugLocation(961, 27);
		} finally { DebugExitRule(GrammarFileName, "for_iterator"); }
		return retval;

	}
	// $ANTLR end "for_iterator"

	partial void EnterRule_statement_expression_list();
	partial void LeaveRule_statement_expression_list();
	// $ANTLR start "statement_expression_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:962:1: statement_expression_list : statement_expression ( ',' statement_expression )* ;
	[GrammarRule("statement_expression_list")]
	private Antlr3AstNode statement_expression_list()
	{
		EnterRule_statement_expression_list();
		EnterRule("statement_expression_list", 278);
		var retval = new Antlr3AstNode("statement_expression_list");
		
		retval.Start = (IToken)input.LT(1);
		int statement_expression_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal999 = default(IToken);
		Antlr3AstNode statement_expression998 = default(Antlr3AstNode);
		Antlr3AstNode statement_expression1000 = default(Antlr3AstNode);

		object char_literal999_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "statement_expression_list");
		DebugLocation(962, 50);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 278)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:962:26: ( statement_expression ( ',' statement_expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:963:2: statement_expression ( ',' statement_expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(963, 2);
			PushFollow(Follow._statement_expression_in_statement_expression_list7035);
			statement_expression998=statement_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, statement_expression998.Tree, statement_expression998, "statement_expression998", retval);
			DebugLocation(963, 23);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:963:23: ( ',' statement_expression )*
			try { DebugEnterSubRule(261);
			while (true)
			{
				int alt261=2;
				try { DebugEnterDecision(261, false);
				int LA261_1 = input.LA(1);

				if ((LA261_1==74))
				{
					alt261 = 1;
				}


				} finally { DebugExitDecision(261); }
				switch ( alt261 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:963:24: ',' statement_expression
					{
					DebugLocation(963, 24);
					char_literal999=(IToken)Match(input,74,Follow._74_in_statement_expression_list7038); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal999_tree = (object)adaptor.Create(char_literal999, "char_literal999", retval);
					adaptor.AddChild(root_0, char_literal999_tree);
					}
					DebugLocation(963, 28);
					PushFollow(Follow._statement_expression_in_statement_expression_list7040);
					statement_expression1000=statement_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, statement_expression1000.Tree, statement_expression1000, "statement_expression1000", retval);

					}
					break;

				default:
					goto loop261;
				}
			}

			loop261:
				;

			} finally { DebugExitSubRule(261); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("statement_expression_list", 278);
			LeaveRule("statement_expression_list", 278);
			LeaveRule_statement_expression_list();
			if (state.backtracking > 0) { Memoize(input, 278, statement_expression_list_StartIndex); }

		}
		DebugLocation(963, 50);
		} finally { DebugExitRule(GrammarFileName, "statement_expression_list"); }
		return retval;

	}
	// $ANTLR end "statement_expression_list"

	partial void EnterRule_foreach_statement();
	partial void LeaveRule_foreach_statement();
	// $ANTLR start "foreach_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:964:1: foreach_statement : 'foreach' '(' local_variable_type identifier 'in' expression ')' embedded_statement ;
	[GrammarRule("foreach_statement")]
	private Antlr3AstNode foreach_statement()
	{
		EnterRule_foreach_statement();
		EnterRule("foreach_statement", 279);
		var retval = new Antlr3AstNode("foreach_statement");
		
		retval.Start = (IToken)input.LT(1);
		int foreach_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1001 = default(IToken);
		IToken char_literal1002 = default(IToken);
		IToken string_literal1005 = default(IToken);
		IToken char_literal1007 = default(IToken);
		Antlr3AstNode local_variable_type1003 = default(Antlr3AstNode);
		Antlr3AstNode identifier1004 = default(Antlr3AstNode);
		Antlr3AstNode expression1006 = default(Antlr3AstNode);
		Antlr3AstNode embedded_statement1008 = default(Antlr3AstNode);

		object string_literal1001_tree = default(object);
		object char_literal1002_tree = default(object);
		object string_literal1005_tree = default(object);
		object char_literal1007_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "foreach_statement");
		DebugLocation(964, 99);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 279)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:964:18: ( 'foreach' '(' local_variable_type identifier 'in' expression ')' embedded_statement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:965:2: 'foreach' '(' local_variable_type identifier 'in' expression ')' embedded_statement
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(965, 2);
			string_literal1001=(IToken)Match(input,133,Follow._133_in_foreach_statement7050); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1001_tree = (object)adaptor.Create(string_literal1001, "string_literal1001", retval);
			adaptor.AddChild(root_0, string_literal1001_tree);
			}
			DebugLocation(965, 14);
			char_literal1002=(IToken)Match(input,68,Follow._68_in_foreach_statement7054); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1002_tree = (object)adaptor.Create(char_literal1002, "char_literal1002", retval);
			adaptor.AddChild(root_0, char_literal1002_tree);
			}
			DebugLocation(965, 20);
			PushFollow(Follow._local_variable_type_in_foreach_statement7058);
			local_variable_type1003=local_variable_type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, local_variable_type1003.Tree, local_variable_type1003, "local_variable_type1003", retval);
			DebugLocation(965, 42);
			PushFollow(Follow._identifier_in_foreach_statement7062);
			identifier1004=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier1004.Tree, identifier1004, "identifier1004", retval);
			DebugLocation(965, 55);
			string_literal1005=(IToken)Match(input,139,Follow._139_in_foreach_statement7066); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1005_tree = (object)adaptor.Create(string_literal1005, "string_literal1005", retval);
			adaptor.AddChild(root_0, string_literal1005_tree);
			}
			DebugLocation(965, 62);
			PushFollow(Follow._expression_in_foreach_statement7070);
			expression1006=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression1006.Tree, expression1006, "expression1006", retval);
			DebugLocation(965, 75);
			char_literal1007=(IToken)Match(input,RPAREN,Follow._RPAREN_in_foreach_statement7074); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1007_tree = (object)adaptor.Create(char_literal1007, "char_literal1007", retval);
			adaptor.AddChild(root_0, char_literal1007_tree);
			}
			DebugLocation(965, 81);
			PushFollow(Follow._embedded_statement_in_foreach_statement7078);
			embedded_statement1008=embedded_statement();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, embedded_statement1008.Tree, embedded_statement1008, "embedded_statement1008", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("foreach_statement", 279);
			LeaveRule("foreach_statement", 279);
			LeaveRule_foreach_statement();
			if (state.backtracking > 0) { Memoize(input, 279, foreach_statement_StartIndex); }

		}
		DebugLocation(965, 99);
		} finally { DebugExitRule(GrammarFileName, "foreach_statement"); }
		return retval;

	}
	// $ANTLR end "foreach_statement"

	partial void EnterRule_jump_statement();
	partial void LeaveRule_jump_statement();
	// $ANTLR start "jump_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:966:1: jump_statement : ( break_statement | continue_statement | goto_statement | return_statement | throw_statement );
	[GrammarRule("jump_statement")]
	private Antlr3AstNode jump_statement()
	{
		EnterRule_jump_statement();
		EnterRule("jump_statement", 280);
		var retval = new Antlr3AstNode("jump_statement");
		
		retval.Start = (IToken)input.LT(1);
		int jump_statement_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode break_statement1009 = default(Antlr3AstNode);
		Antlr3AstNode continue_statement1010 = default(Antlr3AstNode);
		Antlr3AstNode goto_statement1011 = default(Antlr3AstNode);
		Antlr3AstNode return_statement1012 = default(Antlr3AstNode);
		Antlr3AstNode throw_statement1013 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "jump_statement");
		DebugLocation(966, 19);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 280)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:966:15: ( break_statement | continue_statement | goto_statement | return_statement | throw_statement )
			int alt262=5;
			try { DebugEnterDecision(262, false);
			switch (input.LA(1))
			{
			case 106:
				{
				alt262 = 1;
				}
				break;
			case 115:
				{
				alt262 = 2;
				}
				break;
			case 136:
				{
				alt262 = 3;
				}
				break;
			case 170:
				{
				alt262 = 4;
				}
				break;
			case 183:
				{
				alt262 = 5;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 262, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(262); }
			switch (alt262)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:967:2: break_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(967, 2);
				PushFollow(Follow._break_statement_in_jump_statement7086);
				break_statement1009=break_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, break_statement1009.Tree, break_statement1009, "break_statement1009", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:968:4: continue_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(968, 4);
				PushFollow(Follow._continue_statement_in_jump_statement7091);
				continue_statement1010=continue_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, continue_statement1010.Tree, continue_statement1010, "continue_statement1010", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:969:4: goto_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(969, 4);
				PushFollow(Follow._goto_statement_in_jump_statement7096);
				goto_statement1011=goto_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, goto_statement1011.Tree, goto_statement1011, "goto_statement1011", retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:970:4: return_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(970, 4);
				PushFollow(Follow._return_statement_in_jump_statement7101);
				return_statement1012=return_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, return_statement1012.Tree, return_statement1012, "return_statement1012", retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:971:4: throw_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(971, 4);
				PushFollow(Follow._throw_statement_in_jump_statement7106);
				throw_statement1013=throw_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, throw_statement1013.Tree, throw_statement1013, "throw_statement1013", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("jump_statement", 280);
			LeaveRule("jump_statement", 280);
			LeaveRule_jump_statement();
			if (state.backtracking > 0) { Memoize(input, 280, jump_statement_StartIndex); }

		}
		DebugLocation(971, 19);
		} finally { DebugExitRule(GrammarFileName, "jump_statement"); }
		return retval;

	}
	// $ANTLR end "jump_statement"

	partial void EnterRule_break_statement();
	partial void LeaveRule_break_statement();
	// $ANTLR start "break_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:972:1: break_statement : 'break' ';' ;
	[GrammarRule("break_statement")]
	private Antlr3AstNode break_statement()
	{
		EnterRule_break_statement();
		EnterRule("break_statement", 281);
		var retval = new Antlr3AstNode("break_statement");
		
		retval.Start = (IToken)input.LT(1);
		int break_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1014 = default(IToken);
		IToken char_literal1015 = default(IToken);

		object string_literal1014_tree = default(object);
		object char_literal1015_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "break_statement");
		DebugLocation(972, 15);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 281)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:972:16: ( 'break' ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:973:2: 'break' ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(973, 2);
			string_literal1014=(IToken)Match(input,106,Follow._106_in_break_statement7114); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1014_tree = (object)adaptor.Create(string_literal1014, "string_literal1014", retval);
			adaptor.AddChild(root_0, string_literal1014_tree);
			}
			DebugLocation(973, 12);
			char_literal1015=(IToken)Match(input,SEMI,Follow._SEMI_in_break_statement7118); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1015_tree = (object)adaptor.Create(char_literal1015, "char_literal1015", retval);
			adaptor.AddChild(root_0, char_literal1015_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("break_statement", 281);
			LeaveRule("break_statement", 281);
			LeaveRule_break_statement();
			if (state.backtracking > 0) { Memoize(input, 281, break_statement_StartIndex); }

		}
		DebugLocation(973, 15);
		} finally { DebugExitRule(GrammarFileName, "break_statement"); }
		return retval;

	}
	// $ANTLR end "break_statement"

	partial void EnterRule_continue_statement();
	partial void LeaveRule_continue_statement();
	// $ANTLR start "continue_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:974:1: continue_statement : 'continue' ';' ;
	[GrammarRule("continue_statement")]
	private Antlr3AstNode continue_statement()
	{
		EnterRule_continue_statement();
		EnterRule("continue_statement", 282);
		var retval = new Antlr3AstNode("continue_statement");
		
		retval.Start = (IToken)input.LT(1);
		int continue_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1016 = default(IToken);
		IToken char_literal1017 = default(IToken);

		object string_literal1016_tree = default(object);
		object char_literal1017_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "continue_statement");
		DebugLocation(974, 18);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 282)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:974:19: ( 'continue' ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:975:2: 'continue' ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(975, 2);
			string_literal1016=(IToken)Match(input,115,Follow._115_in_continue_statement7126); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1016_tree = (object)adaptor.Create(string_literal1016, "string_literal1016", retval);
			adaptor.AddChild(root_0, string_literal1016_tree);
			}
			DebugLocation(975, 15);
			char_literal1017=(IToken)Match(input,SEMI,Follow._SEMI_in_continue_statement7130); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1017_tree = (object)adaptor.Create(char_literal1017, "char_literal1017", retval);
			adaptor.AddChild(root_0, char_literal1017_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("continue_statement", 282);
			LeaveRule("continue_statement", 282);
			LeaveRule_continue_statement();
			if (state.backtracking > 0) { Memoize(input, 282, continue_statement_StartIndex); }

		}
		DebugLocation(975, 18);
		} finally { DebugExitRule(GrammarFileName, "continue_statement"); }
		return retval;

	}
	// $ANTLR end "continue_statement"

	partial void EnterRule_goto_statement();
	partial void LeaveRule_goto_statement();
	// $ANTLR start "goto_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:976:1: goto_statement : 'goto' ( identifier | 'case' constant_expression | 'default' ) ';' ;
	[GrammarRule("goto_statement")]
	private Antlr3AstNode goto_statement()
	{
		EnterRule_goto_statement();
		EnterRule("goto_statement", 283);
		var retval = new Antlr3AstNode("goto_statement");
		
		retval.Start = (IToken)input.LT(1);
		int goto_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1018 = default(IToken);
		IToken string_literal1020 = default(IToken);
		IToken string_literal1022 = default(IToken);
		IToken char_literal1023 = default(IToken);
		Antlr3AstNode identifier1019 = default(Antlr3AstNode);
		Antlr3AstNode constant_expression1021 = default(Antlr3AstNode);

		object string_literal1018_tree = default(object);
		object string_literal1020_tree = default(object);
		object string_literal1022_tree = default(object);
		object char_literal1023_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "goto_statement");
		DebugLocation(976, 23);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 283)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:976:15: ( 'goto' ( identifier | 'case' constant_expression | 'default' ) ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:977:2: 'goto' ( identifier | 'case' constant_expression | 'default' ) ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(977, 2);
			string_literal1018=(IToken)Match(input,136,Follow._136_in_goto_statement7138); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1018_tree = (object)adaptor.Create(string_literal1018, "string_literal1018", retval);
			adaptor.AddChild(root_0, string_literal1018_tree);
			}
			DebugLocation(977, 11);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:977:11: ( identifier | 'case' constant_expression | 'default' )
			int alt263=3;
			try { DebugEnterSubRule(263);
			try { DebugEnterDecision(263, false);
			switch (input.LA(1))
			{
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 107:
			case 119:
			case 122:
			case 124:
			case 128:
			case 134:
			case 137:
			case 143:
			case 145:
			case 146:
			case 149:
			case 150:
			case 154:
			case 156:
			case 159:
			case 162:
			case 164:
			case 169:
			case 173:
			case 174:
			case 185:
			case 192:
			case 196:
			case 198:
				{
				alt263 = 1;
				}
				break;
			case 109:
				{
				alt263 = 2;
				}
				break;
			case 117:
				{
				alt263 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 263, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(263); }
			switch (alt263)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:977:13: identifier
				{
				DebugLocation(977, 13);
				PushFollow(Follow._identifier_in_goto_statement7144);
				identifier1019=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier1019.Tree, identifier1019, "identifier1019", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:978:7: 'case' constant_expression
				{
				DebugLocation(978, 7);
				string_literal1020=(IToken)Match(input,109,Follow._109_in_goto_statement7152); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal1020_tree = (object)adaptor.Create(string_literal1020, "string_literal1020", retval);
				adaptor.AddChild(root_0, string_literal1020_tree);
				}
				DebugLocation(978, 16);
				PushFollow(Follow._constant_expression_in_goto_statement7156);
				constant_expression1021=constant_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constant_expression1021.Tree, constant_expression1021, "constant_expression1021", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:979:7: 'default'
				{
				DebugLocation(979, 7);
				string_literal1022=(IToken)Match(input,117,Follow._117_in_goto_statement7164); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal1022_tree = (object)adaptor.Create(string_literal1022, "string_literal1022", retval);
				adaptor.AddChild(root_0, string_literal1022_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(263); }

			DebugLocation(979, 20);
			char_literal1023=(IToken)Match(input,SEMI,Follow._SEMI_in_goto_statement7169); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1023_tree = (object)adaptor.Create(char_literal1023, "char_literal1023", retval);
			adaptor.AddChild(root_0, char_literal1023_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("goto_statement", 283);
			LeaveRule("goto_statement", 283);
			LeaveRule_goto_statement();
			if (state.backtracking > 0) { Memoize(input, 283, goto_statement_StartIndex); }

		}
		DebugLocation(979, 23);
		} finally { DebugExitRule(GrammarFileName, "goto_statement"); }
		return retval;

	}
	// $ANTLR end "goto_statement"

	partial void EnterRule_return_statement();
	partial void LeaveRule_return_statement();
	// $ANTLR start "return_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:980:1: return_statement : 'return' ( expression )? ';' ;
	[GrammarRule("return_statement")]
	private Antlr3AstNode return_statement()
	{
		EnterRule_return_statement();
		EnterRule("return_statement", 284);
		var retval = new Antlr3AstNode("return_statement");
		
		retval.Start = (IToken)input.LT(1);
		int return_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1024 = default(IToken);
		IToken char_literal1026 = default(IToken);
		Antlr3AstNode expression1025 = default(Antlr3AstNode);

		object string_literal1024_tree = default(object);
		object char_literal1026_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "return_statement");
		DebugLocation(980, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 284)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:980:17: ( 'return' ( expression )? ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:981:2: 'return' ( expression )? ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(981, 2);
			string_literal1024=(IToken)Match(input,170,Follow._170_in_return_statement7177); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1024_tree = (object)adaptor.Create(string_literal1024, "string_literal1024", retval);
			adaptor.AddChild(root_0, string_literal1024_tree);
			}
			DebugLocation(981, 13);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:981:13: ( expression )?
			int alt264=2;
			try { DebugEnterSubRule(264);
			try { DebugEnterDecision(264, false);
			int LA264_1 = input.LA(1);

			if ((LA264_1==Character_literal||LA264_1==FALSE||(LA264_1>=Hex_number && LA264_1<=IDENTIFIER)||(LA264_1>=MINUS && LA264_1<=NUMBER)||LA264_1==Real_literal||LA264_1==STRINGLITERAL||LA264_1==TRUE||LA264_1==Verbatim_string_literal||LA264_1==61||LA264_1==66||(LA264_1>=68 && LA264_1<=69)||(LA264_1>=71 && LA264_1<=72)||LA264_1==75||LA264_1==95||(LA264_1>=97 && LA264_1<=98)||(LA264_1>=100 && LA264_1<=105)||(LA264_1>=107 && LA264_1<=108)||(LA264_1>=111 && LA264_1<=112)||(LA264_1>=116 && LA264_1<=119)||(LA264_1>=121 && LA264_1<=122)||LA264_1==124||LA264_1==128||LA264_1==131||LA264_1==134||LA264_1==137||LA264_1==140||LA264_1==143||(LA264_1>=145 && LA264_1<=146)||(LA264_1>=148 && LA264_1<=150)||(LA264_1>=152 && LA264_1<=154)||LA264_1==156||LA264_1==159||LA264_1==162||LA264_1==164||LA264_1==169||LA264_1==171||(LA264_1>=173 && LA264_1<=176)||LA264_1==179||LA264_1==182||(LA264_1>=185 && LA264_1<=189)||(LA264_1>=191 && LA264_1<=192)||LA264_1==196||LA264_1==198||LA264_1==204))
			{
				alt264 = 1;
			}
			} finally { DebugExitDecision(264); }
			switch (alt264)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:981:13: expression
				{
				DebugLocation(981, 13);
				PushFollow(Follow._expression_in_return_statement7181);
				expression1025=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression1025.Tree, expression1025, "expression1025", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(264); }

			DebugLocation(981, 27);
			char_literal1026=(IToken)Match(input,SEMI,Follow._SEMI_in_return_statement7186); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1026_tree = (object)adaptor.Create(char_literal1026, "char_literal1026", retval);
			adaptor.AddChild(root_0, char_literal1026_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("return_statement", 284);
			LeaveRule("return_statement", 284);
			LeaveRule_return_statement();
			if (state.backtracking > 0) { Memoize(input, 284, return_statement_StartIndex); }

		}
		DebugLocation(981, 30);
		} finally { DebugExitRule(GrammarFileName, "return_statement"); }
		return retval;

	}
	// $ANTLR end "return_statement"

	partial void EnterRule_throw_statement();
	partial void LeaveRule_throw_statement();
	// $ANTLR start "throw_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:982:1: throw_statement : 'throw' ( expression )? ';' ;
	[GrammarRule("throw_statement")]
	private Antlr3AstNode throw_statement()
	{
		EnterRule_throw_statement();
		EnterRule("throw_statement", 285);
		var retval = new Antlr3AstNode("throw_statement");
		
		retval.Start = (IToken)input.LT(1);
		int throw_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1027 = default(IToken);
		IToken char_literal1029 = default(IToken);
		Antlr3AstNode expression1028 = default(Antlr3AstNode);

		object string_literal1027_tree = default(object);
		object char_literal1029_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "throw_statement");
		DebugLocation(982, 29);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 285)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:982:16: ( 'throw' ( expression )? ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:983:2: 'throw' ( expression )? ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(983, 2);
			string_literal1027=(IToken)Match(input,183,Follow._183_in_throw_statement7194); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1027_tree = (object)adaptor.Create(string_literal1027, "string_literal1027", retval);
			adaptor.AddChild(root_0, string_literal1027_tree);
			}
			DebugLocation(983, 12);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:983:12: ( expression )?
			int alt265=2;
			try { DebugEnterSubRule(265);
			try { DebugEnterDecision(265, false);
			int LA265_1 = input.LA(1);

			if ((LA265_1==Character_literal||LA265_1==FALSE||(LA265_1>=Hex_number && LA265_1<=IDENTIFIER)||(LA265_1>=MINUS && LA265_1<=NUMBER)||LA265_1==Real_literal||LA265_1==STRINGLITERAL||LA265_1==TRUE||LA265_1==Verbatim_string_literal||LA265_1==61||LA265_1==66||(LA265_1>=68 && LA265_1<=69)||(LA265_1>=71 && LA265_1<=72)||LA265_1==75||LA265_1==95||(LA265_1>=97 && LA265_1<=98)||(LA265_1>=100 && LA265_1<=105)||(LA265_1>=107 && LA265_1<=108)||(LA265_1>=111 && LA265_1<=112)||(LA265_1>=116 && LA265_1<=119)||(LA265_1>=121 && LA265_1<=122)||LA265_1==124||LA265_1==128||LA265_1==131||LA265_1==134||LA265_1==137||LA265_1==140||LA265_1==143||(LA265_1>=145 && LA265_1<=146)||(LA265_1>=148 && LA265_1<=150)||(LA265_1>=152 && LA265_1<=154)||LA265_1==156||LA265_1==159||LA265_1==162||LA265_1==164||LA265_1==169||LA265_1==171||(LA265_1>=173 && LA265_1<=176)||LA265_1==179||LA265_1==182||(LA265_1>=185 && LA265_1<=189)||(LA265_1>=191 && LA265_1<=192)||LA265_1==196||LA265_1==198||LA265_1==204))
			{
				alt265 = 1;
			}
			} finally { DebugExitDecision(265); }
			switch (alt265)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:983:12: expression
				{
				DebugLocation(983, 12);
				PushFollow(Follow._expression_in_throw_statement7198);
				expression1028=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression1028.Tree, expression1028, "expression1028", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(265); }

			DebugLocation(983, 26);
			char_literal1029=(IToken)Match(input,SEMI,Follow._SEMI_in_throw_statement7203); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1029_tree = (object)adaptor.Create(char_literal1029, "char_literal1029", retval);
			adaptor.AddChild(root_0, char_literal1029_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("throw_statement", 285);
			LeaveRule("throw_statement", 285);
			LeaveRule_throw_statement();
			if (state.backtracking > 0) { Memoize(input, 285, throw_statement_StartIndex); }

		}
		DebugLocation(983, 29);
		} finally { DebugExitRule(GrammarFileName, "throw_statement"); }
		return retval;

	}
	// $ANTLR end "throw_statement"

	partial void EnterRule_try_statement();
	partial void LeaveRule_try_statement();
	// $ANTLR start "try_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:984:1: try_statement : 'try' block ( catch_clauses ( finally_clause )? | finally_clause ) ;
	[GrammarRule("try_statement")]
	private Antlr3AstNode try_statement()
	{
		EnterRule_try_statement();
		EnterRule("try_statement", 286);
		var retval = new Antlr3AstNode("try_statement");
		
		retval.Start = (IToken)input.LT(1);
		int try_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1030 = default(IToken);
		Antlr3AstNode block1031 = default(Antlr3AstNode);
		Antlr3AstNode catch_clauses1032 = default(Antlr3AstNode);
		Antlr3AstNode finally_clause1033 = default(Antlr3AstNode);
		Antlr3AstNode finally_clause1034 = default(Antlr3AstNode);

		object string_literal1030_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "try_statement");
		DebugLocation(984, 24);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 286)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:984:14: ( 'try' block ( catch_clauses ( finally_clause )? | finally_clause ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:985:7: 'try' block ( catch_clauses ( finally_clause )? | finally_clause )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(985, 7);
			string_literal1030=(IToken)Match(input,184,Follow._184_in_try_statement7216); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1030_tree = (object)adaptor.Create(string_literal1030, "string_literal1030", retval);
			adaptor.AddChild(root_0, string_literal1030_tree);
			}
			DebugLocation(985, 15);
			PushFollow(Follow._block_in_try_statement7220);
			block1031=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block1031.Tree, block1031, "block1031", retval);
			DebugLocation(985, 23);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:985:23: ( catch_clauses ( finally_clause )? | finally_clause )
			int alt267=2;
			try { DebugEnterSubRule(267);
			try { DebugEnterDecision(267, false);
			int LA267_1 = input.LA(1);

			if ((LA267_1==110))
			{
				alt267 = 1;
			}
			else if ((LA267_1==129))
			{
				alt267 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 267, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(267); }
			switch (alt267)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:985:25: catch_clauses ( finally_clause )?
				{
				DebugLocation(985, 25);
				PushFollow(Follow._catch_clauses_in_try_statement7226);
				catch_clauses1032=catch_clauses();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, catch_clauses1032.Tree, catch_clauses1032, "catch_clauses1032", retval);
				DebugLocation(985, 41);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:985:41: ( finally_clause )?
				int alt266=2;
				try { DebugEnterSubRule(266);
				try { DebugEnterDecision(266, false);
				int LA266_1 = input.LA(1);

				if ((LA266_1==129))
				{
					alt266 = 1;
				}
				} finally { DebugExitDecision(266); }
				switch (alt266)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:985:41: finally_clause
					{
					DebugLocation(985, 41);
					PushFollow(Follow._finally_clause_in_try_statement7230);
					finally_clause1033=finally_clause();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, finally_clause1033.Tree, finally_clause1033, "finally_clause1033", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(266); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:986:10: finally_clause
				{
				DebugLocation(986, 10);
				PushFollow(Follow._finally_clause_in_try_statement7242);
				finally_clause1034=finally_clause();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, finally_clause1034.Tree, finally_clause1034, "finally_clause1034", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(267); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("try_statement", 286);
			LeaveRule("try_statement", 286);
			LeaveRule_try_statement();
			if (state.backtracking > 0) { Memoize(input, 286, try_statement_StartIndex); }

		}
		DebugLocation(986, 24);
		} finally { DebugExitRule(GrammarFileName, "try_statement"); }
		return retval;

	}
	// $ANTLR end "try_statement"

	partial void EnterRule_catch_clauses();
	partial void LeaveRule_catch_clauses();
	// $ANTLR start "catch_clauses"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:988:1: catch_clauses : 'catch' ( specific_catch_clauses | general_catch_clause ) ;
	[GrammarRule("catch_clauses")]
	private Antlr3AstNode catch_clauses()
	{
		EnterRule_catch_clauses();
		EnterRule("catch_clauses", 287);
		var retval = new Antlr3AstNode("catch_clauses");
		
		retval.Start = (IToken)input.LT(1);
		int catch_clauses_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1035 = default(IToken);
		Antlr3AstNode specific_catch_clauses1036 = default(Antlr3AstNode);
		Antlr3AstNode general_catch_clause1037 = default(Antlr3AstNode);

		object string_literal1035_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "catch_clauses");
		DebugLocation(988, 59);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 287)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:988:14: ( 'catch' ( specific_catch_clauses | general_catch_clause ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:989:2: 'catch' ( specific_catch_clauses | general_catch_clause )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(989, 2);
			string_literal1035=(IToken)Match(input,110,Follow._110_in_catch_clauses7251); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1035_tree = (object)adaptor.Create(string_literal1035, "string_literal1035", retval);
			adaptor.AddChild(root_0, string_literal1035_tree);
			}
			DebugLocation(989, 12);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:989:12: ( specific_catch_clauses | general_catch_clause )
			int alt268=2;
			try { DebugEnterSubRule(268);
			try { DebugEnterDecision(268, false);
			int LA268_1 = input.LA(1);

			if ((LA268_1==68))
			{
				alt268 = 1;
			}
			else if ((LA268_1==SEMI||LA268_1==199))
			{
				alt268 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 268, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(268); }
			switch (alt268)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:989:13: specific_catch_clauses
				{
				DebugLocation(989, 13);
				PushFollow(Follow._specific_catch_clauses_in_catch_clauses7256);
				specific_catch_clauses1036=specific_catch_clauses();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, specific_catch_clauses1036.Tree, specific_catch_clauses1036, "specific_catch_clauses1036", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:989:38: general_catch_clause
				{
				DebugLocation(989, 38);
				PushFollow(Follow._general_catch_clause_in_catch_clauses7260);
				general_catch_clause1037=general_catch_clause();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, general_catch_clause1037.Tree, general_catch_clause1037, "general_catch_clause1037", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(268); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("catch_clauses", 287);
			LeaveRule("catch_clauses", 287);
			LeaveRule_catch_clauses();
			if (state.backtracking > 0) { Memoize(input, 287, catch_clauses_StartIndex); }

		}
		DebugLocation(989, 59);
		} finally { DebugExitRule(GrammarFileName, "catch_clauses"); }
		return retval;

	}
	// $ANTLR end "catch_clauses"

	partial void EnterRule_specific_catch_clauses();
	partial void LeaveRule_specific_catch_clauses();
	// $ANTLR start "specific_catch_clauses"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:990:1: specific_catch_clauses : specific_catch_clause ( 'catch' ( specific_catch_clause | general_catch_clause ) )* ;
	[GrammarRule("specific_catch_clauses")]
	private Antlr3AstNode specific_catch_clauses()
	{
		EnterRule_specific_catch_clauses();
		EnterRule("specific_catch_clauses", 288);
		var retval = new Antlr3AstNode("specific_catch_clauses");
		
		retval.Start = (IToken)input.LT(1);
		int specific_catch_clauses_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1039 = default(IToken);
		Antlr3AstNode specific_catch_clause1038 = default(Antlr3AstNode);
		Antlr3AstNode specific_catch_clause1040 = default(Antlr3AstNode);
		Antlr3AstNode general_catch_clause1041 = default(Antlr3AstNode);

		object string_literal1039_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "specific_catch_clauses");
		DebugLocation(990, 84);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 288)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:990:23: ( specific_catch_clause ( 'catch' ( specific_catch_clause | general_catch_clause ) )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:991:2: specific_catch_clause ( 'catch' ( specific_catch_clause | general_catch_clause ) )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(991, 2);
			PushFollow(Follow._specific_catch_clause_in_specific_catch_clauses7269);
			specific_catch_clause1038=specific_catch_clause();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, specific_catch_clause1038.Tree, specific_catch_clause1038, "specific_catch_clause1038", retval);
			DebugLocation(991, 26);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:991:26: ( 'catch' ( specific_catch_clause | general_catch_clause ) )*
			try { DebugEnterSubRule(270);
			while (true)
			{
				int alt270=2;
				try { DebugEnterDecision(270, false);
				int LA270_1 = input.LA(1);

				if ((LA270_1==110))
				{
					alt270 = 1;
				}


				} finally { DebugExitDecision(270); }
				switch ( alt270 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:991:27: 'catch' ( specific_catch_clause | general_catch_clause )
					{
					DebugLocation(991, 27);
					string_literal1039=(IToken)Match(input,110,Follow._110_in_specific_catch_clauses7274); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal1039_tree = (object)adaptor.Create(string_literal1039, "string_literal1039", retval);
					adaptor.AddChild(root_0, string_literal1039_tree);
					}
					DebugLocation(991, 37);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:991:37: ( specific_catch_clause | general_catch_clause )
					int alt269=2;
					try { DebugEnterSubRule(269);
					try { DebugEnterDecision(269, false);
					int LA269_1 = input.LA(1);

					if ((LA269_1==68))
					{
						alt269 = 1;
					}
					else if ((LA269_1==SEMI||LA269_1==199))
					{
						alt269 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 269, 0, input, 1);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					} finally { DebugExitDecision(269); }
					switch (alt269)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:991:38: specific_catch_clause
						{
						DebugLocation(991, 38);
						PushFollow(Follow._specific_catch_clause_in_specific_catch_clauses7279);
						specific_catch_clause1040=specific_catch_clause();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, specific_catch_clause1040.Tree, specific_catch_clause1040, "specific_catch_clause1040", retval);

						}
						break;
					case 2:
						DebugEnterAlt(2);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:991:62: general_catch_clause
						{
						DebugLocation(991, 62);
						PushFollow(Follow._general_catch_clause_in_specific_catch_clauses7283);
						general_catch_clause1041=general_catch_clause();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, general_catch_clause1041.Tree, general_catch_clause1041, "general_catch_clause1041", retval);

						}
						break;

					}
					} finally { DebugExitSubRule(269); }


					}
					break;

				default:
					goto loop270;
				}
			}

			loop270:
				;

			} finally { DebugExitSubRule(270); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("specific_catch_clauses", 288);
			LeaveRule("specific_catch_clauses", 288);
			LeaveRule_specific_catch_clauses();
			if (state.backtracking > 0) { Memoize(input, 288, specific_catch_clauses_StartIndex); }

		}
		DebugLocation(991, 84);
		} finally { DebugExitRule(GrammarFileName, "specific_catch_clauses"); }
		return retval;

	}
	// $ANTLR end "specific_catch_clauses"

	partial void EnterRule_specific_catch_clause();
	partial void LeaveRule_specific_catch_clause();
	// $ANTLR start "specific_catch_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:992:1: specific_catch_clause : '(' class_type ( identifier )? ')' block ;
	[GrammarRule("specific_catch_clause")]
	private Antlr3AstNode specific_catch_clause()
	{
		EnterRule_specific_catch_clause();
		EnterRule("specific_catch_clause", 289);
		var retval = new Antlr3AstNode("specific_catch_clause");
		
		retval.Start = (IToken)input.LT(1);
		int specific_catch_clause_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal1042 = default(IToken);
		IToken char_literal1045 = default(IToken);
		Antlr3AstNode class_type1043 = default(Antlr3AstNode);
		Antlr3AstNode identifier1044 = default(Antlr3AstNode);
		Antlr3AstNode block1046 = default(Antlr3AstNode);

		object char_literal1042_tree = default(object);
		object char_literal1045_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "specific_catch_clause");
		DebugLocation(992, 46);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 289)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:992:22: ( '(' class_type ( identifier )? ')' block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:993:2: '(' class_type ( identifier )? ')' block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(993, 2);
			char_literal1042=(IToken)Match(input,68,Follow._68_in_specific_catch_clause7293); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1042_tree = (object)adaptor.Create(char_literal1042, "char_literal1042", retval);
			adaptor.AddChild(root_0, char_literal1042_tree);
			}
			DebugLocation(993, 8);
			PushFollow(Follow._class_type_in_specific_catch_clause7297);
			class_type1043=class_type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, class_type1043.Tree, class_type1043, "class_type1043", retval);
			DebugLocation(993, 21);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:993:21: ( identifier )?
			int alt271=2;
			try { DebugEnterSubRule(271);
			try { DebugEnterDecision(271, false);
			int LA271_1 = input.LA(1);

			if ((LA271_1==IDENTIFIER||LA271_1==95||(LA271_1>=97 && LA271_1<=98)||(LA271_1>=100 && LA271_1<=101)||LA271_1==107||LA271_1==119||LA271_1==122||LA271_1==124||LA271_1==128||LA271_1==134||LA271_1==137||LA271_1==143||(LA271_1>=145 && LA271_1<=146)||(LA271_1>=149 && LA271_1<=150)||LA271_1==154||LA271_1==156||LA271_1==159||LA271_1==162||LA271_1==164||LA271_1==169||(LA271_1>=173 && LA271_1<=174)||LA271_1==185||LA271_1==192||LA271_1==196||LA271_1==198))
			{
				alt271 = 1;
			}
			} finally { DebugExitDecision(271); }
			switch (alt271)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:993:21: identifier
				{
				DebugLocation(993, 21);
				PushFollow(Follow._identifier_in_specific_catch_clause7301);
				identifier1044=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier1044.Tree, identifier1044, "identifier1044", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(271); }

			DebugLocation(993, 35);
			char_literal1045=(IToken)Match(input,RPAREN,Follow._RPAREN_in_specific_catch_clause7306); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1045_tree = (object)adaptor.Create(char_literal1045, "char_literal1045", retval);
			adaptor.AddChild(root_0, char_literal1045_tree);
			}
			DebugLocation(993, 41);
			PushFollow(Follow._block_in_specific_catch_clause7310);
			block1046=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block1046.Tree, block1046, "block1046", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("specific_catch_clause", 289);
			LeaveRule("specific_catch_clause", 289);
			LeaveRule_specific_catch_clause();
			if (state.backtracking > 0) { Memoize(input, 289, specific_catch_clause_StartIndex); }

		}
		DebugLocation(993, 46);
		} finally { DebugExitRule(GrammarFileName, "specific_catch_clause"); }
		return retval;

	}
	// $ANTLR end "specific_catch_clause"

	partial void EnterRule_general_catch_clause();
	partial void LeaveRule_general_catch_clause();
	// $ANTLR start "general_catch_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:994:1: general_catch_clause : block ;
	[GrammarRule("general_catch_clause")]
	private Antlr3AstNode general_catch_clause()
	{
		EnterRule_general_catch_clause();
		EnterRule("general_catch_clause", 290);
		var retval = new Antlr3AstNode("general_catch_clause");
		
		retval.Start = (IToken)input.LT(1);
		int general_catch_clause_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode block1047 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "general_catch_clause");
		DebugLocation(994, 7);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 290)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:994:21: ( block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:995:2: block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(995, 2);
			PushFollow(Follow._block_in_general_catch_clause7318);
			block1047=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block1047.Tree, block1047, "block1047", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("general_catch_clause", 290);
			LeaveRule("general_catch_clause", 290);
			LeaveRule_general_catch_clause();
			if (state.backtracking > 0) { Memoize(input, 290, general_catch_clause_StartIndex); }

		}
		DebugLocation(995, 7);
		} finally { DebugExitRule(GrammarFileName, "general_catch_clause"); }
		return retval;

	}
	// $ANTLR end "general_catch_clause"

	partial void EnterRule_finally_clause();
	partial void LeaveRule_finally_clause();
	// $ANTLR start "finally_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:996:1: finally_clause : 'finally' block ;
	[GrammarRule("finally_clause")]
	private Antlr3AstNode finally_clause()
	{
		EnterRule_finally_clause();
		EnterRule("finally_clause", 291);
		var retval = new Antlr3AstNode("finally_clause");
		
		retval.Start = (IToken)input.LT(1);
		int finally_clause_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1048 = default(IToken);
		Antlr3AstNode block1049 = default(Antlr3AstNode);

		object string_literal1048_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "finally_clause");
		DebugLocation(996, 19);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 291)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:996:15: ( 'finally' block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:997:2: 'finally' block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(997, 2);
			string_literal1048=(IToken)Match(input,129,Follow._129_in_finally_clause7326); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1048_tree = (object)adaptor.Create(string_literal1048, "string_literal1048", retval);
			adaptor.AddChild(root_0, string_literal1048_tree);
			}
			DebugLocation(997, 14);
			PushFollow(Follow._block_in_finally_clause7330);
			block1049=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block1049.Tree, block1049, "block1049", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("finally_clause", 291);
			LeaveRule("finally_clause", 291);
			LeaveRule_finally_clause();
			if (state.backtracking > 0) { Memoize(input, 291, finally_clause_StartIndex); }

		}
		DebugLocation(997, 19);
		} finally { DebugExitRule(GrammarFileName, "finally_clause"); }
		return retval;

	}
	// $ANTLR end "finally_clause"

	partial void EnterRule_checked_statement();
	partial void LeaveRule_checked_statement();
	// $ANTLR start "checked_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:998:1: checked_statement : 'checked' block ;
	[GrammarRule("checked_statement")]
	private Antlr3AstNode checked_statement()
	{
		EnterRule_checked_statement();
		EnterRule("checked_statement", 292);
		var retval = new Antlr3AstNode("checked_statement");
		
		retval.Start = (IToken)input.LT(1);
		int checked_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1050 = default(IToken);
		Antlr3AstNode block1051 = default(Antlr3AstNode);

		object string_literal1050_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "checked_statement");
		DebugLocation(998, 19);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 292)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:998:18: ( 'checked' block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:999:2: 'checked' block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(999, 2);
			string_literal1050=(IToken)Match(input,112,Follow._112_in_checked_statement7338); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1050_tree = (object)adaptor.Create(string_literal1050, "string_literal1050", retval);
			adaptor.AddChild(root_0, string_literal1050_tree);
			}
			DebugLocation(999, 14);
			PushFollow(Follow._block_in_checked_statement7342);
			block1051=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block1051.Tree, block1051, "block1051", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("checked_statement", 292);
			LeaveRule("checked_statement", 292);
			LeaveRule_checked_statement();
			if (state.backtracking > 0) { Memoize(input, 292, checked_statement_StartIndex); }

		}
		DebugLocation(999, 19);
		} finally { DebugExitRule(GrammarFileName, "checked_statement"); }
		return retval;

	}
	// $ANTLR end "checked_statement"

	partial void EnterRule_unchecked_statement();
	partial void LeaveRule_unchecked_statement();
	// $ANTLR start "unchecked_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1000:1: unchecked_statement : 'unchecked' block ;
	[GrammarRule("unchecked_statement")]
	private Antlr3AstNode unchecked_statement()
	{
		EnterRule_unchecked_statement();
		EnterRule("unchecked_statement", 293);
		var retval = new Antlr3AstNode("unchecked_statement");
		
		retval.Start = (IToken)input.LT(1);
		int unchecked_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1052 = default(IToken);
		Antlr3AstNode block1053 = default(Antlr3AstNode);

		object string_literal1052_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "unchecked_statement");
		DebugLocation(1000, 21);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 293)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1000:20: ( 'unchecked' block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1001:2: 'unchecked' block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1001, 2);
			string_literal1052=(IToken)Match(input,189,Follow._189_in_unchecked_statement7350); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1052_tree = (object)adaptor.Create(string_literal1052, "string_literal1052", retval);
			adaptor.AddChild(root_0, string_literal1052_tree);
			}
			DebugLocation(1001, 16);
			PushFollow(Follow._block_in_unchecked_statement7354);
			block1053=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block1053.Tree, block1053, "block1053", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unchecked_statement", 293);
			LeaveRule("unchecked_statement", 293);
			LeaveRule_unchecked_statement();
			if (state.backtracking > 0) { Memoize(input, 293, unchecked_statement_StartIndex); }

		}
		DebugLocation(1001, 21);
		} finally { DebugExitRule(GrammarFileName, "unchecked_statement"); }
		return retval;

	}
	// $ANTLR end "unchecked_statement"

	partial void EnterRule_lock_statement();
	partial void LeaveRule_lock_statement();
	// $ANTLR start "lock_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1002:1: lock_statement : 'lock' '(' expression ')' embedded_statement ;
	[GrammarRule("lock_statement")]
	private Antlr3AstNode lock_statement()
	{
		EnterRule_lock_statement();
		EnterRule("lock_statement", 294);
		var retval = new Antlr3AstNode("lock_statement");
		
		retval.Start = (IToken)input.LT(1);
		int lock_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1054 = default(IToken);
		IToken char_literal1055 = default(IToken);
		IToken char_literal1057 = default(IToken);
		Antlr3AstNode expression1056 = default(Antlr3AstNode);
		Antlr3AstNode embedded_statement1058 = default(Antlr3AstNode);

		object string_literal1054_tree = default(object);
		object char_literal1055_tree = default(object);
		object char_literal1057_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "lock_statement");
		DebugLocation(1002, 53);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 294)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1002:15: ( 'lock' '(' expression ')' embedded_statement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1003:2: 'lock' '(' expression ')' embedded_statement
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1003, 2);
			string_literal1054=(IToken)Match(input,147,Follow._147_in_lock_statement7362); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1054_tree = (object)adaptor.Create(string_literal1054, "string_literal1054", retval);
			adaptor.AddChild(root_0, string_literal1054_tree);
			}
			DebugLocation(1003, 11);
			char_literal1055=(IToken)Match(input,68,Follow._68_in_lock_statement7366); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1055_tree = (object)adaptor.Create(char_literal1055, "char_literal1055", retval);
			adaptor.AddChild(root_0, char_literal1055_tree);
			}
			DebugLocation(1003, 16);
			PushFollow(Follow._expression_in_lock_statement7369);
			expression1056=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression1056.Tree, expression1056, "expression1056", retval);
			DebugLocation(1003, 29);
			char_literal1057=(IToken)Match(input,RPAREN,Follow._RPAREN_in_lock_statement7373); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1057_tree = (object)adaptor.Create(char_literal1057, "char_literal1057", retval);
			adaptor.AddChild(root_0, char_literal1057_tree);
			}
			DebugLocation(1003, 35);
			PushFollow(Follow._embedded_statement_in_lock_statement7377);
			embedded_statement1058=embedded_statement();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, embedded_statement1058.Tree, embedded_statement1058, "embedded_statement1058", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("lock_statement", 294);
			LeaveRule("lock_statement", 294);
			LeaveRule_lock_statement();
			if (state.backtracking > 0) { Memoize(input, 294, lock_statement_StartIndex); }

		}
		DebugLocation(1003, 53);
		} finally { DebugExitRule(GrammarFileName, "lock_statement"); }
		return retval;

	}
	// $ANTLR end "lock_statement"

	partial void EnterRule_using_statement();
	partial void LeaveRule_using_statement();
	// $ANTLR start "using_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1004:1: using_statement : 'using' '(' resource_acquisition ')' embedded_statement ;
	[GrammarRule("using_statement")]
	private Antlr3AstNode using_statement()
	{
		EnterRule_using_statement();
		EnterRule("using_statement", 295);
		var retval = new Antlr3AstNode("using_statement");
		
		retval.Start = (IToken)input.LT(1);
		int using_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1059 = default(IToken);
		IToken char_literal1060 = default(IToken);
		IToken char_literal1062 = default(IToken);
		Antlr3AstNode resource_acquisition1061 = default(Antlr3AstNode);
		Antlr3AstNode embedded_statement1063 = default(Antlr3AstNode);

		object string_literal1059_tree = default(object);
		object char_literal1060_tree = default(object);
		object char_literal1062_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "using_statement");
		DebugLocation(1004, 67);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 295)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1004:16: ( 'using' '(' resource_acquisition ')' embedded_statement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1005:2: 'using' '(' resource_acquisition ')' embedded_statement
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1005, 2);
			string_literal1059=(IToken)Match(input,USING,Follow._USING_in_using_statement7385); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1059_tree = (object)adaptor.Create(string_literal1059, "string_literal1059", retval);
			adaptor.AddChild(root_0, string_literal1059_tree);
			}
			DebugLocation(1005, 12);
			char_literal1060=(IToken)Match(input,68,Follow._68_in_using_statement7389); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1060_tree = (object)adaptor.Create(char_literal1060, "char_literal1060", retval);
			adaptor.AddChild(root_0, char_literal1060_tree);
			}
			DebugLocation(1005, 19);
			PushFollow(Follow._resource_acquisition_in_using_statement7394);
			resource_acquisition1061=resource_acquisition();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, resource_acquisition1061.Tree, resource_acquisition1061, "resource_acquisition1061", retval);
			DebugLocation(1005, 42);
			char_literal1062=(IToken)Match(input,RPAREN,Follow._RPAREN_in_using_statement7398); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1062_tree = (object)adaptor.Create(char_literal1062, "char_literal1062", retval);
			adaptor.AddChild(root_0, char_literal1062_tree);
			}
			DebugLocation(1005, 49);
			PushFollow(Follow._embedded_statement_in_using_statement7403);
			embedded_statement1063=embedded_statement();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, embedded_statement1063.Tree, embedded_statement1063, "embedded_statement1063", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("using_statement", 295);
			LeaveRule("using_statement", 295);
			LeaveRule_using_statement();
			if (state.backtracking > 0) { Memoize(input, 295, using_statement_StartIndex); }

		}
		DebugLocation(1005, 67);
		} finally { DebugExitRule(GrammarFileName, "using_statement"); }
		return retval;

	}
	// $ANTLR end "using_statement"

	partial void EnterRule_resource_acquisition();
	partial void LeaveRule_resource_acquisition();
	// $ANTLR start "resource_acquisition"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1006:1: resource_acquisition : ( ( local_variable_declaration )=> local_variable_declaration | expression );
	[GrammarRule("resource_acquisition")]
	private Antlr3AstNode resource_acquisition()
	{
		EnterRule_resource_acquisition();
		EnterRule("resource_acquisition", 296);
		var retval = new Antlr3AstNode("resource_acquisition");
		
		retval.Start = (IToken)input.LT(1);
		int resource_acquisition_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode local_variable_declaration1064 = default(Antlr3AstNode);
		Antlr3AstNode expression1065 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "resource_acquisition");
		DebugLocation(1006, 14);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 296)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1006:21: ( ( local_variable_declaration )=> local_variable_declaration | expression )
			int alt272=2;
			try { DebugEnterDecision(272, false);
			int LA272_1 = input.LA(1);

			if ((LA272_1==192))
			{
				int LA272_2 = input.LA(2);

				if ((EvaluatePredicate(synpred36_cs_fragment)))
				{
					alt272 = 1;
				}
				else if ((true))
				{
					alt272 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 272, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA272_1==122))
			{
				int LA272_2 = input.LA(2);

				if ((EvaluatePredicate(synpred36_cs_fragment)))
				{
					alt272 = 1;
				}
				else if ((true))
				{
					alt272 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 272, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA272_1==105||LA272_1==108||LA272_1==111||LA272_1==116||LA272_1==121||LA272_1==131||LA272_1==140||LA272_1==148||LA272_1==153||LA272_1==171||LA272_1==175||LA272_1==179||(LA272_1>=187 && LA272_1<=188)||LA272_1==191))
			{
				int LA272_2 = input.LA(2);

				if ((EvaluatePredicate(synpred36_cs_fragment)))
				{
					alt272 = 1;
				}
				else if ((true))
				{
					alt272 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 272, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA272_1==134))
			{
				int LA272_2 = input.LA(2);

				if ((EvaluatePredicate(synpred36_cs_fragment)))
				{
					alt272 = 1;
				}
				else if ((true))
				{
					alt272 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 272, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA272_1==194) && (EvaluatePredicate(synpred36_cs_fragment)))
			{
				alt272 = 1;
			}
			else if ((LA272_1==Character_literal||LA272_1==FALSE||LA272_1==Hex_number||(LA272_1>=MINUS && LA272_1<=NUMBER)||LA272_1==Real_literal||LA272_1==STRINGLITERAL||LA272_1==TRUE||LA272_1==Verbatim_string_literal||LA272_1==61||LA272_1==66||(LA272_1>=68 && LA272_1<=69)||(LA272_1>=71 && LA272_1<=72)||LA272_1==75||(LA272_1>=102 && LA272_1<=104)||LA272_1==112||(LA272_1>=117 && LA272_1<=118)||LA272_1==152||LA272_1==176||LA272_1==182||LA272_1==186||LA272_1==189||LA272_1==204))
			{
				alt272 = 2;
			}
			else if ((LA272_1==IDENTIFIER||LA272_1==95||(LA272_1>=97 && LA272_1<=98)||(LA272_1>=100 && LA272_1<=101)||LA272_1==107||LA272_1==119||LA272_1==124||LA272_1==128||LA272_1==137||LA272_1==143||(LA272_1>=145 && LA272_1<=146)||(LA272_1>=149 && LA272_1<=150)||LA272_1==154||LA272_1==156||LA272_1==159||LA272_1==162||LA272_1==164||LA272_1==169||(LA272_1>=173 && LA272_1<=174)||LA272_1==185||LA272_1==196||LA272_1==198))
			{
				int LA272_2 = input.LA(2);

				if ((EvaluatePredicate(synpred36_cs_fragment)))
				{
					alt272 = 1;
				}
				else if ((true))
				{
					alt272 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 272, 27, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 272, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(272); }
			switch (alt272)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1007:2: ( local_variable_declaration )=> local_variable_declaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1007, 34);
				PushFollow(Follow._local_variable_declaration_in_resource_acquisition7417);
				local_variable_declaration1064=local_variable_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, local_variable_declaration1064.Tree, local_variable_declaration1064, "local_variable_declaration1064", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1008:4: expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1008, 4);
				PushFollow(Follow._expression_in_resource_acquisition7422);
				expression1065=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression1065.Tree, expression1065, "expression1065", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("resource_acquisition", 296);
			LeaveRule("resource_acquisition", 296);
			LeaveRule_resource_acquisition();
			if (state.backtracking > 0) { Memoize(input, 296, resource_acquisition_StartIndex); }

		}
		DebugLocation(1008, 14);
		} finally { DebugExitRule(GrammarFileName, "resource_acquisition"); }
		return retval;

	}
	// $ANTLR end "resource_acquisition"

	partial void EnterRule_yield_statement();
	partial void LeaveRule_yield_statement();
	// $ANTLR start "yield_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1009:1: yield_statement : 'yield' ( 'return' expression ';' | 'break' ';' ) ;
	[GrammarRule("yield_statement")]
	private Antlr3AstNode yield_statement()
	{
		EnterRule_yield_statement();
		EnterRule("yield_statement", 297);
		var retval = new Antlr3AstNode("yield_statement");
		
		retval.Start = (IToken)input.LT(1);
		int yield_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1066 = default(IToken);
		IToken string_literal1067 = default(IToken);
		IToken char_literal1069 = default(IToken);
		IToken string_literal1070 = default(IToken);
		IToken char_literal1071 = default(IToken);
		Antlr3AstNode expression1068 = default(Antlr3AstNode);

		object string_literal1066_tree = default(object);
		object string_literal1067_tree = default(object);
		object char_literal1069_tree = default(object);
		object string_literal1070_tree = default(object);
		object char_literal1071_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "yield_statement");
		DebugLocation(1009, 28);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 297)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1009:16: ( 'yield' ( 'return' expression ';' | 'break' ';' ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1010:2: 'yield' ( 'return' expression ';' | 'break' ';' )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1010, 2);
			string_literal1066=(IToken)Match(input,198,Follow._198_in_yield_statement7430); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1066_tree = (object)adaptor.Create(string_literal1066, "string_literal1066", retval);
			adaptor.AddChild(root_0, string_literal1066_tree);
			}
			DebugLocation(1010, 12);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1010:12: ( 'return' expression ';' | 'break' ';' )
			int alt273=2;
			try { DebugEnterSubRule(273);
			try { DebugEnterDecision(273, false);
			int LA273_1 = input.LA(1);

			if ((LA273_1==170))
			{
				alt273 = 1;
			}
			else if ((LA273_1==106))
			{
				alt273 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 273, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(273); }
			switch (alt273)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1010:13: 'return' expression ';'
				{
				DebugLocation(1010, 13);
				string_literal1067=(IToken)Match(input,170,Follow._170_in_yield_statement7435); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal1067_tree = (object)adaptor.Create(string_literal1067, "string_literal1067", retval);
				adaptor.AddChild(root_0, string_literal1067_tree);
				}
				DebugLocation(1010, 24);
				PushFollow(Follow._expression_in_yield_statement7439);
				expression1068=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression1068.Tree, expression1068, "expression1068", retval);
				DebugLocation(1010, 37);
				char_literal1069=(IToken)Match(input,SEMI,Follow._SEMI_in_yield_statement7443); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal1069_tree = (object)adaptor.Create(char_literal1069, "char_literal1069", retval);
				adaptor.AddChild(root_0, char_literal1069_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1011:14: 'break' ';'
				{
				DebugLocation(1011, 14);
				string_literal1070=(IToken)Match(input,106,Follow._106_in_yield_statement7458); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal1070_tree = (object)adaptor.Create(string_literal1070, "string_literal1070", retval);
				adaptor.AddChild(root_0, string_literal1070_tree);
				}
				DebugLocation(1011, 24);
				char_literal1071=(IToken)Match(input,SEMI,Follow._SEMI_in_yield_statement7462); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal1071_tree = (object)adaptor.Create(char_literal1071, "char_literal1071", retval);
				adaptor.AddChild(root_0, char_literal1071_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(273); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("yield_statement", 297);
			LeaveRule("yield_statement", 297);
			LeaveRule_yield_statement();
			if (state.backtracking > 0) { Memoize(input, 297, yield_statement_StartIndex); }

		}
		DebugLocation(1011, 28);
		} finally { DebugExitRule(GrammarFileName, "yield_statement"); }
		return retval;

	}
	// $ANTLR end "yield_statement"

	partial void EnterRule_predefined_type();
	partial void LeaveRule_predefined_type();
	// $ANTLR start "predefined_type"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1017:1: predefined_type : ( 'bool' | 'byte' | 'char' | 'decimal' | 'double' | 'float' | 'int' | 'long' | 'object' | 'sbyte' | 'short' | 'string' | 'uint' | 'ulong' | 'ushort' );
	[GrammarRule("predefined_type")]
	private Antlr3AstNode predefined_type()
	{
		EnterRule_predefined_type();
		EnterRule("predefined_type", 298);
		var retval = new Antlr3AstNode("predefined_type");
		
		retval.Start = (IToken)input.LT(1);
		int predefined_type_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set1072 = default(IToken);

		object set1072_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "predefined_type");
		DebugLocation(1017, 56);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 298)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1017:16: ( 'bool' | 'byte' | 'char' | 'decimal' | 'double' | 'float' | 'int' | 'long' | 'object' | 'sbyte' | 'short' | 'string' | 'uint' | 'ulong' | 'ushort' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1017, 16);

			set1072=(IToken)input.LT(1);
			if (input.LA(1)==105||input.LA(1)==108||input.LA(1)==111||input.LA(1)==116||input.LA(1)==121||input.LA(1)==131||input.LA(1)==140||input.LA(1)==148||input.LA(1)==153||input.LA(1)==171||input.LA(1)==175||input.LA(1)==179||(input.LA(1)>=187 && input.LA(1)<=188)||input.LA(1)==191)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set1072, "set1072", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("predefined_type", 298);
			LeaveRule("predefined_type", 298);
			LeaveRule_predefined_type();
			if (state.backtracking > 0) { Memoize(input, 298, predefined_type_StartIndex); }

		}
		DebugLocation(1019, 56);
		} finally { DebugExitRule(GrammarFileName, "predefined_type"); }
		return retval;

	}
	// $ANTLR end "predefined_type"

	partial void EnterRule_identifier();
	partial void LeaveRule_identifier();
	// $ANTLR start "identifier"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1021:1: identifier : ( IDENTIFIER | 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'set' | 'var' | '__arglist' | 'dynamic' );
	[GrammarRule("identifier")]
	private Antlr3AstNode identifier()
	{
		EnterRule_identifier();
		EnterRule("identifier", 299);
		var retval = new Antlr3AstNode("identifier");
		
		retval.Start = (IToken)input.LT(1);
		int identifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set1073 = default(IToken);

		object set1073_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "identifier");
		DebugLocation(1021, 206);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 299)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1021:11: ( IDENTIFIER | 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'set' | 'var' | '__arglist' | 'dynamic' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1021, 11);

			set1073=(IToken)input.LT(1);
			if (input.LA(1)==IDENTIFIER||input.LA(1)==95||(input.LA(1)>=97 && input.LA(1)<=98)||(input.LA(1)>=100 && input.LA(1)<=101)||input.LA(1)==107||input.LA(1)==119||input.LA(1)==122||input.LA(1)==124||input.LA(1)==128||input.LA(1)==134||input.LA(1)==137||input.LA(1)==143||(input.LA(1)>=145 && input.LA(1)<=146)||(input.LA(1)>=149 && input.LA(1)<=150)||input.LA(1)==154||input.LA(1)==156||input.LA(1)==159||input.LA(1)==162||input.LA(1)==164||input.LA(1)==169||(input.LA(1)>=173 && input.LA(1)<=174)||input.LA(1)==185||input.LA(1)==192||input.LA(1)==196||input.LA(1)==198)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set1073, "set1073", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("identifier", 299);
			LeaveRule("identifier", 299);
			LeaveRule_identifier();
			if (state.backtracking > 0) { Memoize(input, 299, identifier_StartIndex); }

		}
		DebugLocation(1023, 206);
		} finally { DebugExitRule(GrammarFileName, "identifier"); }
		return retval;

	}
	// $ANTLR end "identifier"

	partial void EnterRule_keyword();
	partial void LeaveRule_keyword();
	// $ANTLR start "keyword"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1025:1: keyword : ( 'abstract' | 'as' | 'base' | 'bool' | 'break' | 'byte' | 'case' | 'catch' | 'char' | 'checked' | 'class' | 'const' | 'continue' | 'decimal' | 'default' | 'delegate' | 'do' | 'double' | 'else' | 'enum' | 'event' | 'explicit' | 'extern' | 'false' | 'finally' | 'fixed' | 'float' | 'for' | 'foreach' | 'goto' | 'if' | 'implicit' | 'in' | 'int' | 'interface' | 'internal' | 'is' | 'lock' | 'long' | 'namespace' | 'new' | 'null' | 'object' | 'operator' | 'out' | 'override' | 'params' | 'private' | 'protected' | 'public' | 'readonly' | 'ref' | 'return' | 'sbyte' | 'sealed' | 'short' | 'sizeof' | 'stackalloc' | 'static' | 'string' | 'struct' | 'switch' | 'this' | 'throw' | 'true' | 'try' | 'typeof' | 'uint' | 'ulong' | 'unchecked' | 'unsafe' | 'ushort' | 'using' | 'virtual' | 'void' | 'volatile' );
	[GrammarRule("keyword")]
	private Antlr3AstNode keyword()
	{
		EnterRule_keyword();
		EnterRule("keyword", 300);
		var retval = new Antlr3AstNode("keyword");
		
		retval.Start = (IToken)input.LT(1);
		int keyword_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set1074 = default(IToken);

		object set1074_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "keyword");
		DebugLocation(1025, 801);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 300)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1025:8: ( 'abstract' | 'as' | 'base' | 'bool' | 'break' | 'byte' | 'case' | 'catch' | 'char' | 'checked' | 'class' | 'const' | 'continue' | 'decimal' | 'default' | 'delegate' | 'do' | 'double' | 'else' | 'enum' | 'event' | 'explicit' | 'extern' | 'false' | 'finally' | 'fixed' | 'float' | 'for' | 'foreach' | 'goto' | 'if' | 'implicit' | 'in' | 'int' | 'interface' | 'internal' | 'is' | 'lock' | 'long' | 'namespace' | 'new' | 'null' | 'object' | 'operator' | 'out' | 'override' | 'params' | 'private' | 'protected' | 'public' | 'readonly' | 'ref' | 'return' | 'sbyte' | 'sealed' | 'short' | 'sizeof' | 'stackalloc' | 'static' | 'string' | 'struct' | 'switch' | 'this' | 'throw' | 'true' | 'try' | 'typeof' | 'uint' | 'ulong' | 'unchecked' | 'unsafe' | 'ushort' | 'using' | 'virtual' | 'void' | 'volatile' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1025, 8);

			set1074=(IToken)input.LT(1);
			if (input.LA(1)==ENUM||input.LA(1)==FALSE||input.LA(1)==IF||input.LA(1)==NULL||input.LA(1)==TRUE||input.LA(1)==USING||input.LA(1)==96||input.LA(1)==99||(input.LA(1)>=104 && input.LA(1)<=106)||(input.LA(1)>=108 && input.LA(1)<=118)||(input.LA(1)>=120 && input.LA(1)<=121)||input.LA(1)==123||(input.LA(1)>=125 && input.LA(1)<=127)||(input.LA(1)>=129 && input.LA(1)<=133)||input.LA(1)==136||(input.LA(1)>=138 && input.LA(1)<=142)||input.LA(1)==144||(input.LA(1)>=147 && input.LA(1)<=148)||(input.LA(1)>=151 && input.LA(1)<=153)||input.LA(1)==155||(input.LA(1)>=157 && input.LA(1)<=158)||input.LA(1)==160||input.LA(1)==163||(input.LA(1)>=165 && input.LA(1)<=168)||(input.LA(1)>=170 && input.LA(1)<=172)||(input.LA(1)>=175 && input.LA(1)<=184)||(input.LA(1)>=186 && input.LA(1)<=191)||(input.LA(1)>=193 && input.LA(1)<=195))
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set1074, "set1074", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("keyword", 300);
			LeaveRule("keyword", 300);
			LeaveRule_keyword();
			if (state.backtracking > 0) { Memoize(input, 300, keyword_StartIndex); }

		}
		DebugLocation(1026, 801);
		} finally { DebugExitRule(GrammarFileName, "keyword"); }
		return retval;

	}
	// $ANTLR end "keyword"

	partial void EnterRule_also_keyword();
	partial void LeaveRule_also_keyword();
	// $ANTLR start "also_keyword"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1028:1: also_keyword : ( 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'event' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'set' | 'var' | '__arglist' | 'dynamic' );
	[GrammarRule("also_keyword")]
	private Antlr3AstNode also_keyword()
	{
		EnterRule_also_keyword();
		EnterRule("also_keyword", 301);
		var retval = new Antlr3AstNode("also_keyword");
		
		retval.Start = (IToken)input.LT(1);
		int also_keyword_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set1075 = default(IToken);

		object set1075_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "also_keyword");
		DebugLocation(1028, 94);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 301)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1028:13: ( 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'event' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'set' | 'var' | '__arglist' | 'dynamic' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1028, 13);

			set1075=(IToken)input.LT(1);
			if (input.LA(1)==95||(input.LA(1)>=97 && input.LA(1)<=98)||(input.LA(1)>=100 && input.LA(1)<=101)||input.LA(1)==107||input.LA(1)==119||input.LA(1)==122||(input.LA(1)>=124 && input.LA(1)<=125)||input.LA(1)==128||input.LA(1)==134||input.LA(1)==137||input.LA(1)==143||(input.LA(1)>=145 && input.LA(1)<=146)||(input.LA(1)>=149 && input.LA(1)<=150)||input.LA(1)==154||input.LA(1)==156||input.LA(1)==159||input.LA(1)==162||input.LA(1)==164||input.LA(1)==169||(input.LA(1)>=173 && input.LA(1)<=174)||input.LA(1)==185||input.LA(1)==192||input.LA(1)==196||input.LA(1)==198)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set1075, "set1075", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("also_keyword", 301);
			LeaveRule("also_keyword", 301);
			LeaveRule_also_keyword();
			if (state.backtracking > 0) { Memoize(input, 301, also_keyword_StartIndex); }

		}
		DebugLocation(1031, 94);
		} finally { DebugExitRule(GrammarFileName, "also_keyword"); }
		return retval;

	}
	// $ANTLR end "also_keyword"

	partial void EnterRule_literal();
	partial void LeaveRule_literal();
	// $ANTLR start "literal"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1033:1: literal : ( Real_literal | NUMBER | Hex_number | Character_literal | STRINGLITERAL | Verbatim_string_literal | TRUE | FALSE | NULL );
	[GrammarRule("literal")]
	private Antlr3AstNode literal()
	{
		EnterRule_literal();
		EnterRule("literal", 302);
		var retval = new Antlr3AstNode("literal");
		
		retval.Start = (IToken)input.LT(1);
		int literal_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set1076 = default(IToken);

		object set1076_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "literal");
		DebugLocation(1033, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 302)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1033:8: ( Real_literal | NUMBER | Hex_number | Character_literal | STRINGLITERAL | Verbatim_string_literal | TRUE | FALSE | NULL )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1033, 8);

			set1076=(IToken)input.LT(1);
			if (input.LA(1)==Character_literal||input.LA(1)==FALSE||input.LA(1)==Hex_number||(input.LA(1)>=NULL && input.LA(1)<=NUMBER)||input.LA(1)==Real_literal||input.LA(1)==STRINGLITERAL||input.LA(1)==TRUE||input.LA(1)==Verbatim_string_literal)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set1076, "set1076", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("literal", 302);
			LeaveRule("literal", 302);
			LeaveRule_literal();
			if (state.backtracking > 0) { Memoize(input, 302, literal_StartIndex); }

		}
		DebugLocation(1043, 1);
		} finally { DebugExitRule(GrammarFileName, "literal"); }
		return retval;

	}
	// $ANTLR end "literal"

	partial void EnterRule_assignment_list();
	partial void LeaveRule_assignment_list();
	// $ANTLR start "assignment_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1323:1: assignment_list : ( assignment ';' )+ ;
	[GrammarRule("assignment_list")]
	private Antlr3AstNode assignment_list()
	{
		EnterRule_assignment_list();
		EnterRule("assignment_list", 303);
		var retval = new Antlr3AstNode("assignment_list");
		
		retval.Start = (IToken)input.LT(1);
		int assignment_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal1078 = default(IToken);
		Antlr3AstNode assignment1077 = default(Antlr3AstNode);

		object char_literal1078_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "assignment_list");
		DebugLocation(1323, 19);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 303)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1323:16: ( ( assignment ';' )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1324:2: ( assignment ';' )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1324, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1324:2: ( assignment ';' )+
			int cnt274=0;
			try { DebugEnterSubRule(274);
			while (true)
			{
				int alt274=2;
				try { DebugEnterDecision(274, false);
				int LA274_1 = input.LA(1);

				if ((LA274_1==Character_literal||LA274_1==FALSE||(LA274_1>=Hex_number && LA274_1<=IDENTIFIER)||(LA274_1>=MINUS && LA274_1<=NUMBER)||LA274_1==Real_literal||LA274_1==STRINGLITERAL||LA274_1==TRUE||LA274_1==Verbatim_string_literal||LA274_1==61||LA274_1==66||(LA274_1>=68 && LA274_1<=69)||(LA274_1>=71 && LA274_1<=72)||LA274_1==75||LA274_1==95||(LA274_1>=97 && LA274_1<=98)||(LA274_1>=100 && LA274_1<=105)||(LA274_1>=107 && LA274_1<=108)||(LA274_1>=111 && LA274_1<=112)||(LA274_1>=116 && LA274_1<=119)||(LA274_1>=121 && LA274_1<=122)||LA274_1==124||LA274_1==128||LA274_1==131||LA274_1==134||LA274_1==137||LA274_1==140||LA274_1==143||(LA274_1>=145 && LA274_1<=146)||(LA274_1>=148 && LA274_1<=150)||(LA274_1>=152 && LA274_1<=154)||LA274_1==156||LA274_1==159||LA274_1==162||LA274_1==164||LA274_1==169||LA274_1==171||(LA274_1>=173 && LA274_1<=176)||LA274_1==179||LA274_1==182||(LA274_1>=185 && LA274_1<=189)||(LA274_1>=191 && LA274_1<=192)||LA274_1==196||LA274_1==198||LA274_1==204))
				{
					alt274 = 1;
				}


				} finally { DebugExitDecision(274); }
				switch (alt274)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1324:3: assignment ';'
					{
					DebugLocation(1324, 3);
					PushFollow(Follow._assignment_in_assignment_list10160);
					assignment1077=assignment();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, assignment1077.Tree, assignment1077, "assignment1077", retval);
					DebugLocation(1324, 14);
					char_literal1078=(IToken)Match(input,SEMI,Follow._SEMI_in_assignment_list10162); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal1078_tree = (object)adaptor.Create(char_literal1078, "char_literal1078", retval);
					adaptor.AddChild(root_0, char_literal1078_tree);
					}

					}
					break;

				default:
					if (cnt274 >= 1)
						goto loop274;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee274 = new EarlyExitException( 274, input );
					DebugRecognitionException(eee274);
					throw eee274;
				}
				cnt274++;
			}
			loop274:
				;

			} finally { DebugExitSubRule(274); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("assignment_list", 303);
			LeaveRule("assignment_list", 303);
			LeaveRule_assignment_list();
			if (state.backtracking > 0) { Memoize(input, 303, assignment_list_StartIndex); }

		}
		DebugLocation(1324, 19);
		} finally { DebugExitRule(GrammarFileName, "assignment_list"); }
		return retval;

	}
	// $ANTLR end "assignment_list"

	partial void EnterRule_field_declarations();
	partial void LeaveRule_field_declarations();
	// $ANTLR start "field_declarations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1325:1: field_declarations : ( ( attributes )? ( modifiers )? type field_declaration )+ ;
	[GrammarRule("field_declarations")]
	private Antlr3AstNode field_declarations()
	{
		EnterRule_field_declarations();
		EnterRule("field_declarations", 304);
		var retval = new Antlr3AstNode("field_declarations");
		
		retval.Start = (IToken)input.LT(1);
		int field_declarations_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode attributes1079 = default(Antlr3AstNode);
		Antlr3AstNode modifiers1080 = default(Antlr3AstNode);
		Antlr3AstNode type1081 = default(Antlr3AstNode);
		Antlr3AstNode field_declaration1082 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "field_declarations");
		DebugLocation(1325, 56);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 304)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1325:19: ( ( ( attributes )? ( modifiers )? type field_declaration )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1326:2: ( ( attributes )? ( modifiers )? type field_declaration )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1326, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1326:2: ( ( attributes )? ( modifiers )? type field_declaration )+
			int cnt277=0;
			try { DebugEnterSubRule(277);
			while (true)
			{
				int alt277=2;
				try { DebugEnterDecision(277, false);
				int LA277_1 = input.LA(1);

				if ((LA277_1==IDENTIFIER||LA277_1==91||(LA277_1>=95 && LA277_1<=98)||(LA277_1>=100 && LA277_1<=102)||LA277_1==105||(LA277_1>=107 && LA277_1<=108)||LA277_1==111||LA277_1==116||LA277_1==119||(LA277_1>=121 && LA277_1<=122)||LA277_1==124||(LA277_1>=127 && LA277_1<=128)||LA277_1==131||LA277_1==134||LA277_1==137||LA277_1==140||(LA277_1>=142 && LA277_1<=143)||(LA277_1>=145 && LA277_1<=146)||(LA277_1>=148 && LA277_1<=150)||(LA277_1>=152 && LA277_1<=154)||LA277_1==156||(LA277_1>=158 && LA277_1<=159)||(LA277_1>=162 && LA277_1<=167)||LA277_1==169||(LA277_1>=171 && LA277_1<=175)||(LA277_1>=178 && LA277_1<=179)||LA277_1==185||(LA277_1>=187 && LA277_1<=188)||(LA277_1>=190 && LA277_1<=196)||LA277_1==198))
				{
					alt277 = 1;
				}


				} finally { DebugExitDecision(277); }
				switch (alt277)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1326:3: ( attributes )? ( modifiers )? type field_declaration
					{
					DebugLocation(1326, 3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1326:3: ( attributes )?
					int alt275=2;
					try { DebugEnterSubRule(275);
					try { DebugEnterDecision(275, false);
					int LA275_1 = input.LA(1);

					if ((LA275_1==91))
					{
						alt275 = 1;
					}
					} finally { DebugExitDecision(275); }
					switch (alt275)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1326:3: attributes
						{
						DebugLocation(1326, 3);
						PushFollow(Follow._attributes_in_field_declarations10173);
						attributes1079=attributes();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, attributes1079.Tree, attributes1079, "attributes1079", retval);

						}
						break;

					}
					} finally { DebugExitSubRule(275); }

					DebugLocation(1326, 17);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1326:17: ( modifiers )?
					int alt276=2;
					try { DebugEnterSubRule(276);
					try { DebugEnterDecision(276, false);
					int LA276_1 = input.LA(1);

					if ((LA276_1==96||LA276_1==102||LA276_1==127||LA276_1==142||LA276_1==152||LA276_1==158||LA276_1==163||(LA276_1>=165 && LA276_1<=167)||LA276_1==172||LA276_1==178||LA276_1==190||LA276_1==193||LA276_1==195))
					{
						alt276 = 1;
					}
					} finally { DebugExitDecision(276); }
					switch (alt276)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1326:17: modifiers
						{
						DebugLocation(1326, 17);
						PushFollow(Follow._modifiers_in_field_declarations10178);
						modifiers1080=modifiers();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers1080.Tree, modifiers1080, "modifiers1080", retval);

						}
						break;

					}
					} finally { DebugExitSubRule(276); }

					DebugLocation(1326, 30);
					PushFollow(Follow._type_in_field_declarations10183);
					type1081=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type1081.Tree, type1081, "type1081", retval);
					DebugLocation(1326, 37);
					PushFollow(Follow._field_declaration_in_field_declarations10187);
					field_declaration1082=field_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, field_declaration1082.Tree, field_declaration1082, "field_declaration1082", retval);

					}
					break;

				default:
					if (cnt277 >= 1)
						goto loop277;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee277 = new EarlyExitException( 277, input );
					DebugRecognitionException(eee277);
					throw eee277;
				}
				cnt277++;
			}
			loop277:
				;

			} finally { DebugExitSubRule(277); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("field_declarations", 304);
			LeaveRule("field_declarations", 304);
			LeaveRule_field_declarations();
			if (state.backtracking > 0) { Memoize(input, 304, field_declarations_StartIndex); }

		}
		DebugLocation(1326, 56);
		} finally { DebugExitRule(GrammarFileName, "field_declarations"); }
		return retval;

	}
	// $ANTLR end "field_declarations"

	partial void EnterRule_property_declaration_list();
	partial void LeaveRule_property_declaration_list();
	// $ANTLR start "property_declaration_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1327:1: property_declaration_list : ( ( attributes )? ( modifiers )? type property_declaration )+ ;
	[GrammarRule("property_declaration_list")]
	private Antlr3AstNode property_declaration_list()
	{
		EnterRule_property_declaration_list();
		EnterRule("property_declaration_list", 305);
		var retval = new Antlr3AstNode("property_declaration_list");
		
		retval.Start = (IToken)input.LT(1);
		int property_declaration_list_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode attributes1083 = default(Antlr3AstNode);
		Antlr3AstNode modifiers1084 = default(Antlr3AstNode);
		Antlr3AstNode type1085 = default(Antlr3AstNode);
		Antlr3AstNode property_declaration1086 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "property_declaration_list");
		DebugLocation(1327, 59);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 305)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1327:26: ( ( ( attributes )? ( modifiers )? type property_declaration )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1328:2: ( ( attributes )? ( modifiers )? type property_declaration )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1328, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1328:2: ( ( attributes )? ( modifiers )? type property_declaration )+
			int cnt280=0;
			try { DebugEnterSubRule(280);
			while (true)
			{
				int alt280=2;
				try { DebugEnterDecision(280, false);
				int LA280_1 = input.LA(1);

				if ((LA280_1==IDENTIFIER||LA280_1==91||(LA280_1>=95 && LA280_1<=98)||(LA280_1>=100 && LA280_1<=102)||LA280_1==105||(LA280_1>=107 && LA280_1<=108)||LA280_1==111||LA280_1==116||LA280_1==119||(LA280_1>=121 && LA280_1<=122)||LA280_1==124||(LA280_1>=127 && LA280_1<=128)||LA280_1==131||LA280_1==134||LA280_1==137||LA280_1==140||(LA280_1>=142 && LA280_1<=143)||(LA280_1>=145 && LA280_1<=146)||(LA280_1>=148 && LA280_1<=150)||(LA280_1>=152 && LA280_1<=154)||LA280_1==156||(LA280_1>=158 && LA280_1<=159)||(LA280_1>=162 && LA280_1<=167)||LA280_1==169||(LA280_1>=171 && LA280_1<=175)||(LA280_1>=178 && LA280_1<=179)||LA280_1==185||(LA280_1>=187 && LA280_1<=188)||(LA280_1>=190 && LA280_1<=196)||LA280_1==198))
				{
					alt280 = 1;
				}


				} finally { DebugExitDecision(280); }
				switch (alt280)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1328:3: ( attributes )? ( modifiers )? type property_declaration
					{
					DebugLocation(1328, 3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1328:3: ( attributes )?
					int alt278=2;
					try { DebugEnterSubRule(278);
					try { DebugEnterDecision(278, false);
					int LA278_1 = input.LA(1);

					if ((LA278_1==91))
					{
						alt278 = 1;
					}
					} finally { DebugExitDecision(278); }
					switch (alt278)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1328:3: attributes
						{
						DebugLocation(1328, 3);
						PushFollow(Follow._attributes_in_property_declaration_list10198);
						attributes1083=attributes();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, attributes1083.Tree, attributes1083, "attributes1083", retval);

						}
						break;

					}
					} finally { DebugExitSubRule(278); }

					DebugLocation(1328, 17);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1328:17: ( modifiers )?
					int alt279=2;
					try { DebugEnterSubRule(279);
					try { DebugEnterDecision(279, false);
					int LA279_1 = input.LA(1);

					if ((LA279_1==96||LA279_1==102||LA279_1==127||LA279_1==142||LA279_1==152||LA279_1==158||LA279_1==163||(LA279_1>=165 && LA279_1<=167)||LA279_1==172||LA279_1==178||LA279_1==190||LA279_1==193||LA279_1==195))
					{
						alt279 = 1;
					}
					} finally { DebugExitDecision(279); }
					switch (alt279)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1328:17: modifiers
						{
						DebugLocation(1328, 17);
						PushFollow(Follow._modifiers_in_property_declaration_list10203);
						modifiers1084=modifiers();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers1084.Tree, modifiers1084, "modifiers1084", retval);

						}
						break;

					}
					} finally { DebugExitSubRule(279); }

					DebugLocation(1328, 30);
					PushFollow(Follow._type_in_property_declaration_list10208);
					type1085=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type1085.Tree, type1085, "type1085", retval);
					DebugLocation(1328, 37);
					PushFollow(Follow._property_declaration_in_property_declaration_list10212);
					property_declaration1086=property_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, property_declaration1086.Tree, property_declaration1086, "property_declaration1086", retval);

					}
					break;

				default:
					if (cnt280 >= 1)
						goto loop280;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee280 = new EarlyExitException( 280, input );
					DebugRecognitionException(eee280);
					throw eee280;
				}
				cnt280++;
			}
			loop280:
				;

			} finally { DebugExitSubRule(280); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("property_declaration_list", 305);
			LeaveRule("property_declaration_list", 305);
			LeaveRule_property_declaration_list();
			if (state.backtracking > 0) { Memoize(input, 305, property_declaration_list_StartIndex); }

		}
		DebugLocation(1328, 59);
		} finally { DebugExitRule(GrammarFileName, "property_declaration_list"); }
		return retval;

	}
	// $ANTLR end "property_declaration_list"

	partial void EnterRule_constant_declarations();
	partial void LeaveRule_constant_declarations();
	// $ANTLR start "constant_declarations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1329:1: constant_declarations : ( constant_declaration )+ ;
	[GrammarRule("constant_declarations")]
	private Antlr3AstNode constant_declarations()
	{
		EnterRule_constant_declarations();
		EnterRule("constant_declarations", 306);
		var retval = new Antlr3AstNode("constant_declarations");
		
		retval.Start = (IToken)input.LT(1);
		int constant_declarations_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode constant_declaration1087 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "constant_declarations");
		DebugLocation(1329, 22);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 306)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1329:22: ( ( constant_declaration )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1330:2: ( constant_declaration )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1330, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1330:2: ( constant_declaration )+
			int cnt281=0;
			try { DebugEnterSubRule(281);
			while (true)
			{
				int alt281=2;
				try { DebugEnterDecision(281, false);
				int LA281_1 = input.LA(1);

				if ((LA281_1==114))
				{
					alt281 = 1;
				}


				} finally { DebugExitDecision(281); }
				switch (alt281)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1330:2: constant_declaration
					{
					DebugLocation(1330, 2);
					PushFollow(Follow._constant_declaration_in_constant_declarations10222);
					constant_declaration1087=constant_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, constant_declaration1087.Tree, constant_declaration1087, "constant_declaration1087", retval);

					}
					break;

				default:
					if (cnt281 >= 1)
						goto loop281;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee281 = new EarlyExitException( 281, input );
					DebugRecognitionException(eee281);
					throw eee281;
				}
				cnt281++;
			}
			loop281:
				;

			} finally { DebugExitSubRule(281); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constant_declarations", 306);
			LeaveRule("constant_declarations", 306);
			LeaveRule_constant_declarations();
			if (state.backtracking > 0) { Memoize(input, 306, constant_declarations_StartIndex); }

		}
		DebugLocation(1330, 22);
		} finally { DebugExitRule(GrammarFileName, "constant_declarations"); }
		return retval;

	}
	// $ANTLR end "constant_declarations"

	partial void EnterRule_literals();
	partial void LeaveRule_literals();
	// $ANTLR start "literals"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1331:1: literals : ( literal )+ ;
	[GrammarRule("literals")]
	private Antlr3AstNode literals()
	{
		EnterRule_literals();
		EnterRule("literals", 307);
		var retval = new Antlr3AstNode("literals");
		
		retval.Start = (IToken)input.LT(1);
		int literals_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode literal1088 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "literals");
		DebugLocation(1331, 10);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 307)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1331:9: ( ( literal )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1332:2: ( literal )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1332, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1332:2: ( literal )+
			int cnt282=0;
			try { DebugEnterSubRule(282);
			while (true)
			{
				int alt282=2;
				try { DebugEnterDecision(282, false);
				int LA282_1 = input.LA(1);

				if ((LA282_1==Character_literal||LA282_1==FALSE||LA282_1==Hex_number||(LA282_1>=NULL && LA282_1<=NUMBER)||LA282_1==Real_literal||LA282_1==STRINGLITERAL||LA282_1==TRUE||LA282_1==Verbatim_string_literal))
				{
					alt282 = 1;
				}


				} finally { DebugExitDecision(282); }
				switch (alt282)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1332:2: literal
					{
					DebugLocation(1332, 2);
					PushFollow(Follow._literal_in_literals10230);
					literal1088=literal();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, literal1088.Tree, literal1088, "literal1088", retval);

					}
					break;

				default:
					if (cnt282 >= 1)
						goto loop282;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee282 = new EarlyExitException( 282, input );
					DebugRecognitionException(eee282);
					throw eee282;
				}
				cnt282++;
			}
			loop282:
				;

			} finally { DebugExitSubRule(282); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("literals", 307);
			LeaveRule("literals", 307);
			LeaveRule_literals();
			if (state.backtracking > 0) { Memoize(input, 307, literals_StartIndex); }

		}
		DebugLocation(1332, 10);
		} finally { DebugExitRule(GrammarFileName, "literals"); }
		return retval;

	}
	// $ANTLR end "literals"

	partial void EnterRule_delegate_declaration_list();
	partial void LeaveRule_delegate_declaration_list();
	// $ANTLR start "delegate_declaration_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1333:1: delegate_declaration_list : ( ( attributes )? ( modifiers )? delegate_declaration )+ ;
	[GrammarRule("delegate_declaration_list")]
	private Antlr3AstNode delegate_declaration_list()
	{
		EnterRule_delegate_declaration_list();
		EnterRule("delegate_declaration_list", 308);
		var retval = new Antlr3AstNode("delegate_declaration_list");
		
		retval.Start = (IToken)input.LT(1);
		int delegate_declaration_list_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode attributes1089 = default(Antlr3AstNode);
		Antlr3AstNode modifiers1090 = default(Antlr3AstNode);
		Antlr3AstNode delegate_declaration1091 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "delegate_declaration_list");
		DebugLocation(1333, 52);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 308)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1333:26: ( ( ( attributes )? ( modifiers )? delegate_declaration )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1334:2: ( ( attributes )? ( modifiers )? delegate_declaration )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1334, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1334:2: ( ( attributes )? ( modifiers )? delegate_declaration )+
			int cnt285=0;
			try { DebugEnterSubRule(285);
			while (true)
			{
				int alt285=2;
				try { DebugEnterDecision(285, false);
				int LA285_1 = input.LA(1);

				if ((LA285_1==91||LA285_1==96||LA285_1==102||LA285_1==118||LA285_1==127||LA285_1==142||LA285_1==152||LA285_1==158||LA285_1==163||(LA285_1>=165 && LA285_1<=167)||LA285_1==172||LA285_1==178||LA285_1==190||LA285_1==193||LA285_1==195))
				{
					alt285 = 1;
				}


				} finally { DebugExitDecision(285); }
				switch (alt285)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1334:3: ( attributes )? ( modifiers )? delegate_declaration
					{
					DebugLocation(1334, 3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1334:3: ( attributes )?
					int alt283=2;
					try { DebugEnterSubRule(283);
					try { DebugEnterDecision(283, false);
					int LA283_1 = input.LA(1);

					if ((LA283_1==91))
					{
						alt283 = 1;
					}
					} finally { DebugExitDecision(283); }
					switch (alt283)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1334:3: attributes
						{
						DebugLocation(1334, 3);
						PushFollow(Follow._attributes_in_delegate_declaration_list10240);
						attributes1089=attributes();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, attributes1089.Tree, attributes1089, "attributes1089", retval);

						}
						break;

					}
					} finally { DebugExitSubRule(283); }

					DebugLocation(1334, 17);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1334:17: ( modifiers )?
					int alt284=2;
					try { DebugEnterSubRule(284);
					try { DebugEnterDecision(284, false);
					int LA284_1 = input.LA(1);

					if ((LA284_1==96||LA284_1==102||LA284_1==127||LA284_1==142||LA284_1==152||LA284_1==158||LA284_1==163||(LA284_1>=165 && LA284_1<=167)||LA284_1==172||LA284_1==178||LA284_1==190||LA284_1==193||LA284_1==195))
					{
						alt284 = 1;
					}
					} finally { DebugExitDecision(284); }
					switch (alt284)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1334:17: modifiers
						{
						DebugLocation(1334, 17);
						PushFollow(Follow._modifiers_in_delegate_declaration_list10245);
						modifiers1090=modifiers();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers1090.Tree, modifiers1090, "modifiers1090", retval);

						}
						break;

					}
					} finally { DebugExitSubRule(284); }

					DebugLocation(1334, 30);
					PushFollow(Follow._delegate_declaration_in_delegate_declaration_list10250);
					delegate_declaration1091=delegate_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, delegate_declaration1091.Tree, delegate_declaration1091, "delegate_declaration1091", retval);

					}
					break;

				default:
					if (cnt285 >= 1)
						goto loop285;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee285 = new EarlyExitException( 285, input );
					DebugRecognitionException(eee285);
					throw eee285;
				}
				cnt285++;
			}
			loop285:
				;

			} finally { DebugExitSubRule(285); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("delegate_declaration_list", 308);
			LeaveRule("delegate_declaration_list", 308);
			LeaveRule_delegate_declaration_list();
			if (state.backtracking > 0) { Memoize(input, 308, delegate_declaration_list_StartIndex); }

		}
		DebugLocation(1334, 52);
		} finally { DebugExitRule(GrammarFileName, "delegate_declaration_list"); }
		return retval;

	}
	// $ANTLR end "delegate_declaration_list"

	partial void EnterRule_local_variable_declaration_list();
	partial void LeaveRule_local_variable_declaration_list();
	// $ANTLR start "local_variable_declaration_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1335:1: local_variable_declaration_list : ( local_variable_declaration ';' )+ ;
	[GrammarRule("local_variable_declaration_list")]
	private Antlr3AstNode local_variable_declaration_list()
	{
		EnterRule_local_variable_declaration_list();
		EnterRule("local_variable_declaration_list", 309);
		var retval = new Antlr3AstNode("local_variable_declaration_list");
		
		retval.Start = (IToken)input.LT(1);
		int local_variable_declaration_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal1093 = default(IToken);
		Antlr3AstNode local_variable_declaration1092 = default(Antlr3AstNode);

		object char_literal1093_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "local_variable_declaration_list");
		DebugLocation(1335, 35);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 309)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1335:32: ( ( local_variable_declaration ';' )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1336:2: ( local_variable_declaration ';' )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1336, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1336:2: ( local_variable_declaration ';' )+
			int cnt286=0;
			try { DebugEnterSubRule(286);
			while (true)
			{
				int alt286=2;
				try { DebugEnterDecision(286, false);
				int LA286_1 = input.LA(1);

				if ((LA286_1==IDENTIFIER||LA286_1==95||(LA286_1>=97 && LA286_1<=98)||(LA286_1>=100 && LA286_1<=101)||LA286_1==105||(LA286_1>=107 && LA286_1<=108)||LA286_1==111||LA286_1==116||LA286_1==119||(LA286_1>=121 && LA286_1<=122)||LA286_1==124||LA286_1==128||LA286_1==131||LA286_1==134||LA286_1==137||LA286_1==140||LA286_1==143||(LA286_1>=145 && LA286_1<=146)||(LA286_1>=148 && LA286_1<=150)||(LA286_1>=153 && LA286_1<=154)||LA286_1==156||LA286_1==159||LA286_1==162||LA286_1==164||LA286_1==169||LA286_1==171||(LA286_1>=173 && LA286_1<=175)||LA286_1==179||LA286_1==185||(LA286_1>=187 && LA286_1<=188)||(LA286_1>=191 && LA286_1<=192)||LA286_1==194||LA286_1==196||LA286_1==198))
				{
					alt286 = 1;
				}


				} finally { DebugExitDecision(286); }
				switch (alt286)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1336:3: local_variable_declaration ';'
					{
					DebugLocation(1336, 3);
					PushFollow(Follow._local_variable_declaration_in_local_variable_declaration_list10261);
					local_variable_declaration1092=local_variable_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, local_variable_declaration1092.Tree, local_variable_declaration1092, "local_variable_declaration1092", retval);
					DebugLocation(1336, 30);
					char_literal1093=(IToken)Match(input,SEMI,Follow._SEMI_in_local_variable_declaration_list10263); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal1093_tree = (object)adaptor.Create(char_literal1093, "char_literal1093", retval);
					adaptor.AddChild(root_0, char_literal1093_tree);
					}

					}
					break;

				default:
					if (cnt286 >= 1)
						goto loop286;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee286 = new EarlyExitException( 286, input );
					DebugRecognitionException(eee286);
					throw eee286;
				}
				cnt286++;
			}
			loop286:
				;

			} finally { DebugExitSubRule(286); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("local_variable_declaration_list", 309);
			LeaveRule("local_variable_declaration_list", 309);
			LeaveRule_local_variable_declaration_list();
			if (state.backtracking > 0) { Memoize(input, 309, local_variable_declaration_list_StartIndex); }

		}
		DebugLocation(1336, 35);
		} finally { DebugExitRule(GrammarFileName, "local_variable_declaration_list"); }
		return retval;

	}
	// $ANTLR end "local_variable_declaration_list"

	partial void EnterRule_local_variable_initializer_list();
	partial void LeaveRule_local_variable_initializer_list();
	// $ANTLR start "local_variable_initializer_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1337:1: local_variable_initializer_list : ( local_variable_initializer ';' )+ ;
	[GrammarRule("local_variable_initializer_list")]
	private Antlr3AstNode local_variable_initializer_list()
	{
		EnterRule_local_variable_initializer_list();
		EnterRule("local_variable_initializer_list", 310);
		var retval = new Antlr3AstNode("local_variable_initializer_list");
		
		retval.Start = (IToken)input.LT(1);
		int local_variable_initializer_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal1095 = default(IToken);
		Antlr3AstNode local_variable_initializer1094 = default(Antlr3AstNode);

		object char_literal1095_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "local_variable_initializer_list");
		DebugLocation(1337, 35);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 310)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1337:32: ( ( local_variable_initializer ';' )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1338:2: ( local_variable_initializer ';' )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1338, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1338:2: ( local_variable_initializer ';' )+
			int cnt287=0;
			try { DebugEnterSubRule(287);
			while (true)
			{
				int alt287=2;
				try { DebugEnterDecision(287, false);
				int LA287_1 = input.LA(1);

				if ((LA287_1==Character_literal||LA287_1==FALSE||(LA287_1>=Hex_number && LA287_1<=IDENTIFIER)||(LA287_1>=MINUS && LA287_1<=NUMBER)||LA287_1==Real_literal||LA287_1==STRINGLITERAL||LA287_1==TRUE||LA287_1==Verbatim_string_literal||LA287_1==61||LA287_1==66||(LA287_1>=68 && LA287_1<=69)||(LA287_1>=71 && LA287_1<=72)||LA287_1==75||LA287_1==95||(LA287_1>=97 && LA287_1<=98)||(LA287_1>=100 && LA287_1<=105)||(LA287_1>=107 && LA287_1<=108)||(LA287_1>=111 && LA287_1<=112)||(LA287_1>=116 && LA287_1<=119)||(LA287_1>=121 && LA287_1<=122)||LA287_1==124||LA287_1==128||LA287_1==131||LA287_1==134||LA287_1==137||LA287_1==140||LA287_1==143||(LA287_1>=145 && LA287_1<=146)||(LA287_1>=148 && LA287_1<=150)||(LA287_1>=152 && LA287_1<=154)||LA287_1==156||LA287_1==159||LA287_1==162||LA287_1==164||LA287_1==169||LA287_1==171||(LA287_1>=173 && LA287_1<=177)||LA287_1==179||LA287_1==182||(LA287_1>=185 && LA287_1<=189)||(LA287_1>=191 && LA287_1<=192)||LA287_1==196||(LA287_1>=198 && LA287_1<=199)||LA287_1==204))
				{
					alt287 = 1;
				}


				} finally { DebugExitDecision(287); }
				switch (alt287)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1338:3: local_variable_initializer ';'
					{
					DebugLocation(1338, 3);
					PushFollow(Follow._local_variable_initializer_in_local_variable_initializer_list10274);
					local_variable_initializer1094=local_variable_initializer();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, local_variable_initializer1094.Tree, local_variable_initializer1094, "local_variable_initializer1094", retval);
					DebugLocation(1338, 30);
					char_literal1095=(IToken)Match(input,SEMI,Follow._SEMI_in_local_variable_initializer_list10276); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal1095_tree = (object)adaptor.Create(char_literal1095, "char_literal1095", retval);
					adaptor.AddChild(root_0, char_literal1095_tree);
					}

					}
					break;

				default:
					if (cnt287 >= 1)
						goto loop287;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee287 = new EarlyExitException( 287, input );
					DebugRecognitionException(eee287);
					throw eee287;
				}
				cnt287++;
			}
			loop287:
				;

			} finally { DebugExitSubRule(287); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("local_variable_initializer_list", 310);
			LeaveRule("local_variable_initializer_list", 310);
			LeaveRule_local_variable_initializer_list();
			if (state.backtracking > 0) { Memoize(input, 310, local_variable_initializer_list_StartIndex); }

		}
		DebugLocation(1338, 35);
		} finally { DebugExitRule(GrammarFileName, "local_variable_initializer_list"); }
		return retval;

	}
	// $ANTLR end "local_variable_initializer_list"

	partial void EnterRule_expression_list_test();
	partial void LeaveRule_expression_list_test();
	// $ANTLR start "expression_list_test"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1339:1: expression_list_test : ( expression ';' )+ ;
	[GrammarRule("expression_list_test")]
	private Antlr3AstNode expression_list_test()
	{
		EnterRule_expression_list_test();
		EnterRule("expression_list_test", 311);
		var retval = new Antlr3AstNode("expression_list_test");
		
		retval.Start = (IToken)input.LT(1);
		int expression_list_test_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal1097 = default(IToken);
		Antlr3AstNode expression1096 = default(Antlr3AstNode);

		object char_literal1097_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "expression_list_test");
		DebugLocation(1339, 19);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 311)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1339:21: ( ( expression ';' )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1340:2: ( expression ';' )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1340, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1340:2: ( expression ';' )+
			int cnt288=0;
			try { DebugEnterSubRule(288);
			while (true)
			{
				int alt288=2;
				try { DebugEnterDecision(288, false);
				int LA288_1 = input.LA(1);

				if ((LA288_1==Character_literal||LA288_1==FALSE||(LA288_1>=Hex_number && LA288_1<=IDENTIFIER)||(LA288_1>=MINUS && LA288_1<=NUMBER)||LA288_1==Real_literal||LA288_1==STRINGLITERAL||LA288_1==TRUE||LA288_1==Verbatim_string_literal||LA288_1==61||LA288_1==66||(LA288_1>=68 && LA288_1<=69)||(LA288_1>=71 && LA288_1<=72)||LA288_1==75||LA288_1==95||(LA288_1>=97 && LA288_1<=98)||(LA288_1>=100 && LA288_1<=105)||(LA288_1>=107 && LA288_1<=108)||(LA288_1>=111 && LA288_1<=112)||(LA288_1>=116 && LA288_1<=119)||(LA288_1>=121 && LA288_1<=122)||LA288_1==124||LA288_1==128||LA288_1==131||LA288_1==134||LA288_1==137||LA288_1==140||LA288_1==143||(LA288_1>=145 && LA288_1<=146)||(LA288_1>=148 && LA288_1<=150)||(LA288_1>=152 && LA288_1<=154)||LA288_1==156||LA288_1==159||LA288_1==162||LA288_1==164||LA288_1==169||LA288_1==171||(LA288_1>=173 && LA288_1<=176)||LA288_1==179||LA288_1==182||(LA288_1>=185 && LA288_1<=189)||(LA288_1>=191 && LA288_1<=192)||LA288_1==196||LA288_1==198||LA288_1==204))
				{
					alt288 = 1;
				}


				} finally { DebugExitDecision(288); }
				switch (alt288)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1340:3: expression ';'
					{
					DebugLocation(1340, 3);
					PushFollow(Follow._expression_in_expression_list_test10287);
					expression1096=expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, expression1096.Tree, expression1096, "expression1096", retval);
					DebugLocation(1340, 14);
					char_literal1097=(IToken)Match(input,SEMI,Follow._SEMI_in_expression_list_test10289); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal1097_tree = (object)adaptor.Create(char_literal1097, "char_literal1097", retval);
					adaptor.AddChild(root_0, char_literal1097_tree);
					}

					}
					break;

				default:
					if (cnt288 >= 1)
						goto loop288;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee288 = new EarlyExitException( 288, input );
					DebugRecognitionException(eee288);
					throw eee288;
				}
				cnt288++;
			}
			loop288:
				;

			} finally { DebugExitSubRule(288); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("expression_list_test", 311);
			LeaveRule("expression_list_test", 311);
			LeaveRule_expression_list_test();
			if (state.backtracking > 0) { Memoize(input, 311, expression_list_test_StartIndex); }

		}
		DebugLocation(1340, 19);
		} finally { DebugExitRule(GrammarFileName, "expression_list_test"); }
		return retval;

	}
	// $ANTLR end "expression_list_test"

	partial void EnterRule_unary_expression_list();
	partial void LeaveRule_unary_expression_list();
	// $ANTLR start "unary_expression_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1341:1: unary_expression_list : ( unary_expression ';' )+ ;
	[GrammarRule("unary_expression_list")]
	private Antlr3AstNode unary_expression_list()
	{
		EnterRule_unary_expression_list();
		EnterRule("unary_expression_list", 312);
		var retval = new Antlr3AstNode("unary_expression_list");
		
		retval.Start = (IToken)input.LT(1);
		int unary_expression_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal1099 = default(IToken);
		Antlr3AstNode unary_expression1098 = default(Antlr3AstNode);

		object char_literal1099_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "unary_expression_list");
		DebugLocation(1341, 25);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 312)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1341:22: ( ( unary_expression ';' )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1342:2: ( unary_expression ';' )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1342, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1342:2: ( unary_expression ';' )+
			int cnt289=0;
			try { DebugEnterSubRule(289);
			while (true)
			{
				int alt289=2;
				try { DebugEnterDecision(289, false);
				int LA289_1 = input.LA(1);

				if ((LA289_1==Character_literal||LA289_1==FALSE||(LA289_1>=Hex_number && LA289_1<=IDENTIFIER)||(LA289_1>=MINUS && LA289_1<=NUMBER)||LA289_1==Real_literal||LA289_1==STRINGLITERAL||LA289_1==TRUE||LA289_1==Verbatim_string_literal||LA289_1==61||LA289_1==66||(LA289_1>=68 && LA289_1<=69)||(LA289_1>=71 && LA289_1<=72)||LA289_1==75||LA289_1==95||(LA289_1>=97 && LA289_1<=98)||(LA289_1>=100 && LA289_1<=105)||(LA289_1>=107 && LA289_1<=108)||(LA289_1>=111 && LA289_1<=112)||(LA289_1>=116 && LA289_1<=119)||(LA289_1>=121 && LA289_1<=122)||LA289_1==124||LA289_1==128||LA289_1==131||LA289_1==134||LA289_1==137||LA289_1==140||LA289_1==143||(LA289_1>=145 && LA289_1<=146)||(LA289_1>=148 && LA289_1<=150)||(LA289_1>=152 && LA289_1<=154)||LA289_1==156||LA289_1==159||LA289_1==162||LA289_1==164||LA289_1==169||LA289_1==171||(LA289_1>=173 && LA289_1<=176)||LA289_1==179||LA289_1==182||(LA289_1>=185 && LA289_1<=189)||(LA289_1>=191 && LA289_1<=192)||LA289_1==196||LA289_1==198||LA289_1==204))
				{
					alt289 = 1;
				}


				} finally { DebugExitDecision(289); }
				switch (alt289)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1342:3: unary_expression ';'
					{
					DebugLocation(1342, 3);
					PushFollow(Follow._unary_expression_in_unary_expression_list10300);
					unary_expression1098=unary_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression1098.Tree, unary_expression1098, "unary_expression1098", retval);
					DebugLocation(1342, 20);
					char_literal1099=(IToken)Match(input,SEMI,Follow._SEMI_in_unary_expression_list10302); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal1099_tree = (object)adaptor.Create(char_literal1099, "char_literal1099", retval);
					adaptor.AddChild(root_0, char_literal1099_tree);
					}

					}
					break;

				default:
					if (cnt289 >= 1)
						goto loop289;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee289 = new EarlyExitException( 289, input );
					DebugRecognitionException(eee289);
					throw eee289;
				}
				cnt289++;
			}
			loop289:
				;

			} finally { DebugExitSubRule(289); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unary_expression_list", 312);
			LeaveRule("unary_expression_list", 312);
			LeaveRule_unary_expression_list();
			if (state.backtracking > 0) { Memoize(input, 312, unary_expression_list_StartIndex); }

		}
		DebugLocation(1342, 25);
		} finally { DebugExitRule(GrammarFileName, "unary_expression_list"); }
		return retval;

	}
	// $ANTLR end "unary_expression_list"

	partial void EnterRule_invocation_expression_list();
	partial void LeaveRule_invocation_expression_list();
	// $ANTLR start "invocation_expression_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1343:1: invocation_expression_list : ( invocation_expression ';' )+ ;
	[GrammarRule("invocation_expression_list")]
	private Antlr3AstNode invocation_expression_list()
	{
		EnterRule_invocation_expression_list();
		EnterRule("invocation_expression_list", 313);
		var retval = new Antlr3AstNode("invocation_expression_list");
		
		retval.Start = (IToken)input.LT(1);
		int invocation_expression_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal1101 = default(IToken);
		Antlr3AstNode invocation_expression1100 = default(Antlr3AstNode);

		object char_literal1101_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "invocation_expression_list");
		DebugLocation(1343, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 313)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1343:27: ( ( invocation_expression ';' )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1344:2: ( invocation_expression ';' )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1344, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1344:2: ( invocation_expression ';' )+
			int cnt290=0;
			try { DebugEnterSubRule(290);
			while (true)
			{
				int alt290=2;
				try { DebugEnterDecision(290, false);
				int LA290_1 = input.LA(1);

				if ((LA290_1==IDENTIFIER||LA290_1==95||(LA290_1>=97 && LA290_1<=98)||(LA290_1>=100 && LA290_1<=101)||(LA290_1>=104 && LA290_1<=105)||(LA290_1>=107 && LA290_1<=108)||LA290_1==111||LA290_1==116||LA290_1==119||(LA290_1>=121 && LA290_1<=122)||LA290_1==124||LA290_1==128||LA290_1==131||LA290_1==134||LA290_1==137||LA290_1==140||LA290_1==143||(LA290_1>=145 && LA290_1<=146)||(LA290_1>=148 && LA290_1<=150)||(LA290_1>=153 && LA290_1<=154)||LA290_1==156||LA290_1==159||LA290_1==162||LA290_1==164||LA290_1==169||LA290_1==171||(LA290_1>=173 && LA290_1<=175)||LA290_1==179||LA290_1==182||(LA290_1>=185 && LA290_1<=188)||(LA290_1>=191 && LA290_1<=192)||LA290_1==196||LA290_1==198))
				{
					alt290 = 1;
				}


				} finally { DebugExitDecision(290); }
				switch (alt290)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1344:3: invocation_expression ';'
					{
					DebugLocation(1344, 3);
					PushFollow(Follow._invocation_expression_in_invocation_expression_list10313);
					invocation_expression1100=invocation_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, invocation_expression1100.Tree, invocation_expression1100, "invocation_expression1100", retval);
					DebugLocation(1344, 25);
					char_literal1101=(IToken)Match(input,SEMI,Follow._SEMI_in_invocation_expression_list10315); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal1101_tree = (object)adaptor.Create(char_literal1101, "char_literal1101", retval);
					adaptor.AddChild(root_0, char_literal1101_tree);
					}

					}
					break;

				default:
					if (cnt290 >= 1)
						goto loop290;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee290 = new EarlyExitException( 290, input );
					DebugRecognitionException(eee290);
					throw eee290;
				}
				cnt290++;
			}
			loop290:
				;

			} finally { DebugExitSubRule(290); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("invocation_expression_list", 313);
			LeaveRule("invocation_expression_list", 313);
			LeaveRule_invocation_expression_list();
			if (state.backtracking > 0) { Memoize(input, 313, invocation_expression_list_StartIndex); }

		}
		DebugLocation(1344, 30);
		} finally { DebugExitRule(GrammarFileName, "invocation_expression_list"); }
		return retval;

	}
	// $ANTLR end "invocation_expression_list"

	partial void EnterRule_primary_expression_list();
	partial void LeaveRule_primary_expression_list();
	// $ANTLR start "primary_expression_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1345:1: primary_expression_list : ( primary_expression ';' )+ ;
	[GrammarRule("primary_expression_list")]
	private Antlr3AstNode primary_expression_list()
	{
		EnterRule_primary_expression_list();
		EnterRule("primary_expression_list", 314);
		var retval = new Antlr3AstNode("primary_expression_list");
		
		retval.Start = (IToken)input.LT(1);
		int primary_expression_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal1103 = default(IToken);
		Antlr3AstNode primary_expression1102 = default(Antlr3AstNode);

		object char_literal1103_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "primary_expression_list");
		DebugLocation(1345, 27);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 314)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1345:24: ( ( primary_expression ';' )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1346:2: ( primary_expression ';' )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1346, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1346:2: ( primary_expression ';' )+
			int cnt291=0;
			try { DebugEnterSubRule(291);
			while (true)
			{
				int alt291=2;
				try { DebugEnterDecision(291, false);
				int LA291_1 = input.LA(1);

				if ((LA291_1==Character_literal||LA291_1==FALSE||(LA291_1>=Hex_number && LA291_1<=IDENTIFIER)||(LA291_1>=NULL && LA291_1<=NUMBER)||LA291_1==Real_literal||LA291_1==STRINGLITERAL||LA291_1==TRUE||LA291_1==Verbatim_string_literal||LA291_1==68||LA291_1==95||(LA291_1>=97 && LA291_1<=98)||(LA291_1>=100 && LA291_1<=102)||(LA291_1>=104 && LA291_1<=105)||(LA291_1>=107 && LA291_1<=108)||(LA291_1>=111 && LA291_1<=112)||(LA291_1>=116 && LA291_1<=119)||(LA291_1>=121 && LA291_1<=122)||LA291_1==124||LA291_1==128||LA291_1==131||LA291_1==134||LA291_1==137||LA291_1==140||LA291_1==143||(LA291_1>=145 && LA291_1<=146)||(LA291_1>=148 && LA291_1<=150)||(LA291_1>=152 && LA291_1<=154)||LA291_1==156||LA291_1==159||LA291_1==162||LA291_1==164||LA291_1==169||LA291_1==171||(LA291_1>=173 && LA291_1<=176)||LA291_1==179||LA291_1==182||(LA291_1>=185 && LA291_1<=189)||(LA291_1>=191 && LA291_1<=192)||LA291_1==196||LA291_1==198))
				{
					alt291 = 1;
				}


				} finally { DebugExitDecision(291); }
				switch (alt291)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1346:3: primary_expression ';'
					{
					DebugLocation(1346, 3);
					PushFollow(Follow._primary_expression_in_primary_expression_list10326);
					primary_expression1102=primary_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, primary_expression1102.Tree, primary_expression1102, "primary_expression1102", retval);
					DebugLocation(1346, 22);
					char_literal1103=(IToken)Match(input,SEMI,Follow._SEMI_in_primary_expression_list10328); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal1103_tree = (object)adaptor.Create(char_literal1103, "char_literal1103", retval);
					adaptor.AddChild(root_0, char_literal1103_tree);
					}

					}
					break;

				default:
					if (cnt291 >= 1)
						goto loop291;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee291 = new EarlyExitException( 291, input );
					DebugRecognitionException(eee291);
					throw eee291;
				}
				cnt291++;
			}
			loop291:
				;

			} finally { DebugExitSubRule(291); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("primary_expression_list", 314);
			LeaveRule("primary_expression_list", 314);
			LeaveRule_primary_expression_list();
			if (state.backtracking > 0) { Memoize(input, 314, primary_expression_list_StartIndex); }

		}
		DebugLocation(1346, 27);
		} finally { DebugExitRule(GrammarFileName, "primary_expression_list"); }
		return retval;

	}
	// $ANTLR end "primary_expression_list"

	partial void EnterRule_non_assignment_expression_list();
	partial void LeaveRule_non_assignment_expression_list();
	// $ANTLR start "non_assignment_expression_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1347:1: non_assignment_expression_list : ( non_assignment_expression ';' )+ ;
	[GrammarRule("non_assignment_expression_list")]
	private Antlr3AstNode non_assignment_expression_list()
	{
		EnterRule_non_assignment_expression_list();
		EnterRule("non_assignment_expression_list", 315);
		var retval = new Antlr3AstNode("non_assignment_expression_list");
		
		retval.Start = (IToken)input.LT(1);
		int non_assignment_expression_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal1105 = default(IToken);
		Antlr3AstNode non_assignment_expression1104 = default(Antlr3AstNode);

		object char_literal1105_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "non_assignment_expression_list");
		DebugLocation(1347, 34);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 315)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1347:31: ( ( non_assignment_expression ';' )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1348:2: ( non_assignment_expression ';' )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1348, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1348:2: ( non_assignment_expression ';' )+
			int cnt292=0;
			try { DebugEnterSubRule(292);
			while (true)
			{
				int alt292=2;
				try { DebugEnterDecision(292, false);
				int LA292_1 = input.LA(1);

				if ((LA292_1==Character_literal||LA292_1==FALSE||(LA292_1>=Hex_number && LA292_1<=IDENTIFIER)||(LA292_1>=MINUS && LA292_1<=NUMBER)||LA292_1==Real_literal||LA292_1==STRINGLITERAL||LA292_1==TRUE||LA292_1==Verbatim_string_literal||LA292_1==61||LA292_1==66||(LA292_1>=68 && LA292_1<=69)||(LA292_1>=71 && LA292_1<=72)||LA292_1==75||LA292_1==95||(LA292_1>=97 && LA292_1<=98)||(LA292_1>=100 && LA292_1<=105)||(LA292_1>=107 && LA292_1<=108)||(LA292_1>=111 && LA292_1<=112)||(LA292_1>=116 && LA292_1<=119)||(LA292_1>=121 && LA292_1<=122)||LA292_1==124||LA292_1==128||LA292_1==131||LA292_1==134||LA292_1==137||LA292_1==140||LA292_1==143||(LA292_1>=145 && LA292_1<=146)||(LA292_1>=148 && LA292_1<=150)||(LA292_1>=152 && LA292_1<=154)||LA292_1==156||LA292_1==159||LA292_1==162||LA292_1==164||LA292_1==169||LA292_1==171||(LA292_1>=173 && LA292_1<=176)||LA292_1==179||LA292_1==182||(LA292_1>=185 && LA292_1<=189)||(LA292_1>=191 && LA292_1<=192)||LA292_1==196||LA292_1==198||LA292_1==204))
				{
					alt292 = 1;
				}


				} finally { DebugExitDecision(292); }
				switch (alt292)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1348:3: non_assignment_expression ';'
					{
					DebugLocation(1348, 3);
					PushFollow(Follow._non_assignment_expression_in_non_assignment_expression_list10339);
					non_assignment_expression1104=non_assignment_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, non_assignment_expression1104.Tree, non_assignment_expression1104, "non_assignment_expression1104", retval);
					DebugLocation(1348, 29);
					char_literal1105=(IToken)Match(input,SEMI,Follow._SEMI_in_non_assignment_expression_list10341); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal1105_tree = (object)adaptor.Create(char_literal1105, "char_literal1105", retval);
					adaptor.AddChild(root_0, char_literal1105_tree);
					}

					}
					break;

				default:
					if (cnt292 >= 1)
						goto loop292;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee292 = new EarlyExitException( 292, input );
					DebugRecognitionException(eee292);
					throw eee292;
				}
				cnt292++;
			}
			loop292:
				;

			} finally { DebugExitSubRule(292); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("non_assignment_expression_list", 315);
			LeaveRule("non_assignment_expression_list", 315);
			LeaveRule_non_assignment_expression_list();
			if (state.backtracking > 0) { Memoize(input, 315, non_assignment_expression_list_StartIndex); }

		}
		DebugLocation(1348, 34);
		} finally { DebugExitRule(GrammarFileName, "non_assignment_expression_list"); }
		return retval;

	}
	// $ANTLR end "non_assignment_expression_list"

	partial void EnterRule_method_declarations();
	partial void LeaveRule_method_declarations();
	// $ANTLR start "method_declarations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1349:1: method_declarations : ( ( modifiers )? ( 'void' | type ) method_declaration )+ ;
	[GrammarRule("method_declarations")]
	private Antlr3AstNode method_declarations()
	{
		EnterRule_method_declarations();
		EnterRule("method_declarations", 316);
		var retval = new Antlr3AstNode("method_declarations");
		
		retval.Start = (IToken)input.LT(1);
		int method_declarations_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1107 = default(IToken);
		Antlr3AstNode modifiers1106 = default(Antlr3AstNode);
		Antlr3AstNode type1108 = default(Antlr3AstNode);
		Antlr3AstNode method_declaration1109 = default(Antlr3AstNode);

		object string_literal1107_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "method_declarations");
		DebugLocation(1349, 50);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 316)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1349:20: ( ( ( modifiers )? ( 'void' | type ) method_declaration )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1350:2: ( ( modifiers )? ( 'void' | type ) method_declaration )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1350, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1350:2: ( ( modifiers )? ( 'void' | type ) method_declaration )+
			int cnt295=0;
			try { DebugEnterSubRule(295);
			while (true)
			{
				int alt295=2;
				try { DebugEnterDecision(295, false);
				int LA295_1 = input.LA(1);

				if ((LA295_1==IDENTIFIER||(LA295_1>=95 && LA295_1<=98)||(LA295_1>=100 && LA295_1<=102)||LA295_1==105||(LA295_1>=107 && LA295_1<=108)||LA295_1==111||LA295_1==116||LA295_1==119||(LA295_1>=121 && LA295_1<=122)||LA295_1==124||(LA295_1>=127 && LA295_1<=128)||LA295_1==131||LA295_1==134||LA295_1==137||LA295_1==140||(LA295_1>=142 && LA295_1<=143)||(LA295_1>=145 && LA295_1<=146)||(LA295_1>=148 && LA295_1<=150)||(LA295_1>=152 && LA295_1<=154)||LA295_1==156||(LA295_1>=158 && LA295_1<=159)||(LA295_1>=162 && LA295_1<=167)||LA295_1==169||(LA295_1>=171 && LA295_1<=175)||(LA295_1>=178 && LA295_1<=179)||LA295_1==185||(LA295_1>=187 && LA295_1<=188)||(LA295_1>=190 && LA295_1<=196)||LA295_1==198))
				{
					alt295 = 1;
				}


				} finally { DebugExitDecision(295); }
				switch (alt295)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1350:3: ( modifiers )? ( 'void' | type ) method_declaration
					{
					DebugLocation(1350, 3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1350:3: ( modifiers )?
					int alt293=2;
					try { DebugEnterSubRule(293);
					try { DebugEnterDecision(293, false);
					int LA293_1 = input.LA(1);

					if ((LA293_1==96||LA293_1==102||LA293_1==127||LA293_1==142||LA293_1==152||LA293_1==158||LA293_1==163||(LA293_1>=165 && LA293_1<=167)||LA293_1==172||LA293_1==178||LA293_1==190||LA293_1==193||LA293_1==195))
					{
						alt293 = 1;
					}
					} finally { DebugExitDecision(293); }
					switch (alt293)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1350:3: modifiers
						{
						DebugLocation(1350, 3);
						PushFollow(Follow._modifiers_in_method_declarations10352);
						modifiers1106=modifiers();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers1106.Tree, modifiers1106, "modifiers1106", retval);

						}
						break;

					}
					} finally { DebugExitSubRule(293); }

					DebugLocation(1350, 14);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1350:14: ( 'void' | type )
					int alt294=2;
					try { DebugEnterSubRule(294);
					try { DebugEnterDecision(294, false);
					int LA294_1 = input.LA(1);

					if ((LA294_1==194))
					{
						int LA294_2 = input.LA(2);

						if ((LA294_2==Character_literal||LA294_2==FALSE||(LA294_2>=Hex_number && LA294_2<=IDENTIFIER)||(LA294_2>=NULL && LA294_2<=NUMBER)||LA294_2==Real_literal||LA294_2==STRINGLITERAL||LA294_2==TRUE||LA294_2==Verbatim_string_literal||LA294_2==95||(LA294_2>=97 && LA294_2<=98)||(LA294_2>=100 && LA294_2<=101)||LA294_2==105||(LA294_2>=107 && LA294_2<=108)||LA294_2==111||LA294_2==116||LA294_2==119||(LA294_2>=121 && LA294_2<=122)||LA294_2==124||LA294_2==128||LA294_2==131||LA294_2==134||LA294_2==137||LA294_2==140||LA294_2==143||(LA294_2>=145 && LA294_2<=146)||(LA294_2>=148 && LA294_2<=150)||(LA294_2>=153 && LA294_2<=154)||LA294_2==156||LA294_2==159||LA294_2==162||LA294_2==164||LA294_2==169||LA294_2==171||(LA294_2>=173 && LA294_2<=175)||LA294_2==179||LA294_2==185||(LA294_2>=187 && LA294_2<=188)||(LA294_2>=191 && LA294_2<=192)||LA294_2==196||LA294_2==198))
						{
							alt294 = 1;
						}
						else if ((LA294_2==69))
						{
							alt294 = 2;
						}
						else
						{
							if (state.backtracking>0) {state.failed=true; return retval;}
							NoViableAltException nvae = new NoViableAltException("", 294, 1, input, 2);
							DebugRecognitionException(nvae);
							throw nvae;
						}
					}
					else if ((LA294_1==IDENTIFIER||LA294_1==95||(LA294_1>=97 && LA294_1<=98)||(LA294_1>=100 && LA294_1<=101)||LA294_1==105||(LA294_1>=107 && LA294_1<=108)||LA294_1==111||LA294_1==116||LA294_1==119||(LA294_1>=121 && LA294_1<=122)||LA294_1==124||LA294_1==128||LA294_1==131||LA294_1==134||LA294_1==137||LA294_1==140||LA294_1==143||(LA294_1>=145 && LA294_1<=146)||(LA294_1>=148 && LA294_1<=150)||(LA294_1>=153 && LA294_1<=154)||LA294_1==156||LA294_1==159||LA294_1==162||LA294_1==164||LA294_1==169||LA294_1==171||(LA294_1>=173 && LA294_1<=175)||LA294_1==179||LA294_1==185||(LA294_1>=187 && LA294_1<=188)||(LA294_1>=191 && LA294_1<=192)||LA294_1==196||LA294_1==198))
					{
						alt294 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 294, 0, input, 1);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					} finally { DebugExitDecision(294); }
					switch (alt294)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1350:15: 'void'
						{
						DebugLocation(1350, 15);
						string_literal1107=(IToken)Match(input,194,Follow._194_in_method_declarations10356); if (state.failed) return retval;
						if (state.backtracking == 0) {
						string_literal1107_tree = (object)adaptor.Create(string_literal1107, "string_literal1107", retval);
						adaptor.AddChild(root_0, string_literal1107_tree);
						}

						}
						break;
					case 2:
						DebugEnterAlt(2);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1350:24: type
						{
						DebugLocation(1350, 24);
						PushFollow(Follow._type_in_method_declarations10360);
						type1108=type();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, type1108.Tree, type1108, "type1108", retval);

						}
						break;

					}
					} finally { DebugExitSubRule(294); }

					DebugLocation(1350, 30);
					PushFollow(Follow._method_declaration_in_method_declarations10363);
					method_declaration1109=method_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, method_declaration1109.Tree, method_declaration1109, "method_declaration1109", retval);

					}
					break;

				default:
					if (cnt295 >= 1)
						goto loop295;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee295 = new EarlyExitException( 295, input );
					DebugRecognitionException(eee295);
					throw eee295;
				}
				cnt295++;
			}
			loop295:
				;

			} finally { DebugExitSubRule(295); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("method_declarations", 316);
			LeaveRule("method_declarations", 316);
			LeaveRule_method_declarations();
			if (state.backtracking > 0) { Memoize(input, 316, method_declarations_StartIndex); }

		}
		DebugLocation(1350, 50);
		} finally { DebugExitRule(GrammarFileName, "method_declarations"); }
		return retval;

	}
	// $ANTLR end "method_declarations"

	partial void EnterRule_synpred1_cs_fragment();
	partial void LeaveRule_synpred1_cs_fragment();

	// $ANTLR start synpred1_cs
	private void synpred1_cs_fragment()
	{
		EnterRule_synpred1_cs_fragment();
		EnterRule("synpred1_cs_fragment", 317);
		var retval = new Antlr3AstNode("synpred1_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:54:2: ( 'partial' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:54:3: 'partial'
			{
			DebugLocation(54, 3);
			Match(input,161,Follow._161_in_synpred1_cs273); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred1_cs_fragment", 317);
			LeaveRule("synpred1_cs_fragment", 317);
			LeaveRule_synpred1_cs_fragment();
		}
	}
	// $ANTLR end synpred1_cs

	partial void EnterRule_synpred2_cs_fragment();
	partial void LeaveRule_synpred2_cs_fragment();

	// $ANTLR start synpred2_cs
	private void synpred2_cs_fragment()
	{
		EnterRule_synpred2_cs_fragment();
		EnterRule("synpred2_cs_fragment", 318);
		var retval = new Antlr3AstNode("synpred2_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:85:11: ( member_name '(' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:85:12: member_name '('
			{
			DebugLocation(85, 12);
			PushFollow(Follow._member_name_in_synpred2_cs539);
			member_name();
			PopFollow();
			if (state.failed) return;
			DebugLocation(85, 26);
			Match(input,68,Follow._68_in_synpred2_cs543); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred2_cs_fragment", 318);
			LeaveRule("synpred2_cs_fragment", 318);
			LeaveRule_synpred2_cs_fragment();
		}
	}
	// $ANTLR end synpred2_cs

	partial void EnterRule_synpred3_cs_fragment();
	partial void LeaveRule_synpred3_cs_fragment();

	// $ANTLR start synpred3_cs
	private void synpred3_cs_fragment()
	{
		EnterRule_synpred3_cs_fragment();
		EnterRule("synpred3_cs_fragment", 319);
		var retval = new Antlr3AstNode("synpred3_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:86:8: ( member_name '{' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:86:9: member_name '{'
			{
			DebugLocation(86, 9);
			PushFollow(Follow._member_name_in_synpred3_cs558);
			member_name();
			PopFollow();
			if (state.failed) return;
			DebugLocation(86, 23);
			Match(input,199,Follow._199_in_synpred3_cs562); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred3_cs_fragment", 319);
			LeaveRule("synpred3_cs_fragment", 319);
			LeaveRule_synpred3_cs_fragment();
		}
	}
	// $ANTLR end synpred3_cs

	partial void EnterRule_synpred4_cs_fragment();
	partial void LeaveRule_synpred4_cs_fragment();

	// $ANTLR start synpred4_cs
	private void synpred4_cs_fragment()
	{
		EnterRule_synpred4_cs_fragment();
		EnterRule("synpred4_cs_fragment", 320);
		var retval = new Antlr3AstNode("synpred4_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:87:8: ( member_name '.' 'this' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:87:9: member_name '.' 'this'
			{
			DebugLocation(87, 9);
			PushFollow(Follow._member_name_in_synpred4_cs577);
			member_name();
			PopFollow();
			if (state.failed) return;
			DebugLocation(87, 23);
			Match(input,DOT,Follow._DOT_in_synpred4_cs581); if (state.failed) return;
			DebugLocation(87, 29);
			Match(input,182,Follow._182_in_synpred4_cs585); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred4_cs_fragment", 320);
			LeaveRule("synpred4_cs_fragment", 320);
			LeaveRule_synpred4_cs_fragment();
		}
	}
	// $ANTLR end synpred4_cs

	partial void EnterRule_synpred5_cs_fragment();
	partial void LeaveRule_synpred5_cs_fragment();

	// $ANTLR start synpred5_cs
	private void synpred5_cs_fragment()
	{
		EnterRule_synpred5_cs_fragment();
		EnterRule("synpred5_cs_fragment", 321);
		var retval = new Antlr3AstNode("synpred5_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:105:2: ( 'this' brackets )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:105:3: 'this' brackets
			{
			DebugLocation(105, 3);
			Match(input,182,Follow._182_in_synpred5_cs705); if (state.failed) return;
			DebugLocation(105, 13);
			PushFollow(Follow._brackets_in_synpred5_cs710);
			brackets();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred5_cs_fragment", 321);
			LeaveRule("synpred5_cs_fragment", 321);
			LeaveRule_synpred5_cs_fragment();
		}
	}
	// $ANTLR end synpred5_cs

	partial void EnterRule_synpred6_cs_fragment();
	partial void LeaveRule_synpred6_cs_fragment();

	// $ANTLR start synpred6_cs
	private void synpred6_cs_fragment()
	{
		EnterRule_synpred6_cs_fragment();
		EnterRule("synpred6_cs_fragment", 322);
		var retval = new Antlr3AstNode("synpred6_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:106:4: ( 'base' brackets )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:106:5: 'base' brackets
			{
			DebugLocation(106, 5);
			Match(input,104,Follow._104_in_synpred6_cs730); if (state.failed) return;
			DebugLocation(106, 14);
			PushFollow(Follow._brackets_in_synpred6_cs734);
			brackets();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred6_cs_fragment", 322);
			LeaveRule("synpred6_cs_fragment", 322);
			LeaveRule_synpred6_cs_fragment();
		}
	}
	// $ANTLR end synpred6_cs

	partial void EnterRule_synpred7_cs_fragment();
	partial void LeaveRule_synpred7_cs_fragment();

	// $ANTLR start synpred7_cs
	private void synpred7_cs_fragment()
	{
		EnterRule_synpred7_cs_fragment();
		EnterRule("synpred7_cs_fragment", 323);
		var retval = new Antlr3AstNode("synpred7_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:108:14: ( object_creation_expression ( '.' | '->' | '[' ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:108:15: object_creation_expression ( '.' | '->' | '[' )
			{
			DebugLocation(108, 15);
			PushFollow(Follow._object_creation_expression_in_synpred7_cs770);
			object_creation_expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(108, 44);
			if (input.LA(1)==DOT||input.LA(1)==PTR||input.LA(1)==91)
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("synpred7_cs_fragment", 323);
			LeaveRule("synpred7_cs_fragment", 323);
			LeaveRule_synpred7_cs_fragment();
		}
	}
	// $ANTLR end synpred7_cs

	partial void EnterRule_synpred8_cs_fragment();
	partial void LeaveRule_synpred8_cs_fragment();

	// $ANTLR start synpred8_cs
	private void synpred8_cs_fragment()
	{
		EnterRule_synpred8_cs_fragment();
		EnterRule("synpred8_cs_fragment", 324);
		var retval = new Antlr3AstNode("synpred8_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:124:4: ( identifier generic_argument_list )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:124:5: identifier generic_argument_list
			{
			DebugLocation(124, 5);
			PushFollow(Follow._identifier_in_synpred8_cs934);
			identifier();
			PopFollow();
			if (state.failed) return;
			DebugLocation(124, 16);
			PushFollow(Follow._generic_argument_list_in_synpred8_cs936);
			generic_argument_list();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred8_cs_fragment", 324);
			LeaveRule("synpred8_cs_fragment", 324);
			LeaveRule_synpred8_cs_fragment();
		}
	}
	// $ANTLR end synpred8_cs

	partial void EnterRule_synpred9_cs_fragment();
	partial void LeaveRule_synpred9_cs_fragment();

	// $ANTLR start synpred9_cs
	private void synpred9_cs_fragment()
	{
		EnterRule_synpred9_cs_fragment();
		EnterRule("synpred9_cs_fragment", 325);
		var retval = new Antlr3AstNode("synpred9_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:162:4: ( '(' type ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:162:5: '(' type ')'
			{
			DebugLocation(162, 5);
			Match(input,68,Follow._68_in_synpred9_cs1186); if (state.failed) return;
			DebugLocation(162, 11);
			PushFollow(Follow._type_in_synpred9_cs1190);
			type();
			PopFollow();
			if (state.failed) return;
			DebugLocation(162, 18);
			Match(input,RPAREN,Follow._RPAREN_in_synpred9_cs1194); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred9_cs_fragment", 325);
			LeaveRule("synpred9_cs_fragment", 325);
			LeaveRule_synpred9_cs_fragment();
		}
	}
	// $ANTLR end synpred9_cs

	partial void EnterRule_synpred10_cs_fragment();
	partial void LeaveRule_synpred10_cs_fragment();

	// $ANTLR start synpred10_cs
	private void synpred10_cs_fragment()
	{
		EnterRule_synpred10_cs_fragment();
		EnterRule("synpred10_cs_fragment", 326);
		var retval = new Antlr3AstNode("synpred10_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:190:2: ( array_creation_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:190:3: array_creation_expression
			{
			DebugLocation(190, 3);
			PushFollow(Follow._array_creation_expression_in_synpred10_cs1436);
			array_creation_expression();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred10_cs_fragment", 326);
			LeaveRule("synpred10_cs_fragment", 326);
			LeaveRule_synpred10_cs_fragment();
		}
	}
	// $ANTLR end synpred10_cs

	partial void EnterRule_synpred11_cs_fragment();
	partial void LeaveRule_synpred11_cs_fragment();

	// $ANTLR start synpred11_cs
	private void synpred11_cs_fragment()
	{
		EnterRule_synpred11_cs_fragment();
		EnterRule("synpred11_cs_fragment", 327);
		var retval = new Antlr3AstNode("synpred11_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:199:11: ( arguments ( '[' | '.' | '->' ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:199:12: arguments ( '[' | '.' | '->' )
			{
			DebugLocation(199, 12);
			PushFollow(Follow._arguments_in_synpred11_cs1516);
			arguments();
			PopFollow();
			if (state.failed) return;
			DebugLocation(199, 24);
			if (input.LA(1)==DOT||input.LA(1)==PTR||input.LA(1)==91)
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("synpred11_cs_fragment", 327);
			LeaveRule("synpred11_cs_fragment", 327);
			LeaveRule_synpred11_cs_fragment();
		}
	}
	// $ANTLR end synpred11_cs

	partial void EnterRule_synpred12_cs_fragment();
	partial void LeaveRule_synpred12_cs_fragment();

	// $ANTLR start synpred12_cs
	private void synpred12_cs_fragment()
	{
		EnterRule_synpred12_cs_fragment();
		EnterRule("synpred12_cs_fragment", 328);
		var retval = new Antlr3AstNode("synpred12_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:266:20: ( unbound_type_name )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:266:21: unbound_type_name
			{
			DebugLocation(266, 21);
			PushFollow(Follow._unbound_type_name_in_synpred12_cs2010);
			unbound_type_name();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred12_cs_fragment", 328);
			LeaveRule("synpred12_cs_fragment", 328);
			LeaveRule_synpred12_cs_fragment();
		}
	}
	// $ANTLR end synpred12_cs

	partial void EnterRule_synpred13_cs_fragment();
	partial void LeaveRule_synpred13_cs_fragment();

	// $ANTLR start synpred13_cs
	private void synpred13_cs_fragment()
	{
		EnterRule_synpred13_cs_fragment();
		EnterRule("synpred13_cs_fragment", 329);
		var retval = new Antlr3AstNode("synpred13_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:276:5: ( generic_dimension_specifier '.' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:276:6: generic_dimension_specifier '.'
			{
			DebugLocation(276, 6);
			PushFollow(Follow._generic_dimension_specifier_in_synpred13_cs2068);
			generic_dimension_specifier();
			PopFollow();
			if (state.failed) return;
			DebugLocation(276, 36);
			Match(input,DOT,Follow._DOT_in_synpred13_cs2072); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred13_cs_fragment", 329);
			LeaveRule("synpred13_cs_fragment", 329);
			LeaveRule_synpred13_cs_fragment();
		}
	}
	// $ANTLR end synpred13_cs

	partial void EnterRule_synpred14_cs_fragment();
	partial void LeaveRule_synpred14_cs_fragment();

	// $ANTLR start synpred14_cs
	private void synpred14_cs_fragment()
	{
		EnterRule_synpred14_cs_fragment();
		EnterRule("synpred14_cs_fragment", 330);
		var retval = new Antlr3AstNode("synpred14_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:299:2: ( identifier generic_argument_list )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:299:3: identifier generic_argument_list
			{
			DebugLocation(299, 3);
			PushFollow(Follow._identifier_in_synpred14_cs2200);
			identifier();
			PopFollow();
			if (state.failed) return;
			DebugLocation(299, 14);
			PushFollow(Follow._generic_argument_list_in_synpred14_cs2202);
			generic_argument_list();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred14_cs_fragment", 330);
			LeaveRule("synpred14_cs_fragment", 330);
			LeaveRule_synpred14_cs_fragment();
		}
	}
	// $ANTLR end synpred14_cs

	partial void EnterRule_synpred15_cs_fragment();
	partial void LeaveRule_synpred15_cs_fragment();

	// $ANTLR start synpred15_cs
	private void synpred15_cs_fragment()
	{
		EnterRule_synpred15_cs_fragment();
		EnterRule("synpred15_cs_fragment", 331);
		var retval = new Antlr3AstNode("synpred15_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:307:4: ( identifier '<' type_arguments '>' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:307:5: identifier '<' type_arguments '>'
			{
			DebugLocation(307, 5);
			PushFollow(Follow._identifier_in_synpred15_cs2245);
			identifier();
			PopFollow();
			if (state.failed) return;
			DebugLocation(307, 16);
			Match(input,81,Follow._81_in_synpred15_cs2247); if (state.failed) return;
			DebugLocation(307, 20);
			PushFollow(Follow._type_arguments_in_synpred15_cs2249);
			type_arguments();
			PopFollow();
			if (state.failed) return;
			DebugLocation(307, 35);
			Match(input,GT,Follow._GT_in_synpred15_cs2251); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred15_cs_fragment", 331);
			LeaveRule("synpred15_cs_fragment", 331);
			LeaveRule_synpred15_cs_fragment();
		}
	}
	// $ANTLR end synpred15_cs

	partial void EnterRule_synpred16_cs_fragment();
	partial void LeaveRule_synpred16_cs_fragment();

	// $ANTLR start synpred16_cs
	private void synpred16_cs_fragment()
	{
		EnterRule_synpred16_cs_fragment();
		EnterRule("synpred16_cs_fragment", 332);
		var retval = new Antlr3AstNode("synpred16_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:359:2: ( unary_expression assignment_operator )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:359:3: unary_expression assignment_operator
			{
			DebugLocation(359, 3);
			PushFollow(Follow._unary_expression_in_synpred16_cs2502);
			unary_expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(359, 22);
			PushFollow(Follow._assignment_operator_in_synpred16_cs2506);
			assignment_operator();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred16_cs_fragment", 332);
			LeaveRule("synpred16_cs_fragment", 332);
			LeaveRule_synpred16_cs_fragment();
		}
	}
	// $ANTLR end synpred16_cs

	partial void EnterRule_synpred17_cs_fragment();
	partial void LeaveRule_synpred17_cs_fragment();

	// $ANTLR start synpred17_cs
	private void synpred17_cs_fragment()
	{
		EnterRule_synpred17_cs_fragment();
		EnterRule("synpred17_cs_fragment", 333);
		var retval = new Antlr3AstNode("synpred17_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:368:2: ( cast_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:368:3: cast_expression
			{
			DebugLocation(368, 3);
			PushFollow(Follow._cast_expression_in_synpred17_cs2564);
			cast_expression();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred17_cs_fragment", 333);
			LeaveRule("synpred17_cs_fragment", 333);
			LeaveRule_synpred17_cs_fragment();
		}
	}
	// $ANTLR end synpred17_cs

	partial void EnterRule_synpred18_cs_fragment();
	partial void LeaveRule_synpred18_cs_fragment();

	// $ANTLR start synpred18_cs
	private void synpred18_cs_fragment()
	{
		EnterRule_synpred18_cs_fragment();
		EnterRule("synpred18_cs_fragment", 334);
		var retval = new Antlr3AstNode("synpred18_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:398:2: ( ( 'async' )? anonymous_function_signature '=>' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:398:3: ( 'async' )? anonymous_function_signature '=>'
			{
			DebugLocation(398, 3);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:398:3: ( 'async' )?
			int alt296=2;
			try { DebugEnterSubRule(296);
			try { DebugEnterDecision(296, false);
			int LA296_1 = input.LA(1);

			if ((LA296_1==102))
			{
				alt296 = 1;
			}
			} finally { DebugExitDecision(296); }
			switch (alt296)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:398:3: 'async'
				{
				DebugLocation(398, 3);
				Match(input,102,Follow._102_in_synpred18_cs2795); if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(296); }

			DebugLocation(398, 12);
			PushFollow(Follow._anonymous_function_signature_in_synpred18_cs2798);
			anonymous_function_signature();
			PopFollow();
			if (state.failed) return;
			DebugLocation(398, 41);
			Match(input,87,Follow._87_in_synpred18_cs2800); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred18_cs_fragment", 334);
			LeaveRule("synpred18_cs_fragment", 334);
			LeaveRule_synpred18_cs_fragment();
		}
	}
	// $ANTLR end synpred18_cs

	partial void EnterRule_synpred19_cs_fragment();
	partial void LeaveRule_synpred19_cs_fragment();

	// $ANTLR start synpred19_cs
	private void synpred19_cs_fragment()
	{
		EnterRule_synpred19_cs_fragment();
		EnterRule("synpred19_cs_fragment", 335);
		var retval = new Antlr3AstNode("synpred19_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:399:4: ( query_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:399:5: query_expression
			{
			DebugLocation(399, 5);
			PushFollow(Follow._query_expression_in_synpred19_cs2811);
			query_expression();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred19_cs_fragment", 335);
			LeaveRule("synpred19_cs_fragment", 335);
			LeaveRule_synpred19_cs_fragment();
		}
	}
	// $ANTLR end synpred19_cs

	partial void EnterRule_synpred20_cs_fragment();
	partial void LeaveRule_synpred20_cs_fragment();

	// $ANTLR start synpred20_cs
	private void synpred20_cs_fragment()
	{
		EnterRule_synpred20_cs_fragment();
		EnterRule("synpred20_cs_fragment", 336);
		var retval = new Antlr3AstNode("synpred20_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:463:50: ( 'into' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:463:51: 'into'
			{
			DebugLocation(463, 51);
			Match(input,143,Follow._143_in_synpred20_cs3237); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred20_cs_fragment", 336);
			LeaveRule("synpred20_cs_fragment", 336);
			LeaveRule_synpred20_cs_fragment();
		}
	}
	// $ANTLR end synpred20_cs

	partial void EnterRule_synpred21_cs_fragment();
	partial void LeaveRule_synpred21_cs_fragment();

	// $ANTLR start synpred21_cs
	private void synpred21_cs_fragment()
	{
		EnterRule_synpred21_cs_fragment();
		EnterRule("synpred21_cs_fragment", 337);
		var retval = new Antlr3AstNode("synpred21_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:530:32: ( ',' identifier '=' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:530:33: ',' identifier '='
			{
			DebugLocation(530, 33);
			Match(input,74,Follow._74_in_synpred21_cs3740); if (state.failed) return;
			DebugLocation(530, 39);
			PushFollow(Follow._identifier_in_synpred21_cs3744);
			identifier();
			PopFollow();
			if (state.failed) return;
			DebugLocation(530, 52);
			Match(input,85,Follow._85_in_synpred21_cs3748); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred21_cs_fragment", 337);
			LeaveRule("synpred21_cs_fragment", 337);
			LeaveRule_synpred21_cs_fragment();
		}
	}
	// $ANTLR end synpred21_cs

	partial void EnterRule_synpred22_cs_fragment();
	partial void LeaveRule_synpred22_cs_fragment();

	// $ANTLR start synpred22_cs
	private void synpred22_cs_fragment()
	{
		EnterRule_synpred22_cs_fragment();
		EnterRule("synpred22_cs_fragment", 338);
		var retval = new Antlr3AstNode("synpred22_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:611:4: ( member_name '{' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:611:5: member_name '{'
			{
			DebugLocation(611, 5);
			PushFollow(Follow._member_name_in_synpred22_cs4266);
			member_name();
			PopFollow();
			if (state.failed) return;
			DebugLocation(611, 19);
			Match(input,199,Follow._199_in_synpred22_cs4270); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred22_cs_fragment", 338);
			LeaveRule("synpred22_cs_fragment", 338);
			LeaveRule_synpred22_cs_fragment();
		}
	}
	// $ANTLR end synpred22_cs

	partial void EnterRule_synpred23_cs_fragment();
	partial void LeaveRule_synpred23_cs_fragment();

	// $ANTLR start synpred23_cs
	private void synpred23_cs_fragment()
	{
		EnterRule_synpred23_cs_fragment();
		EnterRule("synpred23_cs_fragment", 339);
		var retval = new Antlr3AstNode("synpred23_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:718:14: ( member_name '(' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:718:15: member_name '('
			{
			DebugLocation(718, 15);
			PushFollow(Follow._member_name_in_synpred23_cs5131);
			member_name();
			PopFollow();
			if (state.failed) return;
			DebugLocation(718, 29);
			Match(input,68,Follow._68_in_synpred23_cs5135); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred23_cs_fragment", 339);
			LeaveRule("synpred23_cs_fragment", 339);
			LeaveRule_synpred23_cs_fragment();
		}
	}
	// $ANTLR end synpred23_cs

	partial void EnterRule_synpred24_cs_fragment();
	partial void LeaveRule_synpred24_cs_fragment();

	// $ANTLR start synpred24_cs
	private void synpred24_cs_fragment()
	{
		EnterRule_synpred24_cs_fragment();
		EnterRule("synpred24_cs_fragment", 340);
		var retval = new Antlr3AstNode("synpred24_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:719:14: ( member_name '{' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:719:15: member_name '{'
			{
			DebugLocation(719, 15);
			PushFollow(Follow._member_name_in_synpred24_cs5156);
			member_name();
			PopFollow();
			if (state.failed) return;
			DebugLocation(719, 29);
			Match(input,199,Follow._199_in_synpred24_cs5160); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred24_cs_fragment", 340);
			LeaveRule("synpred24_cs_fragment", 340);
			LeaveRule_synpred24_cs_fragment();
		}
	}
	// $ANTLR end synpred24_cs

	partial void EnterRule_synpred25_cs_fragment();
	partial void LeaveRule_synpred25_cs_fragment();

	// $ANTLR start synpred25_cs
	private void synpred25_cs_fragment()
	{
		EnterRule_synpred25_cs_fragment();
		EnterRule("synpred25_cs_fragment", 341);
		var retval = new Antlr3AstNode("synpred25_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:770:11: ( member_name '(' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:770:12: member_name '('
			{
			DebugLocation(770, 12);
			PushFollow(Follow._member_name_in_synpred25_cs5602);
			member_name();
			PopFollow();
			if (state.failed) return;
			DebugLocation(770, 26);
			Match(input,68,Follow._68_in_synpred25_cs5606); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred25_cs_fragment", 341);
			LeaveRule("synpred25_cs_fragment", 341);
			LeaveRule_synpred25_cs_fragment();
		}
	}
	// $ANTLR end synpred25_cs

	partial void EnterRule_synpred26_cs_fragment();
	partial void LeaveRule_synpred26_cs_fragment();

	// $ANTLR start synpred26_cs
	private void synpred26_cs_fragment()
	{
		EnterRule_synpred26_cs_fragment();
		EnterRule("synpred26_cs_fragment", 342);
		var retval = new Antlr3AstNode("synpred26_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:771:8: ( member_name '{' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:771:9: member_name '{'
			{
			DebugLocation(771, 9);
			PushFollow(Follow._member_name_in_synpred26_cs5621);
			member_name();
			PopFollow();
			if (state.failed) return;
			DebugLocation(771, 23);
			Match(input,199,Follow._199_in_synpred26_cs5625); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred26_cs_fragment", 342);
			LeaveRule("synpred26_cs_fragment", 342);
			LeaveRule_synpred26_cs_fragment();
		}
	}
	// $ANTLR end synpred26_cs

	partial void EnterRule_synpred27_cs_fragment();
	partial void LeaveRule_synpred27_cs_fragment();

	// $ANTLR start synpred27_cs
	private void synpred27_cs_fragment()
	{
		EnterRule_synpred27_cs_fragment();
		EnterRule("synpred27_cs_fragment", 343);
		var retval = new Antlr3AstNode("synpred27_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:772:8: ( member_name '.' 'this' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:772:9: member_name '.' 'this'
			{
			DebugLocation(772, 9);
			PushFollow(Follow._member_name_in_synpred27_cs5640);
			member_name();
			PopFollow();
			if (state.failed) return;
			DebugLocation(772, 23);
			Match(input,DOT,Follow._DOT_in_synpred27_cs5644); if (state.failed) return;
			DebugLocation(772, 29);
			Match(input,182,Follow._182_in_synpred27_cs5648); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred27_cs_fragment", 343);
			LeaveRule("synpred27_cs_fragment", 343);
			LeaveRule_synpred27_cs_fragment();
		}
	}
	// $ANTLR end synpred27_cs

	partial void EnterRule_synpred28_cs_fragment();
	partial void LeaveRule_synpred28_cs_fragment();

	// $ANTLR start synpred28_cs
	private void synpred28_cs_fragment()
	{
		EnterRule_synpred28_cs_fragment();
		EnterRule("synpred28_cs_fragment", 344);
		var retval = new Antlr3AstNode("synpred28_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:844:23: ( arguments ( '[' | '.' | '->' ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:844:24: arguments ( '[' | '.' | '->' )
			{
			DebugLocation(844, 24);
			PushFollow(Follow._arguments_in_synpred28_cs6194);
			arguments();
			PopFollow();
			if (state.failed) return;
			DebugLocation(844, 36);
			if (input.LA(1)==DOT||input.LA(1)==PTR||input.LA(1)==91)
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("synpred28_cs_fragment", 344);
			LeaveRule("synpred28_cs_fragment", 344);
			LeaveRule_synpred28_cs_fragment();
		}
	}
	// $ANTLR end synpred28_cs

	partial void EnterRule_synpred29_cs_fragment();
	partial void LeaveRule_synpred29_cs_fragment();

	// $ANTLR start synpred29_cs
	private void synpred29_cs_fragment()
	{
		EnterRule_synpred29_cs_fragment();
		EnterRule("synpred29_cs_fragment", 345);
		var retval = new Antlr3AstNode("synpred29_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:848:4: ( identifier '<' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:848:5: identifier '<'
			{
			DebugLocation(848, 5);
			PushFollow(Follow._identifier_in_synpred29_cs6245);
			identifier();
			PopFollow();
			if (state.failed) return;
			DebugLocation(848, 19);
			Match(input,81,Follow._81_in_synpred29_cs6250); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred29_cs_fragment", 345);
			LeaveRule("synpred29_cs_fragment", 345);
			LeaveRule_synpred29_cs_fragment();
		}
	}
	// $ANTLR end synpred29_cs

	partial void EnterRule_synpred30_cs_fragment();
	partial void LeaveRule_synpred30_cs_fragment();

	// $ANTLR start synpred30_cs
	private void synpred30_cs_fragment()
	{
		EnterRule_synpred30_cs_fragment();
		EnterRule("synpred30_cs_fragment", 346);
		var retval = new Antlr3AstNode("synpred30_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:861:2: ( declaration_statement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:861:3: declaration_statement
			{
			DebugLocation(861, 3);
			PushFollow(Follow._declaration_statement_in_synpred30_cs6331);
			declaration_statement();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred30_cs_fragment", 346);
			LeaveRule("synpred30_cs_fragment", 346);
			LeaveRule_synpred30_cs_fragment();
		}
	}
	// $ANTLR end synpred30_cs

	partial void EnterRule_synpred31_cs_fragment();
	partial void LeaveRule_synpred31_cs_fragment();

	// $ANTLR start synpred31_cs
	private void synpred31_cs_fragment()
	{
		EnterRule_synpred31_cs_fragment();
		EnterRule("synpred31_cs_fragment", 347);
		var retval = new Antlr3AstNode("synpred31_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:862:4: ( identifier ':' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:862:5: identifier ':'
			{
			DebugLocation(862, 5);
			PushFollow(Follow._identifier_in_synpred31_cs6342);
			identifier();
			PopFollow();
			if (state.failed) return;
			DebugLocation(862, 18);
			Match(input,79,Follow._79_in_synpred31_cs6346); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred31_cs_fragment", 347);
			LeaveRule("synpred31_cs_fragment", 347);
			LeaveRule_synpred31_cs_fragment();
		}
	}
	// $ANTLR end synpred31_cs

	partial void EnterRule_synpred32_cs_fragment();
	partial void LeaveRule_synpred32_cs_fragment();

	// $ANTLR start synpred32_cs
	private void synpred32_cs_fragment()
	{
		EnterRule_synpred32_cs_fragment();
		EnterRule("synpred32_cs_fragment", 348);
		var retval = new Antlr3AstNode("synpred32_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:899:2: ( 'var' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:899:3: 'var'
			{
			DebugLocation(899, 3);
			Match(input,192,Follow._192_in_synpred32_cs6570); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred32_cs_fragment", 348);
			LeaveRule("synpred32_cs_fragment", 348);
			LeaveRule_synpred32_cs_fragment();
		}
	}
	// $ANTLR end synpred32_cs

	partial void EnterRule_synpred33_cs_fragment();
	partial void LeaveRule_synpred33_cs_fragment();

	// $ANTLR start synpred33_cs
	private void synpred33_cs_fragment()
	{
		EnterRule_synpred33_cs_fragment();
		EnterRule("synpred33_cs_fragment", 349);
		var retval = new Antlr3AstNode("synpred33_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:900:4: ( 'dynamic' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:900:5: 'dynamic'
			{
			DebugLocation(900, 5);
			Match(input,122,Follow._122_in_synpred33_cs6581); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred33_cs_fragment", 349);
			LeaveRule("synpred33_cs_fragment", 349);
			LeaveRule_synpred33_cs_fragment();
		}
	}
	// $ANTLR end synpred33_cs

	partial void EnterRule_synpred34_cs_fragment();
	partial void LeaveRule_synpred34_cs_fragment();

	// $ANTLR start synpred34_cs
	private void synpred34_cs_fragment()
	{
		EnterRule_synpred34_cs_fragment();
		EnterRule("synpred34_cs_fragment", 350);
		var retval = new Antlr3AstNode("synpred34_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:926:62: ( 'else' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:926:63: 'else'
			{
			DebugLocation(926, 63);
			Match(input,123,Follow._123_in_synpred34_cs6748); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred34_cs_fragment", 350);
			LeaveRule("synpred34_cs_fragment", 350);
			LeaveRule_synpred34_cs_fragment();
		}
	}
	// $ANTLR end synpred34_cs

	partial void EnterRule_synpred35_cs_fragment();
	partial void LeaveRule_synpred35_cs_fragment();

	// $ANTLR start synpred35_cs
	private void synpred35_cs_fragment()
	{
		EnterRule_synpred35_cs_fragment();
		EnterRule("synpred35_cs_fragment", 351);
		var retval = new Antlr3AstNode("synpred35_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:955:2: ( local_variable_declaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:955:3: local_variable_declaration
			{
			DebugLocation(955, 3);
			PushFollow(Follow._local_variable_declaration_in_synpred35_cs6999);
			local_variable_declaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred35_cs_fragment", 351);
			LeaveRule("synpred35_cs_fragment", 351);
			LeaveRule_synpred35_cs_fragment();
		}
	}
	// $ANTLR end synpred35_cs

	partial void EnterRule_synpred36_cs_fragment();
	partial void LeaveRule_synpred36_cs_fragment();

	// $ANTLR start synpred36_cs
	private void synpred36_cs_fragment()
	{
		EnterRule_synpred36_cs_fragment();
		EnterRule("synpred36_cs_fragment", 352);
		var retval = new Antlr3AstNode("synpred36_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1007:2: ( local_variable_declaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1007:3: local_variable_declaration
			{
			DebugLocation(1007, 3);
			PushFollow(Follow._local_variable_declaration_in_synpred36_cs7412);
			local_variable_declaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred36_cs_fragment", 352);
			LeaveRule("synpred36_cs_fragment", 352);
			LeaveRule_synpred36_cs_fragment();
		}
	}
	// $ANTLR end synpred36_cs
	#endregion Rules

	#region Synpreds
	private bool EvaluatePredicate(System.Action fragment)
	{
		bool success = false;
		state.backtracking++;
		try { DebugBeginBacktrack(state.backtracking);
		int start = input.Mark();
		try
		{
			fragment();
		}
		catch ( RecognitionException re )
		{
			System.Console.Error.WriteLine("impossible: "+re);
		}
		success = !state.failed;
		input.Rewind(start);
		} finally { DebugEndBacktrack(state.backtracking, success); }
		state.backtracking--;
		state.failed=false;
		return success;
	}
	#endregion Synpreds


	#region DFA
	private DFA50 dfa50;
	private DFA72 dfa72;
	private DFA73 dfa73;

	protected override void InitDFAs()
	{
		base.InitDFAs();
		dfa50 = new DFA50( this );
		dfa72 = new DFA72( this, SpecialStateTransition72 );
		dfa73 = new DFA73( this, SpecialStateTransition73 );
	}

	private class DFA50 : DFA
	{
		private const string DFA50_eotS =
			"\x5\xFFFF";
		private const string DFA50_eofS =
			"\x1\x2\x3\xFFFF\x1\x2";
		private const string DFA50_minS =
			"\x1\xA\x1\x5\x2\xFFFF\x1\xA";
		private const string DFA50_maxS =
			"\x1\xCB\x1\xCC\x2\xFFFF\x1\xCB";
		private const string DFA50_acceptS =
			"\x2\xFFFF\x1\x1\x1\x2\x1\xFFFF";
		private const string DFA50_specialS =
			"\x5\xFFFF}>";
		private static readonly string[] DFA50_transitionS =
			{
				"\x1\x3\xA\xFFFF\x1\x2\x5\xFFFF\x1\x2\x6\xFFFF\x1\x2\xB\xFFFF\x1\x3\x1"+
				"\x2\x2\xFFFF\x1\x2\xB\xFFFF\x6\x2\x1\x3\xB\x2\x1\xFFFF\x6\x2\x1\xFFFF"+
				"\x3\x2\x1\x1\x4\x2\x1\xFFFF\x5\x2\x5\xFFFF\x1\x2\xB\xFFFF\x1\x2\x2\xFFFF"+
				"\x1\x2\x1\xFFFF\x1\x2\x3\xFFFF\x1\x2\x5\xFFFF\x1\x2\x2\xFFFF\x1\x2\x5"+
				"\xFFFF\x4\x2\x2\xFFFF\x2\x2\x3\xFFFF\x1\x2\x1\xFFFF\x1\x2\x2\xFFFF\x1"+
				"\x2\x2\xFFFF\x1\x2\x1\xFFFF\x1\x2\x4\xFFFF\x1\x2\x3\xFFFF\x2\x2\xA\xFFFF"+
				"\x1\x2\x6\xFFFF\x1\x2\x3\xFFFF\x1\x2\x1\xFFFF\x6\x2",
				"\x1\x3\xE\xFFFF\x1\x3\x5\xFFFF\x2\x3\x6\xFFFF\x3\x3\xB\xFFFF\x1\x3\x2"+
				"\xFFFF\x1\x3\x1\xFFFF\x1\x3\x4\xFFFF\x1\x3\x2\xFFFF\x1\x3\x4\xFFFF\x1"+
				"\x3\x1\xFFFF\x2\x3\x1\xFFFF\x2\x3\x1\xFFFF\x1\x2\x1\x3\x10\xFFFF\x1"+
				"\x4\x2\xFFFF\x1\x3\x1\xFFFF\x2\x3\x1\xFFFF\x6\x3\x1\xFFFF\x2\x3\x2\xFFFF"+
				"\x2\x3\x3\xFFFF\x4\x3\x1\xFFFF\x2\x3\x1\xFFFF\x1\x3\x3\xFFFF\x1\x3\x2"+
				"\xFFFF\x1\x3\x2\xFFFF\x1\x3\x2\xFFFF\x1\x3\x2\xFFFF\x1\x3\x2\xFFFF\x1"+
				"\x3\x1\xFFFF\x2\x3\x1\xFFFF\x3\x3\x1\xFFFF\x3\x3\x1\xFFFF\x1\x3\x2\xFFFF"+
				"\x1\x3\x2\xFFFF\x1\x3\x1\xFFFF\x1\x3\x4\xFFFF\x1\x3\x1\xFFFF\x1\x3\x1"+
				"\xFFFF\x4\x3\x2\xFFFF\x1\x3\x2\xFFFF\x1\x3\x2\xFFFF\x5\x3\x1\xFFFF\x2"+
				"\x3\x3\xFFFF\x1\x3\x1\xFFFF\x1\x3\x5\xFFFF\x1\x3",
				"",
				"",
				"\x1\x3\xA\xFFFF\x1\x2\x5\xFFFF\x1\x2\x6\xFFFF\x1\x2\xB\xFFFF\x1\x3\x1"+
				"\x2\x2\xFFFF\x1\x2\xB\xFFFF\x6\x2\x1\x3\xB\x2\x1\xFFFF\x6\x2\x1\xFFFF"+
				"\x3\x2\x1\x1\x4\x2\x1\xFFFF\x5\x2\x5\xFFFF\x1\x2\xB\xFFFF\x1\x2\x2\xFFFF"+
				"\x1\x2\x1\xFFFF\x1\x2\x3\xFFFF\x1\x2\x5\xFFFF\x1\x2\x2\xFFFF\x1\x2\x5"+
				"\xFFFF\x4\x2\x2\xFFFF\x2\x2\x3\xFFFF\x1\x2\x1\xFFFF\x1\x2\x2\xFFFF\x1"+
				"\x2\x2\xFFFF\x1\x2\x1\xFFFF\x1\x2\x4\xFFFF\x1\x2\x3\xFFFF\x2\x2\xA\xFFFF"+
				"\x1\x2\x6\xFFFF\x1\x2\x3\xFFFF\x1\x2\x1\xFFFF\x6\x2"
			};

		private static readonly short[] DFA50_eot = DFA.UnpackEncodedString(DFA50_eotS);
		private static readonly short[] DFA50_eof = DFA.UnpackEncodedString(DFA50_eofS);
		private static readonly char[] DFA50_min = DFA.UnpackEncodedStringToUnsignedChars(DFA50_minS);
		private static readonly char[] DFA50_max = DFA.UnpackEncodedStringToUnsignedChars(DFA50_maxS);
		private static readonly short[] DFA50_accept = DFA.UnpackEncodedString(DFA50_acceptS);
		private static readonly short[] DFA50_special = DFA.UnpackEncodedString(DFA50_specialS);
		private static readonly short[][] DFA50_transition;

		static DFA50()
		{
			int numStates = DFA50_transitionS.Length;
			DFA50_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA50_transition[i] = DFA.UnpackEncodedString(DFA50_transitionS[i]);
			}
		}

		public DFA50( BaseRecognizer recognizer )
		{
			this.recognizer = recognizer;
			this.decisionNumber = 50;
			this.eot = DFA50_eot;
			this.eof = DFA50_eof;
			this.min = DFA50_min;
			this.max = DFA50_max;
			this.accept = DFA50_accept;
			this.special = DFA50_special;
			this.transition = DFA50_transition;
		}

		public override string Description { get { return "197:6: ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private class DFA72 : DFA
	{
		private const string DFA72_eotS =
			"\x10\xFFFF";
		private const string DFA72_eofS =
			"\x10\xFFFF";
		private const string DFA72_minS =
			"\x1\x1B\x1\xA\x1\xFFFF\x1\x2F\x1\x1B\x1\x15\x1\x1B\x1\xFFFF\x1\xA\x2"+
			"\xFFFF\x1\xA\x2\x15\x2\xFFFF";
		private const string DFA72_maxS =
			"\x1\xC6\x1\x5B\x1\xFFFF\x1\x45\x3\xC6\x1\xFFFF\x1\x5B\x2\xFFFF\x1\x5B"+
			"\x2\xC6\x2\xFFFF";
		private const string DFA72_acceptS =
			"\x2\xFFFF\x1\x2\x4\xFFFF\x1\x3\x1\xFFFF\x2\x1\x3\xFFFF\x2\x1";
		private const string DFA72_specialS =
			"\x5\xFFFF\x1\x0\x6\xFFFF\x1\x1\x1\x2\x2\xFFFF}>";
		private static readonly string[] DFA72_transitionS =
			{
				"\x1\x1\x43\xFFFF\x1\x1\x1\xFFFF\x2\x1\x1\xFFFF\x2\x1\x3\xFFFF\x1\x2"+
				"\x1\xFFFF\x1\x1\x1\x2\x2\xFFFF\x1\x2\x4\xFFFF\x1\x2\x2\xFFFF\x1\x1\x1"+
				"\xFFFF\x1\x2\x1\x1\x1\xFFFF\x1\x1\x3\xFFFF\x1\x1\x2\xFFFF\x1\x2\x2\xFFFF"+
				"\x1\x1\x2\xFFFF\x1\x1\x2\xFFFF\x1\x2\x2\xFFFF\x1\x1\x1\xFFFF\x2\x1\x1"+
				"\xFFFF\x1\x2\x2\x1\x2\xFFFF\x1\x2\x1\x1\x1\xFFFF\x1\x1\x2\xFFFF\x1\x1"+
				"\x2\xFFFF\x1\x1\x1\xFFFF\x1\x1\x4\xFFFF\x1\x1\x1\xFFFF\x1\x2\x1\xFFFF"+
				"\x2\x1\x1\x2\x3\xFFFF\x1\x2\x5\xFFFF\x1\x1\x1\xFFFF\x2\x2\x2\xFFFF\x1"+
				"\x2\x1\x1\x1\xFFFF\x1\x3\x1\xFFFF\x1\x1\x1\xFFFF\x1\x1",
				"\x1\x6\x24\xFFFF\x1\x2\x15\xFFFF\x1\x2\xA\xFFFF\x1\x4\x1\x5\x7\xFFFF"+
				"\x1\x2\x1\xFFFF\x1\x2",
				"",
				"\x1\x7\x15\xFFFF\x1\x2",
				"\x1\x8\x43\xFFFF\x1\x8\x1\xFFFF\x2\x8\x1\xFFFF\x2\x8\x5\xFFFF\x1\x8"+
				"\xB\xFFFF\x1\x8\x2\xFFFF\x1\x8\x1\xFFFF\x1\x8\x3\xFFFF\x1\x8\x5\xFFFF"+
				"\x1\x8\x2\xFFFF\x1\x8\x5\xFFFF\x1\x8\x1\xFFFF\x2\x8\x2\xFFFF\x2\x8\x3"+
				"\xFFFF\x1\x8\x1\xFFFF\x1\x8\x2\xFFFF\x1\x8\x2\xFFFF\x1\x8\x1\xFFFF\x1"+
				"\x8\x4\xFFFF\x1\x8\x3\xFFFF\x2\x8\xA\xFFFF\x1\x8\x6\xFFFF\x1\x8\x3\xFFFF"+
				"\x1\x8\x1\xFFFF\x1\x8",
				"\x1\xA\x5\xFFFF\x1\x2\x2E\xFFFF\x1\x9\x14\xFFFF\x1\x2\x1\xFFFF\x2\x2"+
				"\x1\xFFFF\x2\x2\x3\xFFFF\x1\x2\x1\xFFFF\x2\x2\x2\xFFFF\x1\x2\x4\xFFFF"+
				"\x1\x2\x2\xFFFF\x1\x2\x1\xFFFF\x2\x2\x1\xFFFF\x1\x2\x3\xFFFF\x1\x2\x2"+
				"\xFFFF\x1\x2\x2\xFFFF\x1\x2\x2\xFFFF\x1\x2\x2\xFFFF\x1\x2\x2\xFFFF\x1"+
				"\x2\x1\xFFFF\x2\x2\x1\xFFFF\x3\x2\x2\xFFFF\x2\x2\x1\xFFFF\x1\x2\x2\xFFFF"+
				"\x1\x2\x2\xFFFF\x1\x2\x1\xFFFF\x1\x2\x4\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1"+
				"\xFFFF\x3\x2\x3\xFFFF\x1\x2\x5\xFFFF\x1\x2\x1\xFFFF\x2\x2\x2\xFFFF\x2"+
				"\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2",
				"\x1\xB\x43\xFFFF\x1\xB\x1\xFFFF\x2\xB\x1\xFFFF\x2\xB\x5\xFFFF\x1\xB"+
				"\xB\xFFFF\x1\xB\x2\xFFFF\x1\xB\x1\xFFFF\x1\xB\x3\xFFFF\x1\xB\x5\xFFFF"+
				"\x1\xB\x2\xFFFF\x1\xB\x5\xFFFF\x1\xB\x1\xFFFF\x2\xB\x2\xFFFF\x2\xB\x3"+
				"\xFFFF\x1\xB\x1\xFFFF\x1\xB\x2\xFFFF\x1\xB\x2\xFFFF\x1\xB\x1\xFFFF\x1"+
				"\xB\x4\xFFFF\x1\xB\x3\xFFFF\x2\xB\xA\xFFFF\x1\xB\x6\xFFFF\x1\xB\x3\xFFFF"+
				"\x1\xB\x1\xFFFF\x1\xB",
				"",
				"\x1\x6\x24\xFFFF\x1\x2\x15\xFFFF\x1\x2\xB\xFFFF\x1\xC\x7\xFFFF\x1\x2"+
				"\x1\xFFFF\x1\x2",
				"",
				"",
				"\x1\x6\x24\xFFFF\x1\x2\x15\xFFFF\x1\x2\xB\xFFFF\x1\xD\x7\xFFFF\x1\x2"+
				"\x1\xFFFF\x1\x2",
				"\x1\xA\x5\xFFFF\x1\x2\x2E\xFFFF\x1\x9\x14\xFFFF\x1\x2\x1\xFFFF\x2\x2"+
				"\x1\xFFFF\x2\x2\x3\xFFFF\x1\x2\x1\xFFFF\x2\x2\x2\xFFFF\x1\x2\x4\xFFFF"+
				"\x1\x2\x2\xFFFF\x1\x2\x1\xFFFF\x2\x2\x1\xFFFF\x1\x2\x3\xFFFF\x1\x2\x2"+
				"\xFFFF\x1\x2\x2\xFFFF\x1\x2\x2\xFFFF\x1\x2\x2\xFFFF\x1\x2\x2\xFFFF\x1"+
				"\x2\x1\xFFFF\x2\x2\x1\xFFFF\x3\x2\x2\xFFFF\x2\x2\x1\xFFFF\x1\x2\x2\xFFFF"+
				"\x1\x2\x2\xFFFF\x1\x2\x1\xFFFF\x1\x2\x4\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1"+
				"\xFFFF\x3\x2\x3\xFFFF\x1\x2\x5\xFFFF\x1\x2\x1\xFFFF\x2\x2\x2\xFFFF\x2"+
				"\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2",
				"\x1\xF\x5\xFFFF\x1\x2\x2E\xFFFF\x1\xE\x14\xFFFF\x1\x2\x1\xFFFF\x2\x2"+
				"\x1\xFFFF\x2\x2\x3\xFFFF\x1\x2\x1\xFFFF\x2\x2\x2\xFFFF\x1\x2\x4\xFFFF"+
				"\x1\x2\x2\xFFFF\x1\x2\x1\xFFFF\x2\x2\x1\xFFFF\x1\x2\x3\xFFFF\x1\x2\x2"+
				"\xFFFF\x1\x2\x2\xFFFF\x1\x2\x2\xFFFF\x1\x2\x2\xFFFF\x1\x2\x2\xFFFF\x1"+
				"\x2\x1\xFFFF\x2\x2\x1\xFFFF\x3\x2\x2\xFFFF\x2\x2\x1\xFFFF\x1\x2\x2\xFFFF"+
				"\x1\x2\x2\xFFFF\x1\x2\x1\xFFFF\x1\x2\x4\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1"+
				"\xFFFF\x3\x2\x3\xFFFF\x1\x2\x5\xFFFF\x1\x2\x1\xFFFF\x2\x2\x2\xFFFF\x2"+
				"\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2",
				"",
				""
			};

		private static readonly short[] DFA72_eot = DFA.UnpackEncodedString(DFA72_eotS);
		private static readonly short[] DFA72_eof = DFA.UnpackEncodedString(DFA72_eofS);
		private static readonly char[] DFA72_min = DFA.UnpackEncodedStringToUnsignedChars(DFA72_minS);
		private static readonly char[] DFA72_max = DFA.UnpackEncodedStringToUnsignedChars(DFA72_maxS);
		private static readonly short[] DFA72_accept = DFA.UnpackEncodedString(DFA72_acceptS);
		private static readonly short[] DFA72_special = DFA.UnpackEncodedString(DFA72_specialS);
		private static readonly short[][] DFA72_transition;

		static DFA72()
		{
			int numStates = DFA72_transitionS.Length;
			DFA72_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA72_transition[i] = DFA.UnpackEncodedString(DFA72_transitionS[i]);
			}
		}

		public DFA72( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 72;
			this.eot = DFA72_eot;
			this.eof = DFA72_eof;
			this.min = DFA72_min;
			this.max = DFA72_max;
			this.accept = DFA72_accept;
			this.special = DFA72_special;
			this.transition = DFA72_transition;
		}

		public override string Description { get { return "266:19: ( ( unbound_type_name )=> unbound_type_name | type | 'void' )"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition72(DFA dfa, int s, IIntStream _input)
	{
		ITokenStream input = (ITokenStream)_input;
		int _s = s;
		s = -1;
		int LA72_1 = input.LA(1);
		int index72_1 = input.Index;
		switch (_s)
		{
		case 0:
			{
				input.Rewind();
				if ((LA72_1==74) && (EvaluatePredicate(synpred12_cs_fragment))) {s = 9;}

				else if ((LA72_1==GT) && (EvaluatePredicate(synpred12_cs_fragment))) {s = 10;}

				else if ((LA72_1==IDENTIFIER||LA72_1==95||(LA72_1>=97 && LA72_1<=98)||(LA72_1>=100 && LA72_1<=101)||LA72_1==105||(LA72_1>=107 && LA72_1<=108)||LA72_1==111||LA72_1==116||LA72_1==119||(LA72_1>=121 && LA72_1<=122)||LA72_1==124||LA72_1==128||LA72_1==131||LA72_1==134||LA72_1==137||LA72_1==140||LA72_1==143||(LA72_1>=145 && LA72_1<=146)||(LA72_1>=148 && LA72_1<=150)||(LA72_1>=153 && LA72_1<=154)||LA72_1==156||LA72_1==159||LA72_1==162||LA72_1==164||LA72_1==169||LA72_1==171||(LA72_1>=173 && LA72_1<=175)||LA72_1==179||LA72_1==185||(LA72_1>=187 && LA72_1<=188)||(LA72_1>=191 && LA72_1<=192)||LA72_1==194||LA72_1==196||LA72_1==198)) {s = 2;}

				input.Seek(index72_1);
				break;
			}
		case 1:
			{
				input.Rewind();
				if ((LA72_1==74) && (EvaluatePredicate(synpred12_cs_fragment))) {s = 9;}

				else if ((LA72_1==GT) && (EvaluatePredicate(synpred12_cs_fragment))) {s = 10;}

				else if ((LA72_1==IDENTIFIER||LA72_1==95||(LA72_1>=97 && LA72_1<=98)||(LA72_1>=100 && LA72_1<=101)||LA72_1==105||(LA72_1>=107 && LA72_1<=108)||LA72_1==111||LA72_1==116||LA72_1==119||(LA72_1>=121 && LA72_1<=122)||LA72_1==124||LA72_1==128||LA72_1==131||LA72_1==134||LA72_1==137||LA72_1==140||LA72_1==143||(LA72_1>=145 && LA72_1<=146)||(LA72_1>=148 && LA72_1<=150)||(LA72_1>=153 && LA72_1<=154)||LA72_1==156||LA72_1==159||LA72_1==162||LA72_1==164||LA72_1==169||LA72_1==171||(LA72_1>=173 && LA72_1<=175)||LA72_1==179||LA72_1==185||(LA72_1>=187 && LA72_1<=188)||(LA72_1>=191 && LA72_1<=192)||LA72_1==194||LA72_1==196||LA72_1==198)) {s = 2;}

				input.Seek(index72_1);
				break;
			}
		case 2:
			{
				input.Rewind();
				if ((LA72_1==74) && (EvaluatePredicate(synpred12_cs_fragment))) {s = 14;}

				else if ((LA72_1==GT) && (EvaluatePredicate(synpred12_cs_fragment))) {s = 15;}

				else if ((LA72_1==IDENTIFIER||LA72_1==95||(LA72_1>=97 && LA72_1<=98)||(LA72_1>=100 && LA72_1<=101)||LA72_1==105||(LA72_1>=107 && LA72_1<=108)||LA72_1==111||LA72_1==116||LA72_1==119||(LA72_1>=121 && LA72_1<=122)||LA72_1==124||LA72_1==128||LA72_1==131||LA72_1==134||LA72_1==137||LA72_1==140||LA72_1==143||(LA72_1>=145 && LA72_1<=146)||(LA72_1>=148 && LA72_1<=150)||(LA72_1>=153 && LA72_1<=154)||LA72_1==156||LA72_1==159||LA72_1==162||LA72_1==164||LA72_1==169||LA72_1==171||(LA72_1>=173 && LA72_1<=175)||LA72_1==179||LA72_1==185||(LA72_1>=187 && LA72_1<=188)||(LA72_1>=191 && LA72_1<=192)||LA72_1==194||LA72_1==196||LA72_1==198)) {s = 2;}

				input.Seek(index72_1);
				break;
			}

		default:
			break;
		}

		if (s >= 0)
			return s;

		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 72, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}
	private class DFA73 : DFA
	{
		private const string DFA73_eotS =
			"\x7\xFFFF";
		private const string DFA73_eofS =
			"\x4\xFFFF\x1\x5\x2\xFFFF";
		private const string DFA73_minS =
			"\x1\xA\x1\x15\x1\xFFFF\x1\x15\x1\xA\x2\xFFFF";
		private const string DFA73_maxS =
			"\x1\x51\x1\x4A\x1\xFFFF\x1\x4A\x1\x2F\x2\xFFFF";
		private const string DFA73_acceptS =
			"\x2\xFFFF\x1\x2\x2\xFFFF\x1\x3\x1\x1";
		private const string DFA73_specialS =
			"\x4\xFFFF\x1\x0\x2\xFFFF}>";
		private static readonly string[] DFA73_transitionS =
			{
				"\x1\x2\x46\xFFFF\x1\x1",
				"\x1\x4\x34\xFFFF\x1\x3",
				"",
				"\x1\x4\x34\xFFFF\x1\x3",
				"\x1\x6\x24\xFFFF\x1\x5",
				"",
				""
			};

		private static readonly short[] DFA73_eot = DFA.UnpackEncodedString(DFA73_eotS);
		private static readonly short[] DFA73_eof = DFA.UnpackEncodedString(DFA73_eofS);
		private static readonly char[] DFA73_min = DFA.UnpackEncodedStringToUnsignedChars(DFA73_minS);
		private static readonly char[] DFA73_max = DFA.UnpackEncodedStringToUnsignedChars(DFA73_maxS);
		private static readonly short[] DFA73_accept = DFA.UnpackEncodedString(DFA73_acceptS);
		private static readonly short[] DFA73_special = DFA.UnpackEncodedString(DFA73_specialS);
		private static readonly short[][] DFA73_transition;

		static DFA73()
		{
			int numStates = DFA73_transitionS.Length;
			DFA73_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA73_transition[i] = DFA.UnpackEncodedString(DFA73_transitionS[i]);
			}
		}

		public DFA73( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 73;
			this.eot = DFA73_eot;
			this.eof = DFA73_eof;
			this.min = DFA73_min;
			this.max = DFA73_max;
			this.accept = DFA73_accept;
			this.special = DFA73_special;
			this.transition = DFA73_transition;
		}

		public override string Description { get { return "()* loopback of 276:3: ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )*"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition73(DFA dfa, int s, IIntStream _input)
	{
		ITokenStream input = (ITokenStream)_input;
		int _s = s;
		s = -1;
		int LA73_1 = input.LA(1);
		int index73_1 = input.Index;
		switch (_s)
		{
		case 0:
			{
				input.Rewind();
				if ((LA73_1==EOF||LA73_1==RPAREN)) {s = 5;}

				else if ((LA73_1==DOT) && (EvaluatePredicate(synpred13_cs_fragment))) {s = 6;}

				input.Seek(index73_1);
				break;
			}

		default:
			break;
		}

		if (s >= 0)
			return s;

		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 73, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}

	#endregion DFA

	#region Follow sets
	private static class Follow
	{
		public static readonly BitSet _namespace_body_in_compilation_unit76 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _151_in_namespace_declaration85 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _qualified_identifier_in_namespace_declaration89 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _namespace_block_in_namespace_declaration93 = new BitSet(new ulong[]{0x4000000000002UL});
		public static readonly BitSet _SEMI_in_namespace_declaration97 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _199_in_namespace_block106 = new BitSet(new ulong[]{0x200000000020000UL,0x8042004108000000UL,0x401410EA41806000UL,0x80AUL});
		public static readonly BitSet _namespace_body_in_namespace_block110 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x800UL});
		public static readonly BitSet _203_in_namespace_block115 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _extern_alias_directives_in_namespace_body124 = new BitSet(new ulong[]{0x200000000020002UL,0x8042004108000000UL,0x401410EA41806000UL,0xAUL});
		public static readonly BitSet _using_directives_in_namespace_body129 = new BitSet(new ulong[]{0x20002UL,0x8042004108000000UL,0x401410EA41806000UL,0xAUL});
		public static readonly BitSet _global_attributes_in_namespace_body134 = new BitSet(new ulong[]{0x20002UL,0x8042004108000000UL,0x401410EA41806000UL,0xAUL});
		public static readonly BitSet _namespace_member_declarations_in_namespace_body139 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _extern_alias_directive_in_extern_alias_directives148 = new BitSet(new ulong[]{0x2UL,0x8000000000000000UL});
		public static readonly BitSet _127_in_extern_alias_directive157 = new BitSet(new ulong[]{0x0UL,0x400000000UL});
		public static readonly BitSet _98_in_extern_alias_directive161 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_extern_alias_directive165 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_extern_alias_directive168 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _using_directive_in_using_directives176 = new BitSet(new ulong[]{0x200000000000002UL});
		public static readonly BitSet _using_alias_directive_in_using_directive186 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _using_namespace_directive_in_using_directive191 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _USING_in_using_alias_directive200 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_using_alias_directive204 = new BitSet(new ulong[]{0x0UL,0x200000UL});
		public static readonly BitSet _85_in_using_alias_directive208 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _namespace_or_type_name_in_using_alias_directive212 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_using_alias_directive216 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _USING_in_using_namespace_directive224 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _namespace_name_in_using_namespace_directive228 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_using_namespace_directive232 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _namespace_member_declaration_in_namespace_member_declarations240 = new BitSet(new ulong[]{0x20002UL,0x8042004108000000UL,0x401410EA41806000UL,0xAUL});
		public static readonly BitSet _namespace_declaration_in_namespace_member_declaration249 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attributes_in_namespace_member_declaration254 = new BitSet(new ulong[]{0x20000UL,0x8042004100000000UL,0x401410EA41006000UL,0xAUL});
		public static readonly BitSet _modifiers_in_namespace_member_declaration259 = new BitSet(new ulong[]{0x20000UL,0x42000000000000UL,0x10000200002000UL});
		public static readonly BitSet _type_declaration_in_namespace_member_declaration264 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _161_in_type_declaration278 = new BitSet(new ulong[]{0x0UL,0x2000000000000UL,0x10000000002000UL});
		public static readonly BitSet _class_declaration_in_type_declaration283 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _struct_declaration_in_type_declaration295 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_declaration_in_type_declaration307 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _class_declaration_in_type_declaration313 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _struct_declaration_in_type_declaration318 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_declaration_in_type_declaration323 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enum_declaration_in_type_declaration328 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _delegate_declaration_in_type_declaration333 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_qualified_identifier342 = new BitSet(new ulong[]{0x402UL});
		public static readonly BitSet _DOT_in_qualified_identifier345 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_qualified_identifier347 = new BitSet(new ulong[]{0x402UL});
		public static readonly BitSet _namespace_or_type_name_in_namespace_name358 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifier_in_modifiers367 = new BitSet(new ulong[]{0x2UL,0x8000004100000000UL,0x400410E841004000UL,0xAUL});
		public static readonly BitSet _attributes_in_class_member_declaration443 = new BitSet(new ulong[]{0x8020000UL,0xF6D69A7780000000UL,0xDA1CFAFED776F649UL,0x105FUL});
		public static readonly BitSet _modifiers_in_class_member_declaration447 = new BitSet(new ulong[]{0x8020000UL,0x76D69A3680000000UL,0x9A18EA169676B649UL,0x1055UL});
		public static readonly BitSet _114_in_class_member_declaration453 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_in_class_member_declaration457 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _constant_declarators_in_class_member_declaration461 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_class_member_declaration465 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _event_declaration_in_class_member_declaration470 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _161_in_class_member_declaration477 = new BitSet(new ulong[]{0x42900180C100020UL,0x16929A3680000000UL,0x9A18EA149676B249UL,0x51UL});
		public static readonly BitSet _method_declaration_in_class_member_declaration480 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_declaration_in_class_member_declaration491 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _class_declaration_in_class_member_declaration502 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _struct_declaration_in_class_member_declaration513 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_declaration_in_class_member_declaration519 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _194_in_class_member_declaration525 = new BitSet(new ulong[]{0x42900180C100020UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x51UL});
		public static readonly BitSet _method_declaration_in_class_member_declaration529 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_class_member_declaration534 = new BitSet(new ulong[]{0x42900180C100020UL,0x16909A3680000000UL,0x9A48EA149E769249UL,0x51UL});
		public static readonly BitSet _method_declaration_in_class_member_declaration548 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _property_declaration_in_class_member_declaration567 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_name_in_class_member_declaration590 = new BitSet(new ulong[]{0x400UL});
		public static readonly BitSet _DOT_in_class_member_declaration592 = new BitSet(new ulong[]{0x0UL,0x0UL,0x40000000000000UL});
		public static readonly BitSet _indexer_declaration_in_class_member_declaration594 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _indexer_declaration_in_class_member_declaration603 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _field_declaration_in_class_member_declaration616 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _operator_declaration_in_class_member_declaration634 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _class_declaration_in_class_member_declaration652 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _struct_declaration_in_class_member_declaration659 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enum_declaration_in_class_member_declaration665 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _delegate_declaration_in_class_member_declaration672 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _conversion_operator_declaration_in_class_member_declaration678 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constructor_declaration_in_class_member_declaration683 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _destructor_declaration_in_class_member_declaration689 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _182_in_primary_expression715 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _brackets_in_primary_expression719 = new BitSet(new ulong[]{0x400000000402UL,0x8000010UL});
		public static readonly BitSet _primary_expression_part_in_primary_expression723 = new BitSet(new ulong[]{0x400000000402UL,0x8000010UL});
		public static readonly BitSet _182_in_primary_expression739 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _brackets_in_primary_expression743 = new BitSet(new ulong[]{0x400000000402UL,0x8000010UL});
		public static readonly BitSet _primary_expression_part_in_primary_expression747 = new BitSet(new ulong[]{0x400000000402UL,0x8000010UL});
		public static readonly BitSet _primary_expression_start_in_primary_expression753 = new BitSet(new ulong[]{0x400000000402UL,0x8000010UL});
		public static readonly BitSet _primary_expression_part_in_primary_expression757 = new BitSet(new ulong[]{0x400000000402UL,0x8000010UL});
		public static readonly BitSet _152_in_primary_expression763 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0xD5UL});
		public static readonly BitSet _object_creation_expression_in_primary_expression791 = new BitSet(new ulong[]{0x400000000400UL,0x8000010UL});
		public static readonly BitSet _primary_expression_part_in_primary_expression795 = new BitSet(new ulong[]{0x400000000402UL,0x8000010UL});
		public static readonly BitSet _object_creation_expression_in_primary_expression807 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _anonymous_object_creation_expression_in_primary_expression830 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _sizeof_expression_in_primary_expression843 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _checked_expression_in_primary_expression854 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _unchecked_expression_in_primary_expression873 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _default_value_expression_in_primary_expression890 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _anonymous_method_expression_in_primary_expression903 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _predefined_type_in_primary_expression_start916 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_primary_expression_start941 = new BitSet(new ulong[]{0x0UL,0x20000UL});
		public static readonly BitSet _generic_argument_list_in_primary_expression_start943 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_primary_expression_start948 = new BitSet(new ulong[]{0x2UL,0x10000UL});
		public static readonly BitSet _80_in_primary_expression_start951 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_primary_expression_start955 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _182_in_primary_expression_start962 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _104_in_primary_expression_start968 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _paren_expression_in_primary_expression_start973 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _typeof_expression_in_primary_expression_start978 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _literal_in_primary_expression_start996 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _access_identifier_in_primary_expression_part1007 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _brackets_or_arguments_in_primary_expression_part1012 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _access_operator_in_access_identifier1020 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _type_or_generic_in_access_identifier1024 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _brackets_in_brackets_or_arguments1046 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _arguments_in_brackets_or_arguments1050 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _91_in_brackets1058 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6900009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_list_in_brackets1062 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _92_in_brackets1067 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _68_in_paren_expression1077 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_paren_expression1081 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_paren_expression1085 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _68_in_arguments1094 = new BitSet(new ulong[]{0x2429801C0C100020UL,0x16F19BF6800009B4UL,0xBE49EB14B7769249UL,0x1051UL});
		public static readonly BitSet _argument_list_in_arguments1098 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_arguments1103 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _argument_in_argument_list1112 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_argument_list1115 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EB14B7769249UL,0x1051UL});
		public static readonly BitSet _argument_in_argument_list1117 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _argument_name_in_argument1127 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EB14B7769249UL,0x1051UL});
		public static readonly BitSet _argument_value_in_argument1131 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _argument_value_in_argument1136 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_argument_name1143 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _79_in_argument_name1147 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_argument_value1155 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ref_variable_reference_in_argument_value1161 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _157_in_argument_value1167 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _variable_reference_in_argument_value1171 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _168_in_ref_variable_reference1179 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _68_in_ref_variable_reference1201 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_in_ref_variable_reference1205 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_ref_variable_reference1209 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EB1497769249UL,0x1051UL});
		public static readonly BitSet _ref_variable_reference_in_ref_variable_reference1214 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variable_reference_in_ref_variable_reference1218 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variable_reference_in_ref_variable_reference1254 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_variable_reference1264 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _rank_specifier_in_rank_specifiers1272 = new BitSet(new ulong[]{0x2UL,0x8000000UL});
		public static readonly BitSet _91_in_rank_specifier1290 = new BitSet(new ulong[]{0x0UL,0x10000400UL});
		public static readonly BitSet _dim_separators_in_rank_specifier1294 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _92_in_rank_specifier1299 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _74_in_dim_separators1308 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _type_name_in_delegate_creation_expression1321 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_delegate_creation_expression1325 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _type_name_in_delegate_creation_expression1329 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_delegate_creation_expression1333 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _anonymous_object_initializer_in_anonymous_object_creation_expression1344 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _199_in_anonymous_object_initializer1353 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000400UL,0x200621494668241UL,0x851UL});
		public static readonly BitSet _member_declarator_list_in_anonymous_object_initializer1357 = new BitSet(new ulong[]{0x0UL,0x400UL,0x0UL,0x800UL});
		public static readonly BitSet _74_in_anonymous_object_initializer1362 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x800UL});
		public static readonly BitSet _203_in_anonymous_object_initializer1367 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_declarator_in_member_declarator_list1375 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_member_declarator_list1379 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _member_declarator_in_member_declarator_list1381 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _identifier_in_member_declarator1393 = new BitSet(new ulong[]{0x400UL,0x220000UL});
		public static readonly BitSet _generic_argument_list_in_member_declarator1398 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_member_declarator1408 = new BitSet(new ulong[]{0x42900180C100020UL,0x16F19B7680000010UL,0xBE49EA1497769249UL,0x51UL});
		public static readonly BitSet _primary_or_array_creation_expression_in_member_declarator1412 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _85_in_member_declarator1422 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_member_declarator1426 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _array_creation_expression_in_primary_or_array_creation_expression1441 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _primary_expression_in_primary_or_array_creation_expression1446 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _152_in_array_creation_expression1457 = new BitSet(new ulong[]{0x8000000UL,0x16909A3688000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_in_array_creation_expression1465 = new BitSet(new ulong[]{0x0UL,0x8000000UL,0x0UL,0x80UL});
		public static readonly BitSet _91_in_array_creation_expression1470 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_list_in_array_creation_expression1474 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _92_in_array_creation_expression1478 = new BitSet(new ulong[]{0x400000000402UL,0x8000010UL,0x0UL,0x80UL});
		public static readonly BitSet _rank_specifiers_in_array_creation_expression1490 = new BitSet(new ulong[]{0x2UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _array_initializer_in_array_creation_expression1495 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _arguments_in_array_creation_expression1531 = new BitSet(new ulong[]{0x400000000400UL,0x8000000UL});
		public static readonly BitSet _invocation_part_in_array_creation_expression1535 = new BitSet(new ulong[]{0x400000000400UL,0x8000010UL});
		public static readonly BitSet _invocation_part_in_array_creation_expression1547 = new BitSet(new ulong[]{0x400000000400UL,0x8000010UL});
		public static readonly BitSet _arguments_in_array_creation_expression1553 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _array_initializer_in_array_creation_expression1575 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _rank_specifier_in_array_creation_expression1589 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _array_initializer_in_array_creation_expression1598 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _199_in_array_initializer1619 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF680000DB4UL,0xBE49EA1497769249UL,0x18D1UL});
		public static readonly BitSet _variable_initializer_list_in_array_initializer1623 = new BitSet(new ulong[]{0x0UL,0x400UL,0x0UL,0x800UL});
		public static readonly BitSet _74_in_array_initializer1628 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x800UL});
		public static readonly BitSet _203_in_array_initializer1633 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variable_initializer_in_variable_initializer_list1641 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_variable_initializer_list1644 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x10D1UL});
		public static readonly BitSet _variable_initializer_in_variable_initializer_list1646 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _expression_in_variable_initializer1656 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _array_initializer_in_variable_initializer1660 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _176_in_sizeof_expression1668 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_sizeof_expression1672 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _unmanaged_type_in_sizeof_expression1676 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_sizeof_expression1680 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _112_in_checked_expression1688 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_checked_expression1692 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_checked_expression1696 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_checked_expression1700 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _189_in_unchecked_expression1709 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_unchecked_expression1713 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_unchecked_expression1717 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_unchecked_expression1721 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _117_in_default_value_expression1730 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_default_value_expression1734 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_in_default_value_expression1738 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_default_value_expression1742 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _102_in_anonymous_method_expression1750 = new BitSet(new ulong[]{0x0UL,0x40000000000000UL});
		public static readonly BitSet _118_in_anonymous_method_expression1753 = new BitSet(new ulong[]{0x4000000000000UL,0x10UL,0x0UL,0x80UL});
		public static readonly BitSet _explicit_anonymous_function_signature_in_anonymous_method_expression1755 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _block_in_anonymous_method_expression1760 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _68_in_explicit_anonymous_function_signature1767 = new BitSet(new ulong[]{0x800008000000UL,0x16909A3680000000UL,0x9A08EB14B6769249UL,0x55UL});
		public static readonly BitSet _explicit_anonymous_function_parameter_list_in_explicit_anonymous_function_signature1771 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_explicit_anonymous_function_signature1776 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list1784 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_explicit_anonymous_function_parameter_list1789 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EB14B6769249UL,0x55UL});
		public static readonly BitSet _explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list1793 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _anonymous_function_parameter_modifier_in_explicit_anonymous_function_parameter1804 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_in_explicit_anonymous_function_parameter1809 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_explicit_anonymous_function_parameter1813 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_object_creation_expression1837 = new BitSet(new ulong[]{0x0UL,0x10UL,0x0UL,0x80UL});
		public static readonly BitSet _68_in_object_creation_expression1846 = new BitSet(new ulong[]{0x2429801C0C100020UL,0x16F19BF6800009B4UL,0xBE49EB14B7769249UL,0x1051UL});
		public static readonly BitSet _argument_list_in_object_creation_expression1850 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_object_creation_expression1855 = new BitSet(new ulong[]{0x2UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _object_or_collection_initializer_in_object_creation_expression1859 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _object_or_collection_initializer_in_object_creation_expression1870 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _199_in_object_or_collection_initializer1882 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x18D1UL});
		public static readonly BitSet _object_initializer_in_object_or_collection_initializer1885 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x800UL});
		public static readonly BitSet _collection_initializer_in_object_or_collection_initializer1889 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x800UL});
		public static readonly BitSet _203_in_object_or_collection_initializer1893 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _element_initializer_in_collection_initializer1903 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_collection_initializer1907 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x10D1UL});
		public static readonly BitSet _element_initializer_in_collection_initializer1909 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_collection_initializer1913 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _non_assignment_expression_in_element_initializer1922 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _199_in_element_initializer1928 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_list_in_element_initializer1932 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x800UL});
		public static readonly BitSet _203_in_element_initializer1936 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_initializer_in_object_initializer1951 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_object_initializer1955 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _member_initializer_in_object_initializer1957 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_object_initializer1961 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_member_initializer1970 = new BitSet(new ulong[]{0x0UL,0x200000UL});
		public static readonly BitSet _85_in_member_initializer1972 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x10D1UL});
		public static readonly BitSet _initializer_value_in_member_initializer1974 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_initializer_value1982 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _object_or_collection_initializer_in_initializer_value1988 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _186_in_typeof_expression2000 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_typeof_expression2004 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _unbound_type_name_in_typeof_expression2015 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _type_in_typeof_expression2026 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _194_in_typeof_expression2038 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_typeof_expression2043 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _unbound_type_name_start_in_unbound_type_name2058 = new BitSet(new ulong[]{0x400UL,0x20000UL});
		public static readonly BitSet _generic_dimension_specifier_in_unbound_type_name2077 = new BitSet(new ulong[]{0x400UL});
		public static readonly BitSet _unbound_type_name_part_in_unbound_type_name2081 = new BitSet(new ulong[]{0x400UL,0x20000UL});
		public static readonly BitSet _unbound_type_name_part_in_unbound_type_name2088 = new BitSet(new ulong[]{0x400UL,0x20000UL});
		public static readonly BitSet _generic_dimension_specifier_in_unbound_type_name2098 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_unbound_type_name_start2108 = new BitSet(new ulong[]{0x2UL,0x10000UL});
		public static readonly BitSet _80_in_unbound_type_name_start2111 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_unbound_type_name_start2113 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_unbound_type_name_part2122 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_unbound_type_name_part2126 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _81_in_generic_dimension_specifier2134 = new BitSet(new ulong[]{0x200000UL,0x400UL});
		public static readonly BitSet _commas_in_generic_dimension_specifier2138 = new BitSet(new ulong[]{0x200000UL});
		public static readonly BitSet _GT_in_generic_dimension_specifier2143 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _74_in_commas2152 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _namespace_or_type_name_in_type_name2168 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_or_generic_in_namespace_or_type_name2177 = new BitSet(new ulong[]{0x402UL,0x10000UL});
		public static readonly BitSet _80_in_namespace_or_type_name2180 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _type_or_generic_in_namespace_or_type_name2182 = new BitSet(new ulong[]{0x402UL});
		public static readonly BitSet _DOT_in_namespace_or_type_name2187 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _type_or_generic_in_namespace_or_type_name2189 = new BitSet(new ulong[]{0x402UL});
		public static readonly BitSet _identifier_in_type_or_generic2207 = new BitSet(new ulong[]{0x0UL,0x20000UL});
		public static readonly BitSet _generic_argument_list_in_type_or_generic2209 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_type_or_generic2214 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _qid_start_in_qid2225 = new BitSet(new ulong[]{0x400000000402UL});
		public static readonly BitSet _qid_part_in_qid2229 = new BitSet(new ulong[]{0x400000000402UL});
		public static readonly BitSet _predefined_type_in_qid_start2239 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_qid_start2256 = new BitSet(new ulong[]{0x0UL,0x20000UL});
		public static readonly BitSet _generic_argument_list_in_qid_start2258 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_qid_start2265 = new BitSet(new ulong[]{0x2UL,0x10000UL});
		public static readonly BitSet _80_in_qid_start2270 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_qid_start2274 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _literal_in_qid_start2281 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _access_identifier_in_qid_part2295 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _81_in_generic_argument_list2304 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_arguments_in_generic_argument_list2306 = new BitSet(new ulong[]{0x200000UL});
		public static readonly BitSet _GT_in_generic_argument_list2308 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_type_arguments2317 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_type_arguments2320 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_in_type_arguments2322 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _predefined_type_in_type2336 = new BitSet(new ulong[]{0x2UL,0xA000020UL});
		public static readonly BitSet _type_name_in_type2340 = new BitSet(new ulong[]{0x2UL,0xA000020UL});
		public static readonly BitSet _69_in_type2344 = new BitSet(new ulong[]{0x2UL,0x8000020UL});
		public static readonly BitSet _89_in_type2349 = new BitSet(new ulong[]{0x2UL,0x8000000UL});
		public static readonly BitSet _rank_specifiers_in_type2353 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _194_in_type2359 = new BitSet(new ulong[]{0x0UL,0x20UL});
		public static readonly BitSet _69_in_type2361 = new BitSet(new ulong[]{0x2UL,0x20UL});
		public static readonly BitSet _predefined_type_in_non_nullable_type2372 = new BitSet(new ulong[]{0x2UL,0x8000020UL});
		public static readonly BitSet _type_name_in_non_nullable_type2376 = new BitSet(new ulong[]{0x2UL,0x8000020UL});
		public static readonly BitSet _rank_specifiers_in_non_nullable_type2385 = new BitSet(new ulong[]{0x2UL,0x20UL});
		public static readonly BitSet _69_in_non_nullable_type2389 = new BitSet(new ulong[]{0x2UL,0x20UL});
		public static readonly BitSet _69_in_non_nullable_type2398 = new BitSet(new ulong[]{0x2UL,0x20UL});
		public static readonly BitSet _194_in_non_nullable_type2410 = new BitSet(new ulong[]{0x0UL,0x20UL});
		public static readonly BitSet _69_in_non_nullable_type2414 = new BitSet(new ulong[]{0x2UL,0x20UL});
		public static readonly BitSet _type_in_non_array_type2425 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_array_type2432 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_unmanaged_type2439 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_class_type2446 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_pointer_type2453 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SEMI_in_block2465 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _199_in_block2470 = new BitSet(new ulong[]{0x262D001C1C100020UL,0x17FD9FF6800009B4UL,0xFFE9EE14977E937DUL,0x18F5UL});
		public static readonly BitSet _statement_list_in_block2474 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x800UL});
		public static readonly BitSet _203_in_block2479 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _statement_in_statement_list2486 = new BitSet(new ulong[]{0x262D001C1C100022UL,0x17FD9FF6800009B4UL,0xFFE9EE14977E937DUL,0x10F5UL});
		public static readonly BitSet _assignment_in_expression2511 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _non_assignment_expression_in_expression2517 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_expression_list2526 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_expression_list2530 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_expression_list2534 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _unary_expression_in_assignment2544 = new BitSet(new ulong[]{0x200000UL,0x40285249UL,0x0UL,0x200UL});
		public static readonly BitSet _assignment_operator_in_assignment2548 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_assignment2552 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _cast_expression_in_unary_expression2569 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _primary_or_array_creation_expression_in_unary_expression2574 = new BitSet(new ulong[]{0x2UL,0x900UL});
		public static readonly BitSet _72_in_unary_expression2578 = new BitSet(new ulong[]{0x2UL,0x800UL});
		public static readonly BitSet _75_in_unary_expression2583 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _71_in_unary_expression2589 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _unary_expression_in_unary_expression2593 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _MINUS_in_unary_expression2599 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _unary_expression_in_unary_expression2603 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _61_in_unary_expression2609 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _unary_expression_in_unary_expression2613 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _204_in_unary_expression2619 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _unary_expression_in_unary_expression2623 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _pre_increment_expression_in_unary_expression2629 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _pre_decrement_expression_in_unary_expression2635 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _pointer_indirection_expression_in_unary_expression2641 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _addressof_expression_in_unary_expression2646 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _await_expression_in_unary_expression2651 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _103_in_await_expression2660 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _unary_expression_in_await_expression2662 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _68_in_cast_expression2671 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_in_cast_expression2675 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_cast_expression2679 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _unary_expression_in_cast_expression2683 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _85_in_assignment_operator2691 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _73_in_assignment_operator2695 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _76_in_assignment_operator2699 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _70_in_assignment_operator2703 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _78_in_assignment_operator2707 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _64_in_assignment_operator2711 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _67_in_assignment_operator2715 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _201_in_assignment_operator2719 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _94_in_assignment_operator2723 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _83_in_assignment_operator2727 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GT_in_assignment_operator2731 = new BitSet(new ulong[]{0x0UL,0x1000000UL});
		public static readonly BitSet _88_in_assignment_operator2733 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _72_in_pre_increment_expression2742 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _unary_expression_in_pre_increment_expression2746 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _75_in_pre_decrement_expression2755 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _unary_expression_in_pre_decrement_expression2759 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _69_in_pointer_indirection_expression2767 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _unary_expression_in_pointer_indirection_expression2771 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _66_in_addressof_expression2779 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _unary_expression_in_addressof_expression2783 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _lambda_expression_in_non_assignment_expression2805 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _query_expression_in_non_assignment_expression2816 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _conditional_expression_in_non_assignment_expression2822 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _unary_expression_in_multiplicative_expression2836 = new BitSet(new ulong[]{0x8000000000000002UL,0x2020UL});
		public static readonly BitSet _set_in_multiplicative_expression2841 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _unary_expression_in_multiplicative_expression2851 = new BitSet(new ulong[]{0x8000000000000002UL,0x2020UL});
		public static readonly BitSet _multiplicative_expression_in_additive_expression2861 = new BitSet(new ulong[]{0x400000002UL,0x80UL});
		public static readonly BitSet _set_in_additive_expression2864 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _multiplicative_expression_in_additive_expression2872 = new BitSet(new ulong[]{0x400000002UL,0x80UL});
		public static readonly BitSet _additive_expression_in_shift_expression2883 = new BitSet(new ulong[]{0x200002UL,0x40000UL});
		public static readonly BitSet _82_in_shift_expression2887 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _GT_in_shift_expression2889 = new BitSet(new ulong[]{0x200000UL});
		public static readonly BitSet _GT_in_shift_expression2891 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _additive_expression_in_shift_expression2894 = new BitSet(new ulong[]{0x200002UL,0x40000UL});
		public static readonly BitSet _shift_expression_in_relational_expression2904 = new BitSet(new ulong[]{0x200002UL,0x801120000UL,0x10000UL});
		public static readonly BitSet _set_in_relational_expression2911 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _shift_expression_in_relational_expression2921 = new BitSet(new ulong[]{0x200002UL,0x801120000UL,0x10000UL});
		public static readonly BitSet _set_in_relational_expression2930 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _non_nullable_type_in_relational_expression2938 = new BitSet(new ulong[]{0x200002UL,0x801120000UL,0x10000UL});
		public static readonly BitSet _relational_expression_in_equality_expression2952 = new BitSet(new ulong[]{0x4000000000000002UL,0x400000UL});
		public static readonly BitSet _set_in_equality_expression2959 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _relational_expression_in_equality_expression2967 = new BitSet(new ulong[]{0x4000000000000002UL,0x400000UL});
		public static readonly BitSet _equality_expression_in_and_expression2977 = new BitSet(new ulong[]{0x2UL,0x4UL});
		public static readonly BitSet _66_in_and_expression2980 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _equality_expression_in_and_expression2984 = new BitSet(new ulong[]{0x2UL,0x4UL});
		public static readonly BitSet _and_expression_in_exclusive_or_expression2994 = new BitSet(new ulong[]{0x2UL,0x20000000UL});
		public static readonly BitSet _93_in_exclusive_or_expression2997 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _and_expression_in_exclusive_or_expression3001 = new BitSet(new ulong[]{0x2UL,0x20000000UL});
		public static readonly BitSet _exclusive_or_expression_in_inclusive_or_expression3011 = new BitSet(new ulong[]{0x2UL,0x0UL,0x0UL,0x100UL});
		public static readonly BitSet _200_in_inclusive_or_expression3016 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _exclusive_or_expression_in_inclusive_or_expression3020 = new BitSet(new ulong[]{0x2UL,0x0UL,0x0UL,0x100UL});
		public static readonly BitSet _inclusive_or_expression_in_conditional_and_expression3030 = new BitSet(new ulong[]{0x2UL,0x2UL});
		public static readonly BitSet _65_in_conditional_and_expression3035 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _inclusive_or_expression_in_conditional_and_expression3039 = new BitSet(new ulong[]{0x2UL,0x2UL});
		public static readonly BitSet _conditional_and_expression_in_conditional_or_expression3049 = new BitSet(new ulong[]{0x2UL,0x0UL,0x0UL,0x400UL});
		public static readonly BitSet _202_in_conditional_or_expression3053 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _conditional_and_expression_in_conditional_or_expression3057 = new BitSet(new ulong[]{0x2UL,0x0UL,0x0UL,0x400UL});
		public static readonly BitSet _conditional_or_expression_in_null_coalescing_expression3068 = new BitSet(new ulong[]{0x2UL,0x4000000UL});
		public static readonly BitSet _90_in_null_coalescing_expression3073 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _conditional_or_expression_in_null_coalescing_expression3077 = new BitSet(new ulong[]{0x2UL,0x4000000UL});
		public static readonly BitSet _null_coalescing_expression_in_conditional_expression3087 = new BitSet(new ulong[]{0x2UL,0x2000000UL});
		public static readonly BitSet _89_in_conditional_expression3092 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_conditional_expression3096 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _79_in_conditional_expression3100 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_conditional_expression3104 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _102_in_lambda_expression3124 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000010UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _anonymous_function_signature_in_lambda_expression3127 = new BitSet(new ulong[]{0x0UL,0x800000UL});
		public static readonly BitSet _87_in_lambda_expression3131 = new BitSet(new ulong[]{0x242D001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x10D1UL});
		public static readonly BitSet _anonymous_function_body_in_lambda_expression3135 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _68_in_anonymous_function_signature3142 = new BitSet(new ulong[]{0x800008000000UL,0x16909A3680000000UL,0x9A08EB14B6769249UL,0x55UL});
		public static readonly BitSet _explicit_anonymous_function_parameter_list_in_anonymous_function_signature3145 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _implicit_anonymous_function_parameter_list_in_anonymous_function_signature3151 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_anonymous_function_signature3155 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _implicit_anonymous_function_parameter_list_in_anonymous_function_signature3160 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list3169 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_implicit_anonymous_function_parameter_list3174 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list3178 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _identifier_in_implicit_anonymous_function_parameter3188 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_anonymous_function_body3195 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _block_in_anonymous_function_body3200 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _from_clause_in_query_expression3212 = new BitSet(new ulong[]{0x0UL,0x0UL,0x200010060240UL,0x10UL});
		public static readonly BitSet _query_body_in_query_expression3216 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _query_body_clauses_in_query_body3226 = new BitSet(new ulong[]{0x0UL,0x0UL,0x200000000200UL});
		public static readonly BitSet _select_or_group_clause_in_query_body3231 = new BitSet(new ulong[]{0x2UL,0x0UL,0x8000UL});
		public static readonly BitSet _query_continuation_in_query_body3242 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _143_in_query_continuation3252 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_query_continuation3256 = new BitSet(new ulong[]{0x0UL,0x0UL,0x200010060240UL,0x10UL});
		public static readonly BitSet _query_body_in_query_continuation3260 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _query_body_clause_in_query_body_clauses3267 = new BitSet(new ulong[]{0x2UL,0x0UL,0x10060040UL,0x10UL});
		public static readonly BitSet _from_clause_in_query_body_clause3276 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _let_clause_in_query_body_clause3281 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _where_clause_in_query_body_clause3286 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _join_clause_in_query_body_clause3291 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _orderby_clause_in_query_body_clause3296 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _134_in_from_clause3303 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_in_from_clause3307 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_from_clause3312 = new BitSet(new ulong[]{0x0UL,0x0UL,0x800UL});
		public static readonly BitSet _139_in_from_clause3316 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_from_clause3320 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _145_in_join_clause3328 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_in_join_clause3332 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_join_clause3337 = new BitSet(new ulong[]{0x0UL,0x0UL,0x800UL});
		public static readonly BitSet _139_in_join_clause3341 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_join_clause3345 = new BitSet(new ulong[]{0x0UL,0x0UL,0x4000000UL});
		public static readonly BitSet _154_in_join_clause3349 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_join_clause3353 = new BitSet(new ulong[]{0x0UL,0x1000000000000000UL});
		public static readonly BitSet _124_in_join_clause3357 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_join_clause3361 = new BitSet(new ulong[]{0x2UL,0x0UL,0x8000UL});
		public static readonly BitSet _143_in_join_clause3364 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_join_clause3366 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _146_in_let_clause3376 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_let_clause3380 = new BitSet(new ulong[]{0x0UL,0x200000UL});
		public static readonly BitSet _85_in_let_clause3384 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_let_clause3388 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _156_in_orderby_clause3395 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _ordering_list_in_orderby_clause3399 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ordering_in_ordering_list3407 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_ordering_list3412 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _ordering_in_ordering_list3416 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _expression_in_ordering3426 = new BitSet(new ulong[]{0x2UL,0x80001000000000UL});
		public static readonly BitSet _ordering_direction_in_ordering3431 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _select_clause_in_select_or_group_clause3454 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _group_clause_in_select_or_group_clause3459 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _173_in_select_clause3467 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_select_clause3471 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _137_in_group_clause3479 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_group_clause3483 = new BitSet(new ulong[]{0x0UL,0x80000000000UL});
		public static readonly BitSet _107_in_group_clause3487 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_group_clause3491 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _196_in_where_clause3499 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _boolean_expression_in_where_clause3503 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_boolean_expression3511 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _global_attribute_in_global_attributes3523 = new BitSet(new ulong[]{0x2UL,0x8000000UL});
		public static readonly BitSet _91_in_global_attribute3533 = new BitSet(new ulong[]{0x0UL,0x2000000000UL,0x400000UL});
		public static readonly BitSet _global_attribute_target_specifier_in_global_attribute3537 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _attribute_list_in_global_attribute3541 = new BitSet(new ulong[]{0x0UL,0x10000400UL});
		public static readonly BitSet _74_in_global_attribute3545 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _92_in_global_attribute3550 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _global_attribute_target_in_global_attribute_target_specifier3559 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _79_in_global_attribute_target_specifier3563 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attribute_sections_in_attributes3585 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attribute_section_in_attribute_sections3594 = new BitSet(new ulong[]{0x2UL,0x8000000UL});
		public static readonly BitSet _91_in_attribute_section3604 = new BitSet(new ulong[]{0x8000000UL,0x3480083680000000UL,0x200661494668241UL,0x51UL});
		public static readonly BitSet _attribute_target_specifier_in_attribute_section3608 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _attribute_list_in_attribute_section3613 = new BitSet(new ulong[]{0x0UL,0x10000400UL});
		public static readonly BitSet _74_in_attribute_section3617 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _92_in_attribute_section3622 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attribute_target_in_attribute_target_specifier3631 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _79_in_attribute_target_specifier3635 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attribute_in_attribute_list3677 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_attribute_list3680 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _attribute_in_attribute_list3682 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _type_name_in_attribute3694 = new BitSet(new ulong[]{0x2UL,0x10UL});
		public static readonly BitSet _attribute_arguments_in_attribute3698 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _68_in_attribute_arguments3709 = new BitSet(new ulong[]{0x2429801C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _RPAREN_in_attribute_arguments3714 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _positional_argument_in_attribute_arguments3734 = new BitSet(new ulong[]{0x800008000000UL,0x1480083680000400UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _named_argument_in_attribute_arguments3753 = new BitSet(new ulong[]{0x800008000000UL,0x1480083680000400UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _74_in_attribute_arguments3769 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _positional_argument_in_attribute_arguments3771 = new BitSet(new ulong[]{0x800008000000UL,0x1480083680000400UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _RPAREN_in_attribute_arguments3782 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _positional_argument_in_positional_argument_list3796 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_positional_argument_list3799 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _positional_argument_in_positional_argument_list3801 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _attribute_argument_expression_in_positional_argument3812 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _named_argument_in_named_argument_list3821 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_named_argument_list3824 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _named_argument_in_named_argument_list3826 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _identifier_in_named_argument3837 = new BitSet(new ulong[]{0x0UL,0x200000UL});
		public static readonly BitSet _85_in_named_argument3841 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _attribute_argument_expression_in_named_argument3845 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_attribute_argument_expression3854 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _113_in_class_declaration3867 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _type_or_generic_in_class_declaration3870 = new BitSet(new ulong[]{0x0UL,0x8000UL,0x0UL,0x90UL});
		public static readonly BitSet _class_base_in_class_declaration3874 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x90UL});
		public static readonly BitSet _type_parameter_constraints_clauses_in_class_declaration3879 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _class_body_in_class_declaration3884 = new BitSet(new ulong[]{0x4000000000002UL});
		public static readonly BitSet _SEMI_in_class_declaration3888 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _79_in_class_base3901 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _interface_type_list_in_class_base3905 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_interface_type_list3915 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_interface_type_list3918 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_in_interface_type_list3922 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _199_in_class_body3933 = new BitSet(new ulong[]{0x8020000UL,0xF6D69A7788000000UL,0xDA1CFAFED776F649UL,0x185FUL});
		public static readonly BitSet _class_member_declarations_in_class_body3937 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x800UL});
		public static readonly BitSet _203_in_class_body3942 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _class_member_declaration_in_class_member_declarations3950 = new BitSet(new ulong[]{0x8020002UL,0xF6D69A7788000000UL,0xDA1CFAFED776F649UL,0x105FUL});
		public static readonly BitSet _114_in_constant_declaration3961 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_in_constant_declaration3965 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _constant_declarators_in_constant_declaration3969 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_constant_declaration3973 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constant_declarator_in_constant_declarators3981 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_constant_declarators3984 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _constant_declarator_in_constant_declarators3986 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _identifier_in_constant_declarator3996 = new BitSet(new ulong[]{0x2UL,0x200000UL});
		public static readonly BitSet _85_in_constant_declarator4001 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _constant_expression_in_constant_declarator4005 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_constant_expression4015 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variable_declarators_in_field_declaration4024 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_field_declaration4028 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variable_declarator_in_variable_declarators4036 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_variable_declarators4039 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _variable_declarator_in_variable_declarators4043 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _type_name_in_variable_declarator4053 = new BitSet(new ulong[]{0x2UL,0x200000UL});
		public static readonly BitSet _85_in_variable_declarator4056 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x10D1UL});
		public static readonly BitSet _variable_initializer_in_variable_declarator4060 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _method_header_in_method_declaration4074 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _method_body_in_method_declaration4078 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_name_in_method_header4086 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_method_header4089 = new BitSet(new ulong[]{0x800008000000UL,0x16909A3688000000UL,0x9A48EB15B6769249UL,0x55UL});
		public static readonly BitSet _formal_parameter_list_in_method_header4093 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_method_header4098 = new BitSet(new ulong[]{0x2UL,0x0UL,0x0UL,0x10UL});
		public static readonly BitSet _type_parameter_constraints_clauses_in_method_header4102 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _block_in_method_body4111 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _qid_in_member_name4119 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_name_in_property_declaration4131 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _199_in_property_declaration4135 = new BitSet(new ulong[]{0x0UL,0x8000000UL,0x406800004080UL});
		public static readonly BitSet _accessor_declarations_in_property_declaration4139 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x800UL});
		public static readonly BitSet _203_in_property_declaration4143 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attributes_in_accessor_declarations4151 = new BitSet(new ulong[]{0x0UL,0x0UL,0x406800004080UL});
		public static readonly BitSet _get_accessor_declaration_in_accessor_declarations4157 = new BitSet(new ulong[]{0x2UL,0x8000000UL,0x406800004000UL});
		public static readonly BitSet _attributes_in_accessor_declarations4161 = new BitSet(new ulong[]{0x2UL,0x0UL,0x406800004000UL});
		public static readonly BitSet _set_accessor_declaration_in_accessor_declarations4166 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _set_accessor_declaration_in_accessor_declarations4173 = new BitSet(new ulong[]{0x2UL,0x8000000UL,0x6800004080UL});
		public static readonly BitSet _attributes_in_accessor_declarations4177 = new BitSet(new ulong[]{0x2UL,0x0UL,0x6800004080UL});
		public static readonly BitSet _get_accessor_declaration_in_accessor_declarations4182 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _accessor_modifier_in_get_accessor_declaration4192 = new BitSet(new ulong[]{0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _135_in_get_accessor_declaration4197 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _accessor_body_in_get_accessor_declaration4201 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _accessor_modifier_in_set_accessor_declaration4209 = new BitSet(new ulong[]{0x0UL,0x0UL,0x400000000000UL});
		public static readonly BitSet _174_in_set_accessor_declaration4214 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _accessor_body_in_set_accessor_declaration4218 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _block_in_accessor_body4246 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _125_in_event_declaration4256 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_in_event_declaration4260 = new BitSet(new ulong[]{0x42900180C100020UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x51UL});
		public static readonly BitSet _member_name_in_event_declaration4275 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _199_in_event_declaration4279 = new BitSet(new ulong[]{0x0UL,0x208000000UL,0x20000000000UL});
		public static readonly BitSet _event_accessor_declarations_in_event_declaration4283 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x800UL});
		public static readonly BitSet _203_in_event_declaration4287 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variable_declarators_in_event_declaration4293 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_event_declaration4297 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifier_in_event_modifiers4309 = new BitSet(new ulong[]{0x2UL,0x8000004100000000UL,0x400410E841004000UL,0xAUL});
		public static readonly BitSet _attributes_in_event_accessor_declarations4318 = new BitSet(new ulong[]{0x0UL,0x200000000UL,0x20000000000UL});
		public static readonly BitSet _add_accessor_declaration_in_event_accessor_declarations4325 = new BitSet(new ulong[]{0x0UL,0x8000000UL,0x20000000000UL});
		public static readonly BitSet _attributes_in_event_accessor_declarations4329 = new BitSet(new ulong[]{0x0UL,0x0UL,0x20000000000UL});
		public static readonly BitSet _remove_accessor_declaration_in_event_accessor_declarations4334 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _remove_accessor_declaration_in_event_accessor_declarations4355 = new BitSet(new ulong[]{0x0UL,0x208000000UL});
		public static readonly BitSet _attributes_in_event_accessor_declarations4359 = new BitSet(new ulong[]{0x0UL,0x200000000UL});
		public static readonly BitSet _add_accessor_declaration_in_event_accessor_declarations4364 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _97_in_add_accessor_declaration4374 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _block_in_add_accessor_declaration4378 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _169_in_remove_accessor_declaration4386 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _block_in_remove_accessor_declaration4390 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ENUM_in_enum_declaration4402 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_enum_declaration4406 = new BitSet(new ulong[]{0x0UL,0x8000UL,0x0UL,0x80UL});
		public static readonly BitSet _enum_base_in_enum_declaration4410 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _enum_body_in_enum_declaration4415 = new BitSet(new ulong[]{0x4000000000002UL});
		public static readonly BitSet _SEMI_in_enum_declaration4419 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _79_in_enum_base4428 = new BitSet(new ulong[]{0x0UL,0x900000000000UL,0x9800880000101000UL});
		public static readonly BitSet _integral_type_in_enum_base4432 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _199_in_enum_body4440 = new BitSet(new ulong[]{0x8000000UL,0x1480083688000000UL,0x200621494668241UL,0x851UL});
		public static readonly BitSet _enum_member_declarations_in_enum_body4443 = new BitSet(new ulong[]{0x0UL,0x400UL,0x0UL,0x800UL});
		public static readonly BitSet _74_in_enum_body4445 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x800UL});
		public static readonly BitSet _203_in_enum_body4452 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enum_member_declaration_in_enum_member_declarations4460 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_enum_member_declarations4463 = new BitSet(new ulong[]{0x8000000UL,0x1480083688000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _enum_member_declaration_in_enum_member_declarations4465 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _attributes_in_enum_member_declaration4475 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_enum_member_declaration4480 = new BitSet(new ulong[]{0x2UL,0x200000UL});
		public static readonly BitSet _85_in_enum_member_declaration4485 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_enum_member_declaration4489 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _118_in_delegate_declaration4546 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _return_type_in_delegate_declaration4550 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_delegate_declaration4554 = new BitSet(new ulong[]{0x0UL,0x20010UL});
		public static readonly BitSet _variant_generic_parameter_list_in_delegate_declaration4557 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_delegate_declaration4565 = new BitSet(new ulong[]{0x800008000000UL,0x16909A3688000000UL,0x9A48EB15B6769249UL,0x55UL});
		public static readonly BitSet _formal_parameter_list_in_delegate_declaration4569 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_delegate_declaration4574 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x10UL});
		public static readonly BitSet _type_parameter_constraints_clauses_in_delegate_declaration4578 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_delegate_declaration4583 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifier_in_delegate_modifiers4591 = new BitSet(new ulong[]{0x2UL,0x8000004100000000UL,0x400410E841004000UL,0xAUL});
		public static readonly BitSet _81_in_variant_generic_parameter_list4601 = new BitSet(new ulong[]{0x8000000UL,0x1480083688000000UL,0x2006214B4668A41UL,0x51UL});
		public static readonly BitSet _variant_type_parameters_in_variant_generic_parameter_list4605 = new BitSet(new ulong[]{0x200000UL});
		public static readonly BitSet _GT_in_variant_generic_parameter_list4609 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variant_type_variable_name_in_variant_type_parameters4617 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_variant_type_parameters4620 = new BitSet(new ulong[]{0x8000000UL,0x1480083688000000UL,0x2006214B4668A41UL,0x51UL});
		public static readonly BitSet _variant_type_variable_name_in_variant_type_parameters4622 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _attributes_in_variant_type_variable_name4632 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x2006214B4668A41UL,0x51UL});
		public static readonly BitSet _variance_annotation_in_variant_type_variable_name4637 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _type_variable_name_in_variant_type_variable_name4642 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_parameter_constraints_clause_in_type_parameter_constraints_clauses4663 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_type_parameter_constraints_clauses4668 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x10UL});
		public static readonly BitSet _type_parameter_constraints_clause_in_type_parameter_constraints_clauses4672 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _196_in_type_parameter_constraints_clause4682 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _type_variable_name_in_type_parameter_constraints_clause4686 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _79_in_type_parameter_constraints_clause4690 = new BitSet(new ulong[]{0x8000000UL,0x1482083680000000UL,0x210621495668241UL,0x51UL});
		public static readonly BitSet _type_parameter_constraint_list_in_type_parameter_constraints_clause4694 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _set_in_type_parameter_constraint_list4757 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_type_parameter_constraint_list4768 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _secondary_constraint_list_in_type_parameter_constraint_list4772 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_type_parameter_constraint_list4779 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1000000UL});
		public static readonly BitSet _constructor_constraint_in_type_parameter_constraint_list4783 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _secondary_constraint_list_in_type_parameter_constraint_list4790 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_type_parameter_constraint_list4795 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1000000UL});
		public static readonly BitSet _constructor_constraint_in_type_parameter_constraint_list4799 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constructor_constraint_in_type_parameter_constraint_list4806 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _secondary_constraint_in_secondary_constraint_list4818 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_secondary_constraint_list4821 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _secondary_constraint_in_secondary_constraint_list4823 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _type_name_in_secondary_constraint4833 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_type_variable_name4843 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _152_in_constructor_constraint4851 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_constructor_constraint4855 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_constructor_constraint4859 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_return_type4867 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _194_in_return_type4873 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _formal_parameter_in_formal_parameter_list4880 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_formal_parameter_list4883 = new BitSet(new ulong[]{0x8000000UL,0x16909A3688000000UL,0x9A48EB15B6769249UL,0x55UL});
		public static readonly BitSet _formal_parameter_in_formal_parameter_list4885 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _attributes_in_formal_parameter4895 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A48EB15B6769249UL,0x55UL});
		public static readonly BitSet _fixed_parameter_in_formal_parameter4901 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _parameter_array_in_formal_parameter4905 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _95_in_formal_parameter4912 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _fixed_parameter_in_fixed_parameters4920 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_fixed_parameters4925 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A48EB14B6769249UL,0x55UL});
		public static readonly BitSet _fixed_parameter_in_fixed_parameters4929 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _parameter_modifier_in_fixed_parameter4940 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_in_fixed_parameter4945 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_fixed_parameter4949 = new BitSet(new ulong[]{0x2UL,0x200000UL});
		public static readonly BitSet _default_argument_in_fixed_parameter4953 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _85_in_default_argument4963 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_default_argument4965 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _160_in_parameter_array4988 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_in_parameter_array4992 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_parameter_array4996 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _141_in_interface_declaration5006 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_interface_declaration5010 = new BitSet(new ulong[]{0x0UL,0x28000UL,0x0UL,0x90UL});
		public static readonly BitSet _variant_generic_parameter_list_in_interface_declaration5014 = new BitSet(new ulong[]{0x0UL,0x8000UL,0x0UL,0x90UL});
		public static readonly BitSet _interface_base_in_interface_declaration5023 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x90UL});
		public static readonly BitSet _type_parameter_constraints_clauses_in_interface_declaration5028 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _interface_body_in_interface_declaration5033 = new BitSet(new ulong[]{0x4000000000002UL});
		public static readonly BitSet _SEMI_in_interface_declaration5037 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifier_in_interface_modifiers5047 = new BitSet(new ulong[]{0x2UL,0x8000004100000000UL,0x400410E841004000UL,0xAUL});
		public static readonly BitSet _79_in_interface_base5060 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _interface_type_list_in_interface_base5062 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _199_in_interface_body5070 = new BitSet(new ulong[]{0x8000000UL,0xB6909A7788000000UL,0xDA0CFAFCD776D249UL,0x85FUL});
		public static readonly BitSet _interface_member_declarations_in_interface_body5074 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x800UL});
		public static readonly BitSet _203_in_interface_body5079 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_member_declaration_in_interface_member_declarations5087 = new BitSet(new ulong[]{0x8000002UL,0xB6909A7788000000UL,0xDA0CFAFCD776D249UL,0x5FUL});
		public static readonly BitSet _attributes_in_interface_member_declaration5096 = new BitSet(new ulong[]{0x8000000UL,0xB6909A7780000000UL,0xDA0CFAFCD776D249UL,0x5FUL});
		public static readonly BitSet _modifiers_in_interface_member_declaration5102 = new BitSet(new ulong[]{0x8000000UL,0x36909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _194_in_interface_member_declaration5108 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _interface_method_declaration_in_interface_member_declaration5112 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_event_declaration_in_interface_member_declaration5118 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_interface_member_declaration5124 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x240621494668241UL,0x51UL});
		public static readonly BitSet _interface_method_declaration_in_interface_member_declaration5140 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_property_declaration_in_interface_member_declaration5165 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_indexer_declaration_in_interface_member_declaration5175 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_interface_property_declaration5192 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _199_in_interface_property_declaration5196 = new BitSet(new ulong[]{0x0UL,0x8000000UL,0x400000000080UL});
		public static readonly BitSet _interface_accessor_declarations_in_interface_property_declaration5200 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x800UL});
		public static readonly BitSet _203_in_interface_property_declaration5204 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_interface_method_declaration5212 = new BitSet(new ulong[]{0x0UL,0x20010UL});
		public static readonly BitSet _generic_argument_list_in_interface_method_declaration5216 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_interface_method_declaration5224 = new BitSet(new ulong[]{0x800008000000UL,0x16909A3688000000UL,0x9A48EB15B6769249UL,0x55UL});
		public static readonly BitSet _formal_parameter_list_in_interface_method_declaration5228 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_interface_method_declaration5233 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x10UL});
		public static readonly BitSet _type_parameter_constraints_clauses_in_interface_method_declaration5237 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_interface_method_declaration5242 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _125_in_interface_event_declaration5253 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_in_interface_event_declaration5257 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_interface_event_declaration5261 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_interface_event_declaration5265 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _182_in_interface_indexer_declaration5277 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _91_in_interface_indexer_declaration5281 = new BitSet(new ulong[]{0x8000000UL,0x16909A3688000000UL,0x9A48EB15B6769249UL,0x55UL});
		public static readonly BitSet _formal_parameter_list_in_interface_indexer_declaration5285 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _92_in_interface_indexer_declaration5289 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _199_in_interface_indexer_declaration5293 = new BitSet(new ulong[]{0x0UL,0x8000000UL,0x400000000080UL});
		public static readonly BitSet _interface_accessor_declarations_in_interface_indexer_declaration5297 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x800UL});
		public static readonly BitSet _203_in_interface_indexer_declaration5301 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attributes_in_interface_accessor_declarations5309 = new BitSet(new ulong[]{0x0UL,0x0UL,0x400000000080UL});
		public static readonly BitSet _interface_get_accessor_declaration_in_interface_accessor_declarations5318 = new BitSet(new ulong[]{0x2UL,0x8000000UL,0x400000000000UL});
		public static readonly BitSet _attributes_in_interface_accessor_declarations5322 = new BitSet(new ulong[]{0x2UL,0x0UL,0x400000000000UL});
		public static readonly BitSet _interface_set_accessor_declaration_in_interface_accessor_declarations5327 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_set_accessor_declaration_in_interface_accessor_declarations5334 = new BitSet(new ulong[]{0x2UL,0x8000000UL,0x80UL});
		public static readonly BitSet _attributes_in_interface_accessor_declarations5338 = new BitSet(new ulong[]{0x2UL,0x0UL,0x80UL});
		public static readonly BitSet _interface_get_accessor_declaration_in_interface_accessor_declarations5343 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _135_in_interface_get_accessor_declaration5353 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_interface_get_accessor_declaration5357 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _174_in_interface_set_accessor_declaration5367 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_interface_set_accessor_declaration5371 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifier_in_method_modifiers5381 = new BitSet(new ulong[]{0x2UL,0x8000004100000000UL,0x400410E841004000UL,0xAUL});
		public static readonly BitSet _180_in_struct_declaration5393 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _type_or_generic_in_struct_declaration5397 = new BitSet(new ulong[]{0x0UL,0x8000UL,0x0UL,0x90UL});
		public static readonly BitSet _struct_interfaces_in_struct_declaration5401 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x90UL});
		public static readonly BitSet _type_parameter_constraints_clauses_in_struct_declaration5406 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _struct_body_in_struct_declaration5411 = new BitSet(new ulong[]{0x4000000000002UL});
		public static readonly BitSet _SEMI_in_struct_declaration5415 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _struct_modifier_in_struct_modifiers5424 = new BitSet(new ulong[]{0x2UL,0x0UL,0x4000006801004000UL});
		public static readonly BitSet _79_in_struct_interfaces5461 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _interface_type_list_in_struct_interfaces5465 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _199_in_struct_body5472 = new BitSet(new ulong[]{0x8020000UL,0xF6D69A7788000000UL,0xDA1CFAFED776F649UL,0x85FUL});
		public static readonly BitSet _struct_member_declarations_in_struct_body5476 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x800UL});
		public static readonly BitSet _203_in_struct_body5481 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _struct_member_declaration_in_struct_member_declarations5488 = new BitSet(new ulong[]{0x8020002UL,0xF6D69A7788000000UL,0xDA1CFAFED776F649UL,0x5FUL});
		public static readonly BitSet _attributes_in_struct_member_declaration5497 = new BitSet(new ulong[]{0x8020000UL,0xF6D69A7780000000UL,0xDA1CFAFED776F649UL,0x5FUL});
		public static readonly BitSet _modifiers_in_struct_member_declaration5502 = new BitSet(new ulong[]{0x8020000UL,0x76D69A3680000000UL,0x9A18EA169676B649UL,0x55UL});
		public static readonly BitSet _114_in_struct_member_declaration5508 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_in_struct_member_declaration5512 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _constant_declarators_in_struct_member_declaration5516 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_struct_member_declaration5520 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _event_declaration_in_struct_member_declaration5525 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _161_in_struct_member_declaration5532 = new BitSet(new ulong[]{0x42900180C100020UL,0x16929A3680000000UL,0x9A18EA149676B249UL,0x51UL});
		public static readonly BitSet _method_declaration_in_struct_member_declaration5535 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_declaration_in_struct_member_declaration5546 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _class_declaration_in_struct_member_declaration5557 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _struct_declaration_in_struct_member_declaration5568 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_declaration_in_struct_member_declaration5575 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _class_declaration_in_struct_member_declaration5581 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _194_in_struct_member_declaration5588 = new BitSet(new ulong[]{0x42900180C100020UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x51UL});
		public static readonly BitSet _method_declaration_in_struct_member_declaration5592 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_struct_member_declaration5597 = new BitSet(new ulong[]{0x42900180C100020UL,0x16909A3680000000UL,0x9A48EA149E769249UL,0x51UL});
		public static readonly BitSet _method_declaration_in_struct_member_declaration5611 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _property_declaration_in_struct_member_declaration5630 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_name_in_struct_member_declaration5653 = new BitSet(new ulong[]{0x400UL});
		public static readonly BitSet _DOT_in_struct_member_declaration5655 = new BitSet(new ulong[]{0x0UL,0x0UL,0x40000000000000UL});
		public static readonly BitSet _indexer_declaration_in_struct_member_declaration5657 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _indexer_declaration_in_struct_member_declaration5666 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _field_declaration_in_struct_member_declaration5679 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _operator_declaration_in_struct_member_declaration5697 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _struct_declaration_in_struct_member_declaration5715 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enum_declaration_in_struct_member_declaration5721 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _delegate_declaration_in_struct_member_declaration5728 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _conversion_operator_declaration_in_struct_member_declaration5734 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constructor_declaration_in_struct_member_declaration5739 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _indexer_declarator_in_indexer_declaration5756 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _199_in_indexer_declaration5760 = new BitSet(new ulong[]{0x0UL,0x8000000UL,0x406800004080UL});
		public static readonly BitSet _accessor_declarations_in_indexer_declaration5764 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x800UL});
		public static readonly BitSet _203_in_indexer_declaration5768 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _182_in_indexer_declarator5778 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _91_in_indexer_declarator5782 = new BitSet(new ulong[]{0x8000000UL,0x16909A3688000000UL,0x9A48EB15B6769249UL,0x55UL});
		public static readonly BitSet _formal_parameter_list_in_indexer_declarator5786 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _92_in_indexer_declarator5790 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _operator_declarator_in_operator_declaration5801 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _operator_body_in_operator_declaration5805 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _155_in_operator_declarator5813 = new BitSet(new ulong[]{0xE020000400300000UL,0x215629A4UL,0x0UL,0x1100UL});
		public static readonly BitSet _set_in_operator_declarator5821 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_operator_declarator5831 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_in_operator_declarator5835 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_operator_declarator5839 = new BitSet(new ulong[]{0x800000000000UL,0x400UL});
		public static readonly BitSet _binary_operator_declarator_in_operator_declarator5842 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _unary_operator_declarator_in_operator_declarator5846 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _overloadable_unary_operator_in_operator_declarator5853 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _unary_operator_declarator_in_operator_declarator5857 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _overloadable_binary_operator_in_operator_declarator5863 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _binary_operator_declarator_in_operator_declarator5867 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _RPAREN_in_unary_operator_declarator5879 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _74_in_binary_operator_declarator5922 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_in_binary_operator_declarator5926 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_binary_operator_declarator5930 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_binary_operator_declarator5934 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _69_in_overloadable_binary_operator5945 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _77_in_overloadable_binary_operator5949 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _63_in_overloadable_binary_operator5953 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _66_in_overloadable_binary_operator5957 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _200_in_overloadable_binary_operator5961 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _93_in_overloadable_binary_operator5965 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _82_in_overloadable_binary_operator5969 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GT_in_overloadable_binary_operator5973 = new BitSet(new ulong[]{0x200000UL});
		public static readonly BitSet _GT_in_overloadable_binary_operator5975 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _86_in_overloadable_binary_operator5979 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _62_in_overloadable_binary_operator5983 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GT_in_overloadable_binary_operator5987 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _81_in_overloadable_binary_operator5991 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _88_in_overloadable_binary_operator5995 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _84_in_overloadable_binary_operator5999 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _conversion_operator_declarator_in_conversion_operator_declaration6009 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _operator_body_in_conversion_operator_declaration6013 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _set_in_conversion_operator_declarator6021 = new BitSet(new ulong[]{0x0UL,0x0UL,0x8000000UL});
		public static readonly BitSet _155_in_conversion_operator_declarator6030 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_in_conversion_operator_declarator6034 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_conversion_operator_declarator6038 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_in_conversion_operator_declarator6042 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_conversion_operator_declarator6046 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_conversion_operator_declarator6050 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _block_in_operator_body6058 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constructor_declarator_in_constructor_declaration6068 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _constructor_body_in_constructor_declaration6072 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_constructor_declarator6080 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_constructor_declarator6084 = new BitSet(new ulong[]{0x800008000000UL,0x16909A3688000000UL,0x9A48EB15B6769249UL,0x55UL});
		public static readonly BitSet _formal_parameter_list_in_constructor_declarator6088 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_constructor_declarator6093 = new BitSet(new ulong[]{0x2UL,0x8000UL});
		public static readonly BitSet _constructor_initializer_in_constructor_declarator6097 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _79_in_constructor_initializer6106 = new BitSet(new ulong[]{0x0UL,0x10000000000UL,0x40000000000000UL});
		public static readonly BitSet _set_in_constructor_initializer6110 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_constructor_initializer6120 = new BitSet(new ulong[]{0x2429801C0C100020UL,0x16F19BF6800009B4UL,0xBE49EB14B7769249UL,0x1051UL});
		public static readonly BitSet _argument_list_in_constructor_initializer6124 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_constructor_initializer6129 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _block_in_constructor_body6137 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _204_in_destructor_declaration6153 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_destructor_declaration6156 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_destructor_declaration6160 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_destructor_declaration6164 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _destructor_body_in_destructor_declaration6169 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _block_in_destructor_body6177 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _invocation_start_in_invocation_expression6187 = new BitSet(new ulong[]{0x400000000400UL,0x8000010UL});
		public static readonly BitSet _arguments_in_invocation_expression6209 = new BitSet(new ulong[]{0x400000000400UL,0x8000000UL});
		public static readonly BitSet _invocation_part_in_invocation_expression6213 = new BitSet(new ulong[]{0x400000000400UL,0x8000010UL});
		public static readonly BitSet _invocation_part_in_invocation_expression6224 = new BitSet(new ulong[]{0x400000000400UL,0x8000010UL});
		public static readonly BitSet _arguments_in_invocation_expression6230 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _predefined_type_in_invocation_start6238 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_invocation_start6255 = new BitSet(new ulong[]{0x0UL,0x20000UL});
		public static readonly BitSet _generic_argument_list_in_invocation_start6259 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _182_in_invocation_start6264 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _104_in_invocation_start6270 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_invocation_start6275 = new BitSet(new ulong[]{0x2UL,0x10000UL});
		public static readonly BitSet _80_in_invocation_start6280 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_invocation_start6284 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _typeof_expression_in_invocation_start6291 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _access_identifier_in_invocation_part6314 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _brackets_in_invocation_part6319 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _declaration_statement_in_statement6336 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _labeled_statement_in_statement6351 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _embedded_statement_in_statement6356 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _block_in_embedded_statement6366 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _selection_statement_in_embedded_statement6371 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _iteration_statement_in_embedded_statement6377 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _jump_statement_in_embedded_statement6383 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _try_statement_in_embedded_statement6390 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _checked_statement_in_embedded_statement6395 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _unchecked_statement_in_embedded_statement6400 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _lock_statement_in_embedded_statement6405 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _using_statement_in_embedded_statement6410 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _yield_statement_in_embedded_statement6416 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _unsafe_statement_in_embedded_statement6422 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _fixed_statement_in_embedded_statement6427 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_statement_in_embedded_statement6432 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _130_in_fixed_statement6442 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_fixed_statement6446 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _pointer_type_in_fixed_statement6450 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _fixed_pointer_declarators_in_fixed_statement6452 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_fixed_statement6456 = new BitSet(new ulong[]{0x262D001C1C100020UL,0x17F99FF6800009B4UL,0xFFE9EE14977E937DUL,0x10F1UL});
		public static readonly BitSet _embedded_statement_in_fixed_statement6460 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _fixed_pointer_declarator_in_fixed_pointer_declarators6468 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_fixed_pointer_declarators6473 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _fixed_pointer_declarator_in_fixed_pointer_declarators6477 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _identifier_in_fixed_pointer_declarator6487 = new BitSet(new ulong[]{0x0UL,0x200000UL});
		public static readonly BitSet _85_in_fixed_pointer_declarator6491 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _fixed_pointer_initializer_in_fixed_pointer_declarator6495 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_fixed_pointer_initializer6505 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _190_in_unsafe_statement6512 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _block_in_unsafe_statement6516 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_labeled_statement6523 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _79_in_labeled_statement6527 = new BitSet(new ulong[]{0x262D001C1C100020UL,0x17FD9FF6800009B4UL,0xFFE9EE14977E937DUL,0x10F5UL});
		public static readonly BitSet _statement_in_labeled_statement6531 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _local_variable_declaration_in_declaration_statement6540 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _local_constant_declaration_in_declaration_statement6546 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_declaration_statement6549 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _local_variable_type_in_local_variable_declaration6557 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _local_variable_declarators_in_local_variable_declaration6561 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _192_in_local_variable_type6575 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _122_in_local_variable_type6586 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_local_variable_type6591 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _local_variable_declarator_in_local_variable_declarators6599 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_local_variable_declarators6602 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _local_variable_declarator_in_local_variable_declarators6604 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _identifier_in_local_variable_declarator6614 = new BitSet(new ulong[]{0x2UL,0x200000UL});
		public static readonly BitSet _85_in_local_variable_declarator6617 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE4BEA1497769249UL,0x10D1UL});
		public static readonly BitSet _local_variable_initializer_in_local_variable_declarator6621 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_local_variable_initializer6632 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _array_initializer_in_local_variable_initializer6637 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _stackalloc_initializer_in_local_variable_initializer6643 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _177_in_stackalloc_initializer6650 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _unmanaged_type_in_stackalloc_initializer6654 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _91_in_stackalloc_initializer6658 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_stackalloc_initializer6662 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _92_in_stackalloc_initializer6666 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _114_in_local_constant_declaration6674 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_in_local_constant_declaration6678 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _constant_declarators_in_local_constant_declaration6682 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_expression_statement6690 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_expression_statement6694 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_statement_expression6704 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _if_statement_in_selection_statement6713 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _switch_statement_in_selection_statement6718 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IF_in_if_statement6728 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_if_statement6732 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _boolean_expression_in_if_statement6736 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_if_statement6740 = new BitSet(new ulong[]{0x262D001C1C100020UL,0x17F99FF6800009B4UL,0xFFE9EE14977E937DUL,0x10F1UL});
		public static readonly BitSet _embedded_statement_in_if_statement6744 = new BitSet(new ulong[]{0x2UL,0x800000000000000UL});
		public static readonly BitSet _else_statement_in_if_statement6753 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _123_in_else_statement6764 = new BitSet(new ulong[]{0x262D001C1C100020UL,0x17F99FF6800009B4UL,0xFFE9EE14977E937DUL,0x10F1UL});
		public static readonly BitSet _embedded_statement_in_else_statement6768 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _181_in_switch_statement6776 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_switch_statement6780 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_switch_statement6784 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_switch_statement6788 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _switch_block_in_switch_statement6792 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _199_in_switch_block6800 = new BitSet(new ulong[]{0x0UL,0x20200000000000UL,0x0UL,0x800UL});
		public static readonly BitSet _switch_sections_in_switch_block6804 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x800UL});
		public static readonly BitSet _203_in_switch_block6809 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _switch_section_in_switch_sections6817 = new BitSet(new ulong[]{0x2UL,0x20200000000000UL});
		public static readonly BitSet _switch_labels_in_switch_section6826 = new BitSet(new ulong[]{0x262D001C1C100020UL,0x17FD9FF6800009B4UL,0xFFE9EE14977E937DUL,0x10F5UL});
		public static readonly BitSet _statement_list_in_switch_section6830 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _switch_label_in_switch_labels6838 = new BitSet(new ulong[]{0x2UL,0x20200000000000UL});
		public static readonly BitSet _109_in_switch_label6848 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _constant_expression_in_switch_label6852 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _79_in_switch_label6856 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _117_in_switch_label6863 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _79_in_switch_label6867 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _while_statement_in_iteration_statement6876 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _do_statement_in_iteration_statement6881 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _for_statement_in_iteration_statement6886 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _foreach_statement_in_iteration_statement6891 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _197_in_while_statement6899 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_while_statement6903 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _boolean_expression_in_while_statement6907 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_while_statement6911 = new BitSet(new ulong[]{0x262D001C1C100020UL,0x17F99FF6800009B4UL,0xFFE9EE14977E937DUL,0x10F1UL});
		public static readonly BitSet _embedded_statement_in_while_statement6915 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _120_in_do_statement6923 = new BitSet(new ulong[]{0x262D001C1C100020UL,0x17F99FF6800009B4UL,0xFFE9EE14977E937DUL,0x10F1UL});
		public static readonly BitSet _embedded_statement_in_do_statement6927 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _197_in_do_statement6931 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_do_statement6935 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _boolean_expression_in_do_statement6939 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_do_statement6943 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_do_statement6947 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _132_in_for_statement6955 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_for_statement6959 = new BitSet(new ulong[]{0x242D001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1055UL});
		public static readonly BitSet _for_initializer_in_for_statement6963 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_for_statement6968 = new BitSet(new ulong[]{0x242D001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _for_condition_in_for_statement6972 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_for_statement6977 = new BitSet(new ulong[]{0x2429801C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _for_iterator_in_for_statement6981 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_for_statement6986 = new BitSet(new ulong[]{0x262D001C1C100020UL,0x17F99FF6800009B4UL,0xFFE9EE14977E937DUL,0x10F1UL});
		public static readonly BitSet _embedded_statement_in_for_statement6990 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _local_variable_declaration_in_for_initializer7004 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _statement_expression_list_in_for_initializer7009 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _boolean_expression_in_for_condition7019 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _statement_expression_list_in_for_iterator7027 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _statement_expression_in_statement_expression_list7035 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_statement_expression_list7038 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _statement_expression_in_statement_expression_list7040 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _133_in_foreach_statement7050 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_foreach_statement7054 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _local_variable_type_in_foreach_statement7058 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_foreach_statement7062 = new BitSet(new ulong[]{0x0UL,0x0UL,0x800UL});
		public static readonly BitSet _139_in_foreach_statement7066 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_foreach_statement7070 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_foreach_statement7074 = new BitSet(new ulong[]{0x262D001C1C100020UL,0x17F99FF6800009B4UL,0xFFE9EE14977E937DUL,0x10F1UL});
		public static readonly BitSet _embedded_statement_in_foreach_statement7078 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _break_statement_in_jump_statement7086 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _continue_statement_in_jump_statement7091 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _goto_statement_in_jump_statement7096 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _return_statement_in_jump_statement7101 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _throw_statement_in_jump_statement7106 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _106_in_break_statement7114 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_break_statement7118 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _115_in_continue_statement7126 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_continue_statement7130 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _136_in_goto_statement7138 = new BitSet(new ulong[]{0x8000000UL,0x14A0283680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_goto_statement7144 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _109_in_goto_statement7152 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _constant_expression_in_goto_statement7156 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _117_in_goto_statement7164 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_goto_statement7169 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _170_in_return_statement7177 = new BitSet(new ulong[]{0x242D001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_return_statement7181 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_return_statement7186 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _183_in_throw_statement7194 = new BitSet(new ulong[]{0x242D001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_throw_statement7198 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_throw_statement7203 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _184_in_try_statement7216 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _block_in_try_statement7220 = new BitSet(new ulong[]{0x0UL,0x400000000000UL,0x2UL});
		public static readonly BitSet _catch_clauses_in_try_statement7226 = new BitSet(new ulong[]{0x2UL,0x0UL,0x2UL});
		public static readonly BitSet _finally_clause_in_try_statement7230 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _finally_clause_in_try_statement7242 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _110_in_catch_clauses7251 = new BitSet(new ulong[]{0x4000000000000UL,0x10UL,0x0UL,0x80UL});
		public static readonly BitSet _specific_catch_clauses_in_catch_clauses7256 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _general_catch_clause_in_catch_clauses7260 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _specific_catch_clause_in_specific_catch_clauses7269 = new BitSet(new ulong[]{0x2UL,0x400000000000UL});
		public static readonly BitSet _110_in_specific_catch_clauses7274 = new BitSet(new ulong[]{0x4000000000000UL,0x10UL,0x0UL,0x80UL});
		public static readonly BitSet _specific_catch_clause_in_specific_catch_clauses7279 = new BitSet(new ulong[]{0x2UL,0x400000000000UL});
		public static readonly BitSet _general_catch_clause_in_specific_catch_clauses7283 = new BitSet(new ulong[]{0x2UL,0x400000000000UL});
		public static readonly BitSet _68_in_specific_catch_clause7293 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _class_type_in_specific_catch_clause7297 = new BitSet(new ulong[]{0x800008000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_specific_catch_clause7301 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_specific_catch_clause7306 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _block_in_specific_catch_clause7310 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _block_in_general_catch_clause7318 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _129_in_finally_clause7326 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _block_in_finally_clause7330 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _112_in_checked_statement7338 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _block_in_checked_statement7342 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _189_in_unchecked_statement7350 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _block_in_unchecked_statement7354 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _147_in_lock_statement7362 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_lock_statement7366 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_lock_statement7369 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_lock_statement7373 = new BitSet(new ulong[]{0x262D001C1C100020UL,0x17F99FF6800009B4UL,0xFFE9EE14977E937DUL,0x10F1UL});
		public static readonly BitSet _embedded_statement_in_lock_statement7377 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _USING_in_using_statement7385 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_using_statement7389 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1055UL});
		public static readonly BitSet _resource_acquisition_in_using_statement7394 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_using_statement7398 = new BitSet(new ulong[]{0x262D001C1C100020UL,0x17F99FF6800009B4UL,0xFFE9EE14977E937DUL,0x10F1UL});
		public static readonly BitSet _embedded_statement_in_using_statement7403 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _local_variable_declaration_in_resource_acquisition7417 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_resource_acquisition7422 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _198_in_yield_statement7430 = new BitSet(new ulong[]{0x0UL,0x40000000000UL,0x40000000000UL});
		public static readonly BitSet _170_in_yield_statement7435 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _expression_in_yield_statement7439 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_yield_statement7443 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _106_in_yield_statement7458 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_yield_statement7462 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _assignment_in_assignment_list10160 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_assignment_list10162 = new BitSet(new ulong[]{0x2429001C0C100022UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _attributes_in_field_declarations10173 = new BitSet(new ulong[]{0x8000000UL,0x96909A7780000000UL,0xDA0CFAFCD776D249UL,0x5FUL});
		public static readonly BitSet _modifiers_in_field_declarations10178 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_in_field_declarations10183 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _field_declaration_in_field_declarations10187 = new BitSet(new ulong[]{0x8000002UL,0x96909A7788000000UL,0xDA0CFAFCD776D249UL,0x5FUL});
		public static readonly BitSet _attributes_in_property_declaration_list10198 = new BitSet(new ulong[]{0x8000000UL,0x96909A7780000000UL,0xDA0CFAFCD776D249UL,0x5FUL});
		public static readonly BitSet _modifiers_in_property_declaration_list10203 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_in_property_declaration_list10208 = new BitSet(new ulong[]{0x42900180C100020UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x51UL});
		public static readonly BitSet _property_declaration_in_property_declaration_list10212 = new BitSet(new ulong[]{0x8000002UL,0x96909A7788000000UL,0xDA0CFAFCD776D249UL,0x5FUL});
		public static readonly BitSet _constant_declaration_in_constant_declarations10222 = new BitSet(new ulong[]{0x2UL,0x4000000000000UL});
		public static readonly BitSet _literal_in_literals10230 = new BitSet(new ulong[]{0x429001804100022UL});
		public static readonly BitSet _attributes_in_delegate_declaration_list10240 = new BitSet(new ulong[]{0x0UL,0x8040004100000000UL,0x400410E841004000UL,0xAUL});
		public static readonly BitSet _modifiers_in_delegate_declaration_list10245 = new BitSet(new ulong[]{0x0UL,0x40000000000000UL});
		public static readonly BitSet _delegate_declaration_in_delegate_declaration_list10250 = new BitSet(new ulong[]{0x2UL,0x8040004108000000UL,0x400410E841004000UL,0xAUL});
		public static readonly BitSet _local_variable_declaration_in_local_variable_declaration_list10261 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_local_variable_declaration_list10263 = new BitSet(new ulong[]{0x8000002UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _local_variable_initializer_in_local_variable_initializer_list10274 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_local_variable_initializer_list10276 = new BitSet(new ulong[]{0x2429001C0C100022UL,0x16F19BF6800009B4UL,0xBE4BEA1497769249UL,0x10D1UL});
		public static readonly BitSet _expression_in_expression_list_test10287 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_expression_list_test10289 = new BitSet(new ulong[]{0x2429001C0C100022UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _unary_expression_in_unary_expression_list10300 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_unary_expression_list10302 = new BitSet(new ulong[]{0x2429001C0C100022UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _invocation_expression_in_invocation_expression_list10313 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_invocation_expression_list10315 = new BitSet(new ulong[]{0x8000002UL,0x16909B3680000000UL,0x9E48EA1496769249UL,0x51UL});
		public static readonly BitSet _primary_expression_in_primary_expression_list10326 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_primary_expression_list10328 = new BitSet(new ulong[]{0x42900180C100022UL,0x16F19B7680000010UL,0xBE49EA1497769249UL,0x51UL});
		public static readonly BitSet _non_assignment_expression_in_non_assignment_expression_list10339 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_non_assignment_expression_list10341 = new BitSet(new ulong[]{0x2429001C0C100022UL,0x16F19BF6800009B4UL,0xBE49EA1497769249UL,0x1051UL});
		public static readonly BitSet _modifiers_in_method_declarations10352 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _194_in_method_declarations10356 = new BitSet(new ulong[]{0x42900180C100020UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x51UL});
		public static readonly BitSet _type_in_method_declarations10360 = new BitSet(new ulong[]{0x42900180C100020UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x51UL});
		public static readonly BitSet _method_declaration_in_method_declarations10363 = new BitSet(new ulong[]{0x8000002UL,0x96909A7780000000UL,0xDA0CFAFCD776D249UL,0x5FUL});
		public static readonly BitSet _161_in_synpred1_cs273 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_name_in_synpred2_cs539 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_synpred2_cs543 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_name_in_synpred3_cs558 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _199_in_synpred3_cs562 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_name_in_synpred4_cs577 = new BitSet(new ulong[]{0x400UL});
		public static readonly BitSet _DOT_in_synpred4_cs581 = new BitSet(new ulong[]{0x0UL,0x0UL,0x40000000000000UL});
		public static readonly BitSet _182_in_synpred4_cs585 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _182_in_synpred5_cs705 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _brackets_in_synpred5_cs710 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _104_in_synpred6_cs730 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _brackets_in_synpred6_cs734 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _object_creation_expression_in_synpred7_cs770 = new BitSet(new ulong[]{0x400000000400UL,0x8000000UL});
		public static readonly BitSet _set_in_synpred7_cs774 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_synpred8_cs934 = new BitSet(new ulong[]{0x0UL,0x20000UL});
		public static readonly BitSet _generic_argument_list_in_synpred8_cs936 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _68_in_synpred9_cs1186 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_in_synpred9_cs1190 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_synpred9_cs1194 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _array_creation_expression_in_synpred10_cs1436 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _arguments_in_synpred11_cs1516 = new BitSet(new ulong[]{0x400000000400UL,0x8000000UL});
		public static readonly BitSet _set_in_synpred11_cs1520 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _unbound_type_name_in_synpred12_cs2010 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _generic_dimension_specifier_in_synpred13_cs2068 = new BitSet(new ulong[]{0x400UL});
		public static readonly BitSet _DOT_in_synpred13_cs2072 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_synpred14_cs2200 = new BitSet(new ulong[]{0x0UL,0x20000UL});
		public static readonly BitSet _generic_argument_list_in_synpred14_cs2202 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_synpred15_cs2245 = new BitSet(new ulong[]{0x0UL,0x20000UL});
		public static readonly BitSet _81_in_synpred15_cs2247 = new BitSet(new ulong[]{0x8000000UL,0x16909A3680000000UL,0x9A08EA1496769249UL,0x55UL});
		public static readonly BitSet _type_arguments_in_synpred15_cs2249 = new BitSet(new ulong[]{0x200000UL});
		public static readonly BitSet _GT_in_synpred15_cs2251 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _unary_expression_in_synpred16_cs2502 = new BitSet(new ulong[]{0x200000UL,0x40285249UL,0x0UL,0x200UL});
		public static readonly BitSet _assignment_operator_in_synpred16_cs2506 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _cast_expression_in_synpred17_cs2564 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _102_in_synpred18_cs2795 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000010UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _anonymous_function_signature_in_synpred18_cs2798 = new BitSet(new ulong[]{0x0UL,0x800000UL});
		public static readonly BitSet _87_in_synpred18_cs2800 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _query_expression_in_synpred19_cs2811 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _143_in_synpred20_cs3237 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _74_in_synpred21_cs3740 = new BitSet(new ulong[]{0x8000000UL,0x1480083680000000UL,0x200621494668241UL,0x51UL});
		public static readonly BitSet _identifier_in_synpred21_cs3744 = new BitSet(new ulong[]{0x0UL,0x200000UL});
		public static readonly BitSet _85_in_synpred21_cs3748 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_name_in_synpred22_cs4266 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _199_in_synpred22_cs4270 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_name_in_synpred23_cs5131 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_synpred23_cs5135 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_name_in_synpred24_cs5156 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _199_in_synpred24_cs5160 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_name_in_synpred25_cs5602 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_synpred25_cs5606 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_name_in_synpred26_cs5621 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x80UL});
		public static readonly BitSet _199_in_synpred26_cs5625 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_name_in_synpred27_cs5640 = new BitSet(new ulong[]{0x400UL});
		public static readonly BitSet _DOT_in_synpred27_cs5644 = new BitSet(new ulong[]{0x0UL,0x0UL,0x40000000000000UL});
		public static readonly BitSet _182_in_synpred27_cs5648 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _arguments_in_synpred28_cs6194 = new BitSet(new ulong[]{0x400000000400UL,0x8000000UL});
		public static readonly BitSet _set_in_synpred28_cs6198 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_synpred29_cs6245 = new BitSet(new ulong[]{0x0UL,0x20000UL});
		public static readonly BitSet _81_in_synpred29_cs6250 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _declaration_statement_in_synpred30_cs6331 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_synpred31_cs6342 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _79_in_synpred31_cs6346 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _192_in_synpred32_cs6570 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _122_in_synpred33_cs6581 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _123_in_synpred34_cs6748 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _local_variable_declaration_in_synpred35_cs6999 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _local_variable_declaration_in_synpred36_cs7412 = new BitSet(new ulong[]{0x2UL});
	}
	#endregion Follow sets
}

} // namespace  Code2Xml.Languages.ANTLRv3.Processors.CSharp 
