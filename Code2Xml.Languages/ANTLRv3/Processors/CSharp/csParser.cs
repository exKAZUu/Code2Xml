using Code2Xml.Languages.ANTLRv3.Core;
using System;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 3.5.0.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// $ANTLR 3.5.0.2 C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g 2013-11-12 16:04:54

// The variable 'variable' is assigned but its value is never used.
#pragma warning disable 219
// Unreachable code detected.
#pragma warning disable 162
// Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// CLS compliance checking will not be performed on 'type' because it is not visible from outside this assembly.
#pragma warning disable 3019


using System.Collections.Generic;
using Antlr.Runtime;
using Antlr.Runtime.Misc;


using Antlr.Runtime.Tree;
using RewriteRuleITokenStream = Antlr.Runtime.Tree.RewriteRuleTokenStream;

namespace  Code2Xml.Languages.ANTLRv3.Processors.CSharp 
{
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "3.5.0.2")]
[System.CLSCompliant(false)]
public partial class csParser : Antlr.Runtime.Parser, ICustomizedAntlr3Parser
{
	internal static readonly string[] tokenNames = new string[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "COMMENT", "Character_literal", "DECIMAL_DIGIT", "DEFINE", "DEFINE_TOKEN", "DOC_LINE_COMMENT", "DOT", "Decimal_digits", "Decimal_integer_literal", "ELIF", "ELSE_TOKEN", "ENDIF", "ENDIF_TOKEN", "ENUM", "EscapeSequence", "Exponent_part", "FALSE", "GT", "GooBall", "GooBallIdentifier", "HEX_DIGIT", "HEX_DIGITS", "Hex_number", "IDENTIFIER", "IF", "IF_TOKEN", "INTEGER_TYPE_SUFFIX", "IdentifierPart", "IdentifierStart", "LINE_COMMENT", "MINUS", "NULL", "NUMBER", "PP_AND_EXPRESSION", "PP_CONDITIONAL", "PP_EQUALITY_EXPRESSION", "PP_EXPRESSION", "PP_OR_EXPRESSION", "PP_PRIMARY_EXPRESSION", "PP_UNARY_EXPRESSION", "PREPROCESSOR_DIRECTIVE", "PTR", "Pragma", "RPAREN", "Real_literal", "Real_type_suffix", "SEMI", "STRINGLITERAL", "Sign", "TRUE", "TS", "UNDEF", "UNDEF_TOKEN", "USING", "Verbatim_string_literal", "Verbatim_string_literal_character", "WS", "'!'", "'!='", "'%'", "'%='", "'&&'", "'&'", "'&='", "'('", "'*'", "'*='", "'+'", "'++'", "'+='", "','", "'--'", "'-='", "'/'", "'/='", "':'", "'::'", "'<'", "'<<'", "'<<='", "'<='", "'='", "'=='", "'=>'", "'>='", "'?'", "'??'", "'['", "']'", "'^'", "'^='", "'__arglist'", "'abstract'", "'add'", "'alias'", "'as'", "'ascending'", "'assembly'", "'base'", "'bool'", "'break'", "'by'", "'byte'", "'case'", "'catch'", "'char'", "'checked'", "'class'", "'const'", "'continue'", "'decimal'", "'default'", "'delegate'", "'descending'", "'do'", "'double'", "'dynamic'", "'else'", "'equals'", "'event'", "'explicit'", "'extern'", "'field'", "'finally'", "'fixed'", "'float'", "'for'", "'foreach'", "'from'", "'get'", "'goto'", "'group'", "'implicit'", "'in'", "'int'", "'interface'", "'internal'", "'into'", "'is'", "'join'", "'let'", "'lock'", "'long'", "'method'", "'module'", "'namespace'", "'new'", "'object'", "'on'", "'operator'", "'orderby'", "'out'", "'override'", "'param'", "'params'", "'partial'", "'pragma'", "'private'", "'property'", "'protected'", "'public'", "'readonly'", "'ref'", "'remove'", "'return'", "'sbyte'", "'sealed'", "'select'", "'set'", "'short'", "'sizeof'", "'stackalloc'", "'static'", "'string'", "'struct'", "'switch'", "'this'", "'throw'", "'try'", "'type'", "'typeof'", "'uint'", "'ulong'", "'unchecked'", "'unsafe'", "'ushort'", "'var'", "'virtual'", "'void'", "'volatile'", "'where'", "'while'", "'yield'", "'{'", "'|'", "'|='", "'||'", "'}'", "'~'"
	};
	public const int EOF=-1;
	public const int COMMENT=4;
	public const int Character_literal=5;
	public const int DECIMAL_DIGIT=6;
	public const int DEFINE=7;
	public const int DEFINE_TOKEN=8;
	public const int DOC_LINE_COMMENT=9;
	public const int DOT=10;
	public const int Decimal_digits=11;
	public const int Decimal_integer_literal=12;
	public const int ELIF=13;
	public const int ELSE_TOKEN=14;
	public const int ENDIF=15;
	public const int ENDIF_TOKEN=16;
	public const int ENUM=17;
	public const int EscapeSequence=18;
	public const int Exponent_part=19;
	public const int FALSE=20;
	public const int GT=21;
	public const int GooBall=22;
	public const int GooBallIdentifier=23;
	public const int HEX_DIGIT=24;
	public const int HEX_DIGITS=25;
	public const int Hex_number=26;
	public const int IDENTIFIER=27;
	public const int IF=28;
	public const int IF_TOKEN=29;
	public const int INTEGER_TYPE_SUFFIX=30;
	public const int IdentifierPart=31;
	public const int IdentifierStart=32;
	public const int LINE_COMMENT=33;
	public const int MINUS=34;
	public const int NULL=35;
	public const int NUMBER=36;
	public const int PP_AND_EXPRESSION=37;
	public const int PP_CONDITIONAL=38;
	public const int PP_EQUALITY_EXPRESSION=39;
	public const int PP_EXPRESSION=40;
	public const int PP_OR_EXPRESSION=41;
	public const int PP_PRIMARY_EXPRESSION=42;
	public const int PP_UNARY_EXPRESSION=43;
	public const int PREPROCESSOR_DIRECTIVE=44;
	public const int PTR=45;
	public const int Pragma=46;
	public const int RPAREN=47;
	public const int Real_literal=48;
	public const int Real_type_suffix=49;
	public const int SEMI=50;
	public const int STRINGLITERAL=51;
	public const int Sign=52;
	public const int TRUE=53;
	public const int TS=54;
	public const int UNDEF=55;
	public const int UNDEF_TOKEN=56;
	public const int USING=57;
	public const int Verbatim_string_literal=58;
	public const int Verbatim_string_literal_character=59;
	public const int WS=60;
	public const int T__61=61;
	public const int T__62=62;
	public const int T__63=63;
	public const int T__64=64;
	public const int T__65=65;
	public const int T__66=66;
	public const int T__67=67;
	public const int T__68=68;
	public const int T__69=69;
	public const int T__70=70;
	public const int T__71=71;
	public const int T__72=72;
	public const int T__73=73;
	public const int T__74=74;
	public const int T__75=75;
	public const int T__76=76;
	public const int T__77=77;
	public const int T__78=78;
	public const int T__79=79;
	public const int T__80=80;
	public const int T__81=81;
	public const int T__82=82;
	public const int T__83=83;
	public const int T__84=84;
	public const int T__85=85;
	public const int T__86=86;
	public const int T__87=87;
	public const int T__88=88;
	public const int T__89=89;
	public const int T__90=90;
	public const int T__91=91;
	public const int T__92=92;
	public const int T__93=93;
	public const int T__94=94;
	public const int T__95=95;
	public const int T__96=96;
	public const int T__97=97;
	public const int T__98=98;
	public const int T__99=99;
	public const int T__100=100;
	public const int T__101=101;
	public const int T__102=102;
	public const int T__103=103;
	public const int T__104=104;
	public const int T__105=105;
	public const int T__106=106;
	public const int T__107=107;
	public const int T__108=108;
	public const int T__109=109;
	public const int T__110=110;
	public const int T__111=111;
	public const int T__112=112;
	public const int T__113=113;
	public const int T__114=114;
	public const int T__115=115;
	public const int T__116=116;
	public const int T__117=117;
	public const int T__118=118;
	public const int T__119=119;
	public const int T__120=120;
	public const int T__121=121;
	public const int T__122=122;
	public const int T__123=123;
	public const int T__124=124;
	public const int T__125=125;
	public const int T__126=126;
	public const int T__127=127;
	public const int T__128=128;
	public const int T__129=129;
	public const int T__130=130;
	public const int T__131=131;
	public const int T__132=132;
	public const int T__133=133;
	public const int T__134=134;
	public const int T__135=135;
	public const int T__136=136;
	public const int T__137=137;
	public const int T__138=138;
	public const int T__139=139;
	public const int T__140=140;
	public const int T__141=141;
	public const int T__142=142;
	public const int T__143=143;
	public const int T__144=144;
	public const int T__145=145;
	public const int T__146=146;
	public const int T__147=147;
	public const int T__148=148;
	public const int T__149=149;
	public const int T__150=150;
	public const int T__151=151;
	public const int T__152=152;
	public const int T__153=153;
	public const int T__154=154;
	public const int T__155=155;
	public const int T__156=156;
	public const int T__157=157;
	public const int T__158=158;
	public const int T__159=159;
	public const int T__160=160;
	public const int T__161=161;
	public const int T__162=162;
	public const int T__163=163;
	public const int T__164=164;
	public const int T__165=165;
	public const int T__166=166;
	public const int T__167=167;
	public const int T__168=168;
	public const int T__169=169;
	public const int T__170=170;
	public const int T__171=171;
	public const int T__172=172;
	public const int T__173=173;
	public const int T__174=174;
	public const int T__175=175;
	public const int T__176=176;
	public const int T__177=177;
	public const int T__178=178;
	public const int T__179=179;
	public const int T__180=180;
	public const int T__181=181;
	public const int T__182=182;
	public const int T__183=183;
	public const int T__184=184;
	public const int T__185=185;
	public const int T__186=186;
	public const int T__187=187;
	public const int T__188=188;
	public const int T__189=189;
	public const int T__190=190;
	public const int T__191=191;
	public const int T__192=192;
	public const int T__193=193;
	public const int T__194=194;
	public const int T__195=195;
	public const int T__196=196;
	public const int T__197=197;
	public const int T__198=198;
	public const int T__199=199;
	public const int T__200=200;
	public const int T__201=201;
	public const int T__202=202;

	public csParser(ITokenStream input)
		: this(input, new RecognizerSharedState())
	{
	}
	public csParser(ITokenStream input, RecognizerSharedState state)
		: base(input, state)
	{
		this.state.ruleMemo = new System.Collections.Generic.Dictionary<int, int>[356+1];


		Antlr3AstBuilder treeAdaptor = default(Antlr3AstBuilder);
		CreateTreeAdaptor(ref treeAdaptor);
		TreeAdaptor = treeAdaptor ?? new Antlr3AstBuilder();
		OnCreated();
	}
	// Implement this function in your helper file to use a custom tree adaptor
	partial void CreateTreeAdaptor(ref Antlr3AstBuilder adaptor);

	private Antlr3AstBuilder adaptor;

	public Antlr3AstBuilder TreeAdaptor
	{
		get
		{
			return adaptor;
		}

		set
		{
			this.adaptor = value;
		}
	}

	public override string[] TokenNames { get { return csParser.tokenNames; } }
	public override string GrammarFileName { get { return "C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g"; } }


		protected bool is_class_modifier() 
		{
			return false;
		}


	partial void OnCreated();
	partial void EnterRule(string ruleName, int ruleIndex);
	partial void LeaveRule(string ruleName, int ruleIndex);

	#region Rules
	partial void EnterRule_compilation_unit();
	partial void LeaveRule_compilation_unit();
	// $ANTLR start "compilation_unit"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:35:1: public compilation_unit : namespace_body[true] ;
	[GrammarRule("compilation_unit")]
	public Antlr3AstNode compilation_unit()
	{
		EnterRule_compilation_unit();
		EnterRule("compilation_unit", 1);
		var retval = new Antlr3AstNode("compilation_unit");
		
		retval.Start = (IToken)input.LT(1);
		int compilation_unit_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode namespace_body1 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "compilation_unit");
		DebugLocation(35, 21);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 1)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:35:17: ( namespace_body[true] )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:36:2: namespace_body[true]
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(36, 2);
			PushFollow(Follow._namespace_body_in_compilation_unit85);
			namespace_body1=namespace_body(true);
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, namespace_body1.Tree, namespace_body1, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("compilation_unit", 1);
			LeaveRule("compilation_unit", 1);
			LeaveRule_compilation_unit();
			if (state.backtracking > 0) { Memoize(input, 1, compilation_unit_StartIndex); }

		}
		DebugLocation(36, 21);
		} finally { DebugExitRule(GrammarFileName, "compilation_unit"); }
		return retval;

	}
	// $ANTLR end "compilation_unit"

	partial void EnterRule_namespace_declaration();
	partial void LeaveRule_namespace_declaration();
	// $ANTLR start "namespace_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:38:1: namespace_declaration : 'namespace' qualified_identifier namespace_block ( ';' )? ;
	[GrammarRule("namespace_declaration")]
	private Antlr3AstNode namespace_declaration()
	{
		EnterRule_namespace_declaration();
		EnterRule("namespace_declaration", 2);
		var retval = new Antlr3AstNode("namespace_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int namespace_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal2 = default(IToken);
		IToken char_literal5 = default(IToken);
		Antlr3AstNode qualified_identifier3 = default(Antlr3AstNode);
		Antlr3AstNode namespace_block4 = default(Antlr3AstNode);

		object string_literal2_tree = default(object);
		object char_literal5_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "namespace_declaration");
		DebugLocation(38, 61);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 2)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:38:22: ( 'namespace' qualified_identifier namespace_block ( ';' )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:39:2: 'namespace' qualified_identifier namespace_block ( ';' )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(39, 2);
			string_literal2=(IToken)Match(input,149,Follow._149_in_namespace_declaration94); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal2_tree = (object)adaptor.Create(string_literal2, retval);
			adaptor.AddChild(root_0, string_literal2_tree);
			}
			DebugLocation(39, 16);
			PushFollow(Follow._qualified_identifier_in_namespace_declaration98);
			qualified_identifier3=qualified_identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, qualified_identifier3.Tree, qualified_identifier3, retval);
			DebugLocation(39, 39);
			PushFollow(Follow._namespace_block_in_namespace_declaration102);
			namespace_block4=namespace_block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, namespace_block4.Tree, namespace_block4, retval);
			DebugLocation(39, 57);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:39:57: ( ';' )?
			int alt1=2;
			try { DebugEnterSubRule(1);
			try { DebugEnterDecision(1, false);
			int LA1_1 = input.LA(1);

			if ((LA1_1==SEMI))
			{
				alt1 = 1;
			}
			} finally { DebugExitDecision(1); }
			switch (alt1)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:39:57: ';'
				{
				DebugLocation(39, 57);
				char_literal5=(IToken)Match(input,SEMI,Follow._SEMI_in_namespace_declaration106); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal5_tree = (object)adaptor.Create(char_literal5, retval);
				adaptor.AddChild(root_0, char_literal5_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(1); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("namespace_declaration", 2);
			LeaveRule("namespace_declaration", 2);
			LeaveRule_namespace_declaration();
			if (state.backtracking > 0) { Memoize(input, 2, namespace_declaration_StartIndex); }

		}
		DebugLocation(39, 61);
		} finally { DebugExitRule(GrammarFileName, "namespace_declaration"); }
		return retval;

	}
	// $ANTLR end "namespace_declaration"

	partial void EnterRule_namespace_block();
	partial void LeaveRule_namespace_block();
	// $ANTLR start "namespace_block"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:40:1: namespace_block : '{' namespace_body[false] '}' ;
	[GrammarRule("namespace_block")]
	private Antlr3AstNode namespace_block()
	{
		EnterRule_namespace_block();
		EnterRule("namespace_block", 3);
		var retval = new Antlr3AstNode("namespace_block");
		
		retval.Start = (IToken)input.LT(1);
		int namespace_block_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal6 = default(IToken);
		IToken char_literal8 = default(IToken);
		Antlr3AstNode namespace_body7 = default(Antlr3AstNode);

		object char_literal6_tree = default(object);
		object char_literal8_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "namespace_block");
		DebugLocation(40, 35);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 3)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:40:16: ( '{' namespace_body[false] '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:41:2: '{' namespace_body[false] '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(41, 2);
			char_literal6=(IToken)Match(input,197,Follow._197_in_namespace_block115); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal6_tree = (object)adaptor.Create(char_literal6, retval);
			adaptor.AddChild(root_0, char_literal6_tree);
			}
			DebugLocation(41, 8);
			PushFollow(Follow._namespace_body_in_namespace_block119);
			namespace_body7=namespace_body(false);
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, namespace_body7.Tree, namespace_body7, retval);
			DebugLocation(41, 32);
			char_literal8=(IToken)Match(input,201,Follow._201_in_namespace_block124); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal8_tree = (object)adaptor.Create(char_literal8, retval);
			adaptor.AddChild(root_0, char_literal8_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("namespace_block", 3);
			LeaveRule("namespace_block", 3);
			LeaveRule_namespace_block();
			if (state.backtracking > 0) { Memoize(input, 3, namespace_block_StartIndex); }

		}
		DebugLocation(41, 35);
		} finally { DebugExitRule(GrammarFileName, "namespace_block"); }
		return retval;

	}
	// $ANTLR end "namespace_block"

	partial void EnterRule_namespace_body();
	partial void LeaveRule_namespace_body();
	// $ANTLR start "namespace_body"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:42:1: namespace_body[bool bGlobal] : ( extern_alias_directives )? ( using_directives )? ( global_attributes )? ( namespace_member_declarations )? ;
	[GrammarRule("namespace_body")]
	private Antlr3AstNode namespace_body(bool bGlobal)
	{
		EnterRule_namespace_body();
		EnterRule("namespace_body", 4);
		var retval = new Antlr3AstNode("namespace_body");
		
		retval.Start = (IToken)input.LT(1);
		int namespace_body_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode extern_alias_directives9 = default(Antlr3AstNode);
		Antlr3AstNode using_directives10 = default(Antlr3AstNode);
		Antlr3AstNode global_attributes11 = default(Antlr3AstNode);
		Antlr3AstNode namespace_member_declarations12 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "namespace_body");
		DebugLocation(42, 100);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 4)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:42:29: ( ( extern_alias_directives )? ( using_directives )? ( global_attributes )? ( namespace_member_declarations )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:43:2: ( extern_alias_directives )? ( using_directives )? ( global_attributes )? ( namespace_member_declarations )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(43, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:43:2: ( extern_alias_directives )?
			int alt2=2;
			try { DebugEnterSubRule(2);
			try { DebugEnterDecision(2, false);
			int LA2_1 = input.LA(1);

			if ((LA2_1==125))
			{
				int LA2_2 = input.LA(2);

				if ((LA2_2==98))
				{
					alt2 = 1;
				}
			}
			} finally { DebugExitDecision(2); }
			switch (alt2)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:43:2: extern_alias_directives
				{
				DebugLocation(43, 2);
				PushFollow(Follow._extern_alias_directives_in_namespace_body133);
				extern_alias_directives9=extern_alias_directives();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, extern_alias_directives9.Tree, extern_alias_directives9, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(2); }

			DebugLocation(43, 29);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:43:29: ( using_directives )?
			int alt3=2;
			try { DebugEnterSubRule(3);
			try { DebugEnterDecision(3, false);
			int LA3_1 = input.LA(1);

			if ((LA3_1==USING))
			{
				alt3 = 1;
			}
			} finally { DebugExitDecision(3); }
			switch (alt3)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:43:29: using_directives
				{
				DebugLocation(43, 29);
				PushFollow(Follow._using_directives_in_namespace_body138);
				using_directives10=using_directives();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, using_directives10.Tree, using_directives10, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(3); }

			DebugLocation(43, 49);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:43:49: ( global_attributes )?
			int alt4=2;
			try { DebugEnterSubRule(4);
			try { DebugEnterDecision(4, false);
			int LA4_1 = input.LA(1);

			if ((LA4_1==91))
			{
				int LA4_2 = input.LA(2);

				if ((LA4_2==101||LA4_2==148))
				{
					int LA4_3 = input.LA(3);

					if ((LA4_3==79))
					{
						alt4 = 1;
					}
				}
			}
			} finally { DebugExitDecision(4); }
			switch (alt4)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:43:49: global_attributes
				{
				DebugLocation(43, 49);
				PushFollow(Follow._global_attributes_in_namespace_body143);
				global_attributes11=global_attributes();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, global_attributes11.Tree, global_attributes11, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(4); }

			DebugLocation(43, 70);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:43:70: ( namespace_member_declarations )?
			int alt5=2;
			try { DebugEnterSubRule(5);
			try { DebugEnterDecision(5, false);
			int LA5_1 = input.LA(1);

			if ((LA5_1==ENUM||LA5_1==91||LA5_1==96||LA5_1==111||LA5_1==116||LA5_1==125||(LA5_1>=139 && LA5_1<=140)||(LA5_1>=149 && LA5_1<=150)||LA5_1==156||LA5_1==159||LA5_1==161||(LA5_1>=163 && LA5_1<=165)||LA5_1==170||LA5_1==176||LA5_1==178||LA5_1==188||LA5_1==191||LA5_1==193))
			{
				alt5 = 1;
			}
			} finally { DebugExitDecision(5); }
			switch (alt5)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:43:70: namespace_member_declarations
				{
				DebugLocation(43, 70);
				PushFollow(Follow._namespace_member_declarations_in_namespace_body148);
				namespace_member_declarations12=namespace_member_declarations();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, namespace_member_declarations12.Tree, namespace_member_declarations12, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(5); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("namespace_body", 4);
			LeaveRule("namespace_body", 4);
			LeaveRule_namespace_body();
			if (state.backtracking > 0) { Memoize(input, 4, namespace_body_StartIndex); }

		}
		DebugLocation(43, 100);
		} finally { DebugExitRule(GrammarFileName, "namespace_body"); }
		return retval;

	}
	// $ANTLR end "namespace_body"

	partial void EnterRule_extern_alias_directives();
	partial void LeaveRule_extern_alias_directives();
	// $ANTLR start "extern_alias_directives"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:44:1: extern_alias_directives : ( extern_alias_directive )+ ;
	[GrammarRule("extern_alias_directives")]
	private Antlr3AstNode extern_alias_directives()
	{
		EnterRule_extern_alias_directives();
		EnterRule("extern_alias_directives", 5);
		var retval = new Antlr3AstNode("extern_alias_directives");
		
		retval.Start = (IToken)input.LT(1);
		int extern_alias_directives_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode extern_alias_directive13 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "extern_alias_directives");
		DebugLocation(44, 25);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 5)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:44:24: ( ( extern_alias_directive )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:45:2: ( extern_alias_directive )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(45, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:45:2: ( extern_alias_directive )+
			int cnt6=0;
			try { DebugEnterSubRule(6);
			while (true)
			{
				int alt6=2;
				try { DebugEnterDecision(6, false);
				int LA6_1 = input.LA(1);

				if ((LA6_1==125))
				{
					int LA6_2 = input.LA(2);

					if ((LA6_2==98))
					{
						alt6 = 1;
					}


				}


				} finally { DebugExitDecision(6); }
				switch (alt6)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:45:2: extern_alias_directive
					{
					DebugLocation(45, 2);
					PushFollow(Follow._extern_alias_directive_in_extern_alias_directives157);
					extern_alias_directive13=extern_alias_directive();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, extern_alias_directive13.Tree, extern_alias_directive13, retval);

					}
					break;

				default:
					if (cnt6 >= 1)
						goto loop6;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee6 = new EarlyExitException( 6, input );
					DebugRecognitionException(eee6);
					throw eee6;
				}
				cnt6++;
			}
			loop6:
				;

			} finally { DebugExitSubRule(6); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("extern_alias_directives", 5);
			LeaveRule("extern_alias_directives", 5);
			LeaveRule_extern_alias_directives();
			if (state.backtracking > 0) { Memoize(input, 5, extern_alias_directives_StartIndex); }

		}
		DebugLocation(45, 25);
		} finally { DebugExitRule(GrammarFileName, "extern_alias_directives"); }
		return retval;

	}
	// $ANTLR end "extern_alias_directives"

	partial void EnterRule_extern_alias_directive();
	partial void LeaveRule_extern_alias_directive();
	// $ANTLR start "extern_alias_directive"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:46:1: extern_alias_directive : 'extern' 'alias' identifier ';' ;
	[GrammarRule("extern_alias_directive")]
	private Antlr3AstNode extern_alias_directive()
	{
		EnterRule_extern_alias_directive();
		EnterRule("extern_alias_directive", 6);
		var retval = new Antlr3AstNode("extern_alias_directive");
		
		retval.Start = (IToken)input.LT(1);
		int extern_alias_directive_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal14 = default(IToken);
		IToken string_literal15 = default(IToken);
		IToken char_literal17 = default(IToken);
		Antlr3AstNode identifier16 = default(Antlr3AstNode);

		object string_literal14_tree = default(object);
		object string_literal15_tree = default(object);
		object char_literal17_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "extern_alias_directive");
		DebugLocation(46, 38);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 6)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:46:23: ( 'extern' 'alias' identifier ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:47:2: 'extern' 'alias' identifier ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(47, 2);
			string_literal14=(IToken)Match(input,125,Follow._125_in_extern_alias_directive166); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal14_tree = (object)adaptor.Create(string_literal14, retval);
			adaptor.AddChild(root_0, string_literal14_tree);
			}
			DebugLocation(47, 13);
			string_literal15=(IToken)Match(input,98,Follow._98_in_extern_alias_directive170); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal15_tree = (object)adaptor.Create(string_literal15, retval);
			adaptor.AddChild(root_0, string_literal15_tree);
			}
			DebugLocation(47, 23);
			PushFollow(Follow._identifier_in_extern_alias_directive174);
			identifier16=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier16.Tree, identifier16, retval);
			DebugLocation(47, 35);
			char_literal17=(IToken)Match(input,SEMI,Follow._SEMI_in_extern_alias_directive177); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal17_tree = (object)adaptor.Create(char_literal17, retval);
			adaptor.AddChild(root_0, char_literal17_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("extern_alias_directive", 6);
			LeaveRule("extern_alias_directive", 6);
			LeaveRule_extern_alias_directive();
			if (state.backtracking > 0) { Memoize(input, 6, extern_alias_directive_StartIndex); }

		}
		DebugLocation(47, 38);
		} finally { DebugExitRule(GrammarFileName, "extern_alias_directive"); }
		return retval;

	}
	// $ANTLR end "extern_alias_directive"

	partial void EnterRule_using_directives();
	partial void LeaveRule_using_directives();
	// $ANTLR start "using_directives"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:48:1: using_directives : ( using_directive )+ ;
	[GrammarRule("using_directives")]
	private Antlr3AstNode using_directives()
	{
		EnterRule_using_directives();
		EnterRule("using_directives", 7);
		var retval = new Antlr3AstNode("using_directives");
		
		retval.Start = (IToken)input.LT(1);
		int using_directives_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode using_directive18 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "using_directives");
		DebugLocation(48, 18);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 7)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:48:17: ( ( using_directive )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:49:2: ( using_directive )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(49, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:49:2: ( using_directive )+
			int cnt7=0;
			try { DebugEnterSubRule(7);
			while (true)
			{
				int alt7=2;
				try { DebugEnterDecision(7, false);
				int LA7_1 = input.LA(1);

				if ((LA7_1==USING))
				{
					alt7 = 1;
				}


				} finally { DebugExitDecision(7); }
				switch (alt7)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:49:2: using_directive
					{
					DebugLocation(49, 2);
					PushFollow(Follow._using_directive_in_using_directives185);
					using_directive18=using_directive();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, using_directive18.Tree, using_directive18, retval);

					}
					break;

				default:
					if (cnt7 >= 1)
						goto loop7;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee7 = new EarlyExitException( 7, input );
					DebugRecognitionException(eee7);
					throw eee7;
				}
				cnt7++;
			}
			loop7:
				;

			} finally { DebugExitSubRule(7); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("using_directives", 7);
			LeaveRule("using_directives", 7);
			LeaveRule_using_directives();
			if (state.backtracking > 0) { Memoize(input, 7, using_directives_StartIndex); }

		}
		DebugLocation(49, 18);
		} finally { DebugExitRule(GrammarFileName, "using_directives"); }
		return retval;

	}
	// $ANTLR end "using_directives"

	partial void EnterRule_using_directive();
	partial void LeaveRule_using_directive();
	// $ANTLR start "using_directive"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:50:1: using_directive : ( using_alias_directive | using_namespace_directive ) ;
	[GrammarRule("using_directive")]
	private Antlr3AstNode using_directive()
	{
		EnterRule_using_directive();
		EnterRule("using_directive", 8);
		var retval = new Antlr3AstNode("using_directive");
		
		retval.Start = (IToken)input.LT(1);
		int using_directive_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode using_alias_directive19 = default(Antlr3AstNode);
		Antlr3AstNode using_namespace_directive20 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "using_directive");
		DebugLocation(50, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 8)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:50:16: ( ( using_alias_directive | using_namespace_directive ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:51:2: ( using_alias_directive | using_namespace_directive )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(51, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:51:2: ( using_alias_directive | using_namespace_directive )
			int alt8=2;
			try { DebugEnterSubRule(8);
			try { DebugEnterDecision(8, false);
			int LA8_1 = input.LA(1);

			if ((LA8_1==USING))
			{
				int LA8_2 = input.LA(2);

				if ((LA8_2==IDENTIFIER||LA8_2==95||(LA8_2>=97 && LA8_2<=98)||(LA8_2>=100 && LA8_2<=101)||LA8_2==105||LA8_2==117||LA8_2==120||LA8_2==122||LA8_2==126||LA8_2==132||LA8_2==135||LA8_2==141||(LA8_2>=143 && LA8_2<=144)||(LA8_2>=147 && LA8_2<=148)||LA8_2==152||LA8_2==154||LA8_2==157||LA8_2==160||LA8_2==162||LA8_2==167||(LA8_2>=171 && LA8_2<=172)||LA8_2==183||LA8_2==190||LA8_2==194||LA8_2==196))
				{
					int LA8_3 = input.LA(3);

					if ((LA8_3==85))
					{
						alt8 = 1;
					}
					else if ((LA8_3==DOT||LA8_3==SEMI||(LA8_3>=80 && LA8_3<=81)))
					{
						alt8 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 8, 2, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 8, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 8, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(8); }
			switch (alt8)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:51:3: using_alias_directive
				{
				DebugLocation(51, 3);
				PushFollow(Follow._using_alias_directive_in_using_directive195);
				using_alias_directive19=using_alias_directive();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, using_alias_directive19.Tree, using_alias_directive19, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:52:4: using_namespace_directive
				{
				DebugLocation(52, 4);
				PushFollow(Follow._using_namespace_directive_in_using_directive200);
				using_namespace_directive20=using_namespace_directive();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, using_namespace_directive20.Tree, using_namespace_directive20, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(8); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("using_directive", 8);
			LeaveRule("using_directive", 8);
			LeaveRule_using_directive();
			if (state.backtracking > 0) { Memoize(input, 8, using_directive_StartIndex); }

		}
		DebugLocation(52, 30);
		} finally { DebugExitRule(GrammarFileName, "using_directive"); }
		return retval;

	}
	// $ANTLR end "using_directive"

	partial void EnterRule_using_alias_directive();
	partial void LeaveRule_using_alias_directive();
	// $ANTLR start "using_alias_directive"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:53:1: using_alias_directive : 'using' identifier '=' namespace_or_type_name ';' ;
	[GrammarRule("using_alias_directive")]
	private Antlr3AstNode using_alias_directive()
	{
		EnterRule_using_alias_directive();
		EnterRule("using_alias_directive", 9);
		var retval = new Antlr3AstNode("using_alias_directive");
		
		retval.Start = (IToken)input.LT(1);
		int using_alias_directive_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal21 = default(IToken);
		IToken char_literal23 = default(IToken);
		IToken char_literal25 = default(IToken);
		Antlr3AstNode identifier22 = default(Antlr3AstNode);
		Antlr3AstNode namespace_or_type_name24 = default(Antlr3AstNode);

		object string_literal21_tree = default(object);
		object char_literal23_tree = default(object);
		object char_literal25_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "using_alias_directive");
		DebugLocation(53, 59);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 9)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:53:22: ( 'using' identifier '=' namespace_or_type_name ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:54:2: 'using' identifier '=' namespace_or_type_name ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(54, 2);
			string_literal21=(IToken)Match(input,USING,Follow._USING_in_using_alias_directive209); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal21_tree = (object)adaptor.Create(string_literal21, retval);
			adaptor.AddChild(root_0, string_literal21_tree);
			}
			DebugLocation(54, 12);
			PushFollow(Follow._identifier_in_using_alias_directive213);
			identifier22=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier22.Tree, identifier22, retval);
			DebugLocation(54, 25);
			char_literal23=(IToken)Match(input,85,Follow._85_in_using_alias_directive217); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal23_tree = (object)adaptor.Create(char_literal23, retval);
			adaptor.AddChild(root_0, char_literal23_tree);
			}
			DebugLocation(54, 31);
			PushFollow(Follow._namespace_or_type_name_in_using_alias_directive221);
			namespace_or_type_name24=namespace_or_type_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, namespace_or_type_name24.Tree, namespace_or_type_name24, retval);
			DebugLocation(54, 56);
			char_literal25=(IToken)Match(input,SEMI,Follow._SEMI_in_using_alias_directive225); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal25_tree = (object)adaptor.Create(char_literal25, retval);
			adaptor.AddChild(root_0, char_literal25_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("using_alias_directive", 9);
			LeaveRule("using_alias_directive", 9);
			LeaveRule_using_alias_directive();
			if (state.backtracking > 0) { Memoize(input, 9, using_alias_directive_StartIndex); }

		}
		DebugLocation(54, 59);
		} finally { DebugExitRule(GrammarFileName, "using_alias_directive"); }
		return retval;

	}
	// $ANTLR end "using_alias_directive"

	partial void EnterRule_using_namespace_directive();
	partial void LeaveRule_using_namespace_directive();
	// $ANTLR start "using_namespace_directive"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:55:1: using_namespace_directive : 'using' namespace_name ';' ;
	[GrammarRule("using_namespace_directive")]
	private Antlr3AstNode using_namespace_directive()
	{
		EnterRule_using_namespace_directive();
		EnterRule("using_namespace_directive", 10);
		var retval = new Antlr3AstNode("using_namespace_directive");
		
		retval.Start = (IToken)input.LT(1);
		int using_namespace_directive_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal26 = default(IToken);
		IToken char_literal28 = default(IToken);
		Antlr3AstNode namespace_name27 = default(Antlr3AstNode);

		object string_literal26_tree = default(object);
		object char_literal28_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "using_namespace_directive");
		DebugLocation(55, 32);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 10)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:55:26: ( 'using' namespace_name ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:56:2: 'using' namespace_name ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(56, 2);
			string_literal26=(IToken)Match(input,USING,Follow._USING_in_using_namespace_directive233); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal26_tree = (object)adaptor.Create(string_literal26, retval);
			adaptor.AddChild(root_0, string_literal26_tree);
			}
			DebugLocation(56, 12);
			PushFollow(Follow._namespace_name_in_using_namespace_directive237);
			namespace_name27=namespace_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, namespace_name27.Tree, namespace_name27, retval);
			DebugLocation(56, 29);
			char_literal28=(IToken)Match(input,SEMI,Follow._SEMI_in_using_namespace_directive241); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal28_tree = (object)adaptor.Create(char_literal28, retval);
			adaptor.AddChild(root_0, char_literal28_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("using_namespace_directive", 10);
			LeaveRule("using_namespace_directive", 10);
			LeaveRule_using_namespace_directive();
			if (state.backtracking > 0) { Memoize(input, 10, using_namespace_directive_StartIndex); }

		}
		DebugLocation(56, 32);
		} finally { DebugExitRule(GrammarFileName, "using_namespace_directive"); }
		return retval;

	}
	// $ANTLR end "using_namespace_directive"

	partial void EnterRule_namespace_member_declarations();
	partial void LeaveRule_namespace_member_declarations();
	// $ANTLR start "namespace_member_declarations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:57:1: namespace_member_declarations : ( namespace_member_declaration )+ ;
	[GrammarRule("namespace_member_declarations")]
	private Antlr3AstNode namespace_member_declarations()
	{
		EnterRule_namespace_member_declarations();
		EnterRule("namespace_member_declarations", 11);
		var retval = new Antlr3AstNode("namespace_member_declarations");
		
		retval.Start = (IToken)input.LT(1);
		int namespace_member_declarations_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode namespace_member_declaration29 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "namespace_member_declarations");
		DebugLocation(57, 31);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 11)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:57:30: ( ( namespace_member_declaration )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:58:2: ( namespace_member_declaration )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(58, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:58:2: ( namespace_member_declaration )+
			int cnt9=0;
			try { DebugEnterSubRule(9);
			while (true)
			{
				int alt9=2;
				try { DebugEnterDecision(9, false);
				int LA9_1 = input.LA(1);

				if ((LA9_1==ENUM||LA9_1==91||LA9_1==96||LA9_1==111||LA9_1==116||LA9_1==125||(LA9_1>=139 && LA9_1<=140)||(LA9_1>=149 && LA9_1<=150)||LA9_1==156||LA9_1==159||LA9_1==161||(LA9_1>=163 && LA9_1<=165)||LA9_1==170||LA9_1==176||LA9_1==178||LA9_1==188||LA9_1==191||LA9_1==193))
				{
					alt9 = 1;
				}


				} finally { DebugExitDecision(9); }
				switch (alt9)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:58:2: namespace_member_declaration
					{
					DebugLocation(58, 2);
					PushFollow(Follow._namespace_member_declaration_in_namespace_member_declarations249);
					namespace_member_declaration29=namespace_member_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, namespace_member_declaration29.Tree, namespace_member_declaration29, retval);

					}
					break;

				default:
					if (cnt9 >= 1)
						goto loop9;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee9 = new EarlyExitException( 9, input );
					DebugRecognitionException(eee9);
					throw eee9;
				}
				cnt9++;
			}
			loop9:
				;

			} finally { DebugExitSubRule(9); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("namespace_member_declarations", 11);
			LeaveRule("namespace_member_declarations", 11);
			LeaveRule_namespace_member_declarations();
			if (state.backtracking > 0) { Memoize(input, 11, namespace_member_declarations_StartIndex); }

		}
		DebugLocation(58, 31);
		} finally { DebugExitRule(GrammarFileName, "namespace_member_declarations"); }
		return retval;

	}
	// $ANTLR end "namespace_member_declarations"

	partial void EnterRule_namespace_member_declaration();
	partial void LeaveRule_namespace_member_declaration();
	// $ANTLR start "namespace_member_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:59:1: namespace_member_declaration : ( namespace_declaration | ( attributes )? ( modifiers )? type_declaration );
	[GrammarRule("namespace_member_declaration")]
	private Antlr3AstNode namespace_member_declaration()
	{
		EnterRule_namespace_member_declaration();
		EnterRule("namespace_member_declaration", 12);
		var retval = new Antlr3AstNode("namespace_member_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int namespace_member_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode namespace_declaration30 = default(Antlr3AstNode);
		Antlr3AstNode attributes31 = default(Antlr3AstNode);
		Antlr3AstNode modifiers32 = default(Antlr3AstNode);
		Antlr3AstNode type_declaration33 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "namespace_member_declaration");
		DebugLocation(59, 47);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 12)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:59:29: ( namespace_declaration | ( attributes )? ( modifiers )? type_declaration )
			int alt12=2;
			try { DebugEnterDecision(12, false);
			int LA12_1 = input.LA(1);

			if ((LA12_1==149))
			{
				alt12 = 1;
			}
			else if ((LA12_1==ENUM||LA12_1==91||LA12_1==96||LA12_1==111||LA12_1==116||LA12_1==125||(LA12_1>=139 && LA12_1<=140)||LA12_1==150||LA12_1==156||LA12_1==159||LA12_1==161||(LA12_1>=163 && LA12_1<=165)||LA12_1==170||LA12_1==176||LA12_1==178||LA12_1==188||LA12_1==191||LA12_1==193))
			{
				alt12 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 12, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(12); }
			switch (alt12)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:60:2: namespace_declaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(60, 2);
				PushFollow(Follow._namespace_declaration_in_namespace_member_declaration258);
				namespace_declaration30=namespace_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, namespace_declaration30.Tree, namespace_declaration30, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:61:4: ( attributes )? ( modifiers )? type_declaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(61, 4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:61:4: ( attributes )?
				int alt10=2;
				try { DebugEnterSubRule(10);
				try { DebugEnterDecision(10, false);
				int LA10_1 = input.LA(1);

				if ((LA10_1==91))
				{
					alt10 = 1;
				}
				} finally { DebugExitDecision(10); }
				switch (alt10)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:61:4: attributes
					{
					DebugLocation(61, 4);
					PushFollow(Follow._attributes_in_namespace_member_declaration263);
					attributes31=attributes();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, attributes31.Tree, attributes31, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(10); }

				DebugLocation(61, 18);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:61:18: ( modifiers )?
				int alt11=2;
				try { DebugEnterSubRule(11);
				try { DebugEnterDecision(11, false);
				int LA11_1 = input.LA(1);

				if ((LA11_1==96||LA11_1==125||LA11_1==140||LA11_1==150||LA11_1==156||LA11_1==161||(LA11_1>=163 && LA11_1<=165)||LA11_1==170||LA11_1==176||LA11_1==188||LA11_1==191||LA11_1==193))
				{
					alt11 = 1;
				}
				} finally { DebugExitDecision(11); }
				switch (alt11)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:61:18: modifiers
					{
					DebugLocation(61, 18);
					PushFollow(Follow._modifiers_in_namespace_member_declaration268);
					modifiers32=modifiers();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers32.Tree, modifiers32, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(11); }

				DebugLocation(61, 31);
				PushFollow(Follow._type_declaration_in_namespace_member_declaration273);
				type_declaration33=type_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type_declaration33.Tree, type_declaration33, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("namespace_member_declaration", 12);
			LeaveRule("namespace_member_declaration", 12);
			LeaveRule_namespace_member_declaration();
			if (state.backtracking > 0) { Memoize(input, 12, namespace_member_declaration_StartIndex); }

		}
		DebugLocation(61, 47);
		} finally { DebugExitRule(GrammarFileName, "namespace_member_declaration"); }
		return retval;

	}
	// $ANTLR end "namespace_member_declaration"

	partial void EnterRule_type_declaration();
	partial void LeaveRule_type_declaration();
	// $ANTLR start "type_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:62:1: type_declaration : ( ( 'partial' )=> 'partial' ( class_declaration | struct_declaration | interface_declaration ) | class_declaration | struct_declaration | interface_declaration | enum_declaration | delegate_declaration );
	[GrammarRule("type_declaration")]
	private Antlr3AstNode type_declaration()
	{
		EnterRule_type_declaration();
		EnterRule("type_declaration", 13);
		var retval = new Antlr3AstNode("type_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int type_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal34 = default(IToken);
		Antlr3AstNode class_declaration35 = default(Antlr3AstNode);
		Antlr3AstNode struct_declaration36 = default(Antlr3AstNode);
		Antlr3AstNode interface_declaration37 = default(Antlr3AstNode);
		Antlr3AstNode class_declaration38 = default(Antlr3AstNode);
		Antlr3AstNode struct_declaration39 = default(Antlr3AstNode);
		Antlr3AstNode interface_declaration40 = default(Antlr3AstNode);
		Antlr3AstNode enum_declaration41 = default(Antlr3AstNode);
		Antlr3AstNode delegate_declaration42 = default(Antlr3AstNode);

		object string_literal34_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "type_declaration");
		DebugLocation(62, 24);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 13)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:62:17: ( ( 'partial' )=> 'partial' ( class_declaration | struct_declaration | interface_declaration ) | class_declaration | struct_declaration | interface_declaration | enum_declaration | delegate_declaration )
			int alt14=6;
			try { DebugEnterDecision(14, false);
			int LA14_1 = input.LA(1);

			if ((LA14_1==159) && (EvaluatePredicate(synpred1_cs_fragment)))
			{
				alt14 = 1;
			}
			else if ((LA14_1==111))
			{
				alt14 = 2;
			}
			else if ((LA14_1==178))
			{
				alt14 = 3;
			}
			else if ((LA14_1==139))
			{
				alt14 = 4;
			}
			else if ((LA14_1==ENUM))
			{
				alt14 = 5;
			}
			else if ((LA14_1==116))
			{
				alt14 = 6;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 14, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(14); }
			switch (alt14)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:63:2: ( 'partial' )=> 'partial' ( class_declaration | struct_declaration | interface_declaration )
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(63, 17);
				string_literal34=(IToken)Match(input,159,Follow._159_in_type_declaration287); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal34_tree = (object)adaptor.Create(string_literal34, retval);
				adaptor.AddChild(root_0, string_literal34_tree);
				}
				DebugLocation(63, 29);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:63:29: ( class_declaration | struct_declaration | interface_declaration )
				int alt13=3;
				try { DebugEnterSubRule(13);
				try { DebugEnterDecision(13, false);
				switch (input.LA(1))
				{
				case 111:
					{
					alt13 = 1;
					}
					break;
				case 178:
					{
					alt13 = 2;
					}
					break;
				case 139:
					{
					alt13 = 3;
					}
					break;
				default:
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 13, 0, input, 1);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}

				} finally { DebugExitDecision(13); }
				switch (alt13)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:63:30: class_declaration
					{
					DebugLocation(63, 30);
					PushFollow(Follow._class_declaration_in_type_declaration292);
					class_declaration35=class_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, class_declaration35.Tree, class_declaration35, retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:64:11: struct_declaration
					{
					DebugLocation(64, 11);
					PushFollow(Follow._struct_declaration_in_type_declaration304);
					struct_declaration36=struct_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, struct_declaration36.Tree, struct_declaration36, retval);

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:65:11: interface_declaration
					{
					DebugLocation(65, 11);
					PushFollow(Follow._interface_declaration_in_type_declaration316);
					interface_declaration37=interface_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, interface_declaration37.Tree, interface_declaration37, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(13); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:66:4: class_declaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(66, 4);
				PushFollow(Follow._class_declaration_in_type_declaration322);
				class_declaration38=class_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, class_declaration38.Tree, class_declaration38, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:67:4: struct_declaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(67, 4);
				PushFollow(Follow._struct_declaration_in_type_declaration327);
				struct_declaration39=struct_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, struct_declaration39.Tree, struct_declaration39, retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:68:4: interface_declaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(68, 4);
				PushFollow(Follow._interface_declaration_in_type_declaration332);
				interface_declaration40=interface_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interface_declaration40.Tree, interface_declaration40, retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:69:4: enum_declaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(69, 4);
				PushFollow(Follow._enum_declaration_in_type_declaration337);
				enum_declaration41=enum_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enum_declaration41.Tree, enum_declaration41, retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:70:4: delegate_declaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(70, 4);
				PushFollow(Follow._delegate_declaration_in_type_declaration342);
				delegate_declaration42=delegate_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, delegate_declaration42.Tree, delegate_declaration42, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("type_declaration", 13);
			LeaveRule("type_declaration", 13);
			LeaveRule_type_declaration();
			if (state.backtracking > 0) { Memoize(input, 13, type_declaration_StartIndex); }

		}
		DebugLocation(70, 24);
		} finally { DebugExitRule(GrammarFileName, "type_declaration"); }
		return retval;

	}
	// $ANTLR end "type_declaration"

	partial void EnterRule_qualified_identifier();
	partial void LeaveRule_qualified_identifier();
	// $ANTLR start "qualified_identifier"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:72:1: qualified_identifier : identifier ( '.' identifier )* ;
	[GrammarRule("qualified_identifier")]
	private Antlr3AstNode qualified_identifier()
	{
		EnterRule_qualified_identifier();
		EnterRule("qualified_identifier", 14);
		var retval = new Antlr3AstNode("qualified_identifier");
		
		retval.Start = (IToken)input.LT(1);
		int qualified_identifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal44 = default(IToken);
		Antlr3AstNode identifier43 = default(Antlr3AstNode);
		Antlr3AstNode identifier45 = default(Antlr3AstNode);

		object char_literal44_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "qualified_identifier");
		DebugLocation(72, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 14)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:72:21: ( identifier ( '.' identifier )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:73:2: identifier ( '.' identifier )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(73, 2);
			PushFollow(Follow._identifier_in_qualified_identifier351);
			identifier43=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier43.Tree, identifier43, retval);
			DebugLocation(73, 13);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:73:13: ( '.' identifier )*
			try { DebugEnterSubRule(15);
			while (true)
			{
				int alt15=2;
				try { DebugEnterDecision(15, false);
				int LA15_1 = input.LA(1);

				if ((LA15_1==DOT))
				{
					alt15 = 1;
				}


				} finally { DebugExitDecision(15); }
				switch ( alt15 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:73:14: '.' identifier
					{
					DebugLocation(73, 14);
					char_literal44=(IToken)Match(input,DOT,Follow._DOT_in_qualified_identifier354); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal44_tree = (object)adaptor.Create(char_literal44, retval);
					adaptor.AddChild(root_0, char_literal44_tree);
					}
					DebugLocation(73, 18);
					PushFollow(Follow._identifier_in_qualified_identifier356);
					identifier45=identifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, identifier45.Tree, identifier45, retval);

					}
					break;

				default:
					goto loop15;
				}
			}

			loop15:
				;

			} finally { DebugExitSubRule(15); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("qualified_identifier", 14);
			LeaveRule("qualified_identifier", 14);
			LeaveRule_qualified_identifier();
			if (state.backtracking > 0) { Memoize(input, 14, qualified_identifier_StartIndex); }

		}
		DebugLocation(73, 30);
		} finally { DebugExitRule(GrammarFileName, "qualified_identifier"); }
		return retval;

	}
	// $ANTLR end "qualified_identifier"

	partial void EnterRule_namespace_name();
	partial void LeaveRule_namespace_name();
	// $ANTLR start "namespace_name"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:74:1: namespace_name : namespace_or_type_name ;
	[GrammarRule("namespace_name")]
	private Antlr3AstNode namespace_name()
	{
		EnterRule_namespace_name();
		EnterRule("namespace_name", 15);
		var retval = new Antlr3AstNode("namespace_name");
		
		retval.Start = (IToken)input.LT(1);
		int namespace_name_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode namespace_or_type_name46 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "namespace_name");
		DebugLocation(74, 26);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 15)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:75:2: ( namespace_or_type_name )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:75:4: namespace_or_type_name
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(75, 4);
			PushFollow(Follow._namespace_or_type_name_in_namespace_name367);
			namespace_or_type_name46=namespace_or_type_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, namespace_or_type_name46.Tree, namespace_or_type_name46, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("namespace_name", 15);
			LeaveRule("namespace_name", 15);
			LeaveRule_namespace_name();
			if (state.backtracking > 0) { Memoize(input, 15, namespace_name_StartIndex); }

		}
		DebugLocation(75, 26);
		} finally { DebugExitRule(GrammarFileName, "namespace_name"); }
		return retval;

	}
	// $ANTLR end "namespace_name"

	partial void EnterRule_modifiers();
	partial void LeaveRule_modifiers();
	// $ANTLR start "modifiers"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:77:1: modifiers : ( modifier )+ ;
	[GrammarRule("modifiers")]
	private Antlr3AstNode modifiers()
	{
		EnterRule_modifiers();
		EnterRule("modifiers", 16);
		var retval = new Antlr3AstNode("modifiers");
		
		retval.Start = (IToken)input.LT(1);
		int modifiers_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode modifier47 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "modifiers");
		DebugLocation(77, 11);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 16)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:77:10: ( ( modifier )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:78:2: ( modifier )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(78, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:78:2: ( modifier )+
			int cnt16=0;
			try { DebugEnterSubRule(16);
			while (true)
			{
				int alt16=2;
				try { DebugEnterDecision(16, false);
				int LA16_1 = input.LA(1);

				if ((LA16_1==96||LA16_1==125||LA16_1==140||LA16_1==150||LA16_1==156||LA16_1==161||(LA16_1>=163 && LA16_1<=165)||LA16_1==170||LA16_1==176||LA16_1==188||LA16_1==191||LA16_1==193))
				{
					alt16 = 1;
				}


				} finally { DebugExitDecision(16); }
				switch (alt16)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:78:2: modifier
					{
					DebugLocation(78, 2);
					PushFollow(Follow._modifier_in_modifiers376);
					modifier47=modifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, modifier47.Tree, modifier47, retval);

					}
					break;

				default:
					if (cnt16 >= 1)
						goto loop16;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee16 = new EarlyExitException( 16, input );
					DebugRecognitionException(eee16);
					throw eee16;
				}
				cnt16++;
			}
			loop16:
				;

			} finally { DebugExitSubRule(16); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("modifiers", 16);
			LeaveRule("modifiers", 16);
			LeaveRule_modifiers();
			if (state.backtracking > 0) { Memoize(input, 16, modifiers_StartIndex); }

		}
		DebugLocation(78, 11);
		} finally { DebugExitRule(GrammarFileName, "modifiers"); }
		return retval;

	}
	// $ANTLR end "modifiers"

	partial void EnterRule_modifier();
	partial void LeaveRule_modifier();
	// $ANTLR start "modifier"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:79:1: modifier : ( 'new' | 'public' | 'protected' | 'private' | 'internal' | 'unsafe' | 'abstract' | 'sealed' | 'static' | 'readonly' | 'volatile' | 'extern' | 'virtual' | 'override' );
	[GrammarRule("modifier")]
	private Antlr3AstNode modifier()
	{
		EnterRule_modifier();
		EnterRule("modifier", 17);
		var retval = new Antlr3AstNode("modifier");
		
		retval.Start = (IToken)input.LT(1);
		int modifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set48 = default(IToken);

		object set48_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "modifier");
		DebugLocation(79, 62);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 17)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:79:9: ( 'new' | 'public' | 'protected' | 'private' | 'internal' | 'unsafe' | 'abstract' | 'sealed' | 'static' | 'readonly' | 'volatile' | 'extern' | 'virtual' | 'override' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(79, 9);

			set48=(IToken)input.LT(1);
			if (input.LA(1)==96||input.LA(1)==125||input.LA(1)==140||input.LA(1)==150||input.LA(1)==156||input.LA(1)==161||(input.LA(1)>=163 && input.LA(1)<=165)||input.LA(1)==170||input.LA(1)==176||input.LA(1)==188||input.LA(1)==191||input.LA(1)==193)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set48, retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("modifier", 17);
			LeaveRule("modifier", 17);
			LeaveRule_modifier();
			if (state.backtracking > 0) { Memoize(input, 17, modifier_StartIndex); }

		}
		DebugLocation(81, 62);
		} finally { DebugExitRule(GrammarFileName, "modifier"); }
		return retval;

	}
	// $ANTLR end "modifier"

	partial void EnterRule_class_member_declaration();
	partial void LeaveRule_class_member_declaration();
	// $ANTLR start "class_member_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:83:1: class_member_declaration : ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | class_declaration | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration ) ;
	[GrammarRule("class_member_declaration")]
	private Antlr3AstNode class_member_declaration()
	{
		EnterRule_class_member_declaration();
		EnterRule("class_member_declaration", 18);
		var retval = new Antlr3AstNode("class_member_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int class_member_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal50 = default(IToken);
		IToken char_literal53 = default(IToken);
		IToken string_literal55 = default(IToken);
		IToken string_literal61 = default(IToken);
		IToken char_literal67 = default(IToken);
		Antlr3AstNode m = default(Antlr3AstNode);
		Antlr3AstNode attributes49 = default(Antlr3AstNode);
		Antlr3AstNode type51 = default(Antlr3AstNode);
		Antlr3AstNode constant_declarators52 = default(Antlr3AstNode);
		Antlr3AstNode event_declaration54 = default(Antlr3AstNode);
		Antlr3AstNode method_declaration56 = default(Antlr3AstNode);
		Antlr3AstNode interface_declaration57 = default(Antlr3AstNode);
		Antlr3AstNode class_declaration58 = default(Antlr3AstNode);
		Antlr3AstNode struct_declaration59 = default(Antlr3AstNode);
		Antlr3AstNode interface_declaration60 = default(Antlr3AstNode);
		Antlr3AstNode method_declaration62 = default(Antlr3AstNode);
		Antlr3AstNode type63 = default(Antlr3AstNode);
		Antlr3AstNode method_declaration64 = default(Antlr3AstNode);
		Antlr3AstNode property_declaration65 = default(Antlr3AstNode);
		Antlr3AstNode type_name66 = default(Antlr3AstNode);
		Antlr3AstNode indexer_declaration68 = default(Antlr3AstNode);
		Antlr3AstNode indexer_declaration69 = default(Antlr3AstNode);
		Antlr3AstNode field_declaration70 = default(Antlr3AstNode);
		Antlr3AstNode operator_declaration71 = default(Antlr3AstNode);
		Antlr3AstNode class_declaration72 = default(Antlr3AstNode);
		Antlr3AstNode struct_declaration73 = default(Antlr3AstNode);
		Antlr3AstNode enum_declaration74 = default(Antlr3AstNode);
		Antlr3AstNode delegate_declaration75 = default(Antlr3AstNode);
		Antlr3AstNode conversion_operator_declaration76 = default(Antlr3AstNode);
		Antlr3AstNode constructor_declaration77 = default(Antlr3AstNode);
		Antlr3AstNode destructor_declaration78 = default(Antlr3AstNode);

		object string_literal50_tree = default(object);
		object char_literal53_tree = default(object);
		object string_literal55_tree = default(object);
		object string_literal61_tree = default(object);
		object char_literal67_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "class_member_declaration");
		DebugLocation(83, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 18)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:83:25: ( ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | class_declaration | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:84:2: ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | class_declaration | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(84, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:84:2: ( attributes )?
			int alt17=2;
			try { DebugEnterSubRule(17);
			try { DebugEnterDecision(17, false);
			int LA17_1 = input.LA(1);

			if ((LA17_1==91))
			{
				alt17 = 1;
			}
			} finally { DebugExitDecision(17); }
			switch (alt17)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:84:2: attributes
				{
				DebugLocation(84, 2);
				PushFollow(Follow._attributes_in_class_member_declaration448);
				attributes49=attributes();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, attributes49.Tree, attributes49, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(17); }

			DebugLocation(85, 3);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:85:3: (m= modifiers )?
			int alt18=2;
			try { DebugEnterSubRule(18);
			try { DebugEnterDecision(18, false);
			int LA18_1 = input.LA(1);

			if ((LA18_1==96||LA18_1==125||LA18_1==140||LA18_1==150||LA18_1==156||LA18_1==161||(LA18_1>=163 && LA18_1<=165)||LA18_1==170||LA18_1==176||LA18_1==188||LA18_1==191||LA18_1==193))
			{
				alt18 = 1;
			}
			} finally { DebugExitDecision(18); }
			switch (alt18)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:85:3: m= modifiers
				{
				DebugLocation(85, 3);
				PushFollow(Follow._modifiers_in_class_member_declaration454);
				m=modifiers();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, m.Tree, m, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(18); }

			DebugLocation(86, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:86:2: ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | class_declaration | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration )
			int alt21=13;
			try { DebugEnterSubRule(21);
			try { DebugEnterDecision(21, false);
			switch (input.LA(1))
			{
			case 112:
				{
				alt21 = 1;
				}
				break;
			case 123:
				{
				alt21 = 2;
				}
				break;
			case 159:
				{
				alt21 = 3;
				}
				break;
			case 139:
				{
				alt21 = 4;
				}
				break;
			case 192:
				{
				int LA21_2 = input.LA(2);

				if ((LA21_2==Character_literal||LA21_2==FALSE||(LA21_2>=Hex_number && LA21_2<=IDENTIFIER)||(LA21_2>=NULL && LA21_2<=NUMBER)||LA21_2==Real_literal||LA21_2==STRINGLITERAL||LA21_2==TRUE||LA21_2==Verbatim_string_literal||LA21_2==95||(LA21_2>=97 && LA21_2<=98)||(LA21_2>=100 && LA21_2<=101)||LA21_2==103||(LA21_2>=105 && LA21_2<=106)||LA21_2==109||LA21_2==114||LA21_2==117||(LA21_2>=119 && LA21_2<=120)||LA21_2==122||LA21_2==126||LA21_2==129||LA21_2==132||LA21_2==135||LA21_2==138||LA21_2==141||(LA21_2>=143 && LA21_2<=144)||(LA21_2>=146 && LA21_2<=148)||(LA21_2>=151 && LA21_2<=152)||LA21_2==154||LA21_2==157||LA21_2==160||LA21_2==162||LA21_2==167||LA21_2==169||(LA21_2>=171 && LA21_2<=173)||LA21_2==177||LA21_2==183||(LA21_2>=185 && LA21_2<=186)||(LA21_2>=189 && LA21_2<=190)||LA21_2==194||LA21_2==196))
				{
					alt21 = 5;
				}
				else if ((LA21_2==69))
				{
					alt21 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 21, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 103:
			case 106:
			case 109:
			case 114:
			case 119:
			case 129:
			case 138:
			case 146:
			case 151:
			case 169:
			case 173:
			case 177:
			case 185:
			case 186:
			case 189:
				{
				alt21 = 6;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 132:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA21_2 = input.LA(2);

				if ((LA21_2==Character_literal||LA21_2==DOT||LA21_2==FALSE||(LA21_2>=Hex_number && LA21_2<=IDENTIFIER)||(LA21_2>=NULL && LA21_2<=NUMBER)||LA21_2==Real_literal||LA21_2==STRINGLITERAL||LA21_2==TRUE||LA21_2==Verbatim_string_literal||LA21_2==69||(LA21_2>=80 && LA21_2<=81)||LA21_2==89||LA21_2==91||LA21_2==95||(LA21_2>=97 && LA21_2<=98)||(LA21_2>=100 && LA21_2<=101)||LA21_2==103||(LA21_2>=105 && LA21_2<=106)||LA21_2==109||LA21_2==114||LA21_2==117||(LA21_2>=119 && LA21_2<=120)||LA21_2==122||LA21_2==126||LA21_2==129||LA21_2==132||LA21_2==135||LA21_2==138||LA21_2==141||(LA21_2>=143 && LA21_2<=144)||(LA21_2>=146 && LA21_2<=148)||(LA21_2>=151 && LA21_2<=154)||LA21_2==157||LA21_2==160||LA21_2==162||LA21_2==167||LA21_2==169||(LA21_2>=171 && LA21_2<=173)||LA21_2==177||LA21_2==180||LA21_2==183||(LA21_2>=185 && LA21_2<=186)||(LA21_2>=189 && LA21_2<=190)||LA21_2==194||LA21_2==196))
				{
					alt21 = 6;
				}
				else if ((LA21_2==68))
				{
					alt21 = 12;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 21, 7, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 111:
				{
				alt21 = 7;
				}
				break;
			case 178:
				{
				alt21 = 8;
				}
				break;
			case ENUM:
				{
				alt21 = 9;
				}
				break;
			case 116:
				{
				alt21 = 10;
				}
				break;
			case 124:
			case 136:
				{
				alt21 = 11;
				}
				break;
			case 202:
				{
				alt21 = 13;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 21, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(21); }
			switch (alt21)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:86:4: 'const' type constant_declarators ';'
				{
				DebugLocation(86, 4);
				string_literal50=(IToken)Match(input,112,Follow._112_in_class_member_declaration460); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal50_tree = (object)adaptor.Create(string_literal50, retval);
				adaptor.AddChild(root_0, string_literal50_tree);
				}
				DebugLocation(86, 14);
				PushFollow(Follow._type_in_class_member_declaration464);
				type51=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type51.Tree, type51, retval);
				DebugLocation(86, 21);
				PushFollow(Follow._constant_declarators_in_class_member_declaration468);
				constant_declarators52=constant_declarators();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constant_declarators52.Tree, constant_declarators52, retval);
				DebugLocation(86, 44);
				char_literal53=(IToken)Match(input,SEMI,Follow._SEMI_in_class_member_declaration472); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal53_tree = (object)adaptor.Create(char_literal53, retval);
				adaptor.AddChild(root_0, char_literal53_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:87:4: event_declaration
				{
				DebugLocation(87, 4);
				PushFollow(Follow._event_declaration_in_class_member_declaration477);
				event_declaration54=event_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, event_declaration54.Tree, event_declaration54, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:88:4: 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration )
				{
				DebugLocation(88, 4);
				string_literal55=(IToken)Match(input,159,Follow._159_in_class_member_declaration484); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal55_tree = (object)adaptor.Create(string_literal55, retval);
				adaptor.AddChild(root_0, string_literal55_tree);
				}
				DebugLocation(88, 14);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:88:14: ( method_declaration | interface_declaration | class_declaration | struct_declaration )
				int alt19=4;
				try { DebugEnterSubRule(19);
				try { DebugEnterDecision(19, false);
				switch (input.LA(1))
				{
				case Character_literal:
				case FALSE:
				case Hex_number:
				case IDENTIFIER:
				case NULL:
				case NUMBER:
				case Real_literal:
				case STRINGLITERAL:
				case TRUE:
				case Verbatim_string_literal:
				case 95:
				case 97:
				case 98:
				case 100:
				case 101:
				case 103:
				case 105:
				case 106:
				case 109:
				case 114:
				case 117:
				case 119:
				case 120:
				case 122:
				case 126:
				case 129:
				case 132:
				case 135:
				case 138:
				case 141:
				case 143:
				case 144:
				case 146:
				case 147:
				case 148:
				case 151:
				case 152:
				case 154:
				case 157:
				case 160:
				case 162:
				case 167:
				case 169:
				case 171:
				case 172:
				case 173:
				case 177:
				case 183:
				case 185:
				case 186:
				case 189:
				case 190:
				case 194:
				case 196:
					{
					alt19 = 1;
					}
					break;
				case 139:
					{
					alt19 = 2;
					}
					break;
				case 111:
					{
					alt19 = 3;
					}
					break;
				case 178:
					{
					alt19 = 4;
					}
					break;
				default:
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 19, 0, input, 1);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}

				} finally { DebugExitDecision(19); }
				switch (alt19)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:88:15: method_declaration
					{
					DebugLocation(88, 15);
					PushFollow(Follow._method_declaration_in_class_member_declaration487);
					method_declaration56=method_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, method_declaration56.Tree, method_declaration56, retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:89:9: interface_declaration
					{
					DebugLocation(89, 9);
					PushFollow(Follow._interface_declaration_in_class_member_declaration498);
					interface_declaration57=interface_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, interface_declaration57.Tree, interface_declaration57, retval);

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:90:9: class_declaration
					{
					DebugLocation(90, 9);
					PushFollow(Follow._class_declaration_in_class_member_declaration509);
					class_declaration58=class_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, class_declaration58.Tree, class_declaration58, retval);

					}
					break;
				case 4:
					DebugEnterAlt(4);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:91:9: struct_declaration
					{
					DebugLocation(91, 9);
					PushFollow(Follow._struct_declaration_in_class_member_declaration520);
					struct_declaration59=struct_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, struct_declaration59.Tree, struct_declaration59, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(19); }


				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:92:4: interface_declaration
				{
				DebugLocation(92, 4);
				PushFollow(Follow._interface_declaration_in_class_member_declaration526);
				interface_declaration60=interface_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interface_declaration60.Tree, interface_declaration60, retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:93:4: 'void' method_declaration
				{
				DebugLocation(93, 4);
				string_literal61=(IToken)Match(input,192,Follow._192_in_class_member_declaration532); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal61_tree = (object)adaptor.Create(string_literal61, retval);
				adaptor.AddChild(root_0, string_literal61_tree);
				}
				DebugLocation(93, 13);
				PushFollow(Follow._method_declaration_in_class_member_declaration536);
				method_declaration62=method_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, method_declaration62.Tree, method_declaration62, retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:94:4: type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )
				{
				DebugLocation(94, 4);
				PushFollow(Follow._type_in_class_member_declaration541);
				type63=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type63.Tree, type63, retval);
				DebugLocation(94, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:94:9: ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )
				int alt20=6;
				try { DebugEnterSubRule(20);
				try { DebugEnterDecision(20, false);
				switch (input.LA(1))
				{
				case 103:
				case 106:
				case 109:
				case 114:
				case 119:
				case 129:
				case 138:
				case 146:
				case 151:
				case 169:
				case 173:
				case 177:
				case 185:
				case 186:
				case 189:
					{
					int LA20_2 = input.LA(2);

					if ((EvaluatePredicate(synpred2_cs_fragment)))
					{
						alt20 = 1;
					}
					else if ((EvaluatePredicate(synpred3_cs_fragment)))
					{
						alt20 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 20, 1, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					}
					break;
				case IDENTIFIER:
				case 95:
				case 97:
				case 98:
				case 100:
				case 101:
				case 105:
				case 117:
				case 120:
				case 122:
				case 126:
				case 132:
				case 135:
				case 141:
				case 143:
				case 144:
				case 147:
				case 148:
				case 152:
				case 154:
				case 157:
				case 160:
				case 162:
				case 167:
				case 171:
				case 172:
				case 183:
				case 190:
				case 194:
				case 196:
					{
					int LA20_2 = input.LA(2);

					if ((EvaluatePredicate(synpred2_cs_fragment)))
					{
						alt20 = 1;
					}
					else if ((EvaluatePredicate(synpred3_cs_fragment)))
					{
						alt20 = 2;
					}
					else if ((EvaluatePredicate(synpred4_cs_fragment)))
					{
						alt20 = 3;
					}
					else if ((true))
					{
						alt20 = 5;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 20, 2, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					}
					break;
				case Character_literal:
				case FALSE:
				case Hex_number:
				case NULL:
				case NUMBER:
				case Real_literal:
				case STRINGLITERAL:
				case TRUE:
				case Verbatim_string_literal:
					{
					int LA20_2 = input.LA(2);

					if ((EvaluatePredicate(synpred2_cs_fragment)))
					{
						alt20 = 1;
					}
					else if ((EvaluatePredicate(synpred3_cs_fragment)))
					{
						alt20 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 20, 3, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					}
					break;
				case 180:
					{
					alt20 = 4;
					}
					break;
				case 153:
					{
					alt20 = 6;
					}
					break;
				default:
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 20, 0, input, 1);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}

				} finally { DebugExitDecision(20); }
				switch (alt20)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:94:11: ( member_name '(' )=> method_declaration
					{
					DebugLocation(94, 34);
					PushFollow(Follow._method_declaration_in_class_member_declaration555);
					method_declaration64=method_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, method_declaration64.Tree, method_declaration64, retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:95:8: ( member_name '{' )=> property_declaration
					{
					DebugLocation(95, 31);
					PushFollow(Follow._property_declaration_in_class_member_declaration574);
					property_declaration65=property_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, property_declaration65.Tree, property_declaration65, retval);

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:96:8: ( member_name '.' 'this' )=> type_name '.' indexer_declaration
					{
					DebugLocation(96, 40);
					PushFollow(Follow._type_name_in_class_member_declaration597);
					type_name66=type_name();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type_name66.Tree, type_name66, retval);
					DebugLocation(96, 50);
					char_literal67=(IToken)Match(input,DOT,Follow._DOT_in_class_member_declaration599); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal67_tree = (object)adaptor.Create(char_literal67, retval);
					adaptor.AddChild(root_0, char_literal67_tree);
					}
					DebugLocation(96, 54);
					PushFollow(Follow._indexer_declaration_in_class_member_declaration601);
					indexer_declaration68=indexer_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, indexer_declaration68.Tree, indexer_declaration68, retval);

					}
					break;
				case 4:
					DebugEnterAlt(4);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:97:8: indexer_declaration
					{
					DebugLocation(97, 8);
					PushFollow(Follow._indexer_declaration_in_class_member_declaration610);
					indexer_declaration69=indexer_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, indexer_declaration69.Tree, indexer_declaration69, retval);

					}
					break;
				case 5:
					DebugEnterAlt(5);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:98:11: field_declaration
					{
					DebugLocation(98, 11);
					PushFollow(Follow._field_declaration_in_class_member_declaration623);
					field_declaration70=field_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, field_declaration70.Tree, field_declaration70, retval);

					}
					break;
				case 6:
					DebugEnterAlt(6);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:99:11: operator_declaration
					{
					DebugLocation(99, 11);
					PushFollow(Follow._operator_declaration_in_class_member_declaration641);
					operator_declaration71=operator_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, operator_declaration71.Tree, operator_declaration71, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(20); }


				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:103:4: class_declaration
				{
				DebugLocation(103, 4);
				PushFollow(Follow._class_declaration_in_class_member_declaration659);
				class_declaration72=class_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, class_declaration72.Tree, class_declaration72, retval);

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:104:4: struct_declaration
				{
				DebugLocation(104, 4);
				PushFollow(Follow._struct_declaration_in_class_member_declaration666);
				struct_declaration73=struct_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, struct_declaration73.Tree, struct_declaration73, retval);

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:105:4: enum_declaration
				{
				DebugLocation(105, 4);
				PushFollow(Follow._enum_declaration_in_class_member_declaration672);
				enum_declaration74=enum_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enum_declaration74.Tree, enum_declaration74, retval);

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:106:4: delegate_declaration
				{
				DebugLocation(106, 4);
				PushFollow(Follow._delegate_declaration_in_class_member_declaration679);
				delegate_declaration75=delegate_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, delegate_declaration75.Tree, delegate_declaration75, retval);

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:107:4: conversion_operator_declaration
				{
				DebugLocation(107, 4);
				PushFollow(Follow._conversion_operator_declaration_in_class_member_declaration685);
				conversion_operator_declaration76=conversion_operator_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, conversion_operator_declaration76.Tree, conversion_operator_declaration76, retval);

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:108:4: constructor_declaration
				{
				DebugLocation(108, 4);
				PushFollow(Follow._constructor_declaration_in_class_member_declaration690);
				constructor_declaration77=constructor_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constructor_declaration77.Tree, constructor_declaration77, retval);

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:109:4: destructor_declaration
				{
				DebugLocation(109, 4);
				PushFollow(Follow._destructor_declaration_in_class_member_declaration696);
				destructor_declaration78=destructor_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, destructor_declaration78.Tree, destructor_declaration78, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(21); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("class_member_declaration", 18);
			LeaveRule("class_member_declaration", 18);
			LeaveRule_class_member_declaration();
			if (state.backtracking > 0) { Memoize(input, 18, class_member_declaration_StartIndex); }

		}
		DebugLocation(111, 1);
		} finally { DebugExitRule(GrammarFileName, "class_member_declaration"); }
		return retval;

	}
	// $ANTLR end "class_member_declaration"

	partial void EnterRule_primary_expression();
	partial void LeaveRule_primary_expression();
	// $ANTLR start "primary_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:113:1: primary_expression : ( ( 'this' brackets )=> 'this' brackets ( primary_expression_part )* | ( 'base' brackets )=> 'this' brackets ( primary_expression_part )* | primary_expression_start ( primary_expression_part )* | 'new' ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( delegate_creation_expression )=> delegate_creation_expression | object_creation_expression | anonymous_object_creation_expression ) | sizeof_expression | checked_expression | unchecked_expression | default_value_expression | anonymous_method_expression );
	[GrammarRule("primary_expression")]
	private Antlr3AstNode primary_expression()
	{
		EnterRule_primary_expression();
		EnterRule("primary_expression", 19);
		var retval = new Antlr3AstNode("primary_expression");
		
		retval.Start = (IToken)input.LT(1);
		int primary_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal79 = default(IToken);
		IToken string_literal82 = default(IToken);
		IToken string_literal87 = default(IToken);
		Antlr3AstNode brackets80 = default(Antlr3AstNode);
		Antlr3AstNode primary_expression_part81 = default(Antlr3AstNode);
		Antlr3AstNode brackets83 = default(Antlr3AstNode);
		Antlr3AstNode primary_expression_part84 = default(Antlr3AstNode);
		Antlr3AstNode primary_expression_start85 = default(Antlr3AstNode);
		Antlr3AstNode primary_expression_part86 = default(Antlr3AstNode);
		Antlr3AstNode object_creation_expression88 = default(Antlr3AstNode);
		Antlr3AstNode primary_expression_part89 = default(Antlr3AstNode);
		Antlr3AstNode delegate_creation_expression90 = default(Antlr3AstNode);
		Antlr3AstNode object_creation_expression91 = default(Antlr3AstNode);
		Antlr3AstNode anonymous_object_creation_expression92 = default(Antlr3AstNode);
		Antlr3AstNode sizeof_expression93 = default(Antlr3AstNode);
		Antlr3AstNode checked_expression94 = default(Antlr3AstNode);
		Antlr3AstNode unchecked_expression95 = default(Antlr3AstNode);
		Antlr3AstNode default_value_expression96 = default(Antlr3AstNode);
		Antlr3AstNode anonymous_method_expression97 = default(Antlr3AstNode);

		object string_literal79_tree = default(object);
		object string_literal82_tree = default(object);
		object string_literal87_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "primary_expression");
		DebugLocation(113, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 19)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:113:19: ( ( 'this' brackets )=> 'this' brackets ( primary_expression_part )* | ( 'base' brackets )=> 'this' brackets ( primary_expression_part )* | primary_expression_start ( primary_expression_part )* | 'new' ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( delegate_creation_expression )=> delegate_creation_expression | object_creation_expression | anonymous_object_creation_expression ) | sizeof_expression | checked_expression | unchecked_expression | default_value_expression | anonymous_method_expression )
			int alt27=9;
			try { DebugEnterDecision(27, false);
			switch (input.LA(1))
			{
			case 180:
				{
				int LA27_2 = input.LA(2);

				if ((EvaluatePredicate(synpred5_cs_fragment)))
				{
					alt27 = 1;
				}
				else if ((EvaluatePredicate(synpred6_cs_fragment)))
				{
					alt27 = 2;
				}
				else if ((true))
				{
					alt27 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 27, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case IDENTIFIER:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 68:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 102:
			case 103:
			case 105:
			case 106:
			case 109:
			case 114:
			case 117:
			case 119:
			case 120:
			case 122:
			case 126:
			case 129:
			case 132:
			case 135:
			case 138:
			case 141:
			case 143:
			case 144:
			case 146:
			case 147:
			case 148:
			case 151:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 169:
			case 171:
			case 172:
			case 173:
			case 177:
			case 183:
			case 184:
			case 185:
			case 186:
			case 189:
			case 190:
			case 194:
			case 196:
				{
				alt27 = 3;
				}
				break;
			case 150:
				{
				alt27 = 4;
				}
				break;
			case 174:
				{
				alt27 = 5;
				}
				break;
			case 110:
				{
				alt27 = 6;
				}
				break;
			case 187:
				{
				alt27 = 7;
				}
				break;
			case 115:
				{
				alt27 = 8;
				}
				break;
			case 116:
				{
				alt27 = 9;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 27, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(27); }
			switch (alt27)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:114:2: ( 'this' brackets )=> 'this' brackets ( primary_expression_part )*
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(114, 26);
				string_literal79=(IToken)Match(input,180,Follow._180_in_primary_expression722); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal79_tree = (object)adaptor.Create(string_literal79, retval);
				adaptor.AddChild(root_0, string_literal79_tree);
				}
				DebugLocation(114, 35);
				PushFollow(Follow._brackets_in_primary_expression726);
				brackets80=brackets();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, brackets80.Tree, brackets80, retval);
				DebugLocation(114, 46);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:114:46: ( primary_expression_part )*
				try { DebugEnterSubRule(22);
				while (true)
				{
					int alt22=2;
					try { DebugEnterDecision(22, false);
					int LA22_1 = input.LA(1);

					if ((LA22_1==DOT||LA22_1==PTR||LA22_1==68||LA22_1==91))
					{
						alt22 = 1;
					}


					} finally { DebugExitDecision(22); }
					switch ( alt22 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:114:46: primary_expression_part
						{
						DebugLocation(114, 46);
						PushFollow(Follow._primary_expression_part_in_primary_expression730);
						primary_expression_part81=primary_expression_part();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, primary_expression_part81.Tree, primary_expression_part81, retval);

						}
						break;

					default:
						goto loop22;
					}
				}

				loop22:
					;

				} finally { DebugExitSubRule(22); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:115:4: ( 'base' brackets )=> 'this' brackets ( primary_expression_part )*
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(115, 27);
				string_literal82=(IToken)Match(input,180,Follow._180_in_primary_expression746); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal82_tree = (object)adaptor.Create(string_literal82, retval);
				adaptor.AddChild(root_0, string_literal82_tree);
				}
				DebugLocation(115, 36);
				PushFollow(Follow._brackets_in_primary_expression750);
				brackets83=brackets();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, brackets83.Tree, brackets83, retval);
				DebugLocation(115, 47);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:115:47: ( primary_expression_part )*
				try { DebugEnterSubRule(23);
				while (true)
				{
					int alt23=2;
					try { DebugEnterDecision(23, false);
					int LA23_1 = input.LA(1);

					if ((LA23_1==DOT||LA23_1==PTR||LA23_1==68||LA23_1==91))
					{
						alt23 = 1;
					}


					} finally { DebugExitDecision(23); }
					switch ( alt23 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:115:47: primary_expression_part
						{
						DebugLocation(115, 47);
						PushFollow(Follow._primary_expression_part_in_primary_expression754);
						primary_expression_part84=primary_expression_part();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, primary_expression_part84.Tree, primary_expression_part84, retval);

						}
						break;

					default:
						goto loop23;
					}
				}

				loop23:
					;

				} finally { DebugExitSubRule(23); }


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:116:4: primary_expression_start ( primary_expression_part )*
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(116, 4);
				PushFollow(Follow._primary_expression_start_in_primary_expression760);
				primary_expression_start85=primary_expression_start();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primary_expression_start85.Tree, primary_expression_start85, retval);
				DebugLocation(116, 31);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:116:31: ( primary_expression_part )*
				try { DebugEnterSubRule(24);
				while (true)
				{
					int alt24=2;
					try { DebugEnterDecision(24, false);
					int LA24_1 = input.LA(1);

					if ((LA24_1==DOT||LA24_1==PTR||LA24_1==68||LA24_1==91))
					{
						alt24 = 1;
					}


					} finally { DebugExitDecision(24); }
					switch ( alt24 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:116:31: primary_expression_part
						{
						DebugLocation(116, 31);
						PushFollow(Follow._primary_expression_part_in_primary_expression764);
						primary_expression_part86=primary_expression_part();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, primary_expression_part86.Tree, primary_expression_part86, retval);

						}
						break;

					default:
						goto loop24;
					}
				}

				loop24:
					;

				} finally { DebugExitSubRule(24); }


				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:117:4: 'new' ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( delegate_creation_expression )=> delegate_creation_expression | object_creation_expression | anonymous_object_creation_expression )
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(117, 4);
				string_literal87=(IToken)Match(input,150,Follow._150_in_primary_expression770); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal87_tree = (object)adaptor.Create(string_literal87, retval);
				adaptor.AddChild(root_0, string_literal87_tree);
				}
				DebugLocation(117, 10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:117:10: ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( delegate_creation_expression )=> delegate_creation_expression | object_creation_expression | anonymous_object_creation_expression )
				int alt26=4;
				try { DebugEnterSubRule(26);
				try { DebugEnterDecision(26, false);
				switch (input.LA(1))
				{
				case 103:
				case 106:
				case 109:
				case 114:
				case 119:
				case 129:
				case 138:
				case 146:
				case 151:
				case 169:
				case 173:
				case 177:
				case 185:
				case 186:
				case 189:
					{
					int LA26_2 = input.LA(2);

					if ((EvaluatePredicate(synpred7_cs_fragment)))
					{
						alt26 = 1;
					}
					else if ((true))
					{
						alt26 = 3;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 26, 1, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					}
					break;
				case IDENTIFIER:
				case 95:
				case 97:
				case 98:
				case 100:
				case 101:
				case 105:
				case 117:
				case 120:
				case 122:
				case 126:
				case 132:
				case 135:
				case 141:
				case 143:
				case 144:
				case 147:
				case 148:
				case 152:
				case 154:
				case 157:
				case 160:
				case 162:
				case 167:
				case 171:
				case 172:
				case 183:
				case 190:
				case 194:
				case 196:
					{
					int LA26_2 = input.LA(2);

					if ((EvaluatePredicate(synpred7_cs_fragment)))
					{
						alt26 = 1;
					}
					else if ((EvaluatePredicate(synpred8_cs_fragment)))
					{
						alt26 = 2;
					}
					else if ((true))
					{
						alt26 = 3;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 26, 2, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					}
					break;
				case 192:
					{
					int LA26_2 = input.LA(2);

					if ((EvaluatePredicate(synpred7_cs_fragment)))
					{
						alt26 = 1;
					}
					else if ((true))
					{
						alt26 = 3;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 26, 3, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					}
					break;
				case 197:
					{
					alt26 = 4;
					}
					break;
				default:
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 26, 0, input, 1);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}

				} finally { DebugExitDecision(26); }
				switch (alt26)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:117:14: ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+
					{
					DebugLocation(118, 6);
					PushFollow(Follow._object_creation_expression_in_primary_expression798);
					object_creation_expression88=object_creation_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, object_creation_expression88.Tree, object_creation_expression88, retval);
					DebugLocation(118, 35);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:118:35: ( primary_expression_part )+
					int cnt25=0;
					try { DebugEnterSubRule(25);
					while (true)
					{
						int alt25=2;
						try { DebugEnterDecision(25, false);
						int LA25_1 = input.LA(1);

						if ((LA25_1==DOT||LA25_1==PTR||LA25_1==68||LA25_1==91))
						{
							alt25 = 1;
						}


						} finally { DebugExitDecision(25); }
						switch (alt25)
						{
						case 1:
							DebugEnterAlt(1);
							// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:118:35: primary_expression_part
							{
							DebugLocation(118, 35);
							PushFollow(Follow._primary_expression_part_in_primary_expression802);
							primary_expression_part89=primary_expression_part();
							PopFollow();
							if (state.failed) return retval;
							if (state.backtracking == 0) adaptor.AddChild(root_0, primary_expression_part89.Tree, primary_expression_part89, retval);

							}
							break;

						default:
							if (cnt25 >= 1)
								goto loop25;

							if (state.backtracking>0) {state.failed=true; return retval;}
							EarlyExitException eee25 = new EarlyExitException( 25, input );
							DebugRecognitionException(eee25);
							throw eee25;
						}
						cnt25++;
					}
					loop25:
						;

					} finally { DebugExitSubRule(25); }


					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:121:7: ( delegate_creation_expression )=> delegate_creation_expression
					{
					DebugLocation(121, 41);
					PushFollow(Follow._delegate_creation_expression_in_primary_expression830);
					delegate_creation_expression90=delegate_creation_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, delegate_creation_expression90.Tree, delegate_creation_expression90, retval);

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:122:7: object_creation_expression
					{
					DebugLocation(122, 7);
					PushFollow(Follow._object_creation_expression_in_primary_expression838);
					object_creation_expression91=object_creation_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, object_creation_expression91.Tree, object_creation_expression91, retval);

					}
					break;
				case 4:
					DebugEnterAlt(4);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:123:7: anonymous_object_creation_expression
					{
					DebugLocation(123, 7);
					PushFollow(Follow._anonymous_object_creation_expression_in_primary_expression846);
					anonymous_object_creation_expression92=anonymous_object_creation_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, anonymous_object_creation_expression92.Tree, anonymous_object_creation_expression92, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(26); }


				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:124:4: sizeof_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(124, 4);
				PushFollow(Follow._sizeof_expression_in_primary_expression859);
				sizeof_expression93=sizeof_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, sizeof_expression93.Tree, sizeof_expression93, retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:125:4: checked_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(125, 4);
				PushFollow(Follow._checked_expression_in_primary_expression870);
				checked_expression94=checked_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, checked_expression94.Tree, checked_expression94, retval);

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:126:4: unchecked_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(126, 4);
				PushFollow(Follow._unchecked_expression_in_primary_expression889);
				unchecked_expression95=unchecked_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unchecked_expression95.Tree, unchecked_expression95, retval);

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:127:4: default_value_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(127, 4);
				PushFollow(Follow._default_value_expression_in_primary_expression906);
				default_value_expression96=default_value_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, default_value_expression96.Tree, default_value_expression96, retval);

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:128:4: anonymous_method_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(128, 4);
				PushFollow(Follow._anonymous_method_expression_in_primary_expression919);
				anonymous_method_expression97=anonymous_method_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, anonymous_method_expression97.Tree, anonymous_method_expression97, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("primary_expression", 19);
			LeaveRule("primary_expression", 19);
			LeaveRule_primary_expression();
			if (state.backtracking > 0) { Memoize(input, 19, primary_expression_StartIndex); }

		}
		DebugLocation(129, 1);
		} finally { DebugExitRule(GrammarFileName, "primary_expression"); }
		return retval;

	}
	// $ANTLR end "primary_expression"

	partial void EnterRule_primary_expression_start();
	partial void LeaveRule_primary_expression_start();
	// $ANTLR start "primary_expression_start"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:131:1: primary_expression_start : ( predefined_type | ( identifier generic_argument_list )=> identifier generic_argument_list | identifier ( '::' identifier )? | 'this' | 'base' | paren_expression | typeof_expression | literal );
	[GrammarRule("primary_expression_start")]
	private Antlr3AstNode primary_expression_start()
	{
		EnterRule_primary_expression_start();
		EnterRule("primary_expression_start", 20);
		var retval = new Antlr3AstNode("primary_expression_start");
		
		retval.Start = (IToken)input.LT(1);
		int primary_expression_start_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal102 = default(IToken);
		IToken string_literal104 = default(IToken);
		IToken string_literal105 = default(IToken);
		Antlr3AstNode predefined_type98 = default(Antlr3AstNode);
		Antlr3AstNode identifier99 = default(Antlr3AstNode);
		Antlr3AstNode generic_argument_list100 = default(Antlr3AstNode);
		Antlr3AstNode identifier101 = default(Antlr3AstNode);
		Antlr3AstNode identifier103 = default(Antlr3AstNode);
		Antlr3AstNode paren_expression106 = default(Antlr3AstNode);
		Antlr3AstNode typeof_expression107 = default(Antlr3AstNode);
		Antlr3AstNode literal108 = default(Antlr3AstNode);

		object string_literal102_tree = default(object);
		object string_literal104_tree = default(object);
		object string_literal105_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "primary_expression_start");
		DebugLocation(131, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 20)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:131:25: ( predefined_type | ( identifier generic_argument_list )=> identifier generic_argument_list | identifier ( '::' identifier )? | 'this' | 'base' | paren_expression | typeof_expression | literal )
			int alt29=8;
			try { DebugEnterDecision(29, false);
			switch (input.LA(1))
			{
			case 103:
			case 106:
			case 109:
			case 114:
			case 119:
			case 129:
			case 138:
			case 146:
			case 151:
			case 169:
			case 173:
			case 177:
			case 185:
			case 186:
			case 189:
				{
				alt29 = 1;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 132:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA29_2 = input.LA(2);

				if ((EvaluatePredicate(synpred9_cs_fragment)))
				{
					alt29 = 2;
				}
				else if ((true))
				{
					alt29 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 29, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 180:
				{
				alt29 = 4;
				}
				break;
			case 102:
				{
				alt29 = 5;
				}
				break;
			case 68:
				{
				alt29 = 6;
				}
				break;
			case 184:
				{
				alt29 = 7;
				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
				{
				alt29 = 8;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 29, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(29); }
			switch (alt29)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:132:2: predefined_type
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(132, 2);
				PushFollow(Follow._predefined_type_in_primary_expression_start932);
				predefined_type98=predefined_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, predefined_type98.Tree, predefined_type98, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:133:4: ( identifier generic_argument_list )=> identifier generic_argument_list
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(133, 42);
				PushFollow(Follow._identifier_in_primary_expression_start957);
				identifier99=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier99.Tree, identifier99, retval);
				DebugLocation(133, 53);
				PushFollow(Follow._generic_argument_list_in_primary_expression_start959);
				generic_argument_list100=generic_argument_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, generic_argument_list100.Tree, generic_argument_list100, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:134:4: identifier ( '::' identifier )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(134, 4);
				PushFollow(Follow._identifier_in_primary_expression_start964);
				identifier101=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier101.Tree, identifier101, retval);
				DebugLocation(134, 15);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:134:15: ( '::' identifier )?
				int alt28=2;
				try { DebugEnterSubRule(28);
				try { DebugEnterDecision(28, false);
				int LA28_1 = input.LA(1);

				if ((LA28_1==80))
				{
					alt28 = 1;
				}
				} finally { DebugExitDecision(28); }
				switch (alt28)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:134:16: '::' identifier
					{
					DebugLocation(134, 16);
					string_literal102=(IToken)Match(input,80,Follow._80_in_primary_expression_start967); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal102_tree = (object)adaptor.Create(string_literal102, retval);
					adaptor.AddChild(root_0, string_literal102_tree);
					}
					DebugLocation(134, 23);
					PushFollow(Follow._identifier_in_primary_expression_start971);
					identifier103=identifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, identifier103.Tree, identifier103, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(28); }


				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:135:4: 'this'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(135, 4);
				string_literal104=(IToken)Match(input,180,Follow._180_in_primary_expression_start978); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal104_tree = (object)adaptor.Create(string_literal104, retval);
				adaptor.AddChild(root_0, string_literal104_tree);
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:136:4: 'base'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(136, 4);
				string_literal105=(IToken)Match(input,102,Follow._102_in_primary_expression_start984); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal105_tree = (object)adaptor.Create(string_literal105, retval);
				adaptor.AddChild(root_0, string_literal105_tree);
				}

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:137:4: paren_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(137, 4);
				PushFollow(Follow._paren_expression_in_primary_expression_start989);
				paren_expression106=paren_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, paren_expression106.Tree, paren_expression106, retval);

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:138:4: typeof_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(138, 4);
				PushFollow(Follow._typeof_expression_in_primary_expression_start994);
				typeof_expression107=typeof_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeof_expression107.Tree, typeof_expression107, retval);

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:139:4: literal
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(139, 4);
				PushFollow(Follow._literal_in_primary_expression_start1012);
				literal108=literal();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, literal108.Tree, literal108, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("primary_expression_start", 20);
			LeaveRule("primary_expression_start", 20);
			LeaveRule_primary_expression_start();
			if (state.backtracking > 0) { Memoize(input, 20, primary_expression_start_StartIndex); }

		}
		DebugLocation(140, 1);
		} finally { DebugExitRule(GrammarFileName, "primary_expression_start"); }
		return retval;

	}
	// $ANTLR end "primary_expression_start"

	partial void EnterRule_primary_expression_part();
	partial void LeaveRule_primary_expression_part();
	// $ANTLR start "primary_expression_part"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:142:1: primary_expression_part : ( access_identifier | brackets_or_arguments );
	[GrammarRule("primary_expression_part")]
	private Antlr3AstNode primary_expression_part()
	{
		EnterRule_primary_expression_part();
		EnterRule("primary_expression_part", 21);
		var retval = new Antlr3AstNode("primary_expression_part");
		
		retval.Start = (IToken)input.LT(1);
		int primary_expression_part_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode access_identifier109 = default(Antlr3AstNode);
		Antlr3AstNode brackets_or_arguments110 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "primary_expression_part");
		DebugLocation(142, 25);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 21)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:142:24: ( access_identifier | brackets_or_arguments )
			int alt30=2;
			try { DebugEnterDecision(30, false);
			int LA30_1 = input.LA(1);

			if ((LA30_1==DOT||LA30_1==PTR))
			{
				alt30 = 1;
			}
			else if ((LA30_1==68||LA30_1==91))
			{
				alt30 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 30, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(30); }
			switch (alt30)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:143:3: access_identifier
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(143, 3);
				PushFollow(Follow._access_identifier_in_primary_expression_part1023);
				access_identifier109=access_identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, access_identifier109.Tree, access_identifier109, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:144:4: brackets_or_arguments
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(144, 4);
				PushFollow(Follow._brackets_or_arguments_in_primary_expression_part1028);
				brackets_or_arguments110=brackets_or_arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, brackets_or_arguments110.Tree, brackets_or_arguments110, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("primary_expression_part", 21);
			LeaveRule("primary_expression_part", 21);
			LeaveRule_primary_expression_part();
			if (state.backtracking > 0) { Memoize(input, 21, primary_expression_part_StartIndex); }

		}
		DebugLocation(144, 25);
		} finally { DebugExitRule(GrammarFileName, "primary_expression_part"); }
		return retval;

	}
	// $ANTLR end "primary_expression_part"

	partial void EnterRule_access_identifier();
	partial void LeaveRule_access_identifier();
	// $ANTLR start "access_identifier"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:145:1: access_identifier : access_operator type_or_generic ;
	[GrammarRule("access_identifier")]
	private Antlr3AstNode access_identifier()
	{
		EnterRule_access_identifier();
		EnterRule("access_identifier", 22);
		var retval = new Antlr3AstNode("access_identifier");
		
		retval.Start = (IToken)input.LT(1);
		int access_identifier_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode access_operator111 = default(Antlr3AstNode);
		Antlr3AstNode type_or_generic112 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "access_identifier");
		DebugLocation(145, 35);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 22)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:145:18: ( access_operator type_or_generic )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:146:2: access_operator type_or_generic
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(146, 2);
			PushFollow(Follow._access_operator_in_access_identifier1036);
			access_operator111=access_operator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, access_operator111.Tree, access_operator111, retval);
			DebugLocation(146, 20);
			PushFollow(Follow._type_or_generic_in_access_identifier1040);
			type_or_generic112=type_or_generic();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_or_generic112.Tree, type_or_generic112, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("access_identifier", 22);
			LeaveRule("access_identifier", 22);
			LeaveRule_access_identifier();
			if (state.backtracking > 0) { Memoize(input, 22, access_identifier_StartIndex); }

		}
		DebugLocation(146, 35);
		} finally { DebugExitRule(GrammarFileName, "access_identifier"); }
		return retval;

	}
	// $ANTLR end "access_identifier"

	partial void EnterRule_access_operator();
	partial void LeaveRule_access_operator();
	// $ANTLR start "access_operator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:147:1: access_operator : ( '.' | '->' );
	[GrammarRule("access_operator")]
	private Antlr3AstNode access_operator()
	{
		EnterRule_access_operator();
		EnterRule("access_operator", 23);
		var retval = new Antlr3AstNode("access_operator");
		
		retval.Start = (IToken)input.LT(1);
		int access_operator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set113 = default(IToken);

		object set113_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "access_operator");
		DebugLocation(147, 14);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 23)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:147:16: ( '.' | '->' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(147, 16);

			set113=(IToken)input.LT(1);
			if (input.LA(1)==DOT||input.LA(1)==PTR)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set113, retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("access_operator", 23);
			LeaveRule("access_operator", 23);
			LeaveRule_access_operator();
			if (state.backtracking > 0) { Memoize(input, 23, access_operator_StartIndex); }

		}
		DebugLocation(148, 14);
		} finally { DebugExitRule(GrammarFileName, "access_operator"); }
		return retval;

	}
	// $ANTLR end "access_operator"

	partial void EnterRule_brackets_or_arguments();
	partial void LeaveRule_brackets_or_arguments();
	// $ANTLR start "brackets_or_arguments"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:149:1: brackets_or_arguments : ( brackets | arguments );
	[GrammarRule("brackets_or_arguments")]
	private Antlr3AstNode brackets_or_arguments()
	{
		EnterRule_brackets_or_arguments();
		EnterRule("brackets_or_arguments", 24);
		var retval = new Antlr3AstNode("brackets_or_arguments");
		
		retval.Start = (IToken)input.LT(1);
		int brackets_or_arguments_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode brackets114 = default(Antlr3AstNode);
		Antlr3AstNode arguments115 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "brackets_or_arguments");
		DebugLocation(149, 22);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 24)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:149:22: ( brackets | arguments )
			int alt31=2;
			try { DebugEnterDecision(31, false);
			int LA31_1 = input.LA(1);

			if ((LA31_1==91))
			{
				alt31 = 1;
			}
			else if ((LA31_1==68))
			{
				alt31 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 31, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(31); }
			switch (alt31)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:150:2: brackets
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(150, 2);
				PushFollow(Follow._brackets_in_brackets_or_arguments1062);
				brackets114=brackets();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, brackets114.Tree, brackets114, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:150:13: arguments
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(150, 13);
				PushFollow(Follow._arguments_in_brackets_or_arguments1066);
				arguments115=arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arguments115.Tree, arguments115, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("brackets_or_arguments", 24);
			LeaveRule("brackets_or_arguments", 24);
			LeaveRule_brackets_or_arguments();
			if (state.backtracking > 0) { Memoize(input, 24, brackets_or_arguments_StartIndex); }

		}
		DebugLocation(150, 22);
		} finally { DebugExitRule(GrammarFileName, "brackets_or_arguments"); }
		return retval;

	}
	// $ANTLR end "brackets_or_arguments"

	partial void EnterRule_brackets();
	partial void LeaveRule_brackets();
	// $ANTLR start "brackets"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:151:1: brackets : '[' ( expression_list )? ']' ;
	[GrammarRule("brackets")]
	private Antlr3AstNode brackets()
	{
		EnterRule_brackets();
		EnterRule("brackets", 25);
		var retval = new Antlr3AstNode("brackets");
		
		retval.Start = (IToken)input.LT(1);
		int brackets_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal116 = default(IToken);
		IToken char_literal118 = default(IToken);
		Antlr3AstNode expression_list117 = default(Antlr3AstNode);

		object char_literal116_tree = default(object);
		object char_literal118_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "brackets");
		DebugLocation(151, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 25)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:151:9: ( '[' ( expression_list )? ']' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:152:2: '[' ( expression_list )? ']'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(152, 2);
			char_literal116=(IToken)Match(input,91,Follow._91_in_brackets1074); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal116_tree = (object)adaptor.Create(char_literal116, retval);
			adaptor.AddChild(root_0, char_literal116_tree);
			}
			DebugLocation(152, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:152:8: ( expression_list )?
			int alt32=2;
			try { DebugEnterSubRule(32);
			try { DebugEnterDecision(32, false);
			int LA32_1 = input.LA(1);

			if ((LA32_1==Character_literal||LA32_1==FALSE||(LA32_1>=Hex_number && LA32_1<=IDENTIFIER)||(LA32_1>=MINUS && LA32_1<=NUMBER)||LA32_1==Real_literal||LA32_1==STRINGLITERAL||LA32_1==TRUE||LA32_1==Verbatim_string_literal||LA32_1==61||LA32_1==66||(LA32_1>=68 && LA32_1<=69)||(LA32_1>=71 && LA32_1<=72)||LA32_1==75||LA32_1==95||(LA32_1>=97 && LA32_1<=98)||(LA32_1>=100 && LA32_1<=103)||(LA32_1>=105 && LA32_1<=106)||(LA32_1>=109 && LA32_1<=110)||(LA32_1>=114 && LA32_1<=117)||(LA32_1>=119 && LA32_1<=120)||LA32_1==122||LA32_1==126||LA32_1==129||LA32_1==132||LA32_1==135||LA32_1==138||LA32_1==141||(LA32_1>=143 && LA32_1<=144)||(LA32_1>=146 && LA32_1<=148)||(LA32_1>=150 && LA32_1<=152)||LA32_1==154||LA32_1==157||LA32_1==160||LA32_1==162||LA32_1==167||LA32_1==169||(LA32_1>=171 && LA32_1<=174)||LA32_1==177||LA32_1==180||(LA32_1>=183 && LA32_1<=187)||(LA32_1>=189 && LA32_1<=190)||LA32_1==194||LA32_1==196||LA32_1==202))
			{
				alt32 = 1;
			}
			} finally { DebugExitDecision(32); }
			switch (alt32)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:152:8: expression_list
				{
				DebugLocation(152, 8);
				PushFollow(Follow._expression_list_in_brackets1078);
				expression_list117=expression_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression_list117.Tree, expression_list117, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(32); }

			DebugLocation(152, 27);
			char_literal118=(IToken)Match(input,92,Follow._92_in_brackets1083); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal118_tree = (object)adaptor.Create(char_literal118, retval);
			adaptor.AddChild(root_0, char_literal118_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("brackets", 25);
			LeaveRule("brackets", 25);
			LeaveRule_brackets();
			if (state.backtracking > 0) { Memoize(input, 25, brackets_StartIndex); }

		}
		DebugLocation(152, 30);
		} finally { DebugExitRule(GrammarFileName, "brackets"); }
		return retval;

	}
	// $ANTLR end "brackets"

	partial void EnterRule_paren_expression();
	partial void LeaveRule_paren_expression();
	// $ANTLR start "paren_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:153:1: paren_expression : '(' expression ')' ;
	[GrammarRule("paren_expression")]
	private Antlr3AstNode paren_expression()
	{
		EnterRule_paren_expression();
		EnterRule("paren_expression", 26);
		var retval = new Antlr3AstNode("paren_expression");
		
		retval.Start = (IToken)input.LT(1);
		int paren_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal119 = default(IToken);
		IToken char_literal121 = default(IToken);
		Antlr3AstNode expression120 = default(Antlr3AstNode);

		object char_literal119_tree = default(object);
		object char_literal121_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "paren_expression");
		DebugLocation(153, 24);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 26)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:153:17: ( '(' expression ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:154:2: '(' expression ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(154, 2);
			char_literal119=(IToken)Match(input,68,Follow._68_in_paren_expression1093); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal119_tree = (object)adaptor.Create(char_literal119, retval);
			adaptor.AddChild(root_0, char_literal119_tree);
			}
			DebugLocation(154, 8);
			PushFollow(Follow._expression_in_paren_expression1097);
			expression120=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression120.Tree, expression120, retval);
			DebugLocation(154, 21);
			char_literal121=(IToken)Match(input,RPAREN,Follow._RPAREN_in_paren_expression1101); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal121_tree = (object)adaptor.Create(char_literal121, retval);
			adaptor.AddChild(root_0, char_literal121_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("paren_expression", 26);
			LeaveRule("paren_expression", 26);
			LeaveRule_paren_expression();
			if (state.backtracking > 0) { Memoize(input, 26, paren_expression_StartIndex); }

		}
		DebugLocation(154, 24);
		} finally { DebugExitRule(GrammarFileName, "paren_expression"); }
		return retval;

	}
	// $ANTLR end "paren_expression"

	partial void EnterRule_arguments();
	partial void LeaveRule_arguments();
	// $ANTLR start "arguments"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:155:1: arguments : '(' ( argument_list )? ')' ;
	[GrammarRule("arguments")]
	private Antlr3AstNode arguments()
	{
		EnterRule_arguments();
		EnterRule("arguments", 27);
		var retval = new Antlr3AstNode("arguments");
		
		retval.Start = (IToken)input.LT(1);
		int arguments_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal122 = default(IToken);
		IToken char_literal124 = default(IToken);
		Antlr3AstNode argument_list123 = default(Antlr3AstNode);

		object char_literal122_tree = default(object);
		object char_literal124_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "arguments");
		DebugLocation(155, 28);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 27)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:155:10: ( '(' ( argument_list )? ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:156:2: '(' ( argument_list )? ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(156, 2);
			char_literal122=(IToken)Match(input,68,Follow._68_in_arguments1110); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal122_tree = (object)adaptor.Create(char_literal122, retval);
			adaptor.AddChild(root_0, char_literal122_tree);
			}
			DebugLocation(156, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:156:8: ( argument_list )?
			int alt33=2;
			try { DebugEnterSubRule(33);
			try { DebugEnterDecision(33, false);
			int LA33_1 = input.LA(1);

			if ((LA33_1==Character_literal||LA33_1==FALSE||(LA33_1>=Hex_number && LA33_1<=IDENTIFIER)||(LA33_1>=MINUS && LA33_1<=NUMBER)||LA33_1==Real_literal||LA33_1==STRINGLITERAL||LA33_1==TRUE||LA33_1==Verbatim_string_literal||LA33_1==61||LA33_1==66||(LA33_1>=68 && LA33_1<=69)||(LA33_1>=71 && LA33_1<=72)||LA33_1==75||LA33_1==95||(LA33_1>=97 && LA33_1<=98)||(LA33_1>=100 && LA33_1<=103)||(LA33_1>=105 && LA33_1<=106)||(LA33_1>=109 && LA33_1<=110)||(LA33_1>=114 && LA33_1<=117)||(LA33_1>=119 && LA33_1<=120)||LA33_1==122||LA33_1==126||LA33_1==129||LA33_1==132||LA33_1==135||LA33_1==138||LA33_1==141||(LA33_1>=143 && LA33_1<=144)||(LA33_1>=146 && LA33_1<=148)||(LA33_1>=150 && LA33_1<=152)||(LA33_1>=154 && LA33_1<=155)||LA33_1==157||LA33_1==160||LA33_1==162||(LA33_1>=166 && LA33_1<=167)||LA33_1==169||(LA33_1>=171 && LA33_1<=174)||LA33_1==177||LA33_1==180||(LA33_1>=183 && LA33_1<=187)||(LA33_1>=189 && LA33_1<=190)||LA33_1==194||LA33_1==196||LA33_1==202))
			{
				alt33 = 1;
			}
			} finally { DebugExitDecision(33); }
			switch (alt33)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:156:8: argument_list
				{
				DebugLocation(156, 8);
				PushFollow(Follow._argument_list_in_arguments1114);
				argument_list123=argument_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, argument_list123.Tree, argument_list123, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(33); }

			DebugLocation(156, 25);
			char_literal124=(IToken)Match(input,RPAREN,Follow._RPAREN_in_arguments1119); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal124_tree = (object)adaptor.Create(char_literal124, retval);
			adaptor.AddChild(root_0, char_literal124_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("arguments", 27);
			LeaveRule("arguments", 27);
			LeaveRule_arguments();
			if (state.backtracking > 0) { Memoize(input, 27, arguments_StartIndex); }

		}
		DebugLocation(156, 28);
		} finally { DebugExitRule(GrammarFileName, "arguments"); }
		return retval;

	}
	// $ANTLR end "arguments"

	partial void EnterRule_argument_list();
	partial void LeaveRule_argument_list();
	// $ANTLR start "argument_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:157:1: argument_list : argument ( ',' argument )* ;
	[GrammarRule("argument_list")]
	private Antlr3AstNode argument_list()
	{
		EnterRule_argument_list();
		EnterRule("argument_list", 28);
		var retval = new Antlr3AstNode("argument_list");
		
		retval.Start = (IToken)input.LT(1);
		int argument_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal126 = default(IToken);
		Antlr3AstNode argument125 = default(Antlr3AstNode);
		Antlr3AstNode argument127 = default(Antlr3AstNode);

		object char_literal126_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "argument_list");
		DebugLocation(157, 25);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 28)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:157:14: ( argument ( ',' argument )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:158:2: argument ( ',' argument )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(158, 2);
			PushFollow(Follow._argument_in_argument_list1128);
			argument125=argument();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, argument125.Tree, argument125, retval);
			DebugLocation(158, 11);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:158:11: ( ',' argument )*
			try { DebugEnterSubRule(34);
			while (true)
			{
				int alt34=2;
				try { DebugEnterDecision(34, false);
				int LA34_1 = input.LA(1);

				if ((LA34_1==74))
				{
					alt34 = 1;
				}


				} finally { DebugExitDecision(34); }
				switch ( alt34 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:158:12: ',' argument
					{
					DebugLocation(158, 12);
					char_literal126=(IToken)Match(input,74,Follow._74_in_argument_list1131); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal126_tree = (object)adaptor.Create(char_literal126, retval);
					adaptor.AddChild(root_0, char_literal126_tree);
					}
					DebugLocation(158, 16);
					PushFollow(Follow._argument_in_argument_list1133);
					argument127=argument();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, argument127.Tree, argument127, retval);

					}
					break;

				default:
					goto loop34;
				}
			}

			loop34:
				;

			} finally { DebugExitSubRule(34); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("argument_list", 28);
			LeaveRule("argument_list", 28);
			LeaveRule_argument_list();
			if (state.backtracking > 0) { Memoize(input, 28, argument_list_StartIndex); }

		}
		DebugLocation(158, 25);
		} finally { DebugExitRule(GrammarFileName, "argument_list"); }
		return retval;

	}
	// $ANTLR end "argument_list"

	partial void EnterRule_argument();
	partial void LeaveRule_argument();
	// $ANTLR start "argument"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:160:1: argument : ( argument_name argument_value | argument_value );
	[GrammarRule("argument")]
	private Antlr3AstNode argument()
	{
		EnterRule_argument();
		EnterRule("argument", 29);
		var retval = new Antlr3AstNode("argument");
		
		retval.Start = (IToken)input.LT(1);
		int argument_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode argument_name128 = default(Antlr3AstNode);
		Antlr3AstNode argument_value129 = default(Antlr3AstNode);
		Antlr3AstNode argument_value130 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "argument");
		DebugLocation(160, 17);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 29)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:160:9: ( argument_name argument_value | argument_value )
			int alt35=2;
			try { DebugEnterDecision(35, false);
			switch (input.LA(1))
			{
			case 132:
				{
				int LA35_2 = input.LA(2);

				if ((LA35_2==79))
				{
					alt35 = 1;
				}
				else if ((LA35_2==DOT||LA35_2==GT||LA35_2==IDENTIFIER||LA35_2==MINUS||LA35_2==PTR||LA35_2==RPAREN||(LA35_2>=62 && LA35_2<=78)||(LA35_2>=80 && LA35_2<=91)||(LA35_2>=93 && LA35_2<=95)||(LA35_2>=97 && LA35_2<=101)||LA35_2==103||(LA35_2>=105 && LA35_2<=106)||LA35_2==109||LA35_2==114||LA35_2==117||(LA35_2>=119 && LA35_2<=120)||LA35_2==122||LA35_2==126||LA35_2==129||LA35_2==132||LA35_2==135||LA35_2==138||(LA35_2>=141 && LA35_2<=144)||(LA35_2>=146 && LA35_2<=148)||(LA35_2>=151 && LA35_2<=152)||LA35_2==154||LA35_2==157||LA35_2==160||LA35_2==162||LA35_2==167||LA35_2==169||(LA35_2>=171 && LA35_2<=173)||LA35_2==177||LA35_2==183||(LA35_2>=185 && LA35_2<=186)||(LA35_2>=189 && LA35_2<=190)||LA35_2==192||LA35_2==194||LA35_2==196||(LA35_2>=198 && LA35_2<=200)))
				{
					alt35 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 35, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case MINUS:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 61:
			case 66:
			case 68:
			case 69:
			case 71:
			case 72:
			case 75:
			case 102:
			case 103:
			case 106:
			case 109:
			case 110:
			case 114:
			case 115:
			case 116:
			case 119:
			case 129:
			case 138:
			case 146:
			case 150:
			case 151:
			case 155:
			case 166:
			case 169:
			case 173:
			case 174:
			case 177:
			case 180:
			case 184:
			case 185:
			case 186:
			case 187:
			case 189:
			case 202:
				{
				alt35 = 2;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA35_2 = input.LA(2);

				if ((LA35_2==79))
				{
					alt35 = 1;
				}
				else if ((LA35_2==DOT||LA35_2==GT||LA35_2==MINUS||LA35_2==PTR||LA35_2==RPAREN||(LA35_2>=62 && LA35_2<=78)||(LA35_2>=80 && LA35_2<=91)||(LA35_2>=93 && LA35_2<=94)||LA35_2==99||LA35_2==142||(LA35_2>=198 && LA35_2<=200)))
				{
					alt35 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 35, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 35, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(35); }
			switch (alt35)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:161:2: argument_name argument_value
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(161, 2);
				PushFollow(Follow._argument_name_in_argument1143);
				argument_name128=argument_name();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, argument_name128.Tree, argument_name128, retval);
				DebugLocation(161, 18);
				PushFollow(Follow._argument_value_in_argument1147);
				argument_value129=argument_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, argument_value129.Tree, argument_value129, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:162:4: argument_value
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(162, 4);
				PushFollow(Follow._argument_value_in_argument1152);
				argument_value130=argument_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, argument_value130.Tree, argument_value130, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("argument", 29);
			LeaveRule("argument", 29);
			LeaveRule_argument();
			if (state.backtracking > 0) { Memoize(input, 29, argument_StartIndex); }

		}
		DebugLocation(162, 17);
		} finally { DebugExitRule(GrammarFileName, "argument"); }
		return retval;

	}
	// $ANTLR end "argument"

	partial void EnterRule_argument_name();
	partial void LeaveRule_argument_name();
	// $ANTLR start "argument_name"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:163:1: argument_name : identifier ':' ;
	[GrammarRule("argument_name")]
	private Antlr3AstNode argument_name()
	{
		EnterRule_argument_name();
		EnterRule("argument_name", 30);
		var retval = new Antlr3AstNode("argument_name");
		
		retval.Start = (IToken)input.LT(1);
		int argument_name_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal132 = default(IToken);
		Antlr3AstNode identifier131 = default(Antlr3AstNode);

		object char_literal132_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "argument_name");
		DebugLocation(163, 17);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 30)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:163:14: ( identifier ':' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:164:2: identifier ':'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(164, 2);
			PushFollow(Follow._identifier_in_argument_name1159);
			identifier131=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier131.Tree, identifier131, retval);
			DebugLocation(164, 15);
			char_literal132=(IToken)Match(input,79,Follow._79_in_argument_name1163); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal132_tree = (object)adaptor.Create(char_literal132, retval);
			adaptor.AddChild(root_0, char_literal132_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("argument_name", 30);
			LeaveRule("argument_name", 30);
			LeaveRule_argument_name();
			if (state.backtracking > 0) { Memoize(input, 30, argument_name_StartIndex); }

		}
		DebugLocation(164, 17);
		} finally { DebugExitRule(GrammarFileName, "argument_name"); }
		return retval;

	}
	// $ANTLR end "argument_name"

	partial void EnterRule_argument_value();
	partial void LeaveRule_argument_value();
	// $ANTLR start "argument_value"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:165:1: argument_value : ( expression | ref_variable_reference | 'out' variable_reference );
	[GrammarRule("argument_value")]
	private Antlr3AstNode argument_value()
	{
		EnterRule_argument_value();
		EnterRule("argument_value", 31);
		var retval = new Antlr3AstNode("argument_value");
		
		retval.Start = (IToken)input.LT(1);
		int argument_value_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal135 = default(IToken);
		Antlr3AstNode expression133 = default(Antlr3AstNode);
		Antlr3AstNode ref_variable_reference134 = default(Antlr3AstNode);
		Antlr3AstNode variable_reference136 = default(Antlr3AstNode);

		object string_literal135_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "argument_value");
		DebugLocation(165, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 31)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:165:15: ( expression | ref_variable_reference | 'out' variable_reference )
			int alt36=3;
			try { DebugEnterDecision(36, false);
			switch (input.LA(1))
			{
			case Character_literal:
			case FALSE:
			case Hex_number:
			case IDENTIFIER:
			case MINUS:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 61:
			case 66:
			case 68:
			case 69:
			case 71:
			case 72:
			case 75:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 102:
			case 103:
			case 105:
			case 106:
			case 109:
			case 110:
			case 114:
			case 115:
			case 116:
			case 117:
			case 119:
			case 120:
			case 122:
			case 126:
			case 129:
			case 132:
			case 135:
			case 138:
			case 141:
			case 143:
			case 144:
			case 146:
			case 147:
			case 148:
			case 150:
			case 151:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 169:
			case 171:
			case 172:
			case 173:
			case 174:
			case 177:
			case 180:
			case 183:
			case 184:
			case 185:
			case 186:
			case 187:
			case 189:
			case 190:
			case 194:
			case 196:
			case 202:
				{
				alt36 = 1;
				}
				break;
			case 166:
				{
				alt36 = 2;
				}
				break;
			case 155:
				{
				alt36 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 36, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(36); }
			switch (alt36)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:166:2: expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(166, 2);
				PushFollow(Follow._expression_in_argument_value1171);
				expression133=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression133.Tree, expression133, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:167:4: ref_variable_reference
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(167, 4);
				PushFollow(Follow._ref_variable_reference_in_argument_value1177);
				ref_variable_reference134=ref_variable_reference();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, ref_variable_reference134.Tree, ref_variable_reference134, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:168:4: 'out' variable_reference
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(168, 4);
				string_literal135=(IToken)Match(input,155,Follow._155_in_argument_value1183); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal135_tree = (object)adaptor.Create(string_literal135, retval);
				adaptor.AddChild(root_0, string_literal135_tree);
				}
				DebugLocation(168, 12);
				PushFollow(Follow._variable_reference_in_argument_value1187);
				variable_reference136=variable_reference();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variable_reference136.Tree, variable_reference136, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("argument_value", 31);
			LeaveRule("argument_value", 31);
			LeaveRule_argument_value();
			if (state.backtracking > 0) { Memoize(input, 31, argument_value_StartIndex); }

		}
		DebugLocation(168, 30);
		} finally { DebugExitRule(GrammarFileName, "argument_value"); }
		return retval;

	}
	// $ANTLR end "argument_value"

	partial void EnterRule_ref_variable_reference();
	partial void LeaveRule_ref_variable_reference();
	// $ANTLR start "ref_variable_reference"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:169:1: ref_variable_reference : 'ref' ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference ) ;
	[GrammarRule("ref_variable_reference")]
	private Antlr3AstNode ref_variable_reference()
	{
		EnterRule_ref_variable_reference();
		EnterRule("ref_variable_reference", 32);
		var retval = new Antlr3AstNode("ref_variable_reference");
		
		retval.Start = (IToken)input.LT(1);
		int ref_variable_reference_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal137 = default(IToken);
		IToken char_literal138 = default(IToken);
		IToken char_literal140 = default(IToken);
		Antlr3AstNode type139 = default(Antlr3AstNode);
		Antlr3AstNode ref_variable_reference141 = default(Antlr3AstNode);
		Antlr3AstNode variable_reference142 = default(Antlr3AstNode);
		Antlr3AstNode variable_reference143 = default(Antlr3AstNode);

		object string_literal137_tree = default(object);
		object char_literal138_tree = default(object);
		object char_literal140_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "ref_variable_reference");
		DebugLocation(169, 23);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 32)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:169:23: ( 'ref' ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:170:2: 'ref' ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(170, 2);
			string_literal137=(IToken)Match(input,166,Follow._166_in_ref_variable_reference1195); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal137_tree = (object)adaptor.Create(string_literal137, retval);
			adaptor.AddChild(root_0, string_literal137_tree);
			}
			DebugLocation(171, 3);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:171:3: ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference )
			int alt38=2;
			try { DebugEnterSubRule(38);
			try { DebugEnterDecision(38, false);
			int LA38_1 = input.LA(1);

			if ((LA38_1==68))
			{
				int LA38_2 = input.LA(2);

				if ((EvaluatePredicate(synpred10_cs_fragment)))
				{
					alt38 = 1;
				}
				else if ((true))
				{
					alt38 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 38, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA38_1==Character_literal||LA38_1==FALSE||(LA38_1>=Hex_number && LA38_1<=IDENTIFIER)||(LA38_1>=MINUS && LA38_1<=NUMBER)||LA38_1==Real_literal||LA38_1==STRINGLITERAL||LA38_1==TRUE||LA38_1==Verbatim_string_literal||LA38_1==61||LA38_1==66||LA38_1==69||(LA38_1>=71 && LA38_1<=72)||LA38_1==75||LA38_1==95||(LA38_1>=97 && LA38_1<=98)||(LA38_1>=100 && LA38_1<=103)||(LA38_1>=105 && LA38_1<=106)||(LA38_1>=109 && LA38_1<=110)||(LA38_1>=114 && LA38_1<=117)||(LA38_1>=119 && LA38_1<=120)||LA38_1==122||LA38_1==126||LA38_1==129||LA38_1==132||LA38_1==135||LA38_1==138||LA38_1==141||(LA38_1>=143 && LA38_1<=144)||(LA38_1>=146 && LA38_1<=148)||(LA38_1>=150 && LA38_1<=152)||LA38_1==154||LA38_1==157||LA38_1==160||LA38_1==162||LA38_1==167||LA38_1==169||(LA38_1>=171 && LA38_1<=174)||LA38_1==177||LA38_1==180||(LA38_1>=183 && LA38_1<=187)||(LA38_1>=189 && LA38_1<=190)||LA38_1==194||LA38_1==196||LA38_1==202))
			{
				alt38 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 38, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(38); }
			switch (alt38)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:171:4: ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference )
				{
				DebugLocation(171, 28);
				char_literal138=(IToken)Match(input,68,Follow._68_in_ref_variable_reference1217); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal138_tree = (object)adaptor.Create(char_literal138, retval);
				adaptor.AddChild(root_0, char_literal138_tree);
				}
				DebugLocation(171, 34);
				PushFollow(Follow._type_in_ref_variable_reference1221);
				type139=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type139.Tree, type139, retval);
				DebugLocation(171, 41);
				char_literal140=(IToken)Match(input,RPAREN,Follow._RPAREN_in_ref_variable_reference1225); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal140_tree = (object)adaptor.Create(char_literal140, retval);
				adaptor.AddChild(root_0, char_literal140_tree);
				}
				DebugLocation(171, 47);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:171:47: ( ref_variable_reference | variable_reference )
				int alt37=2;
				try { DebugEnterSubRule(37);
				try { DebugEnterDecision(37, false);
				int LA37_1 = input.LA(1);

				if ((LA37_1==166))
				{
					alt37 = 1;
				}
				else if ((LA37_1==Character_literal||LA37_1==FALSE||(LA37_1>=Hex_number && LA37_1<=IDENTIFIER)||(LA37_1>=MINUS && LA37_1<=NUMBER)||LA37_1==Real_literal||LA37_1==STRINGLITERAL||LA37_1==TRUE||LA37_1==Verbatim_string_literal||LA37_1==61||LA37_1==66||(LA37_1>=68 && LA37_1<=69)||(LA37_1>=71 && LA37_1<=72)||LA37_1==75||LA37_1==95||(LA37_1>=97 && LA37_1<=98)||(LA37_1>=100 && LA37_1<=103)||(LA37_1>=105 && LA37_1<=106)||(LA37_1>=109 && LA37_1<=110)||(LA37_1>=114 && LA37_1<=117)||(LA37_1>=119 && LA37_1<=120)||LA37_1==122||LA37_1==126||LA37_1==129||LA37_1==132||LA37_1==135||LA37_1==138||LA37_1==141||(LA37_1>=143 && LA37_1<=144)||(LA37_1>=146 && LA37_1<=148)||(LA37_1>=150 && LA37_1<=152)||LA37_1==154||LA37_1==157||LA37_1==160||LA37_1==162||LA37_1==167||LA37_1==169||(LA37_1>=171 && LA37_1<=174)||LA37_1==177||LA37_1==180||(LA37_1>=183 && LA37_1<=187)||(LA37_1>=189 && LA37_1<=190)||LA37_1==194||LA37_1==196||LA37_1==202))
				{
					alt37 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 37, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(37); }
				switch (alt37)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:171:48: ref_variable_reference
					{
					DebugLocation(171, 48);
					PushFollow(Follow._ref_variable_reference_in_ref_variable_reference1230);
					ref_variable_reference141=ref_variable_reference();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, ref_variable_reference141.Tree, ref_variable_reference141, retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:171:73: variable_reference
					{
					DebugLocation(171, 73);
					PushFollow(Follow._variable_reference_in_ref_variable_reference1234);
					variable_reference142=variable_reference();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, variable_reference142.Tree, variable_reference142, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(37); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:173:5: variable_reference
				{
				DebugLocation(173, 5);
				PushFollow(Follow._variable_reference_in_ref_variable_reference1270);
				variable_reference143=variable_reference();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variable_reference143.Tree, variable_reference143, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(38); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("ref_variable_reference", 32);
			LeaveRule("ref_variable_reference", 32);
			LeaveRule_ref_variable_reference();
			if (state.backtracking > 0) { Memoize(input, 32, ref_variable_reference_StartIndex); }

		}
		DebugLocation(173, 23);
		} finally { DebugExitRule(GrammarFileName, "ref_variable_reference"); }
		return retval;

	}
	// $ANTLR end "ref_variable_reference"

	partial void EnterRule_variable_reference();
	partial void LeaveRule_variable_reference();
	// $ANTLR start "variable_reference"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:175:1: variable_reference : expression ;
	[GrammarRule("variable_reference")]
	private Antlr3AstNode variable_reference()
	{
		EnterRule_variable_reference();
		EnterRule("variable_reference", 33);
		var retval = new Antlr3AstNode("variable_reference");
		
		retval.Start = (IToken)input.LT(1);
		int variable_reference_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode expression144 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "variable_reference");
		DebugLocation(175, 11);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 33)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:175:19: ( expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:176:2: expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(176, 2);
			PushFollow(Follow._expression_in_variable_reference1280);
			expression144=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression144.Tree, expression144, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variable_reference", 33);
			LeaveRule("variable_reference", 33);
			LeaveRule_variable_reference();
			if (state.backtracking > 0) { Memoize(input, 33, variable_reference_StartIndex); }

		}
		DebugLocation(176, 11);
		} finally { DebugExitRule(GrammarFileName, "variable_reference"); }
		return retval;

	}
	// $ANTLR end "variable_reference"

	partial void EnterRule_rank_specifiers();
	partial void LeaveRule_rank_specifiers();
	// $ANTLR start "rank_specifiers"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:177:1: rank_specifiers : ( rank_specifier )+ ;
	[GrammarRule("rank_specifiers")]
	private Antlr3AstNode rank_specifiers()
	{
		EnterRule_rank_specifiers();
		EnterRule("rank_specifiers", 34);
		var retval = new Antlr3AstNode("rank_specifiers");
		
		retval.Start = (IToken)input.LT(1);
		int rank_specifiers_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode rank_specifier145 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "rank_specifiers");
		DebugLocation(177, 17);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 34)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:177:16: ( ( rank_specifier )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:178:2: ( rank_specifier )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(178, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:178:2: ( rank_specifier )+
			int cnt39=0;
			try { DebugEnterSubRule(39);
			while (true)
			{
				int alt39=2;
				try { DebugEnterDecision(39, false);
				int LA39_1 = input.LA(1);

				if ((LA39_1==91))
				{
					int LA39_2 = input.LA(2);

					if ((LA39_2==74||LA39_2==92))
					{
						alt39 = 1;
					}


				}


				} finally { DebugExitDecision(39); }
				switch (alt39)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:178:2: rank_specifier
					{
					DebugLocation(178, 2);
					PushFollow(Follow._rank_specifier_in_rank_specifiers1288);
					rank_specifier145=rank_specifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, rank_specifier145.Tree, rank_specifier145, retval);

					}
					break;

				default:
					if (cnt39 >= 1)
						goto loop39;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee39 = new EarlyExitException( 39, input );
					DebugRecognitionException(eee39);
					throw eee39;
				}
				cnt39++;
			}
			loop39:
				;

			} finally { DebugExitSubRule(39); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("rank_specifiers", 34);
			LeaveRule("rank_specifiers", 34);
			LeaveRule_rank_specifiers();
			if (state.backtracking > 0) { Memoize(input, 34, rank_specifiers_StartIndex); }

		}
		DebugLocation(178, 17);
		} finally { DebugExitRule(GrammarFileName, "rank_specifiers"); }
		return retval;

	}
	// $ANTLR end "rank_specifiers"

	partial void EnterRule_rank_specifier();
	partial void LeaveRule_rank_specifier();
	// $ANTLR start "rank_specifier"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:179:1: rank_specifier : '[' ( dim_separators )? ']' ;
	[GrammarRule("rank_specifier")]
	private Antlr3AstNode rank_specifier()
	{
		EnterRule_rank_specifier();
		EnterRule("rank_specifier", 35);
		var retval = new Antlr3AstNode("rank_specifier");
		
		retval.Start = (IToken)input.LT(1);
		int rank_specifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal146 = default(IToken);
		IToken char_literal148 = default(IToken);
		Antlr3AstNode dim_separators147 = default(Antlr3AstNode);

		object char_literal146_tree = default(object);
		object char_literal148_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "rank_specifier");
		DebugLocation(179, 29);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 35)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:179:15: ( '[' ( dim_separators )? ']' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:180:2: '[' ( dim_separators )? ']'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(180, 2);
			char_literal146=(IToken)Match(input,91,Follow._91_in_rank_specifier1306); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal146_tree = (object)adaptor.Create(char_literal146, retval);
			adaptor.AddChild(root_0, char_literal146_tree);
			}
			DebugLocation(180, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:180:8: ( dim_separators )?
			int alt40=2;
			try { DebugEnterSubRule(40);
			try { DebugEnterDecision(40, false);
			int LA40_1 = input.LA(1);

			if ((LA40_1==74))
			{
				alt40 = 1;
			}
			} finally { DebugExitDecision(40); }
			switch (alt40)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:180:8: dim_separators
				{
				DebugLocation(180, 8);
				PushFollow(Follow._dim_separators_in_rank_specifier1310);
				dim_separators147=dim_separators();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, dim_separators147.Tree, dim_separators147, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(40); }

			DebugLocation(180, 26);
			char_literal148=(IToken)Match(input,92,Follow._92_in_rank_specifier1315); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal148_tree = (object)adaptor.Create(char_literal148, retval);
			adaptor.AddChild(root_0, char_literal148_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("rank_specifier", 35);
			LeaveRule("rank_specifier", 35);
			LeaveRule_rank_specifier();
			if (state.backtracking > 0) { Memoize(input, 35, rank_specifier_StartIndex); }

		}
		DebugLocation(180, 29);
		} finally { DebugExitRule(GrammarFileName, "rank_specifier"); }
		return retval;

	}
	// $ANTLR end "rank_specifier"

	partial void EnterRule_dim_separators();
	partial void LeaveRule_dim_separators();
	// $ANTLR start "dim_separators"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:181:1: dim_separators : ( ',' )+ ;
	[GrammarRule("dim_separators")]
	private Antlr3AstNode dim_separators()
	{
		EnterRule_dim_separators();
		EnterRule("dim_separators", 36);
		var retval = new Antlr3AstNode("dim_separators");
		
		retval.Start = (IToken)input.LT(1);
		int dim_separators_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal149 = default(IToken);

		object char_literal149_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "dim_separators");
		DebugLocation(181, 6);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 36)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:181:15: ( ( ',' )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:182:2: ( ',' )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(182, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:182:2: ( ',' )+
			int cnt41=0;
			try { DebugEnterSubRule(41);
			while (true)
			{
				int alt41=2;
				try { DebugEnterDecision(41, false);
				int LA41_1 = input.LA(1);

				if ((LA41_1==74))
				{
					alt41 = 1;
				}


				} finally { DebugExitDecision(41); }
				switch (alt41)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:182:2: ','
					{
					DebugLocation(182, 2);
					char_literal149=(IToken)Match(input,74,Follow._74_in_dim_separators1324); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal149_tree = (object)adaptor.Create(char_literal149, retval);
					adaptor.AddChild(root_0, char_literal149_tree);
					}

					}
					break;

				default:
					if (cnt41 >= 1)
						goto loop41;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee41 = new EarlyExitException( 41, input );
					DebugRecognitionException(eee41);
					throw eee41;
				}
				cnt41++;
			}
			loop41:
				;

			} finally { DebugExitSubRule(41); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("dim_separators", 36);
			LeaveRule("dim_separators", 36);
			LeaveRule_dim_separators();
			if (state.backtracking > 0) { Memoize(input, 36, dim_separators_StartIndex); }

		}
		DebugLocation(182, 6);
		} finally { DebugExitRule(GrammarFileName, "dim_separators"); }
		return retval;

	}
	// $ANTLR end "dim_separators"

	partial void EnterRule_delegate_creation_expression();
	partial void LeaveRule_delegate_creation_expression();
	// $ANTLR start "delegate_creation_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:184:1: delegate_creation_expression : type_name '(' type_name ')' ;
	[GrammarRule("delegate_creation_expression")]
	private Antlr3AstNode delegate_creation_expression()
	{
		EnterRule_delegate_creation_expression();
		EnterRule("delegate_creation_expression", 37);
		var retval = new Antlr3AstNode("delegate_creation_expression");
		
		retval.Start = (IToken)input.LT(1);
		int delegate_creation_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal151 = default(IToken);
		IToken char_literal153 = default(IToken);
		Antlr3AstNode type_name150 = default(Antlr3AstNode);
		Antlr3AstNode type_name152 = default(Antlr3AstNode);

		object char_literal151_tree = default(object);
		object char_literal153_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "delegate_creation_expression");
		DebugLocation(184, 35);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 37)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:184:29: ( type_name '(' type_name ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:186:2: type_name '(' type_name ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(186, 2);
			PushFollow(Follow._type_name_in_delegate_creation_expression1337);
			type_name150=type_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_name150.Tree, type_name150, retval);
			DebugLocation(186, 14);
			char_literal151=(IToken)Match(input,68,Follow._68_in_delegate_creation_expression1341); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal151_tree = (object)adaptor.Create(char_literal151, retval);
			adaptor.AddChild(root_0, char_literal151_tree);
			}
			DebugLocation(186, 20);
			PushFollow(Follow._type_name_in_delegate_creation_expression1345);
			type_name152=type_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_name152.Tree, type_name152, retval);
			DebugLocation(186, 32);
			char_literal153=(IToken)Match(input,RPAREN,Follow._RPAREN_in_delegate_creation_expression1349); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal153_tree = (object)adaptor.Create(char_literal153, retval);
			adaptor.AddChild(root_0, char_literal153_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("delegate_creation_expression", 37);
			LeaveRule("delegate_creation_expression", 37);
			LeaveRule_delegate_creation_expression();
			if (state.backtracking > 0) { Memoize(input, 37, delegate_creation_expression_StartIndex); }

		}
		DebugLocation(186, 35);
		} finally { DebugExitRule(GrammarFileName, "delegate_creation_expression"); }
		return retval;

	}
	// $ANTLR end "delegate_creation_expression"

	partial void EnterRule_anonymous_object_creation_expression();
	partial void LeaveRule_anonymous_object_creation_expression();
	// $ANTLR start "anonymous_object_creation_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:187:1: anonymous_object_creation_expression : anonymous_object_initializer ;
	[GrammarRule("anonymous_object_creation_expression")]
	private Antlr3AstNode anonymous_object_creation_expression()
	{
		EnterRule_anonymous_object_creation_expression();
		EnterRule("anonymous_object_creation_expression", 38);
		var retval = new Antlr3AstNode("anonymous_object_creation_expression");
		
		retval.Start = (IToken)input.LT(1);
		int anonymous_object_creation_expression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode anonymous_object_initializer154 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "anonymous_object_creation_expression");
		DebugLocation(187, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 38)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:187:37: ( anonymous_object_initializer )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:189:2: anonymous_object_initializer
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(189, 2);
			PushFollow(Follow._anonymous_object_initializer_in_anonymous_object_creation_expression1360);
			anonymous_object_initializer154=anonymous_object_initializer();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, anonymous_object_initializer154.Tree, anonymous_object_initializer154, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("anonymous_object_creation_expression", 38);
			LeaveRule("anonymous_object_creation_expression", 38);
			LeaveRule_anonymous_object_creation_expression();
			if (state.backtracking > 0) { Memoize(input, 38, anonymous_object_creation_expression_StartIndex); }

		}
		DebugLocation(189, 30);
		} finally { DebugExitRule(GrammarFileName, "anonymous_object_creation_expression"); }
		return retval;

	}
	// $ANTLR end "anonymous_object_creation_expression"

	partial void EnterRule_anonymous_object_initializer();
	partial void LeaveRule_anonymous_object_initializer();
	// $ANTLR start "anonymous_object_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:190:1: anonymous_object_initializer : '{' ( member_declarator_list )? ( ',' )? '}' ;
	[GrammarRule("anonymous_object_initializer")]
	private Antlr3AstNode anonymous_object_initializer()
	{
		EnterRule_anonymous_object_initializer();
		EnterRule("anonymous_object_initializer", 39);
		var retval = new Antlr3AstNode("anonymous_object_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int anonymous_object_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal155 = default(IToken);
		IToken char_literal157 = default(IToken);
		IToken char_literal158 = default(IToken);
		Antlr3AstNode member_declarator_list156 = default(Antlr3AstNode);

		object char_literal155_tree = default(object);
		object char_literal157_tree = default(object);
		object char_literal158_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "anonymous_object_initializer");
		DebugLocation(190, 43);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 39)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:190:29: ( '{' ( member_declarator_list )? ( ',' )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:191:2: '{' ( member_declarator_list )? ( ',' )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(191, 2);
			char_literal155=(IToken)Match(input,197,Follow._197_in_anonymous_object_initializer1369); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal155_tree = (object)adaptor.Create(char_literal155, retval);
			adaptor.AddChild(root_0, char_literal155_tree);
			}
			DebugLocation(191, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:191:8: ( member_declarator_list )?
			int alt42=2;
			try { DebugEnterSubRule(42);
			try { DebugEnterDecision(42, false);
			int LA42_1 = input.LA(1);

			if ((LA42_1==IDENTIFIER||LA42_1==95||(LA42_1>=97 && LA42_1<=98)||(LA42_1>=100 && LA42_1<=101)||LA42_1==105||LA42_1==117||LA42_1==120||LA42_1==122||LA42_1==126||LA42_1==132||LA42_1==135||LA42_1==141||(LA42_1>=143 && LA42_1<=144)||(LA42_1>=147 && LA42_1<=148)||LA42_1==152||LA42_1==154||LA42_1==157||LA42_1==160||LA42_1==162||LA42_1==167||(LA42_1>=171 && LA42_1<=172)||LA42_1==183||LA42_1==190||LA42_1==194||LA42_1==196))
			{
				alt42 = 1;
			}
			} finally { DebugExitDecision(42); }
			switch (alt42)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:191:8: member_declarator_list
				{
				DebugLocation(191, 8);
				PushFollow(Follow._member_declarator_list_in_anonymous_object_initializer1373);
				member_declarator_list156=member_declarator_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, member_declarator_list156.Tree, member_declarator_list156, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(42); }

			DebugLocation(191, 34);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:191:34: ( ',' )?
			int alt43=2;
			try { DebugEnterSubRule(43);
			try { DebugEnterDecision(43, false);
			int LA43_1 = input.LA(1);

			if ((LA43_1==74))
			{
				alt43 = 1;
			}
			} finally { DebugExitDecision(43); }
			switch (alt43)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:191:34: ','
				{
				DebugLocation(191, 34);
				char_literal157=(IToken)Match(input,74,Follow._74_in_anonymous_object_initializer1378); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal157_tree = (object)adaptor.Create(char_literal157, retval);
				adaptor.AddChild(root_0, char_literal157_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(43); }

			DebugLocation(191, 41);
			char_literal158=(IToken)Match(input,201,Follow._201_in_anonymous_object_initializer1383); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal158_tree = (object)adaptor.Create(char_literal158, retval);
			adaptor.AddChild(root_0, char_literal158_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("anonymous_object_initializer", 39);
			LeaveRule("anonymous_object_initializer", 39);
			LeaveRule_anonymous_object_initializer();
			if (state.backtracking > 0) { Memoize(input, 39, anonymous_object_initializer_StartIndex); }

		}
		DebugLocation(191, 43);
		} finally { DebugExitRule(GrammarFileName, "anonymous_object_initializer"); }
		return retval;

	}
	// $ANTLR end "anonymous_object_initializer"

	partial void EnterRule_member_declarator_list();
	partial void LeaveRule_member_declarator_list();
	// $ANTLR start "member_declarator_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:192:1: member_declarator_list : member_declarator ( ',' member_declarator )* ;
	[GrammarRule("member_declarator_list")]
	private Antlr3AstNode member_declarator_list()
	{
		EnterRule_member_declarator_list();
		EnterRule("member_declarator_list", 40);
		var retval = new Antlr3AstNode("member_declarator_list");
		
		retval.Start = (IToken)input.LT(1);
		int member_declarator_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal160 = default(IToken);
		Antlr3AstNode member_declarator159 = default(Antlr3AstNode);
		Antlr3AstNode member_declarator161 = default(Antlr3AstNode);

		object char_literal160_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "member_declarator_list");
		DebugLocation(192, 45);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 40)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:192:23: ( member_declarator ( ',' member_declarator )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:193:2: member_declarator ( ',' member_declarator )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(193, 2);
			PushFollow(Follow._member_declarator_in_member_declarator_list1391);
			member_declarator159=member_declarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, member_declarator159.Tree, member_declarator159, retval);
			DebugLocation(193, 21);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:193:21: ( ',' member_declarator )*
			try { DebugEnterSubRule(44);
			while (true)
			{
				int alt44=2;
				try { DebugEnterDecision(44, false);
				int LA44_1 = input.LA(1);

				if ((LA44_1==74))
				{
					int LA44_2 = input.LA(2);

					if ((LA44_2==IDENTIFIER||LA44_2==95||(LA44_2>=97 && LA44_2<=98)||(LA44_2>=100 && LA44_2<=101)||LA44_2==105||LA44_2==117||LA44_2==120||LA44_2==122||LA44_2==126||LA44_2==132||LA44_2==135||LA44_2==141||(LA44_2>=143 && LA44_2<=144)||(LA44_2>=147 && LA44_2<=148)||LA44_2==152||LA44_2==154||LA44_2==157||LA44_2==160||LA44_2==162||LA44_2==167||(LA44_2>=171 && LA44_2<=172)||LA44_2==183||LA44_2==190||LA44_2==194||LA44_2==196))
					{
						alt44 = 1;
					}


				}


				} finally { DebugExitDecision(44); }
				switch ( alt44 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:193:22: ',' member_declarator
					{
					DebugLocation(193, 22);
					char_literal160=(IToken)Match(input,74,Follow._74_in_member_declarator_list1395); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal160_tree = (object)adaptor.Create(char_literal160, retval);
					adaptor.AddChild(root_0, char_literal160_tree);
					}
					DebugLocation(193, 26);
					PushFollow(Follow._member_declarator_in_member_declarator_list1397);
					member_declarator161=member_declarator();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, member_declarator161.Tree, member_declarator161, retval);

					}
					break;

				default:
					goto loop44;
				}
			}

			loop44:
				;

			} finally { DebugExitSubRule(44); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("member_declarator_list", 40);
			LeaveRule("member_declarator_list", 40);
			LeaveRule_member_declarator_list();
			if (state.backtracking > 0) { Memoize(input, 40, member_declarator_list_StartIndex); }

		}
		DebugLocation(193, 45);
		} finally { DebugExitRule(GrammarFileName, "member_declarator_list"); }
		return retval;

	}
	// $ANTLR end "member_declarator_list"

	partial void EnterRule_member_declarator();
	partial void LeaveRule_member_declarator();
	// $ANTLR start "member_declarator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:194:1: member_declarator : identifier ( generic_argument_list | ( '.' primary_or_array_creation_expression ) | '=' expression ) ;
	[GrammarRule("member_declarator")]
	private Antlr3AstNode member_declarator()
	{
		EnterRule_member_declarator();
		EnterRule("member_declarator", 41);
		var retval = new Antlr3AstNode("member_declarator");
		
		retval.Start = (IToken)input.LT(1);
		int member_declarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal164 = default(IToken);
		IToken char_literal166 = default(IToken);
		Antlr3AstNode identifier162 = default(Antlr3AstNode);
		Antlr3AstNode generic_argument_list163 = default(Antlr3AstNode);
		Antlr3AstNode primary_or_array_creation_expression165 = default(Antlr3AstNode);
		Antlr3AstNode expression167 = default(Antlr3AstNode);

		object char_literal164_tree = default(object);
		object char_literal166_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "member_declarator");
		DebugLocation(194, 25);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 41)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:194:18: ( identifier ( generic_argument_list | ( '.' primary_or_array_creation_expression ) | '=' expression ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:195:2: identifier ( generic_argument_list | ( '.' primary_or_array_creation_expression ) | '=' expression )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(195, 2);
			PushFollow(Follow._identifier_in_member_declarator1409);
			identifier162=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier162.Tree, identifier162, retval);
			DebugLocation(195, 15);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:195:15: ( generic_argument_list | ( '.' primary_or_array_creation_expression ) | '=' expression )
			int alt45=3;
			try { DebugEnterSubRule(45);
			try { DebugEnterDecision(45, false);
			switch (input.LA(1))
			{
			case 81:
				{
				alt45 = 1;
				}
				break;
			case DOT:
				{
				alt45 = 2;
				}
				break;
			case 85:
				{
				alt45 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 45, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(45); }
			switch (alt45)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:195:16: generic_argument_list
				{
				DebugLocation(195, 16);
				PushFollow(Follow._generic_argument_list_in_member_declarator1414);
				generic_argument_list163=generic_argument_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, generic_argument_list163.Tree, generic_argument_list163, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:196:8: ( '.' primary_or_array_creation_expression )
				{
				DebugLocation(196, 8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:196:8: ( '.' primary_or_array_creation_expression )
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:196:9: '.' primary_or_array_creation_expression
				{
				DebugLocation(196, 9);
				char_literal164=(IToken)Match(input,DOT,Follow._DOT_in_member_declarator1424); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal164_tree = (object)adaptor.Create(char_literal164, retval);
				adaptor.AddChild(root_0, char_literal164_tree);
				}
				DebugLocation(196, 15);
				PushFollow(Follow._primary_or_array_creation_expression_in_member_declarator1428);
				primary_or_array_creation_expression165=primary_or_array_creation_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primary_or_array_creation_expression165.Tree, primary_or_array_creation_expression165, retval);

				}


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:197:8: '=' expression
				{
				DebugLocation(197, 8);
				char_literal166=(IToken)Match(input,85,Follow._85_in_member_declarator1438); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal166_tree = (object)adaptor.Create(char_literal166, retval);
				adaptor.AddChild(root_0, char_literal166_tree);
				}
				DebugLocation(197, 14);
				PushFollow(Follow._expression_in_member_declarator1442);
				expression167=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression167.Tree, expression167, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(45); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("member_declarator", 41);
			LeaveRule("member_declarator", 41);
			LeaveRule_member_declarator();
			if (state.backtracking > 0) { Memoize(input, 41, member_declarator_StartIndex); }

		}
		DebugLocation(197, 25);
		} finally { DebugExitRule(GrammarFileName, "member_declarator"); }
		return retval;

	}
	// $ANTLR end "member_declarator"

	partial void EnterRule_primary_or_array_creation_expression();
	partial void LeaveRule_primary_or_array_creation_expression();
	// $ANTLR start "primary_or_array_creation_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:198:1: primary_or_array_creation_expression : ( ( array_creation_expression )=> array_creation_expression | primary_expression );
	[GrammarRule("primary_or_array_creation_expression")]
	private Antlr3AstNode primary_or_array_creation_expression()
	{
		EnterRule_primary_or_array_creation_expression();
		EnterRule("primary_or_array_creation_expression", 42);
		var retval = new Antlr3AstNode("primary_or_array_creation_expression");
		
		retval.Start = (IToken)input.LT(1);
		int primary_or_array_creation_expression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode array_creation_expression168 = default(Antlr3AstNode);
		Antlr3AstNode primary_expression169 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "primary_or_array_creation_expression");
		DebugLocation(198, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 42)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:198:37: ( ( array_creation_expression )=> array_creation_expression | primary_expression )
			int alt46=2;
			try { DebugEnterDecision(46, false);
			int LA46_1 = input.LA(1);

			if ((LA46_1==150))
			{
				int LA46_2 = input.LA(2);

				if ((EvaluatePredicate(synpred11_cs_fragment)))
				{
					alt46 = 1;
				}
				else if ((true))
				{
					alt46 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 46, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA46_1==Character_literal||LA46_1==FALSE||(LA46_1>=Hex_number && LA46_1<=IDENTIFIER)||(LA46_1>=NULL && LA46_1<=NUMBER)||LA46_1==Real_literal||LA46_1==STRINGLITERAL||LA46_1==TRUE||LA46_1==Verbatim_string_literal||LA46_1==68||LA46_1==95||(LA46_1>=97 && LA46_1<=98)||(LA46_1>=100 && LA46_1<=103)||(LA46_1>=105 && LA46_1<=106)||(LA46_1>=109 && LA46_1<=110)||(LA46_1>=114 && LA46_1<=117)||(LA46_1>=119 && LA46_1<=120)||LA46_1==122||LA46_1==126||LA46_1==129||LA46_1==132||LA46_1==135||LA46_1==138||LA46_1==141||(LA46_1>=143 && LA46_1<=144)||(LA46_1>=146 && LA46_1<=148)||(LA46_1>=151 && LA46_1<=152)||LA46_1==154||LA46_1==157||LA46_1==160||LA46_1==162||LA46_1==167||LA46_1==169||(LA46_1>=171 && LA46_1<=174)||LA46_1==177||LA46_1==180||(LA46_1>=183 && LA46_1<=187)||(LA46_1>=189 && LA46_1<=190)||LA46_1==194||LA46_1==196))
			{
				alt46 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 46, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(46); }
			switch (alt46)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:199:2: ( array_creation_expression )=> array_creation_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(199, 33);
				PushFollow(Follow._array_creation_expression_in_primary_or_array_creation_expression1457);
				array_creation_expression168=array_creation_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, array_creation_expression168.Tree, array_creation_expression168, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:200:4: primary_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(200, 4);
				PushFollow(Follow._primary_expression_in_primary_or_array_creation_expression1462);
				primary_expression169=primary_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primary_expression169.Tree, primary_expression169, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("primary_or_array_creation_expression", 42);
			LeaveRule("primary_or_array_creation_expression", 42);
			LeaveRule_primary_or_array_creation_expression();
			if (state.backtracking > 0) { Memoize(input, 42, primary_or_array_creation_expression_StartIndex); }

		}
		DebugLocation(201, 1);
		} finally { DebugExitRule(GrammarFileName, "primary_or_array_creation_expression"); }
		return retval;

	}
	// $ANTLR end "primary_or_array_creation_expression"

	partial void EnterRule_array_creation_expression();
	partial void LeaveRule_array_creation_expression();
	// $ANTLR start "array_creation_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:203:1: array_creation_expression : 'new' ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) ) ;
	[GrammarRule("array_creation_expression")]
	private Antlr3AstNode array_creation_expression()
	{
		EnterRule_array_creation_expression();
		EnterRule("array_creation_expression", 43);
		var retval = new Antlr3AstNode("array_creation_expression");
		
		retval.Start = (IToken)input.LT(1);
		int array_creation_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal170 = default(IToken);
		IToken char_literal172 = default(IToken);
		IToken char_literal174 = default(IToken);
		Antlr3AstNode type171 = default(Antlr3AstNode);
		Antlr3AstNode expression_list173 = default(Antlr3AstNode);
		Antlr3AstNode rank_specifiers175 = default(Antlr3AstNode);
		Antlr3AstNode array_initializer176 = default(Antlr3AstNode);
		Antlr3AstNode arguments177 = default(Antlr3AstNode);
		Antlr3AstNode invocation_part178 = default(Antlr3AstNode);
		Antlr3AstNode invocation_part179 = default(Antlr3AstNode);
		Antlr3AstNode arguments180 = default(Antlr3AstNode);
		Antlr3AstNode array_initializer181 = default(Antlr3AstNode);
		Antlr3AstNode rank_specifier182 = default(Antlr3AstNode);
		Antlr3AstNode array_initializer183 = default(Antlr3AstNode);

		object string_literal170_tree = default(object);
		object char_literal172_tree = default(object);
		object char_literal174_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "array_creation_expression");
		DebugLocation(203, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 43)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:203:26: ( 'new' ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:204:2: 'new' ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(204, 2);
			string_literal170=(IToken)Match(input,150,Follow._150_in_array_creation_expression1473); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal170_tree = (object)adaptor.Create(string_literal170, retval);
			adaptor.AddChild(root_0, string_literal170_tree);
			}
			DebugLocation(205, 3);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:205:3: ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) )
			int alt52=2;
			try { DebugEnterSubRule(52);
			try { DebugEnterDecision(52, false);
			int LA52_1 = input.LA(1);

			if ((LA52_1==IDENTIFIER||LA52_1==95||(LA52_1>=97 && LA52_1<=98)||(LA52_1>=100 && LA52_1<=101)||LA52_1==103||(LA52_1>=105 && LA52_1<=106)||LA52_1==109||LA52_1==114||LA52_1==117||(LA52_1>=119 && LA52_1<=120)||LA52_1==122||LA52_1==126||LA52_1==129||LA52_1==132||LA52_1==135||LA52_1==138||LA52_1==141||(LA52_1>=143 && LA52_1<=144)||(LA52_1>=146 && LA52_1<=148)||(LA52_1>=151 && LA52_1<=152)||LA52_1==154||LA52_1==157||LA52_1==160||LA52_1==162||LA52_1==167||LA52_1==169||(LA52_1>=171 && LA52_1<=173)||LA52_1==177||LA52_1==183||(LA52_1>=185 && LA52_1<=186)||(LA52_1>=189 && LA52_1<=190)||LA52_1==192||LA52_1==194||LA52_1==196))
			{
				alt52 = 1;
			}
			else if ((LA52_1==91))
			{
				alt52 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 52, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(52); }
			switch (alt52)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:205:4: type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer )
				{
				DebugLocation(205, 4);
				PushFollow(Follow._type_in_array_creation_expression1481);
				type171=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type171.Tree, type171, retval);
				DebugLocation(205, 11);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:205:11: ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer )
				int alt51=2;
				try { DebugEnterSubRule(51);
				try { DebugEnterDecision(51, false);
				int LA51_1 = input.LA(1);

				if ((LA51_1==91))
				{
					alt51 = 1;
				}
				else if ((LA51_1==197))
				{
					alt51 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 51, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(51); }
				switch (alt51)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:205:12: '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )
					{
					DebugLocation(205, 12);
					char_literal172=(IToken)Match(input,91,Follow._91_in_array_creation_expression1486); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal172_tree = (object)adaptor.Create(char_literal172, retval);
					adaptor.AddChild(root_0, char_literal172_tree);
					}
					DebugLocation(205, 18);
					PushFollow(Follow._expression_list_in_array_creation_expression1490);
					expression_list173=expression_list();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, expression_list173.Tree, expression_list173, retval);
					DebugLocation(205, 36);
					char_literal174=(IToken)Match(input,92,Follow._92_in_array_creation_expression1494); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal174_tree = (object)adaptor.Create(char_literal174, retval);
					adaptor.AddChild(root_0, char_literal174_tree);
					}
					DebugLocation(206, 6);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:206:6: ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )
					int alt50=2;
					try { DebugEnterSubRule(50);
					try { DebugEnterDecision(50, false);
					try
					{
						alt50 = dfa50.Predict(input);
					}
					catch (NoViableAltException nvae)
					{
						DebugRecognitionException(nvae);
						throw;
					}
					} finally { DebugExitDecision(50); }
					switch (alt50)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:206:8: ( rank_specifiers )? ( array_initializer )?
						{
						DebugLocation(206, 8);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:206:8: ( rank_specifiers )?
						int alt47=2;
						try { DebugEnterSubRule(47);
						try { DebugEnterDecision(47, false);
						int LA47_1 = input.LA(1);

						if ((LA47_1==91))
						{
							alt47 = 1;
						}
						} finally { DebugExitDecision(47); }
						switch (alt47)
						{
						case 1:
							DebugEnterAlt(1);
							// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:206:8: rank_specifiers
							{
							DebugLocation(206, 8);
							PushFollow(Follow._rank_specifiers_in_array_creation_expression1506);
							rank_specifiers175=rank_specifiers();
							PopFollow();
							if (state.failed) return retval;
							if (state.backtracking == 0) adaptor.AddChild(root_0, rank_specifiers175.Tree, rank_specifiers175, retval);

							}
							break;

						}
						} finally { DebugExitSubRule(47); }

						DebugLocation(206, 27);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:206:27: ( array_initializer )?
						int alt48=2;
						try { DebugEnterSubRule(48);
						try { DebugEnterDecision(48, false);
						int LA48_1 = input.LA(1);

						if ((LA48_1==197))
						{
							alt48 = 1;
						}
						} finally { DebugExitDecision(48); }
						switch (alt48)
						{
						case 1:
							DebugEnterAlt(1);
							// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:206:27: array_initializer
							{
							DebugLocation(206, 27);
							PushFollow(Follow._array_initializer_in_array_creation_expression1511);
							array_initializer176=array_initializer();
							PopFollow();
							if (state.failed) return retval;
							if (state.backtracking == 0) adaptor.AddChild(root_0, array_initializer176.Tree, array_initializer176, retval);

							}
							break;

						}
						} finally { DebugExitSubRule(48); }


						}
						break;
					case 2:
						DebugEnterAlt(2);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:208:8: ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments
						{
						DebugLocation(208, 8);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:208:8: ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )*
						try { DebugEnterSubRule(49);
						while (true)
						{
							int alt49=3;
							try { DebugEnterDecision(49, false);
							int LA49_1 = input.LA(1);

							if ((LA49_1==68))
							{
								int LA49_2 = input.LA(2);

								if ((EvaluatePredicate(synpred12_cs_fragment)))
								{
									alt49 = 1;
								}


							}
							else if ((LA49_1==DOT||LA49_1==PTR||LA49_1==91))
							{
								alt49 = 2;
							}


							} finally { DebugExitDecision(49); }
							switch ( alt49 )
							{
							case 1:
								DebugEnterAlt(1);
								// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:208:10: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
								{
								DebugLocation(208, 10);
								// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:208:10: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
								DebugEnterAlt(1);
								// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:208:11: ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part
								{
								DebugLocation(208, 43);
								PushFollow(Follow._arguments_in_array_creation_expression1547);
								arguments177=arguments();
								PopFollow();
								if (state.failed) return retval;
								if (state.backtracking == 0) adaptor.AddChild(root_0, arguments177.Tree, arguments177, retval);
								DebugLocation(208, 55);
								PushFollow(Follow._invocation_part_in_array_creation_expression1551);
								invocation_part178=invocation_part();
								PopFollow();
								if (state.failed) return retval;
								if (state.backtracking == 0) adaptor.AddChild(root_0, invocation_part178.Tree, invocation_part178, retval);

								}


								}
								break;
							case 2:
								DebugEnterAlt(2);
								// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:209:10: invocation_part
								{
								DebugLocation(209, 10);
								PushFollow(Follow._invocation_part_in_array_creation_expression1563);
								invocation_part179=invocation_part();
								PopFollow();
								if (state.failed) return retval;
								if (state.backtracking == 0) adaptor.AddChild(root_0, invocation_part179.Tree, invocation_part179, retval);

								}
								break;

							default:
								goto loop49;
							}
						}

						loop49:
							;

						} finally { DebugExitSubRule(49); }

						DebugLocation(209, 30);
						PushFollow(Follow._arguments_in_array_creation_expression1569);
						arguments180=arguments();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, arguments180.Tree, arguments180, retval);

						}
						break;

					}
					} finally { DebugExitSubRule(50); }


					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:211:7: array_initializer
					{
					DebugLocation(211, 7);
					PushFollow(Follow._array_initializer_in_array_creation_expression1591);
					array_initializer181=array_initializer();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, array_initializer181.Tree, array_initializer181, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(51); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:213:5: rank_specifier ( array_initializer )
				{
				DebugLocation(213, 5);
				PushFollow(Follow._rank_specifier_in_array_creation_expression1605);
				rank_specifier182=rank_specifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, rank_specifier182.Tree, rank_specifier182, retval);
				DebugLocation(214, 4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:214:4: ( array_initializer )
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:214:5: array_initializer
				{
				DebugLocation(214, 5);
				PushFollow(Follow._array_initializer_in_array_creation_expression1614);
				array_initializer183=array_initializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, array_initializer183.Tree, array_initializer183, retval);

				}


				}
				break;

			}
			} finally { DebugExitSubRule(52); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("array_creation_expression", 43);
			LeaveRule("array_creation_expression", 43);
			LeaveRule_array_creation_expression();
			if (state.backtracking > 0) { Memoize(input, 43, array_creation_expression_StartIndex); }

		}
		DebugLocation(216, 4);
		} finally { DebugExitRule(GrammarFileName, "array_creation_expression"); }
		return retval;

	}
	// $ANTLR end "array_creation_expression"

	partial void EnterRule_array_initializer();
	partial void LeaveRule_array_initializer();
	// $ANTLR start "array_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:217:1: array_initializer : '{' ( variable_initializer_list )? ( ',' )? '}' ;
	[GrammarRule("array_initializer")]
	private Antlr3AstNode array_initializer()
	{
		EnterRule_array_initializer();
		EnterRule("array_initializer", 44);
		var retval = new Antlr3AstNode("array_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int array_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal184 = default(IToken);
		IToken char_literal186 = default(IToken);
		IToken char_literal187 = default(IToken);
		Antlr3AstNode variable_initializer_list185 = default(Antlr3AstNode);

		object char_literal184_tree = default(object);
		object char_literal186_tree = default(object);
		object char_literal187_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "array_initializer");
		DebugLocation(217, 47);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 44)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:217:18: ( '{' ( variable_initializer_list )? ( ',' )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:218:2: '{' ( variable_initializer_list )? ( ',' )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(218, 2);
			char_literal184=(IToken)Match(input,197,Follow._197_in_array_initializer1635); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal184_tree = (object)adaptor.Create(char_literal184, retval);
			adaptor.AddChild(root_0, char_literal184_tree);
			}
			DebugLocation(218, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:218:8: ( variable_initializer_list )?
			int alt53=2;
			try { DebugEnterSubRule(53);
			try { DebugEnterDecision(53, false);
			int LA53_1 = input.LA(1);

			if ((LA53_1==Character_literal||LA53_1==FALSE||(LA53_1>=Hex_number && LA53_1<=IDENTIFIER)||(LA53_1>=MINUS && LA53_1<=NUMBER)||LA53_1==Real_literal||LA53_1==STRINGLITERAL||LA53_1==TRUE||LA53_1==Verbatim_string_literal||LA53_1==61||LA53_1==66||(LA53_1>=68 && LA53_1<=69)||(LA53_1>=71 && LA53_1<=72)||LA53_1==75||LA53_1==95||(LA53_1>=97 && LA53_1<=98)||(LA53_1>=100 && LA53_1<=103)||(LA53_1>=105 && LA53_1<=106)||(LA53_1>=109 && LA53_1<=110)||(LA53_1>=114 && LA53_1<=117)||(LA53_1>=119 && LA53_1<=120)||LA53_1==122||LA53_1==126||LA53_1==129||LA53_1==132||LA53_1==135||LA53_1==138||LA53_1==141||(LA53_1>=143 && LA53_1<=144)||(LA53_1>=146 && LA53_1<=148)||(LA53_1>=150 && LA53_1<=152)||LA53_1==154||LA53_1==157||LA53_1==160||LA53_1==162||LA53_1==167||LA53_1==169||(LA53_1>=171 && LA53_1<=174)||LA53_1==177||LA53_1==180||(LA53_1>=183 && LA53_1<=187)||(LA53_1>=189 && LA53_1<=190)||LA53_1==194||(LA53_1>=196 && LA53_1<=197)||LA53_1==202))
			{
				alt53 = 1;
			}
			} finally { DebugExitDecision(53); }
			switch (alt53)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:218:8: variable_initializer_list
				{
				DebugLocation(218, 8);
				PushFollow(Follow._variable_initializer_list_in_array_initializer1639);
				variable_initializer_list185=variable_initializer_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variable_initializer_list185.Tree, variable_initializer_list185, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(53); }

			DebugLocation(218, 37);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:218:37: ( ',' )?
			int alt54=2;
			try { DebugEnterSubRule(54);
			try { DebugEnterDecision(54, false);
			int LA54_1 = input.LA(1);

			if ((LA54_1==74))
			{
				alt54 = 1;
			}
			} finally { DebugExitDecision(54); }
			switch (alt54)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:218:37: ','
				{
				DebugLocation(218, 37);
				char_literal186=(IToken)Match(input,74,Follow._74_in_array_initializer1644); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal186_tree = (object)adaptor.Create(char_literal186, retval);
				adaptor.AddChild(root_0, char_literal186_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(54); }

			DebugLocation(218, 44);
			char_literal187=(IToken)Match(input,201,Follow._201_in_array_initializer1649); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal187_tree = (object)adaptor.Create(char_literal187, retval);
			adaptor.AddChild(root_0, char_literal187_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("array_initializer", 44);
			LeaveRule("array_initializer", 44);
			LeaveRule_array_initializer();
			if (state.backtracking > 0) { Memoize(input, 44, array_initializer_StartIndex); }

		}
		DebugLocation(218, 47);
		} finally { DebugExitRule(GrammarFileName, "array_initializer"); }
		return retval;

	}
	// $ANTLR end "array_initializer"

	partial void EnterRule_variable_initializer_list();
	partial void LeaveRule_variable_initializer_list();
	// $ANTLR start "variable_initializer_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:219:1: variable_initializer_list : variable_initializer ( ',' variable_initializer )* ;
	[GrammarRule("variable_initializer_list")]
	private Antlr3AstNode variable_initializer_list()
	{
		EnterRule_variable_initializer_list();
		EnterRule("variable_initializer_list", 45);
		var retval = new Antlr3AstNode("variable_initializer_list");
		
		retval.Start = (IToken)input.LT(1);
		int variable_initializer_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal189 = default(IToken);
		Antlr3AstNode variable_initializer188 = default(Antlr3AstNode);
		Antlr3AstNode variable_initializer190 = default(Antlr3AstNode);

		object char_literal189_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "variable_initializer_list");
		DebugLocation(219, 50);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 45)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:219:26: ( variable_initializer ( ',' variable_initializer )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:220:2: variable_initializer ( ',' variable_initializer )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(220, 2);
			PushFollow(Follow._variable_initializer_in_variable_initializer_list1657);
			variable_initializer188=variable_initializer();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variable_initializer188.Tree, variable_initializer188, retval);
			DebugLocation(220, 23);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:220:23: ( ',' variable_initializer )*
			try { DebugEnterSubRule(55);
			while (true)
			{
				int alt55=2;
				try { DebugEnterDecision(55, false);
				int LA55_1 = input.LA(1);

				if ((LA55_1==74))
				{
					int LA55_2 = input.LA(2);

					if ((LA55_2==Character_literal||LA55_2==FALSE||(LA55_2>=Hex_number && LA55_2<=IDENTIFIER)||(LA55_2>=MINUS && LA55_2<=NUMBER)||LA55_2==Real_literal||LA55_2==STRINGLITERAL||LA55_2==TRUE||LA55_2==Verbatim_string_literal||LA55_2==61||LA55_2==66||(LA55_2>=68 && LA55_2<=69)||(LA55_2>=71 && LA55_2<=72)||LA55_2==75||LA55_2==95||(LA55_2>=97 && LA55_2<=98)||(LA55_2>=100 && LA55_2<=103)||(LA55_2>=105 && LA55_2<=106)||(LA55_2>=109 && LA55_2<=110)||(LA55_2>=114 && LA55_2<=117)||(LA55_2>=119 && LA55_2<=120)||LA55_2==122||LA55_2==126||LA55_2==129||LA55_2==132||LA55_2==135||LA55_2==138||LA55_2==141||(LA55_2>=143 && LA55_2<=144)||(LA55_2>=146 && LA55_2<=148)||(LA55_2>=150 && LA55_2<=152)||LA55_2==154||LA55_2==157||LA55_2==160||LA55_2==162||LA55_2==167||LA55_2==169||(LA55_2>=171 && LA55_2<=174)||LA55_2==177||LA55_2==180||(LA55_2>=183 && LA55_2<=187)||(LA55_2>=189 && LA55_2<=190)||LA55_2==194||(LA55_2>=196 && LA55_2<=197)||LA55_2==202))
					{
						alt55 = 1;
					}


				}


				} finally { DebugExitDecision(55); }
				switch ( alt55 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:220:24: ',' variable_initializer
					{
					DebugLocation(220, 24);
					char_literal189=(IToken)Match(input,74,Follow._74_in_variable_initializer_list1660); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal189_tree = (object)adaptor.Create(char_literal189, retval);
					adaptor.AddChild(root_0, char_literal189_tree);
					}
					DebugLocation(220, 28);
					PushFollow(Follow._variable_initializer_in_variable_initializer_list1662);
					variable_initializer190=variable_initializer();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, variable_initializer190.Tree, variable_initializer190, retval);

					}
					break;

				default:
					goto loop55;
				}
			}

			loop55:
				;

			} finally { DebugExitSubRule(55); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variable_initializer_list", 45);
			LeaveRule("variable_initializer_list", 45);
			LeaveRule_variable_initializer_list();
			if (state.backtracking > 0) { Memoize(input, 45, variable_initializer_list_StartIndex); }

		}
		DebugLocation(220, 50);
		} finally { DebugExitRule(GrammarFileName, "variable_initializer_list"); }
		return retval;

	}
	// $ANTLR end "variable_initializer_list"

	partial void EnterRule_variable_initializer();
	partial void LeaveRule_variable_initializer();
	// $ANTLR start "variable_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:221:1: variable_initializer : ( expression | array_initializer );
	[GrammarRule("variable_initializer")]
	private Antlr3AstNode variable_initializer()
	{
		EnterRule_variable_initializer();
		EnterRule("variable_initializer", 46);
		var retval = new Antlr3AstNode("variable_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int variable_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode expression191 = default(Antlr3AstNode);
		Antlr3AstNode array_initializer192 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "variable_initializer");
		DebugLocation(221, 32);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 46)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:221:21: ( expression | array_initializer )
			int alt56=2;
			try { DebugEnterDecision(56, false);
			int LA56_1 = input.LA(1);

			if ((LA56_1==Character_literal||LA56_1==FALSE||(LA56_1>=Hex_number && LA56_1<=IDENTIFIER)||(LA56_1>=MINUS && LA56_1<=NUMBER)||LA56_1==Real_literal||LA56_1==STRINGLITERAL||LA56_1==TRUE||LA56_1==Verbatim_string_literal||LA56_1==61||LA56_1==66||(LA56_1>=68 && LA56_1<=69)||(LA56_1>=71 && LA56_1<=72)||LA56_1==75||LA56_1==95||(LA56_1>=97 && LA56_1<=98)||(LA56_1>=100 && LA56_1<=103)||(LA56_1>=105 && LA56_1<=106)||(LA56_1>=109 && LA56_1<=110)||(LA56_1>=114 && LA56_1<=117)||(LA56_1>=119 && LA56_1<=120)||LA56_1==122||LA56_1==126||LA56_1==129||LA56_1==132||LA56_1==135||LA56_1==138||LA56_1==141||(LA56_1>=143 && LA56_1<=144)||(LA56_1>=146 && LA56_1<=148)||(LA56_1>=150 && LA56_1<=152)||LA56_1==154||LA56_1==157||LA56_1==160||LA56_1==162||LA56_1==167||LA56_1==169||(LA56_1>=171 && LA56_1<=174)||LA56_1==177||LA56_1==180||(LA56_1>=183 && LA56_1<=187)||(LA56_1>=189 && LA56_1<=190)||LA56_1==194||LA56_1==196||LA56_1==202))
			{
				alt56 = 1;
			}
			else if ((LA56_1==197))
			{
				alt56 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 56, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(56); }
			switch (alt56)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:222:2: expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(222, 2);
				PushFollow(Follow._expression_in_variable_initializer1672);
				expression191=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression191.Tree, expression191, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:222:15: array_initializer
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(222, 15);
				PushFollow(Follow._array_initializer_in_variable_initializer1676);
				array_initializer192=array_initializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, array_initializer192.Tree, array_initializer192, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variable_initializer", 46);
			LeaveRule("variable_initializer", 46);
			LeaveRule_variable_initializer();
			if (state.backtracking > 0) { Memoize(input, 46, variable_initializer_StartIndex); }

		}
		DebugLocation(222, 32);
		} finally { DebugExitRule(GrammarFileName, "variable_initializer"); }
		return retval;

	}
	// $ANTLR end "variable_initializer"

	partial void EnterRule_sizeof_expression();
	partial void LeaveRule_sizeof_expression();
	// $ANTLR start "sizeof_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:223:1: sizeof_expression : 'sizeof' '(' unmanaged_type ')' ;
	[GrammarRule("sizeof_expression")]
	private Antlr3AstNode sizeof_expression()
	{
		EnterRule_sizeof_expression();
		EnterRule("sizeof_expression", 47);
		var retval = new Antlr3AstNode("sizeof_expression");
		
		retval.Start = (IToken)input.LT(1);
		int sizeof_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal193 = default(IToken);
		IToken char_literal194 = default(IToken);
		IToken char_literal196 = default(IToken);
		Antlr3AstNode unmanaged_type195 = default(Antlr3AstNode);

		object string_literal193_tree = default(object);
		object char_literal194_tree = default(object);
		object char_literal196_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "sizeof_expression");
		DebugLocation(223, 38);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 47)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:223:18: ( 'sizeof' '(' unmanaged_type ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:224:2: 'sizeof' '(' unmanaged_type ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(224, 2);
			string_literal193=(IToken)Match(input,174,Follow._174_in_sizeof_expression1684); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal193_tree = (object)adaptor.Create(string_literal193, retval);
			adaptor.AddChild(root_0, string_literal193_tree);
			}
			DebugLocation(224, 13);
			char_literal194=(IToken)Match(input,68,Follow._68_in_sizeof_expression1688); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal194_tree = (object)adaptor.Create(char_literal194, retval);
			adaptor.AddChild(root_0, char_literal194_tree);
			}
			DebugLocation(224, 19);
			PushFollow(Follow._unmanaged_type_in_sizeof_expression1692);
			unmanaged_type195=unmanaged_type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, unmanaged_type195.Tree, unmanaged_type195, retval);
			DebugLocation(224, 36);
			char_literal196=(IToken)Match(input,RPAREN,Follow._RPAREN_in_sizeof_expression1696); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal196_tree = (object)adaptor.Create(char_literal196, retval);
			adaptor.AddChild(root_0, char_literal196_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("sizeof_expression", 47);
			LeaveRule("sizeof_expression", 47);
			LeaveRule_sizeof_expression();
			if (state.backtracking > 0) { Memoize(input, 47, sizeof_expression_StartIndex); }

		}
		DebugLocation(224, 38);
		} finally { DebugExitRule(GrammarFileName, "sizeof_expression"); }
		return retval;

	}
	// $ANTLR end "sizeof_expression"

	partial void EnterRule_checked_expression();
	partial void LeaveRule_checked_expression();
	// $ANTLR start "checked_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:225:1: checked_expression : 'checked' '(' expression ')' ;
	[GrammarRule("checked_expression")]
	private Antlr3AstNode checked_expression()
	{
		EnterRule_checked_expression();
		EnterRule("checked_expression", 48);
		var retval = new Antlr3AstNode("checked_expression");
		
		retval.Start = (IToken)input.LT(1);
		int checked_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal197 = default(IToken);
		IToken char_literal198 = default(IToken);
		IToken char_literal200 = default(IToken);
		Antlr3AstNode expression199 = default(Antlr3AstNode);

		object string_literal197_tree = default(object);
		object char_literal198_tree = default(object);
		object char_literal200_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "checked_expression");
		DebugLocation(225, 36);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 48)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:225:19: ( 'checked' '(' expression ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:226:2: 'checked' '(' expression ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(226, 2);
			string_literal197=(IToken)Match(input,110,Follow._110_in_checked_expression1704); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal197_tree = (object)adaptor.Create(string_literal197, retval);
			adaptor.AddChild(root_0, string_literal197_tree);
			}
			DebugLocation(226, 14);
			char_literal198=(IToken)Match(input,68,Follow._68_in_checked_expression1708); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal198_tree = (object)adaptor.Create(char_literal198, retval);
			adaptor.AddChild(root_0, char_literal198_tree);
			}
			DebugLocation(226, 20);
			PushFollow(Follow._expression_in_checked_expression1712);
			expression199=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression199.Tree, expression199, retval);
			DebugLocation(226, 33);
			char_literal200=(IToken)Match(input,RPAREN,Follow._RPAREN_in_checked_expression1716); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal200_tree = (object)adaptor.Create(char_literal200, retval);
			adaptor.AddChild(root_0, char_literal200_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("checked_expression", 48);
			LeaveRule("checked_expression", 48);
			LeaveRule_checked_expression();
			if (state.backtracking > 0) { Memoize(input, 48, checked_expression_StartIndex); }

		}
		DebugLocation(226, 36);
		} finally { DebugExitRule(GrammarFileName, "checked_expression"); }
		return retval;

	}
	// $ANTLR end "checked_expression"

	partial void EnterRule_unchecked_expression();
	partial void LeaveRule_unchecked_expression();
	// $ANTLR start "unchecked_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:227:1: unchecked_expression : 'unchecked' '(' expression ')' ;
	[GrammarRule("unchecked_expression")]
	private Antlr3AstNode unchecked_expression()
	{
		EnterRule_unchecked_expression();
		EnterRule("unchecked_expression", 49);
		var retval = new Antlr3AstNode("unchecked_expression");
		
		retval.Start = (IToken)input.LT(1);
		int unchecked_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal201 = default(IToken);
		IToken char_literal202 = default(IToken);
		IToken char_literal204 = default(IToken);
		Antlr3AstNode expression203 = default(Antlr3AstNode);

		object string_literal201_tree = default(object);
		object char_literal202_tree = default(object);
		object char_literal204_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "unchecked_expression");
		DebugLocation(227, 38);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 49)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:227:21: ( 'unchecked' '(' expression ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:228:2: 'unchecked' '(' expression ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(228, 2);
			string_literal201=(IToken)Match(input,187,Follow._187_in_unchecked_expression1725); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal201_tree = (object)adaptor.Create(string_literal201, retval);
			adaptor.AddChild(root_0, string_literal201_tree);
			}
			DebugLocation(228, 16);
			char_literal202=(IToken)Match(input,68,Follow._68_in_unchecked_expression1729); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal202_tree = (object)adaptor.Create(char_literal202, retval);
			adaptor.AddChild(root_0, char_literal202_tree);
			}
			DebugLocation(228, 22);
			PushFollow(Follow._expression_in_unchecked_expression1733);
			expression203=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression203.Tree, expression203, retval);
			DebugLocation(228, 35);
			char_literal204=(IToken)Match(input,RPAREN,Follow._RPAREN_in_unchecked_expression1737); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal204_tree = (object)adaptor.Create(char_literal204, retval);
			adaptor.AddChild(root_0, char_literal204_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unchecked_expression", 49);
			LeaveRule("unchecked_expression", 49);
			LeaveRule_unchecked_expression();
			if (state.backtracking > 0) { Memoize(input, 49, unchecked_expression_StartIndex); }

		}
		DebugLocation(228, 38);
		} finally { DebugExitRule(GrammarFileName, "unchecked_expression"); }
		return retval;

	}
	// $ANTLR end "unchecked_expression"

	partial void EnterRule_default_value_expression();
	partial void LeaveRule_default_value_expression();
	// $ANTLR start "default_value_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:229:1: default_value_expression : 'default' '(' type ')' ;
	[GrammarRule("default_value_expression")]
	private Antlr3AstNode default_value_expression()
	{
		EnterRule_default_value_expression();
		EnterRule("default_value_expression", 50);
		var retval = new Antlr3AstNode("default_value_expression");
		
		retval.Start = (IToken)input.LT(1);
		int default_value_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal205 = default(IToken);
		IToken char_literal206 = default(IToken);
		IToken char_literal208 = default(IToken);
		Antlr3AstNode type207 = default(Antlr3AstNode);

		object string_literal205_tree = default(object);
		object char_literal206_tree = default(object);
		object char_literal208_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "default_value_expression");
		DebugLocation(229, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 50)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:229:25: ( 'default' '(' type ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:230:2: 'default' '(' type ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(230, 2);
			string_literal205=(IToken)Match(input,115,Follow._115_in_default_value_expression1746); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal205_tree = (object)adaptor.Create(string_literal205, retval);
			adaptor.AddChild(root_0, string_literal205_tree);
			}
			DebugLocation(230, 14);
			char_literal206=(IToken)Match(input,68,Follow._68_in_default_value_expression1750); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal206_tree = (object)adaptor.Create(char_literal206, retval);
			adaptor.AddChild(root_0, char_literal206_tree);
			}
			DebugLocation(230, 20);
			PushFollow(Follow._type_in_default_value_expression1754);
			type207=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type207.Tree, type207, retval);
			DebugLocation(230, 27);
			char_literal208=(IToken)Match(input,RPAREN,Follow._RPAREN_in_default_value_expression1758); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal208_tree = (object)adaptor.Create(char_literal208, retval);
			adaptor.AddChild(root_0, char_literal208_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("default_value_expression", 50);
			LeaveRule("default_value_expression", 50);
			LeaveRule_default_value_expression();
			if (state.backtracking > 0) { Memoize(input, 50, default_value_expression_StartIndex); }

		}
		DebugLocation(230, 30);
		} finally { DebugExitRule(GrammarFileName, "default_value_expression"); }
		return retval;

	}
	// $ANTLR end "default_value_expression"

	partial void EnterRule_anonymous_method_expression();
	partial void LeaveRule_anonymous_method_expression();
	// $ANTLR start "anonymous_method_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:231:1: anonymous_method_expression : 'delegate' ( explicit_anonymous_function_signature )? block ;
	[GrammarRule("anonymous_method_expression")]
	private Antlr3AstNode anonymous_method_expression()
	{
		EnterRule_anonymous_method_expression();
		EnterRule("anonymous_method_expression", 51);
		var retval = new Antlr3AstNode("anonymous_method_expression");
		
		retval.Start = (IToken)input.LT(1);
		int anonymous_method_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal209 = default(IToken);
		Antlr3AstNode explicit_anonymous_function_signature210 = default(Antlr3AstNode);
		Antlr3AstNode block211 = default(Antlr3AstNode);

		object string_literal209_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "anonymous_method_expression");
		DebugLocation(231, 60);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 51)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:231:28: ( 'delegate' ( explicit_anonymous_function_signature )? block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:232:2: 'delegate' ( explicit_anonymous_function_signature )? block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(232, 2);
			string_literal209=(IToken)Match(input,116,Follow._116_in_anonymous_method_expression1766); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal209_tree = (object)adaptor.Create(string_literal209, retval);
			adaptor.AddChild(root_0, string_literal209_tree);
			}
			DebugLocation(232, 15);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:232:15: ( explicit_anonymous_function_signature )?
			int alt57=2;
			try { DebugEnterSubRule(57);
			try { DebugEnterDecision(57, false);
			int LA57_1 = input.LA(1);

			if ((LA57_1==68))
			{
				alt57 = 1;
			}
			} finally { DebugExitDecision(57); }
			switch (alt57)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:232:15: explicit_anonymous_function_signature
				{
				DebugLocation(232, 15);
				PushFollow(Follow._explicit_anonymous_function_signature_in_anonymous_method_expression1770);
				explicit_anonymous_function_signature210=explicit_anonymous_function_signature();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, explicit_anonymous_function_signature210.Tree, explicit_anonymous_function_signature210, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(57); }

			DebugLocation(232, 56);
			PushFollow(Follow._block_in_anonymous_method_expression1775);
			block211=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block211.Tree, block211, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("anonymous_method_expression", 51);
			LeaveRule("anonymous_method_expression", 51);
			LeaveRule_anonymous_method_expression();
			if (state.backtracking > 0) { Memoize(input, 51, anonymous_method_expression_StartIndex); }

		}
		DebugLocation(232, 60);
		} finally { DebugExitRule(GrammarFileName, "anonymous_method_expression"); }
		return retval;

	}
	// $ANTLR end "anonymous_method_expression"

	partial void EnterRule_explicit_anonymous_function_signature();
	partial void LeaveRule_explicit_anonymous_function_signature();
	// $ANTLR start "explicit_anonymous_function_signature"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:233:1: explicit_anonymous_function_signature : '(' ( explicit_anonymous_function_parameter_list )? ')' ;
	[GrammarRule("explicit_anonymous_function_signature")]
	private Antlr3AstNode explicit_anonymous_function_signature()
	{
		EnterRule_explicit_anonymous_function_signature();
		EnterRule("explicit_anonymous_function_signature", 52);
		var retval = new Antlr3AstNode("explicit_anonymous_function_signature");
		
		retval.Start = (IToken)input.LT(1);
		int explicit_anonymous_function_signature_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal212 = default(IToken);
		IToken char_literal214 = default(IToken);
		Antlr3AstNode explicit_anonymous_function_parameter_list213 = default(Antlr3AstNode);

		object char_literal212_tree = default(object);
		object char_literal214_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "explicit_anonymous_function_signature");
		DebugLocation(233, 57);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 52)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:233:38: ( '(' ( explicit_anonymous_function_parameter_list )? ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:234:2: '(' ( explicit_anonymous_function_parameter_list )? ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(234, 2);
			char_literal212=(IToken)Match(input,68,Follow._68_in_explicit_anonymous_function_signature1782); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal212_tree = (object)adaptor.Create(char_literal212, retval);
			adaptor.AddChild(root_0, char_literal212_tree);
			}
			DebugLocation(234, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:234:8: ( explicit_anonymous_function_parameter_list )?
			int alt58=2;
			try { DebugEnterSubRule(58);
			try { DebugEnterDecision(58, false);
			int LA58_1 = input.LA(1);

			if ((LA58_1==IDENTIFIER||LA58_1==95||(LA58_1>=97 && LA58_1<=98)||(LA58_1>=100 && LA58_1<=101)||LA58_1==103||(LA58_1>=105 && LA58_1<=106)||LA58_1==109||LA58_1==114||LA58_1==117||(LA58_1>=119 && LA58_1<=120)||LA58_1==122||LA58_1==126||LA58_1==129||LA58_1==132||LA58_1==135||LA58_1==138||LA58_1==141||(LA58_1>=143 && LA58_1<=144)||(LA58_1>=146 && LA58_1<=148)||(LA58_1>=151 && LA58_1<=152)||(LA58_1>=154 && LA58_1<=155)||LA58_1==157||LA58_1==160||LA58_1==162||(LA58_1>=166 && LA58_1<=167)||LA58_1==169||(LA58_1>=171 && LA58_1<=173)||LA58_1==177||LA58_1==183||(LA58_1>=185 && LA58_1<=186)||(LA58_1>=189 && LA58_1<=190)||LA58_1==192||LA58_1==194||LA58_1==196))
			{
				alt58 = 1;
			}
			} finally { DebugExitDecision(58); }
			switch (alt58)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:234:8: explicit_anonymous_function_parameter_list
				{
				DebugLocation(234, 8);
				PushFollow(Follow._explicit_anonymous_function_parameter_list_in_explicit_anonymous_function_signature1786);
				explicit_anonymous_function_parameter_list213=explicit_anonymous_function_parameter_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, explicit_anonymous_function_parameter_list213.Tree, explicit_anonymous_function_parameter_list213, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(58); }

			DebugLocation(234, 54);
			char_literal214=(IToken)Match(input,RPAREN,Follow._RPAREN_in_explicit_anonymous_function_signature1791); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal214_tree = (object)adaptor.Create(char_literal214, retval);
			adaptor.AddChild(root_0, char_literal214_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("explicit_anonymous_function_signature", 52);
			LeaveRule("explicit_anonymous_function_signature", 52);
			LeaveRule_explicit_anonymous_function_signature();
			if (state.backtracking > 0) { Memoize(input, 52, explicit_anonymous_function_signature_StartIndex); }

		}
		DebugLocation(234, 57);
		} finally { DebugExitRule(GrammarFileName, "explicit_anonymous_function_signature"); }
		return retval;

	}
	// $ANTLR end "explicit_anonymous_function_signature"

	partial void EnterRule_explicit_anonymous_function_parameter_list();
	partial void LeaveRule_explicit_anonymous_function_parameter_list();
	// $ANTLR start "explicit_anonymous_function_parameter_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:235:1: explicit_anonymous_function_parameter_list : explicit_anonymous_function_parameter ( ',' explicit_anonymous_function_parameter )* ;
	[GrammarRule("explicit_anonymous_function_parameter_list")]
	private Antlr3AstNode explicit_anonymous_function_parameter_list()
	{
		EnterRule_explicit_anonymous_function_parameter_list();
		EnterRule("explicit_anonymous_function_parameter_list", 53);
		var retval = new Antlr3AstNode("explicit_anonymous_function_parameter_list");
		
		retval.Start = (IToken)input.LT(1);
		int explicit_anonymous_function_parameter_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal216 = default(IToken);
		Antlr3AstNode explicit_anonymous_function_parameter215 = default(Antlr3AstNode);
		Antlr3AstNode explicit_anonymous_function_parameter217 = default(Antlr3AstNode);

		object char_literal216_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "explicit_anonymous_function_parameter_list");
		DebugLocation(235, 88);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 53)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:235:43: ( explicit_anonymous_function_parameter ( ',' explicit_anonymous_function_parameter )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:236:2: explicit_anonymous_function_parameter ( ',' explicit_anonymous_function_parameter )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(236, 2);
			PushFollow(Follow._explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list1799);
			explicit_anonymous_function_parameter215=explicit_anonymous_function_parameter();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, explicit_anonymous_function_parameter215.Tree, explicit_anonymous_function_parameter215, retval);
			DebugLocation(236, 42);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:236:42: ( ',' explicit_anonymous_function_parameter )*
			try { DebugEnterSubRule(59);
			while (true)
			{
				int alt59=2;
				try { DebugEnterDecision(59, false);
				int LA59_1 = input.LA(1);

				if ((LA59_1==74))
				{
					alt59 = 1;
				}


				} finally { DebugExitDecision(59); }
				switch ( alt59 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:236:43: ',' explicit_anonymous_function_parameter
					{
					DebugLocation(236, 43);
					char_literal216=(IToken)Match(input,74,Follow._74_in_explicit_anonymous_function_parameter_list1804); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal216_tree = (object)adaptor.Create(char_literal216, retval);
					adaptor.AddChild(root_0, char_literal216_tree);
					}
					DebugLocation(236, 49);
					PushFollow(Follow._explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list1808);
					explicit_anonymous_function_parameter217=explicit_anonymous_function_parameter();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, explicit_anonymous_function_parameter217.Tree, explicit_anonymous_function_parameter217, retval);

					}
					break;

				default:
					goto loop59;
				}
			}

			loop59:
				;

			} finally { DebugExitSubRule(59); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("explicit_anonymous_function_parameter_list", 53);
			LeaveRule("explicit_anonymous_function_parameter_list", 53);
			LeaveRule_explicit_anonymous_function_parameter_list();
			if (state.backtracking > 0) { Memoize(input, 53, explicit_anonymous_function_parameter_list_StartIndex); }

		}
		DebugLocation(236, 88);
		} finally { DebugExitRule(GrammarFileName, "explicit_anonymous_function_parameter_list"); }
		return retval;

	}
	// $ANTLR end "explicit_anonymous_function_parameter_list"

	partial void EnterRule_explicit_anonymous_function_parameter();
	partial void LeaveRule_explicit_anonymous_function_parameter();
	// $ANTLR start "explicit_anonymous_function_parameter"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:237:1: explicit_anonymous_function_parameter : ( anonymous_function_parameter_modifier )? type identifier ;
	[GrammarRule("explicit_anonymous_function_parameter")]
	private Antlr3AstNode explicit_anonymous_function_parameter()
	{
		EnterRule_explicit_anonymous_function_parameter();
		EnterRule("explicit_anonymous_function_parameter", 54);
		var retval = new Antlr3AstNode("explicit_anonymous_function_parameter");
		
		retval.Start = (IToken)input.LT(1);
		int explicit_anonymous_function_parameter_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode anonymous_function_parameter_modifier218 = default(Antlr3AstNode);
		Antlr3AstNode type219 = default(Antlr3AstNode);
		Antlr3AstNode identifier220 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "explicit_anonymous_function_parameter");
		DebugLocation(237, 59);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 54)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:237:38: ( ( anonymous_function_parameter_modifier )? type identifier )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:238:2: ( anonymous_function_parameter_modifier )? type identifier
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(238, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:238:2: ( anonymous_function_parameter_modifier )?
			int alt60=2;
			try { DebugEnterSubRule(60);
			try { DebugEnterDecision(60, false);
			int LA60_1 = input.LA(1);

			if ((LA60_1==155||LA60_1==166))
			{
				alt60 = 1;
			}
			} finally { DebugExitDecision(60); }
			switch (alt60)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:238:2: anonymous_function_parameter_modifier
				{
				DebugLocation(238, 2);
				PushFollow(Follow._anonymous_function_parameter_modifier_in_explicit_anonymous_function_parameter1819);
				anonymous_function_parameter_modifier218=anonymous_function_parameter_modifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, anonymous_function_parameter_modifier218.Tree, anonymous_function_parameter_modifier218, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(60); }

			DebugLocation(238, 43);
			PushFollow(Follow._type_in_explicit_anonymous_function_parameter1824);
			type219=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type219.Tree, type219, retval);
			DebugLocation(238, 50);
			PushFollow(Follow._identifier_in_explicit_anonymous_function_parameter1828);
			identifier220=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier220.Tree, identifier220, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("explicit_anonymous_function_parameter", 54);
			LeaveRule("explicit_anonymous_function_parameter", 54);
			LeaveRule_explicit_anonymous_function_parameter();
			if (state.backtracking > 0) { Memoize(input, 54, explicit_anonymous_function_parameter_StartIndex); }

		}
		DebugLocation(238, 59);
		} finally { DebugExitRule(GrammarFileName, "explicit_anonymous_function_parameter"); }
		return retval;

	}
	// $ANTLR end "explicit_anonymous_function_parameter"

	partial void EnterRule_anonymous_function_parameter_modifier();
	partial void LeaveRule_anonymous_function_parameter_modifier();
	// $ANTLR start "anonymous_function_parameter_modifier"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:239:1: anonymous_function_parameter_modifier : ( 'ref' | 'out' );
	[GrammarRule("anonymous_function_parameter_modifier")]
	private Antlr3AstNode anonymous_function_parameter_modifier()
	{
		EnterRule_anonymous_function_parameter_modifier();
		EnterRule("anonymous_function_parameter_modifier", 55);
		var retval = new Antlr3AstNode("anonymous_function_parameter_modifier");
		
		retval.Start = (IToken)input.LT(1);
		int anonymous_function_parameter_modifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set221 = default(IToken);

		object set221_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "anonymous_function_parameter_modifier");
		DebugLocation(239, 14);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 55)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:239:38: ( 'ref' | 'out' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(239, 38);

			set221=(IToken)input.LT(1);
			if (input.LA(1)==155||input.LA(1)==166)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set221, retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("anonymous_function_parameter_modifier", 55);
			LeaveRule("anonymous_function_parameter_modifier", 55);
			LeaveRule_anonymous_function_parameter_modifier();
			if (state.backtracking > 0) { Memoize(input, 55, anonymous_function_parameter_modifier_StartIndex); }

		}
		DebugLocation(240, 14);
		} finally { DebugExitRule(GrammarFileName, "anonymous_function_parameter_modifier"); }
		return retval;

	}
	// $ANTLR end "anonymous_function_parameter_modifier"

	partial void EnterRule_object_creation_expression();
	partial void LeaveRule_object_creation_expression();
	// $ANTLR start "object_creation_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:244:1: object_creation_expression : type ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer ) ;
	[GrammarRule("object_creation_expression")]
	private Antlr3AstNode object_creation_expression()
	{
		EnterRule_object_creation_expression();
		EnterRule("object_creation_expression", 56);
		var retval = new Antlr3AstNode("object_creation_expression");
		
		retval.Start = (IToken)input.LT(1);
		int object_creation_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal223 = default(IToken);
		IToken char_literal225 = default(IToken);
		Antlr3AstNode type222 = default(Antlr3AstNode);
		Antlr3AstNode argument_list224 = default(Antlr3AstNode);
		Antlr3AstNode object_or_collection_initializer226 = default(Antlr3AstNode);
		Antlr3AstNode object_or_collection_initializer227 = default(Antlr3AstNode);

		object char_literal223_tree = default(object);
		object char_literal225_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "object_creation_expression");
		DebugLocation(244, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 56)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:244:27: ( type ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:246:2: type ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(246, 2);
			PushFollow(Follow._type_in_object_creation_expression1852);
			type222=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type222.Tree, type222, retval);
			DebugLocation(247, 3);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:247:3: ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer )
			int alt63=2;
			try { DebugEnterSubRule(63);
			try { DebugEnterDecision(63, false);
			int LA63_1 = input.LA(1);

			if ((LA63_1==68))
			{
				alt63 = 1;
			}
			else if ((LA63_1==197))
			{
				alt63 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 63, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(63); }
			switch (alt63)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:247:5: '(' ( argument_list )? ')' ( object_or_collection_initializer )?
				{
				DebugLocation(247, 5);
				char_literal223=(IToken)Match(input,68,Follow._68_in_object_creation_expression1861); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal223_tree = (object)adaptor.Create(char_literal223, retval);
				adaptor.AddChild(root_0, char_literal223_tree);
				}
				DebugLocation(247, 11);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:247:11: ( argument_list )?
				int alt61=2;
				try { DebugEnterSubRule(61);
				try { DebugEnterDecision(61, false);
				int LA61_1 = input.LA(1);

				if ((LA61_1==Character_literal||LA61_1==FALSE||(LA61_1>=Hex_number && LA61_1<=IDENTIFIER)||(LA61_1>=MINUS && LA61_1<=NUMBER)||LA61_1==Real_literal||LA61_1==STRINGLITERAL||LA61_1==TRUE||LA61_1==Verbatim_string_literal||LA61_1==61||LA61_1==66||(LA61_1>=68 && LA61_1<=69)||(LA61_1>=71 && LA61_1<=72)||LA61_1==75||LA61_1==95||(LA61_1>=97 && LA61_1<=98)||(LA61_1>=100 && LA61_1<=103)||(LA61_1>=105 && LA61_1<=106)||(LA61_1>=109 && LA61_1<=110)||(LA61_1>=114 && LA61_1<=117)||(LA61_1>=119 && LA61_1<=120)||LA61_1==122||LA61_1==126||LA61_1==129||LA61_1==132||LA61_1==135||LA61_1==138||LA61_1==141||(LA61_1>=143 && LA61_1<=144)||(LA61_1>=146 && LA61_1<=148)||(LA61_1>=150 && LA61_1<=152)||(LA61_1>=154 && LA61_1<=155)||LA61_1==157||LA61_1==160||LA61_1==162||(LA61_1>=166 && LA61_1<=167)||LA61_1==169||(LA61_1>=171 && LA61_1<=174)||LA61_1==177||LA61_1==180||(LA61_1>=183 && LA61_1<=187)||(LA61_1>=189 && LA61_1<=190)||LA61_1==194||LA61_1==196||LA61_1==202))
				{
					alt61 = 1;
				}
				} finally { DebugExitDecision(61); }
				switch (alt61)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:247:11: argument_list
					{
					DebugLocation(247, 11);
					PushFollow(Follow._argument_list_in_object_creation_expression1865);
					argument_list224=argument_list();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, argument_list224.Tree, argument_list224, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(61); }

				DebugLocation(247, 28);
				char_literal225=(IToken)Match(input,RPAREN,Follow._RPAREN_in_object_creation_expression1870); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal225_tree = (object)adaptor.Create(char_literal225, retval);
				adaptor.AddChild(root_0, char_literal225_tree);
				}
				DebugLocation(247, 34);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:247:34: ( object_or_collection_initializer )?
				int alt62=2;
				try { DebugEnterSubRule(62);
				try { DebugEnterDecision(62, false);
				int LA62_1 = input.LA(1);

				if ((LA62_1==197))
				{
					alt62 = 1;
				}
				} finally { DebugExitDecision(62); }
				switch (alt62)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:247:34: object_or_collection_initializer
					{
					DebugLocation(247, 34);
					PushFollow(Follow._object_or_collection_initializer_in_object_creation_expression1874);
					object_or_collection_initializer226=object_or_collection_initializer();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, object_or_collection_initializer226.Tree, object_or_collection_initializer226, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(62); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:248:7: object_or_collection_initializer
				{
				DebugLocation(248, 7);
				PushFollow(Follow._object_or_collection_initializer_in_object_creation_expression1885);
				object_or_collection_initializer227=object_or_collection_initializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, object_or_collection_initializer227.Tree, object_or_collection_initializer227, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(63); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("object_creation_expression", 56);
			LeaveRule("object_creation_expression", 56);
			LeaveRule_object_creation_expression();
			if (state.backtracking > 0) { Memoize(input, 56, object_creation_expression_StartIndex); }

		}
		DebugLocation(249, 1);
		} finally { DebugExitRule(GrammarFileName, "object_creation_expression"); }
		return retval;

	}
	// $ANTLR end "object_creation_expression"

	partial void EnterRule_object_or_collection_initializer();
	partial void LeaveRule_object_or_collection_initializer();
	// $ANTLR start "object_or_collection_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:250:1: object_or_collection_initializer : '{' ( object_initializer | collection_initializer ) ;
	[GrammarRule("object_or_collection_initializer")]
	private Antlr3AstNode object_or_collection_initializer()
	{
		EnterRule_object_or_collection_initializer();
		EnterRule("object_or_collection_initializer", 57);
		var retval = new Antlr3AstNode("object_or_collection_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int object_or_collection_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal228 = default(IToken);
		Antlr3AstNode object_initializer229 = default(Antlr3AstNode);
		Antlr3AstNode collection_initializer230 = default(Antlr3AstNode);

		object char_literal228_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "object_or_collection_initializer");
		DebugLocation(250, 28);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 57)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:250:33: ( '{' ( object_initializer | collection_initializer ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:251:2: '{' ( object_initializer | collection_initializer )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(251, 2);
			char_literal228=(IToken)Match(input,197,Follow._197_in_object_or_collection_initializer1897); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal228_tree = (object)adaptor.Create(char_literal228, retval);
			adaptor.AddChild(root_0, char_literal228_tree);
			}
			DebugLocation(251, 7);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:251:7: ( object_initializer | collection_initializer )
			int alt64=2;
			try { DebugEnterSubRule(64);
			try { DebugEnterDecision(64, false);
			switch (input.LA(1))
			{
			case 132:
				{
				int LA64_2 = input.LA(2);

				if ((LA64_2==85))
				{
					alt64 = 1;
				}
				else if ((LA64_2==DOT||LA64_2==GT||LA64_2==IDENTIFIER||LA64_2==MINUS||LA64_2==PTR||(LA64_2>=62 && LA64_2<=63)||(LA64_2>=65 && LA64_2<=66)||(LA64_2>=68 && LA64_2<=69)||(LA64_2>=71 && LA64_2<=72)||(LA64_2>=74 && LA64_2<=75)||LA64_2==77||(LA64_2>=80 && LA64_2<=82)||LA64_2==84||(LA64_2>=86 && LA64_2<=91)||LA64_2==93||LA64_2==95||(LA64_2>=97 && LA64_2<=101)||LA64_2==103||(LA64_2>=105 && LA64_2<=106)||LA64_2==109||LA64_2==114||LA64_2==117||(LA64_2>=119 && LA64_2<=120)||LA64_2==122||LA64_2==126||LA64_2==129||LA64_2==132||LA64_2==135||LA64_2==138||(LA64_2>=141 && LA64_2<=144)||(LA64_2>=146 && LA64_2<=148)||(LA64_2>=151 && LA64_2<=152)||LA64_2==154||LA64_2==157||LA64_2==160||LA64_2==162||LA64_2==167||LA64_2==169||(LA64_2>=171 && LA64_2<=173)||LA64_2==177||LA64_2==183||(LA64_2>=185 && LA64_2<=186)||(LA64_2>=189 && LA64_2<=190)||LA64_2==192||LA64_2==194||LA64_2==196||LA64_2==198||(LA64_2>=200 && LA64_2<=201)))
				{
					alt64 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 64, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 74:
			case 201:
				{
				alt64 = 1;
				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case MINUS:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 61:
			case 66:
			case 68:
			case 69:
			case 71:
			case 72:
			case 75:
			case 102:
			case 103:
			case 106:
			case 109:
			case 110:
			case 114:
			case 115:
			case 116:
			case 119:
			case 129:
			case 138:
			case 146:
			case 150:
			case 151:
			case 169:
			case 173:
			case 174:
			case 177:
			case 180:
			case 184:
			case 185:
			case 186:
			case 187:
			case 189:
			case 197:
			case 202:
				{
				alt64 = 2;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA64_2 = input.LA(2);

				if ((LA64_2==85))
				{
					alt64 = 1;
				}
				else if ((LA64_2==DOT||LA64_2==GT||LA64_2==MINUS||LA64_2==PTR||(LA64_2>=62 && LA64_2<=63)||(LA64_2>=65 && LA64_2<=66)||(LA64_2>=68 && LA64_2<=69)||(LA64_2>=71 && LA64_2<=72)||(LA64_2>=74 && LA64_2<=75)||LA64_2==77||(LA64_2>=80 && LA64_2<=82)||LA64_2==84||(LA64_2>=86 && LA64_2<=91)||LA64_2==93||LA64_2==99||LA64_2==142||LA64_2==198||(LA64_2>=200 && LA64_2<=201)))
				{
					alt64 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 64, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 64, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(64); }
			switch (alt64)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:251:8: object_initializer
				{
				DebugLocation(251, 8);
				PushFollow(Follow._object_initializer_in_object_or_collection_initializer1901);
				object_initializer229=object_initializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, object_initializer229.Tree, object_initializer229, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:252:5: collection_initializer
				{
				DebugLocation(252, 5);
				PushFollow(Follow._collection_initializer_in_object_or_collection_initializer1908);
				collection_initializer230=collection_initializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, collection_initializer230.Tree, collection_initializer230, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(64); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("object_or_collection_initializer", 57);
			LeaveRule("object_or_collection_initializer", 57);
			LeaveRule_object_or_collection_initializer();
			if (state.backtracking > 0) { Memoize(input, 57, object_or_collection_initializer_StartIndex); }

		}
		DebugLocation(252, 28);
		} finally { DebugExitRule(GrammarFileName, "object_or_collection_initializer"); }
		return retval;

	}
	// $ANTLR end "object_or_collection_initializer"

	partial void EnterRule_collection_initializer();
	partial void LeaveRule_collection_initializer();
	// $ANTLR start "collection_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:253:1: collection_initializer : element_initializer_list ( ',' )? '}' ;
	[GrammarRule("collection_initializer")]
	private Antlr3AstNode collection_initializer()
	{
		EnterRule_collection_initializer();
		EnterRule("collection_initializer", 58);
		var retval = new Antlr3AstNode("collection_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int collection_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal232 = default(IToken);
		IToken char_literal233 = default(IToken);
		Antlr3AstNode element_initializer_list231 = default(Antlr3AstNode);

		object char_literal232_tree = default(object);
		object char_literal233_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "collection_initializer");
		DebugLocation(253, 39);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 58)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:253:23: ( element_initializer_list ( ',' )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:254:2: element_initializer_list ( ',' )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(254, 2);
			PushFollow(Follow._element_initializer_list_in_collection_initializer1918);
			element_initializer_list231=element_initializer_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, element_initializer_list231.Tree, element_initializer_list231, retval);
			DebugLocation(254, 29);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:254:29: ( ',' )?
			int alt65=2;
			try { DebugEnterSubRule(65);
			try { DebugEnterDecision(65, false);
			int LA65_1 = input.LA(1);

			if ((LA65_1==74))
			{
				alt65 = 1;
			}
			} finally { DebugExitDecision(65); }
			switch (alt65)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:254:29: ','
				{
				DebugLocation(254, 29);
				char_literal232=(IToken)Match(input,74,Follow._74_in_collection_initializer1922); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal232_tree = (object)adaptor.Create(char_literal232, retval);
				adaptor.AddChild(root_0, char_literal232_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(65); }

			DebugLocation(254, 36);
			char_literal233=(IToken)Match(input,201,Follow._201_in_collection_initializer1927); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal233_tree = (object)adaptor.Create(char_literal233, retval);
			adaptor.AddChild(root_0, char_literal233_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("collection_initializer", 58);
			LeaveRule("collection_initializer", 58);
			LeaveRule_collection_initializer();
			if (state.backtracking > 0) { Memoize(input, 58, collection_initializer_StartIndex); }

		}
		DebugLocation(254, 39);
		} finally { DebugExitRule(GrammarFileName, "collection_initializer"); }
		return retval;

	}
	// $ANTLR end "collection_initializer"

	partial void EnterRule_element_initializer_list();
	partial void LeaveRule_element_initializer_list();
	// $ANTLR start "element_initializer_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:255:1: element_initializer_list : element_initializer ( ',' element_initializer )* ;
	[GrammarRule("element_initializer_list")]
	private Antlr3AstNode element_initializer_list()
	{
		EnterRule_element_initializer_list();
		EnterRule("element_initializer_list", 59);
		var retval = new Antlr3AstNode("element_initializer_list");
		
		retval.Start = (IToken)input.LT(1);
		int element_initializer_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal235 = default(IToken);
		Antlr3AstNode element_initializer234 = default(Antlr3AstNode);
		Antlr3AstNode element_initializer236 = default(Antlr3AstNode);

		object char_literal235_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "element_initializer_list");
		DebugLocation(255, 49);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 59)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:255:25: ( element_initializer ( ',' element_initializer )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:256:2: element_initializer ( ',' element_initializer )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(256, 2);
			PushFollow(Follow._element_initializer_in_element_initializer_list1936);
			element_initializer234=element_initializer();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, element_initializer234.Tree, element_initializer234, retval);
			DebugLocation(256, 23);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:256:23: ( ',' element_initializer )*
			try { DebugEnterSubRule(66);
			while (true)
			{
				int alt66=2;
				try { DebugEnterDecision(66, false);
				int LA66_1 = input.LA(1);

				if ((LA66_1==74))
				{
					int LA66_2 = input.LA(2);

					if ((LA66_2==Character_literal||LA66_2==FALSE||(LA66_2>=Hex_number && LA66_2<=IDENTIFIER)||(LA66_2>=MINUS && LA66_2<=NUMBER)||LA66_2==Real_literal||LA66_2==STRINGLITERAL||LA66_2==TRUE||LA66_2==Verbatim_string_literal||LA66_2==61||LA66_2==66||(LA66_2>=68 && LA66_2<=69)||(LA66_2>=71 && LA66_2<=72)||LA66_2==75||LA66_2==95||(LA66_2>=97 && LA66_2<=98)||(LA66_2>=100 && LA66_2<=103)||(LA66_2>=105 && LA66_2<=106)||(LA66_2>=109 && LA66_2<=110)||(LA66_2>=114 && LA66_2<=117)||(LA66_2>=119 && LA66_2<=120)||LA66_2==122||LA66_2==126||LA66_2==129||LA66_2==132||LA66_2==135||LA66_2==138||LA66_2==141||(LA66_2>=143 && LA66_2<=144)||(LA66_2>=146 && LA66_2<=148)||(LA66_2>=150 && LA66_2<=152)||LA66_2==154||LA66_2==157||LA66_2==160||LA66_2==162||LA66_2==167||LA66_2==169||(LA66_2>=171 && LA66_2<=174)||LA66_2==177||LA66_2==180||(LA66_2>=183 && LA66_2<=187)||(LA66_2>=189 && LA66_2<=190)||LA66_2==194||(LA66_2>=196 && LA66_2<=197)||LA66_2==202))
					{
						alt66 = 1;
					}


				}


				} finally { DebugExitDecision(66); }
				switch ( alt66 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:256:24: ',' element_initializer
					{
					DebugLocation(256, 24);
					char_literal235=(IToken)Match(input,74,Follow._74_in_element_initializer_list1940); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal235_tree = (object)adaptor.Create(char_literal235, retval);
					adaptor.AddChild(root_0, char_literal235_tree);
					}
					DebugLocation(256, 28);
					PushFollow(Follow._element_initializer_in_element_initializer_list1942);
					element_initializer236=element_initializer();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, element_initializer236.Tree, element_initializer236, retval);

					}
					break;

				default:
					goto loop66;
				}
			}

			loop66:
				;

			} finally { DebugExitSubRule(66); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("element_initializer_list", 59);
			LeaveRule("element_initializer_list", 59);
			LeaveRule_element_initializer_list();
			if (state.backtracking > 0) { Memoize(input, 59, element_initializer_list_StartIndex); }

		}
		DebugLocation(256, 49);
		} finally { DebugExitRule(GrammarFileName, "element_initializer_list"); }
		return retval;

	}
	// $ANTLR end "element_initializer_list"

	partial void EnterRule_element_initializer();
	partial void LeaveRule_element_initializer();
	// $ANTLR start "element_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:257:1: element_initializer : ( non_assignment_expression | '{' expression_list '}' );
	[GrammarRule("element_initializer")]
	private Antlr3AstNode element_initializer()
	{
		EnterRule_element_initializer();
		EnterRule("element_initializer", 60);
		var retval = new Antlr3AstNode("element_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int element_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal238 = default(IToken);
		IToken char_literal240 = default(IToken);
		Antlr3AstNode non_assignment_expression237 = default(Antlr3AstNode);
		Antlr3AstNode expression_list239 = default(Antlr3AstNode);

		object char_literal238_tree = default(object);
		object char_literal240_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "element_initializer");
		DebugLocation(257, 31);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 60)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:257:20: ( non_assignment_expression | '{' expression_list '}' )
			int alt67=2;
			try { DebugEnterDecision(67, false);
			int LA67_1 = input.LA(1);

			if ((LA67_1==Character_literal||LA67_1==FALSE||(LA67_1>=Hex_number && LA67_1<=IDENTIFIER)||(LA67_1>=MINUS && LA67_1<=NUMBER)||LA67_1==Real_literal||LA67_1==STRINGLITERAL||LA67_1==TRUE||LA67_1==Verbatim_string_literal||LA67_1==61||LA67_1==66||(LA67_1>=68 && LA67_1<=69)||(LA67_1>=71 && LA67_1<=72)||LA67_1==75||LA67_1==95||(LA67_1>=97 && LA67_1<=98)||(LA67_1>=100 && LA67_1<=103)||(LA67_1>=105 && LA67_1<=106)||(LA67_1>=109 && LA67_1<=110)||(LA67_1>=114 && LA67_1<=117)||(LA67_1>=119 && LA67_1<=120)||LA67_1==122||LA67_1==126||LA67_1==129||LA67_1==132||LA67_1==135||LA67_1==138||LA67_1==141||(LA67_1>=143 && LA67_1<=144)||(LA67_1>=146 && LA67_1<=148)||(LA67_1>=150 && LA67_1<=152)||LA67_1==154||LA67_1==157||LA67_1==160||LA67_1==162||LA67_1==167||LA67_1==169||(LA67_1>=171 && LA67_1<=174)||LA67_1==177||LA67_1==180||(LA67_1>=183 && LA67_1<=187)||(LA67_1>=189 && LA67_1<=190)||LA67_1==194||LA67_1==196||LA67_1==202))
			{
				alt67 = 1;
			}
			else if ((LA67_1==197))
			{
				alt67 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 67, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(67); }
			switch (alt67)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:258:2: non_assignment_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(258, 2);
				PushFollow(Follow._non_assignment_expression_in_element_initializer1953);
				non_assignment_expression237=non_assignment_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, non_assignment_expression237.Tree, non_assignment_expression237, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:259:4: '{' expression_list '}'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(259, 4);
				char_literal238=(IToken)Match(input,197,Follow._197_in_element_initializer1959); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal238_tree = (object)adaptor.Create(char_literal238, retval);
				adaptor.AddChild(root_0, char_literal238_tree);
				}
				DebugLocation(259, 10);
				PushFollow(Follow._expression_list_in_element_initializer1963);
				expression_list239=expression_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression_list239.Tree, expression_list239, retval);
				DebugLocation(259, 28);
				char_literal240=(IToken)Match(input,201,Follow._201_in_element_initializer1967); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal240_tree = (object)adaptor.Create(char_literal240, retval);
				adaptor.AddChild(root_0, char_literal240_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("element_initializer", 60);
			LeaveRule("element_initializer", 60);
			LeaveRule_element_initializer();
			if (state.backtracking > 0) { Memoize(input, 60, element_initializer_StartIndex); }

		}
		DebugLocation(259, 31);
		} finally { DebugExitRule(GrammarFileName, "element_initializer"); }
		return retval;

	}
	// $ANTLR end "element_initializer"

	partial void EnterRule_object_initializer();
	partial void LeaveRule_object_initializer();
	// $ANTLR start "object_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:266:1: object_initializer : ( member_initializer_list )? ( ',' )? '}' ;
	[GrammarRule("object_initializer")]
	private Antlr3AstNode object_initializer()
	{
		EnterRule_object_initializer();
		EnterRule("object_initializer", 61);
		var retval = new Antlr3AstNode("object_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int object_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal242 = default(IToken);
		IToken char_literal243 = default(IToken);
		Antlr3AstNode member_initializer_list241 = default(Antlr3AstNode);

		object char_literal242_tree = default(object);
		object char_literal243_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "object_initializer");
		DebugLocation(266, 39);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 61)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:266:19: ( ( member_initializer_list )? ( ',' )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:267:2: ( member_initializer_list )? ( ',' )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(267, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:267:2: ( member_initializer_list )?
			int alt68=2;
			try { DebugEnterSubRule(68);
			try { DebugEnterDecision(68, false);
			int LA68_1 = input.LA(1);

			if ((LA68_1==IDENTIFIER||LA68_1==95||(LA68_1>=97 && LA68_1<=98)||(LA68_1>=100 && LA68_1<=101)||LA68_1==105||LA68_1==117||LA68_1==120||LA68_1==122||LA68_1==126||LA68_1==132||LA68_1==135||LA68_1==141||(LA68_1>=143 && LA68_1<=144)||(LA68_1>=147 && LA68_1<=148)||LA68_1==152||LA68_1==154||LA68_1==157||LA68_1==160||LA68_1==162||LA68_1==167||(LA68_1>=171 && LA68_1<=172)||LA68_1==183||LA68_1==190||LA68_1==194||LA68_1==196))
			{
				alt68 = 1;
			}
			} finally { DebugExitDecision(68); }
			switch (alt68)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:267:2: member_initializer_list
				{
				DebugLocation(267, 2);
				PushFollow(Follow._member_initializer_list_in_object_initializer1982);
				member_initializer_list241=member_initializer_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, member_initializer_list241.Tree, member_initializer_list241, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(68); }

			DebugLocation(267, 29);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:267:29: ( ',' )?
			int alt69=2;
			try { DebugEnterSubRule(69);
			try { DebugEnterDecision(69, false);
			int LA69_1 = input.LA(1);

			if ((LA69_1==74))
			{
				alt69 = 1;
			}
			} finally { DebugExitDecision(69); }
			switch (alt69)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:267:29: ','
				{
				DebugLocation(267, 29);
				char_literal242=(IToken)Match(input,74,Follow._74_in_object_initializer1987); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal242_tree = (object)adaptor.Create(char_literal242, retval);
				adaptor.AddChild(root_0, char_literal242_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(69); }

			DebugLocation(267, 36);
			char_literal243=(IToken)Match(input,201,Follow._201_in_object_initializer1992); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal243_tree = (object)adaptor.Create(char_literal243, retval);
			adaptor.AddChild(root_0, char_literal243_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("object_initializer", 61);
			LeaveRule("object_initializer", 61);
			LeaveRule_object_initializer();
			if (state.backtracking > 0) { Memoize(input, 61, object_initializer_StartIndex); }

		}
		DebugLocation(267, 39);
		} finally { DebugExitRule(GrammarFileName, "object_initializer"); }
		return retval;

	}
	// $ANTLR end "object_initializer"

	partial void EnterRule_member_initializer_list();
	partial void LeaveRule_member_initializer_list();
	// $ANTLR start "member_initializer_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:268:1: member_initializer_list : member_initializer ( ',' member_initializer ) ;
	[GrammarRule("member_initializer_list")]
	private Antlr3AstNode member_initializer_list()
	{
		EnterRule_member_initializer_list();
		EnterRule("member_initializer_list", 62);
		var retval = new Antlr3AstNode("member_initializer_list");
		
		retval.Start = (IToken)input.LT(1);
		int member_initializer_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal245 = default(IToken);
		Antlr3AstNode member_initializer244 = default(Antlr3AstNode);
		Antlr3AstNode member_initializer246 = default(Antlr3AstNode);

		object char_literal245_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "member_initializer_list");
		DebugLocation(268, 46);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 62)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:268:24: ( member_initializer ( ',' member_initializer ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:269:2: member_initializer ( ',' member_initializer )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(269, 2);
			PushFollow(Follow._member_initializer_in_member_initializer_list2001);
			member_initializer244=member_initializer();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, member_initializer244.Tree, member_initializer244, retval);
			DebugLocation(269, 22);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:269:22: ( ',' member_initializer )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:269:23: ',' member_initializer
			{
			DebugLocation(269, 23);
			char_literal245=(IToken)Match(input,74,Follow._74_in_member_initializer_list2005); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal245_tree = (object)adaptor.Create(char_literal245, retval);
			adaptor.AddChild(root_0, char_literal245_tree);
			}
			DebugLocation(269, 27);
			PushFollow(Follow._member_initializer_in_member_initializer_list2007);
			member_initializer246=member_initializer();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, member_initializer246.Tree, member_initializer246, retval);

			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("member_initializer_list", 62);
			LeaveRule("member_initializer_list", 62);
			LeaveRule_member_initializer_list();
			if (state.backtracking > 0) { Memoize(input, 62, member_initializer_list_StartIndex); }

		}
		DebugLocation(269, 46);
		} finally { DebugExitRule(GrammarFileName, "member_initializer_list"); }
		return retval;

	}
	// $ANTLR end "member_initializer_list"

	partial void EnterRule_member_initializer();
	partial void LeaveRule_member_initializer();
	// $ANTLR start "member_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:270:1: member_initializer : identifier '=' initializer_value ;
	[GrammarRule("member_initializer")]
	private Antlr3AstNode member_initializer()
	{
		EnterRule_member_initializer();
		EnterRule("member_initializer", 63);
		var retval = new Antlr3AstNode("member_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int member_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal248 = default(IToken);
		Antlr3AstNode identifier247 = default(Antlr3AstNode);
		Antlr3AstNode initializer_value249 = default(Antlr3AstNode);

		object char_literal248_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "member_initializer");
		DebugLocation(270, 38);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 63)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:270:19: ( identifier '=' initializer_value )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:271:2: identifier '=' initializer_value
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(271, 2);
			PushFollow(Follow._identifier_in_member_initializer2017);
			identifier247=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier247.Tree, identifier247, retval);
			DebugLocation(271, 15);
			char_literal248=(IToken)Match(input,85,Follow._85_in_member_initializer2021); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal248_tree = (object)adaptor.Create(char_literal248, retval);
			adaptor.AddChild(root_0, char_literal248_tree);
			}
			DebugLocation(271, 21);
			PushFollow(Follow._initializer_value_in_member_initializer2025);
			initializer_value249=initializer_value();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, initializer_value249.Tree, initializer_value249, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("member_initializer", 63);
			LeaveRule("member_initializer", 63);
			LeaveRule_member_initializer();
			if (state.backtracking > 0) { Memoize(input, 63, member_initializer_StartIndex); }

		}
		DebugLocation(271, 38);
		} finally { DebugExitRule(GrammarFileName, "member_initializer"); }
		return retval;

	}
	// $ANTLR end "member_initializer"

	partial void EnterRule_initializer_value();
	partial void LeaveRule_initializer_value();
	// $ANTLR start "initializer_value"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:272:1: initializer_value : ( expression | object_or_collection_initializer );
	[GrammarRule("initializer_value")]
	private Antlr3AstNode initializer_value()
	{
		EnterRule_initializer_value();
		EnterRule("initializer_value", 64);
		var retval = new Antlr3AstNode("initializer_value");
		
		retval.Start = (IToken)input.LT(1);
		int initializer_value_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode expression250 = default(Antlr3AstNode);
		Antlr3AstNode object_or_collection_initializer251 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "initializer_value");
		DebugLocation(272, 36);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 64)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:272:18: ( expression | object_or_collection_initializer )
			int alt70=2;
			try { DebugEnterDecision(70, false);
			int LA70_1 = input.LA(1);

			if ((LA70_1==Character_literal||LA70_1==FALSE||(LA70_1>=Hex_number && LA70_1<=IDENTIFIER)||(LA70_1>=MINUS && LA70_1<=NUMBER)||LA70_1==Real_literal||LA70_1==STRINGLITERAL||LA70_1==TRUE||LA70_1==Verbatim_string_literal||LA70_1==61||LA70_1==66||(LA70_1>=68 && LA70_1<=69)||(LA70_1>=71 && LA70_1<=72)||LA70_1==75||LA70_1==95||(LA70_1>=97 && LA70_1<=98)||(LA70_1>=100 && LA70_1<=103)||(LA70_1>=105 && LA70_1<=106)||(LA70_1>=109 && LA70_1<=110)||(LA70_1>=114 && LA70_1<=117)||(LA70_1>=119 && LA70_1<=120)||LA70_1==122||LA70_1==126||LA70_1==129||LA70_1==132||LA70_1==135||LA70_1==138||LA70_1==141||(LA70_1>=143 && LA70_1<=144)||(LA70_1>=146 && LA70_1<=148)||(LA70_1>=150 && LA70_1<=152)||LA70_1==154||LA70_1==157||LA70_1==160||LA70_1==162||LA70_1==167||LA70_1==169||(LA70_1>=171 && LA70_1<=174)||LA70_1==177||LA70_1==180||(LA70_1>=183 && LA70_1<=187)||(LA70_1>=189 && LA70_1<=190)||LA70_1==194||LA70_1==196||LA70_1==202))
			{
				alt70 = 1;
			}
			else if ((LA70_1==197))
			{
				alt70 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 70, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(70); }
			switch (alt70)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:273:2: expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(273, 2);
				PushFollow(Follow._expression_in_initializer_value2034);
				expression250=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression250.Tree, expression250, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:274:4: object_or_collection_initializer
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(274, 4);
				PushFollow(Follow._object_or_collection_initializer_in_initializer_value2040);
				object_or_collection_initializer251=object_or_collection_initializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, object_or_collection_initializer251.Tree, object_or_collection_initializer251, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("initializer_value", 64);
			LeaveRule("initializer_value", 64);
			LeaveRule_initializer_value();
			if (state.backtracking > 0) { Memoize(input, 64, initializer_value_StartIndex); }

		}
		DebugLocation(274, 36);
		} finally { DebugExitRule(GrammarFileName, "initializer_value"); }
		return retval;

	}
	// $ANTLR end "initializer_value"

	partial void EnterRule_typeof_expression();
	partial void LeaveRule_typeof_expression();
	// $ANTLR start "typeof_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:278:1: typeof_expression : 'typeof' '(' ( ( unbound_type_name )=> unbound_type_name | type | 'void' ) ')' ;
	[GrammarRule("typeof_expression")]
	private Antlr3AstNode typeof_expression()
	{
		EnterRule_typeof_expression();
		EnterRule("typeof_expression", 65);
		var retval = new Antlr3AstNode("typeof_expression");
		
		retval.Start = (IToken)input.LT(1);
		int typeof_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal252 = default(IToken);
		IToken char_literal253 = default(IToken);
		IToken string_literal256 = default(IToken);
		IToken char_literal257 = default(IToken);
		Antlr3AstNode unbound_type_name254 = default(Antlr3AstNode);
		Antlr3AstNode type255 = default(Antlr3AstNode);

		object string_literal252_tree = default(object);
		object char_literal253_tree = default(object);
		object string_literal256_tree = default(object);
		object char_literal257_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeof_expression");
		DebugLocation(278, 23);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 65)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:278:18: ( 'typeof' '(' ( ( unbound_type_name )=> unbound_type_name | type | 'void' ) ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:279:2: 'typeof' '(' ( ( unbound_type_name )=> unbound_type_name | type | 'void' ) ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(279, 2);
			string_literal252=(IToken)Match(input,184,Follow._184_in_typeof_expression2052); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal252_tree = (object)adaptor.Create(string_literal252, retval);
			adaptor.AddChild(root_0, string_literal252_tree);
			}
			DebugLocation(279, 13);
			char_literal253=(IToken)Match(input,68,Follow._68_in_typeof_expression2056); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal253_tree = (object)adaptor.Create(char_literal253, retval);
			adaptor.AddChild(root_0, char_literal253_tree);
			}
			DebugLocation(279, 19);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:279:19: ( ( unbound_type_name )=> unbound_type_name | type | 'void' )
			int alt71=3;
			try { DebugEnterSubRule(71);
			try { DebugEnterDecision(71, false);
			try
			{
				alt71 = dfa71.Predict(input);
			}
			catch (NoViableAltException nvae)
			{
				DebugRecognitionException(nvae);
				throw;
			}
			} finally { DebugExitDecision(71); }
			switch (alt71)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:279:20: ( unbound_type_name )=> unbound_type_name
				{
				DebugLocation(279, 43);
				PushFollow(Follow._unbound_type_name_in_typeof_expression2067);
				unbound_type_name254=unbound_type_name();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unbound_type_name254.Tree, unbound_type_name254, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:280:10: type
				{
				DebugLocation(280, 10);
				PushFollow(Follow._type_in_typeof_expression2078);
				type255=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type255.Tree, type255, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:281:10: 'void'
				{
				DebugLocation(281, 10);
				string_literal256=(IToken)Match(input,192,Follow._192_in_typeof_expression2090); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal256_tree = (object)adaptor.Create(string_literal256, retval);
				adaptor.AddChild(root_0, string_literal256_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(71); }

			DebugLocation(281, 20);
			char_literal257=(IToken)Match(input,RPAREN,Follow._RPAREN_in_typeof_expression2095); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal257_tree = (object)adaptor.Create(char_literal257, retval);
			adaptor.AddChild(root_0, char_literal257_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeof_expression", 65);
			LeaveRule("typeof_expression", 65);
			LeaveRule_typeof_expression();
			if (state.backtracking > 0) { Memoize(input, 65, typeof_expression_StartIndex); }

		}
		DebugLocation(281, 23);
		} finally { DebugExitRule(GrammarFileName, "typeof_expression"); }
		return retval;

	}
	// $ANTLR end "typeof_expression"

	partial void EnterRule_unbound_type_name();
	partial void LeaveRule_unbound_type_name();
	// $ANTLR start "unbound_type_name"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:286:1: unbound_type_name : unbound_type_name_start ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )* generic_dimension_specifier ;
	[GrammarRule("unbound_type_name")]
	private Antlr3AstNode unbound_type_name()
	{
		EnterRule_unbound_type_name();
		EnterRule("unbound_type_name", 66);
		var retval = new Antlr3AstNode("unbound_type_name");
		
		retval.Start = (IToken)input.LT(1);
		int unbound_type_name_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode unbound_type_name_start258 = default(Antlr3AstNode);
		Antlr3AstNode generic_dimension_specifier259 = default(Antlr3AstNode);
		Antlr3AstNode unbound_type_name_part260 = default(Antlr3AstNode);
		Antlr3AstNode unbound_type_name_part261 = default(Antlr3AstNode);
		Antlr3AstNode generic_dimension_specifier262 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "unbound_type_name");
		DebugLocation(286, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 66)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:286:18: ( unbound_type_name_start ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )* generic_dimension_specifier )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:288:2: unbound_type_name_start ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )* generic_dimension_specifier
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(288, 2);
			PushFollow(Follow._unbound_type_name_start_in_unbound_type_name2110);
			unbound_type_name_start258=unbound_type_name_start();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, unbound_type_name_start258.Tree, unbound_type_name_start258, retval);
			DebugLocation(289, 3);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:289:3: ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )*
			try { DebugEnterSubRule(72);
			while (true)
			{
				int alt72=3;
				try { DebugEnterDecision(72, false);
				try
				{
					alt72 = dfa72.Predict(input);
				}
				catch (NoViableAltException nvae)
				{
					DebugRecognitionException(nvae);
					throw;
				}
				} finally { DebugExitDecision(72); }
				switch ( alt72 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:289:4: ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part )
					{
					DebugLocation(289, 4);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:289:4: ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part )
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:289:5: ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part
					{
					DebugLocation(289, 44);
					PushFollow(Follow._generic_dimension_specifier_in_unbound_type_name2129);
					generic_dimension_specifier259=generic_dimension_specifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, generic_dimension_specifier259.Tree, generic_dimension_specifier259, retval);
					DebugLocation(289, 74);
					PushFollow(Follow._unbound_type_name_part_in_unbound_type_name2133);
					unbound_type_name_part260=unbound_type_name_part();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, unbound_type_name_part260.Tree, unbound_type_name_part260, retval);

					}


					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:290:5: unbound_type_name_part
					{
					DebugLocation(290, 5);
					PushFollow(Follow._unbound_type_name_part_in_unbound_type_name2140);
					unbound_type_name_part261=unbound_type_name_part();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, unbound_type_name_part261.Tree, unbound_type_name_part261, retval);

					}
					break;

				default:
					goto loop72;
				}
			}

			loop72:
				;

			} finally { DebugExitSubRule(72); }

			DebugLocation(291, 4);
			PushFollow(Follow._generic_dimension_specifier_in_unbound_type_name2150);
			generic_dimension_specifier262=generic_dimension_specifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, generic_dimension_specifier262.Tree, generic_dimension_specifier262, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unbound_type_name", 66);
			LeaveRule("unbound_type_name", 66);
			LeaveRule_unbound_type_name();
			if (state.backtracking > 0) { Memoize(input, 66, unbound_type_name_StartIndex); }

		}
		DebugLocation(292, 1);
		} finally { DebugExitRule(GrammarFileName, "unbound_type_name"); }
		return retval;

	}
	// $ANTLR end "unbound_type_name"

	partial void EnterRule_unbound_type_name_start();
	partial void LeaveRule_unbound_type_name_start();
	// $ANTLR start "unbound_type_name_start"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:294:1: unbound_type_name_start : identifier ( '::' identifier )? ;
	[GrammarRule("unbound_type_name_start")]
	private Antlr3AstNode unbound_type_name_start()
	{
		EnterRule_unbound_type_name_start();
		EnterRule("unbound_type_name_start", 67);
		var retval = new Antlr3AstNode("unbound_type_name_start");
		
		retval.Start = (IToken)input.LT(1);
		int unbound_type_name_start_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal264 = default(IToken);
		Antlr3AstNode identifier263 = default(Antlr3AstNode);
		Antlr3AstNode identifier265 = default(Antlr3AstNode);

		object string_literal264_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "unbound_type_name_start");
		DebugLocation(294, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 67)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:294:24: ( identifier ( '::' identifier )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:295:2: identifier ( '::' identifier )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(295, 2);
			PushFollow(Follow._identifier_in_unbound_type_name_start2160);
			identifier263=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier263.Tree, identifier263, retval);
			DebugLocation(295, 13);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:295:13: ( '::' identifier )?
			int alt73=2;
			try { DebugEnterSubRule(73);
			try { DebugEnterDecision(73, false);
			int LA73_1 = input.LA(1);

			if ((LA73_1==80))
			{
				alt73 = 1;
			}
			} finally { DebugExitDecision(73); }
			switch (alt73)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:295:14: '::' identifier
				{
				DebugLocation(295, 14);
				string_literal264=(IToken)Match(input,80,Follow._80_in_unbound_type_name_start2163); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal264_tree = (object)adaptor.Create(string_literal264, retval);
				adaptor.AddChild(root_0, string_literal264_tree);
				}
				DebugLocation(295, 19);
				PushFollow(Follow._identifier_in_unbound_type_name_start2165);
				identifier265=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier265.Tree, identifier265, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(73); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unbound_type_name_start", 67);
			LeaveRule("unbound_type_name_start", 67);
			LeaveRule_unbound_type_name_start();
			if (state.backtracking > 0) { Memoize(input, 67, unbound_type_name_start_StartIndex); }

		}
		DebugLocation(295, 30);
		} finally { DebugExitRule(GrammarFileName, "unbound_type_name_start"); }
		return retval;

	}
	// $ANTLR end "unbound_type_name_start"

	partial void EnterRule_unbound_type_name_part();
	partial void LeaveRule_unbound_type_name_part();
	// $ANTLR start "unbound_type_name_part"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:296:1: unbound_type_name_part : '.' identifier ;
	[GrammarRule("unbound_type_name_part")]
	private Antlr3AstNode unbound_type_name_part()
	{
		EnterRule_unbound_type_name_part();
		EnterRule("unbound_type_name_part", 68);
		var retval = new Antlr3AstNode("unbound_type_name_part");
		
		retval.Start = (IToken)input.LT(1);
		int unbound_type_name_part_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal266 = default(IToken);
		Antlr3AstNode identifier267 = default(Antlr3AstNode);

		object char_literal266_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "unbound_type_name_part");
		DebugLocation(296, 17);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 68)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:296:23: ( '.' identifier )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:297:2: '.' identifier
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(297, 2);
			char_literal266=(IToken)Match(input,DOT,Follow._DOT_in_unbound_type_name_part2174); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal266_tree = (object)adaptor.Create(char_literal266, retval);
			adaptor.AddChild(root_0, char_literal266_tree);
			}
			DebugLocation(297, 8);
			PushFollow(Follow._identifier_in_unbound_type_name_part2178);
			identifier267=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier267.Tree, identifier267, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unbound_type_name_part", 68);
			LeaveRule("unbound_type_name_part", 68);
			LeaveRule_unbound_type_name_part();
			if (state.backtracking > 0) { Memoize(input, 68, unbound_type_name_part_StartIndex); }

		}
		DebugLocation(297, 17);
		} finally { DebugExitRule(GrammarFileName, "unbound_type_name_part"); }
		return retval;

	}
	// $ANTLR end "unbound_type_name_part"

	partial void EnterRule_generic_dimension_specifier();
	partial void LeaveRule_generic_dimension_specifier();
	// $ANTLR start "generic_dimension_specifier"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:298:1: generic_dimension_specifier : '<' ( commas )? '>' ;
	[GrammarRule("generic_dimension_specifier")]
	private Antlr3AstNode generic_dimension_specifier()
	{
		EnterRule_generic_dimension_specifier();
		EnterRule("generic_dimension_specifier", 69);
		var retval = new Antlr3AstNode("generic_dimension_specifier");
		
		retval.Start = (IToken)input.LT(1);
		int generic_dimension_specifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal268 = default(IToken);
		IToken char_literal270 = default(IToken);
		Antlr3AstNode commas269 = default(Antlr3AstNode);

		object char_literal268_tree = default(object);
		object char_literal270_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "generic_dimension_specifier");
		DebugLocation(298, 21);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 69)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:298:28: ( '<' ( commas )? '>' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:299:2: '<' ( commas )? '>'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(299, 2);
			char_literal268=(IToken)Match(input,81,Follow._81_in_generic_dimension_specifier2186); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal268_tree = (object)adaptor.Create(char_literal268, retval);
			adaptor.AddChild(root_0, char_literal268_tree);
			}
			DebugLocation(299, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:299:8: ( commas )?
			int alt74=2;
			try { DebugEnterSubRule(74);
			try { DebugEnterDecision(74, false);
			int LA74_1 = input.LA(1);

			if ((LA74_1==74))
			{
				alt74 = 1;
			}
			} finally { DebugExitDecision(74); }
			switch (alt74)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:299:8: commas
				{
				DebugLocation(299, 8);
				PushFollow(Follow._commas_in_generic_dimension_specifier2190);
				commas269=commas();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, commas269.Tree, commas269, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(74); }

			DebugLocation(299, 18);
			char_literal270=(IToken)Match(input,GT,Follow._GT_in_generic_dimension_specifier2195); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal270_tree = (object)adaptor.Create(char_literal270, retval);
			adaptor.AddChild(root_0, char_literal270_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("generic_dimension_specifier", 69);
			LeaveRule("generic_dimension_specifier", 69);
			LeaveRule_generic_dimension_specifier();
			if (state.backtracking > 0) { Memoize(input, 69, generic_dimension_specifier_StartIndex); }

		}
		DebugLocation(299, 21);
		} finally { DebugExitRule(GrammarFileName, "generic_dimension_specifier"); }
		return retval;

	}
	// $ANTLR end "generic_dimension_specifier"

	partial void EnterRule_commas();
	partial void LeaveRule_commas();
	// $ANTLR start "commas"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:300:1: commas : ( ',' )+ ;
	[GrammarRule("commas")]
	private Antlr3AstNode commas()
	{
		EnterRule_commas();
		EnterRule("commas", 70);
		var retval = new Antlr3AstNode("commas");
		
		retval.Start = (IToken)input.LT(1);
		int commas_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal271 = default(IToken);

		object char_literal271_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "commas");
		DebugLocation(300, 6);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 70)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:300:7: ( ( ',' )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:301:2: ( ',' )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(301, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:301:2: ( ',' )+
			int cnt75=0;
			try { DebugEnterSubRule(75);
			while (true)
			{
				int alt75=2;
				try { DebugEnterDecision(75, false);
				int LA75_1 = input.LA(1);

				if ((LA75_1==74))
				{
					alt75 = 1;
				}


				} finally { DebugExitDecision(75); }
				switch (alt75)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:301:2: ','
					{
					DebugLocation(301, 2);
					char_literal271=(IToken)Match(input,74,Follow._74_in_commas2204); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal271_tree = (object)adaptor.Create(char_literal271, retval);
					adaptor.AddChild(root_0, char_literal271_tree);
					}

					}
					break;

				default:
					if (cnt75 >= 1)
						goto loop75;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee75 = new EarlyExitException( 75, input );
					DebugRecognitionException(eee75);
					throw eee75;
				}
				cnt75++;
			}
			loop75:
				;

			} finally { DebugExitSubRule(75); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("commas", 70);
			LeaveRule("commas", 70);
			LeaveRule_commas();
			if (state.backtracking > 0) { Memoize(input, 70, commas_StartIndex); }

		}
		DebugLocation(301, 6);
		} finally { DebugExitRule(GrammarFileName, "commas"); }
		return retval;

	}
	// $ANTLR end "commas"

	partial void EnterRule_type_name();
	partial void LeaveRule_type_name();
	// $ANTLR start "type_name"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:307:1: type_name : namespace_or_type_name ;
	[GrammarRule("type_name")]
	private Antlr3AstNode type_name()
	{
		EnterRule_type_name();
		EnterRule("type_name", 71);
		var retval = new Antlr3AstNode("type_name");
		
		retval.Start = (IToken)input.LT(1);
		int type_name_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode namespace_or_type_name272 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "type_name");
		DebugLocation(307, 24);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 71)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:307:10: ( namespace_or_type_name )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:308:2: namespace_or_type_name
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(308, 2);
			PushFollow(Follow._namespace_or_type_name_in_type_name2220);
			namespace_or_type_name272=namespace_or_type_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, namespace_or_type_name272.Tree, namespace_or_type_name272, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("type_name", 71);
			LeaveRule("type_name", 71);
			LeaveRule_type_name();
			if (state.backtracking > 0) { Memoize(input, 71, type_name_StartIndex); }

		}
		DebugLocation(308, 24);
		} finally { DebugExitRule(GrammarFileName, "type_name"); }
		return retval;

	}
	// $ANTLR end "type_name"

	partial void EnterRule_namespace_or_type_name();
	partial void LeaveRule_namespace_or_type_name();
	// $ANTLR start "namespace_or_type_name"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:309:1: namespace_or_type_name : type_or_generic ( '::' type_or_generic )? ( '.' type_or_generic )* ;
	[GrammarRule("namespace_or_type_name")]
	private Antlr3AstNode namespace_or_type_name()
	{
		EnterRule_namespace_or_type_name();
		EnterRule("namespace_or_type_name", 72);
		var retval = new Antlr3AstNode("namespace_or_type_name");
		
		retval.Start = (IToken)input.LT(1);
		int namespace_or_type_name_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal274 = default(IToken);
		IToken char_literal276 = default(IToken);
		Antlr3AstNode type_or_generic273 = default(Antlr3AstNode);
		Antlr3AstNode type_or_generic275 = default(Antlr3AstNode);
		Antlr3AstNode type_or_generic277 = default(Antlr3AstNode);

		object string_literal274_tree = default(object);
		object char_literal276_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "namespace_or_type_name");
		DebugLocation(309, 69);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 72)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:309:23: ( type_or_generic ( '::' type_or_generic )? ( '.' type_or_generic )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:310:3: type_or_generic ( '::' type_or_generic )? ( '.' type_or_generic )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(310, 3);
			PushFollow(Follow._type_or_generic_in_namespace_or_type_name2229);
			type_or_generic273=type_or_generic();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_or_generic273.Tree, type_or_generic273, retval);
			DebugLocation(310, 21);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:310:21: ( '::' type_or_generic )?
			int alt76=2;
			try { DebugEnterSubRule(76);
			try { DebugEnterDecision(76, false);
			int LA76_1 = input.LA(1);

			if ((LA76_1==80))
			{
				alt76 = 1;
			}
			} finally { DebugExitDecision(76); }
			switch (alt76)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:310:22: '::' type_or_generic
				{
				DebugLocation(310, 22);
				string_literal274=(IToken)Match(input,80,Follow._80_in_namespace_or_type_name2234); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal274_tree = (object)adaptor.Create(string_literal274, retval);
				adaptor.AddChild(root_0, string_literal274_tree);
				}
				DebugLocation(310, 27);
				PushFollow(Follow._type_or_generic_in_namespace_or_type_name2236);
				type_or_generic275=type_or_generic();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type_or_generic275.Tree, type_or_generic275, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(76); }

			DebugLocation(310, 45);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:310:45: ( '.' type_or_generic )*
			try { DebugEnterSubRule(77);
			while (true)
			{
				int alt77=2;
				try { DebugEnterDecision(77, false);
				int LA77_1 = input.LA(1);

				if ((LA77_1==DOT))
				{
					int LA77_2 = input.LA(2);

					if ((LA77_2==IDENTIFIER||LA77_2==95||(LA77_2>=97 && LA77_2<=98)||(LA77_2>=100 && LA77_2<=101)||LA77_2==105||LA77_2==117||LA77_2==120||LA77_2==122||LA77_2==126||LA77_2==132||LA77_2==135||LA77_2==141||(LA77_2>=143 && LA77_2<=144)||(LA77_2>=147 && LA77_2<=148)||LA77_2==152||LA77_2==154||LA77_2==157||LA77_2==160||LA77_2==162||LA77_2==167||(LA77_2>=171 && LA77_2<=172)||LA77_2==183||LA77_2==190||LA77_2==194||LA77_2==196))
					{
						alt77 = 1;
					}


				}


				} finally { DebugExitDecision(77); }
				switch ( alt77 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:310:46: '.' type_or_generic
					{
					DebugLocation(310, 46);
					char_literal276=(IToken)Match(input,DOT,Follow._DOT_in_namespace_or_type_name2241); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal276_tree = (object)adaptor.Create(char_literal276, retval);
					adaptor.AddChild(root_0, char_literal276_tree);
					}
					DebugLocation(310, 52);
					PushFollow(Follow._type_or_generic_in_namespace_or_type_name2245);
					type_or_generic277=type_or_generic();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type_or_generic277.Tree, type_or_generic277, retval);

					}
					break;

				default:
					goto loop77;
				}
			}

			loop77:
				;

			} finally { DebugExitSubRule(77); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("namespace_or_type_name", 72);
			LeaveRule("namespace_or_type_name", 72);
			LeaveRule_namespace_or_type_name();
			if (state.backtracking > 0) { Memoize(input, 72, namespace_or_type_name_StartIndex); }

		}
		DebugLocation(310, 69);
		} finally { DebugExitRule(GrammarFileName, "namespace_or_type_name"); }
		return retval;

	}
	// $ANTLR end "namespace_or_type_name"

	partial void EnterRule_type_or_generic();
	partial void LeaveRule_type_or_generic();
	// $ANTLR start "type_or_generic"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:311:1: type_or_generic : ( ( identifier '<' )=> identifier generic_argument_list | identifier );
	[GrammarRule("type_or_generic")]
	private Antlr3AstNode type_or_generic()
	{
		EnterRule_type_or_generic();
		EnterRule("type_or_generic", 73);
		var retval = new Antlr3AstNode("type_or_generic");
		
		retval.Start = (IToken)input.LT(1);
		int type_or_generic_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode identifier278 = default(Antlr3AstNode);
		Antlr3AstNode generic_argument_list279 = default(Antlr3AstNode);
		Antlr3AstNode identifier280 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "type_or_generic");
		DebugLocation(311, 14);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 73)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:311:16: ( ( identifier '<' )=> identifier generic_argument_list | identifier )
			int alt78=2;
			try { DebugEnterDecision(78, false);
			int LA78_1 = input.LA(1);

			if ((LA78_1==IDENTIFIER||LA78_1==95||(LA78_1>=97 && LA78_1<=98)||(LA78_1>=100 && LA78_1<=101)||LA78_1==105||LA78_1==117||LA78_1==120||LA78_1==122||LA78_1==126||LA78_1==132||LA78_1==135||LA78_1==141||(LA78_1>=143 && LA78_1<=144)||(LA78_1>=147 && LA78_1<=148)||LA78_1==152||LA78_1==154||LA78_1==157||LA78_1==160||LA78_1==162||LA78_1==167||(LA78_1>=171 && LA78_1<=172)||LA78_1==183||LA78_1==190||LA78_1==194||LA78_1==196))
			{
				int LA78_2 = input.LA(2);

				if ((EvaluatePredicate(synpred15_cs_fragment)))
				{
					alt78 = 1;
				}
				else if ((true))
				{
					alt78 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 78, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 78, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(78); }
			switch (alt78)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:312:2: ( identifier '<' )=> identifier generic_argument_list
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(312, 24);
				PushFollow(Follow._identifier_in_type_or_generic2265);
				identifier278=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier278.Tree, identifier278, retval);
				DebugLocation(312, 37);
				PushFollow(Follow._generic_argument_list_in_type_or_generic2269);
				generic_argument_list279=generic_argument_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, generic_argument_list279.Tree, generic_argument_list279, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:313:4: identifier
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(313, 4);
				PushFollow(Follow._identifier_in_type_or_generic2274);
				identifier280=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier280.Tree, identifier280, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("type_or_generic", 73);
			LeaveRule("type_or_generic", 73);
			LeaveRule_type_or_generic();
			if (state.backtracking > 0) { Memoize(input, 73, type_or_generic_StartIndex); }

		}
		DebugLocation(313, 14);
		} finally { DebugExitRule(GrammarFileName, "type_or_generic"); }
		return retval;

	}
	// $ANTLR end "type_or_generic"

	partial void EnterRule_qid();
	partial void LeaveRule_qid();
	// $ANTLR start "qid"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:315:1: qid : qid_start ( qid_part )* ;
	[GrammarRule("qid")]
	private Antlr3AstNode qid()
	{
		EnterRule_qid();
		EnterRule("qid", 74);
		var retval = new Antlr3AstNode("qid");
		
		retval.Start = (IToken)input.LT(1);
		int qid_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode qid_start281 = default(Antlr3AstNode);
		Antlr3AstNode qid_part282 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "qid");
		DebugLocation(315, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 74)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:315:4: ( qid_start ( qid_part )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:316:2: qid_start ( qid_part )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(316, 2);
			PushFollow(Follow._qid_start_in_qid2285);
			qid_start281=qid_start();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, qid_start281.Tree, qid_start281, retval);
			DebugLocation(316, 14);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:316:14: ( qid_part )*
			try { DebugEnterSubRule(79);
			while (true)
			{
				int alt79=2;
				try { DebugEnterDecision(79, false);
				int LA79_1 = input.LA(1);

				if ((LA79_1==DOT))
				{
					int LA79_2 = input.LA(2);

					if ((LA79_2==IDENTIFIER||LA79_2==95||(LA79_2>=97 && LA79_2<=98)||(LA79_2>=100 && LA79_2<=101)||LA79_2==105||LA79_2==117||LA79_2==120||LA79_2==122||LA79_2==126||LA79_2==132||LA79_2==135||LA79_2==141||(LA79_2>=143 && LA79_2<=144)||(LA79_2>=147 && LA79_2<=148)||LA79_2==152||LA79_2==154||LA79_2==157||LA79_2==160||LA79_2==162||LA79_2==167||(LA79_2>=171 && LA79_2<=172)||LA79_2==183||LA79_2==190||LA79_2==194||LA79_2==196))
					{
						alt79 = 1;
					}


				}
				else if ((LA79_1==PTR))
				{
					alt79 = 1;
				}


				} finally { DebugExitDecision(79); }
				switch ( alt79 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:316:14: qid_part
					{
					DebugLocation(316, 14);
					PushFollow(Follow._qid_part_in_qid2289);
					qid_part282=qid_part();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, qid_part282.Tree, qid_part282, retval);

					}
					break;

				default:
					goto loop79;
				}
			}

			loop79:
				;

			} finally { DebugExitSubRule(79); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("qid", 74);
			LeaveRule("qid", 74);
			LeaveRule_qid();
			if (state.backtracking > 0) { Memoize(input, 74, qid_StartIndex); }

		}
		DebugLocation(317, 1);
		} finally { DebugExitRule(GrammarFileName, "qid"); }
		return retval;

	}
	// $ANTLR end "qid"

	partial void EnterRule_qid_start();
	partial void LeaveRule_qid_start();
	// $ANTLR start "qid_start"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:318:1: qid_start : ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | identifier ( '::' identifier )? | literal );
	[GrammarRule("qid_start")]
	private Antlr3AstNode qid_start()
	{
		EnterRule_qid_start();
		EnterRule("qid_start", 75);
		var retval = new Antlr3AstNode("qid_start");
		
		retval.Start = (IToken)input.LT(1);
		int qid_start_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal287 = default(IToken);
		Antlr3AstNode predefined_type283 = default(Antlr3AstNode);
		Antlr3AstNode identifier284 = default(Antlr3AstNode);
		Antlr3AstNode generic_argument_list285 = default(Antlr3AstNode);
		Antlr3AstNode identifier286 = default(Antlr3AstNode);
		Antlr3AstNode identifier288 = default(Antlr3AstNode);
		Antlr3AstNode literal289 = default(Antlr3AstNode);

		object string_literal287_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "qid_start");
		DebugLocation(318, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 75)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:318:10: ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | identifier ( '::' identifier )? | literal )
			int alt81=4;
			try { DebugEnterDecision(81, false);
			switch (input.LA(1))
			{
			case 103:
			case 106:
			case 109:
			case 114:
			case 119:
			case 129:
			case 138:
			case 146:
			case 151:
			case 169:
			case 173:
			case 177:
			case 185:
			case 186:
			case 189:
				{
				alt81 = 1;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 132:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA81_2 = input.LA(2);

				if ((LA81_2==81) && (EvaluatePredicate(synpred16_cs_fragment)))
				{
					alt81 = 2;
				}
				else if ((LA81_2==DOT||LA81_2==PTR||LA81_2==68||LA81_2==80||LA81_2==197))
				{
					alt81 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 81, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
				{
				alt81 = 4;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 81, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(81); }
			switch (alt81)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:319:2: predefined_type
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(319, 2);
				PushFollow(Follow._predefined_type_in_qid_start2299);
				predefined_type283=predefined_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, predefined_type283.Tree, predefined_type283, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:320:4: ( identifier '<' )=> identifier generic_argument_list
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(320, 27);
				PushFollow(Follow._identifier_in_qid_start2315);
				identifier284=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier284.Tree, identifier284, retval);
				DebugLocation(320, 40);
				PushFollow(Follow._generic_argument_list_in_qid_start2319);
				generic_argument_list285=generic_argument_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, generic_argument_list285.Tree, generic_argument_list285, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:323:4: identifier ( '::' identifier )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(323, 4);
				PushFollow(Follow._identifier_in_qid_start2326);
				identifier286=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier286.Tree, identifier286, retval);
				DebugLocation(323, 17);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:323:17: ( '::' identifier )?
				int alt80=2;
				try { DebugEnterSubRule(80);
				try { DebugEnterDecision(80, false);
				int LA80_1 = input.LA(1);

				if ((LA80_1==80))
				{
					alt80 = 1;
				}
				} finally { DebugExitDecision(80); }
				switch (alt80)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:323:18: '::' identifier
					{
					DebugLocation(323, 18);
					string_literal287=(IToken)Match(input,80,Follow._80_in_qid_start2331); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal287_tree = (object)adaptor.Create(string_literal287, retval);
					adaptor.AddChild(root_0, string_literal287_tree);
					}
					DebugLocation(323, 25);
					PushFollow(Follow._identifier_in_qid_start2335);
					identifier288=identifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, identifier288.Tree, identifier288, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(80); }


				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:324:4: literal
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(324, 4);
				PushFollow(Follow._literal_in_qid_start2342);
				literal289=literal();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, literal289.Tree, literal289, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("qid_start", 75);
			LeaveRule("qid_start", 75);
			LeaveRule_qid_start();
			if (state.backtracking > 0) { Memoize(input, 75, qid_start_StartIndex); }

		}
		DebugLocation(325, 1);
		} finally { DebugExitRule(GrammarFileName, "qid_start"); }
		return retval;

	}
	// $ANTLR end "qid_start"

	partial void EnterRule_qid_part();
	partial void LeaveRule_qid_part();
	// $ANTLR start "qid_part"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:328:1: qid_part : access_identifier ;
	[GrammarRule("qid_part")]
	private Antlr3AstNode qid_part()
	{
		EnterRule_qid_part();
		EnterRule("qid_part", 76);
		var retval = new Antlr3AstNode("qid_part");
		
		retval.Start = (IToken)input.LT(1);
		int qid_part_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode access_identifier290 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "qid_part");
		DebugLocation(328, 19);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 76)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:328:9: ( access_identifier )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:329:2: access_identifier
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(329, 2);
			PushFollow(Follow._access_identifier_in_qid_part2356);
			access_identifier290=access_identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, access_identifier290.Tree, access_identifier290, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("qid_part", 76);
			LeaveRule("qid_part", 76);
			LeaveRule_qid_part();
			if (state.backtracking > 0) { Memoize(input, 76, qid_part_StartIndex); }

		}
		DebugLocation(329, 19);
		} finally { DebugExitRule(GrammarFileName, "qid_part"); }
		return retval;

	}
	// $ANTLR end "qid_part"

	partial void EnterRule_generic_argument_list();
	partial void LeaveRule_generic_argument_list();
	// $ANTLR start "generic_argument_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:331:1: generic_argument_list : '<' type_arguments '>' ;
	[GrammarRule("generic_argument_list")]
	private Antlr3AstNode generic_argument_list()
	{
		EnterRule_generic_argument_list();
		EnterRule("generic_argument_list", 77);
		var retval = new Antlr3AstNode("generic_argument_list");
		
		retval.Start = (IToken)input.LT(1);
		int generic_argument_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal291 = default(IToken);
		IToken char_literal293 = default(IToken);
		Antlr3AstNode type_arguments292 = default(Antlr3AstNode);

		object char_literal291_tree = default(object);
		object char_literal293_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "generic_argument_list");
		DebugLocation(331, 28);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 77)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:331:22: ( '<' type_arguments '>' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:332:2: '<' type_arguments '>'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(332, 2);
			char_literal291=(IToken)Match(input,81,Follow._81_in_generic_argument_list2366); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal291_tree = (object)adaptor.Create(char_literal291, retval);
			adaptor.AddChild(root_0, char_literal291_tree);
			}
			DebugLocation(332, 8);
			PushFollow(Follow._type_arguments_in_generic_argument_list2370);
			type_arguments292=type_arguments();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_arguments292.Tree, type_arguments292, retval);
			DebugLocation(332, 25);
			char_literal293=(IToken)Match(input,GT,Follow._GT_in_generic_argument_list2374); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal293_tree = (object)adaptor.Create(char_literal293, retval);
			adaptor.AddChild(root_0, char_literal293_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("generic_argument_list", 77);
			LeaveRule("generic_argument_list", 77);
			LeaveRule_generic_argument_list();
			if (state.backtracking > 0) { Memoize(input, 77, generic_argument_list_StartIndex); }

		}
		DebugLocation(332, 28);
		} finally { DebugExitRule(GrammarFileName, "generic_argument_list"); }
		return retval;

	}
	// $ANTLR end "generic_argument_list"

	partial void EnterRule_type_arguments();
	partial void LeaveRule_type_arguments();
	// $ANTLR start "type_arguments"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:333:1: type_arguments : type ( ',' type )* ;
	[GrammarRule("type_arguments")]
	private Antlr3AstNode type_arguments()
	{
		EnterRule_type_arguments();
		EnterRule("type_arguments", 78);
		var retval = new Antlr3AstNode("type_arguments");
		
		retval.Start = (IToken)input.LT(1);
		int type_arguments_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal295 = default(IToken);
		Antlr3AstNode type294 = default(Antlr3AstNode);
		Antlr3AstNode type296 = default(Antlr3AstNode);

		object char_literal295_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "type_arguments");
		DebugLocation(333, 18);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 78)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:333:15: ( type ( ',' type )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:334:2: type ( ',' type )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(334, 2);
			PushFollow(Follow._type_in_type_arguments2383);
			type294=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type294.Tree, type294, retval);
			DebugLocation(334, 7);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:334:7: ( ',' type )*
			try { DebugEnterSubRule(82);
			while (true)
			{
				int alt82=2;
				try { DebugEnterDecision(82, false);
				int LA82_1 = input.LA(1);

				if ((LA82_1==74))
				{
					alt82 = 1;
				}


				} finally { DebugExitDecision(82); }
				switch ( alt82 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:334:8: ',' type
					{
					DebugLocation(334, 8);
					char_literal295=(IToken)Match(input,74,Follow._74_in_type_arguments2386); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal295_tree = (object)adaptor.Create(char_literal295, retval);
					adaptor.AddChild(root_0, char_literal295_tree);
					}
					DebugLocation(334, 12);
					PushFollow(Follow._type_in_type_arguments2388);
					type296=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type296.Tree, type296, retval);

					}
					break;

				default:
					goto loop82;
				}
			}

			loop82:
				;

			} finally { DebugExitSubRule(82); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("type_arguments", 78);
			LeaveRule("type_arguments", 78);
			LeaveRule_type_arguments();
			if (state.backtracking > 0) { Memoize(input, 78, type_arguments_StartIndex); }

		}
		DebugLocation(334, 18);
		} finally { DebugExitRule(GrammarFileName, "type_arguments"); }
		return retval;

	}
	// $ANTLR end "type_arguments"

	partial void EnterRule_type();
	partial void LeaveRule_type();
	// $ANTLR start "type"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:336:1: type : ( ( ( predefined_type | type_name ) rank_specifiers )=> ( predefined_type | type_name ) rank_specifiers ( '*' )* | ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )=> ( predefined_type | type_name ) ( ( '*' )+ | '?' ) | ( predefined_type | type_name ) | 'void' ( '*' )+ );
	[GrammarRule("type")]
	private Antlr3AstNode type()
	{
		EnterRule_type();
		EnterRule("type", 79);
		var retval = new Antlr3AstNode("type");
		
		retval.Start = (IToken)input.LT(1);
		int type_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal300 = default(IToken);
		IToken char_literal303 = default(IToken);
		IToken char_literal304 = default(IToken);
		IToken string_literal307 = default(IToken);
		IToken char_literal308 = default(IToken);
		Antlr3AstNode predefined_type297 = default(Antlr3AstNode);
		Antlr3AstNode type_name298 = default(Antlr3AstNode);
		Antlr3AstNode rank_specifiers299 = default(Antlr3AstNode);
		Antlr3AstNode predefined_type301 = default(Antlr3AstNode);
		Antlr3AstNode type_name302 = default(Antlr3AstNode);
		Antlr3AstNode predefined_type305 = default(Antlr3AstNode);
		Antlr3AstNode type_name306 = default(Antlr3AstNode);

		object char_literal300_tree = default(object);
		object char_literal303_tree = default(object);
		object char_literal304_tree = default(object);
		object string_literal307_tree = default(object);
		object char_literal308_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "type");
		DebugLocation(336, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 79)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:336:5: ( ( ( predefined_type | type_name ) rank_specifiers )=> ( predefined_type | type_name ) rank_specifiers ( '*' )* | ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )=> ( predefined_type | type_name ) ( ( '*' )+ | '?' ) | ( predefined_type | type_name ) | 'void' ( '*' )+ )
			int alt90=4;
			try { DebugEnterDecision(90, false);
			switch (input.LA(1))
			{
			case 103:
			case 106:
			case 109:
			case 114:
			case 119:
			case 129:
			case 138:
			case 146:
			case 151:
			case 169:
			case 173:
			case 177:
			case 185:
			case 186:
			case 189:
				{
				int LA90_2 = input.LA(2);

				if ((EvaluatePredicate(synpred17_cs_fragment)))
				{
					alt90 = 1;
				}
				else if ((EvaluatePredicate(synpred18_cs_fragment)))
				{
					alt90 = 2;
				}
				else if ((true))
				{
					alt90 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 132:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA90_2 = input.LA(2);

				if ((EvaluatePredicate(synpred17_cs_fragment)))
				{
					alt90 = 1;
				}
				else if ((EvaluatePredicate(synpred18_cs_fragment)))
				{
					alt90 = 2;
				}
				else if ((true))
				{
					alt90 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 192:
				{
				alt90 = 4;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(90); }
			switch (alt90)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:337:4: ( ( predefined_type | type_name ) rank_specifiers )=> ( predefined_type | type_name ) rank_specifiers ( '*' )*
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(337, 56);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:337:56: ( predefined_type | type_name )
				int alt83=2;
				try { DebugEnterSubRule(83);
				try { DebugEnterDecision(83, false);
				int LA83_1 = input.LA(1);

				if ((LA83_1==103||LA83_1==106||LA83_1==109||LA83_1==114||LA83_1==119||LA83_1==129||LA83_1==138||LA83_1==146||LA83_1==151||LA83_1==169||LA83_1==173||LA83_1==177||(LA83_1>=185 && LA83_1<=186)||LA83_1==189))
				{
					alt83 = 1;
				}
				else if ((LA83_1==IDENTIFIER||LA83_1==95||(LA83_1>=97 && LA83_1<=98)||(LA83_1>=100 && LA83_1<=101)||LA83_1==105||LA83_1==117||LA83_1==120||LA83_1==122||LA83_1==126||LA83_1==132||LA83_1==135||LA83_1==141||(LA83_1>=143 && LA83_1<=144)||(LA83_1>=147 && LA83_1<=148)||LA83_1==152||LA83_1==154||LA83_1==157||LA83_1==160||LA83_1==162||LA83_1==167||(LA83_1>=171 && LA83_1<=172)||LA83_1==183||LA83_1==190||LA83_1==194||LA83_1==196))
				{
					alt83 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 83, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(83); }
				switch (alt83)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:337:57: predefined_type
					{
					DebugLocation(337, 57);
					PushFollow(Follow._predefined_type_in_type2417);
					predefined_type297=predefined_type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, predefined_type297.Tree, predefined_type297, retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:337:75: type_name
					{
					DebugLocation(337, 75);
					PushFollow(Follow._type_name_in_type2421);
					type_name298=type_name();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type_name298.Tree, type_name298, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(83); }

				DebugLocation(337, 88);
				PushFollow(Follow._rank_specifiers_in_type2426);
				rank_specifiers299=rank_specifiers();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, rank_specifiers299.Tree, rank_specifiers299, retval);
				DebugLocation(337, 106);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:337:106: ( '*' )*
				try { DebugEnterSubRule(84);
				while (true)
				{
					int alt84=2;
					try { DebugEnterDecision(84, false);
					int LA84_1 = input.LA(1);

					if ((LA84_1==69))
					{
						alt84 = 1;
					}


					} finally { DebugExitDecision(84); }
					switch ( alt84 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:337:106: '*'
						{
						DebugLocation(337, 106);
						char_literal300=(IToken)Match(input,69,Follow._69_in_type2430); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal300_tree = (object)adaptor.Create(char_literal300, retval);
						adaptor.AddChild(root_0, char_literal300_tree);
						}

						}
						break;

					default:
						goto loop84;
					}
				}

				loop84:
					;

				} finally { DebugExitSubRule(84); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:338:4: ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )=> ( predefined_type | type_name ) ( ( '*' )+ | '?' )
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(338, 53);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:338:53: ( predefined_type | type_name )
				int alt85=2;
				try { DebugEnterSubRule(85);
				try { DebugEnterDecision(85, false);
				int LA85_1 = input.LA(1);

				if ((LA85_1==103||LA85_1==106||LA85_1==109||LA85_1==114||LA85_1==119||LA85_1==129||LA85_1==138||LA85_1==146||LA85_1==151||LA85_1==169||LA85_1==173||LA85_1==177||(LA85_1>=185 && LA85_1<=186)||LA85_1==189))
				{
					alt85 = 1;
				}
				else if ((LA85_1==IDENTIFIER||LA85_1==95||(LA85_1>=97 && LA85_1<=98)||(LA85_1>=100 && LA85_1<=101)||LA85_1==105||LA85_1==117||LA85_1==120||LA85_1==122||LA85_1==126||LA85_1==132||LA85_1==135||LA85_1==141||(LA85_1>=143 && LA85_1<=144)||(LA85_1>=147 && LA85_1<=148)||LA85_1==152||LA85_1==154||LA85_1==157||LA85_1==160||LA85_1==162||LA85_1==167||(LA85_1>=171 && LA85_1<=172)||LA85_1==183||LA85_1==190||LA85_1==194||LA85_1==196))
				{
					alt85 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 85, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(85); }
				switch (alt85)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:338:54: predefined_type
					{
					DebugLocation(338, 54);
					PushFollow(Follow._predefined_type_in_type2459);
					predefined_type301=predefined_type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, predefined_type301.Tree, predefined_type301, retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:338:72: type_name
					{
					DebugLocation(338, 72);
					PushFollow(Follow._type_name_in_type2463);
					type_name302=type_name();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type_name302.Tree, type_name302, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(85); }

				DebugLocation(338, 85);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:338:85: ( ( '*' )+ | '?' )
				int alt87=2;
				try { DebugEnterSubRule(87);
				try { DebugEnterDecision(87, false);
				int LA87_1 = input.LA(1);

				if ((LA87_1==69))
				{
					alt87 = 1;
				}
				else if ((LA87_1==89))
				{
					alt87 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 87, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(87); }
				switch (alt87)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:338:86: ( '*' )+
					{
					DebugLocation(338, 86);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:338:86: ( '*' )+
					int cnt86=0;
					try { DebugEnterSubRule(86);
					while (true)
					{
						int alt86=2;
						try { DebugEnterDecision(86, false);
						int LA86_1 = input.LA(1);

						if ((LA86_1==69))
						{
							alt86 = 1;
						}


						} finally { DebugExitDecision(86); }
						switch (alt86)
						{
						case 1:
							DebugEnterAlt(1);
							// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:338:86: '*'
							{
							DebugLocation(338, 86);
							char_literal303=(IToken)Match(input,69,Follow._69_in_type2469); if (state.failed) return retval;
							if (state.backtracking == 0) {
							char_literal303_tree = (object)adaptor.Create(char_literal303, retval);
							adaptor.AddChild(root_0, char_literal303_tree);
							}

							}
							break;

						default:
							if (cnt86 >= 1)
								goto loop86;

							if (state.backtracking>0) {state.failed=true; return retval;}
							EarlyExitException eee86 = new EarlyExitException( 86, input );
							DebugRecognitionException(eee86);
							throw eee86;
						}
						cnt86++;
					}
					loop86:
						;

					} finally { DebugExitSubRule(86); }


					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:338:93: '?'
					{
					DebugLocation(338, 93);
					char_literal304=(IToken)Match(input,89,Follow._89_in_type2474); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal304_tree = (object)adaptor.Create(char_literal304, retval);
					adaptor.AddChild(root_0, char_literal304_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(87); }


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:339:4: ( predefined_type | type_name )
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(339, 4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:339:4: ( predefined_type | type_name )
				int alt88=2;
				try { DebugEnterSubRule(88);
				try { DebugEnterDecision(88, false);
				int LA88_1 = input.LA(1);

				if ((LA88_1==103||LA88_1==106||LA88_1==109||LA88_1==114||LA88_1==119||LA88_1==129||LA88_1==138||LA88_1==146||LA88_1==151||LA88_1==169||LA88_1==173||LA88_1==177||(LA88_1>=185 && LA88_1<=186)||LA88_1==189))
				{
					alt88 = 1;
				}
				else if ((LA88_1==IDENTIFIER||LA88_1==95||(LA88_1>=97 && LA88_1<=98)||(LA88_1>=100 && LA88_1<=101)||LA88_1==105||LA88_1==117||LA88_1==120||LA88_1==122||LA88_1==126||LA88_1==132||LA88_1==135||LA88_1==141||(LA88_1>=143 && LA88_1<=144)||(LA88_1>=147 && LA88_1<=148)||LA88_1==152||LA88_1==154||LA88_1==157||LA88_1==160||LA88_1==162||LA88_1==167||(LA88_1>=171 && LA88_1<=172)||LA88_1==183||LA88_1==190||LA88_1==194||LA88_1==196))
				{
					alt88 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 88, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(88); }
				switch (alt88)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:339:5: predefined_type
					{
					DebugLocation(339, 5);
					PushFollow(Follow._predefined_type_in_type2481);
					predefined_type305=predefined_type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, predefined_type305.Tree, predefined_type305, retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:339:23: type_name
					{
					DebugLocation(339, 23);
					PushFollow(Follow._type_name_in_type2485);
					type_name306=type_name();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type_name306.Tree, type_name306, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(88); }


				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:340:4: 'void' ( '*' )+
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(340, 4);
				string_literal307=(IToken)Match(input,192,Follow._192_in_type2491); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal307_tree = (object)adaptor.Create(string_literal307, retval);
				adaptor.AddChild(root_0, string_literal307_tree);
				}
				DebugLocation(340, 11);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:340:11: ( '*' )+
				int cnt89=0;
				try { DebugEnterSubRule(89);
				while (true)
				{
					int alt89=2;
					try { DebugEnterDecision(89, false);
					int LA89_1 = input.LA(1);

					if ((LA89_1==69))
					{
						alt89 = 1;
					}


					} finally { DebugExitDecision(89); }
					switch (alt89)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:340:11: '*'
						{
						DebugLocation(340, 11);
						char_literal308=(IToken)Match(input,69,Follow._69_in_type2493); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal308_tree = (object)adaptor.Create(char_literal308, retval);
						adaptor.AddChild(root_0, char_literal308_tree);
						}

						}
						break;

					default:
						if (cnt89 >= 1)
							goto loop89;

						if (state.backtracking>0) {state.failed=true; return retval;}
						EarlyExitException eee89 = new EarlyExitException( 89, input );
						DebugRecognitionException(eee89);
						throw eee89;
					}
					cnt89++;
				}
				loop89:
					;

				} finally { DebugExitSubRule(89); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("type", 79);
			LeaveRule("type", 79);
			LeaveRule_type();
			if (state.backtracking > 0) { Memoize(input, 79, type_StartIndex); }

		}
		DebugLocation(341, 1);
		} finally { DebugExitRule(GrammarFileName, "type"); }
		return retval;

	}
	// $ANTLR end "type"

	partial void EnterRule_non_nullable_type();
	partial void LeaveRule_non_nullable_type();
	// $ANTLR start "non_nullable_type"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:342:1: non_nullable_type : ( ( predefined_type | type_name ) ( rank_specifiers ( '*' )* | ( ( '*' )+ )? ) | 'void' ( '*' )+ );
	[GrammarRule("non_nullable_type")]
	private Antlr3AstNode non_nullable_type()
	{
		EnterRule_non_nullable_type();
		EnterRule("non_nullable_type", 80);
		var retval = new Antlr3AstNode("non_nullable_type");
		
		retval.Start = (IToken)input.LT(1);
		int non_nullable_type_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal312 = default(IToken);
		IToken char_literal313 = default(IToken);
		IToken string_literal314 = default(IToken);
		IToken char_literal315 = default(IToken);
		Antlr3AstNode predefined_type309 = default(Antlr3AstNode);
		Antlr3AstNode type_name310 = default(Antlr3AstNode);
		Antlr3AstNode rank_specifiers311 = default(Antlr3AstNode);

		object char_literal312_tree = default(object);
		object char_literal313_tree = default(object);
		object string_literal314_tree = default(object);
		object char_literal315_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "non_nullable_type");
		DebugLocation(342, 17);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 80)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:342:18: ( ( predefined_type | type_name ) ( rank_specifiers ( '*' )* | ( ( '*' )+ )? ) | 'void' ( '*' )+ )
			int alt97=2;
			try { DebugEnterDecision(97, false);
			int LA97_1 = input.LA(1);

			if ((LA97_1==IDENTIFIER||LA97_1==95||(LA97_1>=97 && LA97_1<=98)||(LA97_1>=100 && LA97_1<=101)||LA97_1==103||(LA97_1>=105 && LA97_1<=106)||LA97_1==109||LA97_1==114||LA97_1==117||(LA97_1>=119 && LA97_1<=120)||LA97_1==122||LA97_1==126||LA97_1==129||LA97_1==132||LA97_1==135||LA97_1==138||LA97_1==141||(LA97_1>=143 && LA97_1<=144)||(LA97_1>=146 && LA97_1<=148)||(LA97_1>=151 && LA97_1<=152)||LA97_1==154||LA97_1==157||LA97_1==160||LA97_1==162||LA97_1==167||LA97_1==169||(LA97_1>=171 && LA97_1<=173)||LA97_1==177||LA97_1==183||(LA97_1>=185 && LA97_1<=186)||(LA97_1>=189 && LA97_1<=190)||LA97_1==194||LA97_1==196))
			{
				alt97 = 1;
			}
			else if ((LA97_1==192))
			{
				alt97 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 97, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(97); }
			switch (alt97)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:343:2: ( predefined_type | type_name ) ( rank_specifiers ( '*' )* | ( ( '*' )+ )? )
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(343, 2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:343:2: ( predefined_type | type_name )
				int alt91=2;
				try { DebugEnterSubRule(91);
				try { DebugEnterDecision(91, false);
				int LA91_1 = input.LA(1);

				if ((LA91_1==103||LA91_1==106||LA91_1==109||LA91_1==114||LA91_1==119||LA91_1==129||LA91_1==138||LA91_1==146||LA91_1==151||LA91_1==169||LA91_1==173||LA91_1==177||(LA91_1>=185 && LA91_1<=186)||LA91_1==189))
				{
					alt91 = 1;
				}
				else if ((LA91_1==IDENTIFIER||LA91_1==95||(LA91_1>=97 && LA91_1<=98)||(LA91_1>=100 && LA91_1<=101)||LA91_1==105||LA91_1==117||LA91_1==120||LA91_1==122||LA91_1==126||LA91_1==132||LA91_1==135||LA91_1==141||(LA91_1>=143 && LA91_1<=144)||(LA91_1>=147 && LA91_1<=148)||LA91_1==152||LA91_1==154||LA91_1==157||LA91_1==160||LA91_1==162||LA91_1==167||(LA91_1>=171 && LA91_1<=172)||LA91_1==183||LA91_1==190||LA91_1==194||LA91_1==196))
				{
					alt91 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 91, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(91); }
				switch (alt91)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:343:3: predefined_type
					{
					DebugLocation(343, 3);
					PushFollow(Follow._predefined_type_in_non_nullable_type2504);
					predefined_type309=predefined_type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, predefined_type309.Tree, predefined_type309, retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:343:21: type_name
					{
					DebugLocation(343, 21);
					PushFollow(Follow._type_name_in_non_nullable_type2508);
					type_name310=type_name();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type_name310.Tree, type_name310, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(91); }

				DebugLocation(344, 3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:344:3: ( rank_specifiers ( '*' )* | ( ( '*' )+ )? )
				int alt95=2;
				try { DebugEnterSubRule(95);
				try { DebugEnterDecision(95, false);
				int LA95_1 = input.LA(1);

				if ((LA95_1==91))
				{
					alt95 = 1;
				}
				else if ((LA95_1==EOF||LA95_1==GT||LA95_1==IDENTIFIER||LA95_1==RPAREN||LA95_1==SEMI||LA95_1==62||(LA95_1>=65 && LA95_1<=66)||LA95_1==69||LA95_1==74||LA95_1==79||LA95_1==81||LA95_1==84||LA95_1==86||(LA95_1>=88 && LA95_1<=90)||(LA95_1>=92 && LA95_1<=93)||LA95_1==95||(LA95_1>=97 && LA95_1<=101)||LA95_1==105||LA95_1==117||LA95_1==120||LA95_1==122||LA95_1==126||LA95_1==132||LA95_1==135||(LA95_1>=141 && LA95_1<=144)||(LA95_1>=147 && LA95_1<=148)||LA95_1==152||LA95_1==154||LA95_1==157||LA95_1==160||LA95_1==162||LA95_1==167||(LA95_1>=171 && LA95_1<=172)||LA95_1==183||LA95_1==190||LA95_1==194||LA95_1==196||LA95_1==198||(LA95_1>=200 && LA95_1<=201)))
				{
					alt95 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 95, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(95); }
				switch (alt95)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:344:7: rank_specifiers ( '*' )*
					{
					DebugLocation(344, 7);
					PushFollow(Follow._rank_specifiers_in_non_nullable_type2517);
					rank_specifiers311=rank_specifiers();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, rank_specifiers311.Tree, rank_specifiers311, retval);
					DebugLocation(344, 25);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:344:25: ( '*' )*
					try { DebugEnterSubRule(92);
					while (true)
					{
						int alt92=2;
						try { DebugEnterDecision(92, false);
						int LA92_1 = input.LA(1);

						if ((LA92_1==69))
						{
							alt92 = 1;
						}


						} finally { DebugExitDecision(92); }
						switch ( alt92 )
						{
						case 1:
							DebugEnterAlt(1);
							// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:344:25: '*'
							{
							DebugLocation(344, 25);
							char_literal312=(IToken)Match(input,69,Follow._69_in_non_nullable_type2521); if (state.failed) return retval;
							if (state.backtracking == 0) {
							char_literal312_tree = (object)adaptor.Create(char_literal312, retval);
							adaptor.AddChild(root_0, char_literal312_tree);
							}

							}
							break;

						default:
							goto loop92;
						}
					}

					loop92:
						;

					} finally { DebugExitSubRule(92); }


					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:345:6: ( ( '*' )+ )?
					{
					DebugLocation(345, 6);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:345:6: ( ( '*' )+ )?
					int alt94=2;
					try { DebugEnterSubRule(94);
					try { DebugEnterDecision(94, false);
					int LA94_1 = input.LA(1);

					if ((LA94_1==69))
					{
						alt94 = 1;
					}
					} finally { DebugExitDecision(94); }
					switch (alt94)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:345:7: ( '*' )+
						{
						DebugLocation(345, 7);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:345:7: ( '*' )+
						int cnt93=0;
						try { DebugEnterSubRule(93);
						while (true)
						{
							int alt93=2;
							try { DebugEnterDecision(93, false);
							int LA93_1 = input.LA(1);

							if ((LA93_1==69))
							{
								alt93 = 1;
							}


							} finally { DebugExitDecision(93); }
							switch (alt93)
							{
							case 1:
								DebugEnterAlt(1);
								// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:345:7: '*'
								{
								DebugLocation(345, 7);
								char_literal313=(IToken)Match(input,69,Follow._69_in_non_nullable_type2530); if (state.failed) return retval;
								if (state.backtracking == 0) {
								char_literal313_tree = (object)adaptor.Create(char_literal313, retval);
								adaptor.AddChild(root_0, char_literal313_tree);
								}

								}
								break;

							default:
								if (cnt93 >= 1)
									goto loop93;

								if (state.backtracking>0) {state.failed=true; return retval;}
								EarlyExitException eee93 = new EarlyExitException( 93, input );
								DebugRecognitionException(eee93);
								throw eee93;
							}
							cnt93++;
						}
						loop93:
							;

						} finally { DebugExitSubRule(93); }


						}
						break;

					}
					} finally { DebugExitSubRule(94); }


					}
					break;

				}
				} finally { DebugExitSubRule(95); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:347:4: 'void' ( '*' )+
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(347, 4);
				string_literal314=(IToken)Match(input,192,Follow._192_in_non_nullable_type2542); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal314_tree = (object)adaptor.Create(string_literal314, retval);
				adaptor.AddChild(root_0, string_literal314_tree);
				}
				DebugLocation(347, 13);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:347:13: ( '*' )+
				int cnt96=0;
				try { DebugEnterSubRule(96);
				while (true)
				{
					int alt96=2;
					try { DebugEnterDecision(96, false);
					int LA96_1 = input.LA(1);

					if ((LA96_1==69))
					{
						alt96 = 1;
					}


					} finally { DebugExitDecision(96); }
					switch (alt96)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:347:13: '*'
						{
						DebugLocation(347, 13);
						char_literal315=(IToken)Match(input,69,Follow._69_in_non_nullable_type2546); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal315_tree = (object)adaptor.Create(char_literal315, retval);
						adaptor.AddChild(root_0, char_literal315_tree);
						}

						}
						break;

					default:
						if (cnt96 >= 1)
							goto loop96;

						if (state.backtracking>0) {state.failed=true; return retval;}
						EarlyExitException eee96 = new EarlyExitException( 96, input );
						DebugRecognitionException(eee96);
						throw eee96;
					}
					cnt96++;
				}
				loop96:
					;

				} finally { DebugExitSubRule(96); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("non_nullable_type", 80);
			LeaveRule("non_nullable_type", 80);
			LeaveRule_non_nullable_type();
			if (state.backtracking > 0) { Memoize(input, 80, non_nullable_type_StartIndex); }

		}
		DebugLocation(347, 17);
		} finally { DebugExitRule(GrammarFileName, "non_nullable_type"); }
		return retval;

	}
	// $ANTLR end "non_nullable_type"

	partial void EnterRule_non_array_type();
	partial void LeaveRule_non_array_type();
	// $ANTLR start "non_array_type"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:349:1: non_array_type : type ;
	[GrammarRule("non_array_type")]
	private Antlr3AstNode non_array_type()
	{
		EnterRule_non_array_type();
		EnterRule("non_array_type", 81);
		var retval = new Antlr3AstNode("non_array_type");
		
		retval.Start = (IToken)input.LT(1);
		int non_array_type_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode type316 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "non_array_type");
		DebugLocation(349, 5);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 81)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:349:15: ( type )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:350:2: type
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(350, 2);
			PushFollow(Follow._type_in_non_array_type2557);
			type316=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type316.Tree, type316, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("non_array_type", 81);
			LeaveRule("non_array_type", 81);
			LeaveRule_non_array_type();
			if (state.backtracking > 0) { Memoize(input, 81, non_array_type_StartIndex); }

		}
		DebugLocation(350, 5);
		} finally { DebugExitRule(GrammarFileName, "non_array_type"); }
		return retval;

	}
	// $ANTLR end "non_array_type"

	partial void EnterRule_array_type();
	partial void LeaveRule_array_type();
	// $ANTLR start "array_type"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:351:1: array_type : type ;
	[GrammarRule("array_type")]
	private Antlr3AstNode array_type()
	{
		EnterRule_array_type();
		EnterRule("array_type", 82);
		var retval = new Antlr3AstNode("array_type");
		
		retval.Start = (IToken)input.LT(1);
		int array_type_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode type317 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "array_type");
		DebugLocation(351, 5);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 82)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:351:11: ( type )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:352:2: type
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(352, 2);
			PushFollow(Follow._type_in_array_type2564);
			type317=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type317.Tree, type317, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("array_type", 82);
			LeaveRule("array_type", 82);
			LeaveRule_array_type();
			if (state.backtracking > 0) { Memoize(input, 82, array_type_StartIndex); }

		}
		DebugLocation(352, 5);
		} finally { DebugExitRule(GrammarFileName, "array_type"); }
		return retval;

	}
	// $ANTLR end "array_type"

	partial void EnterRule_unmanaged_type();
	partial void LeaveRule_unmanaged_type();
	// $ANTLR start "unmanaged_type"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:353:1: unmanaged_type : type ;
	[GrammarRule("unmanaged_type")]
	private Antlr3AstNode unmanaged_type()
	{
		EnterRule_unmanaged_type();
		EnterRule("unmanaged_type", 83);
		var retval = new Antlr3AstNode("unmanaged_type");
		
		retval.Start = (IToken)input.LT(1);
		int unmanaged_type_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode type318 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "unmanaged_type");
		DebugLocation(353, 5);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 83)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:353:15: ( type )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:354:2: type
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(354, 2);
			PushFollow(Follow._type_in_unmanaged_type2571);
			type318=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type318.Tree, type318, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unmanaged_type", 83);
			LeaveRule("unmanaged_type", 83);
			LeaveRule_unmanaged_type();
			if (state.backtracking > 0) { Memoize(input, 83, unmanaged_type_StartIndex); }

		}
		DebugLocation(354, 5);
		} finally { DebugExitRule(GrammarFileName, "unmanaged_type"); }
		return retval;

	}
	// $ANTLR end "unmanaged_type"

	partial void EnterRule_class_type();
	partial void LeaveRule_class_type();
	// $ANTLR start "class_type"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:355:1: class_type : type ;
	[GrammarRule("class_type")]
	private Antlr3AstNode class_type()
	{
		EnterRule_class_type();
		EnterRule("class_type", 84);
		var retval = new Antlr3AstNode("class_type");
		
		retval.Start = (IToken)input.LT(1);
		int class_type_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode type319 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "class_type");
		DebugLocation(355, 5);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 84)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:355:11: ( type )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:356:2: type
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(356, 2);
			PushFollow(Follow._type_in_class_type2578);
			type319=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type319.Tree, type319, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("class_type", 84);
			LeaveRule("class_type", 84);
			LeaveRule_class_type();
			if (state.backtracking > 0) { Memoize(input, 84, class_type_StartIndex); }

		}
		DebugLocation(356, 5);
		} finally { DebugExitRule(GrammarFileName, "class_type"); }
		return retval;

	}
	// $ANTLR end "class_type"

	partial void EnterRule_pointer_type();
	partial void LeaveRule_pointer_type();
	// $ANTLR start "pointer_type"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:357:1: pointer_type : type ;
	[GrammarRule("pointer_type")]
	private Antlr3AstNode pointer_type()
	{
		EnterRule_pointer_type();
		EnterRule("pointer_type", 85);
		var retval = new Antlr3AstNode("pointer_type");
		
		retval.Start = (IToken)input.LT(1);
		int pointer_type_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode type320 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "pointer_type");
		DebugLocation(357, 5);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 85)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:357:13: ( type )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:358:2: type
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(358, 2);
			PushFollow(Follow._type_in_pointer_type2585);
			type320=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type320.Tree, type320, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("pointer_type", 85);
			LeaveRule("pointer_type", 85);
			LeaveRule_pointer_type();
			if (state.backtracking > 0) { Memoize(input, 85, pointer_type_StartIndex); }

		}
		DebugLocation(358, 5);
		} finally { DebugExitRule(GrammarFileName, "pointer_type"); }
		return retval;

	}
	// $ANTLR end "pointer_type"

	partial void EnterRule_block();
	partial void LeaveRule_block();
	// $ANTLR start "block"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:364:1: block : ( ';' | '{' ( statement_list )? '}' );
	[GrammarRule("block")]
	private Antlr3AstNode block()
	{
		EnterRule_block();
		EnterRule("block", 86);
		var retval = new Antlr3AstNode("block");
		
		retval.Start = (IToken)input.LT(1);
		int block_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal321 = default(IToken);
		IToken char_literal322 = default(IToken);
		IToken char_literal324 = default(IToken);
		Antlr3AstNode statement_list323 = default(Antlr3AstNode);

		object char_literal321_tree = default(object);
		object char_literal322_tree = default(object);
		object char_literal324_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "block");
		DebugLocation(364, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 86)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:364:6: ( ';' | '{' ( statement_list )? '}' )
			int alt99=2;
			try { DebugEnterDecision(99, false);
			int LA99_1 = input.LA(1);

			if ((LA99_1==SEMI))
			{
				alt99 = 1;
			}
			else if ((LA99_1==197))
			{
				alt99 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 99, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(99); }
			switch (alt99)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:365:2: ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(365, 2);
				char_literal321=(IToken)Match(input,SEMI,Follow._SEMI_in_block2597); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal321_tree = (object)adaptor.Create(char_literal321, retval);
				adaptor.AddChild(root_0, char_literal321_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:366:4: '{' ( statement_list )? '}'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(366, 4);
				char_literal322=(IToken)Match(input,197,Follow._197_in_block2602); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal322_tree = (object)adaptor.Create(char_literal322, retval);
				adaptor.AddChild(root_0, char_literal322_tree);
				}
				DebugLocation(366, 10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:366:10: ( statement_list )?
				int alt98=2;
				try { DebugEnterSubRule(98);
				try { DebugEnterDecision(98, false);
				int LA98_1 = input.LA(1);

				if ((LA98_1==Character_literal||LA98_1==FALSE||(LA98_1>=Hex_number && LA98_1<=IF)||(LA98_1>=MINUS && LA98_1<=NUMBER)||LA98_1==Real_literal||(LA98_1>=SEMI && LA98_1<=STRINGLITERAL)||LA98_1==TRUE||(LA98_1>=USING && LA98_1<=Verbatim_string_literal)||LA98_1==61||LA98_1==66||(LA98_1>=68 && LA98_1<=69)||(LA98_1>=71 && LA98_1<=72)||LA98_1==75||LA98_1==95||(LA98_1>=97 && LA98_1<=98)||(LA98_1>=100 && LA98_1<=106)||(LA98_1>=109 && LA98_1<=110)||(LA98_1>=112 && LA98_1<=120)||LA98_1==122||LA98_1==126||(LA98_1>=128 && LA98_1<=132)||(LA98_1>=134 && LA98_1<=135)||LA98_1==138||LA98_1==141||(LA98_1>=143 && LA98_1<=148)||(LA98_1>=150 && LA98_1<=152)||LA98_1==154||LA98_1==157||LA98_1==160||LA98_1==162||(LA98_1>=167 && LA98_1<=169)||(LA98_1>=171 && LA98_1<=174)||LA98_1==177||(LA98_1>=179 && LA98_1<=190)||LA98_1==192||(LA98_1>=194 && LA98_1<=197)||LA98_1==202))
				{
					alt98 = 1;
				}
				} finally { DebugExitDecision(98); }
				switch (alt98)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:366:10: statement_list
					{
					DebugLocation(366, 10);
					PushFollow(Follow._statement_list_in_block2606);
					statement_list323=statement_list();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, statement_list323.Tree, statement_list323, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(98); }

				DebugLocation(366, 28);
				char_literal324=(IToken)Match(input,201,Follow._201_in_block2611); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal324_tree = (object)adaptor.Create(char_literal324, retval);
				adaptor.AddChild(root_0, char_literal324_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("block", 86);
			LeaveRule("block", 86);
			LeaveRule_block();
			if (state.backtracking > 0) { Memoize(input, 86, block_StartIndex); }

		}
		DebugLocation(366, 30);
		} finally { DebugExitRule(GrammarFileName, "block"); }
		return retval;

	}
	// $ANTLR end "block"

	partial void EnterRule_statement_list();
	partial void LeaveRule_statement_list();
	// $ANTLR start "statement_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:367:1: statement_list : ( statement )+ ;
	[GrammarRule("statement_list")]
	private Antlr3AstNode statement_list()
	{
		EnterRule_statement_list();
		EnterRule("statement_list", 87);
		var retval = new Antlr3AstNode("statement_list");
		
		retval.Start = (IToken)input.LT(1);
		int statement_list_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode statement325 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "statement_list");
		DebugLocation(367, 12);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 87)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:367:15: ( ( statement )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:368:2: ( statement )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(368, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:368:2: ( statement )+
			int cnt100=0;
			try { DebugEnterSubRule(100);
			while (true)
			{
				int alt100=2;
				try { DebugEnterDecision(100, false);
				int LA100_1 = input.LA(1);

				if ((LA100_1==115))
				{
					int LA100_2 = input.LA(2);

					if ((LA100_2==68))
					{
						alt100 = 1;
					}


				}
				else if ((LA100_1==Character_literal||LA100_1==FALSE||(LA100_1>=Hex_number && LA100_1<=IF)||(LA100_1>=MINUS && LA100_1<=NUMBER)||LA100_1==Real_literal||(LA100_1>=SEMI && LA100_1<=STRINGLITERAL)||LA100_1==TRUE||(LA100_1>=USING && LA100_1<=Verbatim_string_literal)||LA100_1==61||LA100_1==66||(LA100_1>=68 && LA100_1<=69)||(LA100_1>=71 && LA100_1<=72)||LA100_1==75||LA100_1==95||(LA100_1>=97 && LA100_1<=98)||(LA100_1>=100 && LA100_1<=106)||(LA100_1>=109 && LA100_1<=110)||(LA100_1>=112 && LA100_1<=114)||(LA100_1>=116 && LA100_1<=120)||LA100_1==122||LA100_1==126||(LA100_1>=128 && LA100_1<=132)||(LA100_1>=134 && LA100_1<=135)||LA100_1==138||LA100_1==141||(LA100_1>=143 && LA100_1<=148)||(LA100_1>=150 && LA100_1<=152)||LA100_1==154||LA100_1==157||LA100_1==160||LA100_1==162||(LA100_1>=167 && LA100_1<=169)||(LA100_1>=171 && LA100_1<=174)||LA100_1==177||(LA100_1>=179 && LA100_1<=190)||LA100_1==192||(LA100_1>=194 && LA100_1<=197)||LA100_1==202))
				{
					alt100 = 1;
				}


				} finally { DebugExitDecision(100); }
				switch (alt100)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:368:2: statement
					{
					DebugLocation(368, 2);
					PushFollow(Follow._statement_in_statement_list2618);
					statement325=statement();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, statement325.Tree, statement325, retval);

					}
					break;

				default:
					if (cnt100 >= 1)
						goto loop100;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee100 = new EarlyExitException( 100, input );
					DebugRecognitionException(eee100);
					throw eee100;
				}
				cnt100++;
			}
			loop100:
				;

			} finally { DebugExitSubRule(100); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("statement_list", 87);
			LeaveRule("statement_list", 87);
			LeaveRule_statement_list();
			if (state.backtracking > 0) { Memoize(input, 87, statement_list_StartIndex); }

		}
		DebugLocation(368, 12);
		} finally { DebugExitRule(GrammarFileName, "statement_list"); }
		return retval;

	}
	// $ANTLR end "statement_list"

	partial void EnterRule_expression();
	partial void LeaveRule_expression();
	// $ANTLR start "expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:373:1: expression : ( ( unary_expression assignment_operator )=> assignment | non_assignment_expression );
	[GrammarRule("expression")]
	private Antlr3AstNode expression()
	{
		EnterRule_expression();
		EnterRule("expression", 88);
		var retval = new Antlr3AstNode("expression");
		
		retval.Start = (IToken)input.LT(1);
		int expression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode assignment326 = default(Antlr3AstNode);
		Antlr3AstNode non_assignment_expression327 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "expression");
		DebugLocation(373, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 88)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:373:11: ( ( unary_expression assignment_operator )=> assignment | non_assignment_expression )
			int alt101=2;
			try { DebugEnterDecision(101, false);
			switch (input.LA(1))
			{
			case 68:
				{
				int LA101_2 = input.LA(2);

				if ((EvaluatePredicate(synpred19_cs_fragment)))
				{
					alt101 = 1;
				}
				else if ((true))
				{
					alt101 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 150:
				{
				int LA101_2 = input.LA(2);

				if ((EvaluatePredicate(synpred19_cs_fragment)))
				{
					alt101 = 1;
				}
				else if ((true))
				{
					alt101 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 180:
				{
				int LA101_2 = input.LA(2);

				if ((EvaluatePredicate(synpred19_cs_fragment)))
				{
					alt101 = 1;
				}
				else if ((true))
				{
					alt101 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 103:
			case 106:
			case 109:
			case 114:
			case 119:
			case 129:
			case 138:
			case 146:
			case 151:
			case 169:
			case 173:
			case 177:
			case 185:
			case 186:
			case 189:
				{
				int LA101_2 = input.LA(2);

				if ((EvaluatePredicate(synpred19_cs_fragment)))
				{
					alt101 = 1;
				}
				else if ((true))
				{
					alt101 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 132:
				{
				int LA101_2 = input.LA(2);

				if ((EvaluatePredicate(synpred19_cs_fragment)))
				{
					alt101 = 1;
				}
				else if ((true))
				{
					alt101 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 102:
				{
				int LA101_2 = input.LA(2);

				if ((EvaluatePredicate(synpred19_cs_fragment)))
				{
					alt101 = 1;
				}
				else if ((true))
				{
					alt101 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 184:
				{
				int LA101_2 = input.LA(2);

				if ((EvaluatePredicate(synpred19_cs_fragment)))
				{
					alt101 = 1;
				}
				else if ((true))
				{
					alt101 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 7, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
				{
				int LA101_2 = input.LA(2);

				if ((EvaluatePredicate(synpred19_cs_fragment)))
				{
					alt101 = 1;
				}
				else if ((true))
				{
					alt101 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 8, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 174:
				{
				int LA101_2 = input.LA(2);

				if ((EvaluatePredicate(synpred19_cs_fragment)))
				{
					alt101 = 1;
				}
				else if ((true))
				{
					alt101 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 9, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 110:
				{
				int LA101_2 = input.LA(2);

				if ((EvaluatePredicate(synpred19_cs_fragment)))
				{
					alt101 = 1;
				}
				else if ((true))
				{
					alt101 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 10, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 187:
				{
				int LA101_2 = input.LA(2);

				if ((EvaluatePredicate(synpred19_cs_fragment)))
				{
					alt101 = 1;
				}
				else if ((true))
				{
					alt101 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 115:
				{
				int LA101_2 = input.LA(2);

				if ((EvaluatePredicate(synpred19_cs_fragment)))
				{
					alt101 = 1;
				}
				else if ((true))
				{
					alt101 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 12, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 116:
				{
				int LA101_2 = input.LA(2);

				if ((EvaluatePredicate(synpred19_cs_fragment)))
				{
					alt101 = 1;
				}
				else if ((true))
				{
					alt101 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 13, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 71:
				{
				int LA101_2 = input.LA(2);

				if ((EvaluatePredicate(synpred19_cs_fragment)))
				{
					alt101 = 1;
				}
				else if ((true))
				{
					alt101 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 14, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case MINUS:
				{
				int LA101_2 = input.LA(2);

				if ((EvaluatePredicate(synpred19_cs_fragment)))
				{
					alt101 = 1;
				}
				else if ((true))
				{
					alt101 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 15, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 61:
				{
				int LA101_2 = input.LA(2);

				if ((EvaluatePredicate(synpred19_cs_fragment)))
				{
					alt101 = 1;
				}
				else if ((true))
				{
					alt101 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 16, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 202:
				{
				int LA101_2 = input.LA(2);

				if ((EvaluatePredicate(synpred19_cs_fragment)))
				{
					alt101 = 1;
				}
				else if ((true))
				{
					alt101 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 17, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 72:
				{
				int LA101_2 = input.LA(2);

				if ((EvaluatePredicate(synpred19_cs_fragment)))
				{
					alt101 = 1;
				}
				else if ((true))
				{
					alt101 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 18, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 75:
				{
				int LA101_2 = input.LA(2);

				if ((EvaluatePredicate(synpred19_cs_fragment)))
				{
					alt101 = 1;
				}
				else if ((true))
				{
					alt101 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 19, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 69:
				{
				int LA101_2 = input.LA(2);

				if ((EvaluatePredicate(synpred19_cs_fragment)))
				{
					alt101 = 1;
				}
				else if ((true))
				{
					alt101 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 20, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 66:
				{
				int LA101_2 = input.LA(2);

				if ((EvaluatePredicate(synpred19_cs_fragment)))
				{
					alt101 = 1;
				}
				else if ((true))
				{
					alt101 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 21, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA101_2 = input.LA(2);

				if ((EvaluatePredicate(synpred19_cs_fragment)))
				{
					alt101 = 1;
				}
				else if ((true))
				{
					alt101 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 22, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 101, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(101); }
			switch (alt101)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:374:2: ( unary_expression assignment_operator )=> assignment
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(374, 46);
				PushFollow(Follow._assignment_in_expression2643);
				assignment326=assignment();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, assignment326.Tree, assignment326, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:375:4: non_assignment_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(375, 4);
				PushFollow(Follow._non_assignment_expression_in_expression2649);
				non_assignment_expression327=non_assignment_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, non_assignment_expression327.Tree, non_assignment_expression327, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("expression", 88);
			LeaveRule("expression", 88);
			LeaveRule_expression();
			if (state.backtracking > 0) { Memoize(input, 88, expression_StartIndex); }

		}
		DebugLocation(376, 1);
		} finally { DebugExitRule(GrammarFileName, "expression"); }
		return retval;

	}
	// $ANTLR end "expression"

	partial void EnterRule_expression_list();
	partial void LeaveRule_expression_list();
	// $ANTLR start "expression_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:377:1: expression_list : expression ( ',' expression )* ;
	[GrammarRule("expression_list")]
	private Antlr3AstNode expression_list()
	{
		EnterRule_expression_list();
		EnterRule("expression_list", 89);
		var retval = new Antlr3AstNode("expression_list");
		
		retval.Start = (IToken)input.LT(1);
		int expression_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal329 = default(IToken);
		Antlr3AstNode expression328 = default(Antlr3AstNode);
		Antlr3AstNode expression330 = default(Antlr3AstNode);

		object char_literal329_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "expression_list");
		DebugLocation(377, 33);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 89)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:377:16: ( expression ( ',' expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:378:2: expression ( ',' expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(378, 2);
			PushFollow(Follow._expression_in_expression_list2658);
			expression328=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression328.Tree, expression328, retval);
			DebugLocation(378, 14);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:378:14: ( ',' expression )*
			try { DebugEnterSubRule(102);
			while (true)
			{
				int alt102=2;
				try { DebugEnterDecision(102, false);
				int LA102_1 = input.LA(1);

				if ((LA102_1==74))
				{
					alt102 = 1;
				}


				} finally { DebugExitDecision(102); }
				switch ( alt102 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:378:15: ',' expression
					{
					DebugLocation(378, 15);
					char_literal329=(IToken)Match(input,74,Follow._74_in_expression_list2662); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal329_tree = (object)adaptor.Create(char_literal329, retval);
					adaptor.AddChild(root_0, char_literal329_tree);
					}
					DebugLocation(378, 21);
					PushFollow(Follow._expression_in_expression_list2666);
					expression330=expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, expression330.Tree, expression330, retval);

					}
					break;

				default:
					goto loop102;
				}
			}

			loop102:
				;

			} finally { DebugExitSubRule(102); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("expression_list", 89);
			LeaveRule("expression_list", 89);
			LeaveRule_expression_list();
			if (state.backtracking > 0) { Memoize(input, 89, expression_list_StartIndex); }

		}
		DebugLocation(378, 33);
		} finally { DebugExitRule(GrammarFileName, "expression_list"); }
		return retval;

	}
	// $ANTLR end "expression_list"

	partial void EnterRule_assignment();
	partial void LeaveRule_assignment();
	// $ANTLR start "assignment"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:379:1: assignment : unary_expression assignment_operator expression ;
	[GrammarRule("assignment")]
	private Antlr3AstNode assignment()
	{
		EnterRule_assignment();
		EnterRule("assignment", 90);
		var retval = new Antlr3AstNode("assignment");
		
		retval.Start = (IToken)input.LT(1);
		int assignment_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode unary_expression331 = default(Antlr3AstNode);
		Antlr3AstNode assignment_operator332 = default(Antlr3AstNode);
		Antlr3AstNode expression333 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "assignment");
		DebugLocation(379, 53);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 90)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:379:11: ( unary_expression assignment_operator expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:380:2: unary_expression assignment_operator expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(380, 2);
			PushFollow(Follow._unary_expression_in_assignment2676);
			unary_expression331=unary_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression331.Tree, unary_expression331, retval);
			DebugLocation(380, 21);
			PushFollow(Follow._assignment_operator_in_assignment2680);
			assignment_operator332=assignment_operator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, assignment_operator332.Tree, assignment_operator332, retval);
			DebugLocation(380, 43);
			PushFollow(Follow._expression_in_assignment2684);
			expression333=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression333.Tree, expression333, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("assignment", 90);
			LeaveRule("assignment", 90);
			LeaveRule_assignment();
			if (state.backtracking > 0) { Memoize(input, 90, assignment_StartIndex); }

		}
		DebugLocation(380, 53);
		} finally { DebugExitRule(GrammarFileName, "assignment"); }
		return retval;

	}
	// $ANTLR end "assignment"

	partial void EnterRule_unary_expression();
	partial void LeaveRule_unary_expression();
	// $ANTLR start "unary_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:381:1: unary_expression : ( ( cast_expression )=> cast_expression | primary_or_array_creation_expression ( '++' )? ( '--' )? | '+' unary_expression | '-' unary_expression | '!' unary_expression | '~' unary_expression | pre_increment_expression | pre_decrement_expression | pointer_indirection_expression | addressof_expression );
	[GrammarRule("unary_expression")]
	private Antlr3AstNode unary_expression()
	{
		EnterRule_unary_expression();
		EnterRule("unary_expression", 91);
		var retval = new Antlr3AstNode("unary_expression");
		
		retval.Start = (IToken)input.LT(1);
		int unary_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal336 = default(IToken);
		IToken string_literal337 = default(IToken);
		IToken char_literal338 = default(IToken);
		IToken char_literal340 = default(IToken);
		IToken char_literal342 = default(IToken);
		IToken char_literal344 = default(IToken);
		Antlr3AstNode cast_expression334 = default(Antlr3AstNode);
		Antlr3AstNode primary_or_array_creation_expression335 = default(Antlr3AstNode);
		Antlr3AstNode unary_expression339 = default(Antlr3AstNode);
		Antlr3AstNode unary_expression341 = default(Antlr3AstNode);
		Antlr3AstNode unary_expression343 = default(Antlr3AstNode);
		Antlr3AstNode unary_expression345 = default(Antlr3AstNode);
		Antlr3AstNode pre_increment_expression346 = default(Antlr3AstNode);
		Antlr3AstNode pre_decrement_expression347 = default(Antlr3AstNode);
		Antlr3AstNode pointer_indirection_expression348 = default(Antlr3AstNode);
		Antlr3AstNode addressof_expression349 = default(Antlr3AstNode);

		object string_literal336_tree = default(object);
		object string_literal337_tree = default(object);
		object char_literal338_tree = default(object);
		object char_literal340_tree = default(object);
		object char_literal342_tree = default(object);
		object char_literal344_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "unary_expression");
		DebugLocation(381, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 91)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:381:17: ( ( cast_expression )=> cast_expression | primary_or_array_creation_expression ( '++' )? ( '--' )? | '+' unary_expression | '-' unary_expression | '!' unary_expression | '~' unary_expression | pre_increment_expression | pre_decrement_expression | pointer_indirection_expression | addressof_expression )
			int alt105=10;
			try { DebugEnterDecision(105, false);
			switch (input.LA(1))
			{
			case 68:
				{
				int LA105_2 = input.LA(2);

				if ((EvaluatePredicate(synpred20_cs_fragment)))
				{
					alt105 = 1;
				}
				else if ((true))
				{
					alt105 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 105, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case IDENTIFIER:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 102:
			case 103:
			case 105:
			case 106:
			case 109:
			case 110:
			case 114:
			case 115:
			case 116:
			case 117:
			case 119:
			case 120:
			case 122:
			case 126:
			case 129:
			case 132:
			case 135:
			case 138:
			case 141:
			case 143:
			case 144:
			case 146:
			case 147:
			case 148:
			case 150:
			case 151:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 169:
			case 171:
			case 172:
			case 173:
			case 174:
			case 177:
			case 180:
			case 183:
			case 184:
			case 185:
			case 186:
			case 187:
			case 189:
			case 190:
			case 194:
			case 196:
				{
				alt105 = 2;
				}
				break;
			case 71:
				{
				alt105 = 3;
				}
				break;
			case MINUS:
				{
				alt105 = 4;
				}
				break;
			case 61:
				{
				alt105 = 5;
				}
				break;
			case 202:
				{
				alt105 = 6;
				}
				break;
			case 72:
				{
				alt105 = 7;
				}
				break;
			case 75:
				{
				alt105 = 8;
				}
				break;
			case 69:
				{
				alt105 = 9;
				}
				break;
			case 66:
				{
				alt105 = 10;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 105, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(105); }
			switch (alt105)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:383:2: ( cast_expression )=> cast_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(383, 23);
				PushFollow(Follow._cast_expression_in_unary_expression2701);
				cast_expression334=cast_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, cast_expression334.Tree, cast_expression334, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:384:4: primary_or_array_creation_expression ( '++' )? ( '--' )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(384, 4);
				PushFollow(Follow._primary_or_array_creation_expression_in_unary_expression2706);
				primary_or_array_creation_expression335=primary_or_array_creation_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primary_or_array_creation_expression335.Tree, primary_or_array_creation_expression335, retval);
				DebugLocation(384, 43);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:384:43: ( '++' )?
				int alt103=2;
				try { DebugEnterSubRule(103);
				try { DebugEnterDecision(103, false);
				int LA103_1 = input.LA(1);

				if ((LA103_1==72))
				{
					alt103 = 1;
				}
				} finally { DebugExitDecision(103); }
				switch (alt103)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:384:43: '++'
					{
					DebugLocation(384, 43);
					string_literal336=(IToken)Match(input,72,Follow._72_in_unary_expression2710); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal336_tree = (object)adaptor.Create(string_literal336, retval);
					adaptor.AddChild(root_0, string_literal336_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(103); }

				DebugLocation(384, 51);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:384:51: ( '--' )?
				int alt104=2;
				try { DebugEnterSubRule(104);
				try { DebugEnterDecision(104, false);
				int LA104_1 = input.LA(1);

				if ((LA104_1==75))
				{
					alt104 = 1;
				}
				} finally { DebugExitDecision(104); }
				switch (alt104)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:384:51: '--'
					{
					DebugLocation(384, 51);
					string_literal337=(IToken)Match(input,75,Follow._75_in_unary_expression2715); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal337_tree = (object)adaptor.Create(string_literal337, retval);
					adaptor.AddChild(root_0, string_literal337_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(104); }


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:385:4: '+' unary_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(385, 4);
				char_literal338=(IToken)Match(input,71,Follow._71_in_unary_expression2721); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal338_tree = (object)adaptor.Create(char_literal338, retval);
				adaptor.AddChild(root_0, char_literal338_tree);
				}
				DebugLocation(385, 10);
				PushFollow(Follow._unary_expression_in_unary_expression2725);
				unary_expression339=unary_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression339.Tree, unary_expression339, retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:386:4: '-' unary_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(386, 4);
				char_literal340=(IToken)Match(input,MINUS,Follow._MINUS_in_unary_expression2731); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal340_tree = (object)adaptor.Create(char_literal340, retval);
				adaptor.AddChild(root_0, char_literal340_tree);
				}
				DebugLocation(386, 10);
				PushFollow(Follow._unary_expression_in_unary_expression2735);
				unary_expression341=unary_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression341.Tree, unary_expression341, retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:387:4: '!' unary_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(387, 4);
				char_literal342=(IToken)Match(input,61,Follow._61_in_unary_expression2741); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal342_tree = (object)adaptor.Create(char_literal342, retval);
				adaptor.AddChild(root_0, char_literal342_tree);
				}
				DebugLocation(387, 10);
				PushFollow(Follow._unary_expression_in_unary_expression2745);
				unary_expression343=unary_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression343.Tree, unary_expression343, retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:388:4: '~' unary_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(388, 4);
				char_literal344=(IToken)Match(input,202,Follow._202_in_unary_expression2751); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal344_tree = (object)adaptor.Create(char_literal344, retval);
				adaptor.AddChild(root_0, char_literal344_tree);
				}
				DebugLocation(388, 10);
				PushFollow(Follow._unary_expression_in_unary_expression2755);
				unary_expression345=unary_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression345.Tree, unary_expression345, retval);

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:389:4: pre_increment_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(389, 4);
				PushFollow(Follow._pre_increment_expression_in_unary_expression2761);
				pre_increment_expression346=pre_increment_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, pre_increment_expression346.Tree, pre_increment_expression346, retval);

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:390:4: pre_decrement_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(390, 4);
				PushFollow(Follow._pre_decrement_expression_in_unary_expression2767);
				pre_decrement_expression347=pre_decrement_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, pre_decrement_expression347.Tree, pre_decrement_expression347, retval);

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:391:4: pointer_indirection_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(391, 4);
				PushFollow(Follow._pointer_indirection_expression_in_unary_expression2773);
				pointer_indirection_expression348=pointer_indirection_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, pointer_indirection_expression348.Tree, pointer_indirection_expression348, retval);

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:392:4: addressof_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(392, 4);
				PushFollow(Follow._addressof_expression_in_unary_expression2778);
				addressof_expression349=addressof_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, addressof_expression349.Tree, addressof_expression349, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unary_expression", 91);
			LeaveRule("unary_expression", 91);
			LeaveRule_unary_expression();
			if (state.backtracking > 0) { Memoize(input, 91, unary_expression_StartIndex); }

		}
		DebugLocation(393, 1);
		} finally { DebugExitRule(GrammarFileName, "unary_expression"); }
		return retval;

	}
	// $ANTLR end "unary_expression"

	partial void EnterRule_cast_expression();
	partial void LeaveRule_cast_expression();
	// $ANTLR start "cast_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:394:1: cast_expression : '(' type ')' unary_expression ;
	[GrammarRule("cast_expression")]
	private Antlr3AstNode cast_expression()
	{
		EnterRule_cast_expression();
		EnterRule("cast_expression", 92);
		var retval = new Antlr3AstNode("cast_expression");
		
		retval.Start = (IToken)input.LT(1);
		int cast_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal350 = default(IToken);
		IToken char_literal352 = default(IToken);
		Antlr3AstNode type351 = default(Antlr3AstNode);
		Antlr3AstNode unary_expression353 = default(Antlr3AstNode);

		object char_literal350_tree = default(object);
		object char_literal352_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "cast_expression");
		DebugLocation(394, 37);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 92)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:394:16: ( '(' type ')' unary_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:395:2: '(' type ')' unary_expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(395, 2);
			char_literal350=(IToken)Match(input,68,Follow._68_in_cast_expression2788); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal350_tree = (object)adaptor.Create(char_literal350, retval);
			adaptor.AddChild(root_0, char_literal350_tree);
			}
			DebugLocation(395, 8);
			PushFollow(Follow._type_in_cast_expression2792);
			type351=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type351.Tree, type351, retval);
			DebugLocation(395, 15);
			char_literal352=(IToken)Match(input,RPAREN,Follow._RPAREN_in_cast_expression2796); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal352_tree = (object)adaptor.Create(char_literal352, retval);
			adaptor.AddChild(root_0, char_literal352_tree);
			}
			DebugLocation(395, 21);
			PushFollow(Follow._unary_expression_in_cast_expression2800);
			unary_expression353=unary_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression353.Tree, unary_expression353, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("cast_expression", 92);
			LeaveRule("cast_expression", 92);
			LeaveRule_cast_expression();
			if (state.backtracking > 0) { Memoize(input, 92, cast_expression_StartIndex); }

		}
		DebugLocation(395, 37);
		} finally { DebugExitRule(GrammarFileName, "cast_expression"); }
		return retval;

	}
	// $ANTLR end "cast_expression"

	partial void EnterRule_assignment_operator();
	partial void LeaveRule_assignment_operator();
	// $ANTLR start "assignment_operator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:396:1: assignment_operator : ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '&=' | '|=' | '^=' | '<<=' | '>' '>=' );
	[GrammarRule("assignment_operator")]
	private Antlr3AstNode assignment_operator()
	{
		EnterRule_assignment_operator();
		EnterRule("assignment_operator", 93);
		var retval = new Antlr3AstNode("assignment_operator");
		
		retval.Start = (IToken)input.LT(1);
		int assignment_operator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal354 = default(IToken);
		IToken string_literal355 = default(IToken);
		IToken string_literal356 = default(IToken);
		IToken string_literal357 = default(IToken);
		IToken string_literal358 = default(IToken);
		IToken string_literal359 = default(IToken);
		IToken string_literal360 = default(IToken);
		IToken string_literal361 = default(IToken);
		IToken string_literal362 = default(IToken);
		IToken string_literal363 = default(IToken);
		IToken char_literal364 = default(IToken);
		IToken string_literal365 = default(IToken);

		object char_literal354_tree = default(object);
		object string_literal355_tree = default(object);
		object string_literal356_tree = default(object);
		object string_literal357_tree = default(object);
		object string_literal358_tree = default(object);
		object string_literal359_tree = default(object);
		object string_literal360_tree = default(object);
		object string_literal361_tree = default(object);
		object string_literal362_tree = default(object);
		object string_literal363_tree = default(object);
		object char_literal364_tree = default(object);
		object string_literal365_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "assignment_operator");
		DebugLocation(396, 80);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 93)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:396:20: ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '&=' | '|=' | '^=' | '<<=' | '>' '>=' )
			int alt106=11;
			try { DebugEnterDecision(106, false);
			switch (input.LA(1))
			{
			case 85:
				{
				alt106 = 1;
				}
				break;
			case 73:
				{
				alt106 = 2;
				}
				break;
			case 76:
				{
				alt106 = 3;
				}
				break;
			case 70:
				{
				alt106 = 4;
				}
				break;
			case 78:
				{
				alt106 = 5;
				}
				break;
			case 64:
				{
				alt106 = 6;
				}
				break;
			case 67:
				{
				alt106 = 7;
				}
				break;
			case 199:
				{
				alt106 = 8;
				}
				break;
			case 94:
				{
				alt106 = 9;
				}
				break;
			case 83:
				{
				alt106 = 10;
				}
				break;
			case GT:
				{
				alt106 = 11;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 106, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(106); }
			switch (alt106)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:397:2: '='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(397, 2);
				char_literal354=(IToken)Match(input,85,Follow._85_in_assignment_operator2808); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal354_tree = (object)adaptor.Create(char_literal354, retval);
				adaptor.AddChild(root_0, char_literal354_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:397:8: '+='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(397, 8);
				string_literal355=(IToken)Match(input,73,Follow._73_in_assignment_operator2812); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal355_tree = (object)adaptor.Create(string_literal355, retval);
				adaptor.AddChild(root_0, string_literal355_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:397:15: '-='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(397, 15);
				string_literal356=(IToken)Match(input,76,Follow._76_in_assignment_operator2816); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal356_tree = (object)adaptor.Create(string_literal356, retval);
				adaptor.AddChild(root_0, string_literal356_tree);
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:397:22: '*='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(397, 22);
				string_literal357=(IToken)Match(input,70,Follow._70_in_assignment_operator2820); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal357_tree = (object)adaptor.Create(string_literal357, retval);
				adaptor.AddChild(root_0, string_literal357_tree);
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:397:29: '/='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(397, 29);
				string_literal358=(IToken)Match(input,78,Follow._78_in_assignment_operator2824); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal358_tree = (object)adaptor.Create(string_literal358, retval);
				adaptor.AddChild(root_0, string_literal358_tree);
				}

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:397:36: '%='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(397, 36);
				string_literal359=(IToken)Match(input,64,Follow._64_in_assignment_operator2828); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal359_tree = (object)adaptor.Create(string_literal359, retval);
				adaptor.AddChild(root_0, string_literal359_tree);
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:397:43: '&='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(397, 43);
				string_literal360=(IToken)Match(input,67,Follow._67_in_assignment_operator2832); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal360_tree = (object)adaptor.Create(string_literal360, retval);
				adaptor.AddChild(root_0, string_literal360_tree);
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:397:50: '|='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(397, 50);
				string_literal361=(IToken)Match(input,199,Follow._199_in_assignment_operator2836); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal361_tree = (object)adaptor.Create(string_literal361, retval);
				adaptor.AddChild(root_0, string_literal361_tree);
				}

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:397:57: '^='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(397, 57);
				string_literal362=(IToken)Match(input,94,Follow._94_in_assignment_operator2840); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal362_tree = (object)adaptor.Create(string_literal362, retval);
				adaptor.AddChild(root_0, string_literal362_tree);
				}

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:397:64: '<<='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(397, 64);
				string_literal363=(IToken)Match(input,83,Follow._83_in_assignment_operator2844); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal363_tree = (object)adaptor.Create(string_literal363, retval);
				adaptor.AddChild(root_0, string_literal363_tree);
				}

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:397:72: '>' '>='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(397, 72);
				char_literal364=(IToken)Match(input,GT,Follow._GT_in_assignment_operator2848); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal364_tree = (object)adaptor.Create(char_literal364, retval);
				adaptor.AddChild(root_0, char_literal364_tree);
				}
				DebugLocation(397, 76);
				string_literal365=(IToken)Match(input,88,Follow._88_in_assignment_operator2850); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal365_tree = (object)adaptor.Create(string_literal365, retval);
				adaptor.AddChild(root_0, string_literal365_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("assignment_operator", 93);
			LeaveRule("assignment_operator", 93);
			LeaveRule_assignment_operator();
			if (state.backtracking > 0) { Memoize(input, 93, assignment_operator_StartIndex); }

		}
		DebugLocation(397, 80);
		} finally { DebugExitRule(GrammarFileName, "assignment_operator"); }
		return retval;

	}
	// $ANTLR end "assignment_operator"

	partial void EnterRule_pre_increment_expression();
	partial void LeaveRule_pre_increment_expression();
	// $ANTLR start "pre_increment_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:398:1: pre_increment_expression : '++' unary_expression ;
	[GrammarRule("pre_increment_expression")]
	private Antlr3AstNode pre_increment_expression()
	{
		EnterRule_pre_increment_expression();
		EnterRule("pre_increment_expression", 94);
		var retval = new Antlr3AstNode("pre_increment_expression");
		
		retval.Start = (IToken)input.LT(1);
		int pre_increment_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal366 = default(IToken);
		Antlr3AstNode unary_expression367 = default(Antlr3AstNode);

		object string_literal366_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "pre_increment_expression");
		DebugLocation(398, 25);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 94)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:398:25: ( '++' unary_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:399:2: '++' unary_expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(399, 2);
			string_literal366=(IToken)Match(input,72,Follow._72_in_pre_increment_expression2859); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal366_tree = (object)adaptor.Create(string_literal366, retval);
			adaptor.AddChild(root_0, string_literal366_tree);
			}
			DebugLocation(399, 9);
			PushFollow(Follow._unary_expression_in_pre_increment_expression2863);
			unary_expression367=unary_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression367.Tree, unary_expression367, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("pre_increment_expression", 94);
			LeaveRule("pre_increment_expression", 94);
			LeaveRule_pre_increment_expression();
			if (state.backtracking > 0) { Memoize(input, 94, pre_increment_expression_StartIndex); }

		}
		DebugLocation(399, 25);
		} finally { DebugExitRule(GrammarFileName, "pre_increment_expression"); }
		return retval;

	}
	// $ANTLR end "pre_increment_expression"

	partial void EnterRule_pre_decrement_expression();
	partial void LeaveRule_pre_decrement_expression();
	// $ANTLR start "pre_decrement_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:400:1: pre_decrement_expression : '--' unary_expression ;
	[GrammarRule("pre_decrement_expression")]
	private Antlr3AstNode pre_decrement_expression()
	{
		EnterRule_pre_decrement_expression();
		EnterRule("pre_decrement_expression", 95);
		var retval = new Antlr3AstNode("pre_decrement_expression");
		
		retval.Start = (IToken)input.LT(1);
		int pre_decrement_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal368 = default(IToken);
		Antlr3AstNode unary_expression369 = default(Antlr3AstNode);

		object string_literal368_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "pre_decrement_expression");
		DebugLocation(400, 25);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 95)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:400:25: ( '--' unary_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:401:2: '--' unary_expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(401, 2);
			string_literal368=(IToken)Match(input,75,Follow._75_in_pre_decrement_expression2872); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal368_tree = (object)adaptor.Create(string_literal368, retval);
			adaptor.AddChild(root_0, string_literal368_tree);
			}
			DebugLocation(401, 9);
			PushFollow(Follow._unary_expression_in_pre_decrement_expression2876);
			unary_expression369=unary_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression369.Tree, unary_expression369, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("pre_decrement_expression", 95);
			LeaveRule("pre_decrement_expression", 95);
			LeaveRule_pre_decrement_expression();
			if (state.backtracking > 0) { Memoize(input, 95, pre_decrement_expression_StartIndex); }

		}
		DebugLocation(401, 25);
		} finally { DebugExitRule(GrammarFileName, "pre_decrement_expression"); }
		return retval;

	}
	// $ANTLR end "pre_decrement_expression"

	partial void EnterRule_pointer_indirection_expression();
	partial void LeaveRule_pointer_indirection_expression();
	// $ANTLR start "pointer_indirection_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:402:1: pointer_indirection_expression : '*' unary_expression ;
	[GrammarRule("pointer_indirection_expression")]
	private Antlr3AstNode pointer_indirection_expression()
	{
		EnterRule_pointer_indirection_expression();
		EnterRule("pointer_indirection_expression", 96);
		var retval = new Antlr3AstNode("pointer_indirection_expression");
		
		retval.Start = (IToken)input.LT(1);
		int pointer_indirection_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal370 = default(IToken);
		Antlr3AstNode unary_expression371 = default(Antlr3AstNode);

		object char_literal370_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "pointer_indirection_expression");
		DebugLocation(402, 24);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 96)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:402:31: ( '*' unary_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:403:2: '*' unary_expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(403, 2);
			char_literal370=(IToken)Match(input,69,Follow._69_in_pointer_indirection_expression2884); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal370_tree = (object)adaptor.Create(char_literal370, retval);
			adaptor.AddChild(root_0, char_literal370_tree);
			}
			DebugLocation(403, 8);
			PushFollow(Follow._unary_expression_in_pointer_indirection_expression2888);
			unary_expression371=unary_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression371.Tree, unary_expression371, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("pointer_indirection_expression", 96);
			LeaveRule("pointer_indirection_expression", 96);
			LeaveRule_pointer_indirection_expression();
			if (state.backtracking > 0) { Memoize(input, 96, pointer_indirection_expression_StartIndex); }

		}
		DebugLocation(403, 24);
		} finally { DebugExitRule(GrammarFileName, "pointer_indirection_expression"); }
		return retval;

	}
	// $ANTLR end "pointer_indirection_expression"

	partial void EnterRule_addressof_expression();
	partial void LeaveRule_addressof_expression();
	// $ANTLR start "addressof_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:404:1: addressof_expression : '&' unary_expression ;
	[GrammarRule("addressof_expression")]
	private Antlr3AstNode addressof_expression()
	{
		EnterRule_addressof_expression();
		EnterRule("addressof_expression", 97);
		var retval = new Antlr3AstNode("addressof_expression");
		
		retval.Start = (IToken)input.LT(1);
		int addressof_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal372 = default(IToken);
		Antlr3AstNode unary_expression373 = default(Antlr3AstNode);

		object char_literal372_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "addressof_expression");
		DebugLocation(404, 24);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 97)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:404:21: ( '&' unary_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:405:2: '&' unary_expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(405, 2);
			char_literal372=(IToken)Match(input,66,Follow._66_in_addressof_expression2896); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal372_tree = (object)adaptor.Create(char_literal372, retval);
			adaptor.AddChild(root_0, char_literal372_tree);
			}
			DebugLocation(405, 8);
			PushFollow(Follow._unary_expression_in_addressof_expression2900);
			unary_expression373=unary_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression373.Tree, unary_expression373, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("addressof_expression", 97);
			LeaveRule("addressof_expression", 97);
			LeaveRule_addressof_expression();
			if (state.backtracking > 0) { Memoize(input, 97, addressof_expression_StartIndex); }

		}
		DebugLocation(405, 24);
		} finally { DebugExitRule(GrammarFileName, "addressof_expression"); }
		return retval;

	}
	// $ANTLR end "addressof_expression"

	partial void EnterRule_non_assignment_expression();
	partial void LeaveRule_non_assignment_expression();
	// $ANTLR start "non_assignment_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:407:1: non_assignment_expression : ( ( anonymous_function_signature '=>' )=> lambda_expression | ( query_expression )=> query_expression | conditional_expression );
	[GrammarRule("non_assignment_expression")]
	private Antlr3AstNode non_assignment_expression()
	{
		EnterRule_non_assignment_expression();
		EnterRule("non_assignment_expression", 98);
		var retval = new Antlr3AstNode("non_assignment_expression");
		
		retval.Start = (IToken)input.LT(1);
		int non_assignment_expression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode lambda_expression374 = default(Antlr3AstNode);
		Antlr3AstNode query_expression375 = default(Antlr3AstNode);
		Antlr3AstNode conditional_expression376 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "non_assignment_expression");
		DebugLocation(407, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 98)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:407:26: ( ( anonymous_function_signature '=>' )=> lambda_expression | ( query_expression )=> query_expression | conditional_expression )
			int alt107=3;
			try { DebugEnterDecision(107, false);
			switch (input.LA(1))
			{
			case 68:
				{
				int LA107_2 = input.LA(2);

				if ((EvaluatePredicate(synpred21_cs_fragment)))
				{
					alt107 = 1;
				}
				else if ((true))
				{
					alt107 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 107, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 132:
				{
				int LA107_2 = input.LA(2);

				if ((EvaluatePredicate(synpred21_cs_fragment)))
				{
					alt107 = 1;
				}
				else if ((EvaluatePredicate(synpred22_cs_fragment)))
				{
					alt107 = 2;
				}
				else if ((true))
				{
					alt107 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 107, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA107_2 = input.LA(2);

				if ((EvaluatePredicate(synpred21_cs_fragment)))
				{
					alt107 = 1;
				}
				else if ((true))
				{
					alt107 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 107, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case MINUS:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 61:
			case 66:
			case 69:
			case 71:
			case 72:
			case 75:
			case 102:
			case 103:
			case 106:
			case 109:
			case 110:
			case 114:
			case 115:
			case 116:
			case 119:
			case 129:
			case 138:
			case 146:
			case 150:
			case 151:
			case 169:
			case 173:
			case 174:
			case 177:
			case 180:
			case 184:
			case 185:
			case 186:
			case 187:
			case 189:
			case 202:
				{
				alt107 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 107, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(107); }
			switch (alt107)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:409:2: ( anonymous_function_signature '=>' )=> lambda_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(409, 43);
				PushFollow(Follow._lambda_expression_in_non_assignment_expression2921);
				lambda_expression374=lambda_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, lambda_expression374.Tree, lambda_expression374, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:410:4: ( query_expression )=> query_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(410, 26);
				PushFollow(Follow._query_expression_in_non_assignment_expression2932);
				query_expression375=query_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, query_expression375.Tree, query_expression375, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:411:4: conditional_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(411, 4);
				PushFollow(Follow._conditional_expression_in_non_assignment_expression2938);
				conditional_expression376=conditional_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, conditional_expression376.Tree, conditional_expression376, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("non_assignment_expression", 98);
			LeaveRule("non_assignment_expression", 98);
			LeaveRule_non_assignment_expression();
			if (state.backtracking > 0) { Memoize(input, 98, non_assignment_expression_StartIndex); }

		}
		DebugLocation(412, 1);
		} finally { DebugExitRule(GrammarFileName, "non_assignment_expression"); }
		return retval;

	}
	// $ANTLR end "non_assignment_expression"

	partial void EnterRule_multiplicative_expression();
	partial void LeaveRule_multiplicative_expression();
	// $ANTLR start "multiplicative_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:418:1: multiplicative_expression : unary_expression ( ( '*' | '/' | '%' ) unary_expression )* ;
	[GrammarRule("multiplicative_expression")]
	private Antlr3AstNode multiplicative_expression()
	{
		EnterRule_multiplicative_expression();
		EnterRule("multiplicative_expression", 99);
		var retval = new Antlr3AstNode("multiplicative_expression");
		
		retval.Start = (IToken)input.LT(1);
		int multiplicative_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set378 = default(IToken);
		Antlr3AstNode unary_expression377 = default(Antlr3AstNode);
		Antlr3AstNode unary_expression379 = default(Antlr3AstNode);

		object set378_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "multiplicative_expression");
		DebugLocation(418, 56);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 99)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:418:26: ( unary_expression ( ( '*' | '/' | '%' ) unary_expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:419:2: unary_expression ( ( '*' | '/' | '%' ) unary_expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(419, 2);
			PushFollow(Follow._unary_expression_in_multiplicative_expression2952);
			unary_expression377=unary_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression377.Tree, unary_expression377, retval);
			DebugLocation(419, 19);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:419:19: ( ( '*' | '/' | '%' ) unary_expression )*
			try { DebugEnterSubRule(108);
			while (true)
			{
				int alt108=2;
				try { DebugEnterDecision(108, false);
				int LA108_1 = input.LA(1);

				if ((LA108_1==63||LA108_1==69||LA108_1==77))
				{
					alt108 = 1;
				}


				} finally { DebugExitDecision(108); }
				switch ( alt108 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:419:22: ( '*' | '/' | '%' ) unary_expression
					{
					DebugLocation(419, 22);

					set378=(IToken)input.LT(1);
					if (input.LA(1)==63||input.LA(1)==69||input.LA(1)==77)
					{
						input.Consume();
						if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set378, retval));
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}

					DebugLocation(419, 38);
					PushFollow(Follow._unary_expression_in_multiplicative_expression2967);
					unary_expression379=unary_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression379.Tree, unary_expression379, retval);

					}
					break;

				default:
					goto loop108;
				}
			}

			loop108:
				;

			} finally { DebugExitSubRule(108); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("multiplicative_expression", 99);
			LeaveRule("multiplicative_expression", 99);
			LeaveRule_multiplicative_expression();
			if (state.backtracking > 0) { Memoize(input, 99, multiplicative_expression_StartIndex); }

		}
		DebugLocation(419, 56);
		} finally { DebugExitRule(GrammarFileName, "multiplicative_expression"); }
		return retval;

	}
	// $ANTLR end "multiplicative_expression"

	partial void EnterRule_additive_expression();
	partial void LeaveRule_additive_expression();
	// $ANTLR start "additive_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:420:1: additive_expression : multiplicative_expression ( ( '+' | '-' ) multiplicative_expression )* ;
	[GrammarRule("additive_expression")]
	private Antlr3AstNode additive_expression()
	{
		EnterRule_additive_expression();
		EnterRule("additive_expression", 100);
		var retval = new Antlr3AstNode("additive_expression");
		
		retval.Start = (IToken)input.LT(1);
		int additive_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set381 = default(IToken);
		Antlr3AstNode multiplicative_expression380 = default(Antlr3AstNode);
		Antlr3AstNode multiplicative_expression382 = default(Antlr3AstNode);

		object set381_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "additive_expression");
		DebugLocation(420, 68);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 100)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:420:20: ( multiplicative_expression ( ( '+' | '-' ) multiplicative_expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:421:2: multiplicative_expression ( ( '+' | '-' ) multiplicative_expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(421, 2);
			PushFollow(Follow._multiplicative_expression_in_additive_expression2977);
			multiplicative_expression380=multiplicative_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, multiplicative_expression380.Tree, multiplicative_expression380, retval);
			DebugLocation(421, 28);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:421:28: ( ( '+' | '-' ) multiplicative_expression )*
			try { DebugEnterSubRule(109);
			while (true)
			{
				int alt109=2;
				try { DebugEnterDecision(109, false);
				int LA109_1 = input.LA(1);

				if ((LA109_1==MINUS||LA109_1==71))
				{
					alt109 = 1;
				}


				} finally { DebugExitDecision(109); }
				switch ( alt109 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:421:29: ( '+' | '-' ) multiplicative_expression
					{
					DebugLocation(421, 29);

					set381=(IToken)input.LT(1);
					if (input.LA(1)==MINUS||input.LA(1)==71)
					{
						input.Consume();
						if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set381, retval));
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}

					DebugLocation(421, 41);
					PushFollow(Follow._multiplicative_expression_in_additive_expression2988);
					multiplicative_expression382=multiplicative_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, multiplicative_expression382.Tree, multiplicative_expression382, retval);

					}
					break;

				default:
					goto loop109;
				}
			}

			loop109:
				;

			} finally { DebugExitSubRule(109); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("additive_expression", 100);
			LeaveRule("additive_expression", 100);
			LeaveRule_additive_expression();
			if (state.backtracking > 0) { Memoize(input, 100, additive_expression_StartIndex); }

		}
		DebugLocation(421, 68);
		} finally { DebugExitRule(GrammarFileName, "additive_expression"); }
		return retval;

	}
	// $ANTLR end "additive_expression"

	partial void EnterRule_shift_expression();
	partial void LeaveRule_shift_expression();
	// $ANTLR start "shift_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:423:1: shift_expression : additive_expression ( ( '<<' | '>' '>' ) additive_expression )* ;
	[GrammarRule("shift_expression")]
	private Antlr3AstNode shift_expression()
	{
		EnterRule_shift_expression();
		EnterRule("shift_expression", 101);
		var retval = new Antlr3AstNode("shift_expression");
		
		retval.Start = (IToken)input.LT(1);
		int shift_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal384 = default(IToken);
		IToken char_literal385 = default(IToken);
		IToken char_literal386 = default(IToken);
		Antlr3AstNode additive_expression383 = default(Antlr3AstNode);
		Antlr3AstNode additive_expression387 = default(Antlr3AstNode);

		object string_literal384_tree = default(object);
		object char_literal385_tree = default(object);
		object char_literal386_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "shift_expression");
		DebugLocation(423, 59);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 101)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:423:17: ( additive_expression ( ( '<<' | '>' '>' ) additive_expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:424:2: additive_expression ( ( '<<' | '>' '>' ) additive_expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(424, 2);
			PushFollow(Follow._additive_expression_in_shift_expression2999);
			additive_expression383=additive_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, additive_expression383.Tree, additive_expression383, retval);
			DebugLocation(424, 22);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:424:22: ( ( '<<' | '>' '>' ) additive_expression )*
			try { DebugEnterSubRule(111);
			while (true)
			{
				int alt111=2;
				try { DebugEnterDecision(111, false);
				int LA111_1 = input.LA(1);

				if ((LA111_1==GT))
				{
					int LA111_2 = input.LA(2);

					if ((LA111_2==GT))
					{
						alt111 = 1;
					}


				}
				else if ((LA111_1==82))
				{
					alt111 = 1;
				}


				} finally { DebugExitDecision(111); }
				switch ( alt111 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:424:23: ( '<<' | '>' '>' ) additive_expression
					{
					DebugLocation(424, 23);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:424:23: ( '<<' | '>' '>' )
					int alt110=2;
					try { DebugEnterSubRule(110);
					try { DebugEnterDecision(110, false);
					int LA110_1 = input.LA(1);

					if ((LA110_1==82))
					{
						alt110 = 1;
					}
					else if ((LA110_1==GT))
					{
						alt110 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 110, 0, input, 1);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					} finally { DebugExitDecision(110); }
					switch (alt110)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:424:24: '<<'
						{
						DebugLocation(424, 24);
						string_literal384=(IToken)Match(input,82,Follow._82_in_shift_expression3003); if (state.failed) return retval;
						if (state.backtracking == 0) {
						string_literal384_tree = (object)adaptor.Create(string_literal384, retval);
						adaptor.AddChild(root_0, string_literal384_tree);
						}

						}
						break;
					case 2:
						DebugEnterAlt(2);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:424:29: '>' '>'
						{
						DebugLocation(424, 29);
						char_literal385=(IToken)Match(input,GT,Follow._GT_in_shift_expression3005); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal385_tree = (object)adaptor.Create(char_literal385, retval);
						adaptor.AddChild(root_0, char_literal385_tree);
						}
						DebugLocation(424, 33);
						char_literal386=(IToken)Match(input,GT,Follow._GT_in_shift_expression3007); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal386_tree = (object)adaptor.Create(char_literal386, retval);
						adaptor.AddChild(root_0, char_literal386_tree);
						}

						}
						break;

					}
					} finally { DebugExitSubRule(110); }

					DebugLocation(424, 38);
					PushFollow(Follow._additive_expression_in_shift_expression3010);
					additive_expression387=additive_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, additive_expression387.Tree, additive_expression387, retval);

					}
					break;

				default:
					goto loop111;
				}
			}

			loop111:
				;

			} finally { DebugExitSubRule(111); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("shift_expression", 101);
			LeaveRule("shift_expression", 101);
			LeaveRule_shift_expression();
			if (state.backtracking > 0) { Memoize(input, 101, shift_expression_StartIndex); }

		}
		DebugLocation(424, 59);
		} finally { DebugExitRule(GrammarFileName, "shift_expression"); }
		return retval;

	}
	// $ANTLR end "shift_expression"

	partial void EnterRule_relational_expression();
	partial void LeaveRule_relational_expression();
	// $ANTLR start "relational_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:425:1: relational_expression : shift_expression ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )* ;
	[GrammarRule("relational_expression")]
	private Antlr3AstNode relational_expression()
	{
		EnterRule_relational_expression();
		EnterRule("relational_expression", 102);
		var retval = new Antlr3AstNode("relational_expression");
		
		retval.Start = (IToken)input.LT(1);
		int relational_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set389 = default(IToken);
		IToken set391 = default(IToken);
		Antlr3AstNode shift_expression388 = default(Antlr3AstNode);
		Antlr3AstNode shift_expression390 = default(Antlr3AstNode);
		Antlr3AstNode non_nullable_type392 = default(Antlr3AstNode);

		object set389_tree = default(object);
		object set391_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "relational_expression");
		DebugLocation(425, 5);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 102)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:425:22: ( shift_expression ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:426:2: shift_expression ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(426, 2);
			PushFollow(Follow._shift_expression_in_relational_expression3020);
			shift_expression388=shift_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, shift_expression388.Tree, shift_expression388, retval);
			DebugLocation(427, 3);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:427:3: ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )*
			try { DebugEnterSubRule(112);
			while (true)
			{
				int alt112=3;
				try { DebugEnterDecision(112, false);
				int LA112_1 = input.LA(1);

				if ((LA112_1==GT||LA112_1==81||LA112_1==84||LA112_1==88))
				{
					alt112 = 1;
				}
				else if ((LA112_1==99||LA112_1==142))
				{
					alt112 = 2;
				}


				} finally { DebugExitDecision(112); }
				switch ( alt112 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:427:5: ( ( '<' | '>' | '>=' | '<=' ) shift_expression )
					{
					DebugLocation(427, 5);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:427:5: ( ( '<' | '>' | '>=' | '<=' ) shift_expression )
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:427:6: ( '<' | '>' | '>=' | '<=' ) shift_expression
					{
					DebugLocation(427, 6);

					set389=(IToken)input.LT(1);
					if (input.LA(1)==GT||input.LA(1)==81||input.LA(1)==84||input.LA(1)==88)
					{
						input.Consume();
						if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set389, retval));
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}

					DebugLocation(427, 26);
					PushFollow(Follow._shift_expression_in_relational_expression3037);
					shift_expression390=shift_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, shift_expression390.Tree, shift_expression390, retval);

					}


					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:428:6: ( ( 'is' | 'as' ) non_nullable_type )
					{
					DebugLocation(428, 6);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:428:6: ( ( 'is' | 'as' ) non_nullable_type )
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:428:7: ( 'is' | 'as' ) non_nullable_type
					{
					DebugLocation(428, 7);

					set391=(IToken)input.LT(1);
					if (input.LA(1)==99||input.LA(1)==142)
					{
						input.Consume();
						if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set391, retval));
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}

					DebugLocation(428, 21);
					PushFollow(Follow._non_nullable_type_in_relational_expression3054);
					non_nullable_type392=non_nullable_type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, non_nullable_type392.Tree, non_nullable_type392, retval);

					}


					}
					break;

				default:
					goto loop112;
				}
			}

			loop112:
				;

			} finally { DebugExitSubRule(112); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("relational_expression", 102);
			LeaveRule("relational_expression", 102);
			LeaveRule_relational_expression();
			if (state.backtracking > 0) { Memoize(input, 102, relational_expression_StartIndex); }

		}
		DebugLocation(429, 5);
		} finally { DebugExitRule(GrammarFileName, "relational_expression"); }
		return retval;

	}
	// $ANTLR end "relational_expression"

	partial void EnterRule_equality_expression();
	partial void LeaveRule_equality_expression();
	// $ANTLR start "equality_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:430:1: equality_expression : relational_expression ( ( '==' | '!=' ) relational_expression )* ;
	[GrammarRule("equality_expression")]
	private Antlr3AstNode equality_expression()
	{
		EnterRule_equality_expression();
		EnterRule("equality_expression", 103);
		var retval = new Antlr3AstNode("equality_expression");
		
		retval.Start = (IToken)input.LT(1);
		int equality_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set394 = default(IToken);
		Antlr3AstNode relational_expression393 = default(Antlr3AstNode);
		Antlr3AstNode relational_expression395 = default(Antlr3AstNode);

		object set394_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "equality_expression");
		DebugLocation(430, 43);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 103)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:430:20: ( relational_expression ( ( '==' | '!=' ) relational_expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:431:2: relational_expression ( ( '==' | '!=' ) relational_expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(431, 2);
			PushFollow(Follow._relational_expression_in_equality_expression3068);
			relational_expression393=relational_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, relational_expression393.Tree, relational_expression393, retval);
			DebugLocation(432, 5);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:432:5: ( ( '==' | '!=' ) relational_expression )*
			try { DebugEnterSubRule(113);
			while (true)
			{
				int alt113=2;
				try { DebugEnterDecision(113, false);
				int LA113_1 = input.LA(1);

				if ((LA113_1==62||LA113_1==86))
				{
					alt113 = 1;
				}


				} finally { DebugExitDecision(113); }
				switch ( alt113 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:432:6: ( '==' | '!=' ) relational_expression
					{
					DebugLocation(432, 6);

					set394=(IToken)input.LT(1);
					if (input.LA(1)==62||input.LA(1)==86)
					{
						input.Consume();
						if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set394, retval));
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}

					DebugLocation(432, 20);
					PushFollow(Follow._relational_expression_in_equality_expression3083);
					relational_expression395=relational_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, relational_expression395.Tree, relational_expression395, retval);

					}
					break;

				default:
					goto loop113;
				}
			}

			loop113:
				;

			} finally { DebugExitSubRule(113); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("equality_expression", 103);
			LeaveRule("equality_expression", 103);
			LeaveRule_equality_expression();
			if (state.backtracking > 0) { Memoize(input, 103, equality_expression_StartIndex); }

		}
		DebugLocation(432, 43);
		} finally { DebugExitRule(GrammarFileName, "equality_expression"); }
		return retval;

	}
	// $ANTLR end "equality_expression"

	partial void EnterRule_and_expression();
	partial void LeaveRule_and_expression();
	// $ANTLR start "and_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:433:1: and_expression : equality_expression ( '&' equality_expression )* ;
	[GrammarRule("and_expression")]
	private Antlr3AstNode and_expression()
	{
		EnterRule_and_expression();
		EnterRule("and_expression", 104);
		var retval = new Antlr3AstNode("and_expression");
		
		retval.Start = (IToken)input.LT(1);
		int and_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal397 = default(IToken);
		Antlr3AstNode equality_expression396 = default(Antlr3AstNode);
		Antlr3AstNode equality_expression398 = default(Antlr3AstNode);

		object char_literal397_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "and_expression");
		DebugLocation(433, 50);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 104)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:433:15: ( equality_expression ( '&' equality_expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:434:2: equality_expression ( '&' equality_expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(434, 2);
			PushFollow(Follow._equality_expression_in_and_expression3093);
			equality_expression396=equality_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, equality_expression396.Tree, equality_expression396, retval);
			DebugLocation(434, 22);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:434:22: ( '&' equality_expression )*
			try { DebugEnterSubRule(114);
			while (true)
			{
				int alt114=2;
				try { DebugEnterDecision(114, false);
				int LA114_1 = input.LA(1);

				if ((LA114_1==66))
				{
					alt114 = 1;
				}


				} finally { DebugExitDecision(114); }
				switch ( alt114 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:434:23: '&' equality_expression
					{
					DebugLocation(434, 23);
					char_literal397=(IToken)Match(input,66,Follow._66_in_and_expression3096); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal397_tree = (object)adaptor.Create(char_literal397, retval);
					adaptor.AddChild(root_0, char_literal397_tree);
					}
					DebugLocation(434, 29);
					PushFollow(Follow._equality_expression_in_and_expression3100);
					equality_expression398=equality_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, equality_expression398.Tree, equality_expression398, retval);

					}
					break;

				default:
					goto loop114;
				}
			}

			loop114:
				;

			} finally { DebugExitSubRule(114); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("and_expression", 104);
			LeaveRule("and_expression", 104);
			LeaveRule_and_expression();
			if (state.backtracking > 0) { Memoize(input, 104, and_expression_StartIndex); }

		}
		DebugLocation(434, 50);
		} finally { DebugExitRule(GrammarFileName, "and_expression"); }
		return retval;

	}
	// $ANTLR end "and_expression"

	partial void EnterRule_exclusive_or_expression();
	partial void LeaveRule_exclusive_or_expression();
	// $ANTLR start "exclusive_or_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:435:1: exclusive_or_expression : and_expression ( '^' and_expression )* ;
	[GrammarRule("exclusive_or_expression")]
	private Antlr3AstNode exclusive_or_expression()
	{
		EnterRule_exclusive_or_expression();
		EnterRule("exclusive_or_expression", 105);
		var retval = new Antlr3AstNode("exclusive_or_expression");
		
		retval.Start = (IToken)input.LT(1);
		int exclusive_or_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal400 = default(IToken);
		Antlr3AstNode and_expression399 = default(Antlr3AstNode);
		Antlr3AstNode and_expression401 = default(Antlr3AstNode);

		object char_literal400_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "exclusive_or_expression");
		DebugLocation(435, 40);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 105)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:435:24: ( and_expression ( '^' and_expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:436:2: and_expression ( '^' and_expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(436, 2);
			PushFollow(Follow._and_expression_in_exclusive_or_expression3110);
			and_expression399=and_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, and_expression399.Tree, and_expression399, retval);
			DebugLocation(436, 17);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:436:17: ( '^' and_expression )*
			try { DebugEnterSubRule(115);
			while (true)
			{
				int alt115=2;
				try { DebugEnterDecision(115, false);
				int LA115_1 = input.LA(1);

				if ((LA115_1==93))
				{
					alt115 = 1;
				}


				} finally { DebugExitDecision(115); }
				switch ( alt115 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:436:18: '^' and_expression
					{
					DebugLocation(436, 18);
					char_literal400=(IToken)Match(input,93,Follow._93_in_exclusive_or_expression3113); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal400_tree = (object)adaptor.Create(char_literal400, retval);
					adaptor.AddChild(root_0, char_literal400_tree);
					}
					DebugLocation(436, 24);
					PushFollow(Follow._and_expression_in_exclusive_or_expression3117);
					and_expression401=and_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, and_expression401.Tree, and_expression401, retval);

					}
					break;

				default:
					goto loop115;
				}
			}

			loop115:
				;

			} finally { DebugExitSubRule(115); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("exclusive_or_expression", 105);
			LeaveRule("exclusive_or_expression", 105);
			LeaveRule_exclusive_or_expression();
			if (state.backtracking > 0) { Memoize(input, 105, exclusive_or_expression_StartIndex); }

		}
		DebugLocation(436, 40);
		} finally { DebugExitRule(GrammarFileName, "exclusive_or_expression"); }
		return retval;

	}
	// $ANTLR end "exclusive_or_expression"

	partial void EnterRule_inclusive_or_expression();
	partial void LeaveRule_inclusive_or_expression();
	// $ANTLR start "inclusive_or_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:437:1: inclusive_or_expression : exclusive_or_expression ( '|' exclusive_or_expression )* ;
	[GrammarRule("inclusive_or_expression")]
	private Antlr3AstNode inclusive_or_expression()
	{
		EnterRule_inclusive_or_expression();
		EnterRule("inclusive_or_expression", 106);
		var retval = new Antlr3AstNode("inclusive_or_expression");
		
		retval.Start = (IToken)input.LT(1);
		int inclusive_or_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal403 = default(IToken);
		Antlr3AstNode exclusive_or_expression402 = default(Antlr3AstNode);
		Antlr3AstNode exclusive_or_expression404 = default(Antlr3AstNode);

		object char_literal403_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "inclusive_or_expression");
		DebugLocation(437, 60);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 106)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:437:24: ( exclusive_or_expression ( '|' exclusive_or_expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:438:2: exclusive_or_expression ( '|' exclusive_or_expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(438, 2);
			PushFollow(Follow._exclusive_or_expression_in_inclusive_or_expression3127);
			exclusive_or_expression402=exclusive_or_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, exclusive_or_expression402.Tree, exclusive_or_expression402, retval);
			DebugLocation(438, 28);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:438:28: ( '|' exclusive_or_expression )*
			try { DebugEnterSubRule(116);
			while (true)
			{
				int alt116=2;
				try { DebugEnterDecision(116, false);
				int LA116_1 = input.LA(1);

				if ((LA116_1==198))
				{
					alt116 = 1;
				}


				} finally { DebugExitDecision(116); }
				switch ( alt116 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:438:29: '|' exclusive_or_expression
					{
					DebugLocation(438, 29);
					char_literal403=(IToken)Match(input,198,Follow._198_in_inclusive_or_expression3132); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal403_tree = (object)adaptor.Create(char_literal403, retval);
					adaptor.AddChild(root_0, char_literal403_tree);
					}
					DebugLocation(438, 35);
					PushFollow(Follow._exclusive_or_expression_in_inclusive_or_expression3136);
					exclusive_or_expression404=exclusive_or_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, exclusive_or_expression404.Tree, exclusive_or_expression404, retval);

					}
					break;

				default:
					goto loop116;
				}
			}

			loop116:
				;

			} finally { DebugExitSubRule(116); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("inclusive_or_expression", 106);
			LeaveRule("inclusive_or_expression", 106);
			LeaveRule_inclusive_or_expression();
			if (state.backtracking > 0) { Memoize(input, 106, inclusive_or_expression_StartIndex); }

		}
		DebugLocation(438, 60);
		} finally { DebugExitRule(GrammarFileName, "inclusive_or_expression"); }
		return retval;

	}
	// $ANTLR end "inclusive_or_expression"

	partial void EnterRule_conditional_and_expression();
	partial void LeaveRule_conditional_and_expression();
	// $ANTLR start "conditional_and_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:439:1: conditional_and_expression : inclusive_or_expression ( '&&' inclusive_or_expression )* ;
	[GrammarRule("conditional_and_expression")]
	private Antlr3AstNode conditional_and_expression()
	{
		EnterRule_conditional_and_expression();
		EnterRule("conditional_and_expression", 107);
		var retval = new Antlr3AstNode("conditional_and_expression");
		
		retval.Start = (IToken)input.LT(1);
		int conditional_and_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal406 = default(IToken);
		Antlr3AstNode inclusive_or_expression405 = default(Antlr3AstNode);
		Antlr3AstNode inclusive_or_expression407 = default(Antlr3AstNode);

		object string_literal406_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "conditional_and_expression");
		DebugLocation(439, 61);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 107)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:439:27: ( inclusive_or_expression ( '&&' inclusive_or_expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:440:2: inclusive_or_expression ( '&&' inclusive_or_expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(440, 2);
			PushFollow(Follow._inclusive_or_expression_in_conditional_and_expression3146);
			inclusive_or_expression405=inclusive_or_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, inclusive_or_expression405.Tree, inclusive_or_expression405, retval);
			DebugLocation(440, 28);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:440:28: ( '&&' inclusive_or_expression )*
			try { DebugEnterSubRule(117);
			while (true)
			{
				int alt117=2;
				try { DebugEnterDecision(117, false);
				int LA117_1 = input.LA(1);

				if ((LA117_1==65))
				{
					alt117 = 1;
				}


				} finally { DebugExitDecision(117); }
				switch ( alt117 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:440:29: '&&' inclusive_or_expression
					{
					DebugLocation(440, 29);
					string_literal406=(IToken)Match(input,65,Follow._65_in_conditional_and_expression3151); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal406_tree = (object)adaptor.Create(string_literal406, retval);
					adaptor.AddChild(root_0, string_literal406_tree);
					}
					DebugLocation(440, 36);
					PushFollow(Follow._inclusive_or_expression_in_conditional_and_expression3155);
					inclusive_or_expression407=inclusive_or_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, inclusive_or_expression407.Tree, inclusive_or_expression407, retval);

					}
					break;

				default:
					goto loop117;
				}
			}

			loop117:
				;

			} finally { DebugExitSubRule(117); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("conditional_and_expression", 107);
			LeaveRule("conditional_and_expression", 107);
			LeaveRule_conditional_and_expression();
			if (state.backtracking > 0) { Memoize(input, 107, conditional_and_expression_StartIndex); }

		}
		DebugLocation(440, 61);
		} finally { DebugExitRule(GrammarFileName, "conditional_and_expression"); }
		return retval;

	}
	// $ANTLR end "conditional_and_expression"

	partial void EnterRule_conditional_or_expression();
	partial void LeaveRule_conditional_or_expression();
	// $ANTLR start "conditional_or_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:441:1: conditional_or_expression : conditional_and_expression ( '||' conditional_and_expression )* ;
	[GrammarRule("conditional_or_expression")]
	private Antlr3AstNode conditional_or_expression()
	{
		EnterRule_conditional_or_expression();
		EnterRule("conditional_or_expression", 108);
		var retval = new Antlr3AstNode("conditional_or_expression");
		
		retval.Start = (IToken)input.LT(1);
		int conditional_or_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal409 = default(IToken);
		Antlr3AstNode conditional_and_expression408 = default(Antlr3AstNode);
		Antlr3AstNode conditional_and_expression410 = default(Antlr3AstNode);

		object string_literal409_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "conditional_or_expression");
		DebugLocation(441, 66);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 108)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:441:26: ( conditional_and_expression ( '||' conditional_and_expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:442:2: conditional_and_expression ( '||' conditional_and_expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(442, 2);
			PushFollow(Follow._conditional_and_expression_in_conditional_or_expression3165);
			conditional_and_expression408=conditional_and_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, conditional_and_expression408.Tree, conditional_and_expression408, retval);
			DebugLocation(442, 30);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:442:30: ( '||' conditional_and_expression )*
			try { DebugEnterSubRule(118);
			while (true)
			{
				int alt118=2;
				try { DebugEnterDecision(118, false);
				int LA118_1 = input.LA(1);

				if ((LA118_1==200))
				{
					alt118 = 1;
				}


				} finally { DebugExitDecision(118); }
				switch ( alt118 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:442:31: '||' conditional_and_expression
					{
					DebugLocation(442, 31);
					string_literal409=(IToken)Match(input,200,Follow._200_in_conditional_or_expression3169); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal409_tree = (object)adaptor.Create(string_literal409, retval);
					adaptor.AddChild(root_0, string_literal409_tree);
					}
					DebugLocation(442, 38);
					PushFollow(Follow._conditional_and_expression_in_conditional_or_expression3173);
					conditional_and_expression410=conditional_and_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, conditional_and_expression410.Tree, conditional_and_expression410, retval);

					}
					break;

				default:
					goto loop118;
				}
			}

			loop118:
				;

			} finally { DebugExitSubRule(118); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("conditional_or_expression", 108);
			LeaveRule("conditional_or_expression", 108);
			LeaveRule_conditional_or_expression();
			if (state.backtracking > 0) { Memoize(input, 108, conditional_or_expression_StartIndex); }

		}
		DebugLocation(442, 66);
		} finally { DebugExitRule(GrammarFileName, "conditional_or_expression"); }
		return retval;

	}
	// $ANTLR end "conditional_or_expression"

	partial void EnterRule_null_coalescing_expression();
	partial void LeaveRule_null_coalescing_expression();
	// $ANTLR start "null_coalescing_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:444:1: null_coalescing_expression : conditional_or_expression ( '??' conditional_or_expression )* ;
	[GrammarRule("null_coalescing_expression")]
	private Antlr3AstNode null_coalescing_expression()
	{
		EnterRule_null_coalescing_expression();
		EnterRule("null_coalescing_expression", 109);
		var retval = new Antlr3AstNode("null_coalescing_expression");
		
		retval.Start = (IToken)input.LT(1);
		int null_coalescing_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal412 = default(IToken);
		Antlr3AstNode conditional_or_expression411 = default(Antlr3AstNode);
		Antlr3AstNode conditional_or_expression413 = default(Antlr3AstNode);

		object string_literal412_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "null_coalescing_expression");
		DebugLocation(444, 65);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 109)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:444:27: ( conditional_or_expression ( '??' conditional_or_expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:445:2: conditional_or_expression ( '??' conditional_or_expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(445, 2);
			PushFollow(Follow._conditional_or_expression_in_null_coalescing_expression3184);
			conditional_or_expression411=conditional_or_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, conditional_or_expression411.Tree, conditional_or_expression411, retval);
			DebugLocation(445, 30);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:445:30: ( '??' conditional_or_expression )*
			try { DebugEnterSubRule(119);
			while (true)
			{
				int alt119=2;
				try { DebugEnterDecision(119, false);
				int LA119_1 = input.LA(1);

				if ((LA119_1==90))
				{
					alt119 = 1;
				}


				} finally { DebugExitDecision(119); }
				switch ( alt119 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:445:31: '??' conditional_or_expression
					{
					DebugLocation(445, 31);
					string_literal412=(IToken)Match(input,90,Follow._90_in_null_coalescing_expression3189); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal412_tree = (object)adaptor.Create(string_literal412, retval);
					adaptor.AddChild(root_0, string_literal412_tree);
					}
					DebugLocation(445, 38);
					PushFollow(Follow._conditional_or_expression_in_null_coalescing_expression3193);
					conditional_or_expression413=conditional_or_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, conditional_or_expression413.Tree, conditional_or_expression413, retval);

					}
					break;

				default:
					goto loop119;
				}
			}

			loop119:
				;

			} finally { DebugExitSubRule(119); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("null_coalescing_expression", 109);
			LeaveRule("null_coalescing_expression", 109);
			LeaveRule_null_coalescing_expression();
			if (state.backtracking > 0) { Memoize(input, 109, null_coalescing_expression_StartIndex); }

		}
		DebugLocation(445, 65);
		} finally { DebugExitRule(GrammarFileName, "null_coalescing_expression"); }
		return retval;

	}
	// $ANTLR end "null_coalescing_expression"

	partial void EnterRule_conditional_expression();
	partial void LeaveRule_conditional_expression();
	// $ANTLR start "conditional_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:446:1: conditional_expression : null_coalescing_expression ( '?' expression ':' expression )? ;
	[GrammarRule("conditional_expression")]
	private Antlr3AstNode conditional_expression()
	{
		EnterRule_conditional_expression();
		EnterRule("conditional_expression", 110);
		var retval = new Antlr3AstNode("conditional_expression");
		
		retval.Start = (IToken)input.LT(1);
		int conditional_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal415 = default(IToken);
		IToken char_literal417 = default(IToken);
		Antlr3AstNode null_coalescing_expression414 = default(Antlr3AstNode);
		Antlr3AstNode expression416 = default(Antlr3AstNode);
		Antlr3AstNode expression418 = default(Antlr3AstNode);

		object char_literal415_tree = default(object);
		object char_literal417_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "conditional_expression");
		DebugLocation(446, 69);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 110)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:446:23: ( null_coalescing_expression ( '?' expression ':' expression )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:447:2: null_coalescing_expression ( '?' expression ':' expression )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(447, 2);
			PushFollow(Follow._null_coalescing_expression_in_conditional_expression3203);
			null_coalescing_expression414=null_coalescing_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, null_coalescing_expression414.Tree, null_coalescing_expression414, retval);
			DebugLocation(447, 31);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:447:31: ( '?' expression ':' expression )?
			int alt120=2;
			try { DebugEnterSubRule(120);
			try { DebugEnterDecision(120, false);
			int LA120_1 = input.LA(1);

			if ((LA120_1==89))
			{
				alt120 = 1;
			}
			} finally { DebugExitDecision(120); }
			switch (alt120)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:447:32: '?' expression ':' expression
				{
				DebugLocation(447, 32);
				char_literal415=(IToken)Match(input,89,Follow._89_in_conditional_expression3208); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal415_tree = (object)adaptor.Create(char_literal415, retval);
				adaptor.AddChild(root_0, char_literal415_tree);
				}
				DebugLocation(447, 38);
				PushFollow(Follow._expression_in_conditional_expression3212);
				expression416=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression416.Tree, expression416, retval);
				DebugLocation(447, 51);
				char_literal417=(IToken)Match(input,79,Follow._79_in_conditional_expression3216); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal417_tree = (object)adaptor.Create(char_literal417, retval);
				adaptor.AddChild(root_0, char_literal417_tree);
				}
				DebugLocation(447, 57);
				PushFollow(Follow._expression_in_conditional_expression3220);
				expression418=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression418.Tree, expression418, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(120); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("conditional_expression", 110);
			LeaveRule("conditional_expression", 110);
			LeaveRule_conditional_expression();
			if (state.backtracking > 0) { Memoize(input, 110, conditional_expression_StartIndex); }

		}
		DebugLocation(447, 69);
		} finally { DebugExitRule(GrammarFileName, "conditional_expression"); }
		return retval;

	}
	// $ANTLR end "conditional_expression"

	partial void EnterRule_lambda_expression();
	partial void LeaveRule_lambda_expression();
	// $ANTLR start "lambda_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:452:1: lambda_expression : anonymous_function_signature '=>' anonymous_function_body ;
	[GrammarRule("lambda_expression")]
	private Antlr3AstNode lambda_expression()
	{
		EnterRule_lambda_expression();
		EnterRule("lambda_expression", 111);
		var retval = new Antlr3AstNode("lambda_expression");
		
		retval.Start = (IToken)input.LT(1);
		int lambda_expression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal420 = default(IToken);
		Antlr3AstNode anonymous_function_signature419 = default(Antlr3AstNode);
		Antlr3AstNode anonymous_function_body421 = default(Antlr3AstNode);

		object string_literal420_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "lambda_expression");
		DebugLocation(452, 62);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 111)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:452:18: ( anonymous_function_signature '=>' anonymous_function_body )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:453:2: anonymous_function_signature '=>' anonymous_function_body
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(453, 2);
			PushFollow(Follow._anonymous_function_signature_in_lambda_expression3240);
			anonymous_function_signature419=anonymous_function_signature();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, anonymous_function_signature419.Tree, anonymous_function_signature419, retval);
			DebugLocation(453, 33);
			string_literal420=(IToken)Match(input,87,Follow._87_in_lambda_expression3244); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal420_tree = (object)adaptor.Create(string_literal420, retval);
			adaptor.AddChild(root_0, string_literal420_tree);
			}
			DebugLocation(453, 40);
			PushFollow(Follow._anonymous_function_body_in_lambda_expression3248);
			anonymous_function_body421=anonymous_function_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, anonymous_function_body421.Tree, anonymous_function_body421, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("lambda_expression", 111);
			LeaveRule("lambda_expression", 111);
			LeaveRule_lambda_expression();
			if (state.backtracking > 0) { Memoize(input, 111, lambda_expression_StartIndex); }

		}
		DebugLocation(453, 62);
		} finally { DebugExitRule(GrammarFileName, "lambda_expression"); }
		return retval;

	}
	// $ANTLR end "lambda_expression"

	partial void EnterRule_anonymous_function_signature();
	partial void LeaveRule_anonymous_function_signature();
	// $ANTLR start "anonymous_function_signature"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:454:1: anonymous_function_signature : ( '(' ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )? ')' | implicit_anonymous_function_parameter_list );
	[GrammarRule("anonymous_function_signature")]
	private Antlr3AstNode anonymous_function_signature()
	{
		EnterRule_anonymous_function_signature();
		EnterRule("anonymous_function_signature", 112);
		var retval = new Antlr3AstNode("anonymous_function_signature");
		
		retval.Start = (IToken)input.LT(1);
		int anonymous_function_signature_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal422 = default(IToken);
		IToken char_literal425 = default(IToken);
		Antlr3AstNode explicit_anonymous_function_parameter_list423 = default(Antlr3AstNode);
		Antlr3AstNode implicit_anonymous_function_parameter_list424 = default(Antlr3AstNode);
		Antlr3AstNode implicit_anonymous_function_parameter_list426 = default(Antlr3AstNode);

		object char_literal422_tree = default(object);
		object char_literal425_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "anonymous_function_signature");
		DebugLocation(454, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 112)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:454:29: ( '(' ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )? ')' | implicit_anonymous_function_parameter_list )
			int alt122=2;
			try { DebugEnterDecision(122, false);
			int LA122_1 = input.LA(1);

			if ((LA122_1==68))
			{
				alt122 = 1;
			}
			else if ((LA122_1==IDENTIFIER||LA122_1==95||(LA122_1>=97 && LA122_1<=98)||(LA122_1>=100 && LA122_1<=101)||LA122_1==105||LA122_1==117||LA122_1==120||LA122_1==122||LA122_1==126||LA122_1==132||LA122_1==135||LA122_1==141||(LA122_1>=143 && LA122_1<=144)||(LA122_1>=147 && LA122_1<=148)||LA122_1==152||LA122_1==154||LA122_1==157||LA122_1==160||LA122_1==162||LA122_1==167||(LA122_1>=171 && LA122_1<=172)||LA122_1==183||LA122_1==190||LA122_1==194||LA122_1==196))
			{
				alt122 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 122, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(122); }
			switch (alt122)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:455:2: '(' ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )? ')'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(455, 2);
				char_literal422=(IToken)Match(input,68,Follow._68_in_anonymous_function_signature3255); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal422_tree = (object)adaptor.Create(char_literal422, retval);
				adaptor.AddChild(root_0, char_literal422_tree);
				}
				DebugLocation(455, 6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:455:6: ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )?
				int alt121=3;
				try { DebugEnterSubRule(121);
				try { DebugEnterDecision(121, false);
				int LA121_1 = input.LA(1);

				if ((LA121_1==103||LA121_1==106||LA121_1==109||LA121_1==114||LA121_1==119||LA121_1==129||LA121_1==138||LA121_1==146||LA121_1==151||LA121_1==155||LA121_1==166||LA121_1==169||LA121_1==173||LA121_1==177||(LA121_1>=185 && LA121_1<=186)||LA121_1==189||LA121_1==192))
				{
					alt121 = 1;
				}
				else if ((LA121_1==IDENTIFIER||LA121_1==95||(LA121_1>=97 && LA121_1<=98)||(LA121_1>=100 && LA121_1<=101)||LA121_1==105||LA121_1==117||LA121_1==120||LA121_1==122||LA121_1==126||LA121_1==132||LA121_1==135||LA121_1==141||(LA121_1>=143 && LA121_1<=144)||(LA121_1>=147 && LA121_1<=148)||LA121_1==152||LA121_1==154||LA121_1==157||LA121_1==160||LA121_1==162||LA121_1==167||(LA121_1>=171 && LA121_1<=172)||LA121_1==183||LA121_1==190||LA121_1==194||LA121_1==196))
				{
					int LA121_2 = input.LA(2);

					if ((LA121_2==DOT||LA121_2==IDENTIFIER||LA121_2==69||(LA121_2>=80 && LA121_2<=81)||LA121_2==89||LA121_2==91||LA121_2==95||(LA121_2>=97 && LA121_2<=98)||(LA121_2>=100 && LA121_2<=101)||LA121_2==105||LA121_2==117||LA121_2==120||LA121_2==122||LA121_2==126||LA121_2==132||LA121_2==135||LA121_2==141||(LA121_2>=143 && LA121_2<=144)||(LA121_2>=147 && LA121_2<=148)||LA121_2==152||LA121_2==154||LA121_2==157||LA121_2==160||LA121_2==162||LA121_2==167||(LA121_2>=171 && LA121_2<=172)||LA121_2==183||LA121_2==190||LA121_2==194||LA121_2==196))
					{
						alt121 = 1;
					}
					else if ((LA121_2==RPAREN||LA121_2==74))
					{
						alt121 = 2;
					}
				}
				} finally { DebugExitDecision(121); }
				switch (alt121)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:455:7: explicit_anonymous_function_parameter_list
					{
					DebugLocation(455, 7);
					PushFollow(Follow._explicit_anonymous_function_parameter_list_in_anonymous_function_signature3258);
					explicit_anonymous_function_parameter_list423=explicit_anonymous_function_parameter_list();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, explicit_anonymous_function_parameter_list423.Tree, explicit_anonymous_function_parameter_list423, retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:456:5: implicit_anonymous_function_parameter_list
					{
					DebugLocation(456, 5);
					PushFollow(Follow._implicit_anonymous_function_parameter_list_in_anonymous_function_signature3264);
					implicit_anonymous_function_parameter_list424=implicit_anonymous_function_parameter_list();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, implicit_anonymous_function_parameter_list424.Tree, implicit_anonymous_function_parameter_list424, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(121); }

				DebugLocation(456, 50);
				char_literal425=(IToken)Match(input,RPAREN,Follow._RPAREN_in_anonymous_function_signature3268); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal425_tree = (object)adaptor.Create(char_literal425, retval);
				adaptor.AddChild(root_0, char_literal425_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:457:4: implicit_anonymous_function_parameter_list
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(457, 4);
				PushFollow(Follow._implicit_anonymous_function_parameter_list_in_anonymous_function_signature3273);
				implicit_anonymous_function_parameter_list426=implicit_anonymous_function_parameter_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, implicit_anonymous_function_parameter_list426.Tree, implicit_anonymous_function_parameter_list426, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("anonymous_function_signature", 112);
			LeaveRule("anonymous_function_signature", 112);
			LeaveRule_anonymous_function_signature();
			if (state.backtracking > 0) { Memoize(input, 112, anonymous_function_signature_StartIndex); }

		}
		DebugLocation(458, 1);
		} finally { DebugExitRule(GrammarFileName, "anonymous_function_signature"); }
		return retval;

	}
	// $ANTLR end "anonymous_function_signature"

	partial void EnterRule_implicit_anonymous_function_parameter_list();
	partial void LeaveRule_implicit_anonymous_function_parameter_list();
	// $ANTLR start "implicit_anonymous_function_parameter_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:459:1: implicit_anonymous_function_parameter_list : implicit_anonymous_function_parameter ( ',' implicit_anonymous_function_parameter )* ;
	[GrammarRule("implicit_anonymous_function_parameter_list")]
	private Antlr3AstNode implicit_anonymous_function_parameter_list()
	{
		EnterRule_implicit_anonymous_function_parameter_list();
		EnterRule("implicit_anonymous_function_parameter_list", 113);
		var retval = new Antlr3AstNode("implicit_anonymous_function_parameter_list");
		
		retval.Start = (IToken)input.LT(1);
		int implicit_anonymous_function_parameter_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal428 = default(IToken);
		Antlr3AstNode implicit_anonymous_function_parameter427 = default(Antlr3AstNode);
		Antlr3AstNode implicit_anonymous_function_parameter429 = default(Antlr3AstNode);

		object char_literal428_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "implicit_anonymous_function_parameter_list");
		DebugLocation(459, 88);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 113)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:459:43: ( implicit_anonymous_function_parameter ( ',' implicit_anonymous_function_parameter )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:460:2: implicit_anonymous_function_parameter ( ',' implicit_anonymous_function_parameter )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(460, 2);
			PushFollow(Follow._implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list3282);
			implicit_anonymous_function_parameter427=implicit_anonymous_function_parameter();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, implicit_anonymous_function_parameter427.Tree, implicit_anonymous_function_parameter427, retval);
			DebugLocation(460, 42);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:460:42: ( ',' implicit_anonymous_function_parameter )*
			try { DebugEnterSubRule(123);
			while (true)
			{
				int alt123=2;
				try { DebugEnterDecision(123, false);
				int LA123_1 = input.LA(1);

				if ((LA123_1==74))
				{
					alt123 = 1;
				}


				} finally { DebugExitDecision(123); }
				switch ( alt123 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:460:43: ',' implicit_anonymous_function_parameter
					{
					DebugLocation(460, 43);
					char_literal428=(IToken)Match(input,74,Follow._74_in_implicit_anonymous_function_parameter_list3287); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal428_tree = (object)adaptor.Create(char_literal428, retval);
					adaptor.AddChild(root_0, char_literal428_tree);
					}
					DebugLocation(460, 49);
					PushFollow(Follow._implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list3291);
					implicit_anonymous_function_parameter429=implicit_anonymous_function_parameter();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, implicit_anonymous_function_parameter429.Tree, implicit_anonymous_function_parameter429, retval);

					}
					break;

				default:
					goto loop123;
				}
			}

			loop123:
				;

			} finally { DebugExitSubRule(123); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("implicit_anonymous_function_parameter_list", 113);
			LeaveRule("implicit_anonymous_function_parameter_list", 113);
			LeaveRule_implicit_anonymous_function_parameter_list();
			if (state.backtracking > 0) { Memoize(input, 113, implicit_anonymous_function_parameter_list_StartIndex); }

		}
		DebugLocation(460, 88);
		} finally { DebugExitRule(GrammarFileName, "implicit_anonymous_function_parameter_list"); }
		return retval;

	}
	// $ANTLR end "implicit_anonymous_function_parameter_list"

	partial void EnterRule_implicit_anonymous_function_parameter();
	partial void LeaveRule_implicit_anonymous_function_parameter();
	// $ANTLR start "implicit_anonymous_function_parameter"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:461:1: implicit_anonymous_function_parameter : identifier ;
	[GrammarRule("implicit_anonymous_function_parameter")]
	private Antlr3AstNode implicit_anonymous_function_parameter()
	{
		EnterRule_implicit_anonymous_function_parameter();
		EnterRule("implicit_anonymous_function_parameter", 114);
		var retval = new Antlr3AstNode("implicit_anonymous_function_parameter");
		
		retval.Start = (IToken)input.LT(1);
		int implicit_anonymous_function_parameter_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode identifier430 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "implicit_anonymous_function_parameter");
		DebugLocation(461, 11);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 114)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:461:38: ( identifier )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:462:2: identifier
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(462, 2);
			PushFollow(Follow._identifier_in_implicit_anonymous_function_parameter3301);
			identifier430=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier430.Tree, identifier430, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("implicit_anonymous_function_parameter", 114);
			LeaveRule("implicit_anonymous_function_parameter", 114);
			LeaveRule_implicit_anonymous_function_parameter();
			if (state.backtracking > 0) { Memoize(input, 114, implicit_anonymous_function_parameter_StartIndex); }

		}
		DebugLocation(462, 11);
		} finally { DebugExitRule(GrammarFileName, "implicit_anonymous_function_parameter"); }
		return retval;

	}
	// $ANTLR end "implicit_anonymous_function_parameter"

	partial void EnterRule_anonymous_function_body();
	partial void LeaveRule_anonymous_function_body();
	// $ANTLR start "anonymous_function_body"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:463:1: anonymous_function_body : ( expression | block );
	[GrammarRule("anonymous_function_body")]
	private Antlr3AstNode anonymous_function_body()
	{
		EnterRule_anonymous_function_body();
		EnterRule("anonymous_function_body", 115);
		var retval = new Antlr3AstNode("anonymous_function_body");
		
		retval.Start = (IToken)input.LT(1);
		int anonymous_function_body_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode expression431 = default(Antlr3AstNode);
		Antlr3AstNode block432 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "anonymous_function_body");
		DebugLocation(463, 9);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 115)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:463:24: ( expression | block )
			int alt124=2;
			try { DebugEnterDecision(124, false);
			int LA124_1 = input.LA(1);

			if ((LA124_1==Character_literal||LA124_1==FALSE||(LA124_1>=Hex_number && LA124_1<=IDENTIFIER)||(LA124_1>=MINUS && LA124_1<=NUMBER)||LA124_1==Real_literal||LA124_1==STRINGLITERAL||LA124_1==TRUE||LA124_1==Verbatim_string_literal||LA124_1==61||LA124_1==66||(LA124_1>=68 && LA124_1<=69)||(LA124_1>=71 && LA124_1<=72)||LA124_1==75||LA124_1==95||(LA124_1>=97 && LA124_1<=98)||(LA124_1>=100 && LA124_1<=103)||(LA124_1>=105 && LA124_1<=106)||(LA124_1>=109 && LA124_1<=110)||(LA124_1>=114 && LA124_1<=117)||(LA124_1>=119 && LA124_1<=120)||LA124_1==122||LA124_1==126||LA124_1==129||LA124_1==132||LA124_1==135||LA124_1==138||LA124_1==141||(LA124_1>=143 && LA124_1<=144)||(LA124_1>=146 && LA124_1<=148)||(LA124_1>=150 && LA124_1<=152)||LA124_1==154||LA124_1==157||LA124_1==160||LA124_1==162||LA124_1==167||LA124_1==169||(LA124_1>=171 && LA124_1<=174)||LA124_1==177||LA124_1==180||(LA124_1>=183 && LA124_1<=187)||(LA124_1>=189 && LA124_1<=190)||LA124_1==194||LA124_1==196||LA124_1==202))
			{
				alt124 = 1;
			}
			else if ((LA124_1==SEMI||LA124_1==197))
			{
				alt124 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 124, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(124); }
			switch (alt124)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:464:2: expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(464, 2);
				PushFollow(Follow._expression_in_anonymous_function_body3308);
				expression431=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression431.Tree, expression431, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:465:4: block
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(465, 4);
				PushFollow(Follow._block_in_anonymous_function_body3313);
				block432=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block432.Tree, block432, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("anonymous_function_body", 115);
			LeaveRule("anonymous_function_body", 115);
			LeaveRule_anonymous_function_body();
			if (state.backtracking > 0) { Memoize(input, 115, anonymous_function_body_StartIndex); }

		}
		DebugLocation(465, 9);
		} finally { DebugExitRule(GrammarFileName, "anonymous_function_body"); }
		return retval;

	}
	// $ANTLR end "anonymous_function_body"

	partial void EnterRule_query_expression();
	partial void LeaveRule_query_expression();
	// $ANTLR start "query_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:470:1: query_expression : from_clause query_body ;
	[GrammarRule("query_expression")]
	private Antlr3AstNode query_expression()
	{
		EnterRule_query_expression();
		EnterRule("query_expression", 116);
		var retval = new Antlr3AstNode("query_expression");
		
		retval.Start = (IToken)input.LT(1);
		int query_expression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode from_clause433 = default(Antlr3AstNode);
		Antlr3AstNode query_body434 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "query_expression");
		DebugLocation(470, 26);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 116)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:470:17: ( from_clause query_body )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:471:2: from_clause query_body
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(471, 2);
			PushFollow(Follow._from_clause_in_query_expression3325);
			from_clause433=from_clause();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, from_clause433.Tree, from_clause433, retval);
			DebugLocation(471, 16);
			PushFollow(Follow._query_body_in_query_expression3329);
			query_body434=query_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, query_body434.Tree, query_body434, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("query_expression", 116);
			LeaveRule("query_expression", 116);
			LeaveRule_query_expression();
			if (state.backtracking > 0) { Memoize(input, 116, query_expression_StartIndex); }

		}
		DebugLocation(471, 26);
		} finally { DebugExitRule(GrammarFileName, "query_expression"); }
		return retval;

	}
	// $ANTLR end "query_expression"

	partial void EnterRule_query_body();
	partial void LeaveRule_query_body();
	// $ANTLR start "query_body"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:472:1: query_body : ( query_body_clauses )? select_or_group_clause ( ( 'into' )=> query_continuation )? ;
	[GrammarRule("query_body")]
	private Antlr3AstNode query_body()
	{
		EnterRule_query_body();
		EnterRule("query_body", 117);
		var retval = new Antlr3AstNode("query_body");
		
		retval.Start = (IToken)input.LT(1);
		int query_body_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode query_body_clauses435 = default(Antlr3AstNode);
		Antlr3AstNode select_or_group_clause436 = default(Antlr3AstNode);
		Antlr3AstNode query_continuation437 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "query_body");
		DebugLocation(472, 82);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 117)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:472:11: ( ( query_body_clauses )? select_or_group_clause ( ( 'into' )=> query_continuation )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:474:2: ( query_body_clauses )? select_or_group_clause ( ( 'into' )=> query_continuation )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(474, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:474:2: ( query_body_clauses )?
			int alt125=2;
			try { DebugEnterSubRule(125);
			try { DebugEnterDecision(125, false);
			int LA125_1 = input.LA(1);

			if ((LA125_1==132||(LA125_1>=143 && LA125_1<=144)||LA125_1==154||LA125_1==194))
			{
				alt125 = 1;
			}
			} finally { DebugExitDecision(125); }
			switch (alt125)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:474:2: query_body_clauses
				{
				DebugLocation(474, 2);
				PushFollow(Follow._query_body_clauses_in_query_body3339);
				query_body_clauses435=query_body_clauses();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, query_body_clauses435.Tree, query_body_clauses435, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(125); }

			DebugLocation(474, 24);
			PushFollow(Follow._select_or_group_clause_in_query_body3344);
			select_or_group_clause436=select_or_group_clause();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, select_or_group_clause436.Tree, select_or_group_clause436, retval);
			DebugLocation(474, 49);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:474:49: ( ( 'into' )=> query_continuation )?
			int alt126=2;
			try { DebugEnterSubRule(126);
			try { DebugEnterDecision(126, false);
			int LA126_1 = input.LA(1);

			if ((LA126_1==141))
			{
				int LA126_2 = input.LA(2);

				if ((EvaluatePredicate(synpred23_cs_fragment)))
				{
					alt126 = 1;
				}
			}
			} finally { DebugExitDecision(126); }
			switch (alt126)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:474:50: ( 'into' )=> query_continuation
				{
				DebugLocation(474, 62);
				PushFollow(Follow._query_continuation_in_query_body3355);
				query_continuation437=query_continuation();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, query_continuation437.Tree, query_continuation437, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(126); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("query_body", 117);
			LeaveRule("query_body", 117);
			LeaveRule_query_body();
			if (state.backtracking > 0) { Memoize(input, 117, query_body_StartIndex); }

		}
		DebugLocation(474, 82);
		} finally { DebugExitRule(GrammarFileName, "query_body"); }
		return retval;

	}
	// $ANTLR end "query_body"

	partial void EnterRule_query_continuation();
	partial void LeaveRule_query_continuation();
	// $ANTLR start "query_continuation"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:475:1: query_continuation : 'into' identifier query_body ;
	[GrammarRule("query_continuation")]
	private Antlr3AstNode query_continuation()
	{
		EnterRule_query_continuation();
		EnterRule("query_continuation", 118);
		var retval = new Antlr3AstNode("query_continuation");
		
		retval.Start = (IToken)input.LT(1);
		int query_continuation_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal438 = default(IToken);
		Antlr3AstNode identifier439 = default(Antlr3AstNode);
		Antlr3AstNode query_body440 = default(Antlr3AstNode);

		object string_literal438_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "query_continuation");
		DebugLocation(475, 33);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 118)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:475:19: ( 'into' identifier query_body )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:476:2: 'into' identifier query_body
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(476, 2);
			string_literal438=(IToken)Match(input,141,Follow._141_in_query_continuation3365); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal438_tree = (object)adaptor.Create(string_literal438, retval);
			adaptor.AddChild(root_0, string_literal438_tree);
			}
			DebugLocation(476, 11);
			PushFollow(Follow._identifier_in_query_continuation3369);
			identifier439=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier439.Tree, identifier439, retval);
			DebugLocation(476, 24);
			PushFollow(Follow._query_body_in_query_continuation3373);
			query_body440=query_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, query_body440.Tree, query_body440, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("query_continuation", 118);
			LeaveRule("query_continuation", 118);
			LeaveRule_query_continuation();
			if (state.backtracking > 0) { Memoize(input, 118, query_continuation_StartIndex); }

		}
		DebugLocation(476, 33);
		} finally { DebugExitRule(GrammarFileName, "query_continuation"); }
		return retval;

	}
	// $ANTLR end "query_continuation"

	partial void EnterRule_query_body_clauses();
	partial void LeaveRule_query_body_clauses();
	// $ANTLR start "query_body_clauses"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:477:1: query_body_clauses : ( query_body_clause )+ ;
	[GrammarRule("query_body_clauses")]
	private Antlr3AstNode query_body_clauses()
	{
		EnterRule_query_body_clauses();
		EnterRule("query_body_clauses", 119);
		var retval = new Antlr3AstNode("query_body_clauses");
		
		retval.Start = (IToken)input.LT(1);
		int query_body_clauses_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode query_body_clause441 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "query_body_clauses");
		DebugLocation(477, 20);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 119)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:477:19: ( ( query_body_clause )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:478:2: ( query_body_clause )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(478, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:478:2: ( query_body_clause )+
			int cnt127=0;
			try { DebugEnterSubRule(127);
			while (true)
			{
				int alt127=2;
				try { DebugEnterDecision(127, false);
				int LA127_1 = input.LA(1);

				if ((LA127_1==132||(LA127_1>=143 && LA127_1<=144)||LA127_1==154||LA127_1==194))
				{
					alt127 = 1;
				}


				} finally { DebugExitDecision(127); }
				switch (alt127)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:478:2: query_body_clause
					{
					DebugLocation(478, 2);
					PushFollow(Follow._query_body_clause_in_query_body_clauses3380);
					query_body_clause441=query_body_clause();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, query_body_clause441.Tree, query_body_clause441, retval);

					}
					break;

				default:
					if (cnt127 >= 1)
						goto loop127;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee127 = new EarlyExitException( 127, input );
					DebugRecognitionException(eee127);
					throw eee127;
				}
				cnt127++;
			}
			loop127:
				;

			} finally { DebugExitSubRule(127); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("query_body_clauses", 119);
			LeaveRule("query_body_clauses", 119);
			LeaveRule_query_body_clauses();
			if (state.backtracking > 0) { Memoize(input, 119, query_body_clauses_StartIndex); }

		}
		DebugLocation(478, 20);
		} finally { DebugExitRule(GrammarFileName, "query_body_clauses"); }
		return retval;

	}
	// $ANTLR end "query_body_clauses"

	partial void EnterRule_query_body_clause();
	partial void LeaveRule_query_body_clause();
	// $ANTLR start "query_body_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:479:1: query_body_clause : ( from_clause | let_clause | where_clause | join_clause | orderby_clause );
	[GrammarRule("query_body_clause")]
	private Antlr3AstNode query_body_clause()
	{
		EnterRule_query_body_clause();
		EnterRule("query_body_clause", 120);
		var retval = new Antlr3AstNode("query_body_clause");
		
		retval.Start = (IToken)input.LT(1);
		int query_body_clause_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode from_clause442 = default(Antlr3AstNode);
		Antlr3AstNode let_clause443 = default(Antlr3AstNode);
		Antlr3AstNode where_clause444 = default(Antlr3AstNode);
		Antlr3AstNode join_clause445 = default(Antlr3AstNode);
		Antlr3AstNode orderby_clause446 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "query_body_clause");
		DebugLocation(479, 17);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 120)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:479:18: ( from_clause | let_clause | where_clause | join_clause | orderby_clause )
			int alt128=5;
			try { DebugEnterDecision(128, false);
			switch (input.LA(1))
			{
			case 132:
				{
				alt128 = 1;
				}
				break;
			case 144:
				{
				alt128 = 2;
				}
				break;
			case 194:
				{
				alt128 = 3;
				}
				break;
			case 143:
				{
				alt128 = 4;
				}
				break;
			case 154:
				{
				alt128 = 5;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 128, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(128); }
			switch (alt128)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:480:2: from_clause
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(480, 2);
				PushFollow(Follow._from_clause_in_query_body_clause3389);
				from_clause442=from_clause();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, from_clause442.Tree, from_clause442, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:481:4: let_clause
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(481, 4);
				PushFollow(Follow._let_clause_in_query_body_clause3394);
				let_clause443=let_clause();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, let_clause443.Tree, let_clause443, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:482:4: where_clause
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(482, 4);
				PushFollow(Follow._where_clause_in_query_body_clause3399);
				where_clause444=where_clause();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, where_clause444.Tree, where_clause444, retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:483:4: join_clause
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(483, 4);
				PushFollow(Follow._join_clause_in_query_body_clause3404);
				join_clause445=join_clause();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, join_clause445.Tree, join_clause445, retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:484:4: orderby_clause
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(484, 4);
				PushFollow(Follow._orderby_clause_in_query_body_clause3409);
				orderby_clause446=orderby_clause();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, orderby_clause446.Tree, orderby_clause446, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("query_body_clause", 120);
			LeaveRule("query_body_clause", 120);
			LeaveRule_query_body_clause();
			if (state.backtracking > 0) { Memoize(input, 120, query_body_clause_StartIndex); }

		}
		DebugLocation(484, 17);
		} finally { DebugExitRule(GrammarFileName, "query_body_clause"); }
		return retval;

	}
	// $ANTLR end "query_body_clause"

	partial void EnterRule_from_clause();
	partial void LeaveRule_from_clause();
	// $ANTLR start "from_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:485:1: from_clause : 'from' ( type )? identifier 'in' expression ;
	[GrammarRule("from_clause")]
	private Antlr3AstNode from_clause()
	{
		EnterRule_from_clause();
		EnterRule("from_clause", 121);
		var retval = new Antlr3AstNode("from_clause");
		
		retval.Start = (IToken)input.LT(1);
		int from_clause_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal447 = default(IToken);
		IToken string_literal450 = default(IToken);
		Antlr3AstNode type448 = default(Antlr3AstNode);
		Antlr3AstNode identifier449 = default(Antlr3AstNode);
		Antlr3AstNode expression451 = default(Antlr3AstNode);

		object string_literal447_tree = default(object);
		object string_literal450_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "from_clause");
		DebugLocation(485, 49);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 121)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:485:12: ( 'from' ( type )? identifier 'in' expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:486:2: 'from' ( type )? identifier 'in' expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(486, 2);
			string_literal447=(IToken)Match(input,132,Follow._132_in_from_clause3416); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal447_tree = (object)adaptor.Create(string_literal447, retval);
			adaptor.AddChild(root_0, string_literal447_tree);
			}
			DebugLocation(486, 11);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:486:11: ( type )?
			int alt129=2;
			try { DebugEnterSubRule(129);
			try { DebugEnterDecision(129, false);
			int LA129_1 = input.LA(1);

			if ((LA129_1==103||LA129_1==106||LA129_1==109||LA129_1==114||LA129_1==119||LA129_1==129||LA129_1==138||LA129_1==146||LA129_1==151||LA129_1==169||LA129_1==173||LA129_1==177||(LA129_1>=185 && LA129_1<=186)||LA129_1==189||LA129_1==192))
			{
				alt129 = 1;
			}
			else if ((LA129_1==IDENTIFIER||LA129_1==95||(LA129_1>=97 && LA129_1<=98)||(LA129_1>=100 && LA129_1<=101)||LA129_1==105||LA129_1==117||LA129_1==120||LA129_1==122||LA129_1==126||LA129_1==132||LA129_1==135||LA129_1==141||(LA129_1>=143 && LA129_1<=144)||(LA129_1>=147 && LA129_1<=148)||LA129_1==152||LA129_1==154||LA129_1==157||LA129_1==160||LA129_1==162||LA129_1==167||(LA129_1>=171 && LA129_1<=172)||LA129_1==183||LA129_1==190||LA129_1==194||LA129_1==196))
			{
				int LA129_2 = input.LA(2);

				if ((LA129_2==DOT||LA129_2==IDENTIFIER||LA129_2==69||(LA129_2>=80 && LA129_2<=81)||LA129_2==89||LA129_2==91||LA129_2==95||(LA129_2>=97 && LA129_2<=98)||(LA129_2>=100 && LA129_2<=101)||LA129_2==105||LA129_2==117||LA129_2==120||LA129_2==122||LA129_2==126||LA129_2==132||LA129_2==135||LA129_2==141||(LA129_2>=143 && LA129_2<=144)||(LA129_2>=147 && LA129_2<=148)||LA129_2==152||LA129_2==154||LA129_2==157||LA129_2==160||LA129_2==162||LA129_2==167||(LA129_2>=171 && LA129_2<=172)||LA129_2==183||LA129_2==190||LA129_2==194||LA129_2==196))
				{
					alt129 = 1;
				}
			}
			} finally { DebugExitDecision(129); }
			switch (alt129)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:486:11: type
				{
				DebugLocation(486, 11);
				PushFollow(Follow._type_in_from_clause3420);
				type448=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type448.Tree, type448, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(129); }

			DebugLocation(486, 19);
			PushFollow(Follow._identifier_in_from_clause3425);
			identifier449=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier449.Tree, identifier449, retval);
			DebugLocation(486, 32);
			string_literal450=(IToken)Match(input,137,Follow._137_in_from_clause3429); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal450_tree = (object)adaptor.Create(string_literal450, retval);
			adaptor.AddChild(root_0, string_literal450_tree);
			}
			DebugLocation(486, 39);
			PushFollow(Follow._expression_in_from_clause3433);
			expression451=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression451.Tree, expression451, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("from_clause", 121);
			LeaveRule("from_clause", 121);
			LeaveRule_from_clause();
			if (state.backtracking > 0) { Memoize(input, 121, from_clause_StartIndex); }

		}
		DebugLocation(486, 49);
		} finally { DebugExitRule(GrammarFileName, "from_clause"); }
		return retval;

	}
	// $ANTLR end "from_clause"

	partial void EnterRule_join_clause();
	partial void LeaveRule_join_clause();
	// $ANTLR start "join_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:487:1: join_clause : 'join' ( type )? identifier 'in' expression 'on' expression 'equals' expression ( 'into' identifier )? ;
	[GrammarRule("join_clause")]
	private Antlr3AstNode join_clause()
	{
		EnterRule_join_clause();
		EnterRule("join_clause", 122);
		var retval = new Antlr3AstNode("join_clause");
		
		retval.Start = (IToken)input.LT(1);
		int join_clause_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal452 = default(IToken);
		IToken string_literal455 = default(IToken);
		IToken string_literal457 = default(IToken);
		IToken string_literal459 = default(IToken);
		IToken string_literal461 = default(IToken);
		Antlr3AstNode type453 = default(Antlr3AstNode);
		Antlr3AstNode identifier454 = default(Antlr3AstNode);
		Antlr3AstNode expression456 = default(Antlr3AstNode);
		Antlr3AstNode expression458 = default(Antlr3AstNode);
		Antlr3AstNode expression460 = default(Antlr3AstNode);
		Antlr3AstNode identifier462 = default(Antlr3AstNode);

		object string_literal452_tree = default(object);
		object string_literal455_tree = default(object);
		object string_literal457_tree = default(object);
		object string_literal459_tree = default(object);
		object string_literal461_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "join_clause");
		DebugLocation(487, 114);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 122)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:487:12: ( 'join' ( type )? identifier 'in' expression 'on' expression 'equals' expression ( 'into' identifier )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:488:2: 'join' ( type )? identifier 'in' expression 'on' expression 'equals' expression ( 'into' identifier )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(488, 2);
			string_literal452=(IToken)Match(input,143,Follow._143_in_join_clause3441); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal452_tree = (object)adaptor.Create(string_literal452, retval);
			adaptor.AddChild(root_0, string_literal452_tree);
			}
			DebugLocation(488, 11);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:488:11: ( type )?
			int alt130=2;
			try { DebugEnterSubRule(130);
			try { DebugEnterDecision(130, false);
			int LA130_1 = input.LA(1);

			if ((LA130_1==103||LA130_1==106||LA130_1==109||LA130_1==114||LA130_1==119||LA130_1==129||LA130_1==138||LA130_1==146||LA130_1==151||LA130_1==169||LA130_1==173||LA130_1==177||(LA130_1>=185 && LA130_1<=186)||LA130_1==189||LA130_1==192))
			{
				alt130 = 1;
			}
			else if ((LA130_1==IDENTIFIER||LA130_1==95||(LA130_1>=97 && LA130_1<=98)||(LA130_1>=100 && LA130_1<=101)||LA130_1==105||LA130_1==117||LA130_1==120||LA130_1==122||LA130_1==126||LA130_1==132||LA130_1==135||LA130_1==141||(LA130_1>=143 && LA130_1<=144)||(LA130_1>=147 && LA130_1<=148)||LA130_1==152||LA130_1==154||LA130_1==157||LA130_1==160||LA130_1==162||LA130_1==167||(LA130_1>=171 && LA130_1<=172)||LA130_1==183||LA130_1==190||LA130_1==194||LA130_1==196))
			{
				int LA130_2 = input.LA(2);

				if ((LA130_2==DOT||LA130_2==IDENTIFIER||LA130_2==69||(LA130_2>=80 && LA130_2<=81)||LA130_2==89||LA130_2==91||LA130_2==95||(LA130_2>=97 && LA130_2<=98)||(LA130_2>=100 && LA130_2<=101)||LA130_2==105||LA130_2==117||LA130_2==120||LA130_2==122||LA130_2==126||LA130_2==132||LA130_2==135||LA130_2==141||(LA130_2>=143 && LA130_2<=144)||(LA130_2>=147 && LA130_2<=148)||LA130_2==152||LA130_2==154||LA130_2==157||LA130_2==160||LA130_2==162||LA130_2==167||(LA130_2>=171 && LA130_2<=172)||LA130_2==183||LA130_2==190||LA130_2==194||LA130_2==196))
				{
					alt130 = 1;
				}
			}
			} finally { DebugExitDecision(130); }
			switch (alt130)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:488:11: type
				{
				DebugLocation(488, 11);
				PushFollow(Follow._type_in_join_clause3445);
				type453=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type453.Tree, type453, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(130); }

			DebugLocation(488, 19);
			PushFollow(Follow._identifier_in_join_clause3450);
			identifier454=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier454.Tree, identifier454, retval);
			DebugLocation(488, 32);
			string_literal455=(IToken)Match(input,137,Follow._137_in_join_clause3454); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal455_tree = (object)adaptor.Create(string_literal455, retval);
			adaptor.AddChild(root_0, string_literal455_tree);
			}
			DebugLocation(488, 39);
			PushFollow(Follow._expression_in_join_clause3458);
			expression456=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression456.Tree, expression456, retval);
			DebugLocation(488, 52);
			string_literal457=(IToken)Match(input,152,Follow._152_in_join_clause3462); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal457_tree = (object)adaptor.Create(string_literal457, retval);
			adaptor.AddChild(root_0, string_literal457_tree);
			}
			DebugLocation(488, 59);
			PushFollow(Follow._expression_in_join_clause3466);
			expression458=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression458.Tree, expression458, retval);
			DebugLocation(488, 72);
			string_literal459=(IToken)Match(input,122,Follow._122_in_join_clause3470); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal459_tree = (object)adaptor.Create(string_literal459, retval);
			adaptor.AddChild(root_0, string_literal459_tree);
			}
			DebugLocation(488, 83);
			PushFollow(Follow._expression_in_join_clause3474);
			expression460=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression460.Tree, expression460, retval);
			DebugLocation(488, 94);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:488:94: ( 'into' identifier )?
			int alt131=2;
			try { DebugEnterSubRule(131);
			try { DebugEnterDecision(131, false);
			int LA131_1 = input.LA(1);

			if ((LA131_1==141))
			{
				alt131 = 1;
			}
			} finally { DebugExitDecision(131); }
			switch (alt131)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:488:95: 'into' identifier
				{
				DebugLocation(488, 95);
				string_literal461=(IToken)Match(input,141,Follow._141_in_join_clause3477); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal461_tree = (object)adaptor.Create(string_literal461, retval);
				adaptor.AddChild(root_0, string_literal461_tree);
				}
				DebugLocation(488, 102);
				PushFollow(Follow._identifier_in_join_clause3479);
				identifier462=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier462.Tree, identifier462, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(131); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("join_clause", 122);
			LeaveRule("join_clause", 122);
			LeaveRule_join_clause();
			if (state.backtracking > 0) { Memoize(input, 122, join_clause_StartIndex); }

		}
		DebugLocation(488, 114);
		} finally { DebugExitRule(GrammarFileName, "join_clause"); }
		return retval;

	}
	// $ANTLR end "join_clause"

	partial void EnterRule_let_clause();
	partial void LeaveRule_let_clause();
	// $ANTLR start "let_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:489:1: let_clause : 'let' identifier '=' expression ;
	[GrammarRule("let_clause")]
	private Antlr3AstNode let_clause()
	{
		EnterRule_let_clause();
		EnterRule("let_clause", 123);
		var retval = new Antlr3AstNode("let_clause");
		
		retval.Start = (IToken)input.LT(1);
		int let_clause_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal463 = default(IToken);
		IToken char_literal465 = default(IToken);
		Antlr3AstNode identifier464 = default(Antlr3AstNode);
		Antlr3AstNode expression466 = default(Antlr3AstNode);

		object string_literal463_tree = default(object);
		object char_literal465_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "let_clause");
		DebugLocation(489, 38);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 123)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:489:11: ( 'let' identifier '=' expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:490:2: 'let' identifier '=' expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(490, 2);
			string_literal463=(IToken)Match(input,144,Follow._144_in_let_clause3489); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal463_tree = (object)adaptor.Create(string_literal463, retval);
			adaptor.AddChild(root_0, string_literal463_tree);
			}
			DebugLocation(490, 10);
			PushFollow(Follow._identifier_in_let_clause3493);
			identifier464=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier464.Tree, identifier464, retval);
			DebugLocation(490, 23);
			char_literal465=(IToken)Match(input,85,Follow._85_in_let_clause3497); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal465_tree = (object)adaptor.Create(char_literal465, retval);
			adaptor.AddChild(root_0, char_literal465_tree);
			}
			DebugLocation(490, 29);
			PushFollow(Follow._expression_in_let_clause3501);
			expression466=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression466.Tree, expression466, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("let_clause", 123);
			LeaveRule("let_clause", 123);
			LeaveRule_let_clause();
			if (state.backtracking > 0) { Memoize(input, 123, let_clause_StartIndex); }

		}
		DebugLocation(490, 38);
		} finally { DebugExitRule(GrammarFileName, "let_clause"); }
		return retval;

	}
	// $ANTLR end "let_clause"

	partial void EnterRule_orderby_clause();
	partial void LeaveRule_orderby_clause();
	// $ANTLR start "orderby_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:491:1: orderby_clause : 'orderby' ordering_list ;
	[GrammarRule("orderby_clause")]
	private Antlr3AstNode orderby_clause()
	{
		EnterRule_orderby_clause();
		EnterRule("orderby_clause", 124);
		var retval = new Antlr3AstNode("orderby_clause");
		
		retval.Start = (IToken)input.LT(1);
		int orderby_clause_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal467 = default(IToken);
		Antlr3AstNode ordering_list468 = default(Antlr3AstNode);

		object string_literal467_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "orderby_clause");
		DebugLocation(491, 27);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 124)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:491:15: ( 'orderby' ordering_list )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:492:2: 'orderby' ordering_list
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(492, 2);
			string_literal467=(IToken)Match(input,154,Follow._154_in_orderby_clause3508); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal467_tree = (object)adaptor.Create(string_literal467, retval);
			adaptor.AddChild(root_0, string_literal467_tree);
			}
			DebugLocation(492, 14);
			PushFollow(Follow._ordering_list_in_orderby_clause3512);
			ordering_list468=ordering_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, ordering_list468.Tree, ordering_list468, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("orderby_clause", 124);
			LeaveRule("orderby_clause", 124);
			LeaveRule_orderby_clause();
			if (state.backtracking > 0) { Memoize(input, 124, orderby_clause_StartIndex); }

		}
		DebugLocation(492, 27);
		} finally { DebugExitRule(GrammarFileName, "orderby_clause"); }
		return retval;

	}
	// $ANTLR end "orderby_clause"

	partial void EnterRule_ordering_list();
	partial void LeaveRule_ordering_list();
	// $ANTLR start "ordering_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:493:1: ordering_list : ordering ( ',' ordering )* ;
	[GrammarRule("ordering_list")]
	private Antlr3AstNode ordering_list()
	{
		EnterRule_ordering_list();
		EnterRule("ordering_list", 125);
		var retval = new Antlr3AstNode("ordering_list");
		
		retval.Start = (IToken)input.LT(1);
		int ordering_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal470 = default(IToken);
		Antlr3AstNode ordering469 = default(Antlr3AstNode);
		Antlr3AstNode ordering471 = default(Antlr3AstNode);

		object char_literal470_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "ordering_list");
		DebugLocation(493, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 125)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:493:14: ( ordering ( ',' ordering )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:494:2: ordering ( ',' ordering )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(494, 2);
			PushFollow(Follow._ordering_in_ordering_list3520);
			ordering469=ordering();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, ordering469.Tree, ordering469, retval);
			DebugLocation(494, 13);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:494:13: ( ',' ordering )*
			try { DebugEnterSubRule(132);
			while (true)
			{
				int alt132=2;
				try { DebugEnterDecision(132, false);
				int LA132_1 = input.LA(1);

				if ((LA132_1==74))
				{
					alt132 = 1;
				}


				} finally { DebugExitDecision(132); }
				switch ( alt132 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:494:14: ',' ordering
					{
					DebugLocation(494, 14);
					char_literal470=(IToken)Match(input,74,Follow._74_in_ordering_list3525); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal470_tree = (object)adaptor.Create(char_literal470, retval);
					adaptor.AddChild(root_0, char_literal470_tree);
					}
					DebugLocation(494, 20);
					PushFollow(Follow._ordering_in_ordering_list3529);
					ordering471=ordering();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, ordering471.Tree, ordering471, retval);

					}
					break;

				default:
					goto loop132;
				}
			}

			loop132:
				;

			} finally { DebugExitSubRule(132); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("ordering_list", 125);
			LeaveRule("ordering_list", 125);
			LeaveRule_ordering_list();
			if (state.backtracking > 0) { Memoize(input, 125, ordering_list_StartIndex); }

		}
		DebugLocation(494, 30);
		} finally { DebugExitRule(GrammarFileName, "ordering_list"); }
		return retval;

	}
	// $ANTLR end "ordering_list"

	partial void EnterRule_ordering();
	partial void LeaveRule_ordering();
	// $ANTLR start "ordering"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:495:1: ordering : expression ordering_direction ;
	[GrammarRule("ordering")]
	private Antlr3AstNode ordering()
	{
		EnterRule_ordering();
		EnterRule("ordering", 126);
		var retval = new Antlr3AstNode("ordering");
		
		retval.Start = (IToken)input.LT(1);
		int ordering_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode expression472 = default(Antlr3AstNode);
		Antlr3AstNode ordering_direction473 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "ordering");
		DebugLocation(495, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 126)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:495:9: ( expression ordering_direction )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:496:2: expression ordering_direction
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(496, 2);
			PushFollow(Follow._expression_in_ordering3539);
			expression472=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression472.Tree, expression472, retval);
			DebugLocation(496, 16);
			PushFollow(Follow._ordering_direction_in_ordering3544);
			ordering_direction473=ordering_direction();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, ordering_direction473.Tree, ordering_direction473, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("ordering", 126);
			LeaveRule("ordering", 126);
			LeaveRule_ordering();
			if (state.backtracking > 0) { Memoize(input, 126, ordering_StartIndex); }

		}
		DebugLocation(497, 1);
		} finally { DebugExitRule(GrammarFileName, "ordering"); }
		return retval;

	}
	// $ANTLR end "ordering"

	partial void EnterRule_ordering_direction();
	partial void LeaveRule_ordering_direction();
	// $ANTLR start "ordering_direction"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:498:1: ordering_direction : ( 'ascending' | 'descending' );
	[GrammarRule("ordering_direction")]
	private Antlr3AstNode ordering_direction()
	{
		EnterRule_ordering_direction();
		EnterRule("ordering_direction", 127);
		var retval = new Antlr3AstNode("ordering_direction");
		
		retval.Start = (IToken)input.LT(1);
		int ordering_direction_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set474 = default(IToken);

		object set474_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "ordering_direction");
		DebugLocation(498, 16);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 127)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:498:19: ( 'ascending' | 'descending' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(498, 19);

			set474=(IToken)input.LT(1);
			if (input.LA(1)==100||input.LA(1)==117)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set474, retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("ordering_direction", 127);
			LeaveRule("ordering_direction", 127);
			LeaveRule_ordering_direction();
			if (state.backtracking > 0) { Memoize(input, 127, ordering_direction_StartIndex); }

		}
		DebugLocation(500, 16);
		} finally { DebugExitRule(GrammarFileName, "ordering_direction"); }
		return retval;

	}
	// $ANTLR end "ordering_direction"

	partial void EnterRule_select_or_group_clause();
	partial void LeaveRule_select_or_group_clause();
	// $ANTLR start "select_or_group_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:501:1: select_or_group_clause : ( select_clause | group_clause );
	[GrammarRule("select_or_group_clause")]
	private Antlr3AstNode select_or_group_clause()
	{
		EnterRule_select_or_group_clause();
		EnterRule("select_or_group_clause", 128);
		var retval = new Antlr3AstNode("select_or_group_clause");
		
		retval.Start = (IToken)input.LT(1);
		int select_or_group_clause_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode select_clause475 = default(Antlr3AstNode);
		Antlr3AstNode group_clause476 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "select_or_group_clause");
		DebugLocation(501, 16);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 128)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:501:23: ( select_clause | group_clause )
			int alt133=2;
			try { DebugEnterDecision(133, false);
			int LA133_1 = input.LA(1);

			if ((LA133_1==171))
			{
				alt133 = 1;
			}
			else if ((LA133_1==135))
			{
				alt133 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 133, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(133); }
			switch (alt133)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:502:2: select_clause
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(502, 2);
				PushFollow(Follow._select_clause_in_select_or_group_clause3566);
				select_clause475=select_clause();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, select_clause475.Tree, select_clause475, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:503:4: group_clause
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(503, 4);
				PushFollow(Follow._group_clause_in_select_or_group_clause3571);
				group_clause476=group_clause();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, group_clause476.Tree, group_clause476, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("select_or_group_clause", 128);
			LeaveRule("select_or_group_clause", 128);
			LeaveRule_select_or_group_clause();
			if (state.backtracking > 0) { Memoize(input, 128, select_or_group_clause_StartIndex); }

		}
		DebugLocation(503, 16);
		} finally { DebugExitRule(GrammarFileName, "select_or_group_clause"); }
		return retval;

	}
	// $ANTLR end "select_or_group_clause"

	partial void EnterRule_select_clause();
	partial void LeaveRule_select_clause();
	// $ANTLR start "select_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:504:1: select_clause : 'select' expression ;
	[GrammarRule("select_clause")]
	private Antlr3AstNode select_clause()
	{
		EnterRule_select_clause();
		EnterRule("select_clause", 129);
		var retval = new Antlr3AstNode("select_clause");
		
		retval.Start = (IToken)input.LT(1);
		int select_clause_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal477 = default(IToken);
		Antlr3AstNode expression478 = default(Antlr3AstNode);

		object string_literal477_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "select_clause");
		DebugLocation(504, 23);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 129)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:504:14: ( 'select' expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:505:2: 'select' expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(505, 2);
			string_literal477=(IToken)Match(input,171,Follow._171_in_select_clause3579); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal477_tree = (object)adaptor.Create(string_literal477, retval);
			adaptor.AddChild(root_0, string_literal477_tree);
			}
			DebugLocation(505, 13);
			PushFollow(Follow._expression_in_select_clause3583);
			expression478=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression478.Tree, expression478, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("select_clause", 129);
			LeaveRule("select_clause", 129);
			LeaveRule_select_clause();
			if (state.backtracking > 0) { Memoize(input, 129, select_clause_StartIndex); }

		}
		DebugLocation(505, 23);
		} finally { DebugExitRule(GrammarFileName, "select_clause"); }
		return retval;

	}
	// $ANTLR end "select_clause"

	partial void EnterRule_group_clause();
	partial void LeaveRule_group_clause();
	// $ANTLR start "group_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:506:1: group_clause : 'group' expression 'by' expression ;
	[GrammarRule("group_clause")]
	private Antlr3AstNode group_clause()
	{
		EnterRule_group_clause();
		EnterRule("group_clause", 130);
		var retval = new Antlr3AstNode("group_clause");
		
		retval.Start = (IToken)input.LT(1);
		int group_clause_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal479 = default(IToken);
		IToken string_literal481 = default(IToken);
		Antlr3AstNode expression480 = default(Antlr3AstNode);
		Antlr3AstNode expression482 = default(Antlr3AstNode);

		object string_literal479_tree = default(object);
		object string_literal481_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "group_clause");
		DebugLocation(506, 42);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 130)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:506:13: ( 'group' expression 'by' expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:507:2: 'group' expression 'by' expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(507, 2);
			string_literal479=(IToken)Match(input,135,Follow._135_in_group_clause3591); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal479_tree = (object)adaptor.Create(string_literal479, retval);
			adaptor.AddChild(root_0, string_literal479_tree);
			}
			DebugLocation(507, 12);
			PushFollow(Follow._expression_in_group_clause3595);
			expression480=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression480.Tree, expression480, retval);
			DebugLocation(507, 25);
			string_literal481=(IToken)Match(input,105,Follow._105_in_group_clause3599); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal481_tree = (object)adaptor.Create(string_literal481, retval);
			adaptor.AddChild(root_0, string_literal481_tree);
			}
			DebugLocation(507, 32);
			PushFollow(Follow._expression_in_group_clause3603);
			expression482=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression482.Tree, expression482, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("group_clause", 130);
			LeaveRule("group_clause", 130);
			LeaveRule_group_clause();
			if (state.backtracking > 0) { Memoize(input, 130, group_clause_StartIndex); }

		}
		DebugLocation(507, 42);
		} finally { DebugExitRule(GrammarFileName, "group_clause"); }
		return retval;

	}
	// $ANTLR end "group_clause"

	partial void EnterRule_where_clause();
	partial void LeaveRule_where_clause();
	// $ANTLR start "where_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:508:1: where_clause : 'where' boolean_expression ;
	[GrammarRule("where_clause")]
	private Antlr3AstNode where_clause()
	{
		EnterRule_where_clause();
		EnterRule("where_clause", 131);
		var retval = new Antlr3AstNode("where_clause");
		
		retval.Start = (IToken)input.LT(1);
		int where_clause_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal483 = default(IToken);
		Antlr3AstNode boolean_expression484 = default(Antlr3AstNode);

		object string_literal483_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "where_clause");
		DebugLocation(508, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 131)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:508:13: ( 'where' boolean_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:509:2: 'where' boolean_expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(509, 2);
			string_literal483=(IToken)Match(input,194,Follow._194_in_where_clause3611); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal483_tree = (object)adaptor.Create(string_literal483, retval);
			adaptor.AddChild(root_0, string_literal483_tree);
			}
			DebugLocation(509, 12);
			PushFollow(Follow._boolean_expression_in_where_clause3615);
			boolean_expression484=boolean_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, boolean_expression484.Tree, boolean_expression484, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("where_clause", 131);
			LeaveRule("where_clause", 131);
			LeaveRule_where_clause();
			if (state.backtracking > 0) { Memoize(input, 131, where_clause_StartIndex); }

		}
		DebugLocation(509, 30);
		} finally { DebugExitRule(GrammarFileName, "where_clause"); }
		return retval;

	}
	// $ANTLR end "where_clause"

	partial void EnterRule_boolean_expression();
	partial void LeaveRule_boolean_expression();
	// $ANTLR start "boolean_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:510:1: boolean_expression : expression ;
	[GrammarRule("boolean_expression")]
	private Antlr3AstNode boolean_expression()
	{
		EnterRule_boolean_expression();
		EnterRule("boolean_expression", 132);
		var retval = new Antlr3AstNode("boolean_expression");
		
		retval.Start = (IToken)input.LT(1);
		int boolean_expression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode expression485 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "boolean_expression");
		DebugLocation(510, 11);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 132)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:510:19: ( expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:511:2: expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(511, 2);
			PushFollow(Follow._expression_in_boolean_expression3623);
			expression485=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression485.Tree, expression485, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("boolean_expression", 132);
			LeaveRule("boolean_expression", 132);
			LeaveRule_boolean_expression();
			if (state.backtracking > 0) { Memoize(input, 132, boolean_expression_StartIndex); }

		}
		DebugLocation(511, 11);
		} finally { DebugExitRule(GrammarFileName, "boolean_expression"); }
		return retval;

	}
	// $ANTLR end "boolean_expression"

	partial void EnterRule_global_attributes();
	partial void LeaveRule_global_attributes();
	// $ANTLR start "global_attributes"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:516:1: global_attributes : ( global_attribute )+ ;
	[GrammarRule("global_attributes")]
	private Antlr3AstNode global_attributes()
	{
		EnterRule_global_attributes();
		EnterRule("global_attributes", 133);
		var retval = new Antlr3AstNode("global_attributes");
		
		retval.Start = (IToken)input.LT(1);
		int global_attributes_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode global_attribute486 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "global_attributes");
		DebugLocation(516, 19);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 133)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:516:18: ( ( global_attribute )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:517:2: ( global_attribute )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(517, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:517:2: ( global_attribute )+
			int cnt134=0;
			try { DebugEnterSubRule(134);
			while (true)
			{
				int alt134=2;
				try { DebugEnterDecision(134, false);
				int LA134_1 = input.LA(1);

				if ((LA134_1==91))
				{
					int LA134_2 = input.LA(2);

					if ((LA134_2==101||LA134_2==148))
					{
						int LA134_3 = input.LA(3);

						if ((LA134_3==79))
						{
							alt134 = 1;
						}


					}


				}


				} finally { DebugExitDecision(134); }
				switch (alt134)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:517:2: global_attribute
					{
					DebugLocation(517, 2);
					PushFollow(Follow._global_attribute_in_global_attributes3635);
					global_attribute486=global_attribute();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, global_attribute486.Tree, global_attribute486, retval);

					}
					break;

				default:
					if (cnt134 >= 1)
						goto loop134;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee134 = new EarlyExitException( 134, input );
					DebugRecognitionException(eee134);
					throw eee134;
				}
				cnt134++;
			}
			loop134:
				;

			} finally { DebugExitSubRule(134); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("global_attributes", 133);
			LeaveRule("global_attributes", 133);
			LeaveRule_global_attributes();
			if (state.backtracking > 0) { Memoize(input, 133, global_attributes_StartIndex); }

		}
		DebugLocation(517, 19);
		} finally { DebugExitRule(GrammarFileName, "global_attributes"); }
		return retval;

	}
	// $ANTLR end "global_attributes"

	partial void EnterRule_global_attribute();
	partial void LeaveRule_global_attribute();
	// $ANTLR start "global_attribute"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:518:1: global_attribute : '[' global_attribute_target_specifier attribute_list ( ',' )? ']' ;
	[GrammarRule("global_attribute")]
	private Antlr3AstNode global_attribute()
	{
		EnterRule_global_attribute();
		EnterRule("global_attribute", 134);
		var retval = new Antlr3AstNode("global_attribute");
		
		retval.Start = (IToken)input.LT(1);
		int global_attribute_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal487 = default(IToken);
		IToken char_literal490 = default(IToken);
		IToken char_literal491 = default(IToken);
		Antlr3AstNode global_attribute_target_specifier488 = default(Antlr3AstNode);
		Antlr3AstNode attribute_list489 = default(Antlr3AstNode);

		object char_literal487_tree = default(object);
		object char_literal490_tree = default(object);
		object char_literal491_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "global_attribute");
		DebugLocation(518, 71);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 134)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:518:17: ( '[' global_attribute_target_specifier attribute_list ( ',' )? ']' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:519:2: '[' global_attribute_target_specifier attribute_list ( ',' )? ']'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(519, 2);
			char_literal487=(IToken)Match(input,91,Follow._91_in_global_attribute3645); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal487_tree = (object)adaptor.Create(char_literal487, retval);
			adaptor.AddChild(root_0, char_literal487_tree);
			}
			DebugLocation(519, 8);
			PushFollow(Follow._global_attribute_target_specifier_in_global_attribute3649);
			global_attribute_target_specifier488=global_attribute_target_specifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, global_attribute_target_specifier488.Tree, global_attribute_target_specifier488, retval);
			DebugLocation(519, 44);
			PushFollow(Follow._attribute_list_in_global_attribute3653);
			attribute_list489=attribute_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, attribute_list489.Tree, attribute_list489, retval);
			DebugLocation(519, 61);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:519:61: ( ',' )?
			int alt135=2;
			try { DebugEnterSubRule(135);
			try { DebugEnterDecision(135, false);
			int LA135_1 = input.LA(1);

			if ((LA135_1==74))
			{
				alt135 = 1;
			}
			} finally { DebugExitDecision(135); }
			switch (alt135)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:519:61: ','
				{
				DebugLocation(519, 61);
				char_literal490=(IToken)Match(input,74,Follow._74_in_global_attribute3657); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal490_tree = (object)adaptor.Create(char_literal490, retval);
				adaptor.AddChild(root_0, char_literal490_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(135); }

			DebugLocation(519, 68);
			char_literal491=(IToken)Match(input,92,Follow._92_in_global_attribute3662); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal491_tree = (object)adaptor.Create(char_literal491, retval);
			adaptor.AddChild(root_0, char_literal491_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("global_attribute", 134);
			LeaveRule("global_attribute", 134);
			LeaveRule_global_attribute();
			if (state.backtracking > 0) { Memoize(input, 134, global_attribute_StartIndex); }

		}
		DebugLocation(519, 71);
		} finally { DebugExitRule(GrammarFileName, "global_attribute"); }
		return retval;

	}
	// $ANTLR end "global_attribute"

	partial void EnterRule_global_attribute_target_specifier();
	partial void LeaveRule_global_attribute_target_specifier();
	// $ANTLR start "global_attribute_target_specifier"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:520:1: global_attribute_target_specifier : global_attribute_target ':' ;
	[GrammarRule("global_attribute_target_specifier")]
	private Antlr3AstNode global_attribute_target_specifier()
	{
		EnterRule_global_attribute_target_specifier();
		EnterRule("global_attribute_target_specifier", 135);
		var retval = new Antlr3AstNode("global_attribute_target_specifier");
		
		retval.Start = (IToken)input.LT(1);
		int global_attribute_target_specifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal493 = default(IToken);
		Antlr3AstNode global_attribute_target492 = default(Antlr3AstNode);

		object char_literal493_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "global_attribute_target_specifier");
		DebugLocation(520, 31);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 135)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:520:34: ( global_attribute_target ':' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:521:2: global_attribute_target ':'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(521, 2);
			PushFollow(Follow._global_attribute_target_in_global_attribute_target_specifier3671);
			global_attribute_target492=global_attribute_target();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, global_attribute_target492.Tree, global_attribute_target492, retval);
			DebugLocation(521, 28);
			char_literal493=(IToken)Match(input,79,Follow._79_in_global_attribute_target_specifier3675); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal493_tree = (object)adaptor.Create(char_literal493, retval);
			adaptor.AddChild(root_0, char_literal493_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("global_attribute_target_specifier", 135);
			LeaveRule("global_attribute_target_specifier", 135);
			LeaveRule_global_attribute_target_specifier();
			if (state.backtracking > 0) { Memoize(input, 135, global_attribute_target_specifier_StartIndex); }

		}
		DebugLocation(521, 31);
		} finally { DebugExitRule(GrammarFileName, "global_attribute_target_specifier"); }
		return retval;

	}
	// $ANTLR end "global_attribute_target_specifier"

	partial void EnterRule_global_attribute_target();
	partial void LeaveRule_global_attribute_target();
	// $ANTLR start "global_attribute_target"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:522:1: global_attribute_target : ( 'assembly' | 'module' );
	[GrammarRule("global_attribute_target")]
	private Antlr3AstNode global_attribute_target()
	{
		EnterRule_global_attribute_target();
		EnterRule("global_attribute_target", 136);
		var retval = new Antlr3AstNode("global_attribute_target");
		
		retval.Start = (IToken)input.LT(1);
		int global_attribute_target_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set494 = default(IToken);

		object set494_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "global_attribute_target");
		DebugLocation(522, 23);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 136)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:522:24: ( 'assembly' | 'module' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(522, 24);

			set494=(IToken)input.LT(1);
			if (input.LA(1)==101||input.LA(1)==148)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set494, retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("global_attribute_target", 136);
			LeaveRule("global_attribute_target", 136);
			LeaveRule_global_attribute_target();
			if (state.backtracking > 0) { Memoize(input, 136, global_attribute_target_StartIndex); }

		}
		DebugLocation(523, 23);
		} finally { DebugExitRule(GrammarFileName, "global_attribute_target"); }
		return retval;

	}
	// $ANTLR end "global_attribute_target"

	partial void EnterRule_attributes();
	partial void LeaveRule_attributes();
	// $ANTLR start "attributes"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:524:1: attributes : attribute_sections ;
	[GrammarRule("attributes")]
	private Antlr3AstNode attributes()
	{
		EnterRule_attributes();
		EnterRule("attributes", 137);
		var retval = new Antlr3AstNode("attributes");
		
		retval.Start = (IToken)input.LT(1);
		int attributes_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode attribute_sections495 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "attributes");
		DebugLocation(524, 20);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 137)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:524:11: ( attribute_sections )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:525:2: attribute_sections
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(525, 2);
			PushFollow(Follow._attribute_sections_in_attributes3697);
			attribute_sections495=attribute_sections();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, attribute_sections495.Tree, attribute_sections495, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("attributes", 137);
			LeaveRule("attributes", 137);
			LeaveRule_attributes();
			if (state.backtracking > 0) { Memoize(input, 137, attributes_StartIndex); }

		}
		DebugLocation(525, 20);
		} finally { DebugExitRule(GrammarFileName, "attributes"); }
		return retval;

	}
	// $ANTLR end "attributes"

	partial void EnterRule_attribute_sections();
	partial void LeaveRule_attribute_sections();
	// $ANTLR start "attribute_sections"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:526:1: attribute_sections : ( attribute_section )+ ;
	[GrammarRule("attribute_sections")]
	private Antlr3AstNode attribute_sections()
	{
		EnterRule_attribute_sections();
		EnterRule("attribute_sections", 138);
		var retval = new Antlr3AstNode("attribute_sections");
		
		retval.Start = (IToken)input.LT(1);
		int attribute_sections_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode attribute_section496 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "attribute_sections");
		DebugLocation(526, 20);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 138)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:526:19: ( ( attribute_section )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:527:2: ( attribute_section )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(527, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:527:2: ( attribute_section )+
			int cnt136=0;
			try { DebugEnterSubRule(136);
			while (true)
			{
				int alt136=2;
				try { DebugEnterDecision(136, false);
				int LA136_1 = input.LA(1);

				if ((LA136_1==91))
				{
					alt136 = 1;
				}


				} finally { DebugExitDecision(136); }
				switch (alt136)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:527:2: attribute_section
					{
					DebugLocation(527, 2);
					PushFollow(Follow._attribute_section_in_attribute_sections3706);
					attribute_section496=attribute_section();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, attribute_section496.Tree, attribute_section496, retval);

					}
					break;

				default:
					if (cnt136 >= 1)
						goto loop136;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee136 = new EarlyExitException( 136, input );
					DebugRecognitionException(eee136);
					throw eee136;
				}
				cnt136++;
			}
			loop136:
				;

			} finally { DebugExitSubRule(136); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("attribute_sections", 138);
			LeaveRule("attribute_sections", 138);
			LeaveRule_attribute_sections();
			if (state.backtracking > 0) { Memoize(input, 138, attribute_sections_StartIndex); }

		}
		DebugLocation(527, 20);
		} finally { DebugExitRule(GrammarFileName, "attribute_sections"); }
		return retval;

	}
	// $ANTLR end "attribute_sections"

	partial void EnterRule_attribute_section();
	partial void LeaveRule_attribute_section();
	// $ANTLR start "attribute_section"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:528:1: attribute_section : '[' ( attribute_target_specifier )? attribute_list ( ',' )? ']' ;
	[GrammarRule("attribute_section")]
	private Antlr3AstNode attribute_section()
	{
		EnterRule_attribute_section();
		EnterRule("attribute_section", 139);
		var retval = new Antlr3AstNode("attribute_section");
		
		retval.Start = (IToken)input.LT(1);
		int attribute_section_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal497 = default(IToken);
		IToken char_literal500 = default(IToken);
		IToken char_literal501 = default(IToken);
		Antlr3AstNode attribute_target_specifier498 = default(Antlr3AstNode);
		Antlr3AstNode attribute_list499 = default(Antlr3AstNode);

		object char_literal497_tree = default(object);
		object char_literal500_tree = default(object);
		object char_literal501_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "attribute_section");
		DebugLocation(528, 65);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 139)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:528:18: ( '[' ( attribute_target_specifier )? attribute_list ( ',' )? ']' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:529:2: '[' ( attribute_target_specifier )? attribute_list ( ',' )? ']'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(529, 2);
			char_literal497=(IToken)Match(input,91,Follow._91_in_attribute_section3716); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal497_tree = (object)adaptor.Create(char_literal497, retval);
			adaptor.AddChild(root_0, char_literal497_tree);
			}
			DebugLocation(529, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:529:8: ( attribute_target_specifier )?
			int alt137=2;
			try { DebugEnterSubRule(137);
			try { DebugEnterDecision(137, false);
			int LA137_1 = input.LA(1);

			if ((LA137_1==126||LA137_1==147||LA137_1==157||LA137_1==162||LA137_1==183))
			{
				int LA137_2 = input.LA(2);

				if ((LA137_2==79))
				{
					alt137 = 1;
				}
			}
			else if ((LA137_1==123||LA137_1==168))
			{
				alt137 = 1;
			}
			} finally { DebugExitDecision(137); }
			switch (alt137)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:529:8: attribute_target_specifier
				{
				DebugLocation(529, 8);
				PushFollow(Follow._attribute_target_specifier_in_attribute_section3720);
				attribute_target_specifier498=attribute_target_specifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, attribute_target_specifier498.Tree, attribute_target_specifier498, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(137); }

			DebugLocation(529, 38);
			PushFollow(Follow._attribute_list_in_attribute_section3725);
			attribute_list499=attribute_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, attribute_list499.Tree, attribute_list499, retval);
			DebugLocation(529, 55);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:529:55: ( ',' )?
			int alt138=2;
			try { DebugEnterSubRule(138);
			try { DebugEnterDecision(138, false);
			int LA138_1 = input.LA(1);

			if ((LA138_1==74))
			{
				alt138 = 1;
			}
			} finally { DebugExitDecision(138); }
			switch (alt138)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:529:55: ','
				{
				DebugLocation(529, 55);
				char_literal500=(IToken)Match(input,74,Follow._74_in_attribute_section3729); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal500_tree = (object)adaptor.Create(char_literal500, retval);
				adaptor.AddChild(root_0, char_literal500_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(138); }

			DebugLocation(529, 62);
			char_literal501=(IToken)Match(input,92,Follow._92_in_attribute_section3734); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal501_tree = (object)adaptor.Create(char_literal501, retval);
			adaptor.AddChild(root_0, char_literal501_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("attribute_section", 139);
			LeaveRule("attribute_section", 139);
			LeaveRule_attribute_section();
			if (state.backtracking > 0) { Memoize(input, 139, attribute_section_StartIndex); }

		}
		DebugLocation(529, 65);
		} finally { DebugExitRule(GrammarFileName, "attribute_section"); }
		return retval;

	}
	// $ANTLR end "attribute_section"

	partial void EnterRule_attribute_target_specifier();
	partial void LeaveRule_attribute_target_specifier();
	// $ANTLR start "attribute_target_specifier"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:530:1: attribute_target_specifier : attribute_target ':' ;
	[GrammarRule("attribute_target_specifier")]
	private Antlr3AstNode attribute_target_specifier()
	{
		EnterRule_attribute_target_specifier();
		EnterRule("attribute_target_specifier", 140);
		var retval = new Antlr3AstNode("attribute_target_specifier");
		
		retval.Start = (IToken)input.LT(1);
		int attribute_target_specifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal503 = default(IToken);
		Antlr3AstNode attribute_target502 = default(Antlr3AstNode);

		object char_literal503_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "attribute_target_specifier");
		DebugLocation(530, 24);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 140)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:530:27: ( attribute_target ':' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:531:2: attribute_target ':'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(531, 2);
			PushFollow(Follow._attribute_target_in_attribute_target_specifier3743);
			attribute_target502=attribute_target();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, attribute_target502.Tree, attribute_target502, retval);
			DebugLocation(531, 21);
			char_literal503=(IToken)Match(input,79,Follow._79_in_attribute_target_specifier3747); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal503_tree = (object)adaptor.Create(char_literal503, retval);
			adaptor.AddChild(root_0, char_literal503_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("attribute_target_specifier", 140);
			LeaveRule("attribute_target_specifier", 140);
			LeaveRule_attribute_target_specifier();
			if (state.backtracking > 0) { Memoize(input, 140, attribute_target_specifier_StartIndex); }

		}
		DebugLocation(531, 24);
		} finally { DebugExitRule(GrammarFileName, "attribute_target_specifier"); }
		return retval;

	}
	// $ANTLR end "attribute_target_specifier"

	partial void EnterRule_attribute_target();
	partial void LeaveRule_attribute_target();
	// $ANTLR start "attribute_target"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:532:1: attribute_target : ( 'field' | 'event' | 'method' | 'param' | 'property' | 'return' | 'type' );
	[GrammarRule("attribute_target")]
	private Antlr3AstNode attribute_target()
	{
		EnterRule_attribute_target();
		EnterRule("attribute_target", 141);
		var retval = new Antlr3AstNode("attribute_target");
		
		retval.Start = (IToken)input.LT(1);
		int attribute_target_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set504 = default(IToken);

		object set504_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "attribute_target");
		DebugLocation(532, 73);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 141)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:532:17: ( 'field' | 'event' | 'method' | 'param' | 'property' | 'return' | 'type' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(532, 17);

			set504=(IToken)input.LT(1);
			if (input.LA(1)==123||input.LA(1)==126||input.LA(1)==147||input.LA(1)==157||input.LA(1)==162||input.LA(1)==168||input.LA(1)==183)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set504, retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("attribute_target", 141);
			LeaveRule("attribute_target", 141);
			LeaveRule_attribute_target();
			if (state.backtracking > 0) { Memoize(input, 141, attribute_target_StartIndex); }

		}
		DebugLocation(533, 73);
		} finally { DebugExitRule(GrammarFileName, "attribute_target"); }
		return retval;

	}
	// $ANTLR end "attribute_target"

	partial void EnterRule_attribute_list();
	partial void LeaveRule_attribute_list();
	// $ANTLR start "attribute_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:534:1: attribute_list : attribute ( ',' attribute )* ;
	[GrammarRule("attribute_list")]
	private Antlr3AstNode attribute_list()
	{
		EnterRule_attribute_list();
		EnterRule("attribute_list", 142);
		var retval = new Antlr3AstNode("attribute_list");
		
		retval.Start = (IToken)input.LT(1);
		int attribute_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal506 = default(IToken);
		Antlr3AstNode attribute505 = default(Antlr3AstNode);
		Antlr3AstNode attribute507 = default(Antlr3AstNode);

		object char_literal506_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "attribute_list");
		DebugLocation(534, 28);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 142)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:534:15: ( attribute ( ',' attribute )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:535:2: attribute ( ',' attribute )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(535, 2);
			PushFollow(Follow._attribute_in_attribute_list3789);
			attribute505=attribute();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, attribute505.Tree, attribute505, retval);
			DebugLocation(535, 12);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:535:12: ( ',' attribute )*
			try { DebugEnterSubRule(139);
			while (true)
			{
				int alt139=2;
				try { DebugEnterDecision(139, false);
				int LA139_1 = input.LA(1);

				if ((LA139_1==74))
				{
					int LA139_2 = input.LA(2);

					if ((LA139_2==IDENTIFIER||LA139_2==95||(LA139_2>=97 && LA139_2<=98)||(LA139_2>=100 && LA139_2<=101)||LA139_2==105||LA139_2==117||LA139_2==120||LA139_2==122||LA139_2==126||LA139_2==132||LA139_2==135||LA139_2==141||(LA139_2>=143 && LA139_2<=144)||(LA139_2>=147 && LA139_2<=148)||LA139_2==152||LA139_2==154||LA139_2==157||LA139_2==160||LA139_2==162||LA139_2==167||(LA139_2>=171 && LA139_2<=172)||LA139_2==183||LA139_2==190||LA139_2==194||LA139_2==196))
					{
						alt139 = 1;
					}


				}


				} finally { DebugExitDecision(139); }
				switch ( alt139 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:535:13: ',' attribute
					{
					DebugLocation(535, 13);
					char_literal506=(IToken)Match(input,74,Follow._74_in_attribute_list3792); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal506_tree = (object)adaptor.Create(char_literal506, retval);
					adaptor.AddChild(root_0, char_literal506_tree);
					}
					DebugLocation(535, 17);
					PushFollow(Follow._attribute_in_attribute_list3794);
					attribute507=attribute();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, attribute507.Tree, attribute507, retval);

					}
					break;

				default:
					goto loop139;
				}
			}

			loop139:
				;

			} finally { DebugExitSubRule(139); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("attribute_list", 142);
			LeaveRule("attribute_list", 142);
			LeaveRule_attribute_list();
			if (state.backtracking > 0) { Memoize(input, 142, attribute_list_StartIndex); }

		}
		DebugLocation(535, 28);
		} finally { DebugExitRule(GrammarFileName, "attribute_list"); }
		return retval;

	}
	// $ANTLR end "attribute_list"

	partial void EnterRule_attribute();
	partial void LeaveRule_attribute();
	// $ANTLR start "attribute"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:536:1: attribute : type_name ( attribute_arguments )? ;
	[GrammarRule("attribute")]
	private Antlr3AstNode attribute()
	{
		EnterRule_attribute();
		EnterRule("attribute", 143);
		var retval = new Antlr3AstNode("attribute");
		
		retval.Start = (IToken)input.LT(1);
		int attribute_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode type_name508 = default(Antlr3AstNode);
		Antlr3AstNode attribute_arguments509 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "attribute");
		DebugLocation(536, 34);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 143)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:536:10: ( type_name ( attribute_arguments )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:537:2: type_name ( attribute_arguments )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(537, 2);
			PushFollow(Follow._type_name_in_attribute3806);
			type_name508=type_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_name508.Tree, type_name508, retval);
			DebugLocation(537, 14);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:537:14: ( attribute_arguments )?
			int alt140=2;
			try { DebugEnterSubRule(140);
			try { DebugEnterDecision(140, false);
			int LA140_1 = input.LA(1);

			if ((LA140_1==68))
			{
				alt140 = 1;
			}
			} finally { DebugExitDecision(140); }
			switch (alt140)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:537:14: attribute_arguments
				{
				DebugLocation(537, 14);
				PushFollow(Follow._attribute_arguments_in_attribute3810);
				attribute_arguments509=attribute_arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, attribute_arguments509.Tree, attribute_arguments509, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(140); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("attribute", 143);
			LeaveRule("attribute", 143);
			LeaveRule_attribute();
			if (state.backtracking > 0) { Memoize(input, 143, attribute_StartIndex); }

		}
		DebugLocation(537, 34);
		} finally { DebugExitRule(GrammarFileName, "attribute"); }
		return retval;

	}
	// $ANTLR end "attribute"

	partial void EnterRule_attribute_arguments();
	partial void LeaveRule_attribute_arguments();
	// $ANTLR start "attribute_arguments"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:539:1: attribute_arguments : '(' ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' ) ;
	[GrammarRule("attribute_arguments")]
	private Antlr3AstNode attribute_arguments()
	{
		EnterRule_attribute_arguments();
		EnterRule("attribute_arguments", 144);
		var retval = new Antlr3AstNode("attribute_arguments");
		
		retval.Start = (IToken)input.LT(1);
		int attribute_arguments_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal510 = default(IToken);
		IToken char_literal511 = default(IToken);
		IToken char_literal514 = default(IToken);
		IToken char_literal516 = default(IToken);
		Antlr3AstNode positional_argument512 = default(Antlr3AstNode);
		Antlr3AstNode named_argument513 = default(Antlr3AstNode);
		Antlr3AstNode positional_argument515 = default(Antlr3AstNode);

		object char_literal510_tree = default(object);
		object char_literal511_tree = default(object);
		object char_literal514_tree = default(object);
		object char_literal516_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "attribute_arguments");
		DebugLocation(539, 5);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 144)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:539:20: ( '(' ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:540:2: '(' ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(540, 2);
			char_literal510=(IToken)Match(input,68,Follow._68_in_attribute_arguments3821); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal510_tree = (object)adaptor.Create(char_literal510, retval);
			adaptor.AddChild(root_0, char_literal510_tree);
			}
			DebugLocation(540, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:540:8: ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' )
			int alt142=2;
			try { DebugEnterSubRule(142);
			try { DebugEnterDecision(142, false);
			int LA142_1 = input.LA(1);

			if ((LA142_1==RPAREN))
			{
				alt142 = 1;
			}
			else if ((LA142_1==Character_literal||LA142_1==FALSE||(LA142_1>=Hex_number && LA142_1<=IDENTIFIER)||(LA142_1>=MINUS && LA142_1<=NUMBER)||LA142_1==Real_literal||LA142_1==STRINGLITERAL||LA142_1==TRUE||LA142_1==Verbatim_string_literal||LA142_1==61||LA142_1==66||(LA142_1>=68 && LA142_1<=69)||(LA142_1>=71 && LA142_1<=72)||LA142_1==75||LA142_1==95||(LA142_1>=97 && LA142_1<=98)||(LA142_1>=100 && LA142_1<=103)||(LA142_1>=105 && LA142_1<=106)||(LA142_1>=109 && LA142_1<=110)||(LA142_1>=114 && LA142_1<=117)||(LA142_1>=119 && LA142_1<=120)||LA142_1==122||LA142_1==126||LA142_1==129||LA142_1==132||LA142_1==135||LA142_1==138||LA142_1==141||(LA142_1>=143 && LA142_1<=144)||(LA142_1>=146 && LA142_1<=148)||(LA142_1>=150 && LA142_1<=152)||LA142_1==154||LA142_1==157||LA142_1==160||LA142_1==162||LA142_1==167||LA142_1==169||(LA142_1>=171 && LA142_1<=174)||LA142_1==177||LA142_1==180||(LA142_1>=183 && LA142_1<=187)||(LA142_1>=189 && LA142_1<=190)||LA142_1==194||LA142_1==196||LA142_1==202))
			{
				alt142 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 142, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(142); }
			switch (alt142)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:540:9: ')'
				{
				DebugLocation(540, 9);
				char_literal511=(IToken)Match(input,RPAREN,Follow._RPAREN_in_attribute_arguments3826); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal511_tree = (object)adaptor.Create(char_literal511, retval);
				adaptor.AddChild(root_0, char_literal511_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:541:8: ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')'
				{
				DebugLocation(541, 8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:541:8: ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* )
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:541:9: positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )*
				{
				DebugLocation(541, 9);
				PushFollow(Follow._positional_argument_in_attribute_arguments3846);
				positional_argument512=positional_argument();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, positional_argument512.Tree, positional_argument512, retval);
				DebugLocation(541, 31);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:541:31: ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )*
				try { DebugEnterSubRule(141);
				while (true)
				{
					int alt141=3;
					try { DebugEnterDecision(141, false);
					int LA141_1 = input.LA(1);

					if ((LA141_1==IDENTIFIER||LA141_1==95||(LA141_1>=97 && LA141_1<=98)||(LA141_1>=100 && LA141_1<=101)||LA141_1==105||LA141_1==117||LA141_1==120||LA141_1==122||LA141_1==126||LA141_1==132||LA141_1==135||LA141_1==141||(LA141_1>=143 && LA141_1<=144)||(LA141_1>=147 && LA141_1<=148)||LA141_1==152||LA141_1==154||LA141_1==157||LA141_1==160||LA141_1==162||LA141_1==167||(LA141_1>=171 && LA141_1<=172)||LA141_1==183||LA141_1==190||LA141_1==194||LA141_1==196) && (EvaluatePredicate(synpred24_cs_fragment)))
					{
						alt141 = 1;
					}
					else if ((LA141_1==74))
					{
						alt141 = 2;
					}


					} finally { DebugExitDecision(141); }
					switch ( alt141 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:541:32: ( ',' identifier '=' )=> named_argument
						{
						DebugLocation(541, 60);
						PushFollow(Follow._named_argument_in_attribute_arguments3865);
						named_argument513=named_argument();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, named_argument513.Tree, named_argument513, retval);

						}
						break;
					case 2:
						DebugEnterAlt(2);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:542:15: ',' positional_argument
						{
						DebugLocation(542, 15);
						char_literal514=(IToken)Match(input,74,Follow._74_in_attribute_arguments3881); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal514_tree = (object)adaptor.Create(char_literal514, retval);
						adaptor.AddChild(root_0, char_literal514_tree);
						}
						DebugLocation(542, 19);
						PushFollow(Follow._positional_argument_in_attribute_arguments3883);
						positional_argument515=positional_argument();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, positional_argument515.Tree, positional_argument515, retval);

						}
						break;

					default:
						goto loop141;
					}
				}

				loop141:
					;

				} finally { DebugExitSubRule(141); }


				}

				DebugLocation(543, 8);
				char_literal516=(IToken)Match(input,RPAREN,Follow._RPAREN_in_attribute_arguments3894); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal516_tree = (object)adaptor.Create(char_literal516, retval);
				adaptor.AddChild(root_0, char_literal516_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(142); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("attribute_arguments", 144);
			LeaveRule("attribute_arguments", 144);
			LeaveRule_attribute_arguments();
			if (state.backtracking > 0) { Memoize(input, 144, attribute_arguments_StartIndex); }

		}
		DebugLocation(544, 5);
		} finally { DebugExitRule(GrammarFileName, "attribute_arguments"); }
		return retval;

	}
	// $ANTLR end "attribute_arguments"

	partial void EnterRule_positional_argument_list();
	partial void LeaveRule_positional_argument_list();
	// $ANTLR start "positional_argument_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:545:1: positional_argument_list : positional_argument ( ',' positional_argument )* ;
	[GrammarRule("positional_argument_list")]
	private Antlr3AstNode positional_argument_list()
	{
		EnterRule_positional_argument_list();
		EnterRule("positional_argument_list", 145);
		var retval = new Antlr3AstNode("positional_argument_list");
		
		retval.Start = (IToken)input.LT(1);
		int positional_argument_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal518 = default(IToken);
		Antlr3AstNode positional_argument517 = default(Antlr3AstNode);
		Antlr3AstNode positional_argument519 = default(Antlr3AstNode);

		object char_literal518_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "positional_argument_list");
		DebugLocation(545, 48);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 145)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:545:25: ( positional_argument ( ',' positional_argument )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:546:2: positional_argument ( ',' positional_argument )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(546, 2);
			PushFollow(Follow._positional_argument_in_positional_argument_list3908);
			positional_argument517=positional_argument();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, positional_argument517.Tree, positional_argument517, retval);
			DebugLocation(546, 22);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:546:22: ( ',' positional_argument )*
			try { DebugEnterSubRule(143);
			while (true)
			{
				int alt143=2;
				try { DebugEnterDecision(143, false);
				int LA143_1 = input.LA(1);

				if ((LA143_1==74))
				{
					alt143 = 1;
				}


				} finally { DebugExitDecision(143); }
				switch ( alt143 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:546:23: ',' positional_argument
					{
					DebugLocation(546, 23);
					char_literal518=(IToken)Match(input,74,Follow._74_in_positional_argument_list3911); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal518_tree = (object)adaptor.Create(char_literal518, retval);
					adaptor.AddChild(root_0, char_literal518_tree);
					}
					DebugLocation(546, 27);
					PushFollow(Follow._positional_argument_in_positional_argument_list3913);
					positional_argument519=positional_argument();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, positional_argument519.Tree, positional_argument519, retval);

					}
					break;

				default:
					goto loop143;
				}
			}

			loop143:
				;

			} finally { DebugExitSubRule(143); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("positional_argument_list", 145);
			LeaveRule("positional_argument_list", 145);
			LeaveRule_positional_argument_list();
			if (state.backtracking > 0) { Memoize(input, 145, positional_argument_list_StartIndex); }

		}
		DebugLocation(546, 48);
		} finally { DebugExitRule(GrammarFileName, "positional_argument_list"); }
		return retval;

	}
	// $ANTLR end "positional_argument_list"

	partial void EnterRule_positional_argument();
	partial void LeaveRule_positional_argument();
	// $ANTLR start "positional_argument"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:547:1: positional_argument : attribute_argument_expression ;
	[GrammarRule("positional_argument")]
	private Antlr3AstNode positional_argument()
	{
		EnterRule_positional_argument();
		EnterRule("positional_argument", 146);
		var retval = new Antlr3AstNode("positional_argument");
		
		retval.Start = (IToken)input.LT(1);
		int positional_argument_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode attribute_argument_expression520 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "positional_argument");
		DebugLocation(547, 31);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 146)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:547:20: ( attribute_argument_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:548:2: attribute_argument_expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(548, 2);
			PushFollow(Follow._attribute_argument_expression_in_positional_argument3924);
			attribute_argument_expression520=attribute_argument_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, attribute_argument_expression520.Tree, attribute_argument_expression520, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("positional_argument", 146);
			LeaveRule("positional_argument", 146);
			LeaveRule_positional_argument();
			if (state.backtracking > 0) { Memoize(input, 146, positional_argument_StartIndex); }

		}
		DebugLocation(548, 31);
		} finally { DebugExitRule(GrammarFileName, "positional_argument"); }
		return retval;

	}
	// $ANTLR end "positional_argument"

	partial void EnterRule_named_argument_list();
	partial void LeaveRule_named_argument_list();
	// $ANTLR start "named_argument_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:549:1: named_argument_list : named_argument ( ',' named_argument )* ;
	[GrammarRule("named_argument_list")]
	private Antlr3AstNode named_argument_list()
	{
		EnterRule_named_argument_list();
		EnterRule("named_argument_list", 147);
		var retval = new Antlr3AstNode("named_argument_list");
		
		retval.Start = (IToken)input.LT(1);
		int named_argument_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal522 = default(IToken);
		Antlr3AstNode named_argument521 = default(Antlr3AstNode);
		Antlr3AstNode named_argument523 = default(Antlr3AstNode);

		object char_literal522_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "named_argument_list");
		DebugLocation(549, 38);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 147)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:549:20: ( named_argument ( ',' named_argument )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:550:2: named_argument ( ',' named_argument )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(550, 2);
			PushFollow(Follow._named_argument_in_named_argument_list3933);
			named_argument521=named_argument();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, named_argument521.Tree, named_argument521, retval);
			DebugLocation(550, 17);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:550:17: ( ',' named_argument )*
			try { DebugEnterSubRule(144);
			while (true)
			{
				int alt144=2;
				try { DebugEnterDecision(144, false);
				int LA144_1 = input.LA(1);

				if ((LA144_1==74))
				{
					alt144 = 1;
				}


				} finally { DebugExitDecision(144); }
				switch ( alt144 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:550:18: ',' named_argument
					{
					DebugLocation(550, 18);
					char_literal522=(IToken)Match(input,74,Follow._74_in_named_argument_list3936); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal522_tree = (object)adaptor.Create(char_literal522, retval);
					adaptor.AddChild(root_0, char_literal522_tree);
					}
					DebugLocation(550, 22);
					PushFollow(Follow._named_argument_in_named_argument_list3938);
					named_argument523=named_argument();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, named_argument523.Tree, named_argument523, retval);

					}
					break;

				default:
					goto loop144;
				}
			}

			loop144:
				;

			} finally { DebugExitSubRule(144); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("named_argument_list", 147);
			LeaveRule("named_argument_list", 147);
			LeaveRule_named_argument_list();
			if (state.backtracking > 0) { Memoize(input, 147, named_argument_list_StartIndex); }

		}
		DebugLocation(550, 38);
		} finally { DebugExitRule(GrammarFileName, "named_argument_list"); }
		return retval;

	}
	// $ANTLR end "named_argument_list"

	partial void EnterRule_named_argument();
	partial void LeaveRule_named_argument();
	// $ANTLR start "named_argument"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:551:1: named_argument : identifier '=' attribute_argument_expression ;
	[GrammarRule("named_argument")]
	private Antlr3AstNode named_argument()
	{
		EnterRule_named_argument();
		EnterRule("named_argument", 148);
		var retval = new Antlr3AstNode("named_argument");
		
		retval.Start = (IToken)input.LT(1);
		int named_argument_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal525 = default(IToken);
		Antlr3AstNode identifier524 = default(Antlr3AstNode);
		Antlr3AstNode attribute_argument_expression526 = default(Antlr3AstNode);

		object char_literal525_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "named_argument");
		DebugLocation(551, 50);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 148)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:551:15: ( identifier '=' attribute_argument_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:552:2: identifier '=' attribute_argument_expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(552, 2);
			PushFollow(Follow._identifier_in_named_argument3949);
			identifier524=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier524.Tree, identifier524, retval);
			DebugLocation(552, 15);
			char_literal525=(IToken)Match(input,85,Follow._85_in_named_argument3953); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal525_tree = (object)adaptor.Create(char_literal525, retval);
			adaptor.AddChild(root_0, char_literal525_tree);
			}
			DebugLocation(552, 21);
			PushFollow(Follow._attribute_argument_expression_in_named_argument3957);
			attribute_argument_expression526=attribute_argument_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, attribute_argument_expression526.Tree, attribute_argument_expression526, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("named_argument", 148);
			LeaveRule("named_argument", 148);
			LeaveRule_named_argument();
			if (state.backtracking > 0) { Memoize(input, 148, named_argument_StartIndex); }

		}
		DebugLocation(552, 50);
		} finally { DebugExitRule(GrammarFileName, "named_argument"); }
		return retval;

	}
	// $ANTLR end "named_argument"

	partial void EnterRule_attribute_argument_expression();
	partial void LeaveRule_attribute_argument_expression();
	// $ANTLR start "attribute_argument_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:553:1: attribute_argument_expression : expression ;
	[GrammarRule("attribute_argument_expression")]
	private Antlr3AstNode attribute_argument_expression()
	{
		EnterRule_attribute_argument_expression();
		EnterRule("attribute_argument_expression", 149);
		var retval = new Antlr3AstNode("attribute_argument_expression");
		
		retval.Start = (IToken)input.LT(1);
		int attribute_argument_expression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode expression527 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "attribute_argument_expression");
		DebugLocation(553, 12);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 149)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:553:30: ( expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:554:2: expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(554, 2);
			PushFollow(Follow._expression_in_attribute_argument_expression3966);
			expression527=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression527.Tree, expression527, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("attribute_argument_expression", 149);
			LeaveRule("attribute_argument_expression", 149);
			LeaveRule_attribute_argument_expression();
			if (state.backtracking > 0) { Memoize(input, 149, attribute_argument_expression_StartIndex); }

		}
		DebugLocation(554, 12);
		} finally { DebugExitRule(GrammarFileName, "attribute_argument_expression"); }
		return retval;

	}
	// $ANTLR end "attribute_argument_expression"

	partial void EnterRule_class_declaration();
	partial void LeaveRule_class_declaration();
	// $ANTLR start "class_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:560:1: class_declaration : 'class' type_or_generic ( class_base )? ( type_parameter_constraints_clauses )? class_body ( ';' )? ;
	[GrammarRule("class_declaration")]
	private Antlr3AstNode class_declaration()
	{
		EnterRule_class_declaration();
		EnterRule("class_declaration", 150);
		var retval = new Antlr3AstNode("class_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int class_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal528 = default(IToken);
		IToken char_literal533 = default(IToken);
		Antlr3AstNode type_or_generic529 = default(Antlr3AstNode);
		Antlr3AstNode class_base530 = default(Antlr3AstNode);
		Antlr3AstNode type_parameter_constraints_clauses531 = default(Antlr3AstNode);
		Antlr3AstNode class_body532 = default(Antlr3AstNode);

		object string_literal528_tree = default(object);
		object char_literal533_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "class_declaration");
		DebugLocation(560, 98);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 150)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:560:18: ( 'class' type_or_generic ( class_base )? ( type_parameter_constraints_clauses )? class_body ( ';' )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:561:2: 'class' type_or_generic ( class_base )? ( type_parameter_constraints_clauses )? class_body ( ';' )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(561, 2);
			string_literal528=(IToken)Match(input,111,Follow._111_in_class_declaration3979); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal528_tree = (object)adaptor.Create(string_literal528, retval);
			adaptor.AddChild(root_0, string_literal528_tree);
			}
			DebugLocation(561, 11);
			PushFollow(Follow._type_or_generic_in_class_declaration3982);
			type_or_generic529=type_or_generic();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_or_generic529.Tree, type_or_generic529, retval);
			DebugLocation(561, 29);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:561:29: ( class_base )?
			int alt145=2;
			try { DebugEnterSubRule(145);
			try { DebugEnterDecision(145, false);
			int LA145_1 = input.LA(1);

			if ((LA145_1==79))
			{
				alt145 = 1;
			}
			} finally { DebugExitDecision(145); }
			switch (alt145)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:561:29: class_base
				{
				DebugLocation(561, 29);
				PushFollow(Follow._class_base_in_class_declaration3986);
				class_base530=class_base();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, class_base530.Tree, class_base530, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(145); }

			DebugLocation(561, 43);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:561:43: ( type_parameter_constraints_clauses )?
			int alt146=2;
			try { DebugEnterSubRule(146);
			try { DebugEnterDecision(146, false);
			int LA146_1 = input.LA(1);

			if ((LA146_1==194))
			{
				alt146 = 1;
			}
			} finally { DebugExitDecision(146); }
			switch (alt146)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:561:43: type_parameter_constraints_clauses
				{
				DebugLocation(561, 43);
				PushFollow(Follow._type_parameter_constraints_clauses_in_class_declaration3991);
				type_parameter_constraints_clauses531=type_parameter_constraints_clauses();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type_parameter_constraints_clauses531.Tree, type_parameter_constraints_clauses531, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(146); }

			DebugLocation(561, 81);
			PushFollow(Follow._class_body_in_class_declaration3996);
			class_body532=class_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, class_body532.Tree, class_body532, retval);
			DebugLocation(561, 94);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:561:94: ( ';' )?
			int alt147=2;
			try { DebugEnterSubRule(147);
			try { DebugEnterDecision(147, false);
			int LA147_1 = input.LA(1);

			if ((LA147_1==SEMI))
			{
				alt147 = 1;
			}
			} finally { DebugExitDecision(147); }
			switch (alt147)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:561:94: ';'
				{
				DebugLocation(561, 94);
				char_literal533=(IToken)Match(input,SEMI,Follow._SEMI_in_class_declaration4000); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal533_tree = (object)adaptor.Create(char_literal533, retval);
				adaptor.AddChild(root_0, char_literal533_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(147); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("class_declaration", 150);
			LeaveRule("class_declaration", 150);
			LeaveRule_class_declaration();
			if (state.backtracking > 0) { Memoize(input, 150, class_declaration_StartIndex); }

		}
		DebugLocation(561, 98);
		} finally { DebugExitRule(GrammarFileName, "class_declaration"); }
		return retval;

	}
	// $ANTLR end "class_declaration"

	partial void EnterRule_class_base();
	partial void LeaveRule_class_base();
	// $ANTLR start "class_base"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:562:1: class_base : ':' interface_type_list ;
	[GrammarRule("class_base")]
	private Antlr3AstNode class_base()
	{
		EnterRule_class_base();
		EnterRule("class_base", 151);
		var retval = new Antlr3AstNode("class_base");
		
		retval.Start = (IToken)input.LT(1);
		int class_base_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal534 = default(IToken);
		Antlr3AstNode interface_type_list535 = default(Antlr3AstNode);

		object char_literal534_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "class_base");
		DebugLocation(562, 27);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 151)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:562:11: ( ':' interface_type_list )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:565:2: ':' interface_type_list
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(565, 2);
			char_literal534=(IToken)Match(input,79,Follow._79_in_class_base4013); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal534_tree = (object)adaptor.Create(char_literal534, retval);
			adaptor.AddChild(root_0, char_literal534_tree);
			}
			DebugLocation(565, 8);
			PushFollow(Follow._interface_type_list_in_class_base4017);
			interface_type_list535=interface_type_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, interface_type_list535.Tree, interface_type_list535, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("class_base", 151);
			LeaveRule("class_base", 151);
			LeaveRule_class_base();
			if (state.backtracking > 0) { Memoize(input, 151, class_base_StartIndex); }

		}
		DebugLocation(565, 27);
		} finally { DebugExitRule(GrammarFileName, "class_base"); }
		return retval;

	}
	// $ANTLR end "class_base"

	partial void EnterRule_interface_type_list();
	partial void LeaveRule_interface_type_list();
	// $ANTLR start "interface_type_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:567:1: interface_type_list : type ( ',' type )* ;
	[GrammarRule("interface_type_list")]
	private Antlr3AstNode interface_type_list()
	{
		EnterRule_interface_type_list();
		EnterRule("interface_type_list", 152);
		var retval = new Antlr3AstNode("interface_type_list");
		
		retval.Start = (IToken)input.LT(1);
		int interface_type_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal537 = default(IToken);
		Antlr3AstNode type536 = default(Antlr3AstNode);
		Antlr3AstNode type538 = default(Antlr3AstNode);

		object char_literal537_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interface_type_list");
		DebugLocation(567, 20);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 152)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:567:20: ( type ( ',' type )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:568:2: type ( ',' type )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(568, 2);
			PushFollow(Follow._type_in_interface_type_list4027);
			type536=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type536.Tree, type536, retval);
			DebugLocation(568, 7);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:568:7: ( ',' type )*
			try { DebugEnterSubRule(148);
			while (true)
			{
				int alt148=2;
				try { DebugEnterDecision(148, false);
				int LA148_1 = input.LA(1);

				if ((LA148_1==74))
				{
					alt148 = 1;
				}


				} finally { DebugExitDecision(148); }
				switch ( alt148 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:568:8: ',' type
					{
					DebugLocation(568, 8);
					char_literal537=(IToken)Match(input,74,Follow._74_in_interface_type_list4030); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal537_tree = (object)adaptor.Create(char_literal537, retval);
					adaptor.AddChild(root_0, char_literal537_tree);
					}
					DebugLocation(568, 14);
					PushFollow(Follow._type_in_interface_type_list4034);
					type538=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type538.Tree, type538, retval);

					}
					break;

				default:
					goto loop148;
				}
			}

			loop148:
				;

			} finally { DebugExitSubRule(148); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_type_list", 152);
			LeaveRule("interface_type_list", 152);
			LeaveRule_interface_type_list();
			if (state.backtracking > 0) { Memoize(input, 152, interface_type_list_StartIndex); }

		}
		DebugLocation(568, 20);
		} finally { DebugExitRule(GrammarFileName, "interface_type_list"); }
		return retval;

	}
	// $ANTLR end "interface_type_list"

	partial void EnterRule_class_body();
	partial void LeaveRule_class_body();
	// $ANTLR start "class_body"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:570:1: class_body : '{' ( class_member_declarations )? '}' ;
	[GrammarRule("class_body")]
	private Antlr3AstNode class_body()
	{
		EnterRule_class_body();
		EnterRule("class_body", 153);
		var retval = new Antlr3AstNode("class_body");
		
		retval.Start = (IToken)input.LT(1);
		int class_body_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal539 = default(IToken);
		IToken char_literal541 = default(IToken);
		Antlr3AstNode class_member_declarations540 = default(Antlr3AstNode);

		object char_literal539_tree = default(object);
		object char_literal541_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "class_body");
		DebugLocation(570, 40);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 153)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:570:11: ( '{' ( class_member_declarations )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:571:2: '{' ( class_member_declarations )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(571, 2);
			char_literal539=(IToken)Match(input,197,Follow._197_in_class_body4045); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal539_tree = (object)adaptor.Create(char_literal539, retval);
			adaptor.AddChild(root_0, char_literal539_tree);
			}
			DebugLocation(571, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:571:8: ( class_member_declarations )?
			int alt149=2;
			try { DebugEnterSubRule(149);
			try { DebugEnterDecision(149, false);
			int LA149_1 = input.LA(1);

			if ((LA149_1==ENUM||LA149_1==IDENTIFIER||LA149_1==91||(LA149_1>=95 && LA149_1<=98)||(LA149_1>=100 && LA149_1<=101)||LA149_1==103||(LA149_1>=105 && LA149_1<=106)||LA149_1==109||(LA149_1>=111 && LA149_1<=112)||LA149_1==114||(LA149_1>=116 && LA149_1<=117)||(LA149_1>=119 && LA149_1<=120)||(LA149_1>=122 && LA149_1<=126)||LA149_1==129||LA149_1==132||(LA149_1>=135 && LA149_1<=136)||(LA149_1>=138 && LA149_1<=141)||(LA149_1>=143 && LA149_1<=144)||(LA149_1>=146 && LA149_1<=148)||(LA149_1>=150 && LA149_1<=152)||LA149_1==154||(LA149_1>=156 && LA149_1<=157)||(LA149_1>=159 && LA149_1<=165)||LA149_1==167||(LA149_1>=169 && LA149_1<=173)||(LA149_1>=176 && LA149_1<=178)||LA149_1==183||(LA149_1>=185 && LA149_1<=186)||(LA149_1>=188 && LA149_1<=194)||LA149_1==196||LA149_1==202))
			{
				alt149 = 1;
			}
			} finally { DebugExitDecision(149); }
			switch (alt149)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:571:8: class_member_declarations
				{
				DebugLocation(571, 8);
				PushFollow(Follow._class_member_declarations_in_class_body4049);
				class_member_declarations540=class_member_declarations();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, class_member_declarations540.Tree, class_member_declarations540, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(149); }

			DebugLocation(571, 37);
			char_literal541=(IToken)Match(input,201,Follow._201_in_class_body4054); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal541_tree = (object)adaptor.Create(char_literal541, retval);
			adaptor.AddChild(root_0, char_literal541_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("class_body", 153);
			LeaveRule("class_body", 153);
			LeaveRule_class_body();
			if (state.backtracking > 0) { Memoize(input, 153, class_body_StartIndex); }

		}
		DebugLocation(571, 40);
		} finally { DebugExitRule(GrammarFileName, "class_body"); }
		return retval;

	}
	// $ANTLR end "class_body"

	partial void EnterRule_class_member_declarations();
	partial void LeaveRule_class_member_declarations();
	// $ANTLR start "class_member_declarations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:572:1: class_member_declarations : ( class_member_declaration )+ ;
	[GrammarRule("class_member_declarations")]
	private Antlr3AstNode class_member_declarations()
	{
		EnterRule_class_member_declarations();
		EnterRule("class_member_declarations", 154);
		var retval = new Antlr3AstNode("class_member_declarations");
		
		retval.Start = (IToken)input.LT(1);
		int class_member_declarations_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode class_member_declaration542 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "class_member_declarations");
		DebugLocation(572, 27);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 154)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:572:26: ( ( class_member_declaration )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:573:2: ( class_member_declaration )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(573, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:573:2: ( class_member_declaration )+
			int cnt150=0;
			try { DebugEnterSubRule(150);
			while (true)
			{
				int alt150=2;
				try { DebugEnterDecision(150, false);
				int LA150_1 = input.LA(1);

				if ((LA150_1==ENUM||LA150_1==IDENTIFIER||LA150_1==91||(LA150_1>=95 && LA150_1<=98)||(LA150_1>=100 && LA150_1<=101)||LA150_1==103||(LA150_1>=105 && LA150_1<=106)||LA150_1==109||(LA150_1>=111 && LA150_1<=112)||LA150_1==114||(LA150_1>=116 && LA150_1<=117)||(LA150_1>=119 && LA150_1<=120)||(LA150_1>=122 && LA150_1<=126)||LA150_1==129||LA150_1==132||(LA150_1>=135 && LA150_1<=136)||(LA150_1>=138 && LA150_1<=141)||(LA150_1>=143 && LA150_1<=144)||(LA150_1>=146 && LA150_1<=148)||(LA150_1>=150 && LA150_1<=152)||LA150_1==154||(LA150_1>=156 && LA150_1<=157)||(LA150_1>=159 && LA150_1<=165)||LA150_1==167||(LA150_1>=169 && LA150_1<=173)||(LA150_1>=176 && LA150_1<=178)||LA150_1==183||(LA150_1>=185 && LA150_1<=186)||(LA150_1>=188 && LA150_1<=194)||LA150_1==196||LA150_1==202))
				{
					alt150 = 1;
				}


				} finally { DebugExitDecision(150); }
				switch (alt150)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:573:2: class_member_declaration
					{
					DebugLocation(573, 2);
					PushFollow(Follow._class_member_declaration_in_class_member_declarations4062);
					class_member_declaration542=class_member_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, class_member_declaration542.Tree, class_member_declaration542, retval);

					}
					break;

				default:
					if (cnt150 >= 1)
						goto loop150;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee150 = new EarlyExitException( 150, input );
					DebugRecognitionException(eee150);
					throw eee150;
				}
				cnt150++;
			}
			loop150:
				;

			} finally { DebugExitSubRule(150); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("class_member_declarations", 154);
			LeaveRule("class_member_declarations", 154);
			LeaveRule_class_member_declarations();
			if (state.backtracking > 0) { Memoize(input, 154, class_member_declarations_StartIndex); }

		}
		DebugLocation(573, 27);
		} finally { DebugExitRule(GrammarFileName, "class_member_declarations"); }
		return retval;

	}
	// $ANTLR end "class_member_declarations"

	partial void EnterRule_constant_declaration();
	partial void LeaveRule_constant_declaration();
	// $ANTLR start "constant_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:576:1: constant_declaration : 'const' type constant_declarators ';' ;
	[GrammarRule("constant_declaration")]
	private Antlr3AstNode constant_declaration()
	{
		EnterRule_constant_declaration();
		EnterRule("constant_declaration", 155);
		var retval = new Antlr3AstNode("constant_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int constant_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal543 = default(IToken);
		IToken char_literal546 = default(IToken);
		Antlr3AstNode type544 = default(Antlr3AstNode);
		Antlr3AstNode constant_declarators545 = default(Antlr3AstNode);

		object string_literal543_tree = default(object);
		object char_literal546_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "constant_declaration");
		DebugLocation(576, 45);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 155)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:576:21: ( 'const' type constant_declarators ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:577:2: 'const' type constant_declarators ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(577, 2);
			string_literal543=(IToken)Match(input,112,Follow._112_in_constant_declaration4073); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal543_tree = (object)adaptor.Create(string_literal543, retval);
			adaptor.AddChild(root_0, string_literal543_tree);
			}
			DebugLocation(577, 12);
			PushFollow(Follow._type_in_constant_declaration4077);
			type544=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type544.Tree, type544, retval);
			DebugLocation(577, 19);
			PushFollow(Follow._constant_declarators_in_constant_declaration4081);
			constant_declarators545=constant_declarators();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, constant_declarators545.Tree, constant_declarators545, retval);
			DebugLocation(577, 42);
			char_literal546=(IToken)Match(input,SEMI,Follow._SEMI_in_constant_declaration4085); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal546_tree = (object)adaptor.Create(char_literal546, retval);
			adaptor.AddChild(root_0, char_literal546_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constant_declaration", 155);
			LeaveRule("constant_declaration", 155);
			LeaveRule_constant_declaration();
			if (state.backtracking > 0) { Memoize(input, 155, constant_declaration_StartIndex); }

		}
		DebugLocation(577, 45);
		} finally { DebugExitRule(GrammarFileName, "constant_declaration"); }
		return retval;

	}
	// $ANTLR end "constant_declaration"

	partial void EnterRule_constant_declarators();
	partial void LeaveRule_constant_declarators();
	// $ANTLR start "constant_declarators"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:578:1: constant_declarators : constant_declarator ( ',' constant_declarator )* ;
	[GrammarRule("constant_declarators")]
	private Antlr3AstNode constant_declarators()
	{
		EnterRule_constant_declarators();
		EnterRule("constant_declarators", 156);
		var retval = new Antlr3AstNode("constant_declarators");
		
		retval.Start = (IToken)input.LT(1);
		int constant_declarators_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal548 = default(IToken);
		Antlr3AstNode constant_declarator547 = default(Antlr3AstNode);
		Antlr3AstNode constant_declarator549 = default(Antlr3AstNode);

		object char_literal548_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "constant_declarators");
		DebugLocation(578, 48);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 156)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:578:21: ( constant_declarator ( ',' constant_declarator )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:579:2: constant_declarator ( ',' constant_declarator )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(579, 2);
			PushFollow(Follow._constant_declarator_in_constant_declarators4093);
			constant_declarator547=constant_declarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, constant_declarator547.Tree, constant_declarator547, retval);
			DebugLocation(579, 22);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:579:22: ( ',' constant_declarator )*
			try { DebugEnterSubRule(151);
			while (true)
			{
				int alt151=2;
				try { DebugEnterDecision(151, false);
				int LA151_1 = input.LA(1);

				if ((LA151_1==74))
				{
					alt151 = 1;
				}


				} finally { DebugExitDecision(151); }
				switch ( alt151 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:579:23: ',' constant_declarator
					{
					DebugLocation(579, 23);
					char_literal548=(IToken)Match(input,74,Follow._74_in_constant_declarators4096); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal548_tree = (object)adaptor.Create(char_literal548, retval);
					adaptor.AddChild(root_0, char_literal548_tree);
					}
					DebugLocation(579, 27);
					PushFollow(Follow._constant_declarator_in_constant_declarators4098);
					constant_declarator549=constant_declarator();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, constant_declarator549.Tree, constant_declarator549, retval);

					}
					break;

				default:
					goto loop151;
				}
			}

			loop151:
				;

			} finally { DebugExitSubRule(151); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constant_declarators", 156);
			LeaveRule("constant_declarators", 156);
			LeaveRule_constant_declarators();
			if (state.backtracking > 0) { Memoize(input, 156, constant_declarators_StartIndex); }

		}
		DebugLocation(579, 48);
		} finally { DebugExitRule(GrammarFileName, "constant_declarators"); }
		return retval;

	}
	// $ANTLR end "constant_declarators"

	partial void EnterRule_constant_declarator();
	partial void LeaveRule_constant_declarator();
	// $ANTLR start "constant_declarator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:580:1: constant_declarator : identifier ( '=' constant_expression )? ;
	[GrammarRule("constant_declarator")]
	private Antlr3AstNode constant_declarator()
	{
		EnterRule_constant_declarator();
		EnterRule("constant_declarator", 157);
		var retval = new Antlr3AstNode("constant_declarator");
		
		retval.Start = (IToken)input.LT(1);
		int constant_declarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal551 = default(IToken);
		Antlr3AstNode identifier550 = default(Antlr3AstNode);
		Antlr3AstNode constant_expression552 = default(Antlr3AstNode);

		object char_literal551_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "constant_declarator");
		DebugLocation(580, 43);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 157)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:580:20: ( identifier ( '=' constant_expression )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:581:2: identifier ( '=' constant_expression )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(581, 2);
			PushFollow(Follow._identifier_in_constant_declarator4108);
			identifier550=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier550.Tree, identifier550, retval);
			DebugLocation(581, 15);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:581:15: ( '=' constant_expression )?
			int alt152=2;
			try { DebugEnterSubRule(152);
			try { DebugEnterDecision(152, false);
			int LA152_1 = input.LA(1);

			if ((LA152_1==85))
			{
				alt152 = 1;
			}
			} finally { DebugExitDecision(152); }
			switch (alt152)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:581:16: '=' constant_expression
				{
				DebugLocation(581, 16);
				char_literal551=(IToken)Match(input,85,Follow._85_in_constant_declarator4113); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal551_tree = (object)adaptor.Create(char_literal551, retval);
				adaptor.AddChild(root_0, char_literal551_tree);
				}
				DebugLocation(581, 22);
				PushFollow(Follow._constant_expression_in_constant_declarator4117);
				constant_expression552=constant_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constant_expression552.Tree, constant_expression552, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(152); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constant_declarator", 157);
			LeaveRule("constant_declarator", 157);
			LeaveRule_constant_declarator();
			if (state.backtracking > 0) { Memoize(input, 157, constant_declarator_StartIndex); }

		}
		DebugLocation(581, 43);
		} finally { DebugExitRule(GrammarFileName, "constant_declarator"); }
		return retval;

	}
	// $ANTLR end "constant_declarator"

	partial void EnterRule_constant_expression();
	partial void LeaveRule_constant_expression();
	// $ANTLR start "constant_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:582:1: constant_expression : expression ;
	[GrammarRule("constant_expression")]
	private Antlr3AstNode constant_expression()
	{
		EnterRule_constant_expression();
		EnterRule("constant_expression", 158);
		var retval = new Antlr3AstNode("constant_expression");
		
		retval.Start = (IToken)input.LT(1);
		int constant_expression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode expression553 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "constant_expression");
		DebugLocation(582, 11);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 158)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:582:20: ( expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:583:2: expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(583, 2);
			PushFollow(Follow._expression_in_constant_expression4127);
			expression553=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression553.Tree, expression553, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constant_expression", 158);
			LeaveRule("constant_expression", 158);
			LeaveRule_constant_expression();
			if (state.backtracking > 0) { Memoize(input, 158, constant_expression_StartIndex); }

		}
		DebugLocation(583, 11);
		} finally { DebugExitRule(GrammarFileName, "constant_expression"); }
		return retval;

	}
	// $ANTLR end "constant_expression"

	partial void EnterRule_field_declaration();
	partial void LeaveRule_field_declaration();
	// $ANTLR start "field_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:586:1: field_declaration : variable_declarators ';' ;
	[GrammarRule("field_declaration")]
	private Antlr3AstNode field_declaration()
	{
		EnterRule_field_declaration();
		EnterRule("field_declaration", 159);
		var retval = new Antlr3AstNode("field_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int field_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal555 = default(IToken);
		Antlr3AstNode variable_declarators554 = default(Antlr3AstNode);

		object char_literal555_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "field_declaration");
		DebugLocation(586, 28);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 159)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:586:18: ( variable_declarators ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:587:2: variable_declarators ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(587, 2);
			PushFollow(Follow._variable_declarators_in_field_declaration4136);
			variable_declarators554=variable_declarators();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variable_declarators554.Tree, variable_declarators554, retval);
			DebugLocation(587, 25);
			char_literal555=(IToken)Match(input,SEMI,Follow._SEMI_in_field_declaration4140); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal555_tree = (object)adaptor.Create(char_literal555, retval);
			adaptor.AddChild(root_0, char_literal555_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("field_declaration", 159);
			LeaveRule("field_declaration", 159);
			LeaveRule_field_declaration();
			if (state.backtracking > 0) { Memoize(input, 159, field_declaration_StartIndex); }

		}
		DebugLocation(587, 28);
		} finally { DebugExitRule(GrammarFileName, "field_declaration"); }
		return retval;

	}
	// $ANTLR end "field_declaration"

	partial void EnterRule_variable_declarators();
	partial void LeaveRule_variable_declarators();
	// $ANTLR start "variable_declarators"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:588:1: variable_declarators : variable_declarator ( ',' variable_declarator )* ;
	[GrammarRule("variable_declarators")]
	private Antlr3AstNode variable_declarators()
	{
		EnterRule_variable_declarators();
		EnterRule("variable_declarators", 160);
		var retval = new Antlr3AstNode("variable_declarators");
		
		retval.Start = (IToken)input.LT(1);
		int variable_declarators_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal557 = default(IToken);
		Antlr3AstNode variable_declarator556 = default(Antlr3AstNode);
		Antlr3AstNode variable_declarator558 = default(Antlr3AstNode);

		object char_literal557_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "variable_declarators");
		DebugLocation(588, 50);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 160)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:588:21: ( variable_declarator ( ',' variable_declarator )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:589:2: variable_declarator ( ',' variable_declarator )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(589, 2);
			PushFollow(Follow._variable_declarator_in_variable_declarators4148);
			variable_declarator556=variable_declarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variable_declarator556.Tree, variable_declarator556, retval);
			DebugLocation(589, 22);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:589:22: ( ',' variable_declarator )*
			try { DebugEnterSubRule(153);
			while (true)
			{
				int alt153=2;
				try { DebugEnterDecision(153, false);
				int LA153_1 = input.LA(1);

				if ((LA153_1==74))
				{
					alt153 = 1;
				}


				} finally { DebugExitDecision(153); }
				switch ( alt153 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:589:23: ',' variable_declarator
					{
					DebugLocation(589, 23);
					char_literal557=(IToken)Match(input,74,Follow._74_in_variable_declarators4151); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal557_tree = (object)adaptor.Create(char_literal557, retval);
					adaptor.AddChild(root_0, char_literal557_tree);
					}
					DebugLocation(589, 29);
					PushFollow(Follow._variable_declarator_in_variable_declarators4155);
					variable_declarator558=variable_declarator();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, variable_declarator558.Tree, variable_declarator558, retval);

					}
					break;

				default:
					goto loop153;
				}
			}

			loop153:
				;

			} finally { DebugExitSubRule(153); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variable_declarators", 160);
			LeaveRule("variable_declarators", 160);
			LeaveRule_variable_declarators();
			if (state.backtracking > 0) { Memoize(input, 160, variable_declarators_StartIndex); }

		}
		DebugLocation(589, 50);
		} finally { DebugExitRule(GrammarFileName, "variable_declarators"); }
		return retval;

	}
	// $ANTLR end "variable_declarators"

	partial void EnterRule_variable_declarator();
	partial void LeaveRule_variable_declarator();
	// $ANTLR start "variable_declarator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:590:1: variable_declarator : type_name ( '=' variable_initializer )? ;
	[GrammarRule("variable_declarator")]
	private Antlr3AstNode variable_declarator()
	{
		EnterRule_variable_declarator();
		EnterRule("variable_declarator", 161);
		var retval = new Antlr3AstNode("variable_declarator");
		
		retval.Start = (IToken)input.LT(1);
		int variable_declarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal560 = default(IToken);
		Antlr3AstNode type_name559 = default(Antlr3AstNode);
		Antlr3AstNode variable_initializer561 = default(Antlr3AstNode);

		object char_literal560_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "variable_declarator");
		DebugLocation(590, 41);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 161)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:590:20: ( type_name ( '=' variable_initializer )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:591:2: type_name ( '=' variable_initializer )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(591, 2);
			PushFollow(Follow._type_name_in_variable_declarator4165);
			type_name559=type_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_name559.Tree, type_name559, retval);
			DebugLocation(591, 12);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:591:12: ( '=' variable_initializer )?
			int alt154=2;
			try { DebugEnterSubRule(154);
			try { DebugEnterDecision(154, false);
			int LA154_1 = input.LA(1);

			if ((LA154_1==85))
			{
				alt154 = 1;
			}
			} finally { DebugExitDecision(154); }
			switch (alt154)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:591:13: '=' variable_initializer
				{
				DebugLocation(591, 13);
				char_literal560=(IToken)Match(input,85,Follow._85_in_variable_declarator4168); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal560_tree = (object)adaptor.Create(char_literal560, retval);
				adaptor.AddChild(root_0, char_literal560_tree);
				}
				DebugLocation(591, 19);
				PushFollow(Follow._variable_initializer_in_variable_declarator4172);
				variable_initializer561=variable_initializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variable_initializer561.Tree, variable_initializer561, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(154); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variable_declarator", 161);
			LeaveRule("variable_declarator", 161);
			LeaveRule_variable_declarator();
			if (state.backtracking > 0) { Memoize(input, 161, variable_declarator_StartIndex); }

		}
		DebugLocation(591, 41);
		} finally { DebugExitRule(GrammarFileName, "variable_declarator"); }
		return retval;

	}
	// $ANTLR end "variable_declarator"

	partial void EnterRule_method_declaration();
	partial void LeaveRule_method_declaration();
	// $ANTLR start "method_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:594:1: method_declaration : method_header method_body ;
	[GrammarRule("method_declaration")]
	private Antlr3AstNode method_declaration()
	{
		EnterRule_method_declaration();
		EnterRule("method_declaration", 162);
		var retval = new Antlr3AstNode("method_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int method_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode method_header562 = default(Antlr3AstNode);
		Antlr3AstNode method_body563 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "method_declaration");
		DebugLocation(594, 29);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 162)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:594:19: ( method_header method_body )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:595:2: method_header method_body
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(595, 2);
			PushFollow(Follow._method_header_in_method_declaration4186);
			method_header562=method_header();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, method_header562.Tree, method_header562, retval);
			DebugLocation(595, 18);
			PushFollow(Follow._method_body_in_method_declaration4190);
			method_body563=method_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, method_body563.Tree, method_body563, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("method_declaration", 162);
			LeaveRule("method_declaration", 162);
			LeaveRule_method_declaration();
			if (state.backtracking > 0) { Memoize(input, 162, method_declaration_StartIndex); }

		}
		DebugLocation(595, 29);
		} finally { DebugExitRule(GrammarFileName, "method_declaration"); }
		return retval;

	}
	// $ANTLR end "method_declaration"

	partial void EnterRule_method_header();
	partial void LeaveRule_method_header();
	// $ANTLR start "method_header"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:596:1: method_header : member_name '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ;
	[GrammarRule("method_header")]
	private Antlr3AstNode method_header()
	{
		EnterRule_method_header();
		EnterRule("method_header", 163);
		var retval = new Antlr3AstNode("method_header");
		
		retval.Start = (IToken)input.LT(1);
		int method_header_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal565 = default(IToken);
		IToken char_literal567 = default(IToken);
		Antlr3AstNode member_name564 = default(Antlr3AstNode);
		Antlr3AstNode formal_parameter_list566 = default(Antlr3AstNode);
		Antlr3AstNode type_parameter_constraints_clauses568 = default(Antlr3AstNode);

		object char_literal565_tree = default(object);
		object char_literal567_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "method_header");
		DebugLocation(596, 87);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 163)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:596:14: ( member_name '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:597:2: member_name '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(597, 2);
			PushFollow(Follow._member_name_in_method_header4198);
			member_name564=member_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, member_name564.Tree, member_name564, retval);
			DebugLocation(597, 15);
			char_literal565=(IToken)Match(input,68,Follow._68_in_method_header4201); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal565_tree = (object)adaptor.Create(char_literal565, retval);
			adaptor.AddChild(root_0, char_literal565_tree);
			}
			DebugLocation(597, 21);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:597:21: ( formal_parameter_list )?
			int alt155=2;
			try { DebugEnterSubRule(155);
			try { DebugEnterDecision(155, false);
			int LA155_1 = input.LA(1);

			if ((LA155_1==IDENTIFIER||LA155_1==91||LA155_1==95||(LA155_1>=97 && LA155_1<=98)||(LA155_1>=100 && LA155_1<=101)||LA155_1==103||(LA155_1>=105 && LA155_1<=106)||LA155_1==109||LA155_1==114||LA155_1==117||(LA155_1>=119 && LA155_1<=120)||LA155_1==122||LA155_1==126||LA155_1==129||LA155_1==132||LA155_1==135||LA155_1==138||LA155_1==141||(LA155_1>=143 && LA155_1<=144)||(LA155_1>=146 && LA155_1<=148)||(LA155_1>=151 && LA155_1<=152)||(LA155_1>=154 && LA155_1<=155)||(LA155_1>=157 && LA155_1<=158)||LA155_1==160||LA155_1==162||(LA155_1>=166 && LA155_1<=167)||LA155_1==169||(LA155_1>=171 && LA155_1<=173)||LA155_1==177||LA155_1==180||LA155_1==183||(LA155_1>=185 && LA155_1<=186)||(LA155_1>=189 && LA155_1<=190)||LA155_1==192||LA155_1==194||LA155_1==196))
			{
				alt155 = 1;
			}
			} finally { DebugExitDecision(155); }
			switch (alt155)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:597:21: formal_parameter_list
				{
				DebugLocation(597, 21);
				PushFollow(Follow._formal_parameter_list_in_method_header4205);
				formal_parameter_list566=formal_parameter_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, formal_parameter_list566.Tree, formal_parameter_list566, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(155); }

			DebugLocation(597, 46);
			char_literal567=(IToken)Match(input,RPAREN,Follow._RPAREN_in_method_header4210); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal567_tree = (object)adaptor.Create(char_literal567, retval);
			adaptor.AddChild(root_0, char_literal567_tree);
			}
			DebugLocation(597, 52);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:597:52: ( type_parameter_constraints_clauses )?
			int alt156=2;
			try { DebugEnterSubRule(156);
			try { DebugEnterDecision(156, false);
			int LA156_1 = input.LA(1);

			if ((LA156_1==194))
			{
				alt156 = 1;
			}
			} finally { DebugExitDecision(156); }
			switch (alt156)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:597:52: type_parameter_constraints_clauses
				{
				DebugLocation(597, 52);
				PushFollow(Follow._type_parameter_constraints_clauses_in_method_header4214);
				type_parameter_constraints_clauses568=type_parameter_constraints_clauses();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type_parameter_constraints_clauses568.Tree, type_parameter_constraints_clauses568, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(156); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("method_header", 163);
			LeaveRule("method_header", 163);
			LeaveRule_method_header();
			if (state.backtracking > 0) { Memoize(input, 163, method_header_StartIndex); }

		}
		DebugLocation(597, 87);
		} finally { DebugExitRule(GrammarFileName, "method_header"); }
		return retval;

	}
	// $ANTLR end "method_header"

	partial void EnterRule_method_body();
	partial void LeaveRule_method_body();
	// $ANTLR start "method_body"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:598:1: method_body : block ;
	[GrammarRule("method_body")]
	private Antlr3AstNode method_body()
	{
		EnterRule_method_body();
		EnterRule("method_body", 164);
		var retval = new Antlr3AstNode("method_body");
		
		retval.Start = (IToken)input.LT(1);
		int method_body_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode block569 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "method_body");
		DebugLocation(598, 7);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 164)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:598:12: ( block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:599:2: block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(599, 2);
			PushFollow(Follow._block_in_method_body4223);
			block569=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block569.Tree, block569, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("method_body", 164);
			LeaveRule("method_body", 164);
			LeaveRule_method_body();
			if (state.backtracking > 0) { Memoize(input, 164, method_body_StartIndex); }

		}
		DebugLocation(599, 7);
		} finally { DebugExitRule(GrammarFileName, "method_body"); }
		return retval;

	}
	// $ANTLR end "method_body"

	partial void EnterRule_member_name();
	partial void LeaveRule_member_name();
	// $ANTLR start "member_name"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:600:1: member_name : qid ;
	[GrammarRule("member_name")]
	private Antlr3AstNode member_name()
	{
		EnterRule_member_name();
		EnterRule("member_name", 165);
		var retval = new Antlr3AstNode("member_name");
		
		retval.Start = (IToken)input.LT(1);
		int member_name_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode qid570 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "member_name");
		DebugLocation(600, 5);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 165)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:600:12: ( qid )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:601:2: qid
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(601, 2);
			PushFollow(Follow._qid_in_member_name4231);
			qid570=qid();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, qid570.Tree, qid570, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("member_name", 165);
			LeaveRule("member_name", 165);
			LeaveRule_member_name();
			if (state.backtracking > 0) { Memoize(input, 165, member_name_StartIndex); }

		}
		DebugLocation(601, 5);
		} finally { DebugExitRule(GrammarFileName, "member_name"); }
		return retval;

	}
	// $ANTLR end "member_name"

	partial void EnterRule_property_declaration();
	partial void LeaveRule_property_declaration();
	// $ANTLR start "property_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:604:1: property_declaration : member_name '{' accessor_declarations '}' ;
	[GrammarRule("property_declaration")]
	private Antlr3AstNode property_declaration()
	{
		EnterRule_property_declaration();
		EnterRule("property_declaration", 166);
		var retval = new Antlr3AstNode("property_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int property_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal572 = default(IToken);
		IToken char_literal574 = default(IToken);
		Antlr3AstNode member_name571 = default(Antlr3AstNode);
		Antlr3AstNode accessor_declarations573 = default(Antlr3AstNode);

		object char_literal572_tree = default(object);
		object char_literal574_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "property_declaration");
		DebugLocation(604, 49);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 166)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:604:21: ( member_name '{' accessor_declarations '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:605:2: member_name '{' accessor_declarations '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(605, 2);
			PushFollow(Follow._member_name_in_property_declaration4243);
			member_name571=member_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, member_name571.Tree, member_name571, retval);
			DebugLocation(605, 16);
			char_literal572=(IToken)Match(input,197,Follow._197_in_property_declaration4247); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal572_tree = (object)adaptor.Create(char_literal572, retval);
			adaptor.AddChild(root_0, char_literal572_tree);
			}
			DebugLocation(605, 22);
			PushFollow(Follow._accessor_declarations_in_property_declaration4251);
			accessor_declarations573=accessor_declarations();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, accessor_declarations573.Tree, accessor_declarations573, retval);
			DebugLocation(605, 46);
			char_literal574=(IToken)Match(input,201,Follow._201_in_property_declaration4255); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal574_tree = (object)adaptor.Create(char_literal574, retval);
			adaptor.AddChild(root_0, char_literal574_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("property_declaration", 166);
			LeaveRule("property_declaration", 166);
			LeaveRule_property_declaration();
			if (state.backtracking > 0) { Memoize(input, 166, property_declaration_StartIndex); }

		}
		DebugLocation(605, 49);
		} finally { DebugExitRule(GrammarFileName, "property_declaration"); }
		return retval;

	}
	// $ANTLR end "property_declaration"

	partial void EnterRule_accessor_declarations();
	partial void LeaveRule_accessor_declarations();
	// $ANTLR start "accessor_declarations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:606:1: accessor_declarations : ( attributes )? ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? ) ;
	[GrammarRule("accessor_declarations")]
	private Antlr3AstNode accessor_declarations()
	{
		EnterRule_accessor_declarations();
		EnterRule("accessor_declarations", 167);
		var retval = new Antlr3AstNode("accessor_declarations");
		
		retval.Start = (IToken)input.LT(1);
		int accessor_declarations_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode attributes575 = default(Antlr3AstNode);
		Antlr3AstNode get_accessor_declaration576 = default(Antlr3AstNode);
		Antlr3AstNode attributes577 = default(Antlr3AstNode);
		Antlr3AstNode set_accessor_declaration578 = default(Antlr3AstNode);
		Antlr3AstNode set_accessor_declaration579 = default(Antlr3AstNode);
		Antlr3AstNode attributes580 = default(Antlr3AstNode);
		Antlr3AstNode get_accessor_declaration581 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "accessor_declarations");
		DebugLocation(606, 72);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 167)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:606:22: ( ( attributes )? ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:607:2: ( attributes )? ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(607, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:607:2: ( attributes )?
			int alt157=2;
			try { DebugEnterSubRule(157);
			try { DebugEnterDecision(157, false);
			int LA157_1 = input.LA(1);

			if ((LA157_1==91))
			{
				alt157 = 1;
			}
			} finally { DebugExitDecision(157); }
			switch (alt157)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:607:2: attributes
				{
				DebugLocation(607, 2);
				PushFollow(Follow._attributes_in_accessor_declarations4263);
				attributes575=attributes();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, attributes575.Tree, attributes575, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(157); }

			DebugLocation(608, 3);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:608:3: ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? )
			int alt162=2;
			try { DebugEnterSubRule(162);
			try { DebugEnterDecision(162, false);
			switch (input.LA(1))
			{
			case 140:
			case 161:
			case 163:
			case 164:
				{
				int LA162_2 = input.LA(2);

				if ((LA162_2==133))
				{
					alt162 = 1;
				}
				else if ((LA162_2==172))
				{
					alt162 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 162, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 133:
				{
				alt162 = 1;
				}
				break;
			case 172:
				{
				alt162 = 2;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 162, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(162); }
			switch (alt162)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:608:4: get_accessor_declaration ( attributes )? ( set_accessor_declaration )?
				{
				DebugLocation(608, 4);
				PushFollow(Follow._get_accessor_declaration_in_accessor_declarations4269);
				get_accessor_declaration576=get_accessor_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, get_accessor_declaration576.Tree, get_accessor_declaration576, retval);
				DebugLocation(608, 31);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:608:31: ( attributes )?
				int alt158=2;
				try { DebugEnterSubRule(158);
				try { DebugEnterDecision(158, false);
				int LA158_1 = input.LA(1);

				if ((LA158_1==91))
				{
					alt158 = 1;
				}
				} finally { DebugExitDecision(158); }
				switch (alt158)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:608:31: attributes
					{
					DebugLocation(608, 31);
					PushFollow(Follow._attributes_in_accessor_declarations4273);
					attributes577=attributes();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, attributes577.Tree, attributes577, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(158); }

				DebugLocation(608, 45);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:608:45: ( set_accessor_declaration )?
				int alt159=2;
				try { DebugEnterSubRule(159);
				try { DebugEnterDecision(159, false);
				int LA159_1 = input.LA(1);

				if ((LA159_1==140||LA159_1==161||(LA159_1>=163 && LA159_1<=164)||LA159_1==172))
				{
					alt159 = 1;
				}
				} finally { DebugExitDecision(159); }
				switch (alt159)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:608:45: set_accessor_declaration
					{
					DebugLocation(608, 45);
					PushFollow(Follow._set_accessor_declaration_in_accessor_declarations4278);
					set_accessor_declaration578=set_accessor_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, set_accessor_declaration578.Tree, set_accessor_declaration578, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(159); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:609:5: set_accessor_declaration ( attributes )? ( get_accessor_declaration )?
				{
				DebugLocation(609, 5);
				PushFollow(Follow._set_accessor_declaration_in_accessor_declarations4285);
				set_accessor_declaration579=set_accessor_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, set_accessor_declaration579.Tree, set_accessor_declaration579, retval);
				DebugLocation(609, 32);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:609:32: ( attributes )?
				int alt160=2;
				try { DebugEnterSubRule(160);
				try { DebugEnterDecision(160, false);
				int LA160_1 = input.LA(1);

				if ((LA160_1==91))
				{
					alt160 = 1;
				}
				} finally { DebugExitDecision(160); }
				switch (alt160)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:609:32: attributes
					{
					DebugLocation(609, 32);
					PushFollow(Follow._attributes_in_accessor_declarations4289);
					attributes580=attributes();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, attributes580.Tree, attributes580, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(160); }

				DebugLocation(609, 46);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:609:46: ( get_accessor_declaration )?
				int alt161=2;
				try { DebugEnterSubRule(161);
				try { DebugEnterDecision(161, false);
				int LA161_1 = input.LA(1);

				if ((LA161_1==133||LA161_1==140||LA161_1==161||(LA161_1>=163 && LA161_1<=164)))
				{
					alt161 = 1;
				}
				} finally { DebugExitDecision(161); }
				switch (alt161)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:609:46: get_accessor_declaration
					{
					DebugLocation(609, 46);
					PushFollow(Follow._get_accessor_declaration_in_accessor_declarations4294);
					get_accessor_declaration581=get_accessor_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, get_accessor_declaration581.Tree, get_accessor_declaration581, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(161); }


				}
				break;

			}
			} finally { DebugExitSubRule(162); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("accessor_declarations", 167);
			LeaveRule("accessor_declarations", 167);
			LeaveRule_accessor_declarations();
			if (state.backtracking > 0) { Memoize(input, 167, accessor_declarations_StartIndex); }

		}
		DebugLocation(609, 72);
		} finally { DebugExitRule(GrammarFileName, "accessor_declarations"); }
		return retval;

	}
	// $ANTLR end "accessor_declarations"

	partial void EnterRule_get_accessor_declaration();
	partial void LeaveRule_get_accessor_declaration();
	// $ANTLR start "get_accessor_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:610:1: get_accessor_declaration : ( accessor_modifier )? 'get' accessor_body ;
	[GrammarRule("get_accessor_declaration")]
	private Antlr3AstNode get_accessor_declaration()
	{
		EnterRule_get_accessor_declaration();
		EnterRule("get_accessor_declaration", 168);
		var retval = new Antlr3AstNode("get_accessor_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int get_accessor_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal583 = default(IToken);
		Antlr3AstNode accessor_modifier582 = default(Antlr3AstNode);
		Antlr3AstNode accessor_body584 = default(Antlr3AstNode);

		object string_literal583_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "get_accessor_declaration");
		DebugLocation(610, 44);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 168)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:610:25: ( ( accessor_modifier )? 'get' accessor_body )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:611:2: ( accessor_modifier )? 'get' accessor_body
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(611, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:611:2: ( accessor_modifier )?
			int alt163=2;
			try { DebugEnterSubRule(163);
			try { DebugEnterDecision(163, false);
			int LA163_1 = input.LA(1);

			if ((LA163_1==140||LA163_1==161||(LA163_1>=163 && LA163_1<=164)))
			{
				alt163 = 1;
			}
			} finally { DebugExitDecision(163); }
			switch (alt163)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:611:2: accessor_modifier
				{
				DebugLocation(611, 2);
				PushFollow(Follow._accessor_modifier_in_get_accessor_declaration4304);
				accessor_modifier582=accessor_modifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, accessor_modifier582.Tree, accessor_modifier582, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(163); }

			DebugLocation(611, 23);
			string_literal583=(IToken)Match(input,133,Follow._133_in_get_accessor_declaration4309); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal583_tree = (object)adaptor.Create(string_literal583, retval);
			adaptor.AddChild(root_0, string_literal583_tree);
			}
			DebugLocation(611, 31);
			PushFollow(Follow._accessor_body_in_get_accessor_declaration4313);
			accessor_body584=accessor_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, accessor_body584.Tree, accessor_body584, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("get_accessor_declaration", 168);
			LeaveRule("get_accessor_declaration", 168);
			LeaveRule_get_accessor_declaration();
			if (state.backtracking > 0) { Memoize(input, 168, get_accessor_declaration_StartIndex); }

		}
		DebugLocation(611, 44);
		} finally { DebugExitRule(GrammarFileName, "get_accessor_declaration"); }
		return retval;

	}
	// $ANTLR end "get_accessor_declaration"

	partial void EnterRule_set_accessor_declaration();
	partial void LeaveRule_set_accessor_declaration();
	// $ANTLR start "set_accessor_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:612:1: set_accessor_declaration : ( accessor_modifier )? 'set' accessor_body ;
	[GrammarRule("set_accessor_declaration")]
	private Antlr3AstNode set_accessor_declaration()
	{
		EnterRule_set_accessor_declaration();
		EnterRule("set_accessor_declaration", 169);
		var retval = new Antlr3AstNode("set_accessor_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int set_accessor_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal586 = default(IToken);
		Antlr3AstNode accessor_modifier585 = default(Antlr3AstNode);
		Antlr3AstNode accessor_body587 = default(Antlr3AstNode);

		object string_literal586_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "set_accessor_declaration");
		DebugLocation(612, 44);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 169)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:612:25: ( ( accessor_modifier )? 'set' accessor_body )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:613:2: ( accessor_modifier )? 'set' accessor_body
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(613, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:613:2: ( accessor_modifier )?
			int alt164=2;
			try { DebugEnterSubRule(164);
			try { DebugEnterDecision(164, false);
			int LA164_1 = input.LA(1);

			if ((LA164_1==140||LA164_1==161||(LA164_1>=163 && LA164_1<=164)))
			{
				alt164 = 1;
			}
			} finally { DebugExitDecision(164); }
			switch (alt164)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:613:2: accessor_modifier
				{
				DebugLocation(613, 2);
				PushFollow(Follow._accessor_modifier_in_set_accessor_declaration4321);
				accessor_modifier585=accessor_modifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, accessor_modifier585.Tree, accessor_modifier585, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(164); }

			DebugLocation(613, 23);
			string_literal586=(IToken)Match(input,172,Follow._172_in_set_accessor_declaration4326); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal586_tree = (object)adaptor.Create(string_literal586, retval);
			adaptor.AddChild(root_0, string_literal586_tree);
			}
			DebugLocation(613, 31);
			PushFollow(Follow._accessor_body_in_set_accessor_declaration4330);
			accessor_body587=accessor_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, accessor_body587.Tree, accessor_body587, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("set_accessor_declaration", 169);
			LeaveRule("set_accessor_declaration", 169);
			LeaveRule_set_accessor_declaration();
			if (state.backtracking > 0) { Memoize(input, 169, set_accessor_declaration_StartIndex); }

		}
		DebugLocation(613, 44);
		} finally { DebugExitRule(GrammarFileName, "set_accessor_declaration"); }
		return retval;

	}
	// $ANTLR end "set_accessor_declaration"

	partial void EnterRule_accessor_modifier();
	partial void LeaveRule_accessor_modifier();
	// $ANTLR start "accessor_modifier"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:614:1: accessor_modifier : ( 'public' | 'protected' | 'private' | 'internal' );
	[GrammarRule("accessor_modifier")]
	private Antlr3AstNode accessor_modifier()
	{
		EnterRule_accessor_modifier();
		EnterRule("accessor_modifier", 170);
		var retval = new Antlr3AstNode("accessor_modifier");
		
		retval.Start = (IToken)input.LT(1);
		int accessor_modifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set588 = default(IToken);

		object set588_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "accessor_modifier");
		DebugLocation(614, 49);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 170)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:614:18: ( 'public' | 'protected' | 'private' | 'internal' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(614, 18);

			set588=(IToken)input.LT(1);
			if (input.LA(1)==140||input.LA(1)==161||(input.LA(1)>=163 && input.LA(1)<=164))
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set588, retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("accessor_modifier", 170);
			LeaveRule("accessor_modifier", 170);
			LeaveRule_accessor_modifier();
			if (state.backtracking > 0) { Memoize(input, 170, accessor_modifier_StartIndex); }

		}
		DebugLocation(615, 49);
		} finally { DebugExitRule(GrammarFileName, "accessor_modifier"); }
		return retval;

	}
	// $ANTLR end "accessor_modifier"

	partial void EnterRule_accessor_body();
	partial void LeaveRule_accessor_body();
	// $ANTLR start "accessor_body"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:616:1: accessor_body : block ;
	[GrammarRule("accessor_body")]
	private Antlr3AstNode accessor_body()
	{
		EnterRule_accessor_body();
		EnterRule("accessor_body", 171);
		var retval = new Antlr3AstNode("accessor_body");
		
		retval.Start = (IToken)input.LT(1);
		int accessor_body_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode block589 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "accessor_body");
		DebugLocation(616, 7);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 171)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:616:14: ( block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:617:2: block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(617, 2);
			PushFollow(Follow._block_in_accessor_body4358);
			block589=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block589.Tree, block589, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("accessor_body", 171);
			LeaveRule("accessor_body", 171);
			LeaveRule_accessor_body();
			if (state.backtracking > 0) { Memoize(input, 171, accessor_body_StartIndex); }

		}
		DebugLocation(617, 7);
		} finally { DebugExitRule(GrammarFileName, "accessor_body"); }
		return retval;

	}
	// $ANTLR end "accessor_body"

	partial void EnterRule_event_declaration();
	partial void LeaveRule_event_declaration();
	// $ANTLR start "event_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:620:1: event_declaration : 'event' type ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators ';' ) ;
	[GrammarRule("event_declaration")]
	private Antlr3AstNode event_declaration()
	{
		EnterRule_event_declaration();
		EnterRule("event_declaration", 172);
		var retval = new Antlr3AstNode("event_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int event_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal590 = default(IToken);
		IToken char_literal593 = default(IToken);
		IToken char_literal595 = default(IToken);
		IToken char_literal597 = default(IToken);
		Antlr3AstNode type591 = default(Antlr3AstNode);
		Antlr3AstNode member_name592 = default(Antlr3AstNode);
		Antlr3AstNode event_accessor_declarations594 = default(Antlr3AstNode);
		Antlr3AstNode variable_declarators596 = default(Antlr3AstNode);

		object string_literal590_tree = default(object);
		object char_literal593_tree = default(object);
		object char_literal595_tree = default(object);
		object char_literal597_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "event_declaration");
		DebugLocation(620, 2);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 172)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:620:18: ( 'event' type ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators ';' ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:621:2: 'event' type ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators ';' )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(621, 2);
			string_literal590=(IToken)Match(input,123,Follow._123_in_event_declaration4368); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal590_tree = (object)adaptor.Create(string_literal590, retval);
			adaptor.AddChild(root_0, string_literal590_tree);
			}
			DebugLocation(621, 12);
			PushFollow(Follow._type_in_event_declaration4372);
			type591=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type591.Tree, type591, retval);
			DebugLocation(622, 3);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:622:3: ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators ';' )
			int alt165=2;
			try { DebugEnterSubRule(165);
			try { DebugEnterDecision(165, false);
			int LA165_1 = input.LA(1);

			if ((LA165_1==103||LA165_1==106||LA165_1==109||LA165_1==114||LA165_1==119||LA165_1==129||LA165_1==138||LA165_1==146||LA165_1==151||LA165_1==169||LA165_1==173||LA165_1==177||(LA165_1>=185 && LA165_1<=186)||LA165_1==189) && (EvaluatePredicate(synpred25_cs_fragment)))
			{
				alt165 = 1;
			}
			else if ((LA165_1==IDENTIFIER||LA165_1==95||(LA165_1>=97 && LA165_1<=98)||(LA165_1>=100 && LA165_1<=101)||LA165_1==105||LA165_1==117||LA165_1==120||LA165_1==122||LA165_1==126||LA165_1==132||LA165_1==135||LA165_1==141||(LA165_1>=143 && LA165_1<=144)||(LA165_1>=147 && LA165_1<=148)||LA165_1==152||LA165_1==154||LA165_1==157||LA165_1==160||LA165_1==162||LA165_1==167||(LA165_1>=171 && LA165_1<=172)||LA165_1==183||LA165_1==190||LA165_1==194||LA165_1==196))
			{
				int LA165_2 = input.LA(2);

				if ((EvaluatePredicate(synpred25_cs_fragment)))
				{
					alt165 = 1;
				}
				else if ((true))
				{
					alt165 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 165, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA165_1==Character_literal||LA165_1==FALSE||LA165_1==Hex_number||(LA165_1>=NULL && LA165_1<=NUMBER)||LA165_1==Real_literal||LA165_1==STRINGLITERAL||LA165_1==TRUE||LA165_1==Verbatim_string_literal) && (EvaluatePredicate(synpred25_cs_fragment)))
			{
				alt165 = 1;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 165, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(165); }
			switch (alt165)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:622:4: ( member_name '{' )=> member_name '{' event_accessor_declarations '}'
				{
				DebugLocation(622, 27);
				PushFollow(Follow._member_name_in_event_declaration4387);
				member_name592=member_name();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, member_name592.Tree, member_name592, retval);
				DebugLocation(622, 41);
				char_literal593=(IToken)Match(input,197,Follow._197_in_event_declaration4391); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal593_tree = (object)adaptor.Create(char_literal593, retval);
				adaptor.AddChild(root_0, char_literal593_tree);
				}
				DebugLocation(622, 47);
				PushFollow(Follow._event_accessor_declarations_in_event_declaration4395);
				event_accessor_declarations594=event_accessor_declarations();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, event_accessor_declarations594.Tree, event_accessor_declarations594, retval);
				DebugLocation(622, 77);
				char_literal595=(IToken)Match(input,201,Follow._201_in_event_declaration4399); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal595_tree = (object)adaptor.Create(char_literal595, retval);
				adaptor.AddChild(root_0, char_literal595_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:623:5: variable_declarators ';'
				{
				DebugLocation(623, 5);
				PushFollow(Follow._variable_declarators_in_event_declaration4405);
				variable_declarators596=variable_declarators();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variable_declarators596.Tree, variable_declarators596, retval);
				DebugLocation(623, 28);
				char_literal597=(IToken)Match(input,SEMI,Follow._SEMI_in_event_declaration4409); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal597_tree = (object)adaptor.Create(char_literal597, retval);
				adaptor.AddChild(root_0, char_literal597_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(165); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("event_declaration", 172);
			LeaveRule("event_declaration", 172);
			LeaveRule_event_declaration();
			if (state.backtracking > 0) { Memoize(input, 172, event_declaration_StartIndex); }

		}
		DebugLocation(624, 2);
		} finally { DebugExitRule(GrammarFileName, "event_declaration"); }
		return retval;

	}
	// $ANTLR end "event_declaration"

	partial void EnterRule_event_modifiers();
	partial void LeaveRule_event_modifiers();
	// $ANTLR start "event_modifiers"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:625:1: event_modifiers : ( modifier )+ ;
	[GrammarRule("event_modifiers")]
	private Antlr3AstNode event_modifiers()
	{
		EnterRule_event_modifiers();
		EnterRule("event_modifiers", 173);
		var retval = new Antlr3AstNode("event_modifiers");
		
		retval.Start = (IToken)input.LT(1);
		int event_modifiers_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode modifier598 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "event_modifiers");
		DebugLocation(625, 11);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 173)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:625:16: ( ( modifier )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:626:2: ( modifier )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(626, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:626:2: ( modifier )+
			int cnt166=0;
			try { DebugEnterSubRule(166);
			while (true)
			{
				int alt166=2;
				try { DebugEnterDecision(166, false);
				int LA166_1 = input.LA(1);

				if ((LA166_1==96||LA166_1==125||LA166_1==140||LA166_1==150||LA166_1==156||LA166_1==161||(LA166_1>=163 && LA166_1<=165)||LA166_1==170||LA166_1==176||LA166_1==188||LA166_1==191||LA166_1==193))
				{
					alt166 = 1;
				}


				} finally { DebugExitDecision(166); }
				switch (alt166)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:626:2: modifier
					{
					DebugLocation(626, 2);
					PushFollow(Follow._modifier_in_event_modifiers4421);
					modifier598=modifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, modifier598.Tree, modifier598, retval);

					}
					break;

				default:
					if (cnt166 >= 1)
						goto loop166;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee166 = new EarlyExitException( 166, input );
					DebugRecognitionException(eee166);
					throw eee166;
				}
				cnt166++;
			}
			loop166:
				;

			} finally { DebugExitSubRule(166); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("event_modifiers", 173);
			LeaveRule("event_modifiers", 173);
			LeaveRule_event_modifiers();
			if (state.backtracking > 0) { Memoize(input, 173, event_modifiers_StartIndex); }

		}
		DebugLocation(626, 11);
		} finally { DebugExitRule(GrammarFileName, "event_modifiers"); }
		return retval;

	}
	// $ANTLR end "event_modifiers"

	partial void EnterRule_event_accessor_declarations();
	partial void LeaveRule_event_accessor_declarations();
	// $ANTLR start "event_accessor_declarations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:627:1: event_accessor_declarations : ( attributes )? ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) ) ;
	[GrammarRule("event_accessor_declarations")]
	private Antlr3AstNode event_accessor_declarations()
	{
		EnterRule_event_accessor_declarations();
		EnterRule("event_accessor_declarations", 174);
		var retval = new Antlr3AstNode("event_accessor_declarations");
		
		retval.Start = (IToken)input.LT(1);
		int event_accessor_declarations_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode attributes599 = default(Antlr3AstNode);
		Antlr3AstNode add_accessor_declaration600 = default(Antlr3AstNode);
		Antlr3AstNode attributes601 = default(Antlr3AstNode);
		Antlr3AstNode remove_accessor_declaration602 = default(Antlr3AstNode);
		Antlr3AstNode remove_accessor_declaration603 = default(Antlr3AstNode);
		Antlr3AstNode attributes604 = default(Antlr3AstNode);
		Antlr3AstNode add_accessor_declaration605 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "event_accessor_declarations");
		DebugLocation(627, 89);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 174)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:627:28: ( ( attributes )? ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:628:2: ( attributes )? ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(628, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:628:2: ( attributes )?
			int alt167=2;
			try { DebugEnterSubRule(167);
			try { DebugEnterDecision(167, false);
			int LA167_1 = input.LA(1);

			if ((LA167_1==91))
			{
				alt167 = 1;
			}
			} finally { DebugExitDecision(167); }
			switch (alt167)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:628:2: attributes
				{
				DebugLocation(628, 2);
				PushFollow(Follow._attributes_in_event_accessor_declarations4430);
				attributes599=attributes();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, attributes599.Tree, attributes599, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(167); }

			DebugLocation(628, 16);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:628:16: ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) )
			int alt170=2;
			try { DebugEnterSubRule(170);
			try { DebugEnterDecision(170, false);
			int LA170_1 = input.LA(1);

			if ((LA170_1==97))
			{
				alt170 = 1;
			}
			else if ((LA170_1==167))
			{
				alt170 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 170, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(170); }
			switch (alt170)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:628:17: ( add_accessor_declaration ( attributes )? remove_accessor_declaration )
				{
				DebugLocation(628, 17);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:628:17: ( add_accessor_declaration ( attributes )? remove_accessor_declaration )
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:628:18: add_accessor_declaration ( attributes )? remove_accessor_declaration
				{
				DebugLocation(628, 18);
				PushFollow(Follow._add_accessor_declaration_in_event_accessor_declarations4437);
				add_accessor_declaration600=add_accessor_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, add_accessor_declaration600.Tree, add_accessor_declaration600, retval);
				DebugLocation(628, 45);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:628:45: ( attributes )?
				int alt168=2;
				try { DebugEnterSubRule(168);
				try { DebugEnterDecision(168, false);
				int LA168_1 = input.LA(1);

				if ((LA168_1==91))
				{
					alt168 = 1;
				}
				} finally { DebugExitDecision(168); }
				switch (alt168)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:628:45: attributes
					{
					DebugLocation(628, 45);
					PushFollow(Follow._attributes_in_event_accessor_declarations4441);
					attributes601=attributes();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, attributes601.Tree, attributes601, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(168); }

				DebugLocation(628, 59);
				PushFollow(Follow._remove_accessor_declaration_in_event_accessor_declarations4446);
				remove_accessor_declaration602=remove_accessor_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, remove_accessor_declaration602.Tree, remove_accessor_declaration602, retval);

				}


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:629:18: ( remove_accessor_declaration ( attributes )? add_accessor_declaration )
				{
				DebugLocation(629, 18);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:629:18: ( remove_accessor_declaration ( attributes )? add_accessor_declaration )
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:629:19: remove_accessor_declaration ( attributes )? add_accessor_declaration
				{
				DebugLocation(629, 19);
				PushFollow(Follow._remove_accessor_declaration_in_event_accessor_declarations4467);
				remove_accessor_declaration603=remove_accessor_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, remove_accessor_declaration603.Tree, remove_accessor_declaration603, retval);
				DebugLocation(629, 49);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:629:49: ( attributes )?
				int alt169=2;
				try { DebugEnterSubRule(169);
				try { DebugEnterDecision(169, false);
				int LA169_1 = input.LA(1);

				if ((LA169_1==91))
				{
					alt169 = 1;
				}
				} finally { DebugExitDecision(169); }
				switch (alt169)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:629:49: attributes
					{
					DebugLocation(629, 49);
					PushFollow(Follow._attributes_in_event_accessor_declarations4471);
					attributes604=attributes();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, attributes604.Tree, attributes604, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(169); }

				DebugLocation(629, 63);
				PushFollow(Follow._add_accessor_declaration_in_event_accessor_declarations4476);
				add_accessor_declaration605=add_accessor_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, add_accessor_declaration605.Tree, add_accessor_declaration605, retval);

				}


				}
				break;

			}
			} finally { DebugExitSubRule(170); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("event_accessor_declarations", 174);
			LeaveRule("event_accessor_declarations", 174);
			LeaveRule_event_accessor_declarations();
			if (state.backtracking > 0) { Memoize(input, 174, event_accessor_declarations_StartIndex); }

		}
		DebugLocation(629, 89);
		} finally { DebugExitRule(GrammarFileName, "event_accessor_declarations"); }
		return retval;

	}
	// $ANTLR end "event_accessor_declarations"

	partial void EnterRule_add_accessor_declaration();
	partial void LeaveRule_add_accessor_declaration();
	// $ANTLR start "add_accessor_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:630:1: add_accessor_declaration : 'add' block ;
	[GrammarRule("add_accessor_declaration")]
	private Antlr3AstNode add_accessor_declaration()
	{
		EnterRule_add_accessor_declaration();
		EnterRule("add_accessor_declaration", 175);
		var retval = new Antlr3AstNode("add_accessor_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int add_accessor_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal606 = default(IToken);
		Antlr3AstNode block607 = default(Antlr3AstNode);

		object string_literal606_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "add_accessor_declaration");
		DebugLocation(630, 15);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 175)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:630:25: ( 'add' block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:631:2: 'add' block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(631, 2);
			string_literal606=(IToken)Match(input,97,Follow._97_in_add_accessor_declaration4486); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal606_tree = (object)adaptor.Create(string_literal606, retval);
			adaptor.AddChild(root_0, string_literal606_tree);
			}
			DebugLocation(631, 10);
			PushFollow(Follow._block_in_add_accessor_declaration4490);
			block607=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block607.Tree, block607, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("add_accessor_declaration", 175);
			LeaveRule("add_accessor_declaration", 175);
			LeaveRule_add_accessor_declaration();
			if (state.backtracking > 0) { Memoize(input, 175, add_accessor_declaration_StartIndex); }

		}
		DebugLocation(631, 15);
		} finally { DebugExitRule(GrammarFileName, "add_accessor_declaration"); }
		return retval;

	}
	// $ANTLR end "add_accessor_declaration"

	partial void EnterRule_remove_accessor_declaration();
	partial void LeaveRule_remove_accessor_declaration();
	// $ANTLR start "remove_accessor_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:632:1: remove_accessor_declaration : 'remove' block ;
	[GrammarRule("remove_accessor_declaration")]
	private Antlr3AstNode remove_accessor_declaration()
	{
		EnterRule_remove_accessor_declaration();
		EnterRule("remove_accessor_declaration", 176);
		var retval = new Antlr3AstNode("remove_accessor_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int remove_accessor_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal608 = default(IToken);
		Antlr3AstNode block609 = default(Antlr3AstNode);

		object string_literal608_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "remove_accessor_declaration");
		DebugLocation(632, 18);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 176)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:632:28: ( 'remove' block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:633:2: 'remove' block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(633, 2);
			string_literal608=(IToken)Match(input,167,Follow._167_in_remove_accessor_declaration4498); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal608_tree = (object)adaptor.Create(string_literal608, retval);
			adaptor.AddChild(root_0, string_literal608_tree);
			}
			DebugLocation(633, 13);
			PushFollow(Follow._block_in_remove_accessor_declaration4502);
			block609=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block609.Tree, block609, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("remove_accessor_declaration", 176);
			LeaveRule("remove_accessor_declaration", 176);
			LeaveRule_remove_accessor_declaration();
			if (state.backtracking > 0) { Memoize(input, 176, remove_accessor_declaration_StartIndex); }

		}
		DebugLocation(633, 18);
		} finally { DebugExitRule(GrammarFileName, "remove_accessor_declaration"); }
		return retval;

	}
	// $ANTLR end "remove_accessor_declaration"

	partial void EnterRule_enum_declaration();
	partial void LeaveRule_enum_declaration();
	// $ANTLR start "enum_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:638:1: enum_declaration : 'enum' identifier ( enum_base )? enum_body ( ';' )? ;
	[GrammarRule("enum_declaration")]
	private Antlr3AstNode enum_declaration()
	{
		EnterRule_enum_declaration();
		EnterRule("enum_declaration", 177);
		var retval = new Antlr3AstNode("enum_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int enum_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal610 = default(IToken);
		IToken char_literal614 = default(IToken);
		Antlr3AstNode identifier611 = default(Antlr3AstNode);
		Antlr3AstNode enum_base612 = default(Antlr3AstNode);
		Antlr3AstNode enum_body613 = default(Antlr3AstNode);

		object string_literal610_tree = default(object);
		object char_literal614_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enum_declaration");
		DebugLocation(638, 53);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 177)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:638:17: ( 'enum' identifier ( enum_base )? enum_body ( ';' )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:639:2: 'enum' identifier ( enum_base )? enum_body ( ';' )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(639, 2);
			string_literal610=(IToken)Match(input,ENUM,Follow._ENUM_in_enum_declaration4514); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal610_tree = (object)adaptor.Create(string_literal610, retval);
			adaptor.AddChild(root_0, string_literal610_tree);
			}
			DebugLocation(639, 11);
			PushFollow(Follow._identifier_in_enum_declaration4518);
			identifier611=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier611.Tree, identifier611, retval);
			DebugLocation(639, 24);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:639:24: ( enum_base )?
			int alt171=2;
			try { DebugEnterSubRule(171);
			try { DebugEnterDecision(171, false);
			int LA171_1 = input.LA(1);

			if ((LA171_1==79))
			{
				alt171 = 1;
			}
			} finally { DebugExitDecision(171); }
			switch (alt171)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:639:24: enum_base
				{
				DebugLocation(639, 24);
				PushFollow(Follow._enum_base_in_enum_declaration4522);
				enum_base612=enum_base();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enum_base612.Tree, enum_base612, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(171); }

			DebugLocation(639, 37);
			PushFollow(Follow._enum_body_in_enum_declaration4527);
			enum_body613=enum_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, enum_body613.Tree, enum_body613, retval);
			DebugLocation(639, 49);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:639:49: ( ';' )?
			int alt172=2;
			try { DebugEnterSubRule(172);
			try { DebugEnterDecision(172, false);
			int LA172_1 = input.LA(1);

			if ((LA172_1==SEMI))
			{
				alt172 = 1;
			}
			} finally { DebugExitDecision(172); }
			switch (alt172)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:639:49: ';'
				{
				DebugLocation(639, 49);
				char_literal614=(IToken)Match(input,SEMI,Follow._SEMI_in_enum_declaration4531); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal614_tree = (object)adaptor.Create(char_literal614, retval);
				adaptor.AddChild(root_0, char_literal614_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(172); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enum_declaration", 177);
			LeaveRule("enum_declaration", 177);
			LeaveRule_enum_declaration();
			if (state.backtracking > 0) { Memoize(input, 177, enum_declaration_StartIndex); }

		}
		DebugLocation(639, 53);
		} finally { DebugExitRule(GrammarFileName, "enum_declaration"); }
		return retval;

	}
	// $ANTLR end "enum_declaration"

	partial void EnterRule_enum_base();
	partial void LeaveRule_enum_base();
	// $ANTLR start "enum_base"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:640:1: enum_base : ':' integral_type ;
	[GrammarRule("enum_base")]
	private Antlr3AstNode enum_base()
	{
		EnterRule_enum_base();
		EnterRule("enum_base", 178);
		var retval = new Antlr3AstNode("enum_base");
		
		retval.Start = (IToken)input.LT(1);
		int enum_base_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal615 = default(IToken);
		Antlr3AstNode integral_type616 = default(Antlr3AstNode);

		object char_literal615_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enum_base");
		DebugLocation(640, 21);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 178)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:640:10: ( ':' integral_type )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:641:2: ':' integral_type
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(641, 2);
			char_literal615=(IToken)Match(input,79,Follow._79_in_enum_base4540); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal615_tree = (object)adaptor.Create(char_literal615, retval);
			adaptor.AddChild(root_0, char_literal615_tree);
			}
			DebugLocation(641, 8);
			PushFollow(Follow._integral_type_in_enum_base4544);
			integral_type616=integral_type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, integral_type616.Tree, integral_type616, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enum_base", 178);
			LeaveRule("enum_base", 178);
			LeaveRule_enum_base();
			if (state.backtracking > 0) { Memoize(input, 178, enum_base_StartIndex); }

		}
		DebugLocation(641, 21);
		} finally { DebugExitRule(GrammarFileName, "enum_base"); }
		return retval;

	}
	// $ANTLR end "enum_base"

	partial void EnterRule_enum_body();
	partial void LeaveRule_enum_body();
	// $ANTLR start "enum_body"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:642:1: enum_body : '{' ( enum_member_declarations ( ',' )? )? '}' ;
	[GrammarRule("enum_body")]
	private Antlr3AstNode enum_body()
	{
		EnterRule_enum_body();
		EnterRule("enum_body", 179);
		var retval = new Antlr3AstNode("enum_body");
		
		retval.Start = (IToken)input.LT(1);
		int enum_body_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal617 = default(IToken);
		IToken char_literal619 = default(IToken);
		IToken char_literal620 = default(IToken);
		Antlr3AstNode enum_member_declarations618 = default(Antlr3AstNode);

		object char_literal617_tree = default(object);
		object char_literal619_tree = default(object);
		object char_literal620_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enum_body");
		DebugLocation(642, 44);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 179)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:642:10: ( '{' ( enum_member_declarations ( ',' )? )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:643:2: '{' ( enum_member_declarations ( ',' )? )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(643, 2);
			char_literal617=(IToken)Match(input,197,Follow._197_in_enum_body4552); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal617_tree = (object)adaptor.Create(char_literal617, retval);
			adaptor.AddChild(root_0, char_literal617_tree);
			}
			DebugLocation(643, 6);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:643:6: ( enum_member_declarations ( ',' )? )?
			int alt174=2;
			try { DebugEnterSubRule(174);
			try { DebugEnterDecision(174, false);
			int LA174_1 = input.LA(1);

			if ((LA174_1==IDENTIFIER||LA174_1==91||LA174_1==95||(LA174_1>=97 && LA174_1<=98)||(LA174_1>=100 && LA174_1<=101)||LA174_1==105||LA174_1==117||LA174_1==120||LA174_1==122||LA174_1==126||LA174_1==132||LA174_1==135||LA174_1==141||(LA174_1>=143 && LA174_1<=144)||(LA174_1>=147 && LA174_1<=148)||LA174_1==152||LA174_1==154||LA174_1==157||LA174_1==160||LA174_1==162||LA174_1==167||(LA174_1>=171 && LA174_1<=172)||LA174_1==183||LA174_1==190||LA174_1==194||LA174_1==196))
			{
				alt174 = 1;
			}
			} finally { DebugExitDecision(174); }
			switch (alt174)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:643:7: enum_member_declarations ( ',' )?
				{
				DebugLocation(643, 7);
				PushFollow(Follow._enum_member_declarations_in_enum_body4555);
				enum_member_declarations618=enum_member_declarations();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enum_member_declarations618.Tree, enum_member_declarations618, retval);
				DebugLocation(643, 32);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:643:32: ( ',' )?
				int alt173=2;
				try { DebugEnterSubRule(173);
				try { DebugEnterDecision(173, false);
				int LA173_1 = input.LA(1);

				if ((LA173_1==74))
				{
					alt173 = 1;
				}
				} finally { DebugExitDecision(173); }
				switch (alt173)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:643:32: ','
					{
					DebugLocation(643, 32);
					char_literal619=(IToken)Match(input,74,Follow._74_in_enum_body4557); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal619_tree = (object)adaptor.Create(char_literal619, retval);
					adaptor.AddChild(root_0, char_literal619_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(173); }


				}
				break;

			}
			} finally { DebugExitSubRule(174); }

			DebugLocation(643, 41);
			char_literal620=(IToken)Match(input,201,Follow._201_in_enum_body4564); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal620_tree = (object)adaptor.Create(char_literal620, retval);
			adaptor.AddChild(root_0, char_literal620_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enum_body", 179);
			LeaveRule("enum_body", 179);
			LeaveRule_enum_body();
			if (state.backtracking > 0) { Memoize(input, 179, enum_body_StartIndex); }

		}
		DebugLocation(643, 44);
		} finally { DebugExitRule(GrammarFileName, "enum_body"); }
		return retval;

	}
	// $ANTLR end "enum_body"

	partial void EnterRule_enum_member_declarations();
	partial void LeaveRule_enum_member_declarations();
	// $ANTLR start "enum_member_declarations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:644:1: enum_member_declarations : enum_member_declaration ( ',' enum_member_declaration )* ;
	[GrammarRule("enum_member_declarations")]
	private Antlr3AstNode enum_member_declarations()
	{
		EnterRule_enum_member_declarations();
		EnterRule("enum_member_declarations", 180);
		var retval = new Antlr3AstNode("enum_member_declarations");
		
		retval.Start = (IToken)input.LT(1);
		int enum_member_declarations_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal622 = default(IToken);
		Antlr3AstNode enum_member_declaration621 = default(Antlr3AstNode);
		Antlr3AstNode enum_member_declaration623 = default(Antlr3AstNode);

		object char_literal622_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enum_member_declarations");
		DebugLocation(644, 56);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 180)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:644:25: ( enum_member_declaration ( ',' enum_member_declaration )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:645:2: enum_member_declaration ( ',' enum_member_declaration )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(645, 2);
			PushFollow(Follow._enum_member_declaration_in_enum_member_declarations4572);
			enum_member_declaration621=enum_member_declaration();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, enum_member_declaration621.Tree, enum_member_declaration621, retval);
			DebugLocation(645, 26);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:645:26: ( ',' enum_member_declaration )*
			try { DebugEnterSubRule(175);
			while (true)
			{
				int alt175=2;
				try { DebugEnterDecision(175, false);
				int LA175_1 = input.LA(1);

				if ((LA175_1==74))
				{
					int LA175_2 = input.LA(2);

					if ((LA175_2==IDENTIFIER||LA175_2==91||LA175_2==95||(LA175_2>=97 && LA175_2<=98)||(LA175_2>=100 && LA175_2<=101)||LA175_2==105||LA175_2==117||LA175_2==120||LA175_2==122||LA175_2==126||LA175_2==132||LA175_2==135||LA175_2==141||(LA175_2>=143 && LA175_2<=144)||(LA175_2>=147 && LA175_2<=148)||LA175_2==152||LA175_2==154||LA175_2==157||LA175_2==160||LA175_2==162||LA175_2==167||(LA175_2>=171 && LA175_2<=172)||LA175_2==183||LA175_2==190||LA175_2==194||LA175_2==196))
					{
						alt175 = 1;
					}


				}


				} finally { DebugExitDecision(175); }
				switch ( alt175 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:645:27: ',' enum_member_declaration
					{
					DebugLocation(645, 27);
					char_literal622=(IToken)Match(input,74,Follow._74_in_enum_member_declarations4575); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal622_tree = (object)adaptor.Create(char_literal622, retval);
					adaptor.AddChild(root_0, char_literal622_tree);
					}
					DebugLocation(645, 31);
					PushFollow(Follow._enum_member_declaration_in_enum_member_declarations4577);
					enum_member_declaration623=enum_member_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, enum_member_declaration623.Tree, enum_member_declaration623, retval);

					}
					break;

				default:
					goto loop175;
				}
			}

			loop175:
				;

			} finally { DebugExitSubRule(175); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enum_member_declarations", 180);
			LeaveRule("enum_member_declarations", 180);
			LeaveRule_enum_member_declarations();
			if (state.backtracking > 0) { Memoize(input, 180, enum_member_declarations_StartIndex); }

		}
		DebugLocation(645, 56);
		} finally { DebugExitRule(GrammarFileName, "enum_member_declarations"); }
		return retval;

	}
	// $ANTLR end "enum_member_declarations"

	partial void EnterRule_enum_member_declaration();
	partial void LeaveRule_enum_member_declaration();
	// $ANTLR start "enum_member_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:646:1: enum_member_declaration : ( attributes )? identifier ( '=' expression )? ;
	[GrammarRule("enum_member_declaration")]
	private Antlr3AstNode enum_member_declaration()
	{
		EnterRule_enum_member_declaration();
		EnterRule("enum_member_declaration", 181);
		var retval = new Antlr3AstNode("enum_member_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int enum_member_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal626 = default(IToken);
		Antlr3AstNode attributes624 = default(Antlr3AstNode);
		Antlr3AstNode identifier625 = default(Antlr3AstNode);
		Antlr3AstNode expression627 = default(Antlr3AstNode);

		object char_literal626_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enum_member_declaration");
		DebugLocation(646, 48);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 181)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:646:24: ( ( attributes )? identifier ( '=' expression )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:647:2: ( attributes )? identifier ( '=' expression )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(647, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:647:2: ( attributes )?
			int alt176=2;
			try { DebugEnterSubRule(176);
			try { DebugEnterDecision(176, false);
			int LA176_1 = input.LA(1);

			if ((LA176_1==91))
			{
				alt176 = 1;
			}
			} finally { DebugExitDecision(176); }
			switch (alt176)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:647:2: attributes
				{
				DebugLocation(647, 2);
				PushFollow(Follow._attributes_in_enum_member_declaration4587);
				attributes624=attributes();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, attributes624.Tree, attributes624, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(176); }

			DebugLocation(647, 16);
			PushFollow(Follow._identifier_in_enum_member_declaration4592);
			identifier625=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier625.Tree, identifier625, retval);
			DebugLocation(647, 29);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:647:29: ( '=' expression )?
			int alt177=2;
			try { DebugEnterSubRule(177);
			try { DebugEnterDecision(177, false);
			int LA177_1 = input.LA(1);

			if ((LA177_1==85))
			{
				alt177 = 1;
			}
			} finally { DebugExitDecision(177); }
			switch (alt177)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:647:30: '=' expression
				{
				DebugLocation(647, 30);
				char_literal626=(IToken)Match(input,85,Follow._85_in_enum_member_declaration4597); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal626_tree = (object)adaptor.Create(char_literal626, retval);
				adaptor.AddChild(root_0, char_literal626_tree);
				}
				DebugLocation(647, 36);
				PushFollow(Follow._expression_in_enum_member_declaration4601);
				expression627=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression627.Tree, expression627, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(177); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enum_member_declaration", 181);
			LeaveRule("enum_member_declaration", 181);
			LeaveRule_enum_member_declaration();
			if (state.backtracking > 0) { Memoize(input, 181, enum_member_declaration_StartIndex); }

		}
		DebugLocation(647, 48);
		} finally { DebugExitRule(GrammarFileName, "enum_member_declaration"); }
		return retval;

	}
	// $ANTLR end "enum_member_declaration"

	partial void EnterRule_integral_type();
	partial void LeaveRule_integral_type();
	// $ANTLR start "integral_type"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:652:1: integral_type : ( 'sbyte' | 'byte' | 'short' | 'ushort' | 'int' | 'uint' | 'long' | 'ulong' | 'char' );
	[GrammarRule("integral_type")]
	private Antlr3AstNode integral_type()
	{
		EnterRule_integral_type();
		EnterRule("integral_type", 182);
		var retval = new Antlr3AstNode("integral_type");
		
		retval.Start = (IToken)input.LT(1);
		int integral_type_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set628 = default(IToken);

		object set628_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "integral_type");
		DebugLocation(652, 84);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 182)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:652:14: ( 'sbyte' | 'byte' | 'short' | 'ushort' | 'int' | 'uint' | 'long' | 'ulong' | 'char' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(652, 14);

			set628=(IToken)input.LT(1);
			if (input.LA(1)==106||input.LA(1)==109||input.LA(1)==138||input.LA(1)==146||input.LA(1)==169||input.LA(1)==173||(input.LA(1)>=185 && input.LA(1)<=186)||input.LA(1)==189)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set628, retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("integral_type", 182);
			LeaveRule("integral_type", 182);
			LeaveRule_integral_type();
			if (state.backtracking > 0) { Memoize(input, 182, integral_type_StartIndex); }

		}
		DebugLocation(653, 84);
		} finally { DebugExitRule(GrammarFileName, "integral_type"); }
		return retval;

	}
	// $ANTLR end "integral_type"

	partial void EnterRule_delegate_declaration();
	partial void LeaveRule_delegate_declaration();
	// $ANTLR start "delegate_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:656:1: delegate_declaration : 'delegate' return_type identifier ( variant_generic_parameter_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' ;
	[GrammarRule("delegate_declaration")]
	private Antlr3AstNode delegate_declaration()
	{
		EnterRule_delegate_declaration();
		EnterRule("delegate_declaration", 183);
		var retval = new Antlr3AstNode("delegate_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int delegate_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal629 = default(IToken);
		IToken char_literal633 = default(IToken);
		IToken char_literal635 = default(IToken);
		IToken char_literal637 = default(IToken);
		Antlr3AstNode return_type630 = default(Antlr3AstNode);
		Antlr3AstNode identifier631 = default(Antlr3AstNode);
		Antlr3AstNode variant_generic_parameter_list632 = default(Antlr3AstNode);
		Antlr3AstNode formal_parameter_list634 = default(Antlr3AstNode);
		Antlr3AstNode type_parameter_constraints_clauses636 = default(Antlr3AstNode);

		object string_literal629_tree = default(object);
		object char_literal633_tree = default(object);
		object char_literal635_tree = default(object);
		object char_literal637_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "delegate_declaration");
		DebugLocation(656, 81);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 183)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:656:21: ( 'delegate' return_type identifier ( variant_generic_parameter_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:657:2: 'delegate' return_type identifier ( variant_generic_parameter_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(657, 2);
			string_literal629=(IToken)Match(input,116,Follow._116_in_delegate_declaration4658); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal629_tree = (object)adaptor.Create(string_literal629, retval);
			adaptor.AddChild(root_0, string_literal629_tree);
			}
			DebugLocation(657, 15);
			PushFollow(Follow._return_type_in_delegate_declaration4662);
			return_type630=return_type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, return_type630.Tree, return_type630, retval);
			DebugLocation(657, 29);
			PushFollow(Follow._identifier_in_delegate_declaration4666);
			identifier631=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier631.Tree, identifier631, retval);
			DebugLocation(657, 41);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:657:41: ( variant_generic_parameter_list )?
			int alt178=2;
			try { DebugEnterSubRule(178);
			try { DebugEnterDecision(178, false);
			int LA178_1 = input.LA(1);

			if ((LA178_1==81))
			{
				alt178 = 1;
			}
			} finally { DebugExitDecision(178); }
			switch (alt178)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:657:41: variant_generic_parameter_list
				{
				DebugLocation(657, 41);
				PushFollow(Follow._variant_generic_parameter_list_in_delegate_declaration4669);
				variant_generic_parameter_list632=variant_generic_parameter_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variant_generic_parameter_list632.Tree, variant_generic_parameter_list632, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(178); }

			DebugLocation(658, 3);
			char_literal633=(IToken)Match(input,68,Follow._68_in_delegate_declaration4677); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal633_tree = (object)adaptor.Create(char_literal633, retval);
			adaptor.AddChild(root_0, char_literal633_tree);
			}
			DebugLocation(658, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:658:9: ( formal_parameter_list )?
			int alt179=2;
			try { DebugEnterSubRule(179);
			try { DebugEnterDecision(179, false);
			int LA179_1 = input.LA(1);

			if ((LA179_1==IDENTIFIER||LA179_1==91||LA179_1==95||(LA179_1>=97 && LA179_1<=98)||(LA179_1>=100 && LA179_1<=101)||LA179_1==103||(LA179_1>=105 && LA179_1<=106)||LA179_1==109||LA179_1==114||LA179_1==117||(LA179_1>=119 && LA179_1<=120)||LA179_1==122||LA179_1==126||LA179_1==129||LA179_1==132||LA179_1==135||LA179_1==138||LA179_1==141||(LA179_1>=143 && LA179_1<=144)||(LA179_1>=146 && LA179_1<=148)||(LA179_1>=151 && LA179_1<=152)||(LA179_1>=154 && LA179_1<=155)||(LA179_1>=157 && LA179_1<=158)||LA179_1==160||LA179_1==162||(LA179_1>=166 && LA179_1<=167)||LA179_1==169||(LA179_1>=171 && LA179_1<=173)||LA179_1==177||LA179_1==180||LA179_1==183||(LA179_1>=185 && LA179_1<=186)||(LA179_1>=189 && LA179_1<=190)||LA179_1==192||LA179_1==194||LA179_1==196))
			{
				alt179 = 1;
			}
			} finally { DebugExitDecision(179); }
			switch (alt179)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:658:9: formal_parameter_list
				{
				DebugLocation(658, 9);
				PushFollow(Follow._formal_parameter_list_in_delegate_declaration4681);
				formal_parameter_list634=formal_parameter_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, formal_parameter_list634.Tree, formal_parameter_list634, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(179); }

			DebugLocation(658, 34);
			char_literal635=(IToken)Match(input,RPAREN,Follow._RPAREN_in_delegate_declaration4686); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal635_tree = (object)adaptor.Create(char_literal635, retval);
			adaptor.AddChild(root_0, char_literal635_tree);
			}
			DebugLocation(658, 40);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:658:40: ( type_parameter_constraints_clauses )?
			int alt180=2;
			try { DebugEnterSubRule(180);
			try { DebugEnterDecision(180, false);
			int LA180_1 = input.LA(1);

			if ((LA180_1==194))
			{
				alt180 = 1;
			}
			} finally { DebugExitDecision(180); }
			switch (alt180)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:658:40: type_parameter_constraints_clauses
				{
				DebugLocation(658, 40);
				PushFollow(Follow._type_parameter_constraints_clauses_in_delegate_declaration4690);
				type_parameter_constraints_clauses636=type_parameter_constraints_clauses();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type_parameter_constraints_clauses636.Tree, type_parameter_constraints_clauses636, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(180); }

			DebugLocation(658, 78);
			char_literal637=(IToken)Match(input,SEMI,Follow._SEMI_in_delegate_declaration4695); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal637_tree = (object)adaptor.Create(char_literal637, retval);
			adaptor.AddChild(root_0, char_literal637_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("delegate_declaration", 183);
			LeaveRule("delegate_declaration", 183);
			LeaveRule_delegate_declaration();
			if (state.backtracking > 0) { Memoize(input, 183, delegate_declaration_StartIndex); }

		}
		DebugLocation(658, 81);
		} finally { DebugExitRule(GrammarFileName, "delegate_declaration"); }
		return retval;

	}
	// $ANTLR end "delegate_declaration"

	partial void EnterRule_delegate_modifiers();
	partial void LeaveRule_delegate_modifiers();
	// $ANTLR start "delegate_modifiers"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:659:1: delegate_modifiers : ( modifier )+ ;
	[GrammarRule("delegate_modifiers")]
	private Antlr3AstNode delegate_modifiers()
	{
		EnterRule_delegate_modifiers();
		EnterRule("delegate_modifiers", 184);
		var retval = new Antlr3AstNode("delegate_modifiers");
		
		retval.Start = (IToken)input.LT(1);
		int delegate_modifiers_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode modifier638 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "delegate_modifiers");
		DebugLocation(659, 11);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 184)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:659:19: ( ( modifier )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:660:2: ( modifier )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(660, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:660:2: ( modifier )+
			int cnt181=0;
			try { DebugEnterSubRule(181);
			while (true)
			{
				int alt181=2;
				try { DebugEnterDecision(181, false);
				int LA181_1 = input.LA(1);

				if ((LA181_1==96||LA181_1==125||LA181_1==140||LA181_1==150||LA181_1==156||LA181_1==161||(LA181_1>=163 && LA181_1<=165)||LA181_1==170||LA181_1==176||LA181_1==188||LA181_1==191||LA181_1==193))
				{
					alt181 = 1;
				}


				} finally { DebugExitDecision(181); }
				switch (alt181)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:660:2: modifier
					{
					DebugLocation(660, 2);
					PushFollow(Follow._modifier_in_delegate_modifiers4703);
					modifier638=modifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, modifier638.Tree, modifier638, retval);

					}
					break;

				default:
					if (cnt181 >= 1)
						goto loop181;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee181 = new EarlyExitException( 181, input );
					DebugRecognitionException(eee181);
					throw eee181;
				}
				cnt181++;
			}
			loop181:
				;

			} finally { DebugExitSubRule(181); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("delegate_modifiers", 184);
			LeaveRule("delegate_modifiers", 184);
			LeaveRule_delegate_modifiers();
			if (state.backtracking > 0) { Memoize(input, 184, delegate_modifiers_StartIndex); }

		}
		DebugLocation(660, 11);
		} finally { DebugExitRule(GrammarFileName, "delegate_modifiers"); }
		return retval;

	}
	// $ANTLR end "delegate_modifiers"

	partial void EnterRule_variant_generic_parameter_list();
	partial void LeaveRule_variant_generic_parameter_list();
	// $ANTLR start "variant_generic_parameter_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:662:1: variant_generic_parameter_list : '<' variant_type_parameters '>' ;
	[GrammarRule("variant_generic_parameter_list")]
	private Antlr3AstNode variant_generic_parameter_list()
	{
		EnterRule_variant_generic_parameter_list();
		EnterRule("variant_generic_parameter_list", 185);
		var retval = new Antlr3AstNode("variant_generic_parameter_list");
		
		retval.Start = (IToken)input.LT(1);
		int variant_generic_parameter_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal639 = default(IToken);
		IToken char_literal641 = default(IToken);
		Antlr3AstNode variant_type_parameters640 = default(Antlr3AstNode);

		object char_literal639_tree = default(object);
		object char_literal641_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "variant_generic_parameter_list");
		DebugLocation(662, 37);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 185)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:662:31: ( '<' variant_type_parameters '>' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:663:2: '<' variant_type_parameters '>'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(663, 2);
			char_literal639=(IToken)Match(input,81,Follow._81_in_variant_generic_parameter_list4713); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal639_tree = (object)adaptor.Create(char_literal639, retval);
			adaptor.AddChild(root_0, char_literal639_tree);
			}
			DebugLocation(663, 8);
			PushFollow(Follow._variant_type_parameters_in_variant_generic_parameter_list4717);
			variant_type_parameters640=variant_type_parameters();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variant_type_parameters640.Tree, variant_type_parameters640, retval);
			DebugLocation(663, 34);
			char_literal641=(IToken)Match(input,GT,Follow._GT_in_variant_generic_parameter_list4721); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal641_tree = (object)adaptor.Create(char_literal641, retval);
			adaptor.AddChild(root_0, char_literal641_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variant_generic_parameter_list", 185);
			LeaveRule("variant_generic_parameter_list", 185);
			LeaveRule_variant_generic_parameter_list();
			if (state.backtracking > 0) { Memoize(input, 185, variant_generic_parameter_list_StartIndex); }

		}
		DebugLocation(663, 37);
		} finally { DebugExitRule(GrammarFileName, "variant_generic_parameter_list"); }
		return retval;

	}
	// $ANTLR end "variant_generic_parameter_list"

	partial void EnterRule_variant_type_parameters();
	partial void LeaveRule_variant_type_parameters();
	// $ANTLR start "variant_type_parameters"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:664:1: variant_type_parameters : variant_type_variable_name ( ',' variant_type_variable_name )* ;
	[GrammarRule("variant_type_parameters")]
	private Antlr3AstNode variant_type_parameters()
	{
		EnterRule_variant_type_parameters();
		EnterRule("variant_type_parameters", 186);
		var retval = new Antlr3AstNode("variant_type_parameters");
		
		retval.Start = (IToken)input.LT(1);
		int variant_type_parameters_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal643 = default(IToken);
		Antlr3AstNode variant_type_variable_name642 = default(Antlr3AstNode);
		Antlr3AstNode variant_type_variable_name644 = default(Antlr3AstNode);

		object char_literal643_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "variant_type_parameters");
		DebugLocation(664, 62);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 186)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:664:24: ( variant_type_variable_name ( ',' variant_type_variable_name )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:665:2: variant_type_variable_name ( ',' variant_type_variable_name )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(665, 2);
			PushFollow(Follow._variant_type_variable_name_in_variant_type_parameters4729);
			variant_type_variable_name642=variant_type_variable_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variant_type_variable_name642.Tree, variant_type_variable_name642, retval);
			DebugLocation(665, 29);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:665:29: ( ',' variant_type_variable_name )*
			try { DebugEnterSubRule(182);
			while (true)
			{
				int alt182=2;
				try { DebugEnterDecision(182, false);
				int LA182_1 = input.LA(1);

				if ((LA182_1==74))
				{
					alt182 = 1;
				}


				} finally { DebugExitDecision(182); }
				switch ( alt182 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:665:30: ',' variant_type_variable_name
					{
					DebugLocation(665, 30);
					char_literal643=(IToken)Match(input,74,Follow._74_in_variant_type_parameters4732); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal643_tree = (object)adaptor.Create(char_literal643, retval);
					adaptor.AddChild(root_0, char_literal643_tree);
					}
					DebugLocation(665, 34);
					PushFollow(Follow._variant_type_variable_name_in_variant_type_parameters4734);
					variant_type_variable_name644=variant_type_variable_name();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, variant_type_variable_name644.Tree, variant_type_variable_name644, retval);

					}
					break;

				default:
					goto loop182;
				}
			}

			loop182:
				;

			} finally { DebugExitSubRule(182); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variant_type_parameters", 186);
			LeaveRule("variant_type_parameters", 186);
			LeaveRule_variant_type_parameters();
			if (state.backtracking > 0) { Memoize(input, 186, variant_type_parameters_StartIndex); }

		}
		DebugLocation(665, 62);
		} finally { DebugExitRule(GrammarFileName, "variant_type_parameters"); }
		return retval;

	}
	// $ANTLR end "variant_type_parameters"

	partial void EnterRule_variant_type_variable_name();
	partial void LeaveRule_variant_type_variable_name();
	// $ANTLR start "variant_type_variable_name"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:666:1: variant_type_variable_name : ( attributes )? ( variance_annotation )? type_variable_name ;
	[GrammarRule("variant_type_variable_name")]
	private Antlr3AstNode variant_type_variable_name()
	{
		EnterRule_variant_type_variable_name();
		EnterRule("variant_type_variable_name", 187);
		var retval = new Antlr3AstNode("variant_type_variable_name");
		
		retval.Start = (IToken)input.LT(1);
		int variant_type_variable_name_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode attributes645 = default(Antlr3AstNode);
		Antlr3AstNode variance_annotation646 = default(Antlr3AstNode);
		Antlr3AstNode type_variable_name647 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "variant_type_variable_name");
		DebugLocation(666, 57);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 187)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:666:27: ( ( attributes )? ( variance_annotation )? type_variable_name )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:667:2: ( attributes )? ( variance_annotation )? type_variable_name
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(667, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:667:2: ( attributes )?
			int alt183=2;
			try { DebugEnterSubRule(183);
			try { DebugEnterDecision(183, false);
			int LA183_1 = input.LA(1);

			if ((LA183_1==91))
			{
				alt183 = 1;
			}
			} finally { DebugExitDecision(183); }
			switch (alt183)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:667:2: attributes
				{
				DebugLocation(667, 2);
				PushFollow(Follow._attributes_in_variant_type_variable_name4744);
				attributes645=attributes();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, attributes645.Tree, attributes645, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(183); }

			DebugLocation(667, 16);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:667:16: ( variance_annotation )?
			int alt184=2;
			try { DebugEnterSubRule(184);
			try { DebugEnterDecision(184, false);
			int LA184_1 = input.LA(1);

			if ((LA184_1==137||LA184_1==155))
			{
				alt184 = 1;
			}
			} finally { DebugExitDecision(184); }
			switch (alt184)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:667:16: variance_annotation
				{
				DebugLocation(667, 16);
				PushFollow(Follow._variance_annotation_in_variant_type_variable_name4749);
				variance_annotation646=variance_annotation();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variance_annotation646.Tree, variance_annotation646, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(184); }

			DebugLocation(667, 39);
			PushFollow(Follow._type_variable_name_in_variant_type_variable_name4754);
			type_variable_name647=type_variable_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_variable_name647.Tree, type_variable_name647, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variant_type_variable_name", 187);
			LeaveRule("variant_type_variable_name", 187);
			LeaveRule_variant_type_variable_name();
			if (state.backtracking > 0) { Memoize(input, 187, variant_type_variable_name_StartIndex); }

		}
		DebugLocation(667, 57);
		} finally { DebugExitRule(GrammarFileName, "variant_type_variable_name"); }
		return retval;

	}
	// $ANTLR end "variant_type_variable_name"

	partial void EnterRule_variance_annotation();
	partial void LeaveRule_variance_annotation();
	// $ANTLR start "variance_annotation"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:668:1: variance_annotation : ( 'in' | 'out' );
	[GrammarRule("variance_annotation")]
	private Antlr3AstNode variance_annotation()
	{
		EnterRule_variance_annotation();
		EnterRule("variance_annotation", 188);
		var retval = new Antlr3AstNode("variance_annotation");
		
		retval.Start = (IToken)input.LT(1);
		int variance_annotation_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set648 = default(IToken);

		object set648_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "variance_annotation");
		DebugLocation(668, 14);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 188)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:668:20: ( 'in' | 'out' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(668, 20);

			set648=(IToken)input.LT(1);
			if (input.LA(1)==137||input.LA(1)==155)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set648, retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variance_annotation", 188);
			LeaveRule("variance_annotation", 188);
			LeaveRule_variance_annotation();
			if (state.backtracking > 0) { Memoize(input, 188, variance_annotation_StartIndex); }

		}
		DebugLocation(669, 14);
		} finally { DebugExitRule(GrammarFileName, "variance_annotation"); }
		return retval;

	}
	// $ANTLR end "variance_annotation"

	partial void EnterRule_type_parameter_constraints_clauses();
	partial void LeaveRule_type_parameter_constraints_clauses();
	// $ANTLR start "type_parameter_constraints_clauses"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:671:1: type_parameter_constraints_clauses : type_parameter_constraints_clause ( ',' type_parameter_constraints_clause )* ;
	[GrammarRule("type_parameter_constraints_clauses")]
	private Antlr3AstNode type_parameter_constraints_clauses()
	{
		EnterRule_type_parameter_constraints_clauses();
		EnterRule("type_parameter_constraints_clauses", 189);
		var retval = new Antlr3AstNode("type_parameter_constraints_clauses");
		
		retval.Start = (IToken)input.LT(1);
		int type_parameter_constraints_clauses_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal650 = default(IToken);
		Antlr3AstNode type_parameter_constraints_clause649 = default(Antlr3AstNode);
		Antlr3AstNode type_parameter_constraints_clause651 = default(Antlr3AstNode);

		object char_literal650_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "type_parameter_constraints_clauses");
		DebugLocation(671, 80);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 189)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:671:35: ( type_parameter_constraints_clause ( ',' type_parameter_constraints_clause )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:672:2: type_parameter_constraints_clause ( ',' type_parameter_constraints_clause )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(672, 2);
			PushFollow(Follow._type_parameter_constraints_clause_in_type_parameter_constraints_clauses4775);
			type_parameter_constraints_clause649=type_parameter_constraints_clause();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_parameter_constraints_clause649.Tree, type_parameter_constraints_clause649, retval);
			DebugLocation(672, 38);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:672:38: ( ',' type_parameter_constraints_clause )*
			try { DebugEnterSubRule(185);
			while (true)
			{
				int alt185=2;
				try { DebugEnterDecision(185, false);
				int LA185_1 = input.LA(1);

				if ((LA185_1==74))
				{
					alt185 = 1;
				}


				} finally { DebugExitDecision(185); }
				switch ( alt185 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:672:39: ',' type_parameter_constraints_clause
					{
					DebugLocation(672, 39);
					char_literal650=(IToken)Match(input,74,Follow._74_in_type_parameter_constraints_clauses4780); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal650_tree = (object)adaptor.Create(char_literal650, retval);
					adaptor.AddChild(root_0, char_literal650_tree);
					}
					DebugLocation(672, 45);
					PushFollow(Follow._type_parameter_constraints_clause_in_type_parameter_constraints_clauses4784);
					type_parameter_constraints_clause651=type_parameter_constraints_clause();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type_parameter_constraints_clause651.Tree, type_parameter_constraints_clause651, retval);

					}
					break;

				default:
					goto loop185;
				}
			}

			loop185:
				;

			} finally { DebugExitSubRule(185); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("type_parameter_constraints_clauses", 189);
			LeaveRule("type_parameter_constraints_clauses", 189);
			LeaveRule_type_parameter_constraints_clauses();
			if (state.backtracking > 0) { Memoize(input, 189, type_parameter_constraints_clauses_StartIndex); }

		}
		DebugLocation(672, 80);
		} finally { DebugExitRule(GrammarFileName, "type_parameter_constraints_clauses"); }
		return retval;

	}
	// $ANTLR end "type_parameter_constraints_clauses"

	partial void EnterRule_type_parameter_constraints_clause();
	partial void LeaveRule_type_parameter_constraints_clause();
	// $ANTLR start "type_parameter_constraints_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:673:1: type_parameter_constraints_clause : 'where' type_variable_name ':' type_parameter_constraint_list ;
	[GrammarRule("type_parameter_constraints_clause")]
	private Antlr3AstNode type_parameter_constraints_clause()
	{
		EnterRule_type_parameter_constraints_clause();
		EnterRule("type_parameter_constraints_clause", 190);
		var retval = new Antlr3AstNode("type_parameter_constraints_clause");
		
		retval.Start = (IToken)input.LT(1);
		int type_parameter_constraints_clause_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal652 = default(IToken);
		IToken char_literal654 = default(IToken);
		Antlr3AstNode type_variable_name653 = default(Antlr3AstNode);
		Antlr3AstNode type_parameter_constraint_list655 = default(Antlr3AstNode);

		object string_literal652_tree = default(object);
		object char_literal654_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "type_parameter_constraints_clause");
		DebugLocation(673, 69);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 190)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:673:34: ( 'where' type_variable_name ':' type_parameter_constraint_list )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:674:2: 'where' type_variable_name ':' type_parameter_constraint_list
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(674, 2);
			string_literal652=(IToken)Match(input,194,Follow._194_in_type_parameter_constraints_clause4794); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal652_tree = (object)adaptor.Create(string_literal652, retval);
			adaptor.AddChild(root_0, string_literal652_tree);
			}
			DebugLocation(674, 12);
			PushFollow(Follow._type_variable_name_in_type_parameter_constraints_clause4798);
			type_variable_name653=type_variable_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_variable_name653.Tree, type_variable_name653, retval);
			DebugLocation(674, 33);
			char_literal654=(IToken)Match(input,79,Follow._79_in_type_parameter_constraints_clause4802); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal654_tree = (object)adaptor.Create(char_literal654, retval);
			adaptor.AddChild(root_0, char_literal654_tree);
			}
			DebugLocation(674, 39);
			PushFollow(Follow._type_parameter_constraint_list_in_type_parameter_constraints_clause4806);
			type_parameter_constraint_list655=type_parameter_constraint_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_parameter_constraint_list655.Tree, type_parameter_constraint_list655, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("type_parameter_constraints_clause", 190);
			LeaveRule("type_parameter_constraints_clause", 190);
			LeaveRule_type_parameter_constraints_clause();
			if (state.backtracking > 0) { Memoize(input, 190, type_parameter_constraints_clause_StartIndex); }

		}
		DebugLocation(674, 69);
		} finally { DebugExitRule(GrammarFileName, "type_parameter_constraints_clause"); }
		return retval;

	}
	// $ANTLR end "type_parameter_constraints_clause"

	partial void EnterRule_type_parameter_constraint_list();
	partial void LeaveRule_type_parameter_constraint_list();
	// $ANTLR start "type_parameter_constraint_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:676:1: type_parameter_constraint_list : ( ( 'class' | 'struct' ) ( ',' secondary_constraint_list )? ( ',' constructor_constraint )? | secondary_constraint_list ( ',' constructor_constraint )? | constructor_constraint );
	[GrammarRule("type_parameter_constraint_list")]
	private Antlr3AstNode type_parameter_constraint_list()
	{
		EnterRule_type_parameter_constraint_list();
		EnterRule("type_parameter_constraint_list", 191);
		var retval = new Antlr3AstNode("type_parameter_constraint_list");
		
		retval.Start = (IToken)input.LT(1);
		int type_parameter_constraint_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set656 = default(IToken);
		IToken char_literal657 = default(IToken);
		IToken char_literal659 = default(IToken);
		IToken char_literal662 = default(IToken);
		Antlr3AstNode secondary_constraint_list658 = default(Antlr3AstNode);
		Antlr3AstNode constructor_constraint660 = default(Antlr3AstNode);
		Antlr3AstNode secondary_constraint_list661 = default(Antlr3AstNode);
		Antlr3AstNode constructor_constraint663 = default(Antlr3AstNode);
		Antlr3AstNode constructor_constraint664 = default(Antlr3AstNode);

		object set656_tree = default(object);
		object char_literal657_tree = default(object);
		object char_literal659_tree = default(object);
		object char_literal662_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "type_parameter_constraint_list");
		DebugLocation(676, 26);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 191)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:676:31: ( ( 'class' | 'struct' ) ( ',' secondary_constraint_list )? ( ',' constructor_constraint )? | secondary_constraint_list ( ',' constructor_constraint )? | constructor_constraint )
			int alt189=3;
			try { DebugEnterDecision(189, false);
			switch (input.LA(1))
			{
			case 111:
			case 178:
				{
				alt189 = 1;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 132:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				alt189 = 2;
				}
				break;
			case 150:
				{
				alt189 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 189, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(189); }
			switch (alt189)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:677:5: ( 'class' | 'struct' ) ( ',' secondary_constraint_list )? ( ',' constructor_constraint )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(677, 5);

				set656=(IToken)input.LT(1);
				if (input.LA(1)==111||input.LA(1)==178)
				{
					input.Consume();
					if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set656, retval));
					state.errorRecovery=false;state.failed=false;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					DebugRecognitionException(mse);
					throw mse;
				}

				DebugLocation(677, 28);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:677:28: ( ',' secondary_constraint_list )?
				int alt186=2;
				try { DebugEnterSubRule(186);
				try { DebugEnterDecision(186, false);
				int LA186_1 = input.LA(1);

				if ((LA186_1==74))
				{
					int LA186_2 = input.LA(2);

					if ((LA186_2==194))
					{
						int LA186_3 = input.LA(3);

						if ((LA186_3==DOT||LA186_3==SEMI||LA186_3==74||(LA186_3>=80 && LA186_3<=81)||LA186_3==197))
						{
							alt186 = 1;
						}
					}
					else if ((LA186_2==IDENTIFIER||LA186_2==95||(LA186_2>=97 && LA186_2<=98)||(LA186_2>=100 && LA186_2<=101)||LA186_2==105||LA186_2==117||LA186_2==120||LA186_2==122||LA186_2==126||LA186_2==132||LA186_2==135||LA186_2==141||(LA186_2>=143 && LA186_2<=144)||(LA186_2>=147 && LA186_2<=148)||LA186_2==152||LA186_2==154||LA186_2==157||LA186_2==160||LA186_2==162||LA186_2==167||(LA186_2>=171 && LA186_2<=172)||LA186_2==183||LA186_2==190||LA186_2==196))
					{
						alt186 = 1;
					}
				}
				} finally { DebugExitDecision(186); }
				switch (alt186)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:677:29: ',' secondary_constraint_list
					{
					DebugLocation(677, 29);
					char_literal657=(IToken)Match(input,74,Follow._74_in_type_parameter_constraint_list4880); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal657_tree = (object)adaptor.Create(char_literal657, retval);
					adaptor.AddChild(root_0, char_literal657_tree);
					}
					DebugLocation(677, 35);
					PushFollow(Follow._secondary_constraint_list_in_type_parameter_constraint_list4884);
					secondary_constraint_list658=secondary_constraint_list();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, secondary_constraint_list658.Tree, secondary_constraint_list658, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(186); }

				DebugLocation(677, 65);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:677:65: ( ',' constructor_constraint )?
				int alt187=2;
				try { DebugEnterSubRule(187);
				try { DebugEnterDecision(187, false);
				int LA187_1 = input.LA(1);

				if ((LA187_1==74))
				{
					int LA187_2 = input.LA(2);

					if ((LA187_2==150))
					{
						alt187 = 1;
					}
				}
				} finally { DebugExitDecision(187); }
				switch (alt187)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:677:66: ',' constructor_constraint
					{
					DebugLocation(677, 66);
					char_literal659=(IToken)Match(input,74,Follow._74_in_type_parameter_constraint_list4891); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal659_tree = (object)adaptor.Create(char_literal659, retval);
					adaptor.AddChild(root_0, char_literal659_tree);
					}
					DebugLocation(677, 72);
					PushFollow(Follow._constructor_constraint_in_type_parameter_constraint_list4895);
					constructor_constraint660=constructor_constraint();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, constructor_constraint660.Tree, constructor_constraint660, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(187); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:678:4: secondary_constraint_list ( ',' constructor_constraint )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(678, 4);
				PushFollow(Follow._secondary_constraint_list_in_type_parameter_constraint_list4902);
				secondary_constraint_list661=secondary_constraint_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, secondary_constraint_list661.Tree, secondary_constraint_list661, retval);
				DebugLocation(678, 32);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:678:32: ( ',' constructor_constraint )?
				int alt188=2;
				try { DebugEnterSubRule(188);
				try { DebugEnterDecision(188, false);
				int LA188_1 = input.LA(1);

				if ((LA188_1==74))
				{
					int LA188_2 = input.LA(2);

					if ((LA188_2==150))
					{
						alt188 = 1;
					}
				}
				} finally { DebugExitDecision(188); }
				switch (alt188)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:678:33: ',' constructor_constraint
					{
					DebugLocation(678, 33);
					char_literal662=(IToken)Match(input,74,Follow._74_in_type_parameter_constraint_list4907); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal662_tree = (object)adaptor.Create(char_literal662, retval);
					adaptor.AddChild(root_0, char_literal662_tree);
					}
					DebugLocation(678, 39);
					PushFollow(Follow._constructor_constraint_in_type_parameter_constraint_list4911);
					constructor_constraint663=constructor_constraint();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, constructor_constraint663.Tree, constructor_constraint663, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(188); }


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:679:4: constructor_constraint
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(679, 4);
				PushFollow(Follow._constructor_constraint_in_type_parameter_constraint_list4918);
				constructor_constraint664=constructor_constraint();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constructor_constraint664.Tree, constructor_constraint664, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("type_parameter_constraint_list", 191);
			LeaveRule("type_parameter_constraint_list", 191);
			LeaveRule_type_parameter_constraint_list();
			if (state.backtracking > 0) { Memoize(input, 191, type_parameter_constraint_list_StartIndex); }

		}
		DebugLocation(679, 26);
		} finally { DebugExitRule(GrammarFileName, "type_parameter_constraint_list"); }
		return retval;

	}
	// $ANTLR end "type_parameter_constraint_list"

	partial void EnterRule_secondary_constraint_list();
	partial void LeaveRule_secondary_constraint_list();
	// $ANTLR start "secondary_constraint_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:684:1: secondary_constraint_list : secondary_constraint ( ',' secondary_constraint )* ;
	[GrammarRule("secondary_constraint_list")]
	private Antlr3AstNode secondary_constraint_list()
	{
		EnterRule_secondary_constraint_list();
		EnterRule("secondary_constraint_list", 192);
		var retval = new Antlr3AstNode("secondary_constraint_list");
		
		retval.Start = (IToken)input.LT(1);
		int secondary_constraint_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal666 = default(IToken);
		Antlr3AstNode secondary_constraint665 = default(Antlr3AstNode);
		Antlr3AstNode secondary_constraint667 = default(Antlr3AstNode);

		object char_literal666_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "secondary_constraint_list");
		DebugLocation(684, 50);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 192)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:684:26: ( secondary_constraint ( ',' secondary_constraint )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:685:2: secondary_constraint ( ',' secondary_constraint )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(685, 2);
			PushFollow(Follow._secondary_constraint_in_secondary_constraint_list4930);
			secondary_constraint665=secondary_constraint();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, secondary_constraint665.Tree, secondary_constraint665, retval);
			DebugLocation(685, 23);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:685:23: ( ',' secondary_constraint )*
			try { DebugEnterSubRule(190);
			while (true)
			{
				int alt190=2;
				try { DebugEnterDecision(190, false);
				int LA190_1 = input.LA(1);

				if ((LA190_1==74))
				{
					int LA190_2 = input.LA(2);

					if ((LA190_2==194))
					{
						int LA190_3 = input.LA(3);

						if ((LA190_3==DOT||LA190_3==SEMI||LA190_3==74||(LA190_3>=80 && LA190_3<=81)||LA190_3==197))
						{
							alt190 = 1;
						}


					}
					else if ((LA190_2==IDENTIFIER||LA190_2==95||(LA190_2>=97 && LA190_2<=98)||(LA190_2>=100 && LA190_2<=101)||LA190_2==105||LA190_2==117||LA190_2==120||LA190_2==122||LA190_2==126||LA190_2==132||LA190_2==135||LA190_2==141||(LA190_2>=143 && LA190_2<=144)||(LA190_2>=147 && LA190_2<=148)||LA190_2==152||LA190_2==154||LA190_2==157||LA190_2==160||LA190_2==162||LA190_2==167||(LA190_2>=171 && LA190_2<=172)||LA190_2==183||LA190_2==190||LA190_2==196))
					{
						alt190 = 1;
					}


				}


				} finally { DebugExitDecision(190); }
				switch ( alt190 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:685:24: ',' secondary_constraint
					{
					DebugLocation(685, 24);
					char_literal666=(IToken)Match(input,74,Follow._74_in_secondary_constraint_list4933); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal666_tree = (object)adaptor.Create(char_literal666, retval);
					adaptor.AddChild(root_0, char_literal666_tree);
					}
					DebugLocation(685, 28);
					PushFollow(Follow._secondary_constraint_in_secondary_constraint_list4935);
					secondary_constraint667=secondary_constraint();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, secondary_constraint667.Tree, secondary_constraint667, retval);

					}
					break;

				default:
					goto loop190;
				}
			}

			loop190:
				;

			} finally { DebugExitSubRule(190); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("secondary_constraint_list", 192);
			LeaveRule("secondary_constraint_list", 192);
			LeaveRule_secondary_constraint_list();
			if (state.backtracking > 0) { Memoize(input, 192, secondary_constraint_list_StartIndex); }

		}
		DebugLocation(685, 50);
		} finally { DebugExitRule(GrammarFileName, "secondary_constraint_list"); }
		return retval;

	}
	// $ANTLR end "secondary_constraint_list"

	partial void EnterRule_secondary_constraint();
	partial void LeaveRule_secondary_constraint();
	// $ANTLR start "secondary_constraint"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:686:1: secondary_constraint : type_name ;
	[GrammarRule("secondary_constraint")]
	private Antlr3AstNode secondary_constraint()
	{
		EnterRule_secondary_constraint();
		EnterRule("secondary_constraint", 193);
		var retval = new Antlr3AstNode("secondary_constraint");
		
		retval.Start = (IToken)input.LT(1);
		int secondary_constraint_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode type_name668 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "secondary_constraint");
		DebugLocation(686, 11);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 193)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:686:21: ( type_name )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:687:2: type_name
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(687, 2);
			PushFollow(Follow._type_name_in_secondary_constraint4945);
			type_name668=type_name();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_name668.Tree, type_name668, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("secondary_constraint", 193);
			LeaveRule("secondary_constraint", 193);
			LeaveRule_secondary_constraint();
			if (state.backtracking > 0) { Memoize(input, 193, secondary_constraint_StartIndex); }

		}
		DebugLocation(687, 11);
		} finally { DebugExitRule(GrammarFileName, "secondary_constraint"); }
		return retval;

	}
	// $ANTLR end "secondary_constraint"

	partial void EnterRule_type_variable_name();
	partial void LeaveRule_type_variable_name();
	// $ANTLR start "type_variable_name"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:688:1: type_variable_name : identifier ;
	[GrammarRule("type_variable_name")]
	private Antlr3AstNode type_variable_name()
	{
		EnterRule_type_variable_name();
		EnterRule("type_variable_name", 194);
		var retval = new Antlr3AstNode("type_variable_name");
		
		retval.Start = (IToken)input.LT(1);
		int type_variable_name_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode identifier669 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "type_variable_name");
		DebugLocation(688, 12);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 194)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:688:19: ( identifier )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:689:2: identifier
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(689, 2);
			PushFollow(Follow._identifier_in_type_variable_name4955);
			identifier669=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier669.Tree, identifier669, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("type_variable_name", 194);
			LeaveRule("type_variable_name", 194);
			LeaveRule_type_variable_name();
			if (state.backtracking > 0) { Memoize(input, 194, type_variable_name_StartIndex); }

		}
		DebugLocation(689, 12);
		} finally { DebugExitRule(GrammarFileName, "type_variable_name"); }
		return retval;

	}
	// $ANTLR end "type_variable_name"

	partial void EnterRule_constructor_constraint();
	partial void LeaveRule_constructor_constraint();
	// $ANTLR start "constructor_constraint"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:690:1: constructor_constraint : 'new' '(' ')' ;
	[GrammarRule("constructor_constraint")]
	private Antlr3AstNode constructor_constraint()
	{
		EnterRule_constructor_constraint();
		EnterRule("constructor_constraint", 195);
		var retval = new Antlr3AstNode("constructor_constraint");
		
		retval.Start = (IToken)input.LT(1);
		int constructor_constraint_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal670 = default(IToken);
		IToken char_literal671 = default(IToken);
		IToken char_literal672 = default(IToken);

		object string_literal670_tree = default(object);
		object char_literal671_tree = default(object);
		object char_literal672_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "constructor_constraint");
		DebugLocation(690, 19);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 195)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:690:23: ( 'new' '(' ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:691:2: 'new' '(' ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(691, 2);
			string_literal670=(IToken)Match(input,150,Follow._150_in_constructor_constraint4963); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal670_tree = (object)adaptor.Create(string_literal670, retval);
			adaptor.AddChild(root_0, string_literal670_tree);
			}
			DebugLocation(691, 10);
			char_literal671=(IToken)Match(input,68,Follow._68_in_constructor_constraint4967); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal671_tree = (object)adaptor.Create(char_literal671, retval);
			adaptor.AddChild(root_0, char_literal671_tree);
			}
			DebugLocation(691, 16);
			char_literal672=(IToken)Match(input,RPAREN,Follow._RPAREN_in_constructor_constraint4971); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal672_tree = (object)adaptor.Create(char_literal672, retval);
			adaptor.AddChild(root_0, char_literal672_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constructor_constraint", 195);
			LeaveRule("constructor_constraint", 195);
			LeaveRule_constructor_constraint();
			if (state.backtracking > 0) { Memoize(input, 195, constructor_constraint_StartIndex); }

		}
		DebugLocation(691, 19);
		} finally { DebugExitRule(GrammarFileName, "constructor_constraint"); }
		return retval;

	}
	// $ANTLR end "constructor_constraint"

	partial void EnterRule_return_type();
	partial void LeaveRule_return_type();
	// $ANTLR start "return_type"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:692:1: return_type : ( type | 'void' );
	[GrammarRule("return_type")]
	private Antlr3AstNode return_type()
	{
		EnterRule_return_type();
		EnterRule("return_type", 196);
		var retval = new Antlr3AstNode("return_type");
		
		retval.Start = (IToken)input.LT(1);
		int return_type_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal674 = default(IToken);
		Antlr3AstNode type673 = default(Antlr3AstNode);

		object string_literal674_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "return_type");
		DebugLocation(692, 10);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 196)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:692:12: ( type | 'void' )
			int alt191=2;
			try { DebugEnterDecision(191, false);
			int LA191_1 = input.LA(1);

			if ((LA191_1==IDENTIFIER||LA191_1==95||(LA191_1>=97 && LA191_1<=98)||(LA191_1>=100 && LA191_1<=101)||LA191_1==103||(LA191_1>=105 && LA191_1<=106)||LA191_1==109||LA191_1==114||LA191_1==117||(LA191_1>=119 && LA191_1<=120)||LA191_1==122||LA191_1==126||LA191_1==129||LA191_1==132||LA191_1==135||LA191_1==138||LA191_1==141||(LA191_1>=143 && LA191_1<=144)||(LA191_1>=146 && LA191_1<=148)||(LA191_1>=151 && LA191_1<=152)||LA191_1==154||LA191_1==157||LA191_1==160||LA191_1==162||LA191_1==167||LA191_1==169||(LA191_1>=171 && LA191_1<=173)||LA191_1==177||LA191_1==183||(LA191_1>=185 && LA191_1<=186)||(LA191_1>=189 && LA191_1<=190)||LA191_1==194||LA191_1==196))
			{
				alt191 = 1;
			}
			else if ((LA191_1==192))
			{
				int LA191_2 = input.LA(2);

				if ((LA191_2==69))
				{
					alt191 = 1;
				}
				else if ((LA191_2==IDENTIFIER||LA191_2==95||(LA191_2>=97 && LA191_2<=98)||(LA191_2>=100 && LA191_2<=101)||LA191_2==105||LA191_2==117||LA191_2==120||LA191_2==122||LA191_2==126||LA191_2==132||LA191_2==135||LA191_2==141||(LA191_2>=143 && LA191_2<=144)||(LA191_2>=147 && LA191_2<=148)||LA191_2==152||LA191_2==154||LA191_2==157||LA191_2==160||LA191_2==162||LA191_2==167||(LA191_2>=171 && LA191_2<=172)||LA191_2==183||LA191_2==190||LA191_2==194||LA191_2==196))
				{
					alt191 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 191, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 191, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(191); }
			switch (alt191)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:693:2: type
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(693, 2);
				PushFollow(Follow._type_in_return_type4979);
				type673=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type673.Tree, type673, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:694:5: 'void'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(694, 5);
				string_literal674=(IToken)Match(input,192,Follow._192_in_return_type4985); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal674_tree = (object)adaptor.Create(string_literal674, retval);
				adaptor.AddChild(root_0, string_literal674_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("return_type", 196);
			LeaveRule("return_type", 196);
			LeaveRule_return_type();
			if (state.backtracking > 0) { Memoize(input, 196, return_type_StartIndex); }

		}
		DebugLocation(694, 10);
		} finally { DebugExitRule(GrammarFileName, "return_type"); }
		return retval;

	}
	// $ANTLR end "return_type"

	partial void EnterRule_formal_parameter_list();
	partial void LeaveRule_formal_parameter_list();
	// $ANTLR start "formal_parameter_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:695:1: formal_parameter_list : formal_parameter ( ',' formal_parameter )* ;
	[GrammarRule("formal_parameter_list")]
	private Antlr3AstNode formal_parameter_list()
	{
		EnterRule_formal_parameter_list();
		EnterRule("formal_parameter_list", 197);
		var retval = new Antlr3AstNode("formal_parameter_list");
		
		retval.Start = (IToken)input.LT(1);
		int formal_parameter_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal676 = default(IToken);
		Antlr3AstNode formal_parameter675 = default(Antlr3AstNode);
		Antlr3AstNode formal_parameter677 = default(Antlr3AstNode);

		object char_literal676_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "formal_parameter_list");
		DebugLocation(695, 42);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 197)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:695:22: ( formal_parameter ( ',' formal_parameter )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:696:2: formal_parameter ( ',' formal_parameter )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(696, 2);
			PushFollow(Follow._formal_parameter_in_formal_parameter_list4992);
			formal_parameter675=formal_parameter();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, formal_parameter675.Tree, formal_parameter675, retval);
			DebugLocation(696, 19);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:696:19: ( ',' formal_parameter )*
			try { DebugEnterSubRule(192);
			while (true)
			{
				int alt192=2;
				try { DebugEnterDecision(192, false);
				int LA192_1 = input.LA(1);

				if ((LA192_1==74))
				{
					alt192 = 1;
				}


				} finally { DebugExitDecision(192); }
				switch ( alt192 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:696:20: ',' formal_parameter
					{
					DebugLocation(696, 20);
					char_literal676=(IToken)Match(input,74,Follow._74_in_formal_parameter_list4995); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal676_tree = (object)adaptor.Create(char_literal676, retval);
					adaptor.AddChild(root_0, char_literal676_tree);
					}
					DebugLocation(696, 24);
					PushFollow(Follow._formal_parameter_in_formal_parameter_list4997);
					formal_parameter677=formal_parameter();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, formal_parameter677.Tree, formal_parameter677, retval);

					}
					break;

				default:
					goto loop192;
				}
			}

			loop192:
				;

			} finally { DebugExitSubRule(192); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("formal_parameter_list", 197);
			LeaveRule("formal_parameter_list", 197);
			LeaveRule_formal_parameter_list();
			if (state.backtracking > 0) { Memoize(input, 197, formal_parameter_list_StartIndex); }

		}
		DebugLocation(696, 42);
		} finally { DebugExitRule(GrammarFileName, "formal_parameter_list"); }
		return retval;

	}
	// $ANTLR end "formal_parameter_list"

	partial void EnterRule_formal_parameter();
	partial void LeaveRule_formal_parameter();
	// $ANTLR start "formal_parameter"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:697:1: formal_parameter : ( ( attributes )? ( fixed_parameter | parameter_array ) | '__arglist' );
	[GrammarRule("formal_parameter")]
	private Antlr3AstNode formal_parameter()
	{
		EnterRule_formal_parameter();
		EnterRule("formal_parameter", 198);
		var retval = new Antlr3AstNode("formal_parameter");
		
		retval.Start = (IToken)input.LT(1);
		int formal_parameter_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal681 = default(IToken);
		Antlr3AstNode attributes678 = default(Antlr3AstNode);
		Antlr3AstNode fixed_parameter679 = default(Antlr3AstNode);
		Antlr3AstNode parameter_array680 = default(Antlr3AstNode);

		object string_literal681_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "formal_parameter");
		DebugLocation(697, 14);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 198)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:697:17: ( ( attributes )? ( fixed_parameter | parameter_array ) | '__arglist' )
			int alt195=2;
			try { DebugEnterDecision(195, false);
			int LA195_1 = input.LA(1);

			if ((LA195_1==IDENTIFIER||LA195_1==91||(LA195_1>=97 && LA195_1<=98)||(LA195_1>=100 && LA195_1<=101)||LA195_1==103||(LA195_1>=105 && LA195_1<=106)||LA195_1==109||LA195_1==114||LA195_1==117||(LA195_1>=119 && LA195_1<=120)||LA195_1==122||LA195_1==126||LA195_1==129||LA195_1==132||LA195_1==135||LA195_1==138||LA195_1==141||(LA195_1>=143 && LA195_1<=144)||(LA195_1>=146 && LA195_1<=148)||(LA195_1>=151 && LA195_1<=152)||(LA195_1>=154 && LA195_1<=155)||(LA195_1>=157 && LA195_1<=158)||LA195_1==160||LA195_1==162||(LA195_1>=166 && LA195_1<=167)||LA195_1==169||(LA195_1>=171 && LA195_1<=173)||LA195_1==177||LA195_1==180||LA195_1==183||(LA195_1>=185 && LA195_1<=186)||(LA195_1>=189 && LA195_1<=190)||LA195_1==192||LA195_1==194||LA195_1==196))
			{
				alt195 = 1;
			}
			else if ((LA195_1==95))
			{
				int LA195_2 = input.LA(2);

				if ((LA195_2==DOT||LA195_2==IDENTIFIER||LA195_2==69||(LA195_2>=80 && LA195_2<=81)||LA195_2==89||LA195_2==91||LA195_2==95||(LA195_2>=97 && LA195_2<=98)||(LA195_2>=100 && LA195_2<=101)||LA195_2==105||LA195_2==117||LA195_2==120||LA195_2==122||LA195_2==126||LA195_2==132||LA195_2==135||LA195_2==141||(LA195_2>=143 && LA195_2<=144)||(LA195_2>=147 && LA195_2<=148)||LA195_2==152||LA195_2==154||LA195_2==157||LA195_2==160||LA195_2==162||LA195_2==167||(LA195_2>=171 && LA195_2<=172)||LA195_2==183||LA195_2==190||LA195_2==194||LA195_2==196))
				{
					alt195 = 1;
				}
				else if ((LA195_2==RPAREN||LA195_2==74||LA195_2==92))
				{
					alt195 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 195, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 195, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(195); }
			switch (alt195)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:698:2: ( attributes )? ( fixed_parameter | parameter_array )
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(698, 2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:698:2: ( attributes )?
				int alt193=2;
				try { DebugEnterSubRule(193);
				try { DebugEnterDecision(193, false);
				int LA193_1 = input.LA(1);

				if ((LA193_1==91))
				{
					alt193 = 1;
				}
				} finally { DebugExitDecision(193); }
				switch (alt193)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:698:2: attributes
					{
					DebugLocation(698, 2);
					PushFollow(Follow._attributes_in_formal_parameter5007);
					attributes678=attributes();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, attributes678.Tree, attributes678, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(193); }

				DebugLocation(698, 16);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:698:16: ( fixed_parameter | parameter_array )
				int alt194=2;
				try { DebugEnterSubRule(194);
				try { DebugEnterDecision(194, false);
				int LA194_1 = input.LA(1);

				if ((LA194_1==IDENTIFIER||LA194_1==95||(LA194_1>=97 && LA194_1<=98)||(LA194_1>=100 && LA194_1<=101)||LA194_1==103||(LA194_1>=105 && LA194_1<=106)||LA194_1==109||LA194_1==114||LA194_1==117||(LA194_1>=119 && LA194_1<=120)||LA194_1==122||LA194_1==126||LA194_1==129||LA194_1==132||LA194_1==135||LA194_1==138||LA194_1==141||(LA194_1>=143 && LA194_1<=144)||(LA194_1>=146 && LA194_1<=148)||(LA194_1>=151 && LA194_1<=152)||(LA194_1>=154 && LA194_1<=155)||LA194_1==157||LA194_1==160||LA194_1==162||(LA194_1>=166 && LA194_1<=167)||LA194_1==169||(LA194_1>=171 && LA194_1<=173)||LA194_1==177||LA194_1==180||LA194_1==183||(LA194_1>=185 && LA194_1<=186)||(LA194_1>=189 && LA194_1<=190)||LA194_1==192||LA194_1==194||LA194_1==196))
				{
					alt194 = 1;
				}
				else if ((LA194_1==158))
				{
					alt194 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 194, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(194); }
				switch (alt194)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:698:17: fixed_parameter
					{
					DebugLocation(698, 17);
					PushFollow(Follow._fixed_parameter_in_formal_parameter5013);
					fixed_parameter679=fixed_parameter();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, fixed_parameter679.Tree, fixed_parameter679, retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:698:35: parameter_array
					{
					DebugLocation(698, 35);
					PushFollow(Follow._parameter_array_in_formal_parameter5017);
					parameter_array680=parameter_array();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, parameter_array680.Tree, parameter_array680, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(194); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:699:4: '__arglist'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(699, 4);
				string_literal681=(IToken)Match(input,95,Follow._95_in_formal_parameter5024); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal681_tree = (object)adaptor.Create(string_literal681, retval);
				adaptor.AddChild(root_0, string_literal681_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("formal_parameter", 198);
			LeaveRule("formal_parameter", 198);
			LeaveRule_formal_parameter();
			if (state.backtracking > 0) { Memoize(input, 198, formal_parameter_StartIndex); }

		}
		DebugLocation(699, 14);
		} finally { DebugExitRule(GrammarFileName, "formal_parameter"); }
		return retval;

	}
	// $ANTLR end "formal_parameter"

	partial void EnterRule_fixed_parameters();
	partial void LeaveRule_fixed_parameters();
	// $ANTLR start "fixed_parameters"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:700:1: fixed_parameters : fixed_parameter ( ',' fixed_parameter )* ;
	[GrammarRule("fixed_parameters")]
	private Antlr3AstNode fixed_parameters()
	{
		EnterRule_fixed_parameters();
		EnterRule("fixed_parameters", 199);
		var retval = new Antlr3AstNode("fixed_parameters");
		
		retval.Start = (IToken)input.LT(1);
		int fixed_parameters_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal683 = default(IToken);
		Antlr3AstNode fixed_parameter682 = default(Antlr3AstNode);
		Antlr3AstNode fixed_parameter684 = default(Antlr3AstNode);

		object char_literal683_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "fixed_parameters");
		DebugLocation(700, 44);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 199)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:700:17: ( fixed_parameter ( ',' fixed_parameter )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:701:2: fixed_parameter ( ',' fixed_parameter )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(701, 2);
			PushFollow(Follow._fixed_parameter_in_fixed_parameters5032);
			fixed_parameter682=fixed_parameter();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, fixed_parameter682.Tree, fixed_parameter682, retval);
			DebugLocation(701, 20);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:701:20: ( ',' fixed_parameter )*
			try { DebugEnterSubRule(196);
			while (true)
			{
				int alt196=2;
				try { DebugEnterDecision(196, false);
				int LA196_1 = input.LA(1);

				if ((LA196_1==74))
				{
					alt196 = 1;
				}


				} finally { DebugExitDecision(196); }
				switch ( alt196 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:701:21: ',' fixed_parameter
					{
					DebugLocation(701, 21);
					char_literal683=(IToken)Match(input,74,Follow._74_in_fixed_parameters5037); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal683_tree = (object)adaptor.Create(char_literal683, retval);
					adaptor.AddChild(root_0, char_literal683_tree);
					}
					DebugLocation(701, 27);
					PushFollow(Follow._fixed_parameter_in_fixed_parameters5041);
					fixed_parameter684=fixed_parameter();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, fixed_parameter684.Tree, fixed_parameter684, retval);

					}
					break;

				default:
					goto loop196;
				}
			}

			loop196:
				;

			} finally { DebugExitSubRule(196); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("fixed_parameters", 199);
			LeaveRule("fixed_parameters", 199);
			LeaveRule_fixed_parameters();
			if (state.backtracking > 0) { Memoize(input, 199, fixed_parameters_StartIndex); }

		}
		DebugLocation(701, 44);
		} finally { DebugExitRule(GrammarFileName, "fixed_parameters"); }
		return retval;

	}
	// $ANTLR end "fixed_parameters"

	partial void EnterRule_fixed_parameter();
	partial void LeaveRule_fixed_parameter();
	// $ANTLR start "fixed_parameter"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:703:1: fixed_parameter : ( parameter_modifier )? type identifier ( default_argument )? ;
	[GrammarRule("fixed_parameter")]
	private Antlr3AstNode fixed_parameter()
	{
		EnterRule_fixed_parameter();
		EnterRule("fixed_parameter", 200);
		var retval = new Antlr3AstNode("fixed_parameter");
		
		retval.Start = (IToken)input.LT(1);
		int fixed_parameter_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode parameter_modifier685 = default(Antlr3AstNode);
		Antlr3AstNode type686 = default(Antlr3AstNode);
		Antlr3AstNode identifier687 = default(Antlr3AstNode);
		Antlr3AstNode default_argument688 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "fixed_parameter");
		DebugLocation(703, 61);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 200)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:703:16: ( ( parameter_modifier )? type identifier ( default_argument )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:704:2: ( parameter_modifier )? type identifier ( default_argument )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(704, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:704:2: ( parameter_modifier )?
			int alt197=2;
			try { DebugEnterSubRule(197);
			try { DebugEnterDecision(197, false);
			int LA197_1 = input.LA(1);

			if ((LA197_1==155||LA197_1==166||LA197_1==180))
			{
				alt197 = 1;
			}
			} finally { DebugExitDecision(197); }
			switch (alt197)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:704:2: parameter_modifier
				{
				DebugLocation(704, 2);
				PushFollow(Follow._parameter_modifier_in_fixed_parameter5052);
				parameter_modifier685=parameter_modifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, parameter_modifier685.Tree, parameter_modifier685, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(197); }

			DebugLocation(704, 24);
			PushFollow(Follow._type_in_fixed_parameter5057);
			type686=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type686.Tree, type686, retval);
			DebugLocation(704, 31);
			PushFollow(Follow._identifier_in_fixed_parameter5061);
			identifier687=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier687.Tree, identifier687, retval);
			DebugLocation(704, 44);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:704:44: ( default_argument )?
			int alt198=2;
			try { DebugEnterSubRule(198);
			try { DebugEnterDecision(198, false);
			int LA198_1 = input.LA(1);

			if ((LA198_1==85))
			{
				alt198 = 1;
			}
			} finally { DebugExitDecision(198); }
			switch (alt198)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:704:44: default_argument
				{
				DebugLocation(704, 44);
				PushFollow(Follow._default_argument_in_fixed_parameter5065);
				default_argument688=default_argument();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, default_argument688.Tree, default_argument688, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(198); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("fixed_parameter", 200);
			LeaveRule("fixed_parameter", 200);
			LeaveRule_fixed_parameter();
			if (state.backtracking > 0) { Memoize(input, 200, fixed_parameter_StartIndex); }

		}
		DebugLocation(704, 61);
		} finally { DebugExitRule(GrammarFileName, "fixed_parameter"); }
		return retval;

	}
	// $ANTLR end "fixed_parameter"

	partial void EnterRule_default_argument();
	partial void LeaveRule_default_argument();
	// $ANTLR start "default_argument"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:706:1: default_argument : '=' expression ;
	[GrammarRule("default_argument")]
	private Antlr3AstNode default_argument()
	{
		EnterRule_default_argument();
		EnterRule("default_argument", 201);
		var retval = new Antlr3AstNode("default_argument");
		
		retval.Start = (IToken)input.LT(1);
		int default_argument_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal689 = default(IToken);
		Antlr3AstNode expression690 = default(Antlr3AstNode);

		object char_literal689_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "default_argument");
		DebugLocation(706, 15);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 201)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:706:17: ( '=' expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:707:2: '=' expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(707, 2);
			char_literal689=(IToken)Match(input,85,Follow._85_in_default_argument5075); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal689_tree = (object)adaptor.Create(char_literal689, retval);
			adaptor.AddChild(root_0, char_literal689_tree);
			}
			DebugLocation(707, 6);
			PushFollow(Follow._expression_in_default_argument5077);
			expression690=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression690.Tree, expression690, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("default_argument", 201);
			LeaveRule("default_argument", 201);
			LeaveRule_default_argument();
			if (state.backtracking > 0) { Memoize(input, 201, default_argument_StartIndex); }

		}
		DebugLocation(707, 15);
		} finally { DebugExitRule(GrammarFileName, "default_argument"); }
		return retval;

	}
	// $ANTLR end "default_argument"

	partial void EnterRule_parameter_modifier();
	partial void LeaveRule_parameter_modifier();
	// $ANTLR start "parameter_modifier"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:708:1: parameter_modifier : ( 'ref' | 'out' | 'this' );
	[GrammarRule("parameter_modifier")]
	private Antlr3AstNode parameter_modifier()
	{
		EnterRule_parameter_modifier();
		EnterRule("parameter_modifier", 202);
		var retval = new Antlr3AstNode("parameter_modifier");
		
		retval.Start = (IToken)input.LT(1);
		int parameter_modifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set691 = default(IToken);

		object set691_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "parameter_modifier");
		DebugLocation(708, 24);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 202)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:708:19: ( 'ref' | 'out' | 'this' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(708, 19);

			set691=(IToken)input.LT(1);
			if (input.LA(1)==155||input.LA(1)==166||input.LA(1)==180)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set691, retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("parameter_modifier", 202);
			LeaveRule("parameter_modifier", 202);
			LeaveRule_parameter_modifier();
			if (state.backtracking > 0) { Memoize(input, 202, parameter_modifier_StartIndex); }

		}
		DebugLocation(709, 24);
		} finally { DebugExitRule(GrammarFileName, "parameter_modifier"); }
		return retval;

	}
	// $ANTLR end "parameter_modifier"

	partial void EnterRule_parameter_array();
	partial void LeaveRule_parameter_array();
	// $ANTLR start "parameter_array"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:710:1: parameter_array : 'params' type identifier ;
	[GrammarRule("parameter_array")]
	private Antlr3AstNode parameter_array()
	{
		EnterRule_parameter_array();
		EnterRule("parameter_array", 203);
		var retval = new Antlr3AstNode("parameter_array");
		
		retval.Start = (IToken)input.LT(1);
		int parameter_array_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal692 = default(IToken);
		Antlr3AstNode type693 = default(Antlr3AstNode);
		Antlr3AstNode identifier694 = default(Antlr3AstNode);

		object string_literal692_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "parameter_array");
		DebugLocation(710, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 203)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:710:16: ( 'params' type identifier )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:711:2: 'params' type identifier
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(711, 2);
			string_literal692=(IToken)Match(input,158,Follow._158_in_parameter_array5100); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal692_tree = (object)adaptor.Create(string_literal692, retval);
			adaptor.AddChild(root_0, string_literal692_tree);
			}
			DebugLocation(711, 13);
			PushFollow(Follow._type_in_parameter_array5104);
			type693=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type693.Tree, type693, retval);
			DebugLocation(711, 20);
			PushFollow(Follow._identifier_in_parameter_array5108);
			identifier694=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier694.Tree, identifier694, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("parameter_array", 203);
			LeaveRule("parameter_array", 203);
			LeaveRule_parameter_array();
			if (state.backtracking > 0) { Memoize(input, 203, parameter_array_StartIndex); }

		}
		DebugLocation(711, 30);
		} finally { DebugExitRule(GrammarFileName, "parameter_array"); }
		return retval;

	}
	// $ANTLR end "parameter_array"

	partial void EnterRule_interface_declaration();
	partial void LeaveRule_interface_declaration();
	// $ANTLR start "interface_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:714:1: interface_declaration : 'interface' identifier ( variant_generic_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( ';' )? ;
	[GrammarRule("interface_declaration")]
	private Antlr3AstNode interface_declaration()
	{
		EnterRule_interface_declaration();
		EnterRule("interface_declaration", 204);
		var retval = new Antlr3AstNode("interface_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int interface_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal695 = default(IToken);
		IToken char_literal701 = default(IToken);
		Antlr3AstNode identifier696 = default(Antlr3AstNode);
		Antlr3AstNode variant_generic_parameter_list697 = default(Antlr3AstNode);
		Antlr3AstNode interface_base698 = default(Antlr3AstNode);
		Antlr3AstNode type_parameter_constraints_clauses699 = default(Antlr3AstNode);
		Antlr3AstNode interface_body700 = default(Antlr3AstNode);

		object string_literal695_tree = default(object);
		object char_literal701_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interface_declaration");
		DebugLocation(714, 83);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 204)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:714:22: ( 'interface' identifier ( variant_generic_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( ';' )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:715:2: 'interface' identifier ( variant_generic_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( ';' )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(715, 2);
			string_literal695=(IToken)Match(input,139,Follow._139_in_interface_declaration5118); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal695_tree = (object)adaptor.Create(string_literal695, retval);
			adaptor.AddChild(root_0, string_literal695_tree);
			}
			DebugLocation(715, 16);
			PushFollow(Follow._identifier_in_interface_declaration5122);
			identifier696=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier696.Tree, identifier696, retval);
			DebugLocation(715, 29);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:715:29: ( variant_generic_parameter_list )?
			int alt199=2;
			try { DebugEnterSubRule(199);
			try { DebugEnterDecision(199, false);
			int LA199_1 = input.LA(1);

			if ((LA199_1==81))
			{
				alt199 = 1;
			}
			} finally { DebugExitDecision(199); }
			switch (alt199)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:715:29: variant_generic_parameter_list
				{
				DebugLocation(715, 29);
				PushFollow(Follow._variant_generic_parameter_list_in_interface_declaration5126);
				variant_generic_parameter_list697=variant_generic_parameter_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variant_generic_parameter_list697.Tree, variant_generic_parameter_list697, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(199); }

			DebugLocation(716, 6);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:716:6: ( interface_base )?
			int alt200=2;
			try { DebugEnterSubRule(200);
			try { DebugEnterDecision(200, false);
			int LA200_1 = input.LA(1);

			if ((LA200_1==79))
			{
				alt200 = 1;
			}
			} finally { DebugExitDecision(200); }
			switch (alt200)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:716:6: interface_base
				{
				DebugLocation(716, 6);
				PushFollow(Follow._interface_base_in_interface_declaration5135);
				interface_base698=interface_base();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interface_base698.Tree, interface_base698, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(200); }

			DebugLocation(716, 24);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:716:24: ( type_parameter_constraints_clauses )?
			int alt201=2;
			try { DebugEnterSubRule(201);
			try { DebugEnterDecision(201, false);
			int LA201_1 = input.LA(1);

			if ((LA201_1==194))
			{
				alt201 = 1;
			}
			} finally { DebugExitDecision(201); }
			switch (alt201)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:716:24: type_parameter_constraints_clauses
				{
				DebugLocation(716, 24);
				PushFollow(Follow._type_parameter_constraints_clauses_in_interface_declaration5140);
				type_parameter_constraints_clauses699=type_parameter_constraints_clauses();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type_parameter_constraints_clauses699.Tree, type_parameter_constraints_clauses699, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(201); }

			DebugLocation(716, 62);
			PushFollow(Follow._interface_body_in_interface_declaration5145);
			interface_body700=interface_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, interface_body700.Tree, interface_body700, retval);
			DebugLocation(716, 79);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:716:79: ( ';' )?
			int alt202=2;
			try { DebugEnterSubRule(202);
			try { DebugEnterDecision(202, false);
			int LA202_1 = input.LA(1);

			if ((LA202_1==SEMI))
			{
				alt202 = 1;
			}
			} finally { DebugExitDecision(202); }
			switch (alt202)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:716:79: ';'
				{
				DebugLocation(716, 79);
				char_literal701=(IToken)Match(input,SEMI,Follow._SEMI_in_interface_declaration5149); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal701_tree = (object)adaptor.Create(char_literal701, retval);
				adaptor.AddChild(root_0, char_literal701_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(202); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_declaration", 204);
			LeaveRule("interface_declaration", 204);
			LeaveRule_interface_declaration();
			if (state.backtracking > 0) { Memoize(input, 204, interface_declaration_StartIndex); }

		}
		DebugLocation(716, 83);
		} finally { DebugExitRule(GrammarFileName, "interface_declaration"); }
		return retval;

	}
	// $ANTLR end "interface_declaration"

	partial void EnterRule_interface_modifiers();
	partial void LeaveRule_interface_modifiers();
	// $ANTLR start "interface_modifiers"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:717:1: interface_modifiers : ( modifier )+ ;
	[GrammarRule("interface_modifiers")]
	private Antlr3AstNode interface_modifiers()
	{
		EnterRule_interface_modifiers();
		EnterRule("interface_modifiers", 205);
		var retval = new Antlr3AstNode("interface_modifiers");
		
		retval.Start = (IToken)input.LT(1);
		int interface_modifiers_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode modifier702 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "interface_modifiers");
		DebugLocation(717, 11);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 205)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:717:20: ( ( modifier )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:718:2: ( modifier )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(718, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:718:2: ( modifier )+
			int cnt203=0;
			try { DebugEnterSubRule(203);
			while (true)
			{
				int alt203=2;
				try { DebugEnterDecision(203, false);
				int LA203_1 = input.LA(1);

				if ((LA203_1==96||LA203_1==125||LA203_1==140||LA203_1==150||LA203_1==156||LA203_1==161||(LA203_1>=163 && LA203_1<=165)||LA203_1==170||LA203_1==176||LA203_1==188||LA203_1==191||LA203_1==193))
				{
					alt203 = 1;
				}


				} finally { DebugExitDecision(203); }
				switch (alt203)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:718:2: modifier
					{
					DebugLocation(718, 2);
					PushFollow(Follow._modifier_in_interface_modifiers5159);
					modifier702=modifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, modifier702.Tree, modifier702, retval);

					}
					break;

				default:
					if (cnt203 >= 1)
						goto loop203;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee203 = new EarlyExitException( 203, input );
					DebugRecognitionException(eee203);
					throw eee203;
				}
				cnt203++;
			}
			loop203:
				;

			} finally { DebugExitSubRule(203); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_modifiers", 205);
			LeaveRule("interface_modifiers", 205);
			LeaveRule_interface_modifiers();
			if (state.backtracking > 0) { Memoize(input, 205, interface_modifiers_StartIndex); }

		}
		DebugLocation(718, 11);
		} finally { DebugExitRule(GrammarFileName, "interface_modifiers"); }
		return retval;

	}
	// $ANTLR end "interface_modifiers"

	partial void EnterRule_interface_base();
	partial void LeaveRule_interface_base();
	// $ANTLR start "interface_base"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:719:1: interface_base : ':' interface_type_list ;
	[GrammarRule("interface_base")]
	private Antlr3AstNode interface_base()
	{
		EnterRule_interface_base();
		EnterRule("interface_base", 206);
		var retval = new Antlr3AstNode("interface_base");
		
		retval.Start = (IToken)input.LT(1);
		int interface_base_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal703 = default(IToken);
		Antlr3AstNode interface_type_list704 = default(Antlr3AstNode);

		object char_literal703_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interface_base");
		DebugLocation(719, 28);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 206)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:719:15: ( ':' interface_type_list )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:720:5: ':' interface_type_list
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(720, 5);
			char_literal703=(IToken)Match(input,79,Follow._79_in_interface_base5172); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal703_tree = (object)adaptor.Create(char_literal703, retval);
			adaptor.AddChild(root_0, char_literal703_tree);
			}
			DebugLocation(720, 9);
			PushFollow(Follow._interface_type_list_in_interface_base5174);
			interface_type_list704=interface_type_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, interface_type_list704.Tree, interface_type_list704, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_base", 206);
			LeaveRule("interface_base", 206);
			LeaveRule_interface_base();
			if (state.backtracking > 0) { Memoize(input, 206, interface_base_StartIndex); }

		}
		DebugLocation(720, 28);
		} finally { DebugExitRule(GrammarFileName, "interface_base"); }
		return retval;

	}
	// $ANTLR end "interface_base"

	partial void EnterRule_interface_body();
	partial void LeaveRule_interface_body();
	// $ANTLR start "interface_body"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:721:1: interface_body : '{' ( interface_member_declarations )? '}' ;
	[GrammarRule("interface_body")]
	private Antlr3AstNode interface_body()
	{
		EnterRule_interface_body();
		EnterRule("interface_body", 207);
		var retval = new Antlr3AstNode("interface_body");
		
		retval.Start = (IToken)input.LT(1);
		int interface_body_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal705 = default(IToken);
		IToken char_literal707 = default(IToken);
		Antlr3AstNode interface_member_declarations706 = default(Antlr3AstNode);

		object char_literal705_tree = default(object);
		object char_literal707_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interface_body");
		DebugLocation(721, 44);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 207)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:721:15: ( '{' ( interface_member_declarations )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:722:2: '{' ( interface_member_declarations )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(722, 2);
			char_literal705=(IToken)Match(input,197,Follow._197_in_interface_body5182); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal705_tree = (object)adaptor.Create(char_literal705, retval);
			adaptor.AddChild(root_0, char_literal705_tree);
			}
			DebugLocation(722, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:722:8: ( interface_member_declarations )?
			int alt204=2;
			try { DebugEnterSubRule(204);
			try { DebugEnterDecision(204, false);
			int LA204_1 = input.LA(1);

			if ((LA204_1==IDENTIFIER||LA204_1==91||(LA204_1>=95 && LA204_1<=98)||(LA204_1>=100 && LA204_1<=101)||LA204_1==103||(LA204_1>=105 && LA204_1<=106)||LA204_1==109||LA204_1==114||LA204_1==117||(LA204_1>=119 && LA204_1<=120)||(LA204_1>=122 && LA204_1<=123)||(LA204_1>=125 && LA204_1<=126)||LA204_1==129||LA204_1==132||LA204_1==135||LA204_1==138||(LA204_1>=140 && LA204_1<=141)||(LA204_1>=143 && LA204_1<=144)||(LA204_1>=146 && LA204_1<=148)||(LA204_1>=150 && LA204_1<=152)||LA204_1==154||(LA204_1>=156 && LA204_1<=157)||(LA204_1>=160 && LA204_1<=165)||LA204_1==167||(LA204_1>=169 && LA204_1<=173)||(LA204_1>=176 && LA204_1<=177)||LA204_1==183||(LA204_1>=185 && LA204_1<=186)||(LA204_1>=188 && LA204_1<=194)||LA204_1==196))
			{
				alt204 = 1;
			}
			} finally { DebugExitDecision(204); }
			switch (alt204)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:722:8: interface_member_declarations
				{
				DebugLocation(722, 8);
				PushFollow(Follow._interface_member_declarations_in_interface_body5186);
				interface_member_declarations706=interface_member_declarations();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interface_member_declarations706.Tree, interface_member_declarations706, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(204); }

			DebugLocation(722, 41);
			char_literal707=(IToken)Match(input,201,Follow._201_in_interface_body5191); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal707_tree = (object)adaptor.Create(char_literal707, retval);
			adaptor.AddChild(root_0, char_literal707_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_body", 207);
			LeaveRule("interface_body", 207);
			LeaveRule_interface_body();
			if (state.backtracking > 0) { Memoize(input, 207, interface_body_StartIndex); }

		}
		DebugLocation(722, 44);
		} finally { DebugExitRule(GrammarFileName, "interface_body"); }
		return retval;

	}
	// $ANTLR end "interface_body"

	partial void EnterRule_interface_member_declarations();
	partial void LeaveRule_interface_member_declarations();
	// $ANTLR start "interface_member_declarations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:723:1: interface_member_declarations : ( interface_member_declaration )+ ;
	[GrammarRule("interface_member_declarations")]
	private Antlr3AstNode interface_member_declarations()
	{
		EnterRule_interface_member_declarations();
		EnterRule("interface_member_declarations", 208);
		var retval = new Antlr3AstNode("interface_member_declarations");
		
		retval.Start = (IToken)input.LT(1);
		int interface_member_declarations_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode interface_member_declaration708 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "interface_member_declarations");
		DebugLocation(723, 31);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 208)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:723:30: ( ( interface_member_declaration )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:724:2: ( interface_member_declaration )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(724, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:724:2: ( interface_member_declaration )+
			int cnt205=0;
			try { DebugEnterSubRule(205);
			while (true)
			{
				int alt205=2;
				try { DebugEnterDecision(205, false);
				int LA205_1 = input.LA(1);

				if ((LA205_1==IDENTIFIER||LA205_1==91||(LA205_1>=95 && LA205_1<=98)||(LA205_1>=100 && LA205_1<=101)||LA205_1==103||(LA205_1>=105 && LA205_1<=106)||LA205_1==109||LA205_1==114||LA205_1==117||(LA205_1>=119 && LA205_1<=120)||(LA205_1>=122 && LA205_1<=123)||(LA205_1>=125 && LA205_1<=126)||LA205_1==129||LA205_1==132||LA205_1==135||LA205_1==138||(LA205_1>=140 && LA205_1<=141)||(LA205_1>=143 && LA205_1<=144)||(LA205_1>=146 && LA205_1<=148)||(LA205_1>=150 && LA205_1<=152)||LA205_1==154||(LA205_1>=156 && LA205_1<=157)||(LA205_1>=160 && LA205_1<=165)||LA205_1==167||(LA205_1>=169 && LA205_1<=173)||(LA205_1>=176 && LA205_1<=177)||LA205_1==183||(LA205_1>=185 && LA205_1<=186)||(LA205_1>=188 && LA205_1<=194)||LA205_1==196))
				{
					alt205 = 1;
				}


				} finally { DebugExitDecision(205); }
				switch (alt205)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:724:2: interface_member_declaration
					{
					DebugLocation(724, 2);
					PushFollow(Follow._interface_member_declaration_in_interface_member_declarations5199);
					interface_member_declaration708=interface_member_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, interface_member_declaration708.Tree, interface_member_declaration708, retval);

					}
					break;

				default:
					if (cnt205 >= 1)
						goto loop205;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee205 = new EarlyExitException( 205, input );
					DebugRecognitionException(eee205);
					throw eee205;
				}
				cnt205++;
			}
			loop205:
				;

			} finally { DebugExitSubRule(205); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_member_declarations", 208);
			LeaveRule("interface_member_declarations", 208);
			LeaveRule_interface_member_declarations();
			if (state.backtracking > 0) { Memoize(input, 208, interface_member_declarations_StartIndex); }

		}
		DebugLocation(724, 31);
		} finally { DebugExitRule(GrammarFileName, "interface_member_declarations"); }
		return retval;

	}
	// $ANTLR end "interface_member_declarations"

	partial void EnterRule_interface_member_declaration();
	partial void LeaveRule_interface_member_declaration();
	// $ANTLR start "interface_member_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:725:1: interface_member_declaration : ( attributes )? ( modifiers )? ( 'void' interface_method_declaration | interface_event_declaration | type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration ) ) ;
	[GrammarRule("interface_member_declaration")]
	private Antlr3AstNode interface_member_declaration()
	{
		EnterRule_interface_member_declaration();
		EnterRule("interface_member_declaration", 209);
		var retval = new Antlr3AstNode("interface_member_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int interface_member_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal711 = default(IToken);
		Antlr3AstNode attributes709 = default(Antlr3AstNode);
		Antlr3AstNode modifiers710 = default(Antlr3AstNode);
		Antlr3AstNode interface_method_declaration712 = default(Antlr3AstNode);
		Antlr3AstNode interface_event_declaration713 = default(Antlr3AstNode);
		Antlr3AstNode type714 = default(Antlr3AstNode);
		Antlr3AstNode interface_method_declaration715 = default(Antlr3AstNode);
		Antlr3AstNode interface_property_declaration716 = default(Antlr3AstNode);
		Antlr3AstNode interface_indexer_declaration717 = default(Antlr3AstNode);

		object string_literal711_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interface_member_declaration");
		DebugLocation(725, 2);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 209)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:725:29: ( ( attributes )? ( modifiers )? ( 'void' interface_method_declaration | interface_event_declaration | type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration ) ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:726:2: ( attributes )? ( modifiers )? ( 'void' interface_method_declaration | interface_event_declaration | type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration ) )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(726, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:726:2: ( attributes )?
			int alt206=2;
			try { DebugEnterSubRule(206);
			try { DebugEnterDecision(206, false);
			int LA206_1 = input.LA(1);

			if ((LA206_1==91))
			{
				alt206 = 1;
			}
			} finally { DebugExitDecision(206); }
			switch (alt206)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:726:2: attributes
				{
				DebugLocation(726, 2);
				PushFollow(Follow._attributes_in_interface_member_declaration5208);
				attributes709=attributes();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, attributes709.Tree, attributes709, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(206); }

			DebugLocation(726, 17);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:726:17: ( modifiers )?
			int alt207=2;
			try { DebugEnterSubRule(207);
			try { DebugEnterDecision(207, false);
			int LA207_1 = input.LA(1);

			if ((LA207_1==96||LA207_1==125||LA207_1==140||LA207_1==150||LA207_1==156||LA207_1==161||(LA207_1>=163 && LA207_1<=165)||LA207_1==170||LA207_1==176||LA207_1==188||LA207_1==191||LA207_1==193))
			{
				alt207 = 1;
			}
			} finally { DebugExitDecision(207); }
			switch (alt207)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:726:17: modifiers
				{
				DebugLocation(726, 17);
				PushFollow(Follow._modifiers_in_interface_member_declaration5214);
				modifiers710=modifiers();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers710.Tree, modifiers710, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(207); }

			DebugLocation(727, 3);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:727:3: ( 'void' interface_method_declaration | interface_event_declaration | type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration ) )
			int alt209=3;
			try { DebugEnterSubRule(209);
			try { DebugEnterDecision(209, false);
			switch (input.LA(1))
			{
			case 192:
				{
				int LA209_2 = input.LA(2);

				if ((LA209_2==IDENTIFIER||LA209_2==95||(LA209_2>=97 && LA209_2<=98)||(LA209_2>=100 && LA209_2<=101)||LA209_2==105||LA209_2==117||LA209_2==120||LA209_2==122||LA209_2==126||LA209_2==132||LA209_2==135||LA209_2==141||(LA209_2>=143 && LA209_2<=144)||(LA209_2>=147 && LA209_2<=148)||LA209_2==152||LA209_2==154||LA209_2==157||LA209_2==160||LA209_2==162||LA209_2==167||(LA209_2>=171 && LA209_2<=172)||LA209_2==183||LA209_2==190||LA209_2==194||LA209_2==196))
				{
					alt209 = 1;
				}
				else if ((LA209_2==69))
				{
					alt209 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 209, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 123:
				{
				alt209 = 2;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 103:
			case 105:
			case 106:
			case 109:
			case 114:
			case 117:
			case 119:
			case 120:
			case 122:
			case 126:
			case 129:
			case 132:
			case 135:
			case 138:
			case 141:
			case 143:
			case 144:
			case 146:
			case 147:
			case 148:
			case 151:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 169:
			case 171:
			case 172:
			case 173:
			case 177:
			case 183:
			case 185:
			case 186:
			case 189:
			case 190:
			case 194:
			case 196:
				{
				alt209 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 209, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(209); }
			switch (alt209)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:727:4: 'void' interface_method_declaration
				{
				DebugLocation(727, 4);
				string_literal711=(IToken)Match(input,192,Follow._192_in_interface_member_declaration5220); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal711_tree = (object)adaptor.Create(string_literal711, retval);
				adaptor.AddChild(root_0, string_literal711_tree);
				}
				DebugLocation(727, 13);
				PushFollow(Follow._interface_method_declaration_in_interface_member_declaration5224);
				interface_method_declaration712=interface_method_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interface_method_declaration712.Tree, interface_method_declaration712, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:728:5: interface_event_declaration
				{
				DebugLocation(728, 5);
				PushFollow(Follow._interface_event_declaration_in_interface_member_declaration5230);
				interface_event_declaration713=interface_event_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interface_event_declaration713.Tree, interface_event_declaration713, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:729:5: type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration )
				{
				DebugLocation(729, 5);
				PushFollow(Follow._type_in_interface_member_declaration5236);
				type714=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type714.Tree, type714, retval);
				DebugLocation(729, 12);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:729:12: ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration )
				int alt208=3;
				try { DebugEnterSubRule(208);
				try { DebugEnterDecision(208, false);
				int LA208_1 = input.LA(1);

				if ((LA208_1==IDENTIFIER||LA208_1==95||(LA208_1>=97 && LA208_1<=98)||(LA208_1>=100 && LA208_1<=101)||LA208_1==105||LA208_1==117||LA208_1==120||LA208_1==122||LA208_1==126||LA208_1==132||LA208_1==135||LA208_1==141||(LA208_1>=143 && LA208_1<=144)||(LA208_1>=147 && LA208_1<=148)||LA208_1==152||LA208_1==154||LA208_1==157||LA208_1==160||LA208_1==162||LA208_1==167||(LA208_1>=171 && LA208_1<=172)||LA208_1==183||LA208_1==190||LA208_1==194||LA208_1==196))
				{
					int LA208_2 = input.LA(2);

					if ((LA208_2==81) && (EvaluatePredicate(synpred26_cs_fragment)))
					{
						alt208 = 1;
					}
					else if ((LA208_2==68) && (EvaluatePredicate(synpred26_cs_fragment)))
					{
						alt208 = 1;
					}
					else if ((LA208_2==197) && (EvaluatePredicate(synpred27_cs_fragment)))
					{
						alt208 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 208, 1, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else if ((LA208_1==180))
				{
					alt208 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 208, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(208); }
				switch (alt208)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:729:14: ( member_name '(' )=> interface_method_declaration
					{
					DebugLocation(729, 37);
					PushFollow(Follow._interface_method_declaration_in_interface_member_declaration5252);
					interface_method_declaration715=interface_method_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, interface_method_declaration715.Tree, interface_method_declaration715, retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:730:14: ( member_name '{' )=> interface_property_declaration
					{
					DebugLocation(730, 37);
					PushFollow(Follow._interface_property_declaration_in_interface_member_declaration5277);
					interface_property_declaration716=interface_property_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, interface_property_declaration716.Tree, interface_property_declaration716, retval);

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:731:8: interface_indexer_declaration
					{
					DebugLocation(731, 8);
					PushFollow(Follow._interface_indexer_declaration_in_interface_member_declaration5287);
					interface_indexer_declaration717=interface_indexer_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, interface_indexer_declaration717.Tree, interface_indexer_declaration717, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(208); }


				}
				break;

			}
			} finally { DebugExitSubRule(209); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_member_declaration", 209);
			LeaveRule("interface_member_declaration", 209);
			LeaveRule_interface_member_declaration();
			if (state.backtracking > 0) { Memoize(input, 209, interface_member_declaration_StartIndex); }

		}
		DebugLocation(733, 2);
		} finally { DebugExitRule(GrammarFileName, "interface_member_declaration"); }
		return retval;

	}
	// $ANTLR end "interface_member_declaration"

	partial void EnterRule_interface_property_declaration();
	partial void LeaveRule_interface_property_declaration();
	// $ANTLR start "interface_property_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:734:1: interface_property_declaration : identifier '{' interface_accessor_declarations '}' ;
	[GrammarRule("interface_property_declaration")]
	private Antlr3AstNode interface_property_declaration()
	{
		EnterRule_interface_property_declaration();
		EnterRule("interface_property_declaration", 210);
		var retval = new Antlr3AstNode("interface_property_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int interface_property_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal719 = default(IToken);
		IToken char_literal721 = default(IToken);
		Antlr3AstNode identifier718 = default(Antlr3AstNode);
		Antlr3AstNode interface_accessor_declarations720 = default(Antlr3AstNode);

		object char_literal719_tree = default(object);
		object char_literal721_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interface_property_declaration");
		DebugLocation(734, 58);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 210)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:734:31: ( identifier '{' interface_accessor_declarations '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:735:2: identifier '{' interface_accessor_declarations '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(735, 2);
			PushFollow(Follow._identifier_in_interface_property_declaration5304);
			identifier718=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier718.Tree, identifier718, retval);
			DebugLocation(735, 15);
			char_literal719=(IToken)Match(input,197,Follow._197_in_interface_property_declaration5308); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal719_tree = (object)adaptor.Create(char_literal719, retval);
			adaptor.AddChild(root_0, char_literal719_tree);
			}
			DebugLocation(735, 21);
			PushFollow(Follow._interface_accessor_declarations_in_interface_property_declaration5312);
			interface_accessor_declarations720=interface_accessor_declarations();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, interface_accessor_declarations720.Tree, interface_accessor_declarations720, retval);
			DebugLocation(735, 55);
			char_literal721=(IToken)Match(input,201,Follow._201_in_interface_property_declaration5316); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal721_tree = (object)adaptor.Create(char_literal721, retval);
			adaptor.AddChild(root_0, char_literal721_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_property_declaration", 210);
			LeaveRule("interface_property_declaration", 210);
			LeaveRule_interface_property_declaration();
			if (state.backtracking > 0) { Memoize(input, 210, interface_property_declaration_StartIndex); }

		}
		DebugLocation(735, 58);
		} finally { DebugExitRule(GrammarFileName, "interface_property_declaration"); }
		return retval;

	}
	// $ANTLR end "interface_property_declaration"

	partial void EnterRule_interface_method_declaration();
	partial void LeaveRule_interface_method_declaration();
	// $ANTLR start "interface_method_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:736:1: interface_method_declaration : identifier ( generic_argument_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' ;
	[GrammarRule("interface_method_declaration")]
	private Antlr3AstNode interface_method_declaration()
	{
		EnterRule_interface_method_declaration();
		EnterRule("interface_method_declaration", 211);
		var retval = new Antlr3AstNode("interface_method_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int interface_method_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal724 = default(IToken);
		IToken char_literal726 = default(IToken);
		IToken char_literal728 = default(IToken);
		Antlr3AstNode identifier722 = default(Antlr3AstNode);
		Antlr3AstNode generic_argument_list723 = default(Antlr3AstNode);
		Antlr3AstNode formal_parameter_list725 = default(Antlr3AstNode);
		Antlr3AstNode type_parameter_constraints_clauses727 = default(Antlr3AstNode);

		object char_literal724_tree = default(object);
		object char_literal726_tree = default(object);
		object char_literal728_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interface_method_declaration");
		DebugLocation(736, 84);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 211)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:736:29: ( identifier ( generic_argument_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:737:2: identifier ( generic_argument_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(737, 2);
			PushFollow(Follow._identifier_in_interface_method_declaration5324);
			identifier722=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier722.Tree, identifier722, retval);
			DebugLocation(737, 15);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:737:15: ( generic_argument_list )?
			int alt210=2;
			try { DebugEnterSubRule(210);
			try { DebugEnterDecision(210, false);
			int LA210_1 = input.LA(1);

			if ((LA210_1==81))
			{
				alt210 = 1;
			}
			} finally { DebugExitDecision(210); }
			switch (alt210)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:737:15: generic_argument_list
				{
				DebugLocation(737, 15);
				PushFollow(Follow._generic_argument_list_in_interface_method_declaration5328);
				generic_argument_list723=generic_argument_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, generic_argument_list723.Tree, generic_argument_list723, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(210); }

			DebugLocation(738, 6);
			char_literal724=(IToken)Match(input,68,Follow._68_in_interface_method_declaration5336); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal724_tree = (object)adaptor.Create(char_literal724, retval);
			adaptor.AddChild(root_0, char_literal724_tree);
			}
			DebugLocation(738, 12);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:738:12: ( formal_parameter_list )?
			int alt211=2;
			try { DebugEnterSubRule(211);
			try { DebugEnterDecision(211, false);
			int LA211_1 = input.LA(1);

			if ((LA211_1==IDENTIFIER||LA211_1==91||LA211_1==95||(LA211_1>=97 && LA211_1<=98)||(LA211_1>=100 && LA211_1<=101)||LA211_1==103||(LA211_1>=105 && LA211_1<=106)||LA211_1==109||LA211_1==114||LA211_1==117||(LA211_1>=119 && LA211_1<=120)||LA211_1==122||LA211_1==126||LA211_1==129||LA211_1==132||LA211_1==135||LA211_1==138||LA211_1==141||(LA211_1>=143 && LA211_1<=144)||(LA211_1>=146 && LA211_1<=148)||(LA211_1>=151 && LA211_1<=152)||(LA211_1>=154 && LA211_1<=155)||(LA211_1>=157 && LA211_1<=158)||LA211_1==160||LA211_1==162||(LA211_1>=166 && LA211_1<=167)||LA211_1==169||(LA211_1>=171 && LA211_1<=173)||LA211_1==177||LA211_1==180||LA211_1==183||(LA211_1>=185 && LA211_1<=186)||(LA211_1>=189 && LA211_1<=190)||LA211_1==192||LA211_1==194||LA211_1==196))
			{
				alt211 = 1;
			}
			} finally { DebugExitDecision(211); }
			switch (alt211)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:738:12: formal_parameter_list
				{
				DebugLocation(738, 12);
				PushFollow(Follow._formal_parameter_list_in_interface_method_declaration5340);
				formal_parameter_list725=formal_parameter_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, formal_parameter_list725.Tree, formal_parameter_list725, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(211); }

			DebugLocation(738, 37);
			char_literal726=(IToken)Match(input,RPAREN,Follow._RPAREN_in_interface_method_declaration5345); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal726_tree = (object)adaptor.Create(char_literal726, retval);
			adaptor.AddChild(root_0, char_literal726_tree);
			}
			DebugLocation(738, 43);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:738:43: ( type_parameter_constraints_clauses )?
			int alt212=2;
			try { DebugEnterSubRule(212);
			try { DebugEnterDecision(212, false);
			int LA212_1 = input.LA(1);

			if ((LA212_1==194))
			{
				alt212 = 1;
			}
			} finally { DebugExitDecision(212); }
			switch (alt212)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:738:43: type_parameter_constraints_clauses
				{
				DebugLocation(738, 43);
				PushFollow(Follow._type_parameter_constraints_clauses_in_interface_method_declaration5349);
				type_parameter_constraints_clauses727=type_parameter_constraints_clauses();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type_parameter_constraints_clauses727.Tree, type_parameter_constraints_clauses727, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(212); }

			DebugLocation(738, 81);
			char_literal728=(IToken)Match(input,SEMI,Follow._SEMI_in_interface_method_declaration5354); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal728_tree = (object)adaptor.Create(char_literal728, retval);
			adaptor.AddChild(root_0, char_literal728_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_method_declaration", 211);
			LeaveRule("interface_method_declaration", 211);
			LeaveRule_interface_method_declaration();
			if (state.backtracking > 0) { Memoize(input, 211, interface_method_declaration_StartIndex); }

		}
		DebugLocation(738, 84);
		} finally { DebugExitRule(GrammarFileName, "interface_method_declaration"); }
		return retval;

	}
	// $ANTLR end "interface_method_declaration"

	partial void EnterRule_interface_event_declaration();
	partial void LeaveRule_interface_event_declaration();
	// $ANTLR start "interface_event_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:739:1: interface_event_declaration : 'event' type identifier ';' ;
	[GrammarRule("interface_event_declaration")]
	private Antlr3AstNode interface_event_declaration()
	{
		EnterRule_interface_event_declaration();
		EnterRule("interface_event_declaration", 212);
		var retval = new Antlr3AstNode("interface_event_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int interface_event_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal729 = default(IToken);
		IToken char_literal732 = default(IToken);
		Antlr3AstNode type730 = default(Antlr3AstNode);
		Antlr3AstNode identifier731 = default(Antlr3AstNode);

		object string_literal729_tree = default(object);
		object char_literal732_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interface_event_declaration");
		DebugLocation(739, 35);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 212)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:739:28: ( 'event' type identifier ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:741:2: 'event' type identifier ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(741, 2);
			string_literal729=(IToken)Match(input,123,Follow._123_in_interface_event_declaration5365); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal729_tree = (object)adaptor.Create(string_literal729, retval);
			adaptor.AddChild(root_0, string_literal729_tree);
			}
			DebugLocation(741, 12);
			PushFollow(Follow._type_in_interface_event_declaration5369);
			type730=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type730.Tree, type730, retval);
			DebugLocation(741, 19);
			PushFollow(Follow._identifier_in_interface_event_declaration5373);
			identifier731=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier731.Tree, identifier731, retval);
			DebugLocation(741, 32);
			char_literal732=(IToken)Match(input,SEMI,Follow._SEMI_in_interface_event_declaration5377); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal732_tree = (object)adaptor.Create(char_literal732, retval);
			adaptor.AddChild(root_0, char_literal732_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_event_declaration", 212);
			LeaveRule("interface_event_declaration", 212);
			LeaveRule_interface_event_declaration();
			if (state.backtracking > 0) { Memoize(input, 212, interface_event_declaration_StartIndex); }

		}
		DebugLocation(741, 35);
		} finally { DebugExitRule(GrammarFileName, "interface_event_declaration"); }
		return retval;

	}
	// $ANTLR end "interface_event_declaration"

	partial void EnterRule_interface_indexer_declaration();
	partial void LeaveRule_interface_indexer_declaration();
	// $ANTLR start "interface_indexer_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:742:1: interface_indexer_declaration : 'this' '[' formal_parameter_list ']' '{' interface_accessor_declarations '}' ;
	[GrammarRule("interface_indexer_declaration")]
	private Antlr3AstNode interface_indexer_declaration()
	{
		EnterRule_interface_indexer_declaration();
		EnterRule("interface_indexer_declaration", 213);
		var retval = new Antlr3AstNode("interface_indexer_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int interface_indexer_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal733 = default(IToken);
		IToken char_literal734 = default(IToken);
		IToken char_literal736 = default(IToken);
		IToken char_literal737 = default(IToken);
		IToken char_literal739 = default(IToken);
		Antlr3AstNode formal_parameter_list735 = default(Antlr3AstNode);
		Antlr3AstNode interface_accessor_declarations738 = default(Antlr3AstNode);

		object string_literal733_tree = default(object);
		object char_literal734_tree = default(object);
		object char_literal736_tree = default(object);
		object char_literal737_tree = default(object);
		object char_literal739_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interface_indexer_declaration");
		DebugLocation(742, 90);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 213)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:742:30: ( 'this' '[' formal_parameter_list ']' '{' interface_accessor_declarations '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:744:2: 'this' '[' formal_parameter_list ']' '{' interface_accessor_declarations '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(744, 2);
			string_literal733=(IToken)Match(input,180,Follow._180_in_interface_indexer_declaration5389); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal733_tree = (object)adaptor.Create(string_literal733, retval);
			adaptor.AddChild(root_0, string_literal733_tree);
			}
			DebugLocation(744, 11);
			char_literal734=(IToken)Match(input,91,Follow._91_in_interface_indexer_declaration5393); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal734_tree = (object)adaptor.Create(char_literal734, retval);
			adaptor.AddChild(root_0, char_literal734_tree);
			}
			DebugLocation(744, 17);
			PushFollow(Follow._formal_parameter_list_in_interface_indexer_declaration5397);
			formal_parameter_list735=formal_parameter_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, formal_parameter_list735.Tree, formal_parameter_list735, retval);
			DebugLocation(744, 41);
			char_literal736=(IToken)Match(input,92,Follow._92_in_interface_indexer_declaration5401); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal736_tree = (object)adaptor.Create(char_literal736, retval);
			adaptor.AddChild(root_0, char_literal736_tree);
			}
			DebugLocation(744, 47);
			char_literal737=(IToken)Match(input,197,Follow._197_in_interface_indexer_declaration5405); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal737_tree = (object)adaptor.Create(char_literal737, retval);
			adaptor.AddChild(root_0, char_literal737_tree);
			}
			DebugLocation(744, 53);
			PushFollow(Follow._interface_accessor_declarations_in_interface_indexer_declaration5409);
			interface_accessor_declarations738=interface_accessor_declarations();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, interface_accessor_declarations738.Tree, interface_accessor_declarations738, retval);
			DebugLocation(744, 87);
			char_literal739=(IToken)Match(input,201,Follow._201_in_interface_indexer_declaration5413); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal739_tree = (object)adaptor.Create(char_literal739, retval);
			adaptor.AddChild(root_0, char_literal739_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_indexer_declaration", 213);
			LeaveRule("interface_indexer_declaration", 213);
			LeaveRule_interface_indexer_declaration();
			if (state.backtracking > 0) { Memoize(input, 213, interface_indexer_declaration_StartIndex); }

		}
		DebugLocation(744, 90);
		} finally { DebugExitRule(GrammarFileName, "interface_indexer_declaration"); }
		return retval;

	}
	// $ANTLR end "interface_indexer_declaration"

	partial void EnterRule_interface_accessor_declarations();
	partial void LeaveRule_interface_accessor_declarations();
	// $ANTLR start "interface_accessor_declarations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:745:1: interface_accessor_declarations : ( attributes )? ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? ) ;
	[GrammarRule("interface_accessor_declarations")]
	private Antlr3AstNode interface_accessor_declarations()
	{
		EnterRule_interface_accessor_declarations();
		EnterRule("interface_accessor_declarations", 214);
		var retval = new Antlr3AstNode("interface_accessor_declarations");
		
		retval.Start = (IToken)input.LT(1);
		int interface_accessor_declarations_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode attributes740 = default(Antlr3AstNode);
		Antlr3AstNode interface_get_accessor_declaration741 = default(Antlr3AstNode);
		Antlr3AstNode attributes742 = default(Antlr3AstNode);
		Antlr3AstNode interface_set_accessor_declaration743 = default(Antlr3AstNode);
		Antlr3AstNode interface_set_accessor_declaration744 = default(Antlr3AstNode);
		Antlr3AstNode attributes745 = default(Antlr3AstNode);
		Antlr3AstNode interface_get_accessor_declaration746 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "interface_accessor_declarations");
		DebugLocation(745, 92);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 214)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:745:32: ( ( attributes )? ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:746:2: ( attributes )? ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(746, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:746:2: ( attributes )?
			int alt213=2;
			try { DebugEnterSubRule(213);
			try { DebugEnterDecision(213, false);
			int LA213_1 = input.LA(1);

			if ((LA213_1==91))
			{
				alt213 = 1;
			}
			} finally { DebugExitDecision(213); }
			switch (alt213)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:746:2: attributes
				{
				DebugLocation(746, 2);
				PushFollow(Follow._attributes_in_interface_accessor_declarations5421);
				attributes740=attributes();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, attributes740.Tree, attributes740, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(213); }

			DebugLocation(747, 3);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:747:3: ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? )
			int alt218=2;
			try { DebugEnterSubRule(218);
			try { DebugEnterDecision(218, false);
			int LA218_1 = input.LA(1);

			if ((LA218_1==133))
			{
				alt218 = 1;
			}
			else if ((LA218_1==172))
			{
				alt218 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 218, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(218); }
			switch (alt218)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:747:4: interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )?
				{
				DebugLocation(747, 4);
				PushFollow(Follow._interface_get_accessor_declaration_in_interface_accessor_declarations5430);
				interface_get_accessor_declaration741=interface_get_accessor_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interface_get_accessor_declaration741.Tree, interface_get_accessor_declaration741, retval);
				DebugLocation(747, 41);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:747:41: ( attributes )?
				int alt214=2;
				try { DebugEnterSubRule(214);
				try { DebugEnterDecision(214, false);
				int LA214_1 = input.LA(1);

				if ((LA214_1==91))
				{
					alt214 = 1;
				}
				} finally { DebugExitDecision(214); }
				switch (alt214)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:747:41: attributes
					{
					DebugLocation(747, 41);
					PushFollow(Follow._attributes_in_interface_accessor_declarations5434);
					attributes742=attributes();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, attributes742.Tree, attributes742, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(214); }

				DebugLocation(747, 55);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:747:55: ( interface_set_accessor_declaration )?
				int alt215=2;
				try { DebugEnterSubRule(215);
				try { DebugEnterDecision(215, false);
				int LA215_1 = input.LA(1);

				if ((LA215_1==172))
				{
					alt215 = 1;
				}
				} finally { DebugExitDecision(215); }
				switch (alt215)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:747:55: interface_set_accessor_declaration
					{
					DebugLocation(747, 55);
					PushFollow(Follow._interface_set_accessor_declaration_in_interface_accessor_declarations5439);
					interface_set_accessor_declaration743=interface_set_accessor_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, interface_set_accessor_declaration743.Tree, interface_set_accessor_declaration743, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(215); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:748:5: interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )?
				{
				DebugLocation(748, 5);
				PushFollow(Follow._interface_set_accessor_declaration_in_interface_accessor_declarations5446);
				interface_set_accessor_declaration744=interface_set_accessor_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interface_set_accessor_declaration744.Tree, interface_set_accessor_declaration744, retval);
				DebugLocation(748, 42);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:748:42: ( attributes )?
				int alt216=2;
				try { DebugEnterSubRule(216);
				try { DebugEnterDecision(216, false);
				int LA216_1 = input.LA(1);

				if ((LA216_1==91))
				{
					alt216 = 1;
				}
				} finally { DebugExitDecision(216); }
				switch (alt216)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:748:42: attributes
					{
					DebugLocation(748, 42);
					PushFollow(Follow._attributes_in_interface_accessor_declarations5450);
					attributes745=attributes();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, attributes745.Tree, attributes745, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(216); }

				DebugLocation(748, 56);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:748:56: ( interface_get_accessor_declaration )?
				int alt217=2;
				try { DebugEnterSubRule(217);
				try { DebugEnterDecision(217, false);
				int LA217_1 = input.LA(1);

				if ((LA217_1==133))
				{
					alt217 = 1;
				}
				} finally { DebugExitDecision(217); }
				switch (alt217)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:748:56: interface_get_accessor_declaration
					{
					DebugLocation(748, 56);
					PushFollow(Follow._interface_get_accessor_declaration_in_interface_accessor_declarations5455);
					interface_get_accessor_declaration746=interface_get_accessor_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, interface_get_accessor_declaration746.Tree, interface_get_accessor_declaration746, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(217); }


				}
				break;

			}
			} finally { DebugExitSubRule(218); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_accessor_declarations", 214);
			LeaveRule("interface_accessor_declarations", 214);
			LeaveRule_interface_accessor_declarations();
			if (state.backtracking > 0) { Memoize(input, 214, interface_accessor_declarations_StartIndex); }

		}
		DebugLocation(748, 92);
		} finally { DebugExitRule(GrammarFileName, "interface_accessor_declarations"); }
		return retval;

	}
	// $ANTLR end "interface_accessor_declarations"

	partial void EnterRule_interface_get_accessor_declaration();
	partial void LeaveRule_interface_get_accessor_declaration();
	// $ANTLR start "interface_get_accessor_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:749:1: interface_get_accessor_declaration : 'get' ';' ;
	[GrammarRule("interface_get_accessor_declaration")]
	private Antlr3AstNode interface_get_accessor_declaration()
	{
		EnterRule_interface_get_accessor_declaration();
		EnterRule("interface_get_accessor_declaration", 215);
		var retval = new Antlr3AstNode("interface_get_accessor_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int interface_get_accessor_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal747 = default(IToken);
		IToken char_literal748 = default(IToken);

		object string_literal747_tree = default(object);
		object char_literal748_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interface_get_accessor_declaration");
		DebugLocation(749, 13);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 215)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:749:35: ( 'get' ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:750:2: 'get' ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(750, 2);
			string_literal747=(IToken)Match(input,133,Follow._133_in_interface_get_accessor_declaration5465); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal747_tree = (object)adaptor.Create(string_literal747, retval);
			adaptor.AddChild(root_0, string_literal747_tree);
			}
			DebugLocation(750, 10);
			char_literal748=(IToken)Match(input,SEMI,Follow._SEMI_in_interface_get_accessor_declaration5469); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal748_tree = (object)adaptor.Create(char_literal748, retval);
			adaptor.AddChild(root_0, char_literal748_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_get_accessor_declaration", 215);
			LeaveRule("interface_get_accessor_declaration", 215);
			LeaveRule_interface_get_accessor_declaration();
			if (state.backtracking > 0) { Memoize(input, 215, interface_get_accessor_declaration_StartIndex); }

		}
		DebugLocation(750, 13);
		} finally { DebugExitRule(GrammarFileName, "interface_get_accessor_declaration"); }
		return retval;

	}
	// $ANTLR end "interface_get_accessor_declaration"

	partial void EnterRule_interface_set_accessor_declaration();
	partial void LeaveRule_interface_set_accessor_declaration();
	// $ANTLR start "interface_set_accessor_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:751:1: interface_set_accessor_declaration : 'set' ';' ;
	[GrammarRule("interface_set_accessor_declaration")]
	private Antlr3AstNode interface_set_accessor_declaration()
	{
		EnterRule_interface_set_accessor_declaration();
		EnterRule("interface_set_accessor_declaration", 216);
		var retval = new Antlr3AstNode("interface_set_accessor_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int interface_set_accessor_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal749 = default(IToken);
		IToken char_literal750 = default(IToken);

		object string_literal749_tree = default(object);
		object char_literal750_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interface_set_accessor_declaration");
		DebugLocation(751, 13);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 216)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:751:35: ( 'set' ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:752:2: 'set' ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(752, 2);
			string_literal749=(IToken)Match(input,172,Follow._172_in_interface_set_accessor_declaration5479); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal749_tree = (object)adaptor.Create(string_literal749, retval);
			adaptor.AddChild(root_0, string_literal749_tree);
			}
			DebugLocation(752, 10);
			char_literal750=(IToken)Match(input,SEMI,Follow._SEMI_in_interface_set_accessor_declaration5483); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal750_tree = (object)adaptor.Create(char_literal750, retval);
			adaptor.AddChild(root_0, char_literal750_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interface_set_accessor_declaration", 216);
			LeaveRule("interface_set_accessor_declaration", 216);
			LeaveRule_interface_set_accessor_declaration();
			if (state.backtracking > 0) { Memoize(input, 216, interface_set_accessor_declaration_StartIndex); }

		}
		DebugLocation(752, 13);
		} finally { DebugExitRule(GrammarFileName, "interface_set_accessor_declaration"); }
		return retval;

	}
	// $ANTLR end "interface_set_accessor_declaration"

	partial void EnterRule_method_modifiers();
	partial void LeaveRule_method_modifiers();
	// $ANTLR start "method_modifiers"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:753:1: method_modifiers : ( modifier )+ ;
	[GrammarRule("method_modifiers")]
	private Antlr3AstNode method_modifiers()
	{
		EnterRule_method_modifiers();
		EnterRule("method_modifiers", 217);
		var retval = new Antlr3AstNode("method_modifiers");
		
		retval.Start = (IToken)input.LT(1);
		int method_modifiers_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode modifier751 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "method_modifiers");
		DebugLocation(753, 11);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 217)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:753:17: ( ( modifier )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:754:2: ( modifier )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(754, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:754:2: ( modifier )+
			int cnt219=0;
			try { DebugEnterSubRule(219);
			while (true)
			{
				int alt219=2;
				try { DebugEnterDecision(219, false);
				int LA219_1 = input.LA(1);

				if ((LA219_1==96||LA219_1==125||LA219_1==140||LA219_1==150||LA219_1==156||LA219_1==161||(LA219_1>=163 && LA219_1<=165)||LA219_1==170||LA219_1==176||LA219_1==188||LA219_1==191||LA219_1==193))
				{
					alt219 = 1;
				}


				} finally { DebugExitDecision(219); }
				switch (alt219)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:754:2: modifier
					{
					DebugLocation(754, 2);
					PushFollow(Follow._modifier_in_method_modifiers5493);
					modifier751=modifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, modifier751.Tree, modifier751, retval);

					}
					break;

				default:
					if (cnt219 >= 1)
						goto loop219;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee219 = new EarlyExitException( 219, input );
					DebugRecognitionException(eee219);
					throw eee219;
				}
				cnt219++;
			}
			loop219:
				;

			} finally { DebugExitSubRule(219); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("method_modifiers", 217);
			LeaveRule("method_modifiers", 217);
			LeaveRule_method_modifiers();
			if (state.backtracking > 0) { Memoize(input, 217, method_modifiers_StartIndex); }

		}
		DebugLocation(754, 11);
		} finally { DebugExitRule(GrammarFileName, "method_modifiers"); }
		return retval;

	}
	// $ANTLR end "method_modifiers"

	partial void EnterRule_struct_declaration();
	partial void LeaveRule_struct_declaration();
	// $ANTLR start "struct_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:757:1: struct_declaration : 'struct' type_or_generic ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( ';' )? ;
	[GrammarRule("struct_declaration")]
	private Antlr3AstNode struct_declaration()
	{
		EnterRule_struct_declaration();
		EnterRule("struct_declaration", 218);
		var retval = new Antlr3AstNode("struct_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int struct_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal752 = default(IToken);
		IToken char_literal757 = default(IToken);
		Antlr3AstNode type_or_generic753 = default(Antlr3AstNode);
		Antlr3AstNode struct_interfaces754 = default(Antlr3AstNode);
		Antlr3AstNode type_parameter_constraints_clauses755 = default(Antlr3AstNode);
		Antlr3AstNode struct_body756 = default(Antlr3AstNode);

		object string_literal752_tree = default(object);
		object char_literal757_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "struct_declaration");
		DebugLocation(757, 108);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 218)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:757:19: ( 'struct' type_or_generic ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( ';' )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:758:2: 'struct' type_or_generic ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( ';' )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(758, 2);
			string_literal752=(IToken)Match(input,178,Follow._178_in_struct_declaration5505); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal752_tree = (object)adaptor.Create(string_literal752, retval);
			adaptor.AddChild(root_0, string_literal752_tree);
			}
			DebugLocation(758, 13);
			PushFollow(Follow._type_or_generic_in_struct_declaration5509);
			type_or_generic753=type_or_generic();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type_or_generic753.Tree, type_or_generic753, retval);
			DebugLocation(758, 31);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:758:31: ( struct_interfaces )?
			int alt220=2;
			try { DebugEnterSubRule(220);
			try { DebugEnterDecision(220, false);
			int LA220_1 = input.LA(1);

			if ((LA220_1==79))
			{
				alt220 = 1;
			}
			} finally { DebugExitDecision(220); }
			switch (alt220)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:758:31: struct_interfaces
				{
				DebugLocation(758, 31);
				PushFollow(Follow._struct_interfaces_in_struct_declaration5513);
				struct_interfaces754=struct_interfaces();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, struct_interfaces754.Tree, struct_interfaces754, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(220); }

			DebugLocation(758, 52);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:758:52: ( type_parameter_constraints_clauses )?
			int alt221=2;
			try { DebugEnterSubRule(221);
			try { DebugEnterDecision(221, false);
			int LA221_1 = input.LA(1);

			if ((LA221_1==194))
			{
				alt221 = 1;
			}
			} finally { DebugExitDecision(221); }
			switch (alt221)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:758:52: type_parameter_constraints_clauses
				{
				DebugLocation(758, 52);
				PushFollow(Follow._type_parameter_constraints_clauses_in_struct_declaration5518);
				type_parameter_constraints_clauses755=type_parameter_constraints_clauses();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type_parameter_constraints_clauses755.Tree, type_parameter_constraints_clauses755, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(221); }

			DebugLocation(758, 90);
			PushFollow(Follow._struct_body_in_struct_declaration5523);
			struct_body756=struct_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, struct_body756.Tree, struct_body756, retval);
			DebugLocation(758, 104);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:758:104: ( ';' )?
			int alt222=2;
			try { DebugEnterSubRule(222);
			try { DebugEnterDecision(222, false);
			int LA222_1 = input.LA(1);

			if ((LA222_1==SEMI))
			{
				alt222 = 1;
			}
			} finally { DebugExitDecision(222); }
			switch (alt222)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:758:104: ';'
				{
				DebugLocation(758, 104);
				char_literal757=(IToken)Match(input,SEMI,Follow._SEMI_in_struct_declaration5527); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal757_tree = (object)adaptor.Create(char_literal757, retval);
				adaptor.AddChild(root_0, char_literal757_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(222); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("struct_declaration", 218);
			LeaveRule("struct_declaration", 218);
			LeaveRule_struct_declaration();
			if (state.backtracking > 0) { Memoize(input, 218, struct_declaration_StartIndex); }

		}
		DebugLocation(758, 108);
		} finally { DebugExitRule(GrammarFileName, "struct_declaration"); }
		return retval;

	}
	// $ANTLR end "struct_declaration"

	partial void EnterRule_struct_modifiers();
	partial void LeaveRule_struct_modifiers();
	// $ANTLR start "struct_modifiers"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:759:1: struct_modifiers : ( struct_modifier )+ ;
	[GrammarRule("struct_modifiers")]
	private Antlr3AstNode struct_modifiers()
	{
		EnterRule_struct_modifiers();
		EnterRule("struct_modifiers", 219);
		var retval = new Antlr3AstNode("struct_modifiers");
		
		retval.Start = (IToken)input.LT(1);
		int struct_modifiers_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode struct_modifier758 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "struct_modifiers");
		DebugLocation(759, 18);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 219)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:759:17: ( ( struct_modifier )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:760:2: ( struct_modifier )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(760, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:760:2: ( struct_modifier )+
			int cnt223=0;
			try { DebugEnterSubRule(223);
			while (true)
			{
				int alt223=2;
				try { DebugEnterDecision(223, false);
				int LA223_1 = input.LA(1);

				if ((LA223_1==140||LA223_1==150||LA223_1==161||(LA223_1>=163 && LA223_1<=164)||LA223_1==188))
				{
					alt223 = 1;
				}


				} finally { DebugExitDecision(223); }
				switch (alt223)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:760:2: struct_modifier
					{
					DebugLocation(760, 2);
					PushFollow(Follow._struct_modifier_in_struct_modifiers5536);
					struct_modifier758=struct_modifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, struct_modifier758.Tree, struct_modifier758, retval);

					}
					break;

				default:
					if (cnt223 >= 1)
						goto loop223;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee223 = new EarlyExitException( 223, input );
					DebugRecognitionException(eee223);
					throw eee223;
				}
				cnt223++;
			}
			loop223:
				;

			} finally { DebugExitSubRule(223); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("struct_modifiers", 219);
			LeaveRule("struct_modifiers", 219);
			LeaveRule_struct_modifiers();
			if (state.backtracking > 0) { Memoize(input, 219, struct_modifiers_StartIndex); }

		}
		DebugLocation(760, 18);
		} finally { DebugExitRule(GrammarFileName, "struct_modifiers"); }
		return retval;

	}
	// $ANTLR end "struct_modifiers"

	partial void EnterRule_struct_modifier();
	partial void LeaveRule_struct_modifier();
	// $ANTLR start "struct_modifier"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:761:1: struct_modifier : ( 'new' | 'public' | 'protected' | 'internal' | 'private' | 'unsafe' );
	[GrammarRule("struct_modifier")]
	private Antlr3AstNode struct_modifier()
	{
		EnterRule_struct_modifier();
		EnterRule("struct_modifier", 220);
		var retval = new Antlr3AstNode("struct_modifier");
		
		retval.Start = (IToken)input.LT(1);
		int struct_modifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set759 = default(IToken);

		object set759_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "struct_modifier");
		DebugLocation(761, 68);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 220)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:761:16: ( 'new' | 'public' | 'protected' | 'internal' | 'private' | 'unsafe' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(761, 16);

			set759=(IToken)input.LT(1);
			if (input.LA(1)==140||input.LA(1)==150||input.LA(1)==161||(input.LA(1)>=163 && input.LA(1)<=164)||input.LA(1)==188)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set759, retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("struct_modifier", 220);
			LeaveRule("struct_modifier", 220);
			LeaveRule_struct_modifier();
			if (state.backtracking > 0) { Memoize(input, 220, struct_modifier_StartIndex); }

		}
		DebugLocation(762, 68);
		} finally { DebugExitRule(GrammarFileName, "struct_modifier"); }
		return retval;

	}
	// $ANTLR end "struct_modifier"

	partial void EnterRule_struct_interfaces();
	partial void LeaveRule_struct_interfaces();
	// $ANTLR start "struct_interfaces"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:763:1: struct_interfaces : ':' interface_type_list ;
	[GrammarRule("struct_interfaces")]
	private Antlr3AstNode struct_interfaces()
	{
		EnterRule_struct_interfaces();
		EnterRule("struct_interfaces", 221);
		var retval = new Antlr3AstNode("struct_interfaces");
		
		retval.Start = (IToken)input.LT(1);
		int struct_interfaces_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal760 = default(IToken);
		Antlr3AstNode interface_type_list761 = default(Antlr3AstNode);

		object char_literal760_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "struct_interfaces");
		DebugLocation(763, 26);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 221)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:763:18: ( ':' interface_type_list )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:764:2: ':' interface_type_list
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(764, 2);
			char_literal760=(IToken)Match(input,79,Follow._79_in_struct_interfaces5573); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal760_tree = (object)adaptor.Create(char_literal760, retval);
			adaptor.AddChild(root_0, char_literal760_tree);
			}
			DebugLocation(764, 8);
			PushFollow(Follow._interface_type_list_in_struct_interfaces5577);
			interface_type_list761=interface_type_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, interface_type_list761.Tree, interface_type_list761, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("struct_interfaces", 221);
			LeaveRule("struct_interfaces", 221);
			LeaveRule_struct_interfaces();
			if (state.backtracking > 0) { Memoize(input, 221, struct_interfaces_StartIndex); }

		}
		DebugLocation(764, 26);
		} finally { DebugExitRule(GrammarFileName, "struct_interfaces"); }
		return retval;

	}
	// $ANTLR end "struct_interfaces"

	partial void EnterRule_struct_body();
	partial void LeaveRule_struct_body();
	// $ANTLR start "struct_body"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:765:1: struct_body : '{' ( struct_member_declarations )? '}' ;
	[GrammarRule("struct_body")]
	private Antlr3AstNode struct_body()
	{
		EnterRule_struct_body();
		EnterRule("struct_body", 222);
		var retval = new Antlr3AstNode("struct_body");
		
		retval.Start = (IToken)input.LT(1);
		int struct_body_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal762 = default(IToken);
		IToken char_literal764 = default(IToken);
		Antlr3AstNode struct_member_declarations763 = default(Antlr3AstNode);

		object char_literal762_tree = default(object);
		object char_literal764_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "struct_body");
		DebugLocation(765, 40);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 222)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:765:12: ( '{' ( struct_member_declarations )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:766:2: '{' ( struct_member_declarations )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(766, 2);
			char_literal762=(IToken)Match(input,197,Follow._197_in_struct_body5584); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal762_tree = (object)adaptor.Create(char_literal762, retval);
			adaptor.AddChild(root_0, char_literal762_tree);
			}
			DebugLocation(766, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:766:8: ( struct_member_declarations )?
			int alt224=2;
			try { DebugEnterSubRule(224);
			try { DebugEnterDecision(224, false);
			int LA224_1 = input.LA(1);

			if ((LA224_1==ENUM||LA224_1==IDENTIFIER||LA224_1==91||(LA224_1>=95 && LA224_1<=98)||(LA224_1>=100 && LA224_1<=101)||LA224_1==103||(LA224_1>=105 && LA224_1<=106)||LA224_1==109||(LA224_1>=111 && LA224_1<=112)||LA224_1==114||(LA224_1>=116 && LA224_1<=117)||(LA224_1>=119 && LA224_1<=120)||(LA224_1>=122 && LA224_1<=126)||LA224_1==129||LA224_1==132||(LA224_1>=135 && LA224_1<=136)||(LA224_1>=138 && LA224_1<=141)||(LA224_1>=143 && LA224_1<=144)||(LA224_1>=146 && LA224_1<=148)||(LA224_1>=150 && LA224_1<=152)||LA224_1==154||(LA224_1>=156 && LA224_1<=157)||(LA224_1>=159 && LA224_1<=165)||LA224_1==167||(LA224_1>=169 && LA224_1<=173)||(LA224_1>=176 && LA224_1<=178)||LA224_1==183||(LA224_1>=185 && LA224_1<=186)||(LA224_1>=188 && LA224_1<=194)||LA224_1==196))
			{
				alt224 = 1;
			}
			} finally { DebugExitDecision(224); }
			switch (alt224)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:766:8: struct_member_declarations
				{
				DebugLocation(766, 8);
				PushFollow(Follow._struct_member_declarations_in_struct_body5588);
				struct_member_declarations763=struct_member_declarations();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, struct_member_declarations763.Tree, struct_member_declarations763, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(224); }

			DebugLocation(766, 38);
			char_literal764=(IToken)Match(input,201,Follow._201_in_struct_body5593); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal764_tree = (object)adaptor.Create(char_literal764, retval);
			adaptor.AddChild(root_0, char_literal764_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("struct_body", 222);
			LeaveRule("struct_body", 222);
			LeaveRule_struct_body();
			if (state.backtracking > 0) { Memoize(input, 222, struct_body_StartIndex); }

		}
		DebugLocation(766, 40);
		} finally { DebugExitRule(GrammarFileName, "struct_body"); }
		return retval;

	}
	// $ANTLR end "struct_body"

	partial void EnterRule_struct_member_declarations();
	partial void LeaveRule_struct_member_declarations();
	// $ANTLR start "struct_member_declarations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:767:1: struct_member_declarations : ( struct_member_declaration )+ ;
	[GrammarRule("struct_member_declarations")]
	private Antlr3AstNode struct_member_declarations()
	{
		EnterRule_struct_member_declarations();
		EnterRule("struct_member_declarations", 223);
		var retval = new Antlr3AstNode("struct_member_declarations");
		
		retval.Start = (IToken)input.LT(1);
		int struct_member_declarations_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode struct_member_declaration765 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "struct_member_declarations");
		DebugLocation(767, 28);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 223)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:767:27: ( ( struct_member_declaration )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:768:2: ( struct_member_declaration )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(768, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:768:2: ( struct_member_declaration )+
			int cnt225=0;
			try { DebugEnterSubRule(225);
			while (true)
			{
				int alt225=2;
				try { DebugEnterDecision(225, false);
				int LA225_1 = input.LA(1);

				if ((LA225_1==ENUM||LA225_1==IDENTIFIER||LA225_1==91||(LA225_1>=95 && LA225_1<=98)||(LA225_1>=100 && LA225_1<=101)||LA225_1==103||(LA225_1>=105 && LA225_1<=106)||LA225_1==109||(LA225_1>=111 && LA225_1<=112)||LA225_1==114||(LA225_1>=116 && LA225_1<=117)||(LA225_1>=119 && LA225_1<=120)||(LA225_1>=122 && LA225_1<=126)||LA225_1==129||LA225_1==132||(LA225_1>=135 && LA225_1<=136)||(LA225_1>=138 && LA225_1<=141)||(LA225_1>=143 && LA225_1<=144)||(LA225_1>=146 && LA225_1<=148)||(LA225_1>=150 && LA225_1<=152)||LA225_1==154||(LA225_1>=156 && LA225_1<=157)||(LA225_1>=159 && LA225_1<=165)||LA225_1==167||(LA225_1>=169 && LA225_1<=173)||(LA225_1>=176 && LA225_1<=178)||LA225_1==183||(LA225_1>=185 && LA225_1<=186)||(LA225_1>=188 && LA225_1<=194)||LA225_1==196))
				{
					alt225 = 1;
				}


				} finally { DebugExitDecision(225); }
				switch (alt225)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:768:2: struct_member_declaration
					{
					DebugLocation(768, 2);
					PushFollow(Follow._struct_member_declaration_in_struct_member_declarations5600);
					struct_member_declaration765=struct_member_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, struct_member_declaration765.Tree, struct_member_declaration765, retval);

					}
					break;

				default:
					if (cnt225 >= 1)
						goto loop225;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee225 = new EarlyExitException( 225, input );
					DebugRecognitionException(eee225);
					throw eee225;
				}
				cnt225++;
			}
			loop225:
				;

			} finally { DebugExitSubRule(225); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("struct_member_declarations", 223);
			LeaveRule("struct_member_declarations", 223);
			LeaveRule_struct_member_declarations();
			if (state.backtracking > 0) { Memoize(input, 223, struct_member_declarations_StartIndex); }

		}
		DebugLocation(768, 28);
		} finally { DebugExitRule(GrammarFileName, "struct_member_declarations"); }
		return retval;

	}
	// $ANTLR end "struct_member_declarations"

	partial void EnterRule_struct_member_declaration();
	partial void LeaveRule_struct_member_declaration();
	// $ANTLR start "struct_member_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:769:1: struct_member_declaration : ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration ) ;
	[GrammarRule("struct_member_declaration")]
	private Antlr3AstNode struct_member_declaration()
	{
		EnterRule_struct_member_declaration();
		EnterRule("struct_member_declaration", 224);
		var retval = new Antlr3AstNode("struct_member_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int struct_member_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal767 = default(IToken);
		IToken char_literal770 = default(IToken);
		IToken string_literal772 = default(IToken);
		IToken string_literal779 = default(IToken);
		IToken char_literal785 = default(IToken);
		Antlr3AstNode m = default(Antlr3AstNode);
		Antlr3AstNode attributes766 = default(Antlr3AstNode);
		Antlr3AstNode type768 = default(Antlr3AstNode);
		Antlr3AstNode constant_declarators769 = default(Antlr3AstNode);
		Antlr3AstNode event_declaration771 = default(Antlr3AstNode);
		Antlr3AstNode method_declaration773 = default(Antlr3AstNode);
		Antlr3AstNode interface_declaration774 = default(Antlr3AstNode);
		Antlr3AstNode class_declaration775 = default(Antlr3AstNode);
		Antlr3AstNode struct_declaration776 = default(Antlr3AstNode);
		Antlr3AstNode interface_declaration777 = default(Antlr3AstNode);
		Antlr3AstNode class_declaration778 = default(Antlr3AstNode);
		Antlr3AstNode method_declaration780 = default(Antlr3AstNode);
		Antlr3AstNode type781 = default(Antlr3AstNode);
		Antlr3AstNode method_declaration782 = default(Antlr3AstNode);
		Antlr3AstNode property_declaration783 = default(Antlr3AstNode);
		Antlr3AstNode type_name784 = default(Antlr3AstNode);
		Antlr3AstNode indexer_declaration786 = default(Antlr3AstNode);
		Antlr3AstNode indexer_declaration787 = default(Antlr3AstNode);
		Antlr3AstNode field_declaration788 = default(Antlr3AstNode);
		Antlr3AstNode operator_declaration789 = default(Antlr3AstNode);
		Antlr3AstNode struct_declaration790 = default(Antlr3AstNode);
		Antlr3AstNode enum_declaration791 = default(Antlr3AstNode);
		Antlr3AstNode delegate_declaration792 = default(Antlr3AstNode);
		Antlr3AstNode conversion_operator_declaration793 = default(Antlr3AstNode);
		Antlr3AstNode constructor_declaration794 = default(Antlr3AstNode);

		object string_literal767_tree = default(object);
		object char_literal770_tree = default(object);
		object string_literal772_tree = default(object);
		object string_literal779_tree = default(object);
		object char_literal785_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "struct_member_declaration");
		DebugLocation(769, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 224)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:769:26: ( ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:770:2: ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(770, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:770:2: ( attributes )?
			int alt226=2;
			try { DebugEnterSubRule(226);
			try { DebugEnterDecision(226, false);
			int LA226_1 = input.LA(1);

			if ((LA226_1==91))
			{
				alt226 = 1;
			}
			} finally { DebugExitDecision(226); }
			switch (alt226)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:770:2: attributes
				{
				DebugLocation(770, 2);
				PushFollow(Follow._attributes_in_struct_member_declaration5609);
				attributes766=attributes();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, attributes766.Tree, attributes766, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(226); }

			DebugLocation(770, 17);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:770:17: (m= modifiers )?
			int alt227=2;
			try { DebugEnterSubRule(227);
			try { DebugEnterDecision(227, false);
			int LA227_1 = input.LA(1);

			if ((LA227_1==96||LA227_1==125||LA227_1==140||LA227_1==150||LA227_1==156||LA227_1==161||(LA227_1>=163 && LA227_1<=165)||LA227_1==170||LA227_1==176||LA227_1==188||LA227_1==191||LA227_1==193))
			{
				alt227 = 1;
			}
			} finally { DebugExitDecision(227); }
			switch (alt227)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:770:17: m= modifiers
				{
				DebugLocation(770, 17);
				PushFollow(Follow._modifiers_in_struct_member_declaration5616);
				m=modifiers();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, m.Tree, m, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(227); }

			DebugLocation(771, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:771:2: ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration )
			int alt230=12;
			try { DebugEnterSubRule(230);
			try { DebugEnterDecision(230, false);
			switch (input.LA(1))
			{
			case 112:
				{
				alt230 = 1;
				}
				break;
			case 123:
				{
				alt230 = 2;
				}
				break;
			case 159:
				{
				alt230 = 3;
				}
				break;
			case 139:
				{
				alt230 = 4;
				}
				break;
			case 111:
				{
				alt230 = 5;
				}
				break;
			case 192:
				{
				int LA230_2 = input.LA(2);

				if ((LA230_2==Character_literal||LA230_2==FALSE||(LA230_2>=Hex_number && LA230_2<=IDENTIFIER)||(LA230_2>=NULL && LA230_2<=NUMBER)||LA230_2==Real_literal||LA230_2==STRINGLITERAL||LA230_2==TRUE||LA230_2==Verbatim_string_literal||LA230_2==95||(LA230_2>=97 && LA230_2<=98)||(LA230_2>=100 && LA230_2<=101)||LA230_2==103||(LA230_2>=105 && LA230_2<=106)||LA230_2==109||LA230_2==114||LA230_2==117||(LA230_2>=119 && LA230_2<=120)||LA230_2==122||LA230_2==126||LA230_2==129||LA230_2==132||LA230_2==135||LA230_2==138||LA230_2==141||(LA230_2>=143 && LA230_2<=144)||(LA230_2>=146 && LA230_2<=148)||(LA230_2>=151 && LA230_2<=152)||LA230_2==154||LA230_2==157||LA230_2==160||LA230_2==162||LA230_2==167||LA230_2==169||(LA230_2>=171 && LA230_2<=173)||LA230_2==177||LA230_2==183||(LA230_2>=185 && LA230_2<=186)||(LA230_2>=189 && LA230_2<=190)||LA230_2==194||LA230_2==196))
				{
					alt230 = 6;
				}
				else if ((LA230_2==69))
				{
					alt230 = 7;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 230, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 103:
			case 106:
			case 109:
			case 114:
			case 119:
			case 129:
			case 138:
			case 146:
			case 151:
			case 169:
			case 173:
			case 177:
			case 185:
			case 186:
			case 189:
				{
				alt230 = 7;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 132:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA230_2 = input.LA(2);

				if ((LA230_2==Character_literal||LA230_2==DOT||LA230_2==FALSE||(LA230_2>=Hex_number && LA230_2<=IDENTIFIER)||(LA230_2>=NULL && LA230_2<=NUMBER)||LA230_2==Real_literal||LA230_2==STRINGLITERAL||LA230_2==TRUE||LA230_2==Verbatim_string_literal||LA230_2==69||(LA230_2>=80 && LA230_2<=81)||LA230_2==89||LA230_2==91||LA230_2==95||(LA230_2>=97 && LA230_2<=98)||(LA230_2>=100 && LA230_2<=101)||LA230_2==103||(LA230_2>=105 && LA230_2<=106)||LA230_2==109||LA230_2==114||LA230_2==117||(LA230_2>=119 && LA230_2<=120)||LA230_2==122||LA230_2==126||LA230_2==129||LA230_2==132||LA230_2==135||LA230_2==138||LA230_2==141||(LA230_2>=143 && LA230_2<=144)||(LA230_2>=146 && LA230_2<=148)||(LA230_2>=151 && LA230_2<=154)||LA230_2==157||LA230_2==160||LA230_2==162||LA230_2==167||LA230_2==169||(LA230_2>=171 && LA230_2<=173)||LA230_2==177||LA230_2==180||LA230_2==183||(LA230_2>=185 && LA230_2<=186)||(LA230_2>=189 && LA230_2<=190)||LA230_2==194||LA230_2==196))
				{
					alt230 = 7;
				}
				else if ((LA230_2==68))
				{
					alt230 = 12;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 230, 8, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 178:
				{
				alt230 = 8;
				}
				break;
			case ENUM:
				{
				alt230 = 9;
				}
				break;
			case 116:
				{
				alt230 = 10;
				}
				break;
			case 124:
			case 136:
				{
				alt230 = 11;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 230, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(230); }
			switch (alt230)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:771:4: 'const' type constant_declarators ';'
				{
				DebugLocation(771, 4);
				string_literal767=(IToken)Match(input,112,Follow._112_in_struct_member_declaration5622); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal767_tree = (object)adaptor.Create(string_literal767, retval);
				adaptor.AddChild(root_0, string_literal767_tree);
				}
				DebugLocation(771, 14);
				PushFollow(Follow._type_in_struct_member_declaration5626);
				type768=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type768.Tree, type768, retval);
				DebugLocation(771, 21);
				PushFollow(Follow._constant_declarators_in_struct_member_declaration5630);
				constant_declarators769=constant_declarators();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constant_declarators769.Tree, constant_declarators769, retval);
				DebugLocation(771, 44);
				char_literal770=(IToken)Match(input,SEMI,Follow._SEMI_in_struct_member_declaration5634); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal770_tree = (object)adaptor.Create(char_literal770, retval);
				adaptor.AddChild(root_0, char_literal770_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:772:4: event_declaration
				{
				DebugLocation(772, 4);
				PushFollow(Follow._event_declaration_in_struct_member_declaration5639);
				event_declaration771=event_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, event_declaration771.Tree, event_declaration771, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:773:4: 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration )
				{
				DebugLocation(773, 4);
				string_literal772=(IToken)Match(input,159,Follow._159_in_struct_member_declaration5646); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal772_tree = (object)adaptor.Create(string_literal772, retval);
				adaptor.AddChild(root_0, string_literal772_tree);
				}
				DebugLocation(773, 14);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:773:14: ( method_declaration | interface_declaration | class_declaration | struct_declaration )
				int alt228=4;
				try { DebugEnterSubRule(228);
				try { DebugEnterDecision(228, false);
				switch (input.LA(1))
				{
				case Character_literal:
				case FALSE:
				case Hex_number:
				case IDENTIFIER:
				case NULL:
				case NUMBER:
				case Real_literal:
				case STRINGLITERAL:
				case TRUE:
				case Verbatim_string_literal:
				case 95:
				case 97:
				case 98:
				case 100:
				case 101:
				case 103:
				case 105:
				case 106:
				case 109:
				case 114:
				case 117:
				case 119:
				case 120:
				case 122:
				case 126:
				case 129:
				case 132:
				case 135:
				case 138:
				case 141:
				case 143:
				case 144:
				case 146:
				case 147:
				case 148:
				case 151:
				case 152:
				case 154:
				case 157:
				case 160:
				case 162:
				case 167:
				case 169:
				case 171:
				case 172:
				case 173:
				case 177:
				case 183:
				case 185:
				case 186:
				case 189:
				case 190:
				case 194:
				case 196:
					{
					alt228 = 1;
					}
					break;
				case 139:
					{
					alt228 = 2;
					}
					break;
				case 111:
					{
					alt228 = 3;
					}
					break;
				case 178:
					{
					alt228 = 4;
					}
					break;
				default:
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 228, 0, input, 1);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}

				} finally { DebugExitDecision(228); }
				switch (alt228)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:773:15: method_declaration
					{
					DebugLocation(773, 15);
					PushFollow(Follow._method_declaration_in_struct_member_declaration5649);
					method_declaration773=method_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, method_declaration773.Tree, method_declaration773, retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:774:9: interface_declaration
					{
					DebugLocation(774, 9);
					PushFollow(Follow._interface_declaration_in_struct_member_declaration5660);
					interface_declaration774=interface_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, interface_declaration774.Tree, interface_declaration774, retval);

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:775:9: class_declaration
					{
					DebugLocation(775, 9);
					PushFollow(Follow._class_declaration_in_struct_member_declaration5671);
					class_declaration775=class_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, class_declaration775.Tree, class_declaration775, retval);

					}
					break;
				case 4:
					DebugEnterAlt(4);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:776:9: struct_declaration
					{
					DebugLocation(776, 9);
					PushFollow(Follow._struct_declaration_in_struct_member_declaration5682);
					struct_declaration776=struct_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, struct_declaration776.Tree, struct_declaration776, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(228); }


				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:778:4: interface_declaration
				{
				DebugLocation(778, 4);
				PushFollow(Follow._interface_declaration_in_struct_member_declaration5689);
				interface_declaration777=interface_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interface_declaration777.Tree, interface_declaration777, retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:779:4: class_declaration
				{
				DebugLocation(779, 4);
				PushFollow(Follow._class_declaration_in_struct_member_declaration5695);
				class_declaration778=class_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, class_declaration778.Tree, class_declaration778, retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:780:4: 'void' method_declaration
				{
				DebugLocation(780, 4);
				string_literal779=(IToken)Match(input,192,Follow._192_in_struct_member_declaration5702); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal779_tree = (object)adaptor.Create(string_literal779, retval);
				adaptor.AddChild(root_0, string_literal779_tree);
				}
				DebugLocation(780, 13);
				PushFollow(Follow._method_declaration_in_struct_member_declaration5706);
				method_declaration780=method_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, method_declaration780.Tree, method_declaration780, retval);

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:781:4: type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )
				{
				DebugLocation(781, 4);
				PushFollow(Follow._type_in_struct_member_declaration5711);
				type781=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type781.Tree, type781, retval);
				DebugLocation(781, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:781:9: ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )
				int alt229=6;
				try { DebugEnterSubRule(229);
				try { DebugEnterDecision(229, false);
				switch (input.LA(1))
				{
				case 103:
				case 106:
				case 109:
				case 114:
				case 119:
				case 129:
				case 138:
				case 146:
				case 151:
				case 169:
				case 173:
				case 177:
				case 185:
				case 186:
				case 189:
					{
					int LA229_2 = input.LA(2);

					if ((EvaluatePredicate(synpred28_cs_fragment)))
					{
						alt229 = 1;
					}
					else if ((EvaluatePredicate(synpred29_cs_fragment)))
					{
						alt229 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 229, 1, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					}
					break;
				case IDENTIFIER:
				case 95:
				case 97:
				case 98:
				case 100:
				case 101:
				case 105:
				case 117:
				case 120:
				case 122:
				case 126:
				case 132:
				case 135:
				case 141:
				case 143:
				case 144:
				case 147:
				case 148:
				case 152:
				case 154:
				case 157:
				case 160:
				case 162:
				case 167:
				case 171:
				case 172:
				case 183:
				case 190:
				case 194:
				case 196:
					{
					int LA229_2 = input.LA(2);

					if ((EvaluatePredicate(synpred28_cs_fragment)))
					{
						alt229 = 1;
					}
					else if ((EvaluatePredicate(synpred29_cs_fragment)))
					{
						alt229 = 2;
					}
					else if ((EvaluatePredicate(synpred30_cs_fragment)))
					{
						alt229 = 3;
					}
					else if ((true))
					{
						alt229 = 5;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 229, 2, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					}
					break;
				case Character_literal:
				case FALSE:
				case Hex_number:
				case NULL:
				case NUMBER:
				case Real_literal:
				case STRINGLITERAL:
				case TRUE:
				case Verbatim_string_literal:
					{
					int LA229_2 = input.LA(2);

					if ((EvaluatePredicate(synpred28_cs_fragment)))
					{
						alt229 = 1;
					}
					else if ((EvaluatePredicate(synpred29_cs_fragment)))
					{
						alt229 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 229, 3, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					}
					break;
				case 180:
					{
					alt229 = 4;
					}
					break;
				case 153:
					{
					alt229 = 6;
					}
					break;
				default:
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 229, 0, input, 1);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}

				} finally { DebugExitDecision(229); }
				switch (alt229)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:781:11: ( member_name '(' )=> method_declaration
					{
					DebugLocation(781, 34);
					PushFollow(Follow._method_declaration_in_struct_member_declaration5725);
					method_declaration782=method_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, method_declaration782.Tree, method_declaration782, retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:782:8: ( member_name '{' )=> property_declaration
					{
					DebugLocation(782, 31);
					PushFollow(Follow._property_declaration_in_struct_member_declaration5744);
					property_declaration783=property_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, property_declaration783.Tree, property_declaration783, retval);

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:783:8: ( member_name '.' 'this' )=> type_name '.' indexer_declaration
					{
					DebugLocation(783, 40);
					PushFollow(Follow._type_name_in_struct_member_declaration5767);
					type_name784=type_name();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type_name784.Tree, type_name784, retval);
					DebugLocation(783, 50);
					char_literal785=(IToken)Match(input,DOT,Follow._DOT_in_struct_member_declaration5769); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal785_tree = (object)adaptor.Create(char_literal785, retval);
					adaptor.AddChild(root_0, char_literal785_tree);
					}
					DebugLocation(783, 54);
					PushFollow(Follow._indexer_declaration_in_struct_member_declaration5771);
					indexer_declaration786=indexer_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, indexer_declaration786.Tree, indexer_declaration786, retval);

					}
					break;
				case 4:
					DebugEnterAlt(4);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:784:8: indexer_declaration
					{
					DebugLocation(784, 8);
					PushFollow(Follow._indexer_declaration_in_struct_member_declaration5780);
					indexer_declaration787=indexer_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, indexer_declaration787.Tree, indexer_declaration787, retval);

					}
					break;
				case 5:
					DebugEnterAlt(5);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:785:11: field_declaration
					{
					DebugLocation(785, 11);
					PushFollow(Follow._field_declaration_in_struct_member_declaration5793);
					field_declaration788=field_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, field_declaration788.Tree, field_declaration788, retval);

					}
					break;
				case 6:
					DebugEnterAlt(6);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:786:11: operator_declaration
					{
					DebugLocation(786, 11);
					PushFollow(Follow._operator_declaration_in_struct_member_declaration5811);
					operator_declaration789=operator_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, operator_declaration789.Tree, operator_declaration789, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(229); }


				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:790:4: struct_declaration
				{
				DebugLocation(790, 4);
				PushFollow(Follow._struct_declaration_in_struct_member_declaration5829);
				struct_declaration790=struct_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, struct_declaration790.Tree, struct_declaration790, retval);

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:791:4: enum_declaration
				{
				DebugLocation(791, 4);
				PushFollow(Follow._enum_declaration_in_struct_member_declaration5835);
				enum_declaration791=enum_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enum_declaration791.Tree, enum_declaration791, retval);

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:792:4: delegate_declaration
				{
				DebugLocation(792, 4);
				PushFollow(Follow._delegate_declaration_in_struct_member_declaration5842);
				delegate_declaration792=delegate_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, delegate_declaration792.Tree, delegate_declaration792, retval);

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:793:4: conversion_operator_declaration
				{
				DebugLocation(793, 4);
				PushFollow(Follow._conversion_operator_declaration_in_struct_member_declaration5848);
				conversion_operator_declaration793=conversion_operator_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, conversion_operator_declaration793.Tree, conversion_operator_declaration793, retval);

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:794:4: constructor_declaration
				{
				DebugLocation(794, 4);
				PushFollow(Follow._constructor_declaration_in_struct_member_declaration5853);
				constructor_declaration794=constructor_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constructor_declaration794.Tree, constructor_declaration794, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(230); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("struct_member_declaration", 224);
			LeaveRule("struct_member_declaration", 224);
			LeaveRule_struct_member_declaration();
			if (state.backtracking > 0) { Memoize(input, 224, struct_member_declaration_StartIndex); }

		}
		DebugLocation(796, 1);
		} finally { DebugExitRule(GrammarFileName, "struct_member_declaration"); }
		return retval;

	}
	// $ANTLR end "struct_member_declaration"

	partial void EnterRule_indexer_declaration();
	partial void LeaveRule_indexer_declaration();
	// $ANTLR start "indexer_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:800:1: indexer_declaration : indexer_declarator '{' accessor_declarations '}' ;
	[GrammarRule("indexer_declaration")]
	private Antlr3AstNode indexer_declaration()
	{
		EnterRule_indexer_declaration();
		EnterRule("indexer_declaration", 225);
		var retval = new Antlr3AstNode("indexer_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int indexer_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal796 = default(IToken);
		IToken char_literal798 = default(IToken);
		Antlr3AstNode indexer_declarator795 = default(Antlr3AstNode);
		Antlr3AstNode accessor_declarations797 = default(Antlr3AstNode);

		object char_literal796_tree = default(object);
		object char_literal798_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "indexer_declaration");
		DebugLocation(800, 56);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 225)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:800:20: ( indexer_declarator '{' accessor_declarations '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:801:2: indexer_declarator '{' accessor_declarations '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(801, 2);
			PushFollow(Follow._indexer_declarator_in_indexer_declaration5870);
			indexer_declarator795=indexer_declarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, indexer_declarator795.Tree, indexer_declarator795, retval);
			DebugLocation(801, 23);
			char_literal796=(IToken)Match(input,197,Follow._197_in_indexer_declaration5874); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal796_tree = (object)adaptor.Create(char_literal796, retval);
			adaptor.AddChild(root_0, char_literal796_tree);
			}
			DebugLocation(801, 29);
			PushFollow(Follow._accessor_declarations_in_indexer_declaration5878);
			accessor_declarations797=accessor_declarations();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, accessor_declarations797.Tree, accessor_declarations797, retval);
			DebugLocation(801, 53);
			char_literal798=(IToken)Match(input,201,Follow._201_in_indexer_declaration5882); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal798_tree = (object)adaptor.Create(char_literal798, retval);
			adaptor.AddChild(root_0, char_literal798_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("indexer_declaration", 225);
			LeaveRule("indexer_declaration", 225);
			LeaveRule_indexer_declaration();
			if (state.backtracking > 0) { Memoize(input, 225, indexer_declaration_StartIndex); }

		}
		DebugLocation(801, 56);
		} finally { DebugExitRule(GrammarFileName, "indexer_declaration"); }
		return retval;

	}
	// $ANTLR end "indexer_declaration"

	partial void EnterRule_indexer_declarator();
	partial void LeaveRule_indexer_declarator();
	// $ANTLR start "indexer_declarator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:802:1: indexer_declarator : 'this' '[' formal_parameter_list ']' ;
	[GrammarRule("indexer_declarator")]
	private Antlr3AstNode indexer_declarator()
	{
		EnterRule_indexer_declarator();
		EnterRule("indexer_declarator", 226);
		var retval = new Antlr3AstNode("indexer_declarator");
		
		retval.Start = (IToken)input.LT(1);
		int indexer_declarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal799 = default(IToken);
		IToken char_literal800 = default(IToken);
		IToken char_literal802 = default(IToken);
		Antlr3AstNode formal_parameter_list801 = default(Antlr3AstNode);

		object string_literal799_tree = default(object);
		object char_literal800_tree = default(object);
		object char_literal802_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "indexer_declarator");
		DebugLocation(802, 44);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 226)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:802:19: ( 'this' '[' formal_parameter_list ']' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:804:2: 'this' '[' formal_parameter_list ']'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(804, 2);
			string_literal799=(IToken)Match(input,180,Follow._180_in_indexer_declarator5892); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal799_tree = (object)adaptor.Create(string_literal799, retval);
			adaptor.AddChild(root_0, string_literal799_tree);
			}
			DebugLocation(804, 11);
			char_literal800=(IToken)Match(input,91,Follow._91_in_indexer_declarator5896); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal800_tree = (object)adaptor.Create(char_literal800, retval);
			adaptor.AddChild(root_0, char_literal800_tree);
			}
			DebugLocation(804, 17);
			PushFollow(Follow._formal_parameter_list_in_indexer_declarator5900);
			formal_parameter_list801=formal_parameter_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, formal_parameter_list801.Tree, formal_parameter_list801, retval);
			DebugLocation(804, 41);
			char_literal802=(IToken)Match(input,92,Follow._92_in_indexer_declarator5904); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal802_tree = (object)adaptor.Create(char_literal802, retval);
			adaptor.AddChild(root_0, char_literal802_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("indexer_declarator", 226);
			LeaveRule("indexer_declarator", 226);
			LeaveRule_indexer_declarator();
			if (state.backtracking > 0) { Memoize(input, 226, indexer_declarator_StartIndex); }

		}
		DebugLocation(804, 44);
		} finally { DebugExitRule(GrammarFileName, "indexer_declarator"); }
		return retval;

	}
	// $ANTLR end "indexer_declarator"

	partial void EnterRule_operator_declaration();
	partial void LeaveRule_operator_declaration();
	// $ANTLR start "operator_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:807:1: operator_declaration : operator_declarator operator_body ;
	[GrammarRule("operator_declaration")]
	private Antlr3AstNode operator_declaration()
	{
		EnterRule_operator_declaration();
		EnterRule("operator_declaration", 227);
		var retval = new Antlr3AstNode("operator_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int operator_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode operator_declarator803 = default(Antlr3AstNode);
		Antlr3AstNode operator_body804 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "operator_declaration");
		DebugLocation(807, 37);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 227)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:807:21: ( operator_declarator operator_body )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:808:2: operator_declarator operator_body
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(808, 2);
			PushFollow(Follow._operator_declarator_in_operator_declaration5915);
			operator_declarator803=operator_declarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, operator_declarator803.Tree, operator_declarator803, retval);
			DebugLocation(808, 24);
			PushFollow(Follow._operator_body_in_operator_declaration5919);
			operator_body804=operator_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, operator_body804.Tree, operator_body804, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("operator_declaration", 227);
			LeaveRule("operator_declaration", 227);
			LeaveRule_operator_declaration();
			if (state.backtracking > 0) { Memoize(input, 227, operator_declaration_StartIndex); }

		}
		DebugLocation(808, 37);
		} finally { DebugExitRule(GrammarFileName, "operator_declaration"); }
		return retval;

	}
	// $ANTLR end "operator_declaration"

	partial void EnterRule_operator_declarator();
	partial void LeaveRule_operator_declarator();
	// $ANTLR start "operator_declarator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:809:1: operator_declarator : 'operator' ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator unary_operator_declarator | overloadable_binary_operator binary_operator_declarator ) ;
	[GrammarRule("operator_declarator")]
	private Antlr3AstNode operator_declarator()
	{
		EnterRule_operator_declarator();
		EnterRule("operator_declarator", 228);
		var retval = new Antlr3AstNode("operator_declarator");
		
		retval.Start = (IToken)input.LT(1);
		int operator_declarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal805 = default(IToken);
		IToken set806 = default(IToken);
		IToken char_literal807 = default(IToken);
		Antlr3AstNode type808 = default(Antlr3AstNode);
		Antlr3AstNode identifier809 = default(Antlr3AstNode);
		Antlr3AstNode binary_operator_declarator810 = default(Antlr3AstNode);
		Antlr3AstNode unary_operator_declarator811 = default(Antlr3AstNode);
		Antlr3AstNode overloadable_unary_operator812 = default(Antlr3AstNode);
		Antlr3AstNode unary_operator_declarator813 = default(Antlr3AstNode);
		Antlr3AstNode overloadable_binary_operator814 = default(Antlr3AstNode);
		Antlr3AstNode binary_operator_declarator815 = default(Antlr3AstNode);

		object string_literal805_tree = default(object);
		object set806_tree = default(object);
		object char_literal807_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "operator_declarator");
		DebugLocation(809, 63);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 228)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:809:20: ( 'operator' ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator unary_operator_declarator | overloadable_binary_operator binary_operator_declarator ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:810:2: 'operator' ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator unary_operator_declarator | overloadable_binary_operator binary_operator_declarator )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(810, 2);
			string_literal805=(IToken)Match(input,153,Follow._153_in_operator_declarator5927); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal805_tree = (object)adaptor.Create(string_literal805, retval);
			adaptor.AddChild(root_0, string_literal805_tree);
			}
			DebugLocation(811, 3);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:811:3: ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator unary_operator_declarator | overloadable_binary_operator binary_operator_declarator )
			int alt232=3;
			try { DebugEnterSubRule(232);
			try { DebugEnterDecision(232, false);
			switch (input.LA(1))
			{
			case MINUS:
			case 71:
				{
				alt232 = 1;
				}
				break;
			case FALSE:
			case TRUE:
			case 61:
			case 72:
			case 75:
			case 202:
				{
				alt232 = 2;
				}
				break;
			case GT:
			case 62:
			case 63:
			case 66:
			case 69:
			case 77:
			case 81:
			case 82:
			case 84:
			case 86:
			case 88:
			case 93:
			case 198:
				{
				alt232 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 232, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(232); }
			switch (alt232)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:811:4: ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator )
				{
				DebugLocation(811, 4);

				set806=(IToken)input.LT(1);
				if (input.LA(1)==MINUS||input.LA(1)==71)
				{
					input.Consume();
					if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set806, retval));
					state.errorRecovery=false;state.failed=false;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					DebugRecognitionException(mse);
					throw mse;
				}

				DebugLocation(811, 18);
				char_literal807=(IToken)Match(input,68,Follow._68_in_operator_declarator5945); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal807_tree = (object)adaptor.Create(char_literal807, retval);
				adaptor.AddChild(root_0, char_literal807_tree);
				}
				DebugLocation(811, 24);
				PushFollow(Follow._type_in_operator_declarator5949);
				type808=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type808.Tree, type808, retval);
				DebugLocation(811, 31);
				PushFollow(Follow._identifier_in_operator_declarator5953);
				identifier809=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier809.Tree, identifier809, retval);
				DebugLocation(811, 42);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:811:42: ( binary_operator_declarator | unary_operator_declarator )
				int alt231=2;
				try { DebugEnterSubRule(231);
				try { DebugEnterDecision(231, false);
				int LA231_1 = input.LA(1);

				if ((LA231_1==74))
				{
					alt231 = 1;
				}
				else if ((LA231_1==RPAREN))
				{
					alt231 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 231, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(231); }
				switch (alt231)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:811:43: binary_operator_declarator
					{
					DebugLocation(811, 43);
					PushFollow(Follow._binary_operator_declarator_in_operator_declarator5956);
					binary_operator_declarator810=binary_operator_declarator();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, binary_operator_declarator810.Tree, binary_operator_declarator810, retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:811:72: unary_operator_declarator
					{
					DebugLocation(811, 72);
					PushFollow(Follow._unary_operator_declarator_in_operator_declarator5960);
					unary_operator_declarator811=unary_operator_declarator();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, unary_operator_declarator811.Tree, unary_operator_declarator811, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(231); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:812:5: overloadable_unary_operator unary_operator_declarator
				{
				DebugLocation(812, 5);
				PushFollow(Follow._overloadable_unary_operator_in_operator_declarator5967);
				overloadable_unary_operator812=overloadable_unary_operator();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, overloadable_unary_operator812.Tree, overloadable_unary_operator812, retval);
				DebugLocation(812, 35);
				PushFollow(Follow._unary_operator_declarator_in_operator_declarator5971);
				unary_operator_declarator813=unary_operator_declarator();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unary_operator_declarator813.Tree, unary_operator_declarator813, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:813:5: overloadable_binary_operator binary_operator_declarator
				{
				DebugLocation(813, 5);
				PushFollow(Follow._overloadable_binary_operator_in_operator_declarator5977);
				overloadable_binary_operator814=overloadable_binary_operator();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, overloadable_binary_operator814.Tree, overloadable_binary_operator814, retval);
				DebugLocation(813, 36);
				PushFollow(Follow._binary_operator_declarator_in_operator_declarator5981);
				binary_operator_declarator815=binary_operator_declarator();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, binary_operator_declarator815.Tree, binary_operator_declarator815, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(232); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("operator_declarator", 228);
			LeaveRule("operator_declarator", 228);
			LeaveRule_operator_declarator();
			if (state.backtracking > 0) { Memoize(input, 228, operator_declarator_StartIndex); }

		}
		DebugLocation(813, 63);
		} finally { DebugExitRule(GrammarFileName, "operator_declarator"); }
		return retval;

	}
	// $ANTLR end "operator_declarator"

	partial void EnterRule_unary_operator_declarator();
	partial void LeaveRule_unary_operator_declarator();
	// $ANTLR start "unary_operator_declarator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:814:1: unary_operator_declarator : ')' ;
	[GrammarRule("unary_operator_declarator")]
	private Antlr3AstNode unary_operator_declarator()
	{
		EnterRule_unary_operator_declarator();
		EnterRule("unary_operator_declarator", 229);
		var retval = new Antlr3AstNode("unary_operator_declarator");
		
		retval.Start = (IToken)input.LT(1);
		int unary_operator_declarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal816 = default(IToken);

		object char_literal816_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "unary_operator_declarator");
		DebugLocation(814, 8);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 229)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:814:26: ( ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:815:5: ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(815, 5);
			char_literal816=(IToken)Match(input,RPAREN,Follow._RPAREN_in_unary_operator_declarator5993); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal816_tree = (object)adaptor.Create(char_literal816, retval);
			adaptor.AddChild(root_0, char_literal816_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unary_operator_declarator", 229);
			LeaveRule("unary_operator_declarator", 229);
			LeaveRule_unary_operator_declarator();
			if (state.backtracking > 0) { Memoize(input, 229, unary_operator_declarator_StartIndex); }

		}
		DebugLocation(815, 8);
		} finally { DebugExitRule(GrammarFileName, "unary_operator_declarator"); }
		return retval;

	}
	// $ANTLR end "unary_operator_declarator"

	partial void EnterRule_overloadable_unary_operator();
	partial void LeaveRule_overloadable_unary_operator();
	// $ANTLR start "overloadable_unary_operator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:816:1: overloadable_unary_operator : ( '!' | '~' | '++' | '--' | 'true' | 'false' );
	[GrammarRule("overloadable_unary_operator")]
	private Antlr3AstNode overloadable_unary_operator()
	{
		EnterRule_overloadable_unary_operator();
		EnterRule("overloadable_unary_operator", 230);
		var retval = new Antlr3AstNode("overloadable_unary_operator");
		
		retval.Start = (IToken)input.LT(1);
		int overloadable_unary_operator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set817 = default(IToken);

		object set817_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "overloadable_unary_operator");
		DebugLocation(816, 67);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 230)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:816:28: ( '!' | '~' | '++' | '--' | 'true' | 'false' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(816, 28);

			set817=(IToken)input.LT(1);
			if (input.LA(1)==FALSE||input.LA(1)==TRUE||input.LA(1)==61||input.LA(1)==72||input.LA(1)==75||input.LA(1)==202)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set817, retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("overloadable_unary_operator", 230);
			LeaveRule("overloadable_unary_operator", 230);
			LeaveRule_overloadable_unary_operator();
			if (state.backtracking > 0) { Memoize(input, 230, overloadable_unary_operator_StartIndex); }

		}
		DebugLocation(817, 67);
		} finally { DebugExitRule(GrammarFileName, "overloadable_unary_operator"); }
		return retval;

	}
	// $ANTLR end "overloadable_unary_operator"

	partial void EnterRule_binary_operator_declarator();
	partial void LeaveRule_binary_operator_declarator();
	// $ANTLR start "binary_operator_declarator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:818:1: binary_operator_declarator : ',' type identifier ')' ;
	[GrammarRule("binary_operator_declarator")]
	private Antlr3AstNode binary_operator_declarator()
	{
		EnterRule_binary_operator_declarator();
		EnterRule("binary_operator_declarator", 231);
		var retval = new Antlr3AstNode("binary_operator_declarator");
		
		retval.Start = (IToken)input.LT(1);
		int binary_operator_declarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal818 = default(IToken);
		IToken char_literal821 = default(IToken);
		Antlr3AstNode type819 = default(Antlr3AstNode);
		Antlr3AstNode identifier820 = default(Antlr3AstNode);

		object char_literal818_tree = default(object);
		object char_literal821_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "binary_operator_declarator");
		DebugLocation(818, 31);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 231)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:818:27: ( ',' type identifier ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:819:2: ',' type identifier ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(819, 2);
			char_literal818=(IToken)Match(input,74,Follow._74_in_binary_operator_declarator6036); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal818_tree = (object)adaptor.Create(char_literal818, retval);
			adaptor.AddChild(root_0, char_literal818_tree);
			}
			DebugLocation(819, 8);
			PushFollow(Follow._type_in_binary_operator_declarator6040);
			type819=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type819.Tree, type819, retval);
			DebugLocation(819, 15);
			PushFollow(Follow._identifier_in_binary_operator_declarator6044);
			identifier820=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier820.Tree, identifier820, retval);
			DebugLocation(819, 28);
			char_literal821=(IToken)Match(input,RPAREN,Follow._RPAREN_in_binary_operator_declarator6048); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal821_tree = (object)adaptor.Create(char_literal821, retval);
			adaptor.AddChild(root_0, char_literal821_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("binary_operator_declarator", 231);
			LeaveRule("binary_operator_declarator", 231);
			LeaveRule_binary_operator_declarator();
			if (state.backtracking > 0) { Memoize(input, 231, binary_operator_declarator_StartIndex); }

		}
		DebugLocation(819, 31);
		} finally { DebugExitRule(GrammarFileName, "binary_operator_declarator"); }
		return retval;

	}
	// $ANTLR end "binary_operator_declarator"

	partial void EnterRule_overloadable_binary_operator();
	partial void LeaveRule_overloadable_binary_operator();
	// $ANTLR start "overloadable_binary_operator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:821:1: overloadable_binary_operator : ( '*' | '/' | '%' | '&' | '|' | '^' | '<<' | '>' '>' | '==' | '!=' | '>' | '<' | '>=' | '<=' );
	[GrammarRule("overloadable_binary_operator")]
	private Antlr3AstNode overloadable_binary_operator()
	{
		EnterRule_overloadable_binary_operator();
		EnterRule("overloadable_binary_operator", 232);
		var retval = new Antlr3AstNode("overloadable_binary_operator");
		
		retval.Start = (IToken)input.LT(1);
		int overloadable_binary_operator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal822 = default(IToken);
		IToken char_literal823 = default(IToken);
		IToken char_literal824 = default(IToken);
		IToken char_literal825 = default(IToken);
		IToken char_literal826 = default(IToken);
		IToken char_literal827 = default(IToken);
		IToken string_literal828 = default(IToken);
		IToken char_literal829 = default(IToken);
		IToken char_literal830 = default(IToken);
		IToken string_literal831 = default(IToken);
		IToken string_literal832 = default(IToken);
		IToken char_literal833 = default(IToken);
		IToken char_literal834 = default(IToken);
		IToken string_literal835 = default(IToken);
		IToken string_literal836 = default(IToken);

		object char_literal822_tree = default(object);
		object char_literal823_tree = default(object);
		object char_literal824_tree = default(object);
		object char_literal825_tree = default(object);
		object char_literal826_tree = default(object);
		object char_literal827_tree = default(object);
		object string_literal828_tree = default(object);
		object char_literal829_tree = default(object);
		object char_literal830_tree = default(object);
		object string_literal831_tree = default(object);
		object string_literal832_tree = default(object);
		object char_literal833_tree = default(object);
		object char_literal834_tree = default(object);
		object string_literal835_tree = default(object);
		object string_literal836_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "overloadable_binary_operator");
		DebugLocation(821, 109);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 232)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:821:29: ( '*' | '/' | '%' | '&' | '|' | '^' | '<<' | '>' '>' | '==' | '!=' | '>' | '<' | '>=' | '<=' )
			int alt233=14;
			try { DebugEnterDecision(233, false);
			switch (input.LA(1))
			{
			case 69:
				{
				alt233 = 1;
				}
				break;
			case 77:
				{
				alt233 = 2;
				}
				break;
			case 63:
				{
				alt233 = 3;
				}
				break;
			case 66:
				{
				alt233 = 4;
				}
				break;
			case 198:
				{
				alt233 = 5;
				}
				break;
			case 93:
				{
				alt233 = 6;
				}
				break;
			case 82:
				{
				alt233 = 7;
				}
				break;
			case GT:
				{
				int LA233_2 = input.LA(2);

				if ((LA233_2==GT))
				{
					alt233 = 8;
				}
				else if ((LA233_2==74))
				{
					alt233 = 11;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 233, 8, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 86:
				{
				alt233 = 9;
				}
				break;
			case 62:
				{
				alt233 = 10;
				}
				break;
			case 81:
				{
				alt233 = 12;
				}
				break;
			case 88:
				{
				alt233 = 13;
				}
				break;
			case 84:
				{
				alt233 = 14;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 233, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(233); }
			switch (alt233)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:822:19: '*'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(822, 19);
				char_literal822=(IToken)Match(input,69,Follow._69_in_overloadable_binary_operator6059); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal822_tree = (object)adaptor.Create(char_literal822, retval);
				adaptor.AddChild(root_0, char_literal822_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:822:25: '/'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(822, 25);
				char_literal823=(IToken)Match(input,77,Follow._77_in_overloadable_binary_operator6063); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal823_tree = (object)adaptor.Create(char_literal823, retval);
				adaptor.AddChild(root_0, char_literal823_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:822:31: '%'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(822, 31);
				char_literal824=(IToken)Match(input,63,Follow._63_in_overloadable_binary_operator6067); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal824_tree = (object)adaptor.Create(char_literal824, retval);
				adaptor.AddChild(root_0, char_literal824_tree);
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:822:37: '&'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(822, 37);
				char_literal825=(IToken)Match(input,66,Follow._66_in_overloadable_binary_operator6071); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal825_tree = (object)adaptor.Create(char_literal825, retval);
				adaptor.AddChild(root_0, char_literal825_tree);
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:822:43: '|'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(822, 43);
				char_literal826=(IToken)Match(input,198,Follow._198_in_overloadable_binary_operator6075); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal826_tree = (object)adaptor.Create(char_literal826, retval);
				adaptor.AddChild(root_0, char_literal826_tree);
				}

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:822:49: '^'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(822, 49);
				char_literal827=(IToken)Match(input,93,Follow._93_in_overloadable_binary_operator6079); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal827_tree = (object)adaptor.Create(char_literal827, retval);
				adaptor.AddChild(root_0, char_literal827_tree);
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:822:55: '<<'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(822, 55);
				string_literal828=(IToken)Match(input,82,Follow._82_in_overloadable_binary_operator6083); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal828_tree = (object)adaptor.Create(string_literal828, retval);
				adaptor.AddChild(root_0, string_literal828_tree);
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:822:62: '>' '>'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(822, 62);
				char_literal829=(IToken)Match(input,GT,Follow._GT_in_overloadable_binary_operator6087); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal829_tree = (object)adaptor.Create(char_literal829, retval);
				adaptor.AddChild(root_0, char_literal829_tree);
				}
				DebugLocation(822, 66);
				char_literal830=(IToken)Match(input,GT,Follow._GT_in_overloadable_binary_operator6089); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal830_tree = (object)adaptor.Create(char_literal830, retval);
				adaptor.AddChild(root_0, char_literal830_tree);
				}

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:822:72: '=='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(822, 72);
				string_literal831=(IToken)Match(input,86,Follow._86_in_overloadable_binary_operator6093); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal831_tree = (object)adaptor.Create(string_literal831, retval);
				adaptor.AddChild(root_0, string_literal831_tree);
				}

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:822:79: '!='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(822, 79);
				string_literal832=(IToken)Match(input,62,Follow._62_in_overloadable_binary_operator6097); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal832_tree = (object)adaptor.Create(string_literal832, retval);
				adaptor.AddChild(root_0, string_literal832_tree);
				}

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:822:86: '>'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(822, 86);
				char_literal833=(IToken)Match(input,GT,Follow._GT_in_overloadable_binary_operator6101); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal833_tree = (object)adaptor.Create(char_literal833, retval);
				adaptor.AddChild(root_0, char_literal833_tree);
				}

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:822:92: '<'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(822, 92);
				char_literal834=(IToken)Match(input,81,Follow._81_in_overloadable_binary_operator6105); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal834_tree = (object)adaptor.Create(char_literal834, retval);
				adaptor.AddChild(root_0, char_literal834_tree);
				}

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:822:98: '>='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(822, 98);
				string_literal835=(IToken)Match(input,88,Follow._88_in_overloadable_binary_operator6109); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal835_tree = (object)adaptor.Create(string_literal835, retval);
				adaptor.AddChild(root_0, string_literal835_tree);
				}

				}
				break;
			case 14:
				DebugEnterAlt(14);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:822:105: '<='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(822, 105);
				string_literal836=(IToken)Match(input,84,Follow._84_in_overloadable_binary_operator6113); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal836_tree = (object)adaptor.Create(string_literal836, retval);
				adaptor.AddChild(root_0, string_literal836_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("overloadable_binary_operator", 232);
			LeaveRule("overloadable_binary_operator", 232);
			LeaveRule_overloadable_binary_operator();
			if (state.backtracking > 0) { Memoize(input, 232, overloadable_binary_operator_StartIndex); }

		}
		DebugLocation(822, 109);
		} finally { DebugExitRule(GrammarFileName, "overloadable_binary_operator"); }
		return retval;

	}
	// $ANTLR end "overloadable_binary_operator"

	partial void EnterRule_conversion_operator_declaration();
	partial void LeaveRule_conversion_operator_declaration();
	// $ANTLR start "conversion_operator_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:824:1: conversion_operator_declaration : conversion_operator_declarator operator_body ;
	[GrammarRule("conversion_operator_declaration")]
	private Antlr3AstNode conversion_operator_declaration()
	{
		EnterRule_conversion_operator_declaration();
		EnterRule("conversion_operator_declaration", 233);
		var retval = new Antlr3AstNode("conversion_operator_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int conversion_operator_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode conversion_operator_declarator837 = default(Antlr3AstNode);
		Antlr3AstNode operator_body838 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "conversion_operator_declaration");
		DebugLocation(824, 48);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 233)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:824:32: ( conversion_operator_declarator operator_body )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:825:2: conversion_operator_declarator operator_body
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(825, 2);
			PushFollow(Follow._conversion_operator_declarator_in_conversion_operator_declaration6123);
			conversion_operator_declarator837=conversion_operator_declarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, conversion_operator_declarator837.Tree, conversion_operator_declarator837, retval);
			DebugLocation(825, 35);
			PushFollow(Follow._operator_body_in_conversion_operator_declaration6127);
			operator_body838=operator_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, operator_body838.Tree, operator_body838, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("conversion_operator_declaration", 233);
			LeaveRule("conversion_operator_declaration", 233);
			LeaveRule_conversion_operator_declaration();
			if (state.backtracking > 0) { Memoize(input, 233, conversion_operator_declaration_StartIndex); }

		}
		DebugLocation(825, 48);
		} finally { DebugExitRule(GrammarFileName, "conversion_operator_declaration"); }
		return retval;

	}
	// $ANTLR end "conversion_operator_declaration"

	partial void EnterRule_conversion_operator_declarator();
	partial void LeaveRule_conversion_operator_declarator();
	// $ANTLR start "conversion_operator_declarator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:826:1: conversion_operator_declarator : ( 'implicit' | 'explicit' ) 'operator' type '(' type identifier ')' ;
	[GrammarRule("conversion_operator_declarator")]
	private Antlr3AstNode conversion_operator_declarator()
	{
		EnterRule_conversion_operator_declarator();
		EnterRule("conversion_operator_declarator", 234);
		var retval = new Antlr3AstNode("conversion_operator_declarator");
		
		retval.Start = (IToken)input.LT(1);
		int conversion_operator_declarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set839 = default(IToken);
		IToken string_literal840 = default(IToken);
		IToken char_literal842 = default(IToken);
		IToken char_literal845 = default(IToken);
		Antlr3AstNode type841 = default(Antlr3AstNode);
		Antlr3AstNode type843 = default(Antlr3AstNode);
		Antlr3AstNode identifier844 = default(Antlr3AstNode);

		object set839_tree = default(object);
		object string_literal840_tree = default(object);
		object char_literal842_tree = default(object);
		object char_literal845_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "conversion_operator_declarator");
		DebugLocation(826, 78);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 234)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:826:31: ( ( 'implicit' | 'explicit' ) 'operator' type '(' type identifier ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:827:2: ( 'implicit' | 'explicit' ) 'operator' type '(' type identifier ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(827, 2);

			set839=(IToken)input.LT(1);
			if (input.LA(1)==124||input.LA(1)==136)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set839, retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}

			DebugLocation(827, 29);
			string_literal840=(IToken)Match(input,153,Follow._153_in_conversion_operator_declarator6144); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal840_tree = (object)adaptor.Create(string_literal840, retval);
			adaptor.AddChild(root_0, string_literal840_tree);
			}
			DebugLocation(827, 42);
			PushFollow(Follow._type_in_conversion_operator_declarator6148);
			type841=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type841.Tree, type841, retval);
			DebugLocation(827, 49);
			char_literal842=(IToken)Match(input,68,Follow._68_in_conversion_operator_declarator6152); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal842_tree = (object)adaptor.Create(char_literal842, retval);
			adaptor.AddChild(root_0, char_literal842_tree);
			}
			DebugLocation(827, 55);
			PushFollow(Follow._type_in_conversion_operator_declarator6156);
			type843=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type843.Tree, type843, retval);
			DebugLocation(827, 62);
			PushFollow(Follow._identifier_in_conversion_operator_declarator6160);
			identifier844=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier844.Tree, identifier844, retval);
			DebugLocation(827, 75);
			char_literal845=(IToken)Match(input,RPAREN,Follow._RPAREN_in_conversion_operator_declarator6164); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal845_tree = (object)adaptor.Create(char_literal845, retval);
			adaptor.AddChild(root_0, char_literal845_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("conversion_operator_declarator", 234);
			LeaveRule("conversion_operator_declarator", 234);
			LeaveRule_conversion_operator_declarator();
			if (state.backtracking > 0) { Memoize(input, 234, conversion_operator_declarator_StartIndex); }

		}
		DebugLocation(827, 78);
		} finally { DebugExitRule(GrammarFileName, "conversion_operator_declarator"); }
		return retval;

	}
	// $ANTLR end "conversion_operator_declarator"

	partial void EnterRule_operator_body();
	partial void LeaveRule_operator_body();
	// $ANTLR start "operator_body"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:828:1: operator_body : block ;
	[GrammarRule("operator_body")]
	private Antlr3AstNode operator_body()
	{
		EnterRule_operator_body();
		EnterRule("operator_body", 235);
		var retval = new Antlr3AstNode("operator_body");
		
		retval.Start = (IToken)input.LT(1);
		int operator_body_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode block846 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "operator_body");
		DebugLocation(828, 7);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 235)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:828:14: ( block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:829:2: block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(829, 2);
			PushFollow(Follow._block_in_operator_body6172);
			block846=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block846.Tree, block846, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("operator_body", 235);
			LeaveRule("operator_body", 235);
			LeaveRule_operator_body();
			if (state.backtracking > 0) { Memoize(input, 235, operator_body_StartIndex); }

		}
		DebugLocation(829, 7);
		} finally { DebugExitRule(GrammarFileName, "operator_body"); }
		return retval;

	}
	// $ANTLR end "operator_body"

	partial void EnterRule_constructor_declaration();
	partial void LeaveRule_constructor_declaration();
	// $ANTLR start "constructor_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:832:1: constructor_declaration : constructor_declarator constructor_body ;
	[GrammarRule("constructor_declaration")]
	private Antlr3AstNode constructor_declaration()
	{
		EnterRule_constructor_declaration();
		EnterRule("constructor_declaration", 236);
		var retval = new Antlr3AstNode("constructor_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int constructor_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode constructor_declarator847 = default(Antlr3AstNode);
		Antlr3AstNode constructor_body848 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "constructor_declaration");
		DebugLocation(832, 43);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 236)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:832:24: ( constructor_declarator constructor_body )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:833:2: constructor_declarator constructor_body
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(833, 2);
			PushFollow(Follow._constructor_declarator_in_constructor_declaration6182);
			constructor_declarator847=constructor_declarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, constructor_declarator847.Tree, constructor_declarator847, retval);
			DebugLocation(833, 27);
			PushFollow(Follow._constructor_body_in_constructor_declaration6186);
			constructor_body848=constructor_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, constructor_body848.Tree, constructor_body848, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constructor_declaration", 236);
			LeaveRule("constructor_declaration", 236);
			LeaveRule_constructor_declaration();
			if (state.backtracking > 0) { Memoize(input, 236, constructor_declaration_StartIndex); }

		}
		DebugLocation(833, 43);
		} finally { DebugExitRule(GrammarFileName, "constructor_declaration"); }
		return retval;

	}
	// $ANTLR end "constructor_declaration"

	partial void EnterRule_constructor_declarator();
	partial void LeaveRule_constructor_declarator();
	// $ANTLR start "constructor_declarator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:834:1: constructor_declarator : identifier '(' ( formal_parameter_list )? ')' ( constructor_initializer )? ;
	[GrammarRule("constructor_declarator")]
	private Antlr3AstNode constructor_declarator()
	{
		EnterRule_constructor_declarator();
		EnterRule("constructor_declarator", 237);
		var retval = new Antlr3AstNode("constructor_declarator");
		
		retval.Start = (IToken)input.LT(1);
		int constructor_declarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal850 = default(IToken);
		IToken char_literal852 = default(IToken);
		Antlr3AstNode identifier849 = default(Antlr3AstNode);
		Antlr3AstNode formal_parameter_list851 = default(Antlr3AstNode);
		Antlr3AstNode constructor_initializer853 = default(Antlr3AstNode);

		object char_literal850_tree = default(object);
		object char_literal852_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "constructor_declarator");
		DebugLocation(834, 76);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 237)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:834:23: ( identifier '(' ( formal_parameter_list )? ')' ( constructor_initializer )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:835:2: identifier '(' ( formal_parameter_list )? ')' ( constructor_initializer )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(835, 2);
			PushFollow(Follow._identifier_in_constructor_declarator6194);
			identifier849=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier849.Tree, identifier849, retval);
			DebugLocation(835, 15);
			char_literal850=(IToken)Match(input,68,Follow._68_in_constructor_declarator6198); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal850_tree = (object)adaptor.Create(char_literal850, retval);
			adaptor.AddChild(root_0, char_literal850_tree);
			}
			DebugLocation(835, 21);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:835:21: ( formal_parameter_list )?
			int alt234=2;
			try { DebugEnterSubRule(234);
			try { DebugEnterDecision(234, false);
			int LA234_1 = input.LA(1);

			if ((LA234_1==IDENTIFIER||LA234_1==91||LA234_1==95||(LA234_1>=97 && LA234_1<=98)||(LA234_1>=100 && LA234_1<=101)||LA234_1==103||(LA234_1>=105 && LA234_1<=106)||LA234_1==109||LA234_1==114||LA234_1==117||(LA234_1>=119 && LA234_1<=120)||LA234_1==122||LA234_1==126||LA234_1==129||LA234_1==132||LA234_1==135||LA234_1==138||LA234_1==141||(LA234_1>=143 && LA234_1<=144)||(LA234_1>=146 && LA234_1<=148)||(LA234_1>=151 && LA234_1<=152)||(LA234_1>=154 && LA234_1<=155)||(LA234_1>=157 && LA234_1<=158)||LA234_1==160||LA234_1==162||(LA234_1>=166 && LA234_1<=167)||LA234_1==169||(LA234_1>=171 && LA234_1<=173)||LA234_1==177||LA234_1==180||LA234_1==183||(LA234_1>=185 && LA234_1<=186)||(LA234_1>=189 && LA234_1<=190)||LA234_1==192||LA234_1==194||LA234_1==196))
			{
				alt234 = 1;
			}
			} finally { DebugExitDecision(234); }
			switch (alt234)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:835:21: formal_parameter_list
				{
				DebugLocation(835, 21);
				PushFollow(Follow._formal_parameter_list_in_constructor_declarator6202);
				formal_parameter_list851=formal_parameter_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, formal_parameter_list851.Tree, formal_parameter_list851, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(234); }

			DebugLocation(835, 46);
			char_literal852=(IToken)Match(input,RPAREN,Follow._RPAREN_in_constructor_declarator6207); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal852_tree = (object)adaptor.Create(char_literal852, retval);
			adaptor.AddChild(root_0, char_literal852_tree);
			}
			DebugLocation(835, 52);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:835:52: ( constructor_initializer )?
			int alt235=2;
			try { DebugEnterSubRule(235);
			try { DebugEnterDecision(235, false);
			int LA235_1 = input.LA(1);

			if ((LA235_1==79))
			{
				alt235 = 1;
			}
			} finally { DebugExitDecision(235); }
			switch (alt235)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:835:52: constructor_initializer
				{
				DebugLocation(835, 52);
				PushFollow(Follow._constructor_initializer_in_constructor_declarator6211);
				constructor_initializer853=constructor_initializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constructor_initializer853.Tree, constructor_initializer853, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(235); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constructor_declarator", 237);
			LeaveRule("constructor_declarator", 237);
			LeaveRule_constructor_declarator();
			if (state.backtracking > 0) { Memoize(input, 237, constructor_declarator_StartIndex); }

		}
		DebugLocation(835, 76);
		} finally { DebugExitRule(GrammarFileName, "constructor_declarator"); }
		return retval;

	}
	// $ANTLR end "constructor_declarator"

	partial void EnterRule_constructor_initializer();
	partial void LeaveRule_constructor_initializer();
	// $ANTLR start "constructor_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:836:1: constructor_initializer : ':' ( 'base' | 'this' ) '(' ( argument_list )? ')' ;
	[GrammarRule("constructor_initializer")]
	private Antlr3AstNode constructor_initializer()
	{
		EnterRule_constructor_initializer();
		EnterRule("constructor_initializer", 238);
		var retval = new Antlr3AstNode("constructor_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int constructor_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal854 = default(IToken);
		IToken set855 = default(IToken);
		IToken char_literal856 = default(IToken);
		IToken char_literal858 = default(IToken);
		Antlr3AstNode argument_list857 = default(Antlr3AstNode);

		object char_literal854_tree = default(object);
		object set855_tree = default(object);
		object char_literal856_tree = default(object);
		object char_literal858_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "constructor_initializer");
		DebugLocation(836, 54);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 238)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:836:24: ( ':' ( 'base' | 'this' ) '(' ( argument_list )? ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:837:2: ':' ( 'base' | 'this' ) '(' ( argument_list )? ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(837, 2);
			char_literal854=(IToken)Match(input,79,Follow._79_in_constructor_initializer6220); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal854_tree = (object)adaptor.Create(char_literal854, retval);
			adaptor.AddChild(root_0, char_literal854_tree);
			}
			DebugLocation(837, 8);

			set855=(IToken)input.LT(1);
			if (input.LA(1)==102||input.LA(1)==180)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set855, retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}

			DebugLocation(837, 28);
			char_literal856=(IToken)Match(input,68,Follow._68_in_constructor_initializer6234); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal856_tree = (object)adaptor.Create(char_literal856, retval);
			adaptor.AddChild(root_0, char_literal856_tree);
			}
			DebugLocation(837, 34);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:837:34: ( argument_list )?
			int alt236=2;
			try { DebugEnterSubRule(236);
			try { DebugEnterDecision(236, false);
			int LA236_1 = input.LA(1);

			if ((LA236_1==Character_literal||LA236_1==FALSE||(LA236_1>=Hex_number && LA236_1<=IDENTIFIER)||(LA236_1>=MINUS && LA236_1<=NUMBER)||LA236_1==Real_literal||LA236_1==STRINGLITERAL||LA236_1==TRUE||LA236_1==Verbatim_string_literal||LA236_1==61||LA236_1==66||(LA236_1>=68 && LA236_1<=69)||(LA236_1>=71 && LA236_1<=72)||LA236_1==75||LA236_1==95||(LA236_1>=97 && LA236_1<=98)||(LA236_1>=100 && LA236_1<=103)||(LA236_1>=105 && LA236_1<=106)||(LA236_1>=109 && LA236_1<=110)||(LA236_1>=114 && LA236_1<=117)||(LA236_1>=119 && LA236_1<=120)||LA236_1==122||LA236_1==126||LA236_1==129||LA236_1==132||LA236_1==135||LA236_1==138||LA236_1==141||(LA236_1>=143 && LA236_1<=144)||(LA236_1>=146 && LA236_1<=148)||(LA236_1>=150 && LA236_1<=152)||(LA236_1>=154 && LA236_1<=155)||LA236_1==157||LA236_1==160||LA236_1==162||(LA236_1>=166 && LA236_1<=167)||LA236_1==169||(LA236_1>=171 && LA236_1<=174)||LA236_1==177||LA236_1==180||(LA236_1>=183 && LA236_1<=187)||(LA236_1>=189 && LA236_1<=190)||LA236_1==194||LA236_1==196||LA236_1==202))
			{
				alt236 = 1;
			}
			} finally { DebugExitDecision(236); }
			switch (alt236)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:837:34: argument_list
				{
				DebugLocation(837, 34);
				PushFollow(Follow._argument_list_in_constructor_initializer6238);
				argument_list857=argument_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, argument_list857.Tree, argument_list857, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(236); }

			DebugLocation(837, 51);
			char_literal858=(IToken)Match(input,RPAREN,Follow._RPAREN_in_constructor_initializer6243); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal858_tree = (object)adaptor.Create(char_literal858, retval);
			adaptor.AddChild(root_0, char_literal858_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constructor_initializer", 238);
			LeaveRule("constructor_initializer", 238);
			LeaveRule_constructor_initializer();
			if (state.backtracking > 0) { Memoize(input, 238, constructor_initializer_StartIndex); }

		}
		DebugLocation(837, 54);
		} finally { DebugExitRule(GrammarFileName, "constructor_initializer"); }
		return retval;

	}
	// $ANTLR end "constructor_initializer"

	partial void EnterRule_constructor_body();
	partial void LeaveRule_constructor_body();
	// $ANTLR start "constructor_body"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:838:1: constructor_body : block ;
	[GrammarRule("constructor_body")]
	private Antlr3AstNode constructor_body()
	{
		EnterRule_constructor_body();
		EnterRule("constructor_body", 239);
		var retval = new Antlr3AstNode("constructor_body");
		
		retval.Start = (IToken)input.LT(1);
		int constructor_body_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode block859 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "constructor_body");
		DebugLocation(838, 7);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 239)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:838:17: ( block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:839:2: block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(839, 2);
			PushFollow(Follow._block_in_constructor_body6251);
			block859=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block859.Tree, block859, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constructor_body", 239);
			LeaveRule("constructor_body", 239);
			LeaveRule_constructor_body();
			if (state.backtracking > 0) { Memoize(input, 239, constructor_body_StartIndex); }

		}
		DebugLocation(839, 7);
		} finally { DebugExitRule(GrammarFileName, "constructor_body"); }
		return retval;

	}
	// $ANTLR end "constructor_body"

	partial void EnterRule_destructor_declaration();
	partial void LeaveRule_destructor_declaration();
	// $ANTLR start "destructor_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:848:1: destructor_declaration : '~' identifier '(' ')' destructor_body ;
	[GrammarRule("destructor_declaration")]
	private Antlr3AstNode destructor_declaration()
	{
		EnterRule_destructor_declaration();
		EnterRule("destructor_declaration", 240);
		var retval = new Antlr3AstNode("destructor_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int destructor_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal860 = default(IToken);
		IToken char_literal862 = default(IToken);
		IToken char_literal863 = default(IToken);
		Antlr3AstNode identifier861 = default(Antlr3AstNode);
		Antlr3AstNode destructor_body864 = default(Antlr3AstNode);

		object char_literal860_tree = default(object);
		object char_literal862_tree = default(object);
		object char_literal863_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "destructor_declaration");
		DebugLocation(848, 48);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 240)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:848:23: ( '~' identifier '(' ')' destructor_body )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:849:2: '~' identifier '(' ')' destructor_body
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(849, 2);
			char_literal860=(IToken)Match(input,202,Follow._202_in_destructor_declaration6267); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal860_tree = (object)adaptor.Create(char_literal860, retval);
			adaptor.AddChild(root_0, char_literal860_tree);
			}
			DebugLocation(849, 7);
			PushFollow(Follow._identifier_in_destructor_declaration6270);
			identifier861=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier861.Tree, identifier861, retval);
			DebugLocation(849, 20);
			char_literal862=(IToken)Match(input,68,Follow._68_in_destructor_declaration6274); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal862_tree = (object)adaptor.Create(char_literal862, retval);
			adaptor.AddChild(root_0, char_literal862_tree);
			}
			DebugLocation(849, 26);
			char_literal863=(IToken)Match(input,RPAREN,Follow._RPAREN_in_destructor_declaration6278); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal863_tree = (object)adaptor.Create(char_literal863, retval);
			adaptor.AddChild(root_0, char_literal863_tree);
			}
			DebugLocation(849, 33);
			PushFollow(Follow._destructor_body_in_destructor_declaration6283);
			destructor_body864=destructor_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, destructor_body864.Tree, destructor_body864, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("destructor_declaration", 240);
			LeaveRule("destructor_declaration", 240);
			LeaveRule_destructor_declaration();
			if (state.backtracking > 0) { Memoize(input, 240, destructor_declaration_StartIndex); }

		}
		DebugLocation(849, 48);
		} finally { DebugExitRule(GrammarFileName, "destructor_declaration"); }
		return retval;

	}
	// $ANTLR end "destructor_declaration"

	partial void EnterRule_destructor_body();
	partial void LeaveRule_destructor_body();
	// $ANTLR start "destructor_body"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:850:1: destructor_body : block ;
	[GrammarRule("destructor_body")]
	private Antlr3AstNode destructor_body()
	{
		EnterRule_destructor_body();
		EnterRule("destructor_body", 241);
		var retval = new Antlr3AstNode("destructor_body");
		
		retval.Start = (IToken)input.LT(1);
		int destructor_body_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode block865 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "destructor_body");
		DebugLocation(850, 7);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 241)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:850:16: ( block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:851:2: block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(851, 2);
			PushFollow(Follow._block_in_destructor_body6291);
			block865=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block865.Tree, block865, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("destructor_body", 241);
			LeaveRule("destructor_body", 241);
			LeaveRule_destructor_body();
			if (state.backtracking > 0) { Memoize(input, 241, destructor_body_StartIndex); }

		}
		DebugLocation(851, 7);
		} finally { DebugExitRule(GrammarFileName, "destructor_body"); }
		return retval;

	}
	// $ANTLR end "destructor_body"

	partial void EnterRule_invocation_expression();
	partial void LeaveRule_invocation_expression();
	// $ANTLR start "invocation_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:854:1: invocation_expression : invocation_start ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ;
	[GrammarRule("invocation_expression")]
	private Antlr3AstNode invocation_expression()
	{
		EnterRule_invocation_expression();
		EnterRule("invocation_expression", 242);
		var retval = new Antlr3AstNode("invocation_expression");
		
		retval.Start = (IToken)input.LT(1);
		int invocation_expression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode invocation_start866 = default(Antlr3AstNode);
		Antlr3AstNode arguments867 = default(Antlr3AstNode);
		Antlr3AstNode invocation_part868 = default(Antlr3AstNode);
		Antlr3AstNode invocation_part869 = default(Antlr3AstNode);
		Antlr3AstNode arguments870 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "invocation_expression");
		DebugLocation(854, 38);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 242)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:854:22: ( invocation_start ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:855:2: invocation_start ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(855, 2);
			PushFollow(Follow._invocation_start_in_invocation_expression6301);
			invocation_start866=invocation_start();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, invocation_start866.Tree, invocation_start866, retval);
			DebugLocation(855, 21);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:855:21: ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )*
			try { DebugEnterSubRule(237);
			while (true)
			{
				int alt237=3;
				try { DebugEnterDecision(237, false);
				int LA237_1 = input.LA(1);

				if ((LA237_1==68))
				{
					int LA237_2 = input.LA(2);

					if ((EvaluatePredicate(synpred31_cs_fragment)))
					{
						alt237 = 1;
					}


				}
				else if ((LA237_1==DOT||LA237_1==PTR||LA237_1==91))
				{
					alt237 = 2;
				}


				} finally { DebugExitDecision(237); }
				switch ( alt237 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:855:22: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
					{
					DebugLocation(855, 22);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:855:22: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:855:23: ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part
					{
					DebugLocation(855, 55);
					PushFollow(Follow._arguments_in_invocation_expression6323);
					arguments867=arguments();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, arguments867.Tree, arguments867, retval);
					DebugLocation(855, 67);
					PushFollow(Follow._invocation_part_in_invocation_expression6327);
					invocation_part868=invocation_part();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, invocation_part868.Tree, invocation_part868, retval);

					}


					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:856:9: invocation_part
					{
					DebugLocation(856, 9);
					PushFollow(Follow._invocation_part_in_invocation_expression6338);
					invocation_part869=invocation_part();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, invocation_part869.Tree, invocation_part869, retval);

					}
					break;

				default:
					goto loop237;
				}
			}

			loop237:
				;

			} finally { DebugExitSubRule(237); }

			DebugLocation(856, 29);
			PushFollow(Follow._arguments_in_invocation_expression6344);
			arguments870=arguments();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, arguments870.Tree, arguments870, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("invocation_expression", 242);
			LeaveRule("invocation_expression", 242);
			LeaveRule_invocation_expression();
			if (state.backtracking > 0) { Memoize(input, 242, invocation_expression_StartIndex); }

		}
		DebugLocation(856, 38);
		} finally { DebugExitRule(GrammarFileName, "invocation_expression"); }
		return retval;

	}
	// $ANTLR end "invocation_expression"

	partial void EnterRule_invocation_start();
	partial void LeaveRule_invocation_start();
	// $ANTLR start "invocation_start"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:857:1: invocation_start : ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | 'this' | 'base' | identifier ( '::' identifier )? | typeof_expression );
	[GrammarRule("invocation_start")]
	private Antlr3AstNode invocation_start()
	{
		EnterRule_invocation_start();
		EnterRule("invocation_start", 243);
		var retval = new Antlr3AstNode("invocation_start");
		
		retval.Start = (IToken)input.LT(1);
		int invocation_start_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal874 = default(IToken);
		IToken string_literal875 = default(IToken);
		IToken string_literal877 = default(IToken);
		Antlr3AstNode predefined_type871 = default(Antlr3AstNode);
		Antlr3AstNode identifier872 = default(Antlr3AstNode);
		Antlr3AstNode generic_argument_list873 = default(Antlr3AstNode);
		Antlr3AstNode identifier876 = default(Antlr3AstNode);
		Antlr3AstNode identifier878 = default(Antlr3AstNode);
		Antlr3AstNode typeof_expression879 = default(Antlr3AstNode);

		object string_literal874_tree = default(object);
		object string_literal875_tree = default(object);
		object string_literal877_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "invocation_start");
		DebugLocation(857, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 243)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:857:17: ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | 'this' | 'base' | identifier ( '::' identifier )? | typeof_expression )
			int alt239=6;
			try { DebugEnterDecision(239, false);
			switch (input.LA(1))
			{
			case 103:
			case 106:
			case 109:
			case 114:
			case 119:
			case 129:
			case 138:
			case 146:
			case 151:
			case 169:
			case 173:
			case 177:
			case 185:
			case 186:
			case 189:
				{
				alt239 = 1;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 132:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA239_2 = input.LA(2);

				if ((LA239_2==81) && (EvaluatePredicate(synpred32_cs_fragment)))
				{
					alt239 = 2;
				}
				else if ((LA239_2==DOT||LA239_2==PTR||LA239_2==68||LA239_2==80||LA239_2==91))
				{
					alt239 = 5;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 239, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 180:
				{
				alt239 = 3;
				}
				break;
			case 102:
				{
				alt239 = 4;
				}
				break;
			case 184:
				{
				alt239 = 6;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 239, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(239); }
			switch (alt239)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:858:2: predefined_type
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(858, 2);
				PushFollow(Follow._predefined_type_in_invocation_start6352);
				predefined_type871=predefined_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, predefined_type871.Tree, predefined_type871, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:859:4: ( identifier '<' )=> identifier generic_argument_list
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(859, 27);
				PushFollow(Follow._identifier_in_invocation_start6369);
				identifier872=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier872.Tree, identifier872, retval);
				DebugLocation(859, 40);
				PushFollow(Follow._generic_argument_list_in_invocation_start6373);
				generic_argument_list873=generic_argument_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, generic_argument_list873.Tree, generic_argument_list873, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:860:4: 'this'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(860, 4);
				string_literal874=(IToken)Match(input,180,Follow._180_in_invocation_start6378); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal874_tree = (object)adaptor.Create(string_literal874, retval);
				adaptor.AddChild(root_0, string_literal874_tree);
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:861:4: 'base'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(861, 4);
				string_literal875=(IToken)Match(input,102,Follow._102_in_invocation_start6384); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal875_tree = (object)adaptor.Create(string_literal875, retval);
				adaptor.AddChild(root_0, string_literal875_tree);
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:862:4: identifier ( '::' identifier )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(862, 4);
				PushFollow(Follow._identifier_in_invocation_start6389);
				identifier876=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier876.Tree, identifier876, retval);
				DebugLocation(862, 17);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:862:17: ( '::' identifier )?
				int alt238=2;
				try { DebugEnterSubRule(238);
				try { DebugEnterDecision(238, false);
				int LA238_1 = input.LA(1);

				if ((LA238_1==80))
				{
					alt238 = 1;
				}
				} finally { DebugExitDecision(238); }
				switch (alt238)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:862:18: '::' identifier
					{
					DebugLocation(862, 18);
					string_literal877=(IToken)Match(input,80,Follow._80_in_invocation_start6394); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal877_tree = (object)adaptor.Create(string_literal877, retval);
					adaptor.AddChild(root_0, string_literal877_tree);
					}
					DebugLocation(862, 25);
					PushFollow(Follow._identifier_in_invocation_start6398);
					identifier878=identifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, identifier878.Tree, identifier878, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(238); }


				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:863:4: typeof_expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(863, 4);
				PushFollow(Follow._typeof_expression_in_invocation_start6405);
				typeof_expression879=typeof_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeof_expression879.Tree, typeof_expression879, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("invocation_start", 243);
			LeaveRule("invocation_start", 243);
			LeaveRule_invocation_start();
			if (state.backtracking > 0) { Memoize(input, 243, invocation_start_StartIndex); }

		}
		DebugLocation(864, 1);
		} finally { DebugExitRule(GrammarFileName, "invocation_start"); }
		return retval;

	}
	// $ANTLR end "invocation_start"

	partial void EnterRule_invocation_part();
	partial void LeaveRule_invocation_part();
	// $ANTLR start "invocation_part"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:865:1: invocation_part : ( access_identifier | brackets );
	[GrammarRule("invocation_part")]
	private Antlr3AstNode invocation_part()
	{
		EnterRule_invocation_part();
		EnterRule("invocation_part", 244);
		var retval = new Antlr3AstNode("invocation_part");
		
		retval.Start = (IToken)input.LT(1);
		int invocation_part_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode access_identifier880 = default(Antlr3AstNode);
		Antlr3AstNode brackets881 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "invocation_part");
		DebugLocation(865, 12);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 244)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:865:16: ( access_identifier | brackets )
			int alt240=2;
			try { DebugEnterDecision(240, false);
			int LA240_1 = input.LA(1);

			if ((LA240_1==DOT||LA240_1==PTR))
			{
				alt240 = 1;
			}
			else if ((LA240_1==91))
			{
				alt240 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 240, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(240); }
			switch (alt240)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:866:3: access_identifier
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(866, 3);
				PushFollow(Follow._access_identifier_in_invocation_part6428);
				access_identifier880=access_identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, access_identifier880.Tree, access_identifier880, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:867:4: brackets
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(867, 4);
				PushFollow(Follow._brackets_in_invocation_part6433);
				brackets881=brackets();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, brackets881.Tree, brackets881, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("invocation_part", 244);
			LeaveRule("invocation_part", 244);
			LeaveRule_invocation_part();
			if (state.backtracking > 0) { Memoize(input, 244, invocation_part_StartIndex); }

		}
		DebugLocation(867, 12);
		} finally { DebugExitRule(GrammarFileName, "invocation_part"); }
		return retval;

	}
	// $ANTLR end "invocation_part"

	partial void EnterRule_statement();
	partial void LeaveRule_statement();
	// $ANTLR start "statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:871:1: statement : ( ( declaration_statement )=> declaration_statement | ( identifier ':' )=> labeled_statement | embedded_statement );
	[GrammarRule("statement")]
	private Antlr3AstNode statement()
	{
		EnterRule_statement();
		EnterRule("statement", 245);
		var retval = new Antlr3AstNode("statement");
		
		retval.Start = (IToken)input.LT(1);
		int statement_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode declaration_statement882 = default(Antlr3AstNode);
		Antlr3AstNode labeled_statement883 = default(Antlr3AstNode);
		Antlr3AstNode embedded_statement884 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "statement");
		DebugLocation(871, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 245)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:871:10: ( ( declaration_statement )=> declaration_statement | ( identifier ':' )=> labeled_statement | embedded_statement )
			int alt241=3;
			try { DebugEnterDecision(241, false);
			int LA241_1 = input.LA(1);

			if ((LA241_1==190))
			{
				int LA241_2 = input.LA(2);

				if ((EvaluatePredicate(synpred33_cs_fragment)))
				{
					alt241 = 1;
				}
				else if ((EvaluatePredicate(synpred34_cs_fragment)))
				{
					alt241 = 2;
				}
				else if ((true))
				{
					alt241 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 241, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA241_1==120))
			{
				int LA241_2 = input.LA(2);

				if ((EvaluatePredicate(synpred33_cs_fragment)))
				{
					alt241 = 1;
				}
				else if ((EvaluatePredicate(synpred34_cs_fragment)))
				{
					alt241 = 2;
				}
				else if ((true))
				{
					alt241 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 241, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA241_1==103||LA241_1==106||LA241_1==109||LA241_1==114||LA241_1==119||LA241_1==129||LA241_1==138||LA241_1==146||LA241_1==151||LA241_1==169||LA241_1==173||LA241_1==177||(LA241_1>=185 && LA241_1<=186)||LA241_1==189))
			{
				int LA241_2 = input.LA(2);

				if ((EvaluatePredicate(synpred33_cs_fragment)))
				{
					alt241 = 1;
				}
				else if ((true))
				{
					alt241 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 241, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA241_1==196))
			{
				int LA241_2 = input.LA(2);

				if ((EvaluatePredicate(synpred33_cs_fragment)))
				{
					alt241 = 1;
				}
				else if ((EvaluatePredicate(synpred34_cs_fragment)))
				{
					alt241 = 2;
				}
				else if ((true))
				{
					alt241 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 241, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA241_1==192) && (EvaluatePredicate(synpred33_cs_fragment)))
			{
				alt241 = 1;
			}
			else if ((LA241_1==112) && (EvaluatePredicate(synpred33_cs_fragment)))
			{
				alt241 = 1;
			}
			else if ((LA241_1==Character_literal||LA241_1==FALSE||LA241_1==Hex_number||LA241_1==IF||(LA241_1>=MINUS && LA241_1<=NUMBER)||LA241_1==Real_literal||(LA241_1>=SEMI && LA241_1<=STRINGLITERAL)||LA241_1==TRUE||(LA241_1>=USING && LA241_1<=Verbatim_string_literal)||LA241_1==61||LA241_1==66||(LA241_1>=68 && LA241_1<=69)||(LA241_1>=71 && LA241_1<=72)||LA241_1==75||LA241_1==102||LA241_1==104||LA241_1==110||LA241_1==113||(LA241_1>=115 && LA241_1<=116)||LA241_1==118||LA241_1==128||(LA241_1>=130 && LA241_1<=131)||LA241_1==134||LA241_1==145||LA241_1==150||LA241_1==168||LA241_1==174||(LA241_1>=179 && LA241_1<=182)||LA241_1==184||(LA241_1>=187 && LA241_1<=188)||LA241_1==195||LA241_1==197||LA241_1==202))
			{
				alt241 = 3;
			}
			else if ((LA241_1==132))
			{
				int LA241_2 = input.LA(2);

				if ((EvaluatePredicate(synpred33_cs_fragment)))
				{
					alt241 = 1;
				}
				else if ((EvaluatePredicate(synpred34_cs_fragment)))
				{
					alt241 = 2;
				}
				else if ((true))
				{
					alt241 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 241, 25, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA241_1==IDENTIFIER||LA241_1==95||(LA241_1>=97 && LA241_1<=98)||(LA241_1>=100 && LA241_1<=101)||LA241_1==105||LA241_1==117||LA241_1==122||LA241_1==126||LA241_1==135||LA241_1==141||(LA241_1>=143 && LA241_1<=144)||(LA241_1>=147 && LA241_1<=148)||LA241_1==152||LA241_1==154||LA241_1==157||LA241_1==160||LA241_1==162||LA241_1==167||(LA241_1>=171 && LA241_1<=172)||LA241_1==183||LA241_1==194))
			{
				int LA241_2 = input.LA(2);

				if ((EvaluatePredicate(synpred33_cs_fragment)))
				{
					alt241 = 1;
				}
				else if ((EvaluatePredicate(synpred34_cs_fragment)))
				{
					alt241 = 2;
				}
				else if ((true))
				{
					alt241 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 241, 45, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 241, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(241); }
			switch (alt241)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:872:2: ( declaration_statement )=> declaration_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(872, 29);
				PushFollow(Follow._declaration_statement_in_statement6450);
				declaration_statement882=declaration_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, declaration_statement882.Tree, declaration_statement882, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:873:4: ( identifier ':' )=> labeled_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(873, 26);
				PushFollow(Follow._labeled_statement_in_statement6465);
				labeled_statement883=labeled_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, labeled_statement883.Tree, labeled_statement883, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:874:4: embedded_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(874, 4);
				PushFollow(Follow._embedded_statement_in_statement6470);
				embedded_statement884=embedded_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, embedded_statement884.Tree, embedded_statement884, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("statement", 245);
			LeaveRule("statement", 245);
			LeaveRule_statement();
			if (state.backtracking > 0) { Memoize(input, 245, statement_StartIndex); }

		}
		DebugLocation(875, 1);
		} finally { DebugExitRule(GrammarFileName, "statement"); }
		return retval;

	}
	// $ANTLR end "statement"

	partial void EnterRule_embedded_statement();
	partial void LeaveRule_embedded_statement();
	// $ANTLR start "embedded_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:876:1: embedded_statement : ( block | selection_statement | iteration_statement | jump_statement | try_statement | checked_statement | unchecked_statement | lock_statement | using_statement | yield_statement | unsafe_statement | fixed_statement | expression_statement );
	[GrammarRule("embedded_statement")]
	private Antlr3AstNode embedded_statement()
	{
		EnterRule_embedded_statement();
		EnterRule("embedded_statement", 246);
		var retval = new Antlr3AstNode("embedded_statement");
		
		retval.Start = (IToken)input.LT(1);
		int embedded_statement_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode block885 = default(Antlr3AstNode);
		Antlr3AstNode selection_statement886 = default(Antlr3AstNode);
		Antlr3AstNode iteration_statement887 = default(Antlr3AstNode);
		Antlr3AstNode jump_statement888 = default(Antlr3AstNode);
		Antlr3AstNode try_statement889 = default(Antlr3AstNode);
		Antlr3AstNode checked_statement890 = default(Antlr3AstNode);
		Antlr3AstNode unchecked_statement891 = default(Antlr3AstNode);
		Antlr3AstNode lock_statement892 = default(Antlr3AstNode);
		Antlr3AstNode using_statement893 = default(Antlr3AstNode);
		Antlr3AstNode yield_statement894 = default(Antlr3AstNode);
		Antlr3AstNode unsafe_statement895 = default(Antlr3AstNode);
		Antlr3AstNode fixed_statement896 = default(Antlr3AstNode);
		Antlr3AstNode expression_statement897 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "embedded_statement");
		DebugLocation(876, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 246)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:876:19: ( block | selection_statement | iteration_statement | jump_statement | try_statement | checked_statement | unchecked_statement | lock_statement | using_statement | yield_statement | unsafe_statement | fixed_statement | expression_statement )
			int alt242=13;
			try { DebugEnterDecision(242, false);
			switch (input.LA(1))
			{
			case SEMI:
			case 197:
				{
				alt242 = 1;
				}
				break;
			case IF:
			case 179:
				{
				alt242 = 2;
				}
				break;
			case 118:
			case 130:
			case 131:
			case 195:
				{
				alt242 = 3;
				}
				break;
			case 104:
			case 113:
			case 134:
			case 168:
			case 181:
				{
				alt242 = 4;
				}
				break;
			case 182:
				{
				alt242 = 5;
				}
				break;
			case 110:
				{
				int LA242_2 = input.LA(2);

				if ((LA242_2==68))
				{
					alt242 = 13;
				}
				else if ((LA242_2==SEMI||LA242_2==197))
				{
					alt242 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 242, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 187:
				{
				int LA242_2 = input.LA(2);

				if ((LA242_2==68))
				{
					alt242 = 13;
				}
				else if ((LA242_2==SEMI||LA242_2==197))
				{
					alt242 = 7;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 242, 7, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 145:
				{
				alt242 = 8;
				}
				break;
			case USING:
				{
				alt242 = 9;
				}
				break;
			case 196:
				{
				int LA242_2 = input.LA(2);

				if ((LA242_2==104||LA242_2==168))
				{
					alt242 = 10;
				}
				else if ((LA242_2==DOT||LA242_2==GT||LA242_2==MINUS||LA242_2==PTR||LA242_2==SEMI||(LA242_2>=62 && LA242_2<=78)||(LA242_2>=80 && LA242_2<=91)||(LA242_2>=93 && LA242_2<=94)||LA242_2==99||LA242_2==142||(LA242_2>=198 && LA242_2<=200)))
				{
					alt242 = 13;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 242, 10, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 188:
				{
				alt242 = 11;
				}
				break;
			case 128:
				{
				alt242 = 12;
				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case IDENTIFIER:
			case MINUS:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 61:
			case 66:
			case 68:
			case 69:
			case 71:
			case 72:
			case 75:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 102:
			case 103:
			case 105:
			case 106:
			case 109:
			case 114:
			case 115:
			case 116:
			case 117:
			case 119:
			case 120:
			case 122:
			case 126:
			case 129:
			case 132:
			case 135:
			case 138:
			case 141:
			case 143:
			case 144:
			case 146:
			case 147:
			case 148:
			case 150:
			case 151:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 169:
			case 171:
			case 172:
			case 173:
			case 174:
			case 177:
			case 180:
			case 183:
			case 184:
			case 185:
			case 186:
			case 189:
			case 190:
			case 194:
			case 202:
				{
				alt242 = 13;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 242, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(242); }
			switch (alt242)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:877:2: block
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(877, 2);
				PushFollow(Follow._block_in_embedded_statement6480);
				block885=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block885.Tree, block885, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:878:4: selection_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(878, 4);
				PushFollow(Follow._selection_statement_in_embedded_statement6485);
				selection_statement886=selection_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, selection_statement886.Tree, selection_statement886, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:879:4: iteration_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(879, 4);
				PushFollow(Follow._iteration_statement_in_embedded_statement6491);
				iteration_statement887=iteration_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, iteration_statement887.Tree, iteration_statement887, retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:880:4: jump_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(880, 4);
				PushFollow(Follow._jump_statement_in_embedded_statement6497);
				jump_statement888=jump_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, jump_statement888.Tree, jump_statement888, retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:881:4: try_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(881, 4);
				PushFollow(Follow._try_statement_in_embedded_statement6504);
				try_statement889=try_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, try_statement889.Tree, try_statement889, retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:882:4: checked_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(882, 4);
				PushFollow(Follow._checked_statement_in_embedded_statement6509);
				checked_statement890=checked_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, checked_statement890.Tree, checked_statement890, retval);

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:883:4: unchecked_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(883, 4);
				PushFollow(Follow._unchecked_statement_in_embedded_statement6514);
				unchecked_statement891=unchecked_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unchecked_statement891.Tree, unchecked_statement891, retval);

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:884:4: lock_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(884, 4);
				PushFollow(Follow._lock_statement_in_embedded_statement6519);
				lock_statement892=lock_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, lock_statement892.Tree, lock_statement892, retval);

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:885:4: using_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(885, 4);
				PushFollow(Follow._using_statement_in_embedded_statement6524);
				using_statement893=using_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, using_statement893.Tree, using_statement893, retval);

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:886:4: yield_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(886, 4);
				PushFollow(Follow._yield_statement_in_embedded_statement6530);
				yield_statement894=yield_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, yield_statement894.Tree, yield_statement894, retval);

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:887:4: unsafe_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(887, 4);
				PushFollow(Follow._unsafe_statement_in_embedded_statement6536);
				unsafe_statement895=unsafe_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unsafe_statement895.Tree, unsafe_statement895, retval);

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:888:4: fixed_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(888, 4);
				PushFollow(Follow._fixed_statement_in_embedded_statement6541);
				fixed_statement896=fixed_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, fixed_statement896.Tree, fixed_statement896, retval);

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:889:4: expression_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(889, 4);
				PushFollow(Follow._expression_statement_in_embedded_statement6546);
				expression_statement897=expression_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression_statement897.Tree, expression_statement897, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("embedded_statement", 246);
			LeaveRule("embedded_statement", 246);
			LeaveRule_embedded_statement();
			if (state.backtracking > 0) { Memoize(input, 246, embedded_statement_StartIndex); }

		}
		DebugLocation(890, 1);
		} finally { DebugExitRule(GrammarFileName, "embedded_statement"); }
		return retval;

	}
	// $ANTLR end "embedded_statement"

	partial void EnterRule_fixed_statement();
	partial void LeaveRule_fixed_statement();
	// $ANTLR start "fixed_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:891:1: fixed_statement : 'fixed' '(' pointer_type fixed_pointer_declarators ')' embedded_statement ;
	[GrammarRule("fixed_statement")]
	private Antlr3AstNode fixed_statement()
	{
		EnterRule_fixed_statement();
		EnterRule("fixed_statement", 247);
		var retval = new Antlr3AstNode("fixed_statement");
		
		retval.Start = (IToken)input.LT(1);
		int fixed_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal898 = default(IToken);
		IToken char_literal899 = default(IToken);
		IToken char_literal902 = default(IToken);
		Antlr3AstNode pointer_type900 = default(Antlr3AstNode);
		Antlr3AstNode fixed_pointer_declarators901 = default(Antlr3AstNode);
		Antlr3AstNode embedded_statement903 = default(Antlr3AstNode);

		object string_literal898_tree = default(object);
		object char_literal899_tree = default(object);
		object char_literal902_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "fixed_statement");
		DebugLocation(891, 83);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 247)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:891:16: ( 'fixed' '(' pointer_type fixed_pointer_declarators ')' embedded_statement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:892:2: 'fixed' '(' pointer_type fixed_pointer_declarators ')' embedded_statement
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(892, 2);
			string_literal898=(IToken)Match(input,128,Follow._128_in_fixed_statement6556); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal898_tree = (object)adaptor.Create(string_literal898, retval);
			adaptor.AddChild(root_0, string_literal898_tree);
			}
			DebugLocation(892, 12);
			char_literal899=(IToken)Match(input,68,Follow._68_in_fixed_statement6560); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal899_tree = (object)adaptor.Create(char_literal899, retval);
			adaptor.AddChild(root_0, char_literal899_tree);
			}
			DebugLocation(892, 18);
			PushFollow(Follow._pointer_type_in_fixed_statement6564);
			pointer_type900=pointer_type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, pointer_type900.Tree, pointer_type900, retval);
			DebugLocation(892, 31);
			PushFollow(Follow._fixed_pointer_declarators_in_fixed_statement6566);
			fixed_pointer_declarators901=fixed_pointer_declarators();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, fixed_pointer_declarators901.Tree, fixed_pointer_declarators901, retval);
			DebugLocation(892, 59);
			char_literal902=(IToken)Match(input,RPAREN,Follow._RPAREN_in_fixed_statement6570); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal902_tree = (object)adaptor.Create(char_literal902, retval);
			adaptor.AddChild(root_0, char_literal902_tree);
			}
			DebugLocation(892, 65);
			PushFollow(Follow._embedded_statement_in_fixed_statement6574);
			embedded_statement903=embedded_statement();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, embedded_statement903.Tree, embedded_statement903, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("fixed_statement", 247);
			LeaveRule("fixed_statement", 247);
			LeaveRule_fixed_statement();
			if (state.backtracking > 0) { Memoize(input, 247, fixed_statement_StartIndex); }

		}
		DebugLocation(892, 83);
		} finally { DebugExitRule(GrammarFileName, "fixed_statement"); }
		return retval;

	}
	// $ANTLR end "fixed_statement"

	partial void EnterRule_fixed_pointer_declarators();
	partial void LeaveRule_fixed_pointer_declarators();
	// $ANTLR start "fixed_pointer_declarators"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:893:1: fixed_pointer_declarators : fixed_pointer_declarator ( ',' fixed_pointer_declarator )* ;
	[GrammarRule("fixed_pointer_declarators")]
	private Antlr3AstNode fixed_pointer_declarators()
	{
		EnterRule_fixed_pointer_declarators();
		EnterRule("fixed_pointer_declarators", 248);
		var retval = new Antlr3AstNode("fixed_pointer_declarators");
		
		retval.Start = (IToken)input.LT(1);
		int fixed_pointer_declarators_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal905 = default(IToken);
		Antlr3AstNode fixed_pointer_declarator904 = default(Antlr3AstNode);
		Antlr3AstNode fixed_pointer_declarator906 = default(Antlr3AstNode);

		object char_literal905_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "fixed_pointer_declarators");
		DebugLocation(893, 62);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 248)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:893:26: ( fixed_pointer_declarator ( ',' fixed_pointer_declarator )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:894:2: fixed_pointer_declarator ( ',' fixed_pointer_declarator )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(894, 2);
			PushFollow(Follow._fixed_pointer_declarator_in_fixed_pointer_declarators6582);
			fixed_pointer_declarator904=fixed_pointer_declarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, fixed_pointer_declarator904.Tree, fixed_pointer_declarator904, retval);
			DebugLocation(894, 29);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:894:29: ( ',' fixed_pointer_declarator )*
			try { DebugEnterSubRule(243);
			while (true)
			{
				int alt243=2;
				try { DebugEnterDecision(243, false);
				int LA243_1 = input.LA(1);

				if ((LA243_1==74))
				{
					alt243 = 1;
				}


				} finally { DebugExitDecision(243); }
				switch ( alt243 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:894:30: ',' fixed_pointer_declarator
					{
					DebugLocation(894, 30);
					char_literal905=(IToken)Match(input,74,Follow._74_in_fixed_pointer_declarators6587); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal905_tree = (object)adaptor.Create(char_literal905, retval);
					adaptor.AddChild(root_0, char_literal905_tree);
					}
					DebugLocation(894, 36);
					PushFollow(Follow._fixed_pointer_declarator_in_fixed_pointer_declarators6591);
					fixed_pointer_declarator906=fixed_pointer_declarator();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, fixed_pointer_declarator906.Tree, fixed_pointer_declarator906, retval);

					}
					break;

				default:
					goto loop243;
				}
			}

			loop243:
				;

			} finally { DebugExitSubRule(243); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("fixed_pointer_declarators", 248);
			LeaveRule("fixed_pointer_declarators", 248);
			LeaveRule_fixed_pointer_declarators();
			if (state.backtracking > 0) { Memoize(input, 248, fixed_pointer_declarators_StartIndex); }

		}
		DebugLocation(894, 62);
		} finally { DebugExitRule(GrammarFileName, "fixed_pointer_declarators"); }
		return retval;

	}
	// $ANTLR end "fixed_pointer_declarators"

	partial void EnterRule_fixed_pointer_declarator();
	partial void LeaveRule_fixed_pointer_declarator();
	// $ANTLR start "fixed_pointer_declarator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:895:1: fixed_pointer_declarator : identifier '=' fixed_pointer_initializer ;
	[GrammarRule("fixed_pointer_declarator")]
	private Antlr3AstNode fixed_pointer_declarator()
	{
		EnterRule_fixed_pointer_declarator();
		EnterRule("fixed_pointer_declarator", 249);
		var retval = new Antlr3AstNode("fixed_pointer_declarator");
		
		retval.Start = (IToken)input.LT(1);
		int fixed_pointer_declarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal908 = default(IToken);
		Antlr3AstNode identifier907 = default(Antlr3AstNode);
		Antlr3AstNode fixed_pointer_initializer909 = default(Antlr3AstNode);

		object char_literal908_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "fixed_pointer_declarator");
		DebugLocation(895, 46);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 249)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:895:25: ( identifier '=' fixed_pointer_initializer )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:896:2: identifier '=' fixed_pointer_initializer
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(896, 2);
			PushFollow(Follow._identifier_in_fixed_pointer_declarator6601);
			identifier907=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier907.Tree, identifier907, retval);
			DebugLocation(896, 15);
			char_literal908=(IToken)Match(input,85,Follow._85_in_fixed_pointer_declarator6605); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal908_tree = (object)adaptor.Create(char_literal908, retval);
			adaptor.AddChild(root_0, char_literal908_tree);
			}
			DebugLocation(896, 21);
			PushFollow(Follow._fixed_pointer_initializer_in_fixed_pointer_declarator6609);
			fixed_pointer_initializer909=fixed_pointer_initializer();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, fixed_pointer_initializer909.Tree, fixed_pointer_initializer909, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("fixed_pointer_declarator", 249);
			LeaveRule("fixed_pointer_declarator", 249);
			LeaveRule_fixed_pointer_declarator();
			if (state.backtracking > 0) { Memoize(input, 249, fixed_pointer_declarator_StartIndex); }

		}
		DebugLocation(896, 46);
		} finally { DebugExitRule(GrammarFileName, "fixed_pointer_declarator"); }
		return retval;

	}
	// $ANTLR end "fixed_pointer_declarator"

	partial void EnterRule_fixed_pointer_initializer();
	partial void LeaveRule_fixed_pointer_initializer();
	// $ANTLR start "fixed_pointer_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:897:1: fixed_pointer_initializer : expression ;
	[GrammarRule("fixed_pointer_initializer")]
	private Antlr3AstNode fixed_pointer_initializer()
	{
		EnterRule_fixed_pointer_initializer();
		EnterRule("fixed_pointer_initializer", 250);
		var retval = new Antlr3AstNode("fixed_pointer_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int fixed_pointer_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode expression910 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "fixed_pointer_initializer");
		DebugLocation(897, 11);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 250)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:897:26: ( expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:899:2: expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(899, 2);
			PushFollow(Follow._expression_in_fixed_pointer_initializer6619);
			expression910=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression910.Tree, expression910, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("fixed_pointer_initializer", 250);
			LeaveRule("fixed_pointer_initializer", 250);
			LeaveRule_fixed_pointer_initializer();
			if (state.backtracking > 0) { Memoize(input, 250, fixed_pointer_initializer_StartIndex); }

		}
		DebugLocation(899, 11);
		} finally { DebugExitRule(GrammarFileName, "fixed_pointer_initializer"); }
		return retval;

	}
	// $ANTLR end "fixed_pointer_initializer"

	partial void EnterRule_unsafe_statement();
	partial void LeaveRule_unsafe_statement();
	// $ANTLR start "unsafe_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:900:1: unsafe_statement : 'unsafe' block ;
	[GrammarRule("unsafe_statement")]
	private Antlr3AstNode unsafe_statement()
	{
		EnterRule_unsafe_statement();
		EnterRule("unsafe_statement", 251);
		var retval = new Antlr3AstNode("unsafe_statement");
		
		retval.Start = (IToken)input.LT(1);
		int unsafe_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal911 = default(IToken);
		Antlr3AstNode block912 = default(Antlr3AstNode);

		object string_literal911_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "unsafe_statement");
		DebugLocation(900, 17);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 251)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:900:17: ( 'unsafe' block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:901:2: 'unsafe' block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(901, 2);
			string_literal911=(IToken)Match(input,188,Follow._188_in_unsafe_statement6626); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal911_tree = (object)adaptor.Create(string_literal911, retval);
			adaptor.AddChild(root_0, string_literal911_tree);
			}
			DebugLocation(901, 13);
			PushFollow(Follow._block_in_unsafe_statement6630);
			block912=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block912.Tree, block912, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unsafe_statement", 251);
			LeaveRule("unsafe_statement", 251);
			LeaveRule_unsafe_statement();
			if (state.backtracking > 0) { Memoize(input, 251, unsafe_statement_StartIndex); }

		}
		DebugLocation(901, 17);
		} finally { DebugExitRule(GrammarFileName, "unsafe_statement"); }
		return retval;

	}
	// $ANTLR end "unsafe_statement"

	partial void EnterRule_labeled_statement();
	partial void LeaveRule_labeled_statement();
	// $ANTLR start "labeled_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:902:1: labeled_statement : identifier ':' statement ;
	[GrammarRule("labeled_statement")]
	private Antlr3AstNode labeled_statement()
	{
		EnterRule_labeled_statement();
		EnterRule("labeled_statement", 252);
		var retval = new Antlr3AstNode("labeled_statement");
		
		retval.Start = (IToken)input.LT(1);
		int labeled_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal914 = default(IToken);
		Antlr3AstNode identifier913 = default(Antlr3AstNode);
		Antlr3AstNode statement915 = default(Antlr3AstNode);

		object char_literal914_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "labeled_statement");
		DebugLocation(902, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 252)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:902:18: ( identifier ':' statement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:903:2: identifier ':' statement
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(903, 2);
			PushFollow(Follow._identifier_in_labeled_statement6637);
			identifier913=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier913.Tree, identifier913, retval);
			DebugLocation(903, 15);
			char_literal914=(IToken)Match(input,79,Follow._79_in_labeled_statement6641); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal914_tree = (object)adaptor.Create(char_literal914, retval);
			adaptor.AddChild(root_0, char_literal914_tree);
			}
			DebugLocation(903, 21);
			PushFollow(Follow._statement_in_labeled_statement6645);
			statement915=statement();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, statement915.Tree, statement915, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("labeled_statement", 252);
			LeaveRule("labeled_statement", 252);
			LeaveRule_labeled_statement();
			if (state.backtracking > 0) { Memoize(input, 252, labeled_statement_StartIndex); }

		}
		DebugLocation(903, 30);
		} finally { DebugExitRule(GrammarFileName, "labeled_statement"); }
		return retval;

	}
	// $ANTLR end "labeled_statement"

	partial void EnterRule_declaration_statement();
	partial void LeaveRule_declaration_statement();
	// $ANTLR start "declaration_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:904:1: declaration_statement : ( local_variable_declaration | local_constant_declaration ) ';' ;
	[GrammarRule("declaration_statement")]
	private Antlr3AstNode declaration_statement()
	{
		EnterRule_declaration_statement();
		EnterRule("declaration_statement", 253);
		var retval = new Antlr3AstNode("declaration_statement");
		
		retval.Start = (IToken)input.LT(1);
		int declaration_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal918 = default(IToken);
		Antlr3AstNode local_variable_declaration916 = default(Antlr3AstNode);
		Antlr3AstNode local_constant_declaration917 = default(Antlr3AstNode);

		object char_literal918_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "declaration_statement");
		DebugLocation(904, 35);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 253)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:904:22: ( ( local_variable_declaration | local_constant_declaration ) ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:905:2: ( local_variable_declaration | local_constant_declaration ) ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(905, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:905:2: ( local_variable_declaration | local_constant_declaration )
			int alt244=2;
			try { DebugEnterSubRule(244);
			try { DebugEnterDecision(244, false);
			int LA244_1 = input.LA(1);

			if ((LA244_1==IDENTIFIER||LA244_1==95||(LA244_1>=97 && LA244_1<=98)||(LA244_1>=100 && LA244_1<=101)||LA244_1==103||(LA244_1>=105 && LA244_1<=106)||LA244_1==109||LA244_1==114||LA244_1==117||(LA244_1>=119 && LA244_1<=120)||LA244_1==122||LA244_1==126||LA244_1==129||LA244_1==132||LA244_1==135||LA244_1==138||LA244_1==141||(LA244_1>=143 && LA244_1<=144)||(LA244_1>=146 && LA244_1<=148)||(LA244_1>=151 && LA244_1<=152)||LA244_1==154||LA244_1==157||LA244_1==160||LA244_1==162||LA244_1==167||LA244_1==169||(LA244_1>=171 && LA244_1<=173)||LA244_1==177||LA244_1==183||(LA244_1>=185 && LA244_1<=186)||(LA244_1>=189 && LA244_1<=190)||LA244_1==192||LA244_1==194||LA244_1==196))
			{
				alt244 = 1;
			}
			else if ((LA244_1==112))
			{
				alt244 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 244, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(244); }
			switch (alt244)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:905:3: local_variable_declaration
				{
				DebugLocation(905, 3);
				PushFollow(Follow._local_variable_declaration_in_declaration_statement6654);
				local_variable_declaration916=local_variable_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, local_variable_declaration916.Tree, local_variable_declaration916, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:906:4: local_constant_declaration
				{
				DebugLocation(906, 4);
				PushFollow(Follow._local_constant_declaration_in_declaration_statement6660);
				local_constant_declaration917=local_constant_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, local_constant_declaration917.Tree, local_constant_declaration917, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(244); }

			DebugLocation(906, 32);
			char_literal918=(IToken)Match(input,SEMI,Follow._SEMI_in_declaration_statement6663); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal918_tree = (object)adaptor.Create(char_literal918, retval);
			adaptor.AddChild(root_0, char_literal918_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("declaration_statement", 253);
			LeaveRule("declaration_statement", 253);
			LeaveRule_declaration_statement();
			if (state.backtracking > 0) { Memoize(input, 253, declaration_statement_StartIndex); }

		}
		DebugLocation(906, 35);
		} finally { DebugExitRule(GrammarFileName, "declaration_statement"); }
		return retval;

	}
	// $ANTLR end "declaration_statement"

	partial void EnterRule_local_variable_declaration();
	partial void LeaveRule_local_variable_declaration();
	// $ANTLR start "local_variable_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:907:1: local_variable_declaration : local_variable_type local_variable_declarators ;
	[GrammarRule("local_variable_declaration")]
	private Antlr3AstNode local_variable_declaration()
	{
		EnterRule_local_variable_declaration();
		EnterRule("local_variable_declaration", 254);
		var retval = new Antlr3AstNode("local_variable_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int local_variable_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode local_variable_type919 = default(Antlr3AstNode);
		Antlr3AstNode local_variable_declarators920 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "local_variable_declaration");
		DebugLocation(907, 50);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 254)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:907:27: ( local_variable_type local_variable_declarators )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:908:2: local_variable_type local_variable_declarators
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(908, 2);
			PushFollow(Follow._local_variable_type_in_local_variable_declaration6671);
			local_variable_type919=local_variable_type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, local_variable_type919.Tree, local_variable_type919, retval);
			DebugLocation(908, 24);
			PushFollow(Follow._local_variable_declarators_in_local_variable_declaration6675);
			local_variable_declarators920=local_variable_declarators();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, local_variable_declarators920.Tree, local_variable_declarators920, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("local_variable_declaration", 254);
			LeaveRule("local_variable_declaration", 254);
			LeaveRule_local_variable_declaration();
			if (state.backtracking > 0) { Memoize(input, 254, local_variable_declaration_StartIndex); }

		}
		DebugLocation(908, 50);
		} finally { DebugExitRule(GrammarFileName, "local_variable_declaration"); }
		return retval;

	}
	// $ANTLR end "local_variable_declaration"

	partial void EnterRule_local_variable_type();
	partial void LeaveRule_local_variable_type();
	// $ANTLR start "local_variable_type"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:909:1: local_variable_type : ( ( 'var' )=> 'var' | ( 'dynamic' )=> 'dynamic' | type );
	[GrammarRule("local_variable_type")]
	private Antlr3AstNode local_variable_type()
	{
		EnterRule_local_variable_type();
		EnterRule("local_variable_type", 255);
		var retval = new Antlr3AstNode("local_variable_type");
		
		retval.Start = (IToken)input.LT(1);
		int local_variable_type_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal921 = default(IToken);
		IToken string_literal922 = default(IToken);
		Antlr3AstNode type923 = default(Antlr3AstNode);

		object string_literal921_tree = default(object);
		object string_literal922_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "local_variable_type");
		DebugLocation(909, 8);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 255)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:909:20: ( ( 'var' )=> 'var' | ( 'dynamic' )=> 'dynamic' | type )
			int alt245=3;
			try { DebugEnterDecision(245, false);
			switch (input.LA(1))
			{
			case 190:
				{
				int LA245_2 = input.LA(2);

				if ((EvaluatePredicate(synpred35_cs_fragment)))
				{
					alt245 = 1;
				}
				else if ((true))
				{
					alt245 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 245, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 120:
				{
				int LA245_2 = input.LA(2);

				if ((EvaluatePredicate(synpred36_cs_fragment)))
				{
					alt245 = 2;
				}
				else if ((true))
				{
					alt245 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 245, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 103:
			case 105:
			case 106:
			case 109:
			case 114:
			case 117:
			case 119:
			case 122:
			case 126:
			case 129:
			case 132:
			case 135:
			case 138:
			case 141:
			case 143:
			case 144:
			case 146:
			case 147:
			case 148:
			case 151:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 169:
			case 171:
			case 172:
			case 173:
			case 177:
			case 183:
			case 185:
			case 186:
			case 189:
			case 192:
			case 194:
			case 196:
				{
				alt245 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 245, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(245); }
			switch (alt245)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:910:2: ( 'var' )=> 'var'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(910, 13);
				string_literal921=(IToken)Match(input,190,Follow._190_in_local_variable_type6689); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal921_tree = (object)adaptor.Create(string_literal921, retval);
				adaptor.AddChild(root_0, string_literal921_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:911:4: ( 'dynamic' )=> 'dynamic'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(911, 19);
				string_literal922=(IToken)Match(input,120,Follow._120_in_local_variable_type6700); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal922_tree = (object)adaptor.Create(string_literal922, retval);
				adaptor.AddChild(root_0, string_literal922_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:912:4: type
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(912, 4);
				PushFollow(Follow._type_in_local_variable_type6705);
				type923=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type923.Tree, type923, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("local_variable_type", 255);
			LeaveRule("local_variable_type", 255);
			LeaveRule_local_variable_type();
			if (state.backtracking > 0) { Memoize(input, 255, local_variable_type_StartIndex); }

		}
		DebugLocation(912, 8);
		} finally { DebugExitRule(GrammarFileName, "local_variable_type"); }
		return retval;

	}
	// $ANTLR end "local_variable_type"

	partial void EnterRule_local_variable_declarators();
	partial void LeaveRule_local_variable_declarators();
	// $ANTLR start "local_variable_declarators"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:913:1: local_variable_declarators : local_variable_declarator ( ',' local_variable_declarator )* ;
	[GrammarRule("local_variable_declarators")]
	private Antlr3AstNode local_variable_declarators()
	{
		EnterRule_local_variable_declarators();
		EnterRule("local_variable_declarators", 256);
		var retval = new Antlr3AstNode("local_variable_declarators");
		
		retval.Start = (IToken)input.LT(1);
		int local_variable_declarators_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal925 = default(IToken);
		Antlr3AstNode local_variable_declarator924 = default(Antlr3AstNode);
		Antlr3AstNode local_variable_declarator926 = default(Antlr3AstNode);

		object char_literal925_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "local_variable_declarators");
		DebugLocation(913, 60);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 256)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:913:27: ( local_variable_declarator ( ',' local_variable_declarator )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:914:2: local_variable_declarator ( ',' local_variable_declarator )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(914, 2);
			PushFollow(Follow._local_variable_declarator_in_local_variable_declarators6713);
			local_variable_declarator924=local_variable_declarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, local_variable_declarator924.Tree, local_variable_declarator924, retval);
			DebugLocation(914, 28);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:914:28: ( ',' local_variable_declarator )*
			try { DebugEnterSubRule(246);
			while (true)
			{
				int alt246=2;
				try { DebugEnterDecision(246, false);
				int LA246_1 = input.LA(1);

				if ((LA246_1==74))
				{
					alt246 = 1;
				}


				} finally { DebugExitDecision(246); }
				switch ( alt246 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:914:29: ',' local_variable_declarator
					{
					DebugLocation(914, 29);
					char_literal925=(IToken)Match(input,74,Follow._74_in_local_variable_declarators6716); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal925_tree = (object)adaptor.Create(char_literal925, retval);
					adaptor.AddChild(root_0, char_literal925_tree);
					}
					DebugLocation(914, 33);
					PushFollow(Follow._local_variable_declarator_in_local_variable_declarators6718);
					local_variable_declarator926=local_variable_declarator();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, local_variable_declarator926.Tree, local_variable_declarator926, retval);

					}
					break;

				default:
					goto loop246;
				}
			}

			loop246:
				;

			} finally { DebugExitSubRule(246); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("local_variable_declarators", 256);
			LeaveRule("local_variable_declarators", 256);
			LeaveRule_local_variable_declarators();
			if (state.backtracking > 0) { Memoize(input, 256, local_variable_declarators_StartIndex); }

		}
		DebugLocation(914, 60);
		} finally { DebugExitRule(GrammarFileName, "local_variable_declarators"); }
		return retval;

	}
	// $ANTLR end "local_variable_declarators"

	partial void EnterRule_local_variable_declarator();
	partial void LeaveRule_local_variable_declarator();
	// $ANTLR start "local_variable_declarator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:915:1: local_variable_declarator : identifier ( '=' local_variable_initializer )? ;
	[GrammarRule("local_variable_declarator")]
	private Antlr3AstNode local_variable_declarator()
	{
		EnterRule_local_variable_declarator();
		EnterRule("local_variable_declarator", 257);
		var retval = new Antlr3AstNode("local_variable_declarator");
		
		retval.Start = (IToken)input.LT(1);
		int local_variable_declarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal928 = default(IToken);
		Antlr3AstNode identifier927 = default(Antlr3AstNode);
		Antlr3AstNode local_variable_initializer929 = default(Antlr3AstNode);

		object char_literal928_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "local_variable_declarator");
		DebugLocation(915, 48);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 257)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:915:26: ( identifier ( '=' local_variable_initializer )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:916:2: identifier ( '=' local_variable_initializer )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(916, 2);
			PushFollow(Follow._identifier_in_local_variable_declarator6728);
			identifier927=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier927.Tree, identifier927, retval);
			DebugLocation(916, 13);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:916:13: ( '=' local_variable_initializer )?
			int alt247=2;
			try { DebugEnterSubRule(247);
			try { DebugEnterDecision(247, false);
			int LA247_1 = input.LA(1);

			if ((LA247_1==85))
			{
				alt247 = 1;
			}
			} finally { DebugExitDecision(247); }
			switch (alt247)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:916:14: '=' local_variable_initializer
				{
				DebugLocation(916, 14);
				char_literal928=(IToken)Match(input,85,Follow._85_in_local_variable_declarator6731); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal928_tree = (object)adaptor.Create(char_literal928, retval);
				adaptor.AddChild(root_0, char_literal928_tree);
				}
				DebugLocation(916, 20);
				PushFollow(Follow._local_variable_initializer_in_local_variable_declarator6735);
				local_variable_initializer929=local_variable_initializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, local_variable_initializer929.Tree, local_variable_initializer929, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(247); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("local_variable_declarator", 257);
			LeaveRule("local_variable_declarator", 257);
			LeaveRule_local_variable_declarator();
			if (state.backtracking > 0) { Memoize(input, 257, local_variable_declarator_StartIndex); }

		}
		DebugLocation(916, 48);
		} finally { DebugExitRule(GrammarFileName, "local_variable_declarator"); }
		return retval;

	}
	// $ANTLR end "local_variable_declarator"

	partial void EnterRule_local_variable_initializer();
	partial void LeaveRule_local_variable_initializer();
	// $ANTLR start "local_variable_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:917:1: local_variable_initializer : ( expression | array_initializer | stackalloc_initializer );
	[GrammarRule("local_variable_initializer")]
	private Antlr3AstNode local_variable_initializer()
	{
		EnterRule_local_variable_initializer();
		EnterRule("local_variable_initializer", 258);
		var retval = new Antlr3AstNode("local_variable_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int local_variable_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode expression930 = default(Antlr3AstNode);
		Antlr3AstNode array_initializer931 = default(Antlr3AstNode);
		Antlr3AstNode stackalloc_initializer932 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "local_variable_initializer");
		DebugLocation(917, 25);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 258)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:917:27: ( expression | array_initializer | stackalloc_initializer )
			int alt248=3;
			try { DebugEnterDecision(248, false);
			switch (input.LA(1))
			{
			case Character_literal:
			case FALSE:
			case Hex_number:
			case IDENTIFIER:
			case MINUS:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 61:
			case 66:
			case 68:
			case 69:
			case 71:
			case 72:
			case 75:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 102:
			case 103:
			case 105:
			case 106:
			case 109:
			case 110:
			case 114:
			case 115:
			case 116:
			case 117:
			case 119:
			case 120:
			case 122:
			case 126:
			case 129:
			case 132:
			case 135:
			case 138:
			case 141:
			case 143:
			case 144:
			case 146:
			case 147:
			case 148:
			case 150:
			case 151:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 169:
			case 171:
			case 172:
			case 173:
			case 174:
			case 177:
			case 180:
			case 183:
			case 184:
			case 185:
			case 186:
			case 187:
			case 189:
			case 190:
			case 194:
			case 196:
			case 202:
				{
				alt248 = 1;
				}
				break;
			case 197:
				{
				alt248 = 2;
				}
				break;
			case 175:
				{
				alt248 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 248, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(248); }
			switch (alt248)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:918:2: expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(918, 2);
				PushFollow(Follow._expression_in_local_variable_initializer6746);
				expression930=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression930.Tree, expression930, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:919:4: array_initializer
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(919, 4);
				PushFollow(Follow._array_initializer_in_local_variable_initializer6751);
				array_initializer931=array_initializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, array_initializer931.Tree, array_initializer931, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:920:4: stackalloc_initializer
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(920, 4);
				PushFollow(Follow._stackalloc_initializer_in_local_variable_initializer6757);
				stackalloc_initializer932=stackalloc_initializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, stackalloc_initializer932.Tree, stackalloc_initializer932, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("local_variable_initializer", 258);
			LeaveRule("local_variable_initializer", 258);
			LeaveRule_local_variable_initializer();
			if (state.backtracking > 0) { Memoize(input, 258, local_variable_initializer_StartIndex); }

		}
		DebugLocation(920, 25);
		} finally { DebugExitRule(GrammarFileName, "local_variable_initializer"); }
		return retval;

	}
	// $ANTLR end "local_variable_initializer"

	partial void EnterRule_stackalloc_initializer();
	partial void LeaveRule_stackalloc_initializer();
	// $ANTLR start "stackalloc_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:921:1: stackalloc_initializer : 'stackalloc' unmanaged_type '[' expression ']' ;
	[GrammarRule("stackalloc_initializer")]
	private Antlr3AstNode stackalloc_initializer()
	{
		EnterRule_stackalloc_initializer();
		EnterRule("stackalloc_initializer", 259);
		var retval = new Antlr3AstNode("stackalloc_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int stackalloc_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal933 = default(IToken);
		IToken char_literal935 = default(IToken);
		IToken char_literal937 = default(IToken);
		Antlr3AstNode unmanaged_type934 = default(Antlr3AstNode);
		Antlr3AstNode expression936 = default(Antlr3AstNode);

		object string_literal933_tree = default(object);
		object char_literal935_tree = default(object);
		object char_literal937_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "stackalloc_initializer");
		DebugLocation(921, 56);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 259)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:921:23: ( 'stackalloc' unmanaged_type '[' expression ']' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:922:2: 'stackalloc' unmanaged_type '[' expression ']'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(922, 2);
			string_literal933=(IToken)Match(input,175,Follow._175_in_stackalloc_initializer6764); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal933_tree = (object)adaptor.Create(string_literal933, retval);
			adaptor.AddChild(root_0, string_literal933_tree);
			}
			DebugLocation(922, 17);
			PushFollow(Follow._unmanaged_type_in_stackalloc_initializer6768);
			unmanaged_type934=unmanaged_type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, unmanaged_type934.Tree, unmanaged_type934, retval);
			DebugLocation(922, 34);
			char_literal935=(IToken)Match(input,91,Follow._91_in_stackalloc_initializer6772); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal935_tree = (object)adaptor.Create(char_literal935, retval);
			adaptor.AddChild(root_0, char_literal935_tree);
			}
			DebugLocation(922, 40);
			PushFollow(Follow._expression_in_stackalloc_initializer6776);
			expression936=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression936.Tree, expression936, retval);
			DebugLocation(922, 53);
			char_literal937=(IToken)Match(input,92,Follow._92_in_stackalloc_initializer6780); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal937_tree = (object)adaptor.Create(char_literal937, retval);
			adaptor.AddChild(root_0, char_literal937_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("stackalloc_initializer", 259);
			LeaveRule("stackalloc_initializer", 259);
			LeaveRule_stackalloc_initializer();
			if (state.backtracking > 0) { Memoize(input, 259, stackalloc_initializer_StartIndex); }

		}
		DebugLocation(922, 56);
		} finally { DebugExitRule(GrammarFileName, "stackalloc_initializer"); }
		return retval;

	}
	// $ANTLR end "stackalloc_initializer"

	partial void EnterRule_local_constant_declaration();
	partial void LeaveRule_local_constant_declaration();
	// $ANTLR start "local_constant_declaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:923:1: local_constant_declaration : 'const' type constant_declarators ;
	[GrammarRule("local_constant_declaration")]
	private Antlr3AstNode local_constant_declaration()
	{
		EnterRule_local_constant_declaration();
		EnterRule("local_constant_declaration", 260);
		var retval = new Antlr3AstNode("local_constant_declaration");
		
		retval.Start = (IToken)input.LT(1);
		int local_constant_declaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal938 = default(IToken);
		Antlr3AstNode type939 = default(Antlr3AstNode);
		Antlr3AstNode constant_declarators940 = default(Antlr3AstNode);

		object string_literal938_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "local_constant_declaration");
		DebugLocation(923, 39);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 260)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:923:27: ( 'const' type constant_declarators )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:924:2: 'const' type constant_declarators
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(924, 2);
			string_literal938=(IToken)Match(input,112,Follow._112_in_local_constant_declaration6788); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal938_tree = (object)adaptor.Create(string_literal938, retval);
			adaptor.AddChild(root_0, string_literal938_tree);
			}
			DebugLocation(924, 12);
			PushFollow(Follow._type_in_local_constant_declaration6792);
			type939=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type939.Tree, type939, retval);
			DebugLocation(924, 19);
			PushFollow(Follow._constant_declarators_in_local_constant_declaration6796);
			constant_declarators940=constant_declarators();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, constant_declarators940.Tree, constant_declarators940, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("local_constant_declaration", 260);
			LeaveRule("local_constant_declaration", 260);
			LeaveRule_local_constant_declaration();
			if (state.backtracking > 0) { Memoize(input, 260, local_constant_declaration_StartIndex); }

		}
		DebugLocation(924, 39);
		} finally { DebugExitRule(GrammarFileName, "local_constant_declaration"); }
		return retval;

	}
	// $ANTLR end "local_constant_declaration"

	partial void EnterRule_expression_statement();
	partial void LeaveRule_expression_statement();
	// $ANTLR start "expression_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:925:1: expression_statement : expression ';' ;
	[GrammarRule("expression_statement")]
	private Antlr3AstNode expression_statement()
	{
		EnterRule_expression_statement();
		EnterRule("expression_statement", 261);
		var retval = new Antlr3AstNode("expression_statement");
		
		retval.Start = (IToken)input.LT(1);
		int expression_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal942 = default(IToken);
		Antlr3AstNode expression941 = default(Antlr3AstNode);

		object char_literal942_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "expression_statement");
		DebugLocation(925, 18);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 261)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:925:21: ( expression ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:926:2: expression ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(926, 2);
			PushFollow(Follow._expression_in_expression_statement6804);
			expression941=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression941.Tree, expression941, retval);
			DebugLocation(926, 15);
			char_literal942=(IToken)Match(input,SEMI,Follow._SEMI_in_expression_statement6808); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal942_tree = (object)adaptor.Create(char_literal942, retval);
			adaptor.AddChild(root_0, char_literal942_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("expression_statement", 261);
			LeaveRule("expression_statement", 261);
			LeaveRule_expression_statement();
			if (state.backtracking > 0) { Memoize(input, 261, expression_statement_StartIndex); }

		}
		DebugLocation(926, 18);
		} finally { DebugExitRule(GrammarFileName, "expression_statement"); }
		return retval;

	}
	// $ANTLR end "expression_statement"

	partial void EnterRule_statement_expression();
	partial void LeaveRule_statement_expression();
	// $ANTLR start "statement_expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:929:1: statement_expression : expression ;
	[GrammarRule("statement_expression")]
	private Antlr3AstNode statement_expression()
	{
		EnterRule_statement_expression();
		EnterRule("statement_expression", 262);
		var retval = new Antlr3AstNode("statement_expression");
		
		retval.Start = (IToken)input.LT(1);
		int statement_expression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode expression943 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "statement_expression");
		DebugLocation(929, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 262)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:929:21: ( expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:930:2: expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(930, 2);
			PushFollow(Follow._expression_in_statement_expression6818);
			expression943=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression943.Tree, expression943, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("statement_expression", 262);
			LeaveRule("statement_expression", 262);
			LeaveRule_statement_expression();
			if (state.backtracking > 0) { Memoize(input, 262, statement_expression_StartIndex); }

		}
		DebugLocation(931, 1);
		} finally { DebugExitRule(GrammarFileName, "statement_expression"); }
		return retval;

	}
	// $ANTLR end "statement_expression"

	partial void EnterRule_selection_statement();
	partial void LeaveRule_selection_statement();
	// $ANTLR start "selection_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:932:1: selection_statement : ( if_statement | switch_statement );
	[GrammarRule("selection_statement")]
	private Antlr3AstNode selection_statement()
	{
		EnterRule_selection_statement();
		EnterRule("selection_statement", 263);
		var retval = new Antlr3AstNode("selection_statement");
		
		retval.Start = (IToken)input.LT(1);
		int selection_statement_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode if_statement944 = default(Antlr3AstNode);
		Antlr3AstNode switch_statement945 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "selection_statement");
		DebugLocation(932, 20);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 263)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:932:20: ( if_statement | switch_statement )
			int alt249=2;
			try { DebugEnterDecision(249, false);
			int LA249_1 = input.LA(1);

			if ((LA249_1==IF))
			{
				alt249 = 1;
			}
			else if ((LA249_1==179))
			{
				alt249 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 249, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(249); }
			switch (alt249)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:933:2: if_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(933, 2);
				PushFollow(Follow._if_statement_in_selection_statement6827);
				if_statement944=if_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, if_statement944.Tree, if_statement944, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:934:4: switch_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(934, 4);
				PushFollow(Follow._switch_statement_in_selection_statement6832);
				switch_statement945=switch_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, switch_statement945.Tree, switch_statement945, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("selection_statement", 263);
			LeaveRule("selection_statement", 263);
			LeaveRule_selection_statement();
			if (state.backtracking > 0) { Memoize(input, 263, selection_statement_StartIndex); }

		}
		DebugLocation(934, 20);
		} finally { DebugExitRule(GrammarFileName, "selection_statement"); }
		return retval;

	}
	// $ANTLR end "selection_statement"

	partial void EnterRule_if_statement();
	partial void LeaveRule_if_statement();
	// $ANTLR start "if_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:935:1: if_statement : 'if' '(' boolean_expression ')' embedded_statement ( ( 'else' )=> else_statement )? ;
	[GrammarRule("if_statement")]
	private Antlr3AstNode if_statement()
	{
		EnterRule_if_statement();
		EnterRule("if_statement", 264);
		var retval = new Antlr3AstNode("if_statement");
		
		retval.Start = (IToken)input.LT(1);
		int if_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal946 = default(IToken);
		IToken char_literal947 = default(IToken);
		IToken char_literal949 = default(IToken);
		Antlr3AstNode boolean_expression948 = default(Antlr3AstNode);
		Antlr3AstNode embedded_statement950 = default(Antlr3AstNode);
		Antlr3AstNode else_statement951 = default(Antlr3AstNode);

		object string_literal946_tree = default(object);
		object char_literal947_tree = default(object);
		object char_literal949_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "if_statement");
		DebugLocation(935, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 264)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:935:13: ( 'if' '(' boolean_expression ')' embedded_statement ( ( 'else' )=> else_statement )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:937:2: 'if' '(' boolean_expression ')' embedded_statement ( ( 'else' )=> else_statement )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(937, 2);
			string_literal946=(IToken)Match(input,IF,Follow._IF_in_if_statement6842); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal946_tree = (object)adaptor.Create(string_literal946, retval);
			adaptor.AddChild(root_0, string_literal946_tree);
			}
			DebugLocation(937, 9);
			char_literal947=(IToken)Match(input,68,Follow._68_in_if_statement6846); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal947_tree = (object)adaptor.Create(char_literal947, retval);
			adaptor.AddChild(root_0, char_literal947_tree);
			}
			DebugLocation(937, 15);
			PushFollow(Follow._boolean_expression_in_if_statement6850);
			boolean_expression948=boolean_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, boolean_expression948.Tree, boolean_expression948, retval);
			DebugLocation(937, 36);
			char_literal949=(IToken)Match(input,RPAREN,Follow._RPAREN_in_if_statement6854); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal949_tree = (object)adaptor.Create(char_literal949, retval);
			adaptor.AddChild(root_0, char_literal949_tree);
			}
			DebugLocation(937, 42);
			PushFollow(Follow._embedded_statement_in_if_statement6858);
			embedded_statement950=embedded_statement();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, embedded_statement950.Tree, embedded_statement950, retval);
			DebugLocation(937, 61);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:937:61: ( ( 'else' )=> else_statement )?
			int alt250=2;
			try { DebugEnterSubRule(250);
			try { DebugEnterDecision(250, false);
			int LA250_1 = input.LA(1);

			if ((LA250_1==121))
			{
				int LA250_2 = input.LA(2);

				if ((EvaluatePredicate(synpred37_cs_fragment)))
				{
					alt250 = 1;
				}
			}
			} finally { DebugExitDecision(250); }
			switch (alt250)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:937:62: ( 'else' )=> else_statement
				{
				DebugLocation(937, 74);
				PushFollow(Follow._else_statement_in_if_statement6867);
				else_statement951=else_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, else_statement951.Tree, else_statement951, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(250); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("if_statement", 264);
			LeaveRule("if_statement", 264);
			LeaveRule_if_statement();
			if (state.backtracking > 0) { Memoize(input, 264, if_statement_StartIndex); }

		}
		DebugLocation(938, 1);
		} finally { DebugExitRule(GrammarFileName, "if_statement"); }
		return retval;

	}
	// $ANTLR end "if_statement"

	partial void EnterRule_else_statement();
	partial void LeaveRule_else_statement();
	// $ANTLR start "else_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:939:1: else_statement : 'else' embedded_statement ;
	[GrammarRule("else_statement")]
	private Antlr3AstNode else_statement()
	{
		EnterRule_else_statement();
		EnterRule("else_statement", 265);
		var retval = new Antlr3AstNode("else_statement");
		
		retval.Start = (IToken)input.LT(1);
		int else_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal952 = default(IToken);
		Antlr3AstNode embedded_statement953 = default(Antlr3AstNode);

		object string_literal952_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "else_statement");
		DebugLocation(939, 29);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 265)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:939:15: ( 'else' embedded_statement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:940:2: 'else' embedded_statement
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(940, 2);
			string_literal952=(IToken)Match(input,121,Follow._121_in_else_statement6878); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal952_tree = (object)adaptor.Create(string_literal952, retval);
			adaptor.AddChild(root_0, string_literal952_tree);
			}
			DebugLocation(940, 11);
			PushFollow(Follow._embedded_statement_in_else_statement6882);
			embedded_statement953=embedded_statement();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, embedded_statement953.Tree, embedded_statement953, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("else_statement", 265);
			LeaveRule("else_statement", 265);
			LeaveRule_else_statement();
			if (state.backtracking > 0) { Memoize(input, 265, else_statement_StartIndex); }

		}
		DebugLocation(940, 29);
		} finally { DebugExitRule(GrammarFileName, "else_statement"); }
		return retval;

	}
	// $ANTLR end "else_statement"

	partial void EnterRule_switch_statement();
	partial void LeaveRule_switch_statement();
	// $ANTLR start "switch_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:941:1: switch_statement : 'switch' '(' expression ')' switch_block ;
	[GrammarRule("switch_statement")]
	private Antlr3AstNode switch_statement()
	{
		EnterRule_switch_statement();
		EnterRule("switch_statement", 266);
		var retval = new Antlr3AstNode("switch_statement");
		
		retval.Start = (IToken)input.LT(1);
		int switch_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal954 = default(IToken);
		IToken char_literal955 = default(IToken);
		IToken char_literal957 = default(IToken);
		Antlr3AstNode expression956 = default(Antlr3AstNode);
		Antlr3AstNode switch_block958 = default(Antlr3AstNode);

		object string_literal954_tree = default(object);
		object char_literal955_tree = default(object);
		object char_literal957_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "switch_statement");
		DebugLocation(941, 50);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 266)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:941:17: ( 'switch' '(' expression ')' switch_block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:942:2: 'switch' '(' expression ')' switch_block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(942, 2);
			string_literal954=(IToken)Match(input,179,Follow._179_in_switch_statement6890); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal954_tree = (object)adaptor.Create(string_literal954, retval);
			adaptor.AddChild(root_0, string_literal954_tree);
			}
			DebugLocation(942, 13);
			char_literal955=(IToken)Match(input,68,Follow._68_in_switch_statement6894); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal955_tree = (object)adaptor.Create(char_literal955, retval);
			adaptor.AddChild(root_0, char_literal955_tree);
			}
			DebugLocation(942, 19);
			PushFollow(Follow._expression_in_switch_statement6898);
			expression956=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression956.Tree, expression956, retval);
			DebugLocation(942, 32);
			char_literal957=(IToken)Match(input,RPAREN,Follow._RPAREN_in_switch_statement6902); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal957_tree = (object)adaptor.Create(char_literal957, retval);
			adaptor.AddChild(root_0, char_literal957_tree);
			}
			DebugLocation(942, 38);
			PushFollow(Follow._switch_block_in_switch_statement6906);
			switch_block958=switch_block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, switch_block958.Tree, switch_block958, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("switch_statement", 266);
			LeaveRule("switch_statement", 266);
			LeaveRule_switch_statement();
			if (state.backtracking > 0) { Memoize(input, 266, switch_statement_StartIndex); }

		}
		DebugLocation(942, 50);
		} finally { DebugExitRule(GrammarFileName, "switch_statement"); }
		return retval;

	}
	// $ANTLR end "switch_statement"

	partial void EnterRule_switch_block();
	partial void LeaveRule_switch_block();
	// $ANTLR start "switch_block"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:943:1: switch_block : '{' ( switch_sections )? '}' ;
	[GrammarRule("switch_block")]
	private Antlr3AstNode switch_block()
	{
		EnterRule_switch_block();
		EnterRule("switch_block", 267);
		var retval = new Antlr3AstNode("switch_block");
		
		retval.Start = (IToken)input.LT(1);
		int switch_block_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal959 = default(IToken);
		IToken char_literal961 = default(IToken);
		Antlr3AstNode switch_sections960 = default(Antlr3AstNode);

		object char_literal959_tree = default(object);
		object char_literal961_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "switch_block");
		DebugLocation(943, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 267)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:943:13: ( '{' ( switch_sections )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:944:2: '{' ( switch_sections )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(944, 2);
			char_literal959=(IToken)Match(input,197,Follow._197_in_switch_block6914); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal959_tree = (object)adaptor.Create(char_literal959, retval);
			adaptor.AddChild(root_0, char_literal959_tree);
			}
			DebugLocation(944, 8);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:944:8: ( switch_sections )?
			int alt251=2;
			try { DebugEnterSubRule(251);
			try { DebugEnterDecision(251, false);
			int LA251_1 = input.LA(1);

			if ((LA251_1==107||LA251_1==115))
			{
				alt251 = 1;
			}
			} finally { DebugExitDecision(251); }
			switch (alt251)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:944:8: switch_sections
				{
				DebugLocation(944, 8);
				PushFollow(Follow._switch_sections_in_switch_block6918);
				switch_sections960=switch_sections();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, switch_sections960.Tree, switch_sections960, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(251); }

			DebugLocation(944, 27);
			char_literal961=(IToken)Match(input,201,Follow._201_in_switch_block6923); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal961_tree = (object)adaptor.Create(char_literal961, retval);
			adaptor.AddChild(root_0, char_literal961_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("switch_block", 267);
			LeaveRule("switch_block", 267);
			LeaveRule_switch_block();
			if (state.backtracking > 0) { Memoize(input, 267, switch_block_StartIndex); }

		}
		DebugLocation(944, 30);
		} finally { DebugExitRule(GrammarFileName, "switch_block"); }
		return retval;

	}
	// $ANTLR end "switch_block"

	partial void EnterRule_switch_sections();
	partial void LeaveRule_switch_sections();
	// $ANTLR start "switch_sections"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:945:1: switch_sections : ( switch_section )+ ;
	[GrammarRule("switch_sections")]
	private Antlr3AstNode switch_sections()
	{
		EnterRule_switch_sections();
		EnterRule("switch_sections", 268);
		var retval = new Antlr3AstNode("switch_sections");
		
		retval.Start = (IToken)input.LT(1);
		int switch_sections_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode switch_section962 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "switch_sections");
		DebugLocation(945, 17);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 268)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:945:16: ( ( switch_section )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:946:2: ( switch_section )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(946, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:946:2: ( switch_section )+
			int cnt252=0;
			try { DebugEnterSubRule(252);
			while (true)
			{
				int alt252=2;
				try { DebugEnterDecision(252, false);
				int LA252_1 = input.LA(1);

				if ((LA252_1==107||LA252_1==115))
				{
					alt252 = 1;
				}


				} finally { DebugExitDecision(252); }
				switch (alt252)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:946:2: switch_section
					{
					DebugLocation(946, 2);
					PushFollow(Follow._switch_section_in_switch_sections6931);
					switch_section962=switch_section();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, switch_section962.Tree, switch_section962, retval);

					}
					break;

				default:
					if (cnt252 >= 1)
						goto loop252;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee252 = new EarlyExitException( 252, input );
					DebugRecognitionException(eee252);
					throw eee252;
				}
				cnt252++;
			}
			loop252:
				;

			} finally { DebugExitSubRule(252); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("switch_sections", 268);
			LeaveRule("switch_sections", 268);
			LeaveRule_switch_sections();
			if (state.backtracking > 0) { Memoize(input, 268, switch_sections_StartIndex); }

		}
		DebugLocation(946, 17);
		} finally { DebugExitRule(GrammarFileName, "switch_sections"); }
		return retval;

	}
	// $ANTLR end "switch_sections"

	partial void EnterRule_switch_section();
	partial void LeaveRule_switch_section();
	// $ANTLR start "switch_section"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:947:1: switch_section : switch_labels statement_list ;
	[GrammarRule("switch_section")]
	private Antlr3AstNode switch_section()
	{
		EnterRule_switch_section();
		EnterRule("switch_section", 269);
		var retval = new Antlr3AstNode("switch_section");
		
		retval.Start = (IToken)input.LT(1);
		int switch_section_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode switch_labels963 = default(Antlr3AstNode);
		Antlr3AstNode statement_list964 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "switch_section");
		DebugLocation(947, 32);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 269)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:947:15: ( switch_labels statement_list )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:948:2: switch_labels statement_list
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(948, 2);
			PushFollow(Follow._switch_labels_in_switch_section6940);
			switch_labels963=switch_labels();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, switch_labels963.Tree, switch_labels963, retval);
			DebugLocation(948, 18);
			PushFollow(Follow._statement_list_in_switch_section6944);
			statement_list964=statement_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, statement_list964.Tree, statement_list964, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("switch_section", 269);
			LeaveRule("switch_section", 269);
			LeaveRule_switch_section();
			if (state.backtracking > 0) { Memoize(input, 269, switch_section_StartIndex); }

		}
		DebugLocation(948, 32);
		} finally { DebugExitRule(GrammarFileName, "switch_section"); }
		return retval;

	}
	// $ANTLR end "switch_section"

	partial void EnterRule_switch_labels();
	partial void LeaveRule_switch_labels();
	// $ANTLR start "switch_labels"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:949:1: switch_labels : ( switch_label )+ ;
	[GrammarRule("switch_labels")]
	private Antlr3AstNode switch_labels()
	{
		EnterRule_switch_labels();
		EnterRule("switch_labels", 270);
		var retval = new Antlr3AstNode("switch_labels");
		
		retval.Start = (IToken)input.LT(1);
		int switch_labels_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode switch_label965 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "switch_labels");
		DebugLocation(949, 15);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 270)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:949:14: ( ( switch_label )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:950:2: ( switch_label )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(950, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:950:2: ( switch_label )+
			int cnt253=0;
			try { DebugEnterSubRule(253);
			while (true)
			{
				int alt253=2;
				try { DebugEnterDecision(253, false);
				int LA253_1 = input.LA(1);

				if ((LA253_1==115))
				{
					int LA253_2 = input.LA(2);

					if ((LA253_2==79))
					{
						alt253 = 1;
					}


				}
				else if ((LA253_1==107))
				{
					alt253 = 1;
				}


				} finally { DebugExitDecision(253); }
				switch (alt253)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:950:2: switch_label
					{
					DebugLocation(950, 2);
					PushFollow(Follow._switch_label_in_switch_labels6952);
					switch_label965=switch_label();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, switch_label965.Tree, switch_label965, retval);

					}
					break;

				default:
					if (cnt253 >= 1)
						goto loop253;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee253 = new EarlyExitException( 253, input );
					DebugRecognitionException(eee253);
					throw eee253;
				}
				cnt253++;
			}
			loop253:
				;

			} finally { DebugExitSubRule(253); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("switch_labels", 270);
			LeaveRule("switch_labels", 270);
			LeaveRule_switch_labels();
			if (state.backtracking > 0) { Memoize(input, 270, switch_labels_StartIndex); }

		}
		DebugLocation(950, 15);
		} finally { DebugExitRule(GrammarFileName, "switch_labels"); }
		return retval;

	}
	// $ANTLR end "switch_labels"

	partial void EnterRule_switch_label();
	partial void LeaveRule_switch_label();
	// $ANTLR start "switch_label"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:951:1: switch_label : ( ( 'case' constant_expression ':' ) | ( 'default' ':' ) );
	[GrammarRule("switch_label")]
	private Antlr3AstNode switch_label()
	{
		EnterRule_switch_label();
		EnterRule("switch_label", 271);
		var retval = new Antlr3AstNode("switch_label");
		
		retval.Start = (IToken)input.LT(1);
		int switch_label_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal966 = default(IToken);
		IToken char_literal968 = default(IToken);
		IToken string_literal969 = default(IToken);
		IToken char_literal970 = default(IToken);
		Antlr3AstNode constant_expression967 = default(Antlr3AstNode);

		object string_literal966_tree = default(object);
		object char_literal968_tree = default(object);
		object string_literal969_tree = default(object);
		object char_literal970_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "switch_label");
		DebugLocation(951, 21);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 271)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:951:13: ( ( 'case' constant_expression ':' ) | ( 'default' ':' ) )
			int alt254=2;
			try { DebugEnterDecision(254, false);
			int LA254_1 = input.LA(1);

			if ((LA254_1==107))
			{
				alt254 = 1;
			}
			else if ((LA254_1==115))
			{
				alt254 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 254, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(254); }
			switch (alt254)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:952:2: ( 'case' constant_expression ':' )
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(952, 2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:952:2: ( 'case' constant_expression ':' )
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:952:3: 'case' constant_expression ':'
				{
				DebugLocation(952, 3);
				string_literal966=(IToken)Match(input,107,Follow._107_in_switch_label6962); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal966_tree = (object)adaptor.Create(string_literal966, retval);
				adaptor.AddChild(root_0, string_literal966_tree);
				}
				DebugLocation(952, 12);
				PushFollow(Follow._constant_expression_in_switch_label6966);
				constant_expression967=constant_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constant_expression967.Tree, constant_expression967, retval);
				DebugLocation(952, 34);
				char_literal968=(IToken)Match(input,79,Follow._79_in_switch_label6970); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal968_tree = (object)adaptor.Create(char_literal968, retval);
				adaptor.AddChild(root_0, char_literal968_tree);
				}

				}


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:953:4: ( 'default' ':' )
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(953, 4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:953:4: ( 'default' ':' )
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:953:5: 'default' ':'
				{
				DebugLocation(953, 5);
				string_literal969=(IToken)Match(input,115,Follow._115_in_switch_label6977); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal969_tree = (object)adaptor.Create(string_literal969, retval);
				adaptor.AddChild(root_0, string_literal969_tree);
				}
				DebugLocation(953, 17);
				char_literal970=(IToken)Match(input,79,Follow._79_in_switch_label6981); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal970_tree = (object)adaptor.Create(char_literal970, retval);
				adaptor.AddChild(root_0, char_literal970_tree);
				}

				}


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("switch_label", 271);
			LeaveRule("switch_label", 271);
			LeaveRule_switch_label();
			if (state.backtracking > 0) { Memoize(input, 271, switch_label_StartIndex); }

		}
		DebugLocation(953, 21);
		} finally { DebugExitRule(GrammarFileName, "switch_label"); }
		return retval;

	}
	// $ANTLR end "switch_label"

	partial void EnterRule_iteration_statement();
	partial void LeaveRule_iteration_statement();
	// $ANTLR start "iteration_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:954:1: iteration_statement : ( while_statement | do_statement | for_statement | foreach_statement );
	[GrammarRule("iteration_statement")]
	private Antlr3AstNode iteration_statement()
	{
		EnterRule_iteration_statement();
		EnterRule("iteration_statement", 272);
		var retval = new Antlr3AstNode("iteration_statement");
		
		retval.Start = (IToken)input.LT(1);
		int iteration_statement_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode while_statement971 = default(Antlr3AstNode);
		Antlr3AstNode do_statement972 = default(Antlr3AstNode);
		Antlr3AstNode for_statement973 = default(Antlr3AstNode);
		Antlr3AstNode foreach_statement974 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "iteration_statement");
		DebugLocation(954, 21);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 272)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:954:20: ( while_statement | do_statement | for_statement | foreach_statement )
			int alt255=4;
			try { DebugEnterDecision(255, false);
			switch (input.LA(1))
			{
			case 195:
				{
				alt255 = 1;
				}
				break;
			case 118:
				{
				alt255 = 2;
				}
				break;
			case 130:
				{
				alt255 = 3;
				}
				break;
			case 131:
				{
				alt255 = 4;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 255, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(255); }
			switch (alt255)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:955:2: while_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(955, 2);
				PushFollow(Follow._while_statement_in_iteration_statement6990);
				while_statement971=while_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, while_statement971.Tree, while_statement971, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:956:4: do_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(956, 4);
				PushFollow(Follow._do_statement_in_iteration_statement6995);
				do_statement972=do_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, do_statement972.Tree, do_statement972, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:957:4: for_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(957, 4);
				PushFollow(Follow._for_statement_in_iteration_statement7000);
				for_statement973=for_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, for_statement973.Tree, for_statement973, retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:958:4: foreach_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(958, 4);
				PushFollow(Follow._foreach_statement_in_iteration_statement7005);
				foreach_statement974=foreach_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, foreach_statement974.Tree, foreach_statement974, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("iteration_statement", 272);
			LeaveRule("iteration_statement", 272);
			LeaveRule_iteration_statement();
			if (state.backtracking > 0) { Memoize(input, 272, iteration_statement_StartIndex); }

		}
		DebugLocation(958, 21);
		} finally { DebugExitRule(GrammarFileName, "iteration_statement"); }
		return retval;

	}
	// $ANTLR end "iteration_statement"

	partial void EnterRule_while_statement();
	partial void LeaveRule_while_statement();
	// $ANTLR start "while_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:959:1: while_statement : 'while' '(' boolean_expression ')' embedded_statement ;
	[GrammarRule("while_statement")]
	private Antlr3AstNode while_statement()
	{
		EnterRule_while_statement();
		EnterRule("while_statement", 273);
		var retval = new Antlr3AstNode("while_statement");
		
		retval.Start = (IToken)input.LT(1);
		int while_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal975 = default(IToken);
		IToken char_literal976 = default(IToken);
		IToken char_literal978 = default(IToken);
		Antlr3AstNode boolean_expression977 = default(Antlr3AstNode);
		Antlr3AstNode embedded_statement979 = default(Antlr3AstNode);

		object string_literal975_tree = default(object);
		object char_literal976_tree = default(object);
		object char_literal978_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "while_statement");
		DebugLocation(959, 63);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 273)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:959:16: ( 'while' '(' boolean_expression ')' embedded_statement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:960:2: 'while' '(' boolean_expression ')' embedded_statement
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(960, 2);
			string_literal975=(IToken)Match(input,195,Follow._195_in_while_statement7013); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal975_tree = (object)adaptor.Create(string_literal975, retval);
			adaptor.AddChild(root_0, string_literal975_tree);
			}
			DebugLocation(960, 12);
			char_literal976=(IToken)Match(input,68,Follow._68_in_while_statement7017); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal976_tree = (object)adaptor.Create(char_literal976, retval);
			adaptor.AddChild(root_0, char_literal976_tree);
			}
			DebugLocation(960, 18);
			PushFollow(Follow._boolean_expression_in_while_statement7021);
			boolean_expression977=boolean_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, boolean_expression977.Tree, boolean_expression977, retval);
			DebugLocation(960, 39);
			char_literal978=(IToken)Match(input,RPAREN,Follow._RPAREN_in_while_statement7025); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal978_tree = (object)adaptor.Create(char_literal978, retval);
			adaptor.AddChild(root_0, char_literal978_tree);
			}
			DebugLocation(960, 45);
			PushFollow(Follow._embedded_statement_in_while_statement7029);
			embedded_statement979=embedded_statement();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, embedded_statement979.Tree, embedded_statement979, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("while_statement", 273);
			LeaveRule("while_statement", 273);
			LeaveRule_while_statement();
			if (state.backtracking > 0) { Memoize(input, 273, while_statement_StartIndex); }

		}
		DebugLocation(960, 63);
		} finally { DebugExitRule(GrammarFileName, "while_statement"); }
		return retval;

	}
	// $ANTLR end "while_statement"

	partial void EnterRule_do_statement();
	partial void LeaveRule_do_statement();
	// $ANTLR start "do_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:961:1: do_statement : 'do' embedded_statement 'while' '(' boolean_expression ')' ';' ;
	[GrammarRule("do_statement")]
	private Antlr3AstNode do_statement()
	{
		EnterRule_do_statement();
		EnterRule("do_statement", 274);
		var retval = new Antlr3AstNode("do_statement");
		
		retval.Start = (IToken)input.LT(1);
		int do_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal980 = default(IToken);
		IToken string_literal982 = default(IToken);
		IToken char_literal983 = default(IToken);
		IToken char_literal985 = default(IToken);
		IToken char_literal986 = default(IToken);
		Antlr3AstNode embedded_statement981 = default(Antlr3AstNode);
		Antlr3AstNode boolean_expression984 = default(Antlr3AstNode);

		object string_literal980_tree = default(object);
		object string_literal982_tree = default(object);
		object char_literal983_tree = default(object);
		object char_literal985_tree = default(object);
		object char_literal986_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "do_statement");
		DebugLocation(961, 76);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 274)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:961:13: ( 'do' embedded_statement 'while' '(' boolean_expression ')' ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:962:2: 'do' embedded_statement 'while' '(' boolean_expression ')' ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(962, 2);
			string_literal980=(IToken)Match(input,118,Follow._118_in_do_statement7037); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal980_tree = (object)adaptor.Create(string_literal980, retval);
			adaptor.AddChild(root_0, string_literal980_tree);
			}
			DebugLocation(962, 9);
			PushFollow(Follow._embedded_statement_in_do_statement7041);
			embedded_statement981=embedded_statement();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, embedded_statement981.Tree, embedded_statement981, retval);
			DebugLocation(962, 30);
			string_literal982=(IToken)Match(input,195,Follow._195_in_do_statement7045); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal982_tree = (object)adaptor.Create(string_literal982, retval);
			adaptor.AddChild(root_0, string_literal982_tree);
			}
			DebugLocation(962, 40);
			char_literal983=(IToken)Match(input,68,Follow._68_in_do_statement7049); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal983_tree = (object)adaptor.Create(char_literal983, retval);
			adaptor.AddChild(root_0, char_literal983_tree);
			}
			DebugLocation(962, 46);
			PushFollow(Follow._boolean_expression_in_do_statement7053);
			boolean_expression984=boolean_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, boolean_expression984.Tree, boolean_expression984, retval);
			DebugLocation(962, 67);
			char_literal985=(IToken)Match(input,RPAREN,Follow._RPAREN_in_do_statement7057); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal985_tree = (object)adaptor.Create(char_literal985, retval);
			adaptor.AddChild(root_0, char_literal985_tree);
			}
			DebugLocation(962, 73);
			char_literal986=(IToken)Match(input,SEMI,Follow._SEMI_in_do_statement7061); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal986_tree = (object)adaptor.Create(char_literal986, retval);
			adaptor.AddChild(root_0, char_literal986_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("do_statement", 274);
			LeaveRule("do_statement", 274);
			LeaveRule_do_statement();
			if (state.backtracking > 0) { Memoize(input, 274, do_statement_StartIndex); }

		}
		DebugLocation(962, 76);
		} finally { DebugExitRule(GrammarFileName, "do_statement"); }
		return retval;

	}
	// $ANTLR end "do_statement"

	partial void EnterRule_for_statement();
	partial void LeaveRule_for_statement();
	// $ANTLR start "for_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:963:1: for_statement : 'for' '(' ( for_initializer )? ';' ( for_condition )? ';' ( for_iterator )? ')' embedded_statement ;
	[GrammarRule("for_statement")]
	private Antlr3AstNode for_statement()
	{
		EnterRule_for_statement();
		EnterRule("for_statement", 275);
		var retval = new Antlr3AstNode("for_statement");
		
		retval.Start = (IToken)input.LT(1);
		int for_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal987 = default(IToken);
		IToken char_literal988 = default(IToken);
		IToken char_literal990 = default(IToken);
		IToken char_literal992 = default(IToken);
		IToken char_literal994 = default(IToken);
		Antlr3AstNode for_initializer989 = default(Antlr3AstNode);
		Antlr3AstNode for_condition991 = default(Antlr3AstNode);
		Antlr3AstNode for_iterator993 = default(Antlr3AstNode);
		Antlr3AstNode embedded_statement995 = default(Antlr3AstNode);

		object string_literal987_tree = default(object);
		object char_literal988_tree = default(object);
		object char_literal990_tree = default(object);
		object char_literal992_tree = default(object);
		object char_literal994_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "for_statement");
		DebugLocation(963, 104);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 275)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:963:14: ( 'for' '(' ( for_initializer )? ';' ( for_condition )? ';' ( for_iterator )? ')' embedded_statement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:964:2: 'for' '(' ( for_initializer )? ';' ( for_condition )? ';' ( for_iterator )? ')' embedded_statement
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(964, 2);
			string_literal987=(IToken)Match(input,130,Follow._130_in_for_statement7069); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal987_tree = (object)adaptor.Create(string_literal987, retval);
			adaptor.AddChild(root_0, string_literal987_tree);
			}
			DebugLocation(964, 10);
			char_literal988=(IToken)Match(input,68,Follow._68_in_for_statement7073); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal988_tree = (object)adaptor.Create(char_literal988, retval);
			adaptor.AddChild(root_0, char_literal988_tree);
			}
			DebugLocation(964, 16);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:964:16: ( for_initializer )?
			int alt256=2;
			try { DebugEnterSubRule(256);
			try { DebugEnterDecision(256, false);
			int LA256_1 = input.LA(1);

			if ((LA256_1==Character_literal||LA256_1==FALSE||(LA256_1>=Hex_number && LA256_1<=IDENTIFIER)||(LA256_1>=MINUS && LA256_1<=NUMBER)||LA256_1==Real_literal||LA256_1==STRINGLITERAL||LA256_1==TRUE||LA256_1==Verbatim_string_literal||LA256_1==61||LA256_1==66||(LA256_1>=68 && LA256_1<=69)||(LA256_1>=71 && LA256_1<=72)||LA256_1==75||LA256_1==95||(LA256_1>=97 && LA256_1<=98)||(LA256_1>=100 && LA256_1<=103)||(LA256_1>=105 && LA256_1<=106)||(LA256_1>=109 && LA256_1<=110)||(LA256_1>=114 && LA256_1<=117)||(LA256_1>=119 && LA256_1<=120)||LA256_1==122||LA256_1==126||LA256_1==129||LA256_1==132||LA256_1==135||LA256_1==138||LA256_1==141||(LA256_1>=143 && LA256_1<=144)||(LA256_1>=146 && LA256_1<=148)||(LA256_1>=150 && LA256_1<=152)||LA256_1==154||LA256_1==157||LA256_1==160||LA256_1==162||LA256_1==167||LA256_1==169||(LA256_1>=171 && LA256_1<=174)||LA256_1==177||LA256_1==180||(LA256_1>=183 && LA256_1<=187)||(LA256_1>=189 && LA256_1<=190)||LA256_1==192||LA256_1==194||LA256_1==196||LA256_1==202))
			{
				alt256 = 1;
			}
			} finally { DebugExitDecision(256); }
			switch (alt256)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:964:16: for_initializer
				{
				DebugLocation(964, 16);
				PushFollow(Follow._for_initializer_in_for_statement7077);
				for_initializer989=for_initializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, for_initializer989.Tree, for_initializer989, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(256); }

			DebugLocation(964, 35);
			char_literal990=(IToken)Match(input,SEMI,Follow._SEMI_in_for_statement7082); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal990_tree = (object)adaptor.Create(char_literal990, retval);
			adaptor.AddChild(root_0, char_literal990_tree);
			}
			DebugLocation(964, 41);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:964:41: ( for_condition )?
			int alt257=2;
			try { DebugEnterSubRule(257);
			try { DebugEnterDecision(257, false);
			int LA257_1 = input.LA(1);

			if ((LA257_1==Character_literal||LA257_1==FALSE||(LA257_1>=Hex_number && LA257_1<=IDENTIFIER)||(LA257_1>=MINUS && LA257_1<=NUMBER)||LA257_1==Real_literal||LA257_1==STRINGLITERAL||LA257_1==TRUE||LA257_1==Verbatim_string_literal||LA257_1==61||LA257_1==66||(LA257_1>=68 && LA257_1<=69)||(LA257_1>=71 && LA257_1<=72)||LA257_1==75||LA257_1==95||(LA257_1>=97 && LA257_1<=98)||(LA257_1>=100 && LA257_1<=103)||(LA257_1>=105 && LA257_1<=106)||(LA257_1>=109 && LA257_1<=110)||(LA257_1>=114 && LA257_1<=117)||(LA257_1>=119 && LA257_1<=120)||LA257_1==122||LA257_1==126||LA257_1==129||LA257_1==132||LA257_1==135||LA257_1==138||LA257_1==141||(LA257_1>=143 && LA257_1<=144)||(LA257_1>=146 && LA257_1<=148)||(LA257_1>=150 && LA257_1<=152)||LA257_1==154||LA257_1==157||LA257_1==160||LA257_1==162||LA257_1==167||LA257_1==169||(LA257_1>=171 && LA257_1<=174)||LA257_1==177||LA257_1==180||(LA257_1>=183 && LA257_1<=187)||(LA257_1>=189 && LA257_1<=190)||LA257_1==194||LA257_1==196||LA257_1==202))
			{
				alt257 = 1;
			}
			} finally { DebugExitDecision(257); }
			switch (alt257)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:964:41: for_condition
				{
				DebugLocation(964, 41);
				PushFollow(Follow._for_condition_in_for_statement7086);
				for_condition991=for_condition();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, for_condition991.Tree, for_condition991, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(257); }

			DebugLocation(964, 58);
			char_literal992=(IToken)Match(input,SEMI,Follow._SEMI_in_for_statement7091); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal992_tree = (object)adaptor.Create(char_literal992, retval);
			adaptor.AddChild(root_0, char_literal992_tree);
			}
			DebugLocation(964, 64);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:964:64: ( for_iterator )?
			int alt258=2;
			try { DebugEnterSubRule(258);
			try { DebugEnterDecision(258, false);
			int LA258_1 = input.LA(1);

			if ((LA258_1==Character_literal||LA258_1==FALSE||(LA258_1>=Hex_number && LA258_1<=IDENTIFIER)||(LA258_1>=MINUS && LA258_1<=NUMBER)||LA258_1==Real_literal||LA258_1==STRINGLITERAL||LA258_1==TRUE||LA258_1==Verbatim_string_literal||LA258_1==61||LA258_1==66||(LA258_1>=68 && LA258_1<=69)||(LA258_1>=71 && LA258_1<=72)||LA258_1==75||LA258_1==95||(LA258_1>=97 && LA258_1<=98)||(LA258_1>=100 && LA258_1<=103)||(LA258_1>=105 && LA258_1<=106)||(LA258_1>=109 && LA258_1<=110)||(LA258_1>=114 && LA258_1<=117)||(LA258_1>=119 && LA258_1<=120)||LA258_1==122||LA258_1==126||LA258_1==129||LA258_1==132||LA258_1==135||LA258_1==138||LA258_1==141||(LA258_1>=143 && LA258_1<=144)||(LA258_1>=146 && LA258_1<=148)||(LA258_1>=150 && LA258_1<=152)||LA258_1==154||LA258_1==157||LA258_1==160||LA258_1==162||LA258_1==167||LA258_1==169||(LA258_1>=171 && LA258_1<=174)||LA258_1==177||LA258_1==180||(LA258_1>=183 && LA258_1<=187)||(LA258_1>=189 && LA258_1<=190)||LA258_1==194||LA258_1==196||LA258_1==202))
			{
				alt258 = 1;
			}
			} finally { DebugExitDecision(258); }
			switch (alt258)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:964:64: for_iterator
				{
				DebugLocation(964, 64);
				PushFollow(Follow._for_iterator_in_for_statement7095);
				for_iterator993=for_iterator();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, for_iterator993.Tree, for_iterator993, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(258); }

			DebugLocation(964, 80);
			char_literal994=(IToken)Match(input,RPAREN,Follow._RPAREN_in_for_statement7100); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal994_tree = (object)adaptor.Create(char_literal994, retval);
			adaptor.AddChild(root_0, char_literal994_tree);
			}
			DebugLocation(964, 86);
			PushFollow(Follow._embedded_statement_in_for_statement7104);
			embedded_statement995=embedded_statement();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, embedded_statement995.Tree, embedded_statement995, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("for_statement", 275);
			LeaveRule("for_statement", 275);
			LeaveRule_for_statement();
			if (state.backtracking > 0) { Memoize(input, 275, for_statement_StartIndex); }

		}
		DebugLocation(964, 104);
		} finally { DebugExitRule(GrammarFileName, "for_statement"); }
		return retval;

	}
	// $ANTLR end "for_statement"

	partial void EnterRule_for_initializer();
	partial void LeaveRule_for_initializer();
	// $ANTLR start "for_initializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:965:1: for_initializer : ( ( local_variable_declaration )=> local_variable_declaration | statement_expression_list );
	[GrammarRule("for_initializer")]
	private Antlr3AstNode for_initializer()
	{
		EnterRule_for_initializer();
		EnterRule("for_initializer", 276);
		var retval = new Antlr3AstNode("for_initializer");
		
		retval.Start = (IToken)input.LT(1);
		int for_initializer_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode local_variable_declaration996 = default(Antlr3AstNode);
		Antlr3AstNode statement_expression_list997 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "for_initializer");
		DebugLocation(965, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 276)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:965:16: ( ( local_variable_declaration )=> local_variable_declaration | statement_expression_list )
			int alt259=2;
			try { DebugEnterDecision(259, false);
			int LA259_1 = input.LA(1);

			if ((LA259_1==190))
			{
				int LA259_2 = input.LA(2);

				if ((EvaluatePredicate(synpred38_cs_fragment)))
				{
					alt259 = 1;
				}
				else if ((true))
				{
					alt259 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 259, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA259_1==120))
			{
				int LA259_2 = input.LA(2);

				if ((EvaluatePredicate(synpred38_cs_fragment)))
				{
					alt259 = 1;
				}
				else if ((true))
				{
					alt259 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 259, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA259_1==103||LA259_1==106||LA259_1==109||LA259_1==114||LA259_1==119||LA259_1==129||LA259_1==138||LA259_1==146||LA259_1==151||LA259_1==169||LA259_1==173||LA259_1==177||(LA259_1>=185 && LA259_1<=186)||LA259_1==189))
			{
				int LA259_2 = input.LA(2);

				if ((EvaluatePredicate(synpred38_cs_fragment)))
				{
					alt259 = 1;
				}
				else if ((true))
				{
					alt259 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 259, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA259_1==132))
			{
				int LA259_2 = input.LA(2);

				if ((EvaluatePredicate(synpred38_cs_fragment)))
				{
					alt259 = 1;
				}
				else if ((true))
				{
					alt259 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 259, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA259_1==192) && (EvaluatePredicate(synpred38_cs_fragment)))
			{
				alt259 = 1;
			}
			else if ((LA259_1==Character_literal||LA259_1==FALSE||LA259_1==Hex_number||(LA259_1>=MINUS && LA259_1<=NUMBER)||LA259_1==Real_literal||LA259_1==STRINGLITERAL||LA259_1==TRUE||LA259_1==Verbatim_string_literal||LA259_1==61||LA259_1==66||(LA259_1>=68 && LA259_1<=69)||(LA259_1>=71 && LA259_1<=72)||LA259_1==75||LA259_1==102||LA259_1==110||(LA259_1>=115 && LA259_1<=116)||LA259_1==150||LA259_1==174||LA259_1==180||LA259_1==184||LA259_1==187||LA259_1==202))
			{
				alt259 = 2;
			}
			else if ((LA259_1==IDENTIFIER||LA259_1==95||(LA259_1>=97 && LA259_1<=98)||(LA259_1>=100 && LA259_1<=101)||LA259_1==105||LA259_1==117||LA259_1==122||LA259_1==126||LA259_1==135||LA259_1==141||(LA259_1>=143 && LA259_1<=144)||(LA259_1>=147 && LA259_1<=148)||LA259_1==152||LA259_1==154||LA259_1==157||LA259_1==160||LA259_1==162||LA259_1==167||(LA259_1>=171 && LA259_1<=172)||LA259_1==183||LA259_1==194||LA259_1==196))
			{
				int LA259_2 = input.LA(2);

				if ((EvaluatePredicate(synpred38_cs_fragment)))
				{
					alt259 = 1;
				}
				else if ((true))
				{
					alt259 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 259, 25, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 259, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(259); }
			switch (alt259)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:966:2: ( local_variable_declaration )=> local_variable_declaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(966, 34);
				PushFollow(Follow._local_variable_declaration_in_for_initializer7118);
				local_variable_declaration996=local_variable_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, local_variable_declaration996.Tree, local_variable_declaration996, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:967:4: statement_expression_list
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(967, 4);
				PushFollow(Follow._statement_expression_list_in_for_initializer7123);
				statement_expression_list997=statement_expression_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, statement_expression_list997.Tree, statement_expression_list997, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("for_initializer", 276);
			LeaveRule("for_initializer", 276);
			LeaveRule_for_initializer();
			if (state.backtracking > 0) { Memoize(input, 276, for_initializer_StartIndex); }

		}
		DebugLocation(968, 1);
		} finally { DebugExitRule(GrammarFileName, "for_initializer"); }
		return retval;

	}
	// $ANTLR end "for_initializer"

	partial void EnterRule_for_condition();
	partial void LeaveRule_for_condition();
	// $ANTLR start "for_condition"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:969:1: for_condition : boolean_expression ;
	[GrammarRule("for_condition")]
	private Antlr3AstNode for_condition()
	{
		EnterRule_for_condition();
		EnterRule("for_condition", 277);
		var retval = new Antlr3AstNode("for_condition");
		
		retval.Start = (IToken)input.LT(1);
		int for_condition_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode boolean_expression998 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "for_condition");
		DebugLocation(969, 20);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 277)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:969:14: ( boolean_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:970:2: boolean_expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(970, 2);
			PushFollow(Follow._boolean_expression_in_for_condition7133);
			boolean_expression998=boolean_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, boolean_expression998.Tree, boolean_expression998, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("for_condition", 277);
			LeaveRule("for_condition", 277);
			LeaveRule_for_condition();
			if (state.backtracking > 0) { Memoize(input, 277, for_condition_StartIndex); }

		}
		DebugLocation(970, 20);
		} finally { DebugExitRule(GrammarFileName, "for_condition"); }
		return retval;

	}
	// $ANTLR end "for_condition"

	partial void EnterRule_for_iterator();
	partial void LeaveRule_for_iterator();
	// $ANTLR start "for_iterator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:971:1: for_iterator : statement_expression_list ;
	[GrammarRule("for_iterator")]
	private Antlr3AstNode for_iterator()
	{
		EnterRule_for_iterator();
		EnterRule("for_iterator", 278);
		var retval = new Antlr3AstNode("for_iterator");
		
		retval.Start = (IToken)input.LT(1);
		int for_iterator_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode statement_expression_list999 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "for_iterator");
		DebugLocation(971, 27);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 278)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:971:13: ( statement_expression_list )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:972:2: statement_expression_list
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(972, 2);
			PushFollow(Follow._statement_expression_list_in_for_iterator7141);
			statement_expression_list999=statement_expression_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, statement_expression_list999.Tree, statement_expression_list999, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("for_iterator", 278);
			LeaveRule("for_iterator", 278);
			LeaveRule_for_iterator();
			if (state.backtracking > 0) { Memoize(input, 278, for_iterator_StartIndex); }

		}
		DebugLocation(972, 27);
		} finally { DebugExitRule(GrammarFileName, "for_iterator"); }
		return retval;

	}
	// $ANTLR end "for_iterator"

	partial void EnterRule_statement_expression_list();
	partial void LeaveRule_statement_expression_list();
	// $ANTLR start "statement_expression_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:973:1: statement_expression_list : statement_expression ( ',' statement_expression )* ;
	[GrammarRule("statement_expression_list")]
	private Antlr3AstNode statement_expression_list()
	{
		EnterRule_statement_expression_list();
		EnterRule("statement_expression_list", 279);
		var retval = new Antlr3AstNode("statement_expression_list");
		
		retval.Start = (IToken)input.LT(1);
		int statement_expression_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal1001 = default(IToken);
		Antlr3AstNode statement_expression1000 = default(Antlr3AstNode);
		Antlr3AstNode statement_expression1002 = default(Antlr3AstNode);

		object char_literal1001_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "statement_expression_list");
		DebugLocation(973, 50);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 279)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:973:26: ( statement_expression ( ',' statement_expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:974:2: statement_expression ( ',' statement_expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(974, 2);
			PushFollow(Follow._statement_expression_in_statement_expression_list7149);
			statement_expression1000=statement_expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, statement_expression1000.Tree, statement_expression1000, retval);
			DebugLocation(974, 23);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:974:23: ( ',' statement_expression )*
			try { DebugEnterSubRule(260);
			while (true)
			{
				int alt260=2;
				try { DebugEnterDecision(260, false);
				int LA260_1 = input.LA(1);

				if ((LA260_1==74))
				{
					alt260 = 1;
				}


				} finally { DebugExitDecision(260); }
				switch ( alt260 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:974:24: ',' statement_expression
					{
					DebugLocation(974, 24);
					char_literal1001=(IToken)Match(input,74,Follow._74_in_statement_expression_list7152); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal1001_tree = (object)adaptor.Create(char_literal1001, retval);
					adaptor.AddChild(root_0, char_literal1001_tree);
					}
					DebugLocation(974, 28);
					PushFollow(Follow._statement_expression_in_statement_expression_list7154);
					statement_expression1002=statement_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, statement_expression1002.Tree, statement_expression1002, retval);

					}
					break;

				default:
					goto loop260;
				}
			}

			loop260:
				;

			} finally { DebugExitSubRule(260); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("statement_expression_list", 279);
			LeaveRule("statement_expression_list", 279);
			LeaveRule_statement_expression_list();
			if (state.backtracking > 0) { Memoize(input, 279, statement_expression_list_StartIndex); }

		}
		DebugLocation(974, 50);
		} finally { DebugExitRule(GrammarFileName, "statement_expression_list"); }
		return retval;

	}
	// $ANTLR end "statement_expression_list"

	partial void EnterRule_foreach_statement();
	partial void LeaveRule_foreach_statement();
	// $ANTLR start "foreach_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:975:1: foreach_statement : 'foreach' '(' local_variable_type identifier 'in' expression ')' embedded_statement ;
	[GrammarRule("foreach_statement")]
	private Antlr3AstNode foreach_statement()
	{
		EnterRule_foreach_statement();
		EnterRule("foreach_statement", 280);
		var retval = new Antlr3AstNode("foreach_statement");
		
		retval.Start = (IToken)input.LT(1);
		int foreach_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1003 = default(IToken);
		IToken char_literal1004 = default(IToken);
		IToken string_literal1007 = default(IToken);
		IToken char_literal1009 = default(IToken);
		Antlr3AstNode local_variable_type1005 = default(Antlr3AstNode);
		Antlr3AstNode identifier1006 = default(Antlr3AstNode);
		Antlr3AstNode expression1008 = default(Antlr3AstNode);
		Antlr3AstNode embedded_statement1010 = default(Antlr3AstNode);

		object string_literal1003_tree = default(object);
		object char_literal1004_tree = default(object);
		object string_literal1007_tree = default(object);
		object char_literal1009_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "foreach_statement");
		DebugLocation(975, 99);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 280)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:975:18: ( 'foreach' '(' local_variable_type identifier 'in' expression ')' embedded_statement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:976:2: 'foreach' '(' local_variable_type identifier 'in' expression ')' embedded_statement
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(976, 2);
			string_literal1003=(IToken)Match(input,131,Follow._131_in_foreach_statement7164); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1003_tree = (object)adaptor.Create(string_literal1003, retval);
			adaptor.AddChild(root_0, string_literal1003_tree);
			}
			DebugLocation(976, 14);
			char_literal1004=(IToken)Match(input,68,Follow._68_in_foreach_statement7168); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1004_tree = (object)adaptor.Create(char_literal1004, retval);
			adaptor.AddChild(root_0, char_literal1004_tree);
			}
			DebugLocation(976, 20);
			PushFollow(Follow._local_variable_type_in_foreach_statement7172);
			local_variable_type1005=local_variable_type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, local_variable_type1005.Tree, local_variable_type1005, retval);
			DebugLocation(976, 42);
			PushFollow(Follow._identifier_in_foreach_statement7176);
			identifier1006=identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, identifier1006.Tree, identifier1006, retval);
			DebugLocation(976, 55);
			string_literal1007=(IToken)Match(input,137,Follow._137_in_foreach_statement7180); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1007_tree = (object)adaptor.Create(string_literal1007, retval);
			adaptor.AddChild(root_0, string_literal1007_tree);
			}
			DebugLocation(976, 62);
			PushFollow(Follow._expression_in_foreach_statement7184);
			expression1008=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression1008.Tree, expression1008, retval);
			DebugLocation(976, 75);
			char_literal1009=(IToken)Match(input,RPAREN,Follow._RPAREN_in_foreach_statement7188); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1009_tree = (object)adaptor.Create(char_literal1009, retval);
			adaptor.AddChild(root_0, char_literal1009_tree);
			}
			DebugLocation(976, 81);
			PushFollow(Follow._embedded_statement_in_foreach_statement7192);
			embedded_statement1010=embedded_statement();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, embedded_statement1010.Tree, embedded_statement1010, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("foreach_statement", 280);
			LeaveRule("foreach_statement", 280);
			LeaveRule_foreach_statement();
			if (state.backtracking > 0) { Memoize(input, 280, foreach_statement_StartIndex); }

		}
		DebugLocation(976, 99);
		} finally { DebugExitRule(GrammarFileName, "foreach_statement"); }
		return retval;

	}
	// $ANTLR end "foreach_statement"

	partial void EnterRule_jump_statement();
	partial void LeaveRule_jump_statement();
	// $ANTLR start "jump_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:977:1: jump_statement : ( break_statement | continue_statement | goto_statement | return_statement | throw_statement );
	[GrammarRule("jump_statement")]
	private Antlr3AstNode jump_statement()
	{
		EnterRule_jump_statement();
		EnterRule("jump_statement", 281);
		var retval = new Antlr3AstNode("jump_statement");
		
		retval.Start = (IToken)input.LT(1);
		int jump_statement_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode break_statement1011 = default(Antlr3AstNode);
		Antlr3AstNode continue_statement1012 = default(Antlr3AstNode);
		Antlr3AstNode goto_statement1013 = default(Antlr3AstNode);
		Antlr3AstNode return_statement1014 = default(Antlr3AstNode);
		Antlr3AstNode throw_statement1015 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "jump_statement");
		DebugLocation(977, 19);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 281)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:977:15: ( break_statement | continue_statement | goto_statement | return_statement | throw_statement )
			int alt261=5;
			try { DebugEnterDecision(261, false);
			switch (input.LA(1))
			{
			case 104:
				{
				alt261 = 1;
				}
				break;
			case 113:
				{
				alt261 = 2;
				}
				break;
			case 134:
				{
				alt261 = 3;
				}
				break;
			case 168:
				{
				alt261 = 4;
				}
				break;
			case 181:
				{
				alt261 = 5;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 261, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(261); }
			switch (alt261)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:978:2: break_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(978, 2);
				PushFollow(Follow._break_statement_in_jump_statement7200);
				break_statement1011=break_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, break_statement1011.Tree, break_statement1011, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:979:4: continue_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(979, 4);
				PushFollow(Follow._continue_statement_in_jump_statement7205);
				continue_statement1012=continue_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, continue_statement1012.Tree, continue_statement1012, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:980:4: goto_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(980, 4);
				PushFollow(Follow._goto_statement_in_jump_statement7210);
				goto_statement1013=goto_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, goto_statement1013.Tree, goto_statement1013, retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:981:4: return_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(981, 4);
				PushFollow(Follow._return_statement_in_jump_statement7215);
				return_statement1014=return_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, return_statement1014.Tree, return_statement1014, retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:982:4: throw_statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(982, 4);
				PushFollow(Follow._throw_statement_in_jump_statement7220);
				throw_statement1015=throw_statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, throw_statement1015.Tree, throw_statement1015, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("jump_statement", 281);
			LeaveRule("jump_statement", 281);
			LeaveRule_jump_statement();
			if (state.backtracking > 0) { Memoize(input, 281, jump_statement_StartIndex); }

		}
		DebugLocation(982, 19);
		} finally { DebugExitRule(GrammarFileName, "jump_statement"); }
		return retval;

	}
	// $ANTLR end "jump_statement"

	partial void EnterRule_break_statement();
	partial void LeaveRule_break_statement();
	// $ANTLR start "break_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:983:1: break_statement : 'break' ';' ;
	[GrammarRule("break_statement")]
	private Antlr3AstNode break_statement()
	{
		EnterRule_break_statement();
		EnterRule("break_statement", 282);
		var retval = new Antlr3AstNode("break_statement");
		
		retval.Start = (IToken)input.LT(1);
		int break_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1016 = default(IToken);
		IToken char_literal1017 = default(IToken);

		object string_literal1016_tree = default(object);
		object char_literal1017_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "break_statement");
		DebugLocation(983, 15);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 282)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:983:16: ( 'break' ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:984:2: 'break' ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(984, 2);
			string_literal1016=(IToken)Match(input,104,Follow._104_in_break_statement7228); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1016_tree = (object)adaptor.Create(string_literal1016, retval);
			adaptor.AddChild(root_0, string_literal1016_tree);
			}
			DebugLocation(984, 12);
			char_literal1017=(IToken)Match(input,SEMI,Follow._SEMI_in_break_statement7232); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1017_tree = (object)adaptor.Create(char_literal1017, retval);
			adaptor.AddChild(root_0, char_literal1017_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("break_statement", 282);
			LeaveRule("break_statement", 282);
			LeaveRule_break_statement();
			if (state.backtracking > 0) { Memoize(input, 282, break_statement_StartIndex); }

		}
		DebugLocation(984, 15);
		} finally { DebugExitRule(GrammarFileName, "break_statement"); }
		return retval;

	}
	// $ANTLR end "break_statement"

	partial void EnterRule_continue_statement();
	partial void LeaveRule_continue_statement();
	// $ANTLR start "continue_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:985:1: continue_statement : 'continue' ';' ;
	[GrammarRule("continue_statement")]
	private Antlr3AstNode continue_statement()
	{
		EnterRule_continue_statement();
		EnterRule("continue_statement", 283);
		var retval = new Antlr3AstNode("continue_statement");
		
		retval.Start = (IToken)input.LT(1);
		int continue_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1018 = default(IToken);
		IToken char_literal1019 = default(IToken);

		object string_literal1018_tree = default(object);
		object char_literal1019_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "continue_statement");
		DebugLocation(985, 18);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 283)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:985:19: ( 'continue' ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:986:2: 'continue' ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(986, 2);
			string_literal1018=(IToken)Match(input,113,Follow._113_in_continue_statement7240); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1018_tree = (object)adaptor.Create(string_literal1018, retval);
			adaptor.AddChild(root_0, string_literal1018_tree);
			}
			DebugLocation(986, 15);
			char_literal1019=(IToken)Match(input,SEMI,Follow._SEMI_in_continue_statement7244); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1019_tree = (object)adaptor.Create(char_literal1019, retval);
			adaptor.AddChild(root_0, char_literal1019_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("continue_statement", 283);
			LeaveRule("continue_statement", 283);
			LeaveRule_continue_statement();
			if (state.backtracking > 0) { Memoize(input, 283, continue_statement_StartIndex); }

		}
		DebugLocation(986, 18);
		} finally { DebugExitRule(GrammarFileName, "continue_statement"); }
		return retval;

	}
	// $ANTLR end "continue_statement"

	partial void EnterRule_goto_statement();
	partial void LeaveRule_goto_statement();
	// $ANTLR start "goto_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:987:1: goto_statement : 'goto' ( identifier | 'case' constant_expression | 'default' ) ';' ;
	[GrammarRule("goto_statement")]
	private Antlr3AstNode goto_statement()
	{
		EnterRule_goto_statement();
		EnterRule("goto_statement", 284);
		var retval = new Antlr3AstNode("goto_statement");
		
		retval.Start = (IToken)input.LT(1);
		int goto_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1020 = default(IToken);
		IToken string_literal1022 = default(IToken);
		IToken string_literal1024 = default(IToken);
		IToken char_literal1025 = default(IToken);
		Antlr3AstNode identifier1021 = default(Antlr3AstNode);
		Antlr3AstNode constant_expression1023 = default(Antlr3AstNode);

		object string_literal1020_tree = default(object);
		object string_literal1022_tree = default(object);
		object string_literal1024_tree = default(object);
		object char_literal1025_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "goto_statement");
		DebugLocation(987, 23);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 284)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:987:15: ( 'goto' ( identifier | 'case' constant_expression | 'default' ) ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:988:2: 'goto' ( identifier | 'case' constant_expression | 'default' ) ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(988, 2);
			string_literal1020=(IToken)Match(input,134,Follow._134_in_goto_statement7252); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1020_tree = (object)adaptor.Create(string_literal1020, retval);
			adaptor.AddChild(root_0, string_literal1020_tree);
			}
			DebugLocation(988, 11);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:988:11: ( identifier | 'case' constant_expression | 'default' )
			int alt262=3;
			try { DebugEnterSubRule(262);
			try { DebugEnterDecision(262, false);
			switch (input.LA(1))
			{
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 132:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				alt262 = 1;
				}
				break;
			case 107:
				{
				alt262 = 2;
				}
				break;
			case 115:
				{
				alt262 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 262, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(262); }
			switch (alt262)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:988:13: identifier
				{
				DebugLocation(988, 13);
				PushFollow(Follow._identifier_in_goto_statement7258);
				identifier1021=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier1021.Tree, identifier1021, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:989:7: 'case' constant_expression
				{
				DebugLocation(989, 7);
				string_literal1022=(IToken)Match(input,107,Follow._107_in_goto_statement7266); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal1022_tree = (object)adaptor.Create(string_literal1022, retval);
				adaptor.AddChild(root_0, string_literal1022_tree);
				}
				DebugLocation(989, 16);
				PushFollow(Follow._constant_expression_in_goto_statement7270);
				constant_expression1023=constant_expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constant_expression1023.Tree, constant_expression1023, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:990:7: 'default'
				{
				DebugLocation(990, 7);
				string_literal1024=(IToken)Match(input,115,Follow._115_in_goto_statement7278); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal1024_tree = (object)adaptor.Create(string_literal1024, retval);
				adaptor.AddChild(root_0, string_literal1024_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(262); }

			DebugLocation(990, 20);
			char_literal1025=(IToken)Match(input,SEMI,Follow._SEMI_in_goto_statement7283); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1025_tree = (object)adaptor.Create(char_literal1025, retval);
			adaptor.AddChild(root_0, char_literal1025_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("goto_statement", 284);
			LeaveRule("goto_statement", 284);
			LeaveRule_goto_statement();
			if (state.backtracking > 0) { Memoize(input, 284, goto_statement_StartIndex); }

		}
		DebugLocation(990, 23);
		} finally { DebugExitRule(GrammarFileName, "goto_statement"); }
		return retval;

	}
	// $ANTLR end "goto_statement"

	partial void EnterRule_return_statement();
	partial void LeaveRule_return_statement();
	// $ANTLR start "return_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:991:1: return_statement : 'return' ( expression )? ';' ;
	[GrammarRule("return_statement")]
	private Antlr3AstNode return_statement()
	{
		EnterRule_return_statement();
		EnterRule("return_statement", 285);
		var retval = new Antlr3AstNode("return_statement");
		
		retval.Start = (IToken)input.LT(1);
		int return_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1026 = default(IToken);
		IToken char_literal1028 = default(IToken);
		Antlr3AstNode expression1027 = default(Antlr3AstNode);

		object string_literal1026_tree = default(object);
		object char_literal1028_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "return_statement");
		DebugLocation(991, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 285)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:991:17: ( 'return' ( expression )? ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:992:2: 'return' ( expression )? ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(992, 2);
			string_literal1026=(IToken)Match(input,168,Follow._168_in_return_statement7291); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1026_tree = (object)adaptor.Create(string_literal1026, retval);
			adaptor.AddChild(root_0, string_literal1026_tree);
			}
			DebugLocation(992, 13);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:992:13: ( expression )?
			int alt263=2;
			try { DebugEnterSubRule(263);
			try { DebugEnterDecision(263, false);
			int LA263_1 = input.LA(1);

			if ((LA263_1==Character_literal||LA263_1==FALSE||(LA263_1>=Hex_number && LA263_1<=IDENTIFIER)||(LA263_1>=MINUS && LA263_1<=NUMBER)||LA263_1==Real_literal||LA263_1==STRINGLITERAL||LA263_1==TRUE||LA263_1==Verbatim_string_literal||LA263_1==61||LA263_1==66||(LA263_1>=68 && LA263_1<=69)||(LA263_1>=71 && LA263_1<=72)||LA263_1==75||LA263_1==95||(LA263_1>=97 && LA263_1<=98)||(LA263_1>=100 && LA263_1<=103)||(LA263_1>=105 && LA263_1<=106)||(LA263_1>=109 && LA263_1<=110)||(LA263_1>=114 && LA263_1<=117)||(LA263_1>=119 && LA263_1<=120)||LA263_1==122||LA263_1==126||LA263_1==129||LA263_1==132||LA263_1==135||LA263_1==138||LA263_1==141||(LA263_1>=143 && LA263_1<=144)||(LA263_1>=146 && LA263_1<=148)||(LA263_1>=150 && LA263_1<=152)||LA263_1==154||LA263_1==157||LA263_1==160||LA263_1==162||LA263_1==167||LA263_1==169||(LA263_1>=171 && LA263_1<=174)||LA263_1==177||LA263_1==180||(LA263_1>=183 && LA263_1<=187)||(LA263_1>=189 && LA263_1<=190)||LA263_1==194||LA263_1==196||LA263_1==202))
			{
				alt263 = 1;
			}
			} finally { DebugExitDecision(263); }
			switch (alt263)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:992:13: expression
				{
				DebugLocation(992, 13);
				PushFollow(Follow._expression_in_return_statement7295);
				expression1027=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression1027.Tree, expression1027, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(263); }

			DebugLocation(992, 27);
			char_literal1028=(IToken)Match(input,SEMI,Follow._SEMI_in_return_statement7300); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1028_tree = (object)adaptor.Create(char_literal1028, retval);
			adaptor.AddChild(root_0, char_literal1028_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("return_statement", 285);
			LeaveRule("return_statement", 285);
			LeaveRule_return_statement();
			if (state.backtracking > 0) { Memoize(input, 285, return_statement_StartIndex); }

		}
		DebugLocation(992, 30);
		} finally { DebugExitRule(GrammarFileName, "return_statement"); }
		return retval;

	}
	// $ANTLR end "return_statement"

	partial void EnterRule_throw_statement();
	partial void LeaveRule_throw_statement();
	// $ANTLR start "throw_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:993:1: throw_statement : 'throw' ( expression )? ';' ;
	[GrammarRule("throw_statement")]
	private Antlr3AstNode throw_statement()
	{
		EnterRule_throw_statement();
		EnterRule("throw_statement", 286);
		var retval = new Antlr3AstNode("throw_statement");
		
		retval.Start = (IToken)input.LT(1);
		int throw_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1029 = default(IToken);
		IToken char_literal1031 = default(IToken);
		Antlr3AstNode expression1030 = default(Antlr3AstNode);

		object string_literal1029_tree = default(object);
		object char_literal1031_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "throw_statement");
		DebugLocation(993, 29);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 286)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:993:16: ( 'throw' ( expression )? ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:994:2: 'throw' ( expression )? ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(994, 2);
			string_literal1029=(IToken)Match(input,181,Follow._181_in_throw_statement7308); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1029_tree = (object)adaptor.Create(string_literal1029, retval);
			adaptor.AddChild(root_0, string_literal1029_tree);
			}
			DebugLocation(994, 12);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:994:12: ( expression )?
			int alt264=2;
			try { DebugEnterSubRule(264);
			try { DebugEnterDecision(264, false);
			int LA264_1 = input.LA(1);

			if ((LA264_1==Character_literal||LA264_1==FALSE||(LA264_1>=Hex_number && LA264_1<=IDENTIFIER)||(LA264_1>=MINUS && LA264_1<=NUMBER)||LA264_1==Real_literal||LA264_1==STRINGLITERAL||LA264_1==TRUE||LA264_1==Verbatim_string_literal||LA264_1==61||LA264_1==66||(LA264_1>=68 && LA264_1<=69)||(LA264_1>=71 && LA264_1<=72)||LA264_1==75||LA264_1==95||(LA264_1>=97 && LA264_1<=98)||(LA264_1>=100 && LA264_1<=103)||(LA264_1>=105 && LA264_1<=106)||(LA264_1>=109 && LA264_1<=110)||(LA264_1>=114 && LA264_1<=117)||(LA264_1>=119 && LA264_1<=120)||LA264_1==122||LA264_1==126||LA264_1==129||LA264_1==132||LA264_1==135||LA264_1==138||LA264_1==141||(LA264_1>=143 && LA264_1<=144)||(LA264_1>=146 && LA264_1<=148)||(LA264_1>=150 && LA264_1<=152)||LA264_1==154||LA264_1==157||LA264_1==160||LA264_1==162||LA264_1==167||LA264_1==169||(LA264_1>=171 && LA264_1<=174)||LA264_1==177||LA264_1==180||(LA264_1>=183 && LA264_1<=187)||(LA264_1>=189 && LA264_1<=190)||LA264_1==194||LA264_1==196||LA264_1==202))
			{
				alt264 = 1;
			}
			} finally { DebugExitDecision(264); }
			switch (alt264)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:994:12: expression
				{
				DebugLocation(994, 12);
				PushFollow(Follow._expression_in_throw_statement7312);
				expression1030=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression1030.Tree, expression1030, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(264); }

			DebugLocation(994, 26);
			char_literal1031=(IToken)Match(input,SEMI,Follow._SEMI_in_throw_statement7317); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1031_tree = (object)adaptor.Create(char_literal1031, retval);
			adaptor.AddChild(root_0, char_literal1031_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("throw_statement", 286);
			LeaveRule("throw_statement", 286);
			LeaveRule_throw_statement();
			if (state.backtracking > 0) { Memoize(input, 286, throw_statement_StartIndex); }

		}
		DebugLocation(994, 29);
		} finally { DebugExitRule(GrammarFileName, "throw_statement"); }
		return retval;

	}
	// $ANTLR end "throw_statement"

	partial void EnterRule_try_statement();
	partial void LeaveRule_try_statement();
	// $ANTLR start "try_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:995:1: try_statement : 'try' block ( catch_clauses ( finally_clause )? | finally_clause ) ;
	[GrammarRule("try_statement")]
	private Antlr3AstNode try_statement()
	{
		EnterRule_try_statement();
		EnterRule("try_statement", 287);
		var retval = new Antlr3AstNode("try_statement");
		
		retval.Start = (IToken)input.LT(1);
		int try_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1032 = default(IToken);
		Antlr3AstNode block1033 = default(Antlr3AstNode);
		Antlr3AstNode catch_clauses1034 = default(Antlr3AstNode);
		Antlr3AstNode finally_clause1035 = default(Antlr3AstNode);
		Antlr3AstNode finally_clause1036 = default(Antlr3AstNode);

		object string_literal1032_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "try_statement");
		DebugLocation(995, 24);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 287)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:995:14: ( 'try' block ( catch_clauses ( finally_clause )? | finally_clause ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:996:7: 'try' block ( catch_clauses ( finally_clause )? | finally_clause )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(996, 7);
			string_literal1032=(IToken)Match(input,182,Follow._182_in_try_statement7330); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1032_tree = (object)adaptor.Create(string_literal1032, retval);
			adaptor.AddChild(root_0, string_literal1032_tree);
			}
			DebugLocation(996, 15);
			PushFollow(Follow._block_in_try_statement7334);
			block1033=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block1033.Tree, block1033, retval);
			DebugLocation(996, 23);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:996:23: ( catch_clauses ( finally_clause )? | finally_clause )
			int alt266=2;
			try { DebugEnterSubRule(266);
			try { DebugEnterDecision(266, false);
			int LA266_1 = input.LA(1);

			if ((LA266_1==108))
			{
				alt266 = 1;
			}
			else if ((LA266_1==127))
			{
				alt266 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 266, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(266); }
			switch (alt266)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:996:25: catch_clauses ( finally_clause )?
				{
				DebugLocation(996, 25);
				PushFollow(Follow._catch_clauses_in_try_statement7340);
				catch_clauses1034=catch_clauses();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, catch_clauses1034.Tree, catch_clauses1034, retval);
				DebugLocation(996, 41);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:996:41: ( finally_clause )?
				int alt265=2;
				try { DebugEnterSubRule(265);
				try { DebugEnterDecision(265, false);
				int LA265_1 = input.LA(1);

				if ((LA265_1==127))
				{
					alt265 = 1;
				}
				} finally { DebugExitDecision(265); }
				switch (alt265)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:996:41: finally_clause
					{
					DebugLocation(996, 41);
					PushFollow(Follow._finally_clause_in_try_statement7344);
					finally_clause1035=finally_clause();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, finally_clause1035.Tree, finally_clause1035, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(265); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:997:10: finally_clause
				{
				DebugLocation(997, 10);
				PushFollow(Follow._finally_clause_in_try_statement7356);
				finally_clause1036=finally_clause();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, finally_clause1036.Tree, finally_clause1036, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(266); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("try_statement", 287);
			LeaveRule("try_statement", 287);
			LeaveRule_try_statement();
			if (state.backtracking > 0) { Memoize(input, 287, try_statement_StartIndex); }

		}
		DebugLocation(997, 24);
		} finally { DebugExitRule(GrammarFileName, "try_statement"); }
		return retval;

	}
	// $ANTLR end "try_statement"

	partial void EnterRule_catch_clauses();
	partial void LeaveRule_catch_clauses();
	// $ANTLR start "catch_clauses"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:999:1: catch_clauses : 'catch' ( specific_catch_clauses | general_catch_clause ) ;
	[GrammarRule("catch_clauses")]
	private Antlr3AstNode catch_clauses()
	{
		EnterRule_catch_clauses();
		EnterRule("catch_clauses", 288);
		var retval = new Antlr3AstNode("catch_clauses");
		
		retval.Start = (IToken)input.LT(1);
		int catch_clauses_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1037 = default(IToken);
		Antlr3AstNode specific_catch_clauses1038 = default(Antlr3AstNode);
		Antlr3AstNode general_catch_clause1039 = default(Antlr3AstNode);

		object string_literal1037_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "catch_clauses");
		DebugLocation(999, 59);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 288)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:999:14: ( 'catch' ( specific_catch_clauses | general_catch_clause ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1000:2: 'catch' ( specific_catch_clauses | general_catch_clause )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1000, 2);
			string_literal1037=(IToken)Match(input,108,Follow._108_in_catch_clauses7365); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1037_tree = (object)adaptor.Create(string_literal1037, retval);
			adaptor.AddChild(root_0, string_literal1037_tree);
			}
			DebugLocation(1000, 12);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1000:12: ( specific_catch_clauses | general_catch_clause )
			int alt267=2;
			try { DebugEnterSubRule(267);
			try { DebugEnterDecision(267, false);
			int LA267_1 = input.LA(1);

			if ((LA267_1==68))
			{
				alt267 = 1;
			}
			else if ((LA267_1==SEMI||LA267_1==197))
			{
				alt267 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 267, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(267); }
			switch (alt267)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1000:13: specific_catch_clauses
				{
				DebugLocation(1000, 13);
				PushFollow(Follow._specific_catch_clauses_in_catch_clauses7370);
				specific_catch_clauses1038=specific_catch_clauses();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, specific_catch_clauses1038.Tree, specific_catch_clauses1038, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1000:38: general_catch_clause
				{
				DebugLocation(1000, 38);
				PushFollow(Follow._general_catch_clause_in_catch_clauses7374);
				general_catch_clause1039=general_catch_clause();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, general_catch_clause1039.Tree, general_catch_clause1039, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(267); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("catch_clauses", 288);
			LeaveRule("catch_clauses", 288);
			LeaveRule_catch_clauses();
			if (state.backtracking > 0) { Memoize(input, 288, catch_clauses_StartIndex); }

		}
		DebugLocation(1000, 59);
		} finally { DebugExitRule(GrammarFileName, "catch_clauses"); }
		return retval;

	}
	// $ANTLR end "catch_clauses"

	partial void EnterRule_specific_catch_clauses();
	partial void LeaveRule_specific_catch_clauses();
	// $ANTLR start "specific_catch_clauses"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1001:1: specific_catch_clauses : specific_catch_clause ( 'catch' ( specific_catch_clause | general_catch_clause ) )* ;
	[GrammarRule("specific_catch_clauses")]
	private Antlr3AstNode specific_catch_clauses()
	{
		EnterRule_specific_catch_clauses();
		EnterRule("specific_catch_clauses", 289);
		var retval = new Antlr3AstNode("specific_catch_clauses");
		
		retval.Start = (IToken)input.LT(1);
		int specific_catch_clauses_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1041 = default(IToken);
		Antlr3AstNode specific_catch_clause1040 = default(Antlr3AstNode);
		Antlr3AstNode specific_catch_clause1042 = default(Antlr3AstNode);
		Antlr3AstNode general_catch_clause1043 = default(Antlr3AstNode);

		object string_literal1041_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "specific_catch_clauses");
		DebugLocation(1001, 84);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 289)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1001:23: ( specific_catch_clause ( 'catch' ( specific_catch_clause | general_catch_clause ) )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1002:2: specific_catch_clause ( 'catch' ( specific_catch_clause | general_catch_clause ) )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1002, 2);
			PushFollow(Follow._specific_catch_clause_in_specific_catch_clauses7383);
			specific_catch_clause1040=specific_catch_clause();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, specific_catch_clause1040.Tree, specific_catch_clause1040, retval);
			DebugLocation(1002, 26);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1002:26: ( 'catch' ( specific_catch_clause | general_catch_clause ) )*
			try { DebugEnterSubRule(269);
			while (true)
			{
				int alt269=2;
				try { DebugEnterDecision(269, false);
				int LA269_1 = input.LA(1);

				if ((LA269_1==108))
				{
					alt269 = 1;
				}


				} finally { DebugExitDecision(269); }
				switch ( alt269 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1002:27: 'catch' ( specific_catch_clause | general_catch_clause )
					{
					DebugLocation(1002, 27);
					string_literal1041=(IToken)Match(input,108,Follow._108_in_specific_catch_clauses7388); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal1041_tree = (object)adaptor.Create(string_literal1041, retval);
					adaptor.AddChild(root_0, string_literal1041_tree);
					}
					DebugLocation(1002, 37);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1002:37: ( specific_catch_clause | general_catch_clause )
					int alt268=2;
					try { DebugEnterSubRule(268);
					try { DebugEnterDecision(268, false);
					int LA268_1 = input.LA(1);

					if ((LA268_1==68))
					{
						alt268 = 1;
					}
					else if ((LA268_1==SEMI||LA268_1==197))
					{
						alt268 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 268, 0, input, 1);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					} finally { DebugExitDecision(268); }
					switch (alt268)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1002:38: specific_catch_clause
						{
						DebugLocation(1002, 38);
						PushFollow(Follow._specific_catch_clause_in_specific_catch_clauses7393);
						specific_catch_clause1042=specific_catch_clause();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, specific_catch_clause1042.Tree, specific_catch_clause1042, retval);

						}
						break;
					case 2:
						DebugEnterAlt(2);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1002:62: general_catch_clause
						{
						DebugLocation(1002, 62);
						PushFollow(Follow._general_catch_clause_in_specific_catch_clauses7397);
						general_catch_clause1043=general_catch_clause();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, general_catch_clause1043.Tree, general_catch_clause1043, retval);

						}
						break;

					}
					} finally { DebugExitSubRule(268); }


					}
					break;

				default:
					goto loop269;
				}
			}

			loop269:
				;

			} finally { DebugExitSubRule(269); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("specific_catch_clauses", 289);
			LeaveRule("specific_catch_clauses", 289);
			LeaveRule_specific_catch_clauses();
			if (state.backtracking > 0) { Memoize(input, 289, specific_catch_clauses_StartIndex); }

		}
		DebugLocation(1002, 84);
		} finally { DebugExitRule(GrammarFileName, "specific_catch_clauses"); }
		return retval;

	}
	// $ANTLR end "specific_catch_clauses"

	partial void EnterRule_specific_catch_clause();
	partial void LeaveRule_specific_catch_clause();
	// $ANTLR start "specific_catch_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1003:1: specific_catch_clause : '(' class_type ( identifier )? ')' block ;
	[GrammarRule("specific_catch_clause")]
	private Antlr3AstNode specific_catch_clause()
	{
		EnterRule_specific_catch_clause();
		EnterRule("specific_catch_clause", 290);
		var retval = new Antlr3AstNode("specific_catch_clause");
		
		retval.Start = (IToken)input.LT(1);
		int specific_catch_clause_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal1044 = default(IToken);
		IToken char_literal1047 = default(IToken);
		Antlr3AstNode class_type1045 = default(Antlr3AstNode);
		Antlr3AstNode identifier1046 = default(Antlr3AstNode);
		Antlr3AstNode block1048 = default(Antlr3AstNode);

		object char_literal1044_tree = default(object);
		object char_literal1047_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "specific_catch_clause");
		DebugLocation(1003, 46);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 290)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1003:22: ( '(' class_type ( identifier )? ')' block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1004:2: '(' class_type ( identifier )? ')' block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1004, 2);
			char_literal1044=(IToken)Match(input,68,Follow._68_in_specific_catch_clause7407); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1044_tree = (object)adaptor.Create(char_literal1044, retval);
			adaptor.AddChild(root_0, char_literal1044_tree);
			}
			DebugLocation(1004, 8);
			PushFollow(Follow._class_type_in_specific_catch_clause7411);
			class_type1045=class_type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, class_type1045.Tree, class_type1045, retval);
			DebugLocation(1004, 21);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1004:21: ( identifier )?
			int alt270=2;
			try { DebugEnterSubRule(270);
			try { DebugEnterDecision(270, false);
			int LA270_1 = input.LA(1);

			if ((LA270_1==IDENTIFIER||LA270_1==95||(LA270_1>=97 && LA270_1<=98)||(LA270_1>=100 && LA270_1<=101)||LA270_1==105||LA270_1==117||LA270_1==120||LA270_1==122||LA270_1==126||LA270_1==132||LA270_1==135||LA270_1==141||(LA270_1>=143 && LA270_1<=144)||(LA270_1>=147 && LA270_1<=148)||LA270_1==152||LA270_1==154||LA270_1==157||LA270_1==160||LA270_1==162||LA270_1==167||(LA270_1>=171 && LA270_1<=172)||LA270_1==183||LA270_1==190||LA270_1==194||LA270_1==196))
			{
				alt270 = 1;
			}
			} finally { DebugExitDecision(270); }
			switch (alt270)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1004:21: identifier
				{
				DebugLocation(1004, 21);
				PushFollow(Follow._identifier_in_specific_catch_clause7415);
				identifier1046=identifier();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, identifier1046.Tree, identifier1046, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(270); }

			DebugLocation(1004, 35);
			char_literal1047=(IToken)Match(input,RPAREN,Follow._RPAREN_in_specific_catch_clause7420); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1047_tree = (object)adaptor.Create(char_literal1047, retval);
			adaptor.AddChild(root_0, char_literal1047_tree);
			}
			DebugLocation(1004, 41);
			PushFollow(Follow._block_in_specific_catch_clause7424);
			block1048=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block1048.Tree, block1048, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("specific_catch_clause", 290);
			LeaveRule("specific_catch_clause", 290);
			LeaveRule_specific_catch_clause();
			if (state.backtracking > 0) { Memoize(input, 290, specific_catch_clause_StartIndex); }

		}
		DebugLocation(1004, 46);
		} finally { DebugExitRule(GrammarFileName, "specific_catch_clause"); }
		return retval;

	}
	// $ANTLR end "specific_catch_clause"

	partial void EnterRule_general_catch_clause();
	partial void LeaveRule_general_catch_clause();
	// $ANTLR start "general_catch_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1005:1: general_catch_clause : block ;
	[GrammarRule("general_catch_clause")]
	private Antlr3AstNode general_catch_clause()
	{
		EnterRule_general_catch_clause();
		EnterRule("general_catch_clause", 291);
		var retval = new Antlr3AstNode("general_catch_clause");
		
		retval.Start = (IToken)input.LT(1);
		int general_catch_clause_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode block1049 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "general_catch_clause");
		DebugLocation(1005, 7);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 291)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1005:21: ( block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1006:2: block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1006, 2);
			PushFollow(Follow._block_in_general_catch_clause7432);
			block1049=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block1049.Tree, block1049, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("general_catch_clause", 291);
			LeaveRule("general_catch_clause", 291);
			LeaveRule_general_catch_clause();
			if (state.backtracking > 0) { Memoize(input, 291, general_catch_clause_StartIndex); }

		}
		DebugLocation(1006, 7);
		} finally { DebugExitRule(GrammarFileName, "general_catch_clause"); }
		return retval;

	}
	// $ANTLR end "general_catch_clause"

	partial void EnterRule_finally_clause();
	partial void LeaveRule_finally_clause();
	// $ANTLR start "finally_clause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1007:1: finally_clause : 'finally' block ;
	[GrammarRule("finally_clause")]
	private Antlr3AstNode finally_clause()
	{
		EnterRule_finally_clause();
		EnterRule("finally_clause", 292);
		var retval = new Antlr3AstNode("finally_clause");
		
		retval.Start = (IToken)input.LT(1);
		int finally_clause_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1050 = default(IToken);
		Antlr3AstNode block1051 = default(Antlr3AstNode);

		object string_literal1050_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "finally_clause");
		DebugLocation(1007, 19);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 292)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1007:15: ( 'finally' block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1008:2: 'finally' block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1008, 2);
			string_literal1050=(IToken)Match(input,127,Follow._127_in_finally_clause7440); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1050_tree = (object)adaptor.Create(string_literal1050, retval);
			adaptor.AddChild(root_0, string_literal1050_tree);
			}
			DebugLocation(1008, 14);
			PushFollow(Follow._block_in_finally_clause7444);
			block1051=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block1051.Tree, block1051, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("finally_clause", 292);
			LeaveRule("finally_clause", 292);
			LeaveRule_finally_clause();
			if (state.backtracking > 0) { Memoize(input, 292, finally_clause_StartIndex); }

		}
		DebugLocation(1008, 19);
		} finally { DebugExitRule(GrammarFileName, "finally_clause"); }
		return retval;

	}
	// $ANTLR end "finally_clause"

	partial void EnterRule_checked_statement();
	partial void LeaveRule_checked_statement();
	// $ANTLR start "checked_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1009:1: checked_statement : 'checked' block ;
	[GrammarRule("checked_statement")]
	private Antlr3AstNode checked_statement()
	{
		EnterRule_checked_statement();
		EnterRule("checked_statement", 293);
		var retval = new Antlr3AstNode("checked_statement");
		
		retval.Start = (IToken)input.LT(1);
		int checked_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1052 = default(IToken);
		Antlr3AstNode block1053 = default(Antlr3AstNode);

		object string_literal1052_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "checked_statement");
		DebugLocation(1009, 19);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 293)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1009:18: ( 'checked' block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1010:2: 'checked' block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1010, 2);
			string_literal1052=(IToken)Match(input,110,Follow._110_in_checked_statement7452); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1052_tree = (object)adaptor.Create(string_literal1052, retval);
			adaptor.AddChild(root_0, string_literal1052_tree);
			}
			DebugLocation(1010, 14);
			PushFollow(Follow._block_in_checked_statement7456);
			block1053=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block1053.Tree, block1053, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("checked_statement", 293);
			LeaveRule("checked_statement", 293);
			LeaveRule_checked_statement();
			if (state.backtracking > 0) { Memoize(input, 293, checked_statement_StartIndex); }

		}
		DebugLocation(1010, 19);
		} finally { DebugExitRule(GrammarFileName, "checked_statement"); }
		return retval;

	}
	// $ANTLR end "checked_statement"

	partial void EnterRule_unchecked_statement();
	partial void LeaveRule_unchecked_statement();
	// $ANTLR start "unchecked_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1011:1: unchecked_statement : 'unchecked' block ;
	[GrammarRule("unchecked_statement")]
	private Antlr3AstNode unchecked_statement()
	{
		EnterRule_unchecked_statement();
		EnterRule("unchecked_statement", 294);
		var retval = new Antlr3AstNode("unchecked_statement");
		
		retval.Start = (IToken)input.LT(1);
		int unchecked_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1054 = default(IToken);
		Antlr3AstNode block1055 = default(Antlr3AstNode);

		object string_literal1054_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "unchecked_statement");
		DebugLocation(1011, 21);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 294)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1011:20: ( 'unchecked' block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1012:2: 'unchecked' block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1012, 2);
			string_literal1054=(IToken)Match(input,187,Follow._187_in_unchecked_statement7464); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1054_tree = (object)adaptor.Create(string_literal1054, retval);
			adaptor.AddChild(root_0, string_literal1054_tree);
			}
			DebugLocation(1012, 16);
			PushFollow(Follow._block_in_unchecked_statement7468);
			block1055=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block1055.Tree, block1055, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unchecked_statement", 294);
			LeaveRule("unchecked_statement", 294);
			LeaveRule_unchecked_statement();
			if (state.backtracking > 0) { Memoize(input, 294, unchecked_statement_StartIndex); }

		}
		DebugLocation(1012, 21);
		} finally { DebugExitRule(GrammarFileName, "unchecked_statement"); }
		return retval;

	}
	// $ANTLR end "unchecked_statement"

	partial void EnterRule_lock_statement();
	partial void LeaveRule_lock_statement();
	// $ANTLR start "lock_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1013:1: lock_statement : 'lock' '(' expression ')' embedded_statement ;
	[GrammarRule("lock_statement")]
	private Antlr3AstNode lock_statement()
	{
		EnterRule_lock_statement();
		EnterRule("lock_statement", 295);
		var retval = new Antlr3AstNode("lock_statement");
		
		retval.Start = (IToken)input.LT(1);
		int lock_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1056 = default(IToken);
		IToken char_literal1057 = default(IToken);
		IToken char_literal1059 = default(IToken);
		Antlr3AstNode expression1058 = default(Antlr3AstNode);
		Antlr3AstNode embedded_statement1060 = default(Antlr3AstNode);

		object string_literal1056_tree = default(object);
		object char_literal1057_tree = default(object);
		object char_literal1059_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "lock_statement");
		DebugLocation(1013, 53);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 295)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1013:15: ( 'lock' '(' expression ')' embedded_statement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1014:2: 'lock' '(' expression ')' embedded_statement
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1014, 2);
			string_literal1056=(IToken)Match(input,145,Follow._145_in_lock_statement7476); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1056_tree = (object)adaptor.Create(string_literal1056, retval);
			adaptor.AddChild(root_0, string_literal1056_tree);
			}
			DebugLocation(1014, 11);
			char_literal1057=(IToken)Match(input,68,Follow._68_in_lock_statement7480); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1057_tree = (object)adaptor.Create(char_literal1057, retval);
			adaptor.AddChild(root_0, char_literal1057_tree);
			}
			DebugLocation(1014, 16);
			PushFollow(Follow._expression_in_lock_statement7483);
			expression1058=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression1058.Tree, expression1058, retval);
			DebugLocation(1014, 29);
			char_literal1059=(IToken)Match(input,RPAREN,Follow._RPAREN_in_lock_statement7487); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1059_tree = (object)adaptor.Create(char_literal1059, retval);
			adaptor.AddChild(root_0, char_literal1059_tree);
			}
			DebugLocation(1014, 35);
			PushFollow(Follow._embedded_statement_in_lock_statement7491);
			embedded_statement1060=embedded_statement();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, embedded_statement1060.Tree, embedded_statement1060, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("lock_statement", 295);
			LeaveRule("lock_statement", 295);
			LeaveRule_lock_statement();
			if (state.backtracking > 0) { Memoize(input, 295, lock_statement_StartIndex); }

		}
		DebugLocation(1014, 53);
		} finally { DebugExitRule(GrammarFileName, "lock_statement"); }
		return retval;

	}
	// $ANTLR end "lock_statement"

	partial void EnterRule_using_statement();
	partial void LeaveRule_using_statement();
	// $ANTLR start "using_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1015:1: using_statement : 'using' '(' resource_acquisition ')' embedded_statement ;
	[GrammarRule("using_statement")]
	private Antlr3AstNode using_statement()
	{
		EnterRule_using_statement();
		EnterRule("using_statement", 296);
		var retval = new Antlr3AstNode("using_statement");
		
		retval.Start = (IToken)input.LT(1);
		int using_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1061 = default(IToken);
		IToken char_literal1062 = default(IToken);
		IToken char_literal1064 = default(IToken);
		Antlr3AstNode resource_acquisition1063 = default(Antlr3AstNode);
		Antlr3AstNode embedded_statement1065 = default(Antlr3AstNode);

		object string_literal1061_tree = default(object);
		object char_literal1062_tree = default(object);
		object char_literal1064_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "using_statement");
		DebugLocation(1015, 67);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 296)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1015:16: ( 'using' '(' resource_acquisition ')' embedded_statement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1016:2: 'using' '(' resource_acquisition ')' embedded_statement
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1016, 2);
			string_literal1061=(IToken)Match(input,USING,Follow._USING_in_using_statement7499); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1061_tree = (object)adaptor.Create(string_literal1061, retval);
			adaptor.AddChild(root_0, string_literal1061_tree);
			}
			DebugLocation(1016, 12);
			char_literal1062=(IToken)Match(input,68,Follow._68_in_using_statement7503); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1062_tree = (object)adaptor.Create(char_literal1062, retval);
			adaptor.AddChild(root_0, char_literal1062_tree);
			}
			DebugLocation(1016, 19);
			PushFollow(Follow._resource_acquisition_in_using_statement7508);
			resource_acquisition1063=resource_acquisition();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, resource_acquisition1063.Tree, resource_acquisition1063, retval);
			DebugLocation(1016, 42);
			char_literal1064=(IToken)Match(input,RPAREN,Follow._RPAREN_in_using_statement7512); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal1064_tree = (object)adaptor.Create(char_literal1064, retval);
			adaptor.AddChild(root_0, char_literal1064_tree);
			}
			DebugLocation(1016, 49);
			PushFollow(Follow._embedded_statement_in_using_statement7517);
			embedded_statement1065=embedded_statement();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, embedded_statement1065.Tree, embedded_statement1065, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("using_statement", 296);
			LeaveRule("using_statement", 296);
			LeaveRule_using_statement();
			if (state.backtracking > 0) { Memoize(input, 296, using_statement_StartIndex); }

		}
		DebugLocation(1016, 67);
		} finally { DebugExitRule(GrammarFileName, "using_statement"); }
		return retval;

	}
	// $ANTLR end "using_statement"

	partial void EnterRule_resource_acquisition();
	partial void LeaveRule_resource_acquisition();
	// $ANTLR start "resource_acquisition"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1017:1: resource_acquisition : ( ( local_variable_declaration )=> local_variable_declaration | expression );
	[GrammarRule("resource_acquisition")]
	private Antlr3AstNode resource_acquisition()
	{
		EnterRule_resource_acquisition();
		EnterRule("resource_acquisition", 297);
		var retval = new Antlr3AstNode("resource_acquisition");
		
		retval.Start = (IToken)input.LT(1);
		int resource_acquisition_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode local_variable_declaration1066 = default(Antlr3AstNode);
		Antlr3AstNode expression1067 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "resource_acquisition");
		DebugLocation(1017, 14);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 297)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1017:21: ( ( local_variable_declaration )=> local_variable_declaration | expression )
			int alt271=2;
			try { DebugEnterDecision(271, false);
			int LA271_1 = input.LA(1);

			if ((LA271_1==190))
			{
				int LA271_2 = input.LA(2);

				if ((EvaluatePredicate(synpred39_cs_fragment)))
				{
					alt271 = 1;
				}
				else if ((true))
				{
					alt271 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 271, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA271_1==120))
			{
				int LA271_2 = input.LA(2);

				if ((EvaluatePredicate(synpred39_cs_fragment)))
				{
					alt271 = 1;
				}
				else if ((true))
				{
					alt271 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 271, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA271_1==103||LA271_1==106||LA271_1==109||LA271_1==114||LA271_1==119||LA271_1==129||LA271_1==138||LA271_1==146||LA271_1==151||LA271_1==169||LA271_1==173||LA271_1==177||(LA271_1>=185 && LA271_1<=186)||LA271_1==189))
			{
				int LA271_2 = input.LA(2);

				if ((EvaluatePredicate(synpred39_cs_fragment)))
				{
					alt271 = 1;
				}
				else if ((true))
				{
					alt271 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 271, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA271_1==132))
			{
				int LA271_2 = input.LA(2);

				if ((EvaluatePredicate(synpred39_cs_fragment)))
				{
					alt271 = 1;
				}
				else if ((true))
				{
					alt271 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 271, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA271_1==192) && (EvaluatePredicate(synpred39_cs_fragment)))
			{
				alt271 = 1;
			}
			else if ((LA271_1==Character_literal||LA271_1==FALSE||LA271_1==Hex_number||(LA271_1>=MINUS && LA271_1<=NUMBER)||LA271_1==Real_literal||LA271_1==STRINGLITERAL||LA271_1==TRUE||LA271_1==Verbatim_string_literal||LA271_1==61||LA271_1==66||(LA271_1>=68 && LA271_1<=69)||(LA271_1>=71 && LA271_1<=72)||LA271_1==75||LA271_1==102||LA271_1==110||(LA271_1>=115 && LA271_1<=116)||LA271_1==150||LA271_1==174||LA271_1==180||LA271_1==184||LA271_1==187||LA271_1==202))
			{
				alt271 = 2;
			}
			else if ((LA271_1==IDENTIFIER||LA271_1==95||(LA271_1>=97 && LA271_1<=98)||(LA271_1>=100 && LA271_1<=101)||LA271_1==105||LA271_1==117||LA271_1==122||LA271_1==126||LA271_1==135||LA271_1==141||(LA271_1>=143 && LA271_1<=144)||(LA271_1>=147 && LA271_1<=148)||LA271_1==152||LA271_1==154||LA271_1==157||LA271_1==160||LA271_1==162||LA271_1==167||(LA271_1>=171 && LA271_1<=172)||LA271_1==183||LA271_1==194||LA271_1==196))
			{
				int LA271_2 = input.LA(2);

				if ((EvaluatePredicate(synpred39_cs_fragment)))
				{
					alt271 = 1;
				}
				else if ((true))
				{
					alt271 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 271, 25, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 271, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(271); }
			switch (alt271)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1018:2: ( local_variable_declaration )=> local_variable_declaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1018, 34);
				PushFollow(Follow._local_variable_declaration_in_resource_acquisition7531);
				local_variable_declaration1066=local_variable_declaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, local_variable_declaration1066.Tree, local_variable_declaration1066, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1019:4: expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1019, 4);
				PushFollow(Follow._expression_in_resource_acquisition7536);
				expression1067=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression1067.Tree, expression1067, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("resource_acquisition", 297);
			LeaveRule("resource_acquisition", 297);
			LeaveRule_resource_acquisition();
			if (state.backtracking > 0) { Memoize(input, 297, resource_acquisition_StartIndex); }

		}
		DebugLocation(1019, 14);
		} finally { DebugExitRule(GrammarFileName, "resource_acquisition"); }
		return retval;

	}
	// $ANTLR end "resource_acquisition"

	partial void EnterRule_yield_statement();
	partial void LeaveRule_yield_statement();
	// $ANTLR start "yield_statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1020:1: yield_statement : 'yield' ( 'return' expression ';' | 'break' ';' ) ;
	[GrammarRule("yield_statement")]
	private Antlr3AstNode yield_statement()
	{
		EnterRule_yield_statement();
		EnterRule("yield_statement", 298);
		var retval = new Antlr3AstNode("yield_statement");
		
		retval.Start = (IToken)input.LT(1);
		int yield_statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1068 = default(IToken);
		IToken string_literal1069 = default(IToken);
		IToken char_literal1071 = default(IToken);
		IToken string_literal1072 = default(IToken);
		IToken char_literal1073 = default(IToken);
		Antlr3AstNode expression1070 = default(Antlr3AstNode);

		object string_literal1068_tree = default(object);
		object string_literal1069_tree = default(object);
		object char_literal1071_tree = default(object);
		object string_literal1072_tree = default(object);
		object char_literal1073_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "yield_statement");
		DebugLocation(1020, 28);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 298)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1020:16: ( 'yield' ( 'return' expression ';' | 'break' ';' ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1021:2: 'yield' ( 'return' expression ';' | 'break' ';' )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1021, 2);
			string_literal1068=(IToken)Match(input,196,Follow._196_in_yield_statement7544); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal1068_tree = (object)adaptor.Create(string_literal1068, retval);
			adaptor.AddChild(root_0, string_literal1068_tree);
			}
			DebugLocation(1021, 12);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1021:12: ( 'return' expression ';' | 'break' ';' )
			int alt272=2;
			try { DebugEnterSubRule(272);
			try { DebugEnterDecision(272, false);
			int LA272_1 = input.LA(1);

			if ((LA272_1==168))
			{
				alt272 = 1;
			}
			else if ((LA272_1==104))
			{
				alt272 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 272, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(272); }
			switch (alt272)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1021:13: 'return' expression ';'
				{
				DebugLocation(1021, 13);
				string_literal1069=(IToken)Match(input,168,Follow._168_in_yield_statement7549); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal1069_tree = (object)adaptor.Create(string_literal1069, retval);
				adaptor.AddChild(root_0, string_literal1069_tree);
				}
				DebugLocation(1021, 24);
				PushFollow(Follow._expression_in_yield_statement7553);
				expression1070=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression1070.Tree, expression1070, retval);
				DebugLocation(1021, 37);
				char_literal1071=(IToken)Match(input,SEMI,Follow._SEMI_in_yield_statement7557); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal1071_tree = (object)adaptor.Create(char_literal1071, retval);
				adaptor.AddChild(root_0, char_literal1071_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1022:14: 'break' ';'
				{
				DebugLocation(1022, 14);
				string_literal1072=(IToken)Match(input,104,Follow._104_in_yield_statement7572); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal1072_tree = (object)adaptor.Create(string_literal1072, retval);
				adaptor.AddChild(root_0, string_literal1072_tree);
				}
				DebugLocation(1022, 24);
				char_literal1073=(IToken)Match(input,SEMI,Follow._SEMI_in_yield_statement7576); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal1073_tree = (object)adaptor.Create(char_literal1073, retval);
				adaptor.AddChild(root_0, char_literal1073_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(272); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("yield_statement", 298);
			LeaveRule("yield_statement", 298);
			LeaveRule_yield_statement();
			if (state.backtracking > 0) { Memoize(input, 298, yield_statement_StartIndex); }

		}
		DebugLocation(1022, 28);
		} finally { DebugExitRule(GrammarFileName, "yield_statement"); }
		return retval;

	}
	// $ANTLR end "yield_statement"

	partial void EnterRule_predefined_type();
	partial void LeaveRule_predefined_type();
	// $ANTLR start "predefined_type"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1028:1: predefined_type : ( 'bool' | 'byte' | 'char' | 'decimal' | 'double' | 'float' | 'int' | 'long' | 'object' | 'sbyte' | 'short' | 'string' | 'uint' | 'ulong' | 'ushort' );
	[GrammarRule("predefined_type")]
	private Antlr3AstNode predefined_type()
	{
		EnterRule_predefined_type();
		EnterRule("predefined_type", 299);
		var retval = new Antlr3AstNode("predefined_type");
		
		retval.Start = (IToken)input.LT(1);
		int predefined_type_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set1074 = default(IToken);

		object set1074_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "predefined_type");
		DebugLocation(1028, 56);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 299)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1028:16: ( 'bool' | 'byte' | 'char' | 'decimal' | 'double' | 'float' | 'int' | 'long' | 'object' | 'sbyte' | 'short' | 'string' | 'uint' | 'ulong' | 'ushort' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1028, 16);

			set1074=(IToken)input.LT(1);
			if (input.LA(1)==103||input.LA(1)==106||input.LA(1)==109||input.LA(1)==114||input.LA(1)==119||input.LA(1)==129||input.LA(1)==138||input.LA(1)==146||input.LA(1)==151||input.LA(1)==169||input.LA(1)==173||input.LA(1)==177||(input.LA(1)>=185 && input.LA(1)<=186)||input.LA(1)==189)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set1074, retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("predefined_type", 299);
			LeaveRule("predefined_type", 299);
			LeaveRule_predefined_type();
			if (state.backtracking > 0) { Memoize(input, 299, predefined_type_StartIndex); }

		}
		DebugLocation(1030, 56);
		} finally { DebugExitRule(GrammarFileName, "predefined_type"); }
		return retval;

	}
	// $ANTLR end "predefined_type"

	partial void EnterRule_identifier();
	partial void LeaveRule_identifier();
	// $ANTLR start "identifier"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1032:1: identifier : ( IDENTIFIER | 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'set' | 'var' | '__arglist' | 'dynamic' );
	[GrammarRule("identifier")]
	private Antlr3AstNode identifier()
	{
		EnterRule_identifier();
		EnterRule("identifier", 300);
		var retval = new Antlr3AstNode("identifier");
		
		retval.Start = (IToken)input.LT(1);
		int identifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set1075 = default(IToken);

		object set1075_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "identifier");
		DebugLocation(1032, 206);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 300)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1032:11: ( IDENTIFIER | 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'set' | 'var' | '__arglist' | 'dynamic' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1032, 11);

			set1075=(IToken)input.LT(1);
			if (input.LA(1)==IDENTIFIER||input.LA(1)==95||(input.LA(1)>=97 && input.LA(1)<=98)||(input.LA(1)>=100 && input.LA(1)<=101)||input.LA(1)==105||input.LA(1)==117||input.LA(1)==120||input.LA(1)==122||input.LA(1)==126||input.LA(1)==132||input.LA(1)==135||input.LA(1)==141||(input.LA(1)>=143 && input.LA(1)<=144)||(input.LA(1)>=147 && input.LA(1)<=148)||input.LA(1)==152||input.LA(1)==154||input.LA(1)==157||input.LA(1)==160||input.LA(1)==162||input.LA(1)==167||(input.LA(1)>=171 && input.LA(1)<=172)||input.LA(1)==183||input.LA(1)==190||input.LA(1)==194||input.LA(1)==196)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set1075, retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("identifier", 300);
			LeaveRule("identifier", 300);
			LeaveRule_identifier();
			if (state.backtracking > 0) { Memoize(input, 300, identifier_StartIndex); }

		}
		DebugLocation(1034, 206);
		} finally { DebugExitRule(GrammarFileName, "identifier"); }
		return retval;

	}
	// $ANTLR end "identifier"

	partial void EnterRule_keyword();
	partial void LeaveRule_keyword();
	// $ANTLR start "keyword"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1036:1: keyword : ( 'abstract' | 'as' | 'base' | 'bool' | 'break' | 'byte' | 'case' | 'catch' | 'char' | 'checked' | 'class' | 'const' | 'continue' | 'decimal' | 'default' | 'delegate' | 'do' | 'double' | 'else' | 'enum' | 'event' | 'explicit' | 'extern' | 'false' | 'finally' | 'fixed' | 'float' | 'for' | 'foreach' | 'goto' | 'if' | 'implicit' | 'in' | 'int' | 'interface' | 'internal' | 'is' | 'lock' | 'long' | 'namespace' | 'new' | 'null' | 'object' | 'operator' | 'out' | 'override' | 'params' | 'private' | 'protected' | 'public' | 'readonly' | 'ref' | 'return' | 'sbyte' | 'sealed' | 'short' | 'sizeof' | 'stackalloc' | 'static' | 'string' | 'struct' | 'switch' | 'this' | 'throw' | 'true' | 'try' | 'typeof' | 'uint' | 'ulong' | 'unchecked' | 'unsafe' | 'ushort' | 'using' | 'virtual' | 'void' | 'volatile' );
	[GrammarRule("keyword")]
	private Antlr3AstNode keyword()
	{
		EnterRule_keyword();
		EnterRule("keyword", 301);
		var retval = new Antlr3AstNode("keyword");
		
		retval.Start = (IToken)input.LT(1);
		int keyword_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set1076 = default(IToken);

		object set1076_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "keyword");
		DebugLocation(1036, 801);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 301)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1036:8: ( 'abstract' | 'as' | 'base' | 'bool' | 'break' | 'byte' | 'case' | 'catch' | 'char' | 'checked' | 'class' | 'const' | 'continue' | 'decimal' | 'default' | 'delegate' | 'do' | 'double' | 'else' | 'enum' | 'event' | 'explicit' | 'extern' | 'false' | 'finally' | 'fixed' | 'float' | 'for' | 'foreach' | 'goto' | 'if' | 'implicit' | 'in' | 'int' | 'interface' | 'internal' | 'is' | 'lock' | 'long' | 'namespace' | 'new' | 'null' | 'object' | 'operator' | 'out' | 'override' | 'params' | 'private' | 'protected' | 'public' | 'readonly' | 'ref' | 'return' | 'sbyte' | 'sealed' | 'short' | 'sizeof' | 'stackalloc' | 'static' | 'string' | 'struct' | 'switch' | 'this' | 'throw' | 'true' | 'try' | 'typeof' | 'uint' | 'ulong' | 'unchecked' | 'unsafe' | 'ushort' | 'using' | 'virtual' | 'void' | 'volatile' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1036, 8);

			set1076=(IToken)input.LT(1);
			if (input.LA(1)==ENUM||input.LA(1)==FALSE||input.LA(1)==IF||input.LA(1)==NULL||input.LA(1)==TRUE||input.LA(1)==USING||input.LA(1)==96||input.LA(1)==99||(input.LA(1)>=102 && input.LA(1)<=104)||(input.LA(1)>=106 && input.LA(1)<=116)||(input.LA(1)>=118 && input.LA(1)<=119)||input.LA(1)==121||(input.LA(1)>=123 && input.LA(1)<=125)||(input.LA(1)>=127 && input.LA(1)<=131)||input.LA(1)==134||(input.LA(1)>=136 && input.LA(1)<=140)||input.LA(1)==142||(input.LA(1)>=145 && input.LA(1)<=146)||(input.LA(1)>=149 && input.LA(1)<=151)||input.LA(1)==153||(input.LA(1)>=155 && input.LA(1)<=156)||input.LA(1)==158||input.LA(1)==161||(input.LA(1)>=163 && input.LA(1)<=166)||(input.LA(1)>=168 && input.LA(1)<=170)||(input.LA(1)>=173 && input.LA(1)<=182)||(input.LA(1)>=184 && input.LA(1)<=189)||(input.LA(1)>=191 && input.LA(1)<=193))
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set1076, retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("keyword", 301);
			LeaveRule("keyword", 301);
			LeaveRule_keyword();
			if (state.backtracking > 0) { Memoize(input, 301, keyword_StartIndex); }

		}
		DebugLocation(1037, 801);
		} finally { DebugExitRule(GrammarFileName, "keyword"); }
		return retval;

	}
	// $ANTLR end "keyword"

	partial void EnterRule_also_keyword();
	partial void LeaveRule_also_keyword();
	// $ANTLR start "also_keyword"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1039:1: also_keyword : ( 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'event' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'set' | 'var' | '__arglist' | 'dynamic' );
	[GrammarRule("also_keyword")]
	private Antlr3AstNode also_keyword()
	{
		EnterRule_also_keyword();
		EnterRule("also_keyword", 302);
		var retval = new Antlr3AstNode("also_keyword");
		
		retval.Start = (IToken)input.LT(1);
		int also_keyword_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set1077 = default(IToken);

		object set1077_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "also_keyword");
		DebugLocation(1039, 94);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 302)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1039:13: ( 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'event' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'set' | 'var' | '__arglist' | 'dynamic' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1039, 13);

			set1077=(IToken)input.LT(1);
			if (input.LA(1)==95||(input.LA(1)>=97 && input.LA(1)<=98)||(input.LA(1)>=100 && input.LA(1)<=101)||input.LA(1)==105||input.LA(1)==117||input.LA(1)==120||(input.LA(1)>=122 && input.LA(1)<=123)||input.LA(1)==126||input.LA(1)==132||input.LA(1)==135||input.LA(1)==141||(input.LA(1)>=143 && input.LA(1)<=144)||(input.LA(1)>=147 && input.LA(1)<=148)||input.LA(1)==152||input.LA(1)==154||input.LA(1)==157||input.LA(1)==160||input.LA(1)==162||input.LA(1)==167||(input.LA(1)>=171 && input.LA(1)<=172)||input.LA(1)==183||input.LA(1)==190||input.LA(1)==194||input.LA(1)==196)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set1077, retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("also_keyword", 302);
			LeaveRule("also_keyword", 302);
			LeaveRule_also_keyword();
			if (state.backtracking > 0) { Memoize(input, 302, also_keyword_StartIndex); }

		}
		DebugLocation(1042, 94);
		} finally { DebugExitRule(GrammarFileName, "also_keyword"); }
		return retval;

	}
	// $ANTLR end "also_keyword"

	partial void EnterRule_literal();
	partial void LeaveRule_literal();
	// $ANTLR start "literal"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1044:1: literal : ( Real_literal | NUMBER | Hex_number | Character_literal | STRINGLITERAL | Verbatim_string_literal | TRUE | FALSE | NULL );
	[GrammarRule("literal")]
	private Antlr3AstNode literal()
	{
		EnterRule_literal();
		EnterRule("literal", 303);
		var retval = new Antlr3AstNode("literal");
		
		retval.Start = (IToken)input.LT(1);
		int literal_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set1078 = default(IToken);

		object set1078_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "literal");
		DebugLocation(1044, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 303)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1044:8: ( Real_literal | NUMBER | Hex_number | Character_literal | STRINGLITERAL | Verbatim_string_literal | TRUE | FALSE | NULL )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1044, 8);

			set1078=(IToken)input.LT(1);
			if (input.LA(1)==Character_literal||input.LA(1)==FALSE||input.LA(1)==Hex_number||(input.LA(1)>=NULL && input.LA(1)<=NUMBER)||input.LA(1)==Real_literal||input.LA(1)==STRINGLITERAL||input.LA(1)==TRUE||input.LA(1)==Verbatim_string_literal)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set1078, retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("literal", 303);
			LeaveRule("literal", 303);
			LeaveRule_literal();
			if (state.backtracking > 0) { Memoize(input, 303, literal_StartIndex); }

		}
		DebugLocation(1054, 1);
		} finally { DebugExitRule(GrammarFileName, "literal"); }
		return retval;

	}
	// $ANTLR end "literal"

	partial void EnterRule_assignment_list();
	partial void LeaveRule_assignment_list();
	// $ANTLR start "assignment_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1326:1: assignment_list : ( assignment ';' )+ ;
	[GrammarRule("assignment_list")]
	private Antlr3AstNode assignment_list()
	{
		EnterRule_assignment_list();
		EnterRule("assignment_list", 304);
		var retval = new Antlr3AstNode("assignment_list");
		
		retval.Start = (IToken)input.LT(1);
		int assignment_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal1080 = default(IToken);
		Antlr3AstNode assignment1079 = default(Antlr3AstNode);

		object char_literal1080_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "assignment_list");
		DebugLocation(1326, 19);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 304)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1326:16: ( ( assignment ';' )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1327:2: ( assignment ';' )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1327, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1327:2: ( assignment ';' )+
			int cnt273=0;
			try { DebugEnterSubRule(273);
			while (true)
			{
				int alt273=2;
				try { DebugEnterDecision(273, false);
				int LA273_1 = input.LA(1);

				if ((LA273_1==Character_literal||LA273_1==FALSE||(LA273_1>=Hex_number && LA273_1<=IDENTIFIER)||(LA273_1>=MINUS && LA273_1<=NUMBER)||LA273_1==Real_literal||LA273_1==STRINGLITERAL||LA273_1==TRUE||LA273_1==Verbatim_string_literal||LA273_1==61||LA273_1==66||(LA273_1>=68 && LA273_1<=69)||(LA273_1>=71 && LA273_1<=72)||LA273_1==75||LA273_1==95||(LA273_1>=97 && LA273_1<=98)||(LA273_1>=100 && LA273_1<=103)||(LA273_1>=105 && LA273_1<=106)||(LA273_1>=109 && LA273_1<=110)||(LA273_1>=114 && LA273_1<=117)||(LA273_1>=119 && LA273_1<=120)||LA273_1==122||LA273_1==126||LA273_1==129||LA273_1==132||LA273_1==135||LA273_1==138||LA273_1==141||(LA273_1>=143 && LA273_1<=144)||(LA273_1>=146 && LA273_1<=148)||(LA273_1>=150 && LA273_1<=152)||LA273_1==154||LA273_1==157||LA273_1==160||LA273_1==162||LA273_1==167||LA273_1==169||(LA273_1>=171 && LA273_1<=174)||LA273_1==177||LA273_1==180||(LA273_1>=183 && LA273_1<=187)||(LA273_1>=189 && LA273_1<=190)||LA273_1==194||LA273_1==196||LA273_1==202))
				{
					alt273 = 1;
				}


				} finally { DebugExitDecision(273); }
				switch (alt273)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1327:3: assignment ';'
					{
					DebugLocation(1327, 3);
					PushFollow(Follow._assignment_in_assignment_list10284);
					assignment1079=assignment();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, assignment1079.Tree, assignment1079, retval);
					DebugLocation(1327, 14);
					char_literal1080=(IToken)Match(input,SEMI,Follow._SEMI_in_assignment_list10286); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal1080_tree = (object)adaptor.Create(char_literal1080, retval);
					adaptor.AddChild(root_0, char_literal1080_tree);
					}

					}
					break;

				default:
					if (cnt273 >= 1)
						goto loop273;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee273 = new EarlyExitException( 273, input );
					DebugRecognitionException(eee273);
					throw eee273;
				}
				cnt273++;
			}
			loop273:
				;

			} finally { DebugExitSubRule(273); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("assignment_list", 304);
			LeaveRule("assignment_list", 304);
			LeaveRule_assignment_list();
			if (state.backtracking > 0) { Memoize(input, 304, assignment_list_StartIndex); }

		}
		DebugLocation(1327, 19);
		} finally { DebugExitRule(GrammarFileName, "assignment_list"); }
		return retval;

	}
	// $ANTLR end "assignment_list"

	partial void EnterRule_field_declarations();
	partial void LeaveRule_field_declarations();
	// $ANTLR start "field_declarations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1328:1: field_declarations : ( ( attributes )? ( modifiers )? type field_declaration )+ ;
	[GrammarRule("field_declarations")]
	private Antlr3AstNode field_declarations()
	{
		EnterRule_field_declarations();
		EnterRule("field_declarations", 305);
		var retval = new Antlr3AstNode("field_declarations");
		
		retval.Start = (IToken)input.LT(1);
		int field_declarations_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode attributes1081 = default(Antlr3AstNode);
		Antlr3AstNode modifiers1082 = default(Antlr3AstNode);
		Antlr3AstNode type1083 = default(Antlr3AstNode);
		Antlr3AstNode field_declaration1084 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "field_declarations");
		DebugLocation(1328, 56);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 305)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1328:19: ( ( ( attributes )? ( modifiers )? type field_declaration )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1329:2: ( ( attributes )? ( modifiers )? type field_declaration )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1329, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1329:2: ( ( attributes )? ( modifiers )? type field_declaration )+
			int cnt276=0;
			try { DebugEnterSubRule(276);
			while (true)
			{
				int alt276=2;
				try { DebugEnterDecision(276, false);
				int LA276_1 = input.LA(1);

				if ((LA276_1==IDENTIFIER||LA276_1==91||(LA276_1>=95 && LA276_1<=98)||(LA276_1>=100 && LA276_1<=101)||LA276_1==103||(LA276_1>=105 && LA276_1<=106)||LA276_1==109||LA276_1==114||LA276_1==117||(LA276_1>=119 && LA276_1<=120)||LA276_1==122||(LA276_1>=125 && LA276_1<=126)||LA276_1==129||LA276_1==132||LA276_1==135||LA276_1==138||(LA276_1>=140 && LA276_1<=141)||(LA276_1>=143 && LA276_1<=144)||(LA276_1>=146 && LA276_1<=148)||(LA276_1>=150 && LA276_1<=152)||LA276_1==154||(LA276_1>=156 && LA276_1<=157)||(LA276_1>=160 && LA276_1<=165)||LA276_1==167||(LA276_1>=169 && LA276_1<=173)||(LA276_1>=176 && LA276_1<=177)||LA276_1==183||(LA276_1>=185 && LA276_1<=186)||(LA276_1>=188 && LA276_1<=194)||LA276_1==196))
				{
					alt276 = 1;
				}


				} finally { DebugExitDecision(276); }
				switch (alt276)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1329:3: ( attributes )? ( modifiers )? type field_declaration
					{
					DebugLocation(1329, 3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1329:3: ( attributes )?
					int alt274=2;
					try { DebugEnterSubRule(274);
					try { DebugEnterDecision(274, false);
					int LA274_1 = input.LA(1);

					if ((LA274_1==91))
					{
						alt274 = 1;
					}
					} finally { DebugExitDecision(274); }
					switch (alt274)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1329:3: attributes
						{
						DebugLocation(1329, 3);
						PushFollow(Follow._attributes_in_field_declarations10297);
						attributes1081=attributes();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, attributes1081.Tree, attributes1081, retval);

						}
						break;

					}
					} finally { DebugExitSubRule(274); }

					DebugLocation(1329, 17);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1329:17: ( modifiers )?
					int alt275=2;
					try { DebugEnterSubRule(275);
					try { DebugEnterDecision(275, false);
					int LA275_1 = input.LA(1);

					if ((LA275_1==96||LA275_1==125||LA275_1==140||LA275_1==150||LA275_1==156||LA275_1==161||(LA275_1>=163 && LA275_1<=165)||LA275_1==170||LA275_1==176||LA275_1==188||LA275_1==191||LA275_1==193))
					{
						alt275 = 1;
					}
					} finally { DebugExitDecision(275); }
					switch (alt275)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1329:17: modifiers
						{
						DebugLocation(1329, 17);
						PushFollow(Follow._modifiers_in_field_declarations10302);
						modifiers1082=modifiers();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers1082.Tree, modifiers1082, retval);

						}
						break;

					}
					} finally { DebugExitSubRule(275); }

					DebugLocation(1329, 30);
					PushFollow(Follow._type_in_field_declarations10307);
					type1083=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type1083.Tree, type1083, retval);
					DebugLocation(1329, 37);
					PushFollow(Follow._field_declaration_in_field_declarations10311);
					field_declaration1084=field_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, field_declaration1084.Tree, field_declaration1084, retval);

					}
					break;

				default:
					if (cnt276 >= 1)
						goto loop276;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee276 = new EarlyExitException( 276, input );
					DebugRecognitionException(eee276);
					throw eee276;
				}
				cnt276++;
			}
			loop276:
				;

			} finally { DebugExitSubRule(276); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("field_declarations", 305);
			LeaveRule("field_declarations", 305);
			LeaveRule_field_declarations();
			if (state.backtracking > 0) { Memoize(input, 305, field_declarations_StartIndex); }

		}
		DebugLocation(1329, 56);
		} finally { DebugExitRule(GrammarFileName, "field_declarations"); }
		return retval;

	}
	// $ANTLR end "field_declarations"

	partial void EnterRule_property_declaration_list();
	partial void LeaveRule_property_declaration_list();
	// $ANTLR start "property_declaration_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1330:1: property_declaration_list : ( ( attributes )? ( modifiers )? type property_declaration )+ ;
	[GrammarRule("property_declaration_list")]
	private Antlr3AstNode property_declaration_list()
	{
		EnterRule_property_declaration_list();
		EnterRule("property_declaration_list", 306);
		var retval = new Antlr3AstNode("property_declaration_list");
		
		retval.Start = (IToken)input.LT(1);
		int property_declaration_list_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode attributes1085 = default(Antlr3AstNode);
		Antlr3AstNode modifiers1086 = default(Antlr3AstNode);
		Antlr3AstNode type1087 = default(Antlr3AstNode);
		Antlr3AstNode property_declaration1088 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "property_declaration_list");
		DebugLocation(1330, 59);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 306)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1330:26: ( ( ( attributes )? ( modifiers )? type property_declaration )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1331:2: ( ( attributes )? ( modifiers )? type property_declaration )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1331, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1331:2: ( ( attributes )? ( modifiers )? type property_declaration )+
			int cnt279=0;
			try { DebugEnterSubRule(279);
			while (true)
			{
				int alt279=2;
				try { DebugEnterDecision(279, false);
				int LA279_1 = input.LA(1);

				if ((LA279_1==IDENTIFIER||LA279_1==91||(LA279_1>=95 && LA279_1<=98)||(LA279_1>=100 && LA279_1<=101)||LA279_1==103||(LA279_1>=105 && LA279_1<=106)||LA279_1==109||LA279_1==114||LA279_1==117||(LA279_1>=119 && LA279_1<=120)||LA279_1==122||(LA279_1>=125 && LA279_1<=126)||LA279_1==129||LA279_1==132||LA279_1==135||LA279_1==138||(LA279_1>=140 && LA279_1<=141)||(LA279_1>=143 && LA279_1<=144)||(LA279_1>=146 && LA279_1<=148)||(LA279_1>=150 && LA279_1<=152)||LA279_1==154||(LA279_1>=156 && LA279_1<=157)||(LA279_1>=160 && LA279_1<=165)||LA279_1==167||(LA279_1>=169 && LA279_1<=173)||(LA279_1>=176 && LA279_1<=177)||LA279_1==183||(LA279_1>=185 && LA279_1<=186)||(LA279_1>=188 && LA279_1<=194)||LA279_1==196))
				{
					alt279 = 1;
				}


				} finally { DebugExitDecision(279); }
				switch (alt279)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1331:3: ( attributes )? ( modifiers )? type property_declaration
					{
					DebugLocation(1331, 3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1331:3: ( attributes )?
					int alt277=2;
					try { DebugEnterSubRule(277);
					try { DebugEnterDecision(277, false);
					int LA277_1 = input.LA(1);

					if ((LA277_1==91))
					{
						alt277 = 1;
					}
					} finally { DebugExitDecision(277); }
					switch (alt277)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1331:3: attributes
						{
						DebugLocation(1331, 3);
						PushFollow(Follow._attributes_in_property_declaration_list10322);
						attributes1085=attributes();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, attributes1085.Tree, attributes1085, retval);

						}
						break;

					}
					} finally { DebugExitSubRule(277); }

					DebugLocation(1331, 17);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1331:17: ( modifiers )?
					int alt278=2;
					try { DebugEnterSubRule(278);
					try { DebugEnterDecision(278, false);
					int LA278_1 = input.LA(1);

					if ((LA278_1==96||LA278_1==125||LA278_1==140||LA278_1==150||LA278_1==156||LA278_1==161||(LA278_1>=163 && LA278_1<=165)||LA278_1==170||LA278_1==176||LA278_1==188||LA278_1==191||LA278_1==193))
					{
						alt278 = 1;
					}
					} finally { DebugExitDecision(278); }
					switch (alt278)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1331:17: modifiers
						{
						DebugLocation(1331, 17);
						PushFollow(Follow._modifiers_in_property_declaration_list10327);
						modifiers1086=modifiers();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers1086.Tree, modifiers1086, retval);

						}
						break;

					}
					} finally { DebugExitSubRule(278); }

					DebugLocation(1331, 30);
					PushFollow(Follow._type_in_property_declaration_list10332);
					type1087=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type1087.Tree, type1087, retval);
					DebugLocation(1331, 37);
					PushFollow(Follow._property_declaration_in_property_declaration_list10336);
					property_declaration1088=property_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, property_declaration1088.Tree, property_declaration1088, retval);

					}
					break;

				default:
					if (cnt279 >= 1)
						goto loop279;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee279 = new EarlyExitException( 279, input );
					DebugRecognitionException(eee279);
					throw eee279;
				}
				cnt279++;
			}
			loop279:
				;

			} finally { DebugExitSubRule(279); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("property_declaration_list", 306);
			LeaveRule("property_declaration_list", 306);
			LeaveRule_property_declaration_list();
			if (state.backtracking > 0) { Memoize(input, 306, property_declaration_list_StartIndex); }

		}
		DebugLocation(1331, 59);
		} finally { DebugExitRule(GrammarFileName, "property_declaration_list"); }
		return retval;

	}
	// $ANTLR end "property_declaration_list"

	partial void EnterRule_constant_declarations();
	partial void LeaveRule_constant_declarations();
	// $ANTLR start "constant_declarations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1332:1: constant_declarations : ( constant_declaration )+ ;
	[GrammarRule("constant_declarations")]
	private Antlr3AstNode constant_declarations()
	{
		EnterRule_constant_declarations();
		EnterRule("constant_declarations", 307);
		var retval = new Antlr3AstNode("constant_declarations");
		
		retval.Start = (IToken)input.LT(1);
		int constant_declarations_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode constant_declaration1089 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "constant_declarations");
		DebugLocation(1332, 22);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 307)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1332:22: ( ( constant_declaration )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1333:2: ( constant_declaration )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1333, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1333:2: ( constant_declaration )+
			int cnt280=0;
			try { DebugEnterSubRule(280);
			while (true)
			{
				int alt280=2;
				try { DebugEnterDecision(280, false);
				int LA280_1 = input.LA(1);

				if ((LA280_1==112))
				{
					alt280 = 1;
				}


				} finally { DebugExitDecision(280); }
				switch (alt280)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1333:2: constant_declaration
					{
					DebugLocation(1333, 2);
					PushFollow(Follow._constant_declaration_in_constant_declarations10346);
					constant_declaration1089=constant_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, constant_declaration1089.Tree, constant_declaration1089, retval);

					}
					break;

				default:
					if (cnt280 >= 1)
						goto loop280;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee280 = new EarlyExitException( 280, input );
					DebugRecognitionException(eee280);
					throw eee280;
				}
				cnt280++;
			}
			loop280:
				;

			} finally { DebugExitSubRule(280); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constant_declarations", 307);
			LeaveRule("constant_declarations", 307);
			LeaveRule_constant_declarations();
			if (state.backtracking > 0) { Memoize(input, 307, constant_declarations_StartIndex); }

		}
		DebugLocation(1333, 22);
		} finally { DebugExitRule(GrammarFileName, "constant_declarations"); }
		return retval;

	}
	// $ANTLR end "constant_declarations"

	partial void EnterRule_literals();
	partial void LeaveRule_literals();
	// $ANTLR start "literals"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1334:1: literals : ( literal )+ ;
	[GrammarRule("literals")]
	private Antlr3AstNode literals()
	{
		EnterRule_literals();
		EnterRule("literals", 308);
		var retval = new Antlr3AstNode("literals");
		
		retval.Start = (IToken)input.LT(1);
		int literals_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode literal1090 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "literals");
		DebugLocation(1334, 10);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 308)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1334:9: ( ( literal )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1335:2: ( literal )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1335, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1335:2: ( literal )+
			int cnt281=0;
			try { DebugEnterSubRule(281);
			while (true)
			{
				int alt281=2;
				try { DebugEnterDecision(281, false);
				int LA281_1 = input.LA(1);

				if ((LA281_1==Character_literal||LA281_1==FALSE||LA281_1==Hex_number||(LA281_1>=NULL && LA281_1<=NUMBER)||LA281_1==Real_literal||LA281_1==STRINGLITERAL||LA281_1==TRUE||LA281_1==Verbatim_string_literal))
				{
					alt281 = 1;
				}


				} finally { DebugExitDecision(281); }
				switch (alt281)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1335:2: literal
					{
					DebugLocation(1335, 2);
					PushFollow(Follow._literal_in_literals10354);
					literal1090=literal();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, literal1090.Tree, literal1090, retval);

					}
					break;

				default:
					if (cnt281 >= 1)
						goto loop281;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee281 = new EarlyExitException( 281, input );
					DebugRecognitionException(eee281);
					throw eee281;
				}
				cnt281++;
			}
			loop281:
				;

			} finally { DebugExitSubRule(281); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("literals", 308);
			LeaveRule("literals", 308);
			LeaveRule_literals();
			if (state.backtracking > 0) { Memoize(input, 308, literals_StartIndex); }

		}
		DebugLocation(1335, 10);
		} finally { DebugExitRule(GrammarFileName, "literals"); }
		return retval;

	}
	// $ANTLR end "literals"

	partial void EnterRule_delegate_declaration_list();
	partial void LeaveRule_delegate_declaration_list();
	// $ANTLR start "delegate_declaration_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1336:1: delegate_declaration_list : ( ( attributes )? ( modifiers )? delegate_declaration )+ ;
	[GrammarRule("delegate_declaration_list")]
	private Antlr3AstNode delegate_declaration_list()
	{
		EnterRule_delegate_declaration_list();
		EnterRule("delegate_declaration_list", 309);
		var retval = new Antlr3AstNode("delegate_declaration_list");
		
		retval.Start = (IToken)input.LT(1);
		int delegate_declaration_list_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode attributes1091 = default(Antlr3AstNode);
		Antlr3AstNode modifiers1092 = default(Antlr3AstNode);
		Antlr3AstNode delegate_declaration1093 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "delegate_declaration_list");
		DebugLocation(1336, 52);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 309)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1336:26: ( ( ( attributes )? ( modifiers )? delegate_declaration )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1337:2: ( ( attributes )? ( modifiers )? delegate_declaration )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1337, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1337:2: ( ( attributes )? ( modifiers )? delegate_declaration )+
			int cnt284=0;
			try { DebugEnterSubRule(284);
			while (true)
			{
				int alt284=2;
				try { DebugEnterDecision(284, false);
				int LA284_1 = input.LA(1);

				if ((LA284_1==91||LA284_1==96||LA284_1==116||LA284_1==125||LA284_1==140||LA284_1==150||LA284_1==156||LA284_1==161||(LA284_1>=163 && LA284_1<=165)||LA284_1==170||LA284_1==176||LA284_1==188||LA284_1==191||LA284_1==193))
				{
					alt284 = 1;
				}


				} finally { DebugExitDecision(284); }
				switch (alt284)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1337:3: ( attributes )? ( modifiers )? delegate_declaration
					{
					DebugLocation(1337, 3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1337:3: ( attributes )?
					int alt282=2;
					try { DebugEnterSubRule(282);
					try { DebugEnterDecision(282, false);
					int LA282_1 = input.LA(1);

					if ((LA282_1==91))
					{
						alt282 = 1;
					}
					} finally { DebugExitDecision(282); }
					switch (alt282)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1337:3: attributes
						{
						DebugLocation(1337, 3);
						PushFollow(Follow._attributes_in_delegate_declaration_list10364);
						attributes1091=attributes();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, attributes1091.Tree, attributes1091, retval);

						}
						break;

					}
					} finally { DebugExitSubRule(282); }

					DebugLocation(1337, 17);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1337:17: ( modifiers )?
					int alt283=2;
					try { DebugEnterSubRule(283);
					try { DebugEnterDecision(283, false);
					int LA283_1 = input.LA(1);

					if ((LA283_1==96||LA283_1==125||LA283_1==140||LA283_1==150||LA283_1==156||LA283_1==161||(LA283_1>=163 && LA283_1<=165)||LA283_1==170||LA283_1==176||LA283_1==188||LA283_1==191||LA283_1==193))
					{
						alt283 = 1;
					}
					} finally { DebugExitDecision(283); }
					switch (alt283)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1337:17: modifiers
						{
						DebugLocation(1337, 17);
						PushFollow(Follow._modifiers_in_delegate_declaration_list10369);
						modifiers1092=modifiers();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers1092.Tree, modifiers1092, retval);

						}
						break;

					}
					} finally { DebugExitSubRule(283); }

					DebugLocation(1337, 30);
					PushFollow(Follow._delegate_declaration_in_delegate_declaration_list10374);
					delegate_declaration1093=delegate_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, delegate_declaration1093.Tree, delegate_declaration1093, retval);

					}
					break;

				default:
					if (cnt284 >= 1)
						goto loop284;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee284 = new EarlyExitException( 284, input );
					DebugRecognitionException(eee284);
					throw eee284;
				}
				cnt284++;
			}
			loop284:
				;

			} finally { DebugExitSubRule(284); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("delegate_declaration_list", 309);
			LeaveRule("delegate_declaration_list", 309);
			LeaveRule_delegate_declaration_list();
			if (state.backtracking > 0) { Memoize(input, 309, delegate_declaration_list_StartIndex); }

		}
		DebugLocation(1337, 52);
		} finally { DebugExitRule(GrammarFileName, "delegate_declaration_list"); }
		return retval;

	}
	// $ANTLR end "delegate_declaration_list"

	partial void EnterRule_local_variable_declaration_list();
	partial void LeaveRule_local_variable_declaration_list();
	// $ANTLR start "local_variable_declaration_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1338:1: local_variable_declaration_list : ( local_variable_declaration ';' )+ ;
	[GrammarRule("local_variable_declaration_list")]
	private Antlr3AstNode local_variable_declaration_list()
	{
		EnterRule_local_variable_declaration_list();
		EnterRule("local_variable_declaration_list", 310);
		var retval = new Antlr3AstNode("local_variable_declaration_list");
		
		retval.Start = (IToken)input.LT(1);
		int local_variable_declaration_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal1095 = default(IToken);
		Antlr3AstNode local_variable_declaration1094 = default(Antlr3AstNode);

		object char_literal1095_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "local_variable_declaration_list");
		DebugLocation(1338, 35);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 310)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1338:32: ( ( local_variable_declaration ';' )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1339:2: ( local_variable_declaration ';' )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1339, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1339:2: ( local_variable_declaration ';' )+
			int cnt285=0;
			try { DebugEnterSubRule(285);
			while (true)
			{
				int alt285=2;
				try { DebugEnterDecision(285, false);
				int LA285_1 = input.LA(1);

				if ((LA285_1==IDENTIFIER||LA285_1==95||(LA285_1>=97 && LA285_1<=98)||(LA285_1>=100 && LA285_1<=101)||LA285_1==103||(LA285_1>=105 && LA285_1<=106)||LA285_1==109||LA285_1==114||LA285_1==117||(LA285_1>=119 && LA285_1<=120)||LA285_1==122||LA285_1==126||LA285_1==129||LA285_1==132||LA285_1==135||LA285_1==138||LA285_1==141||(LA285_1>=143 && LA285_1<=144)||(LA285_1>=146 && LA285_1<=148)||(LA285_1>=151 && LA285_1<=152)||LA285_1==154||LA285_1==157||LA285_1==160||LA285_1==162||LA285_1==167||LA285_1==169||(LA285_1>=171 && LA285_1<=173)||LA285_1==177||LA285_1==183||(LA285_1>=185 && LA285_1<=186)||(LA285_1>=189 && LA285_1<=190)||LA285_1==192||LA285_1==194||LA285_1==196))
				{
					alt285 = 1;
				}


				} finally { DebugExitDecision(285); }
				switch (alt285)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1339:3: local_variable_declaration ';'
					{
					DebugLocation(1339, 3);
					PushFollow(Follow._local_variable_declaration_in_local_variable_declaration_list10385);
					local_variable_declaration1094=local_variable_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, local_variable_declaration1094.Tree, local_variable_declaration1094, retval);
					DebugLocation(1339, 30);
					char_literal1095=(IToken)Match(input,SEMI,Follow._SEMI_in_local_variable_declaration_list10387); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal1095_tree = (object)adaptor.Create(char_literal1095, retval);
					adaptor.AddChild(root_0, char_literal1095_tree);
					}

					}
					break;

				default:
					if (cnt285 >= 1)
						goto loop285;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee285 = new EarlyExitException( 285, input );
					DebugRecognitionException(eee285);
					throw eee285;
				}
				cnt285++;
			}
			loop285:
				;

			} finally { DebugExitSubRule(285); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("local_variable_declaration_list", 310);
			LeaveRule("local_variable_declaration_list", 310);
			LeaveRule_local_variable_declaration_list();
			if (state.backtracking > 0) { Memoize(input, 310, local_variable_declaration_list_StartIndex); }

		}
		DebugLocation(1339, 35);
		} finally { DebugExitRule(GrammarFileName, "local_variable_declaration_list"); }
		return retval;

	}
	// $ANTLR end "local_variable_declaration_list"

	partial void EnterRule_local_variable_initializer_list();
	partial void LeaveRule_local_variable_initializer_list();
	// $ANTLR start "local_variable_initializer_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1340:1: local_variable_initializer_list : ( local_variable_initializer ';' )+ ;
	[GrammarRule("local_variable_initializer_list")]
	private Antlr3AstNode local_variable_initializer_list()
	{
		EnterRule_local_variable_initializer_list();
		EnterRule("local_variable_initializer_list", 311);
		var retval = new Antlr3AstNode("local_variable_initializer_list");
		
		retval.Start = (IToken)input.LT(1);
		int local_variable_initializer_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal1097 = default(IToken);
		Antlr3AstNode local_variable_initializer1096 = default(Antlr3AstNode);

		object char_literal1097_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "local_variable_initializer_list");
		DebugLocation(1340, 35);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 311)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1340:32: ( ( local_variable_initializer ';' )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1341:2: ( local_variable_initializer ';' )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1341, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1341:2: ( local_variable_initializer ';' )+
			int cnt286=0;
			try { DebugEnterSubRule(286);
			while (true)
			{
				int alt286=2;
				try { DebugEnterDecision(286, false);
				int LA286_1 = input.LA(1);

				if ((LA286_1==Character_literal||LA286_1==FALSE||(LA286_1>=Hex_number && LA286_1<=IDENTIFIER)||(LA286_1>=MINUS && LA286_1<=NUMBER)||LA286_1==Real_literal||LA286_1==STRINGLITERAL||LA286_1==TRUE||LA286_1==Verbatim_string_literal||LA286_1==61||LA286_1==66||(LA286_1>=68 && LA286_1<=69)||(LA286_1>=71 && LA286_1<=72)||LA286_1==75||LA286_1==95||(LA286_1>=97 && LA286_1<=98)||(LA286_1>=100 && LA286_1<=103)||(LA286_1>=105 && LA286_1<=106)||(LA286_1>=109 && LA286_1<=110)||(LA286_1>=114 && LA286_1<=117)||(LA286_1>=119 && LA286_1<=120)||LA286_1==122||LA286_1==126||LA286_1==129||LA286_1==132||LA286_1==135||LA286_1==138||LA286_1==141||(LA286_1>=143 && LA286_1<=144)||(LA286_1>=146 && LA286_1<=148)||(LA286_1>=150 && LA286_1<=152)||LA286_1==154||LA286_1==157||LA286_1==160||LA286_1==162||LA286_1==167||LA286_1==169||(LA286_1>=171 && LA286_1<=175)||LA286_1==177||LA286_1==180||(LA286_1>=183 && LA286_1<=187)||(LA286_1>=189 && LA286_1<=190)||LA286_1==194||(LA286_1>=196 && LA286_1<=197)||LA286_1==202))
				{
					alt286 = 1;
				}


				} finally { DebugExitDecision(286); }
				switch (alt286)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1341:3: local_variable_initializer ';'
					{
					DebugLocation(1341, 3);
					PushFollow(Follow._local_variable_initializer_in_local_variable_initializer_list10398);
					local_variable_initializer1096=local_variable_initializer();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, local_variable_initializer1096.Tree, local_variable_initializer1096, retval);
					DebugLocation(1341, 30);
					char_literal1097=(IToken)Match(input,SEMI,Follow._SEMI_in_local_variable_initializer_list10400); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal1097_tree = (object)adaptor.Create(char_literal1097, retval);
					adaptor.AddChild(root_0, char_literal1097_tree);
					}

					}
					break;

				default:
					if (cnt286 >= 1)
						goto loop286;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee286 = new EarlyExitException( 286, input );
					DebugRecognitionException(eee286);
					throw eee286;
				}
				cnt286++;
			}
			loop286:
				;

			} finally { DebugExitSubRule(286); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("local_variable_initializer_list", 311);
			LeaveRule("local_variable_initializer_list", 311);
			LeaveRule_local_variable_initializer_list();
			if (state.backtracking > 0) { Memoize(input, 311, local_variable_initializer_list_StartIndex); }

		}
		DebugLocation(1341, 35);
		} finally { DebugExitRule(GrammarFileName, "local_variable_initializer_list"); }
		return retval;

	}
	// $ANTLR end "local_variable_initializer_list"

	partial void EnterRule_expression_list_test();
	partial void LeaveRule_expression_list_test();
	// $ANTLR start "expression_list_test"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1342:1: expression_list_test : ( expression ';' )+ ;
	[GrammarRule("expression_list_test")]
	private Antlr3AstNode expression_list_test()
	{
		EnterRule_expression_list_test();
		EnterRule("expression_list_test", 312);
		var retval = new Antlr3AstNode("expression_list_test");
		
		retval.Start = (IToken)input.LT(1);
		int expression_list_test_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal1099 = default(IToken);
		Antlr3AstNode expression1098 = default(Antlr3AstNode);

		object char_literal1099_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "expression_list_test");
		DebugLocation(1342, 19);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 312)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1342:21: ( ( expression ';' )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1343:2: ( expression ';' )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1343, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1343:2: ( expression ';' )+
			int cnt287=0;
			try { DebugEnterSubRule(287);
			while (true)
			{
				int alt287=2;
				try { DebugEnterDecision(287, false);
				int LA287_1 = input.LA(1);

				if ((LA287_1==Character_literal||LA287_1==FALSE||(LA287_1>=Hex_number && LA287_1<=IDENTIFIER)||(LA287_1>=MINUS && LA287_1<=NUMBER)||LA287_1==Real_literal||LA287_1==STRINGLITERAL||LA287_1==TRUE||LA287_1==Verbatim_string_literal||LA287_1==61||LA287_1==66||(LA287_1>=68 && LA287_1<=69)||(LA287_1>=71 && LA287_1<=72)||LA287_1==75||LA287_1==95||(LA287_1>=97 && LA287_1<=98)||(LA287_1>=100 && LA287_1<=103)||(LA287_1>=105 && LA287_1<=106)||(LA287_1>=109 && LA287_1<=110)||(LA287_1>=114 && LA287_1<=117)||(LA287_1>=119 && LA287_1<=120)||LA287_1==122||LA287_1==126||LA287_1==129||LA287_1==132||LA287_1==135||LA287_1==138||LA287_1==141||(LA287_1>=143 && LA287_1<=144)||(LA287_1>=146 && LA287_1<=148)||(LA287_1>=150 && LA287_1<=152)||LA287_1==154||LA287_1==157||LA287_1==160||LA287_1==162||LA287_1==167||LA287_1==169||(LA287_1>=171 && LA287_1<=174)||LA287_1==177||LA287_1==180||(LA287_1>=183 && LA287_1<=187)||(LA287_1>=189 && LA287_1<=190)||LA287_1==194||LA287_1==196||LA287_1==202))
				{
					alt287 = 1;
				}


				} finally { DebugExitDecision(287); }
				switch (alt287)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1343:3: expression ';'
					{
					DebugLocation(1343, 3);
					PushFollow(Follow._expression_in_expression_list_test10411);
					expression1098=expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, expression1098.Tree, expression1098, retval);
					DebugLocation(1343, 14);
					char_literal1099=(IToken)Match(input,SEMI,Follow._SEMI_in_expression_list_test10413); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal1099_tree = (object)adaptor.Create(char_literal1099, retval);
					adaptor.AddChild(root_0, char_literal1099_tree);
					}

					}
					break;

				default:
					if (cnt287 >= 1)
						goto loop287;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee287 = new EarlyExitException( 287, input );
					DebugRecognitionException(eee287);
					throw eee287;
				}
				cnt287++;
			}
			loop287:
				;

			} finally { DebugExitSubRule(287); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("expression_list_test", 312);
			LeaveRule("expression_list_test", 312);
			LeaveRule_expression_list_test();
			if (state.backtracking > 0) { Memoize(input, 312, expression_list_test_StartIndex); }

		}
		DebugLocation(1343, 19);
		} finally { DebugExitRule(GrammarFileName, "expression_list_test"); }
		return retval;

	}
	// $ANTLR end "expression_list_test"

	partial void EnterRule_unary_expression_list();
	partial void LeaveRule_unary_expression_list();
	// $ANTLR start "unary_expression_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1344:1: unary_expression_list : ( unary_expression ';' )+ ;
	[GrammarRule("unary_expression_list")]
	private Antlr3AstNode unary_expression_list()
	{
		EnterRule_unary_expression_list();
		EnterRule("unary_expression_list", 313);
		var retval = new Antlr3AstNode("unary_expression_list");
		
		retval.Start = (IToken)input.LT(1);
		int unary_expression_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal1101 = default(IToken);
		Antlr3AstNode unary_expression1100 = default(Antlr3AstNode);

		object char_literal1101_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "unary_expression_list");
		DebugLocation(1344, 25);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 313)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1344:22: ( ( unary_expression ';' )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1345:2: ( unary_expression ';' )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1345, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1345:2: ( unary_expression ';' )+
			int cnt288=0;
			try { DebugEnterSubRule(288);
			while (true)
			{
				int alt288=2;
				try { DebugEnterDecision(288, false);
				int LA288_1 = input.LA(1);

				if ((LA288_1==Character_literal||LA288_1==FALSE||(LA288_1>=Hex_number && LA288_1<=IDENTIFIER)||(LA288_1>=MINUS && LA288_1<=NUMBER)||LA288_1==Real_literal||LA288_1==STRINGLITERAL||LA288_1==TRUE||LA288_1==Verbatim_string_literal||LA288_1==61||LA288_1==66||(LA288_1>=68 && LA288_1<=69)||(LA288_1>=71 && LA288_1<=72)||LA288_1==75||LA288_1==95||(LA288_1>=97 && LA288_1<=98)||(LA288_1>=100 && LA288_1<=103)||(LA288_1>=105 && LA288_1<=106)||(LA288_1>=109 && LA288_1<=110)||(LA288_1>=114 && LA288_1<=117)||(LA288_1>=119 && LA288_1<=120)||LA288_1==122||LA288_1==126||LA288_1==129||LA288_1==132||LA288_1==135||LA288_1==138||LA288_1==141||(LA288_1>=143 && LA288_1<=144)||(LA288_1>=146 && LA288_1<=148)||(LA288_1>=150 && LA288_1<=152)||LA288_1==154||LA288_1==157||LA288_1==160||LA288_1==162||LA288_1==167||LA288_1==169||(LA288_1>=171 && LA288_1<=174)||LA288_1==177||LA288_1==180||(LA288_1>=183 && LA288_1<=187)||(LA288_1>=189 && LA288_1<=190)||LA288_1==194||LA288_1==196||LA288_1==202))
				{
					alt288 = 1;
				}


				} finally { DebugExitDecision(288); }
				switch (alt288)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1345:3: unary_expression ';'
					{
					DebugLocation(1345, 3);
					PushFollow(Follow._unary_expression_in_unary_expression_list10424);
					unary_expression1100=unary_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, unary_expression1100.Tree, unary_expression1100, retval);
					DebugLocation(1345, 20);
					char_literal1101=(IToken)Match(input,SEMI,Follow._SEMI_in_unary_expression_list10426); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal1101_tree = (object)adaptor.Create(char_literal1101, retval);
					adaptor.AddChild(root_0, char_literal1101_tree);
					}

					}
					break;

				default:
					if (cnt288 >= 1)
						goto loop288;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee288 = new EarlyExitException( 288, input );
					DebugRecognitionException(eee288);
					throw eee288;
				}
				cnt288++;
			}
			loop288:
				;

			} finally { DebugExitSubRule(288); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unary_expression_list", 313);
			LeaveRule("unary_expression_list", 313);
			LeaveRule_unary_expression_list();
			if (state.backtracking > 0) { Memoize(input, 313, unary_expression_list_StartIndex); }

		}
		DebugLocation(1345, 25);
		} finally { DebugExitRule(GrammarFileName, "unary_expression_list"); }
		return retval;

	}
	// $ANTLR end "unary_expression_list"

	partial void EnterRule_invocation_expression_list();
	partial void LeaveRule_invocation_expression_list();
	// $ANTLR start "invocation_expression_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1346:1: invocation_expression_list : ( invocation_expression ';' )+ ;
	[GrammarRule("invocation_expression_list")]
	private Antlr3AstNode invocation_expression_list()
	{
		EnterRule_invocation_expression_list();
		EnterRule("invocation_expression_list", 314);
		var retval = new Antlr3AstNode("invocation_expression_list");
		
		retval.Start = (IToken)input.LT(1);
		int invocation_expression_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal1103 = default(IToken);
		Antlr3AstNode invocation_expression1102 = default(Antlr3AstNode);

		object char_literal1103_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "invocation_expression_list");
		DebugLocation(1346, 30);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 314)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1346:27: ( ( invocation_expression ';' )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1347:2: ( invocation_expression ';' )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1347, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1347:2: ( invocation_expression ';' )+
			int cnt289=0;
			try { DebugEnterSubRule(289);
			while (true)
			{
				int alt289=2;
				try { DebugEnterDecision(289, false);
				int LA289_1 = input.LA(1);

				if ((LA289_1==IDENTIFIER||LA289_1==95||(LA289_1>=97 && LA289_1<=98)||(LA289_1>=100 && LA289_1<=103)||(LA289_1>=105 && LA289_1<=106)||LA289_1==109||LA289_1==114||LA289_1==117||(LA289_1>=119 && LA289_1<=120)||LA289_1==122||LA289_1==126||LA289_1==129||LA289_1==132||LA289_1==135||LA289_1==138||LA289_1==141||(LA289_1>=143 && LA289_1<=144)||(LA289_1>=146 && LA289_1<=148)||(LA289_1>=151 && LA289_1<=152)||LA289_1==154||LA289_1==157||LA289_1==160||LA289_1==162||LA289_1==167||LA289_1==169||(LA289_1>=171 && LA289_1<=173)||LA289_1==177||LA289_1==180||(LA289_1>=183 && LA289_1<=186)||(LA289_1>=189 && LA289_1<=190)||LA289_1==194||LA289_1==196))
				{
					alt289 = 1;
				}


				} finally { DebugExitDecision(289); }
				switch (alt289)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1347:3: invocation_expression ';'
					{
					DebugLocation(1347, 3);
					PushFollow(Follow._invocation_expression_in_invocation_expression_list10437);
					invocation_expression1102=invocation_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, invocation_expression1102.Tree, invocation_expression1102, retval);
					DebugLocation(1347, 25);
					char_literal1103=(IToken)Match(input,SEMI,Follow._SEMI_in_invocation_expression_list10439); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal1103_tree = (object)adaptor.Create(char_literal1103, retval);
					adaptor.AddChild(root_0, char_literal1103_tree);
					}

					}
					break;

				default:
					if (cnt289 >= 1)
						goto loop289;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee289 = new EarlyExitException( 289, input );
					DebugRecognitionException(eee289);
					throw eee289;
				}
				cnt289++;
			}
			loop289:
				;

			} finally { DebugExitSubRule(289); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("invocation_expression_list", 314);
			LeaveRule("invocation_expression_list", 314);
			LeaveRule_invocation_expression_list();
			if (state.backtracking > 0) { Memoize(input, 314, invocation_expression_list_StartIndex); }

		}
		DebugLocation(1347, 30);
		} finally { DebugExitRule(GrammarFileName, "invocation_expression_list"); }
		return retval;

	}
	// $ANTLR end "invocation_expression_list"

	partial void EnterRule_primary_expression_list();
	partial void LeaveRule_primary_expression_list();
	// $ANTLR start "primary_expression_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1348:1: primary_expression_list : ( primary_expression ';' )+ ;
	[GrammarRule("primary_expression_list")]
	private Antlr3AstNode primary_expression_list()
	{
		EnterRule_primary_expression_list();
		EnterRule("primary_expression_list", 315);
		var retval = new Antlr3AstNode("primary_expression_list");
		
		retval.Start = (IToken)input.LT(1);
		int primary_expression_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal1105 = default(IToken);
		Antlr3AstNode primary_expression1104 = default(Antlr3AstNode);

		object char_literal1105_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "primary_expression_list");
		DebugLocation(1348, 27);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 315)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1348:24: ( ( primary_expression ';' )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1349:2: ( primary_expression ';' )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1349, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1349:2: ( primary_expression ';' )+
			int cnt290=0;
			try { DebugEnterSubRule(290);
			while (true)
			{
				int alt290=2;
				try { DebugEnterDecision(290, false);
				int LA290_1 = input.LA(1);

				if ((LA290_1==Character_literal||LA290_1==FALSE||(LA290_1>=Hex_number && LA290_1<=IDENTIFIER)||(LA290_1>=NULL && LA290_1<=NUMBER)||LA290_1==Real_literal||LA290_1==STRINGLITERAL||LA290_1==TRUE||LA290_1==Verbatim_string_literal||LA290_1==68||LA290_1==95||(LA290_1>=97 && LA290_1<=98)||(LA290_1>=100 && LA290_1<=103)||(LA290_1>=105 && LA290_1<=106)||(LA290_1>=109 && LA290_1<=110)||(LA290_1>=114 && LA290_1<=117)||(LA290_1>=119 && LA290_1<=120)||LA290_1==122||LA290_1==126||LA290_1==129||LA290_1==132||LA290_1==135||LA290_1==138||LA290_1==141||(LA290_1>=143 && LA290_1<=144)||(LA290_1>=146 && LA290_1<=148)||(LA290_1>=150 && LA290_1<=152)||LA290_1==154||LA290_1==157||LA290_1==160||LA290_1==162||LA290_1==167||LA290_1==169||(LA290_1>=171 && LA290_1<=174)||LA290_1==177||LA290_1==180||(LA290_1>=183 && LA290_1<=187)||(LA290_1>=189 && LA290_1<=190)||LA290_1==194||LA290_1==196))
				{
					alt290 = 1;
				}


				} finally { DebugExitDecision(290); }
				switch (alt290)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1349:3: primary_expression ';'
					{
					DebugLocation(1349, 3);
					PushFollow(Follow._primary_expression_in_primary_expression_list10450);
					primary_expression1104=primary_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, primary_expression1104.Tree, primary_expression1104, retval);
					DebugLocation(1349, 22);
					char_literal1105=(IToken)Match(input,SEMI,Follow._SEMI_in_primary_expression_list10452); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal1105_tree = (object)adaptor.Create(char_literal1105, retval);
					adaptor.AddChild(root_0, char_literal1105_tree);
					}

					}
					break;

				default:
					if (cnt290 >= 1)
						goto loop290;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee290 = new EarlyExitException( 290, input );
					DebugRecognitionException(eee290);
					throw eee290;
				}
				cnt290++;
			}
			loop290:
				;

			} finally { DebugExitSubRule(290); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("primary_expression_list", 315);
			LeaveRule("primary_expression_list", 315);
			LeaveRule_primary_expression_list();
			if (state.backtracking > 0) { Memoize(input, 315, primary_expression_list_StartIndex); }

		}
		DebugLocation(1349, 27);
		} finally { DebugExitRule(GrammarFileName, "primary_expression_list"); }
		return retval;

	}
	// $ANTLR end "primary_expression_list"

	partial void EnterRule_non_assignment_expression_list();
	partial void LeaveRule_non_assignment_expression_list();
	// $ANTLR start "non_assignment_expression_list"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1350:1: non_assignment_expression_list : ( non_assignment_expression ';' )+ ;
	[GrammarRule("non_assignment_expression_list")]
	private Antlr3AstNode non_assignment_expression_list()
	{
		EnterRule_non_assignment_expression_list();
		EnterRule("non_assignment_expression_list", 316);
		var retval = new Antlr3AstNode("non_assignment_expression_list");
		
		retval.Start = (IToken)input.LT(1);
		int non_assignment_expression_list_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal1107 = default(IToken);
		Antlr3AstNode non_assignment_expression1106 = default(Antlr3AstNode);

		object char_literal1107_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "non_assignment_expression_list");
		DebugLocation(1350, 34);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 316)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1350:31: ( ( non_assignment_expression ';' )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1351:2: ( non_assignment_expression ';' )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1351, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1351:2: ( non_assignment_expression ';' )+
			int cnt291=0;
			try { DebugEnterSubRule(291);
			while (true)
			{
				int alt291=2;
				try { DebugEnterDecision(291, false);
				int LA291_1 = input.LA(1);

				if ((LA291_1==Character_literal||LA291_1==FALSE||(LA291_1>=Hex_number && LA291_1<=IDENTIFIER)||(LA291_1>=MINUS && LA291_1<=NUMBER)||LA291_1==Real_literal||LA291_1==STRINGLITERAL||LA291_1==TRUE||LA291_1==Verbatim_string_literal||LA291_1==61||LA291_1==66||(LA291_1>=68 && LA291_1<=69)||(LA291_1>=71 && LA291_1<=72)||LA291_1==75||LA291_1==95||(LA291_1>=97 && LA291_1<=98)||(LA291_1>=100 && LA291_1<=103)||(LA291_1>=105 && LA291_1<=106)||(LA291_1>=109 && LA291_1<=110)||(LA291_1>=114 && LA291_1<=117)||(LA291_1>=119 && LA291_1<=120)||LA291_1==122||LA291_1==126||LA291_1==129||LA291_1==132||LA291_1==135||LA291_1==138||LA291_1==141||(LA291_1>=143 && LA291_1<=144)||(LA291_1>=146 && LA291_1<=148)||(LA291_1>=150 && LA291_1<=152)||LA291_1==154||LA291_1==157||LA291_1==160||LA291_1==162||LA291_1==167||LA291_1==169||(LA291_1>=171 && LA291_1<=174)||LA291_1==177||LA291_1==180||(LA291_1>=183 && LA291_1<=187)||(LA291_1>=189 && LA291_1<=190)||LA291_1==194||LA291_1==196||LA291_1==202))
				{
					alt291 = 1;
				}


				} finally { DebugExitDecision(291); }
				switch (alt291)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1351:3: non_assignment_expression ';'
					{
					DebugLocation(1351, 3);
					PushFollow(Follow._non_assignment_expression_in_non_assignment_expression_list10463);
					non_assignment_expression1106=non_assignment_expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, non_assignment_expression1106.Tree, non_assignment_expression1106, retval);
					DebugLocation(1351, 29);
					char_literal1107=(IToken)Match(input,SEMI,Follow._SEMI_in_non_assignment_expression_list10465); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal1107_tree = (object)adaptor.Create(char_literal1107, retval);
					adaptor.AddChild(root_0, char_literal1107_tree);
					}

					}
					break;

				default:
					if (cnt291 >= 1)
						goto loop291;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee291 = new EarlyExitException( 291, input );
					DebugRecognitionException(eee291);
					throw eee291;
				}
				cnt291++;
			}
			loop291:
				;

			} finally { DebugExitSubRule(291); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("non_assignment_expression_list", 316);
			LeaveRule("non_assignment_expression_list", 316);
			LeaveRule_non_assignment_expression_list();
			if (state.backtracking > 0) { Memoize(input, 316, non_assignment_expression_list_StartIndex); }

		}
		DebugLocation(1351, 34);
		} finally { DebugExitRule(GrammarFileName, "non_assignment_expression_list"); }
		return retval;

	}
	// $ANTLR end "non_assignment_expression_list"

	partial void EnterRule_method_declarations();
	partial void LeaveRule_method_declarations();
	// $ANTLR start "method_declarations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1352:1: method_declarations : ( ( modifiers )? ( 'void' | type ) method_declaration )+ ;
	[GrammarRule("method_declarations")]
	private Antlr3AstNode method_declarations()
	{
		EnterRule_method_declarations();
		EnterRule("method_declarations", 317);
		var retval = new Antlr3AstNode("method_declarations");
		
		retval.Start = (IToken)input.LT(1);
		int method_declarations_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal1109 = default(IToken);
		Antlr3AstNode modifiers1108 = default(Antlr3AstNode);
		Antlr3AstNode type1110 = default(Antlr3AstNode);
		Antlr3AstNode method_declaration1111 = default(Antlr3AstNode);

		object string_literal1109_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "method_declarations");
		DebugLocation(1352, 50);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 317)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1352:20: ( ( ( modifiers )? ( 'void' | type ) method_declaration )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1353:2: ( ( modifiers )? ( 'void' | type ) method_declaration )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1353, 2);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1353:2: ( ( modifiers )? ( 'void' | type ) method_declaration )+
			int cnt294=0;
			try { DebugEnterSubRule(294);
			while (true)
			{
				int alt294=2;
				try { DebugEnterDecision(294, false);
				int LA294_1 = input.LA(1);

				if ((LA294_1==IDENTIFIER||(LA294_1>=95 && LA294_1<=98)||(LA294_1>=100 && LA294_1<=101)||LA294_1==103||(LA294_1>=105 && LA294_1<=106)||LA294_1==109||LA294_1==114||LA294_1==117||(LA294_1>=119 && LA294_1<=120)||LA294_1==122||(LA294_1>=125 && LA294_1<=126)||LA294_1==129||LA294_1==132||LA294_1==135||LA294_1==138||(LA294_1>=140 && LA294_1<=141)||(LA294_1>=143 && LA294_1<=144)||(LA294_1>=146 && LA294_1<=148)||(LA294_1>=150 && LA294_1<=152)||LA294_1==154||(LA294_1>=156 && LA294_1<=157)||(LA294_1>=160 && LA294_1<=165)||LA294_1==167||(LA294_1>=169 && LA294_1<=173)||(LA294_1>=176 && LA294_1<=177)||LA294_1==183||(LA294_1>=185 && LA294_1<=186)||(LA294_1>=188 && LA294_1<=194)||LA294_1==196))
				{
					alt294 = 1;
				}


				} finally { DebugExitDecision(294); }
				switch (alt294)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1353:3: ( modifiers )? ( 'void' | type ) method_declaration
					{
					DebugLocation(1353, 3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1353:3: ( modifiers )?
					int alt292=2;
					try { DebugEnterSubRule(292);
					try { DebugEnterDecision(292, false);
					int LA292_1 = input.LA(1);

					if ((LA292_1==96||LA292_1==125||LA292_1==140||LA292_1==150||LA292_1==156||LA292_1==161||(LA292_1>=163 && LA292_1<=165)||LA292_1==170||LA292_1==176||LA292_1==188||LA292_1==191||LA292_1==193))
					{
						alt292 = 1;
					}
					} finally { DebugExitDecision(292); }
					switch (alt292)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1353:3: modifiers
						{
						DebugLocation(1353, 3);
						PushFollow(Follow._modifiers_in_method_declarations10476);
						modifiers1108=modifiers();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers1108.Tree, modifiers1108, retval);

						}
						break;

					}
					} finally { DebugExitSubRule(292); }

					DebugLocation(1353, 14);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1353:14: ( 'void' | type )
					int alt293=2;
					try { DebugEnterSubRule(293);
					try { DebugEnterDecision(293, false);
					int LA293_1 = input.LA(1);

					if ((LA293_1==192))
					{
						int LA293_2 = input.LA(2);

						if ((LA293_2==Character_literal||LA293_2==FALSE||(LA293_2>=Hex_number && LA293_2<=IDENTIFIER)||(LA293_2>=NULL && LA293_2<=NUMBER)||LA293_2==Real_literal||LA293_2==STRINGLITERAL||LA293_2==TRUE||LA293_2==Verbatim_string_literal||LA293_2==95||(LA293_2>=97 && LA293_2<=98)||(LA293_2>=100 && LA293_2<=101)||LA293_2==103||(LA293_2>=105 && LA293_2<=106)||LA293_2==109||LA293_2==114||LA293_2==117||(LA293_2>=119 && LA293_2<=120)||LA293_2==122||LA293_2==126||LA293_2==129||LA293_2==132||LA293_2==135||LA293_2==138||LA293_2==141||(LA293_2>=143 && LA293_2<=144)||(LA293_2>=146 && LA293_2<=148)||(LA293_2>=151 && LA293_2<=152)||LA293_2==154||LA293_2==157||LA293_2==160||LA293_2==162||LA293_2==167||LA293_2==169||(LA293_2>=171 && LA293_2<=173)||LA293_2==177||LA293_2==183||(LA293_2>=185 && LA293_2<=186)||(LA293_2>=189 && LA293_2<=190)||LA293_2==194||LA293_2==196))
						{
							alt293 = 1;
						}
						else if ((LA293_2==69))
						{
							alt293 = 2;
						}
						else
						{
							if (state.backtracking>0) {state.failed=true; return retval;}
							NoViableAltException nvae = new NoViableAltException("", 293, 1, input, 2);
							DebugRecognitionException(nvae);
							throw nvae;
						}
					}
					else if ((LA293_1==IDENTIFIER||LA293_1==95||(LA293_1>=97 && LA293_1<=98)||(LA293_1>=100 && LA293_1<=101)||LA293_1==103||(LA293_1>=105 && LA293_1<=106)||LA293_1==109||LA293_1==114||LA293_1==117||(LA293_1>=119 && LA293_1<=120)||LA293_1==122||LA293_1==126||LA293_1==129||LA293_1==132||LA293_1==135||LA293_1==138||LA293_1==141||(LA293_1>=143 && LA293_1<=144)||(LA293_1>=146 && LA293_1<=148)||(LA293_1>=151 && LA293_1<=152)||LA293_1==154||LA293_1==157||LA293_1==160||LA293_1==162||LA293_1==167||LA293_1==169||(LA293_1>=171 && LA293_1<=173)||LA293_1==177||LA293_1==183||(LA293_1>=185 && LA293_1<=186)||(LA293_1>=189 && LA293_1<=190)||LA293_1==194||LA293_1==196))
					{
						alt293 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 293, 0, input, 1);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					} finally { DebugExitDecision(293); }
					switch (alt293)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1353:15: 'void'
						{
						DebugLocation(1353, 15);
						string_literal1109=(IToken)Match(input,192,Follow._192_in_method_declarations10480); if (state.failed) return retval;
						if (state.backtracking == 0) {
						string_literal1109_tree = (object)adaptor.Create(string_literal1109, retval);
						adaptor.AddChild(root_0, string_literal1109_tree);
						}

						}
						break;
					case 2:
						DebugEnterAlt(2);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1353:24: type
						{
						DebugLocation(1353, 24);
						PushFollow(Follow._type_in_method_declarations10484);
						type1110=type();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, type1110.Tree, type1110, retval);

						}
						break;

					}
					} finally { DebugExitSubRule(293); }

					DebugLocation(1353, 30);
					PushFollow(Follow._method_declaration_in_method_declarations10487);
					method_declaration1111=method_declaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, method_declaration1111.Tree, method_declaration1111, retval);

					}
					break;

				default:
					if (cnt294 >= 1)
						goto loop294;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee294 = new EarlyExitException( 294, input );
					DebugRecognitionException(eee294);
					throw eee294;
				}
				cnt294++;
			}
			loop294:
				;

			} finally { DebugExitSubRule(294); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("method_declarations", 317);
			LeaveRule("method_declarations", 317);
			LeaveRule_method_declarations();
			if (state.backtracking > 0) { Memoize(input, 317, method_declarations_StartIndex); }

		}
		DebugLocation(1353, 50);
		} finally { DebugExitRule(GrammarFileName, "method_declarations"); }
		return retval;

	}
	// $ANTLR end "method_declarations"

	partial void EnterRule_synpred1_cs_fragment();
	partial void LeaveRule_synpred1_cs_fragment();

	// $ANTLR start synpred1_cs
	private void synpred1_cs_fragment()
	{
		EnterRule_synpred1_cs_fragment();
		EnterRule("synpred1_cs_fragment", 318);
		var retval = new Antlr3AstNode("synpred1_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:63:2: ( 'partial' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:63:3: 'partial'
			{
			DebugLocation(63, 3);
			Match(input,159,Follow._159_in_synpred1_cs282); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred1_cs_fragment", 318);
			LeaveRule("synpred1_cs_fragment", 318);
			LeaveRule_synpred1_cs_fragment();
		}
	}
	// $ANTLR end synpred1_cs

	partial void EnterRule_synpred2_cs_fragment();
	partial void LeaveRule_synpred2_cs_fragment();

	// $ANTLR start synpred2_cs
	private void synpred2_cs_fragment()
	{
		EnterRule_synpred2_cs_fragment();
		EnterRule("synpred2_cs_fragment", 319);
		var retval = new Antlr3AstNode("synpred2_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:94:11: ( member_name '(' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:94:12: member_name '('
			{
			DebugLocation(94, 12);
			PushFollow(Follow._member_name_in_synpred2_cs546);
			member_name();
			PopFollow();
			if (state.failed) return;
			DebugLocation(94, 26);
			Match(input,68,Follow._68_in_synpred2_cs550); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred2_cs_fragment", 319);
			LeaveRule("synpred2_cs_fragment", 319);
			LeaveRule_synpred2_cs_fragment();
		}
	}
	// $ANTLR end synpred2_cs

	partial void EnterRule_synpred3_cs_fragment();
	partial void LeaveRule_synpred3_cs_fragment();

	// $ANTLR start synpred3_cs
	private void synpred3_cs_fragment()
	{
		EnterRule_synpred3_cs_fragment();
		EnterRule("synpred3_cs_fragment", 320);
		var retval = new Antlr3AstNode("synpred3_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:95:8: ( member_name '{' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:95:9: member_name '{'
			{
			DebugLocation(95, 9);
			PushFollow(Follow._member_name_in_synpred3_cs565);
			member_name();
			PopFollow();
			if (state.failed) return;
			DebugLocation(95, 23);
			Match(input,197,Follow._197_in_synpred3_cs569); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred3_cs_fragment", 320);
			LeaveRule("synpred3_cs_fragment", 320);
			LeaveRule_synpred3_cs_fragment();
		}
	}
	// $ANTLR end synpred3_cs

	partial void EnterRule_synpred4_cs_fragment();
	partial void LeaveRule_synpred4_cs_fragment();

	// $ANTLR start synpred4_cs
	private void synpred4_cs_fragment()
	{
		EnterRule_synpred4_cs_fragment();
		EnterRule("synpred4_cs_fragment", 321);
		var retval = new Antlr3AstNode("synpred4_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:96:8: ( member_name '.' 'this' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:96:9: member_name '.' 'this'
			{
			DebugLocation(96, 9);
			PushFollow(Follow._member_name_in_synpred4_cs584);
			member_name();
			PopFollow();
			if (state.failed) return;
			DebugLocation(96, 23);
			Match(input,DOT,Follow._DOT_in_synpred4_cs588); if (state.failed) return;
			DebugLocation(96, 29);
			Match(input,180,Follow._180_in_synpred4_cs592); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred4_cs_fragment", 321);
			LeaveRule("synpred4_cs_fragment", 321);
			LeaveRule_synpred4_cs_fragment();
		}
	}
	// $ANTLR end synpred4_cs

	partial void EnterRule_synpred5_cs_fragment();
	partial void LeaveRule_synpred5_cs_fragment();

	// $ANTLR start synpred5_cs
	private void synpred5_cs_fragment()
	{
		EnterRule_synpred5_cs_fragment();
		EnterRule("synpred5_cs_fragment", 322);
		var retval = new Antlr3AstNode("synpred5_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:114:2: ( 'this' brackets )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:114:3: 'this' brackets
			{
			DebugLocation(114, 3);
			Match(input,180,Follow._180_in_synpred5_cs712); if (state.failed) return;
			DebugLocation(114, 13);
			PushFollow(Follow._brackets_in_synpred5_cs717);
			brackets();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred5_cs_fragment", 322);
			LeaveRule("synpred5_cs_fragment", 322);
			LeaveRule_synpred5_cs_fragment();
		}
	}
	// $ANTLR end synpred5_cs

	partial void EnterRule_synpred6_cs_fragment();
	partial void LeaveRule_synpred6_cs_fragment();

	// $ANTLR start synpred6_cs
	private void synpred6_cs_fragment()
	{
		EnterRule_synpred6_cs_fragment();
		EnterRule("synpred6_cs_fragment", 323);
		var retval = new Antlr3AstNode("synpred6_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:115:4: ( 'base' brackets )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:115:5: 'base' brackets
			{
			DebugLocation(115, 5);
			Match(input,102,Follow._102_in_synpred6_cs737); if (state.failed) return;
			DebugLocation(115, 14);
			PushFollow(Follow._brackets_in_synpred6_cs741);
			brackets();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred6_cs_fragment", 323);
			LeaveRule("synpred6_cs_fragment", 323);
			LeaveRule_synpred6_cs_fragment();
		}
	}
	// $ANTLR end synpred6_cs

	partial void EnterRule_synpred7_cs_fragment();
	partial void LeaveRule_synpred7_cs_fragment();

	// $ANTLR start synpred7_cs
	private void synpred7_cs_fragment()
	{
		EnterRule_synpred7_cs_fragment();
		EnterRule("synpred7_cs_fragment", 324);
		var retval = new Antlr3AstNode("synpred7_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:117:14: ( object_creation_expression ( '.' | '->' | '[' ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:117:15: object_creation_expression ( '.' | '->' | '[' )
			{
			DebugLocation(117, 15);
			PushFollow(Follow._object_creation_expression_in_synpred7_cs777);
			object_creation_expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(117, 44);
			if (input.LA(1)==DOT||input.LA(1)==PTR||input.LA(1)==91)
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("synpred7_cs_fragment", 324);
			LeaveRule("synpred7_cs_fragment", 324);
			LeaveRule_synpred7_cs_fragment();
		}
	}
	// $ANTLR end synpred7_cs

	partial void EnterRule_synpred8_cs_fragment();
	partial void LeaveRule_synpred8_cs_fragment();

	// $ANTLR start synpred8_cs
	private void synpred8_cs_fragment()
	{
		EnterRule_synpred8_cs_fragment();
		EnterRule("synpred8_cs_fragment", 325);
		var retval = new Antlr3AstNode("synpred8_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:121:7: ( delegate_creation_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:121:8: delegate_creation_expression
			{
			DebugLocation(121, 8);
			PushFollow(Follow._delegate_creation_expression_in_synpred8_cs825);
			delegate_creation_expression();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred8_cs_fragment", 325);
			LeaveRule("synpred8_cs_fragment", 325);
			LeaveRule_synpred8_cs_fragment();
		}
	}
	// $ANTLR end synpred8_cs

	partial void EnterRule_synpred9_cs_fragment();
	partial void LeaveRule_synpred9_cs_fragment();

	// $ANTLR start synpred9_cs
	private void synpred9_cs_fragment()
	{
		EnterRule_synpred9_cs_fragment();
		EnterRule("synpred9_cs_fragment", 326);
		var retval = new Antlr3AstNode("synpred9_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:133:4: ( identifier generic_argument_list )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:133:5: identifier generic_argument_list
			{
			DebugLocation(133, 5);
			PushFollow(Follow._identifier_in_synpred9_cs950);
			identifier();
			PopFollow();
			if (state.failed) return;
			DebugLocation(133, 16);
			PushFollow(Follow._generic_argument_list_in_synpred9_cs952);
			generic_argument_list();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred9_cs_fragment", 326);
			LeaveRule("synpred9_cs_fragment", 326);
			LeaveRule_synpred9_cs_fragment();
		}
	}
	// $ANTLR end synpred9_cs

	partial void EnterRule_synpred10_cs_fragment();
	partial void LeaveRule_synpred10_cs_fragment();

	// $ANTLR start synpred10_cs
	private void synpred10_cs_fragment()
	{
		EnterRule_synpred10_cs_fragment();
		EnterRule("synpred10_cs_fragment", 327);
		var retval = new Antlr3AstNode("synpred10_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:171:4: ( '(' type ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:171:5: '(' type ')'
			{
			DebugLocation(171, 5);
			Match(input,68,Follow._68_in_synpred10_cs1202); if (state.failed) return;
			DebugLocation(171, 11);
			PushFollow(Follow._type_in_synpred10_cs1206);
			type();
			PopFollow();
			if (state.failed) return;
			DebugLocation(171, 18);
			Match(input,RPAREN,Follow._RPAREN_in_synpred10_cs1210); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred10_cs_fragment", 327);
			LeaveRule("synpred10_cs_fragment", 327);
			LeaveRule_synpred10_cs_fragment();
		}
	}
	// $ANTLR end synpred10_cs

	partial void EnterRule_synpred11_cs_fragment();
	partial void LeaveRule_synpred11_cs_fragment();

	// $ANTLR start synpred11_cs
	private void synpred11_cs_fragment()
	{
		EnterRule_synpred11_cs_fragment();
		EnterRule("synpred11_cs_fragment", 328);
		var retval = new Antlr3AstNode("synpred11_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:199:2: ( array_creation_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:199:3: array_creation_expression
			{
			DebugLocation(199, 3);
			PushFollow(Follow._array_creation_expression_in_synpred11_cs1452);
			array_creation_expression();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred11_cs_fragment", 328);
			LeaveRule("synpred11_cs_fragment", 328);
			LeaveRule_synpred11_cs_fragment();
		}
	}
	// $ANTLR end synpred11_cs

	partial void EnterRule_synpred12_cs_fragment();
	partial void LeaveRule_synpred12_cs_fragment();

	// $ANTLR start synpred12_cs
	private void synpred12_cs_fragment()
	{
		EnterRule_synpred12_cs_fragment();
		EnterRule("synpred12_cs_fragment", 329);
		var retval = new Antlr3AstNode("synpred12_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:208:11: ( arguments ( '[' | '.' | '->' ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:208:12: arguments ( '[' | '.' | '->' )
			{
			DebugLocation(208, 12);
			PushFollow(Follow._arguments_in_synpred12_cs1532);
			arguments();
			PopFollow();
			if (state.failed) return;
			DebugLocation(208, 24);
			if (input.LA(1)==DOT||input.LA(1)==PTR||input.LA(1)==91)
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("synpred12_cs_fragment", 329);
			LeaveRule("synpred12_cs_fragment", 329);
			LeaveRule_synpred12_cs_fragment();
		}
	}
	// $ANTLR end synpred12_cs

	partial void EnterRule_synpred13_cs_fragment();
	partial void LeaveRule_synpred13_cs_fragment();

	// $ANTLR start synpred13_cs
	private void synpred13_cs_fragment()
	{
		EnterRule_synpred13_cs_fragment();
		EnterRule("synpred13_cs_fragment", 330);
		var retval = new Antlr3AstNode("synpred13_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:279:20: ( unbound_type_name )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:279:21: unbound_type_name
			{
			DebugLocation(279, 21);
			PushFollow(Follow._unbound_type_name_in_synpred13_cs2062);
			unbound_type_name();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred13_cs_fragment", 330);
			LeaveRule("synpred13_cs_fragment", 330);
			LeaveRule_synpred13_cs_fragment();
		}
	}
	// $ANTLR end synpred13_cs

	partial void EnterRule_synpred14_cs_fragment();
	partial void LeaveRule_synpred14_cs_fragment();

	// $ANTLR start synpred14_cs
	private void synpred14_cs_fragment()
	{
		EnterRule_synpred14_cs_fragment();
		EnterRule("synpred14_cs_fragment", 331);
		var retval = new Antlr3AstNode("synpred14_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:289:5: ( generic_dimension_specifier '.' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:289:6: generic_dimension_specifier '.'
			{
			DebugLocation(289, 6);
			PushFollow(Follow._generic_dimension_specifier_in_synpred14_cs2120);
			generic_dimension_specifier();
			PopFollow();
			if (state.failed) return;
			DebugLocation(289, 36);
			Match(input,DOT,Follow._DOT_in_synpred14_cs2124); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred14_cs_fragment", 331);
			LeaveRule("synpred14_cs_fragment", 331);
			LeaveRule_synpred14_cs_fragment();
		}
	}
	// $ANTLR end synpred14_cs

	partial void EnterRule_synpred15_cs_fragment();
	partial void LeaveRule_synpred15_cs_fragment();

	// $ANTLR start synpred15_cs
	private void synpred15_cs_fragment()
	{
		EnterRule_synpred15_cs_fragment();
		EnterRule("synpred15_cs_fragment", 332);
		var retval = new Antlr3AstNode("synpred15_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:312:2: ( identifier '<' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:312:3: identifier '<'
			{
			DebugLocation(312, 3);
			PushFollow(Follow._identifier_in_synpred15_cs2256);
			identifier();
			PopFollow();
			if (state.failed) return;
			DebugLocation(312, 16);
			Match(input,81,Follow._81_in_synpred15_cs2260); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred15_cs_fragment", 332);
			LeaveRule("synpred15_cs_fragment", 332);
			LeaveRule_synpred15_cs_fragment();
		}
	}
	// $ANTLR end synpred15_cs

	partial void EnterRule_synpred16_cs_fragment();
	partial void LeaveRule_synpred16_cs_fragment();

	// $ANTLR start synpred16_cs
	private void synpred16_cs_fragment()
	{
		EnterRule_synpred16_cs_fragment();
		EnterRule("synpred16_cs_fragment", 333);
		var retval = new Antlr3AstNode("synpred16_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:320:4: ( identifier '<' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:320:5: identifier '<'
			{
			DebugLocation(320, 5);
			PushFollow(Follow._identifier_in_synpred16_cs2305);
			identifier();
			PopFollow();
			if (state.failed) return;
			DebugLocation(320, 19);
			Match(input,81,Follow._81_in_synpred16_cs2310); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred16_cs_fragment", 333);
			LeaveRule("synpred16_cs_fragment", 333);
			LeaveRule_synpred16_cs_fragment();
		}
	}
	// $ANTLR end synpred16_cs

	partial void EnterRule_synpred17_cs_fragment();
	partial void LeaveRule_synpred17_cs_fragment();

	// $ANTLR start synpred17_cs
	private void synpred17_cs_fragment()
	{
		EnterRule_synpred17_cs_fragment();
		EnterRule("synpred17_cs_fragment", 334);
		var retval = new Antlr3AstNode("synpred17_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:337:4: ( ( predefined_type | type_name ) rank_specifiers )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:337:5: ( predefined_type | type_name ) rank_specifiers
			{
			DebugLocation(337, 5);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:337:5: ( predefined_type | type_name )
			int alt295=2;
			try { DebugEnterSubRule(295);
			try { DebugEnterDecision(295, false);
			int LA295_1 = input.LA(1);

			if ((LA295_1==103||LA295_1==106||LA295_1==109||LA295_1==114||LA295_1==119||LA295_1==129||LA295_1==138||LA295_1==146||LA295_1==151||LA295_1==169||LA295_1==173||LA295_1==177||(LA295_1>=185 && LA295_1<=186)||LA295_1==189))
			{
				alt295 = 1;
			}
			else if ((LA295_1==IDENTIFIER||LA295_1==95||(LA295_1>=97 && LA295_1<=98)||(LA295_1>=100 && LA295_1<=101)||LA295_1==105||LA295_1==117||LA295_1==120||LA295_1==122||LA295_1==126||LA295_1==132||LA295_1==135||LA295_1==141||(LA295_1>=143 && LA295_1<=144)||(LA295_1>=147 && LA295_1<=148)||LA295_1==152||LA295_1==154||LA295_1==157||LA295_1==160||LA295_1==162||LA295_1==167||(LA295_1>=171 && LA295_1<=172)||LA295_1==183||LA295_1==190||LA295_1==194||LA295_1==196))
			{
				alt295 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 295, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(295); }
			switch (alt295)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:337:6: predefined_type
				{
				DebugLocation(337, 6);
				PushFollow(Follow._predefined_type_in_synpred17_cs2403);
				predefined_type();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:337:24: type_name
				{
				DebugLocation(337, 24);
				PushFollow(Follow._type_name_in_synpred17_cs2407);
				type_name();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(295); }

			DebugLocation(337, 36);
			PushFollow(Follow._rank_specifiers_in_synpred17_cs2411);
			rank_specifiers();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred17_cs_fragment", 334);
			LeaveRule("synpred17_cs_fragment", 334);
			LeaveRule_synpred17_cs_fragment();
		}
	}
	// $ANTLR end synpred17_cs

	partial void EnterRule_synpred18_cs_fragment();
	partial void LeaveRule_synpred18_cs_fragment();

	// $ANTLR start synpred18_cs
	private void synpred18_cs_fragment()
	{
		EnterRule_synpred18_cs_fragment();
		EnterRule("synpred18_cs_fragment", 335);
		var retval = new Antlr3AstNode("synpred18_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:338:4: ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:338:5: ( predefined_type | type_name ) ( ( '*' )+ | '?' )
			{
			DebugLocation(338, 5);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:338:5: ( predefined_type | type_name )
			int alt296=2;
			try { DebugEnterSubRule(296);
			try { DebugEnterDecision(296, false);
			int LA296_1 = input.LA(1);

			if ((LA296_1==103||LA296_1==106||LA296_1==109||LA296_1==114||LA296_1==119||LA296_1==129||LA296_1==138||LA296_1==146||LA296_1==151||LA296_1==169||LA296_1==173||LA296_1==177||(LA296_1>=185 && LA296_1<=186)||LA296_1==189))
			{
				alt296 = 1;
			}
			else if ((LA296_1==IDENTIFIER||LA296_1==95||(LA296_1>=97 && LA296_1<=98)||(LA296_1>=100 && LA296_1<=101)||LA296_1==105||LA296_1==117||LA296_1==120||LA296_1==122||LA296_1==126||LA296_1==132||LA296_1==135||LA296_1==141||(LA296_1>=143 && LA296_1<=144)||(LA296_1>=147 && LA296_1<=148)||LA296_1==152||LA296_1==154||LA296_1==157||LA296_1==160||LA296_1==162||LA296_1==167||(LA296_1>=171 && LA296_1<=172)||LA296_1==183||LA296_1==190||LA296_1==194||LA296_1==196))
			{
				alt296 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 296, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(296); }
			switch (alt296)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:338:6: predefined_type
				{
				DebugLocation(338, 6);
				PushFollow(Follow._predefined_type_in_synpred18_cs2438);
				predefined_type();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:338:24: type_name
				{
				DebugLocation(338, 24);
				PushFollow(Follow._type_name_in_synpred18_cs2442);
				type_name();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(296); }

			DebugLocation(338, 36);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:338:36: ( ( '*' )+ | '?' )
			int alt298=2;
			try { DebugEnterSubRule(298);
			try { DebugEnterDecision(298, false);
			int LA298_1 = input.LA(1);

			if ((LA298_1==69))
			{
				alt298 = 1;
			}
			else if ((LA298_1==89))
			{
				alt298 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 298, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(298); }
			switch (alt298)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:338:37: ( '*' )+
				{
				DebugLocation(338, 37);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:338:37: ( '*' )+
				int cnt297=0;
				try { DebugEnterSubRule(297);
				while (true)
				{
					int alt297=2;
					try { DebugEnterDecision(297, false);
					int LA297_1 = input.LA(1);

					if ((LA297_1==69))
					{
						alt297 = 1;
					}


					} finally { DebugExitDecision(297); }
					switch (alt297)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:338:37: '*'
						{
						DebugLocation(338, 37);
						Match(input,69,Follow._69_in_synpred18_cs2447); if (state.failed) return;

						}
						break;

					default:
						if (cnt297 >= 1)
							goto loop297;

						if (state.backtracking>0) {state.failed=true; return;}
						EarlyExitException eee297 = new EarlyExitException( 297, input );
						DebugRecognitionException(eee297);
						throw eee297;
					}
					cnt297++;
				}
				loop297:
					;

				} finally { DebugExitSubRule(297); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:338:44: '?'
				{
				DebugLocation(338, 44);
				Match(input,89,Follow._89_in_synpred18_cs2452); if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(298); }


			}

		}
		finally
		{
			TraceOut("synpred18_cs_fragment", 335);
			LeaveRule("synpred18_cs_fragment", 335);
			LeaveRule_synpred18_cs_fragment();
		}
	}
	// $ANTLR end synpred18_cs

	partial void EnterRule_synpred19_cs_fragment();
	partial void LeaveRule_synpred19_cs_fragment();

	// $ANTLR start synpred19_cs
	private void synpred19_cs_fragment()
	{
		EnterRule_synpred19_cs_fragment();
		EnterRule("synpred19_cs_fragment", 336);
		var retval = new Antlr3AstNode("synpred19_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:374:2: ( unary_expression assignment_operator )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:374:3: unary_expression assignment_operator
			{
			DebugLocation(374, 3);
			PushFollow(Follow._unary_expression_in_synpred19_cs2634);
			unary_expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(374, 22);
			PushFollow(Follow._assignment_operator_in_synpred19_cs2638);
			assignment_operator();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred19_cs_fragment", 336);
			LeaveRule("synpred19_cs_fragment", 336);
			LeaveRule_synpred19_cs_fragment();
		}
	}
	// $ANTLR end synpred19_cs

	partial void EnterRule_synpred20_cs_fragment();
	partial void LeaveRule_synpred20_cs_fragment();

	// $ANTLR start synpred20_cs
	private void synpred20_cs_fragment()
	{
		EnterRule_synpred20_cs_fragment();
		EnterRule("synpred20_cs_fragment", 337);
		var retval = new Antlr3AstNode("synpred20_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:383:2: ( cast_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:383:3: cast_expression
			{
			DebugLocation(383, 3);
			PushFollow(Follow._cast_expression_in_synpred20_cs2696);
			cast_expression();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred20_cs_fragment", 337);
			LeaveRule("synpred20_cs_fragment", 337);
			LeaveRule_synpred20_cs_fragment();
		}
	}
	// $ANTLR end synpred20_cs

	partial void EnterRule_synpred21_cs_fragment();
	partial void LeaveRule_synpred21_cs_fragment();

	// $ANTLR start synpred21_cs
	private void synpred21_cs_fragment()
	{
		EnterRule_synpred21_cs_fragment();
		EnterRule("synpred21_cs_fragment", 338);
		var retval = new Antlr3AstNode("synpred21_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:409:2: ( anonymous_function_signature '=>' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:409:3: anonymous_function_signature '=>'
			{
			DebugLocation(409, 3);
			PushFollow(Follow._anonymous_function_signature_in_synpred21_cs2912);
			anonymous_function_signature();
			PopFollow();
			if (state.failed) return;
			DebugLocation(409, 34);
			Match(input,87,Follow._87_in_synpred21_cs2916); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred21_cs_fragment", 338);
			LeaveRule("synpred21_cs_fragment", 338);
			LeaveRule_synpred21_cs_fragment();
		}
	}
	// $ANTLR end synpred21_cs

	partial void EnterRule_synpred22_cs_fragment();
	partial void LeaveRule_synpred22_cs_fragment();

	// $ANTLR start synpred22_cs
	private void synpred22_cs_fragment()
	{
		EnterRule_synpred22_cs_fragment();
		EnterRule("synpred22_cs_fragment", 339);
		var retval = new Antlr3AstNode("synpred22_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:410:4: ( query_expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:410:5: query_expression
			{
			DebugLocation(410, 5);
			PushFollow(Follow._query_expression_in_synpred22_cs2927);
			query_expression();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred22_cs_fragment", 339);
			LeaveRule("synpred22_cs_fragment", 339);
			LeaveRule_synpred22_cs_fragment();
		}
	}
	// $ANTLR end synpred22_cs

	partial void EnterRule_synpred23_cs_fragment();
	partial void LeaveRule_synpred23_cs_fragment();

	// $ANTLR start synpred23_cs
	private void synpred23_cs_fragment()
	{
		EnterRule_synpred23_cs_fragment();
		EnterRule("synpred23_cs_fragment", 340);
		var retval = new Antlr3AstNode("synpred23_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:474:50: ( 'into' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:474:51: 'into'
			{
			DebugLocation(474, 51);
			Match(input,141,Follow._141_in_synpred23_cs3350); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred23_cs_fragment", 340);
			LeaveRule("synpred23_cs_fragment", 340);
			LeaveRule_synpred23_cs_fragment();
		}
	}
	// $ANTLR end synpred23_cs

	partial void EnterRule_synpred24_cs_fragment();
	partial void LeaveRule_synpred24_cs_fragment();

	// $ANTLR start synpred24_cs
	private void synpred24_cs_fragment()
	{
		EnterRule_synpred24_cs_fragment();
		EnterRule("synpred24_cs_fragment", 341);
		var retval = new Antlr3AstNode("synpred24_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:541:32: ( ',' identifier '=' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:541:33: ',' identifier '='
			{
			DebugLocation(541, 33);
			Match(input,74,Follow._74_in_synpred24_cs3852); if (state.failed) return;
			DebugLocation(541, 39);
			PushFollow(Follow._identifier_in_synpred24_cs3856);
			identifier();
			PopFollow();
			if (state.failed) return;
			DebugLocation(541, 52);
			Match(input,85,Follow._85_in_synpred24_cs3860); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred24_cs_fragment", 341);
			LeaveRule("synpred24_cs_fragment", 341);
			LeaveRule_synpred24_cs_fragment();
		}
	}
	// $ANTLR end synpred24_cs

	partial void EnterRule_synpred25_cs_fragment();
	partial void LeaveRule_synpred25_cs_fragment();

	// $ANTLR start synpred25_cs
	private void synpred25_cs_fragment()
	{
		EnterRule_synpred25_cs_fragment();
		EnterRule("synpred25_cs_fragment", 342);
		var retval = new Antlr3AstNode("synpred25_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:622:4: ( member_name '{' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:622:5: member_name '{'
			{
			DebugLocation(622, 5);
			PushFollow(Follow._member_name_in_synpred25_cs4378);
			member_name();
			PopFollow();
			if (state.failed) return;
			DebugLocation(622, 19);
			Match(input,197,Follow._197_in_synpred25_cs4382); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred25_cs_fragment", 342);
			LeaveRule("synpred25_cs_fragment", 342);
			LeaveRule_synpred25_cs_fragment();
		}
	}
	// $ANTLR end synpred25_cs

	partial void EnterRule_synpred26_cs_fragment();
	partial void LeaveRule_synpred26_cs_fragment();

	// $ANTLR start synpred26_cs
	private void synpred26_cs_fragment()
	{
		EnterRule_synpred26_cs_fragment();
		EnterRule("synpred26_cs_fragment", 343);
		var retval = new Antlr3AstNode("synpred26_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:729:14: ( member_name '(' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:729:15: member_name '('
			{
			DebugLocation(729, 15);
			PushFollow(Follow._member_name_in_synpred26_cs5243);
			member_name();
			PopFollow();
			if (state.failed) return;
			DebugLocation(729, 29);
			Match(input,68,Follow._68_in_synpred26_cs5247); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred26_cs_fragment", 343);
			LeaveRule("synpred26_cs_fragment", 343);
			LeaveRule_synpred26_cs_fragment();
		}
	}
	// $ANTLR end synpred26_cs

	partial void EnterRule_synpred27_cs_fragment();
	partial void LeaveRule_synpred27_cs_fragment();

	// $ANTLR start synpred27_cs
	private void synpred27_cs_fragment()
	{
		EnterRule_synpred27_cs_fragment();
		EnterRule("synpred27_cs_fragment", 344);
		var retval = new Antlr3AstNode("synpred27_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:730:14: ( member_name '{' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:730:15: member_name '{'
			{
			DebugLocation(730, 15);
			PushFollow(Follow._member_name_in_synpred27_cs5268);
			member_name();
			PopFollow();
			if (state.failed) return;
			DebugLocation(730, 29);
			Match(input,197,Follow._197_in_synpred27_cs5272); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred27_cs_fragment", 344);
			LeaveRule("synpred27_cs_fragment", 344);
			LeaveRule_synpred27_cs_fragment();
		}
	}
	// $ANTLR end synpred27_cs

	partial void EnterRule_synpred28_cs_fragment();
	partial void LeaveRule_synpred28_cs_fragment();

	// $ANTLR start synpred28_cs
	private void synpred28_cs_fragment()
	{
		EnterRule_synpred28_cs_fragment();
		EnterRule("synpred28_cs_fragment", 345);
		var retval = new Antlr3AstNode("synpred28_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:781:11: ( member_name '(' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:781:12: member_name '('
			{
			DebugLocation(781, 12);
			PushFollow(Follow._member_name_in_synpred28_cs5716);
			member_name();
			PopFollow();
			if (state.failed) return;
			DebugLocation(781, 26);
			Match(input,68,Follow._68_in_synpred28_cs5720); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred28_cs_fragment", 345);
			LeaveRule("synpred28_cs_fragment", 345);
			LeaveRule_synpred28_cs_fragment();
		}
	}
	// $ANTLR end synpred28_cs

	partial void EnterRule_synpred29_cs_fragment();
	partial void LeaveRule_synpred29_cs_fragment();

	// $ANTLR start synpred29_cs
	private void synpred29_cs_fragment()
	{
		EnterRule_synpred29_cs_fragment();
		EnterRule("synpred29_cs_fragment", 346);
		var retval = new Antlr3AstNode("synpred29_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:782:8: ( member_name '{' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:782:9: member_name '{'
			{
			DebugLocation(782, 9);
			PushFollow(Follow._member_name_in_synpred29_cs5735);
			member_name();
			PopFollow();
			if (state.failed) return;
			DebugLocation(782, 23);
			Match(input,197,Follow._197_in_synpred29_cs5739); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred29_cs_fragment", 346);
			LeaveRule("synpred29_cs_fragment", 346);
			LeaveRule_synpred29_cs_fragment();
		}
	}
	// $ANTLR end synpred29_cs

	partial void EnterRule_synpred30_cs_fragment();
	partial void LeaveRule_synpred30_cs_fragment();

	// $ANTLR start synpred30_cs
	private void synpred30_cs_fragment()
	{
		EnterRule_synpred30_cs_fragment();
		EnterRule("synpred30_cs_fragment", 347);
		var retval = new Antlr3AstNode("synpred30_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:783:8: ( member_name '.' 'this' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:783:9: member_name '.' 'this'
			{
			DebugLocation(783, 9);
			PushFollow(Follow._member_name_in_synpred30_cs5754);
			member_name();
			PopFollow();
			if (state.failed) return;
			DebugLocation(783, 23);
			Match(input,DOT,Follow._DOT_in_synpred30_cs5758); if (state.failed) return;
			DebugLocation(783, 29);
			Match(input,180,Follow._180_in_synpred30_cs5762); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred30_cs_fragment", 347);
			LeaveRule("synpred30_cs_fragment", 347);
			LeaveRule_synpred30_cs_fragment();
		}
	}
	// $ANTLR end synpred30_cs

	partial void EnterRule_synpred31_cs_fragment();
	partial void LeaveRule_synpred31_cs_fragment();

	// $ANTLR start synpred31_cs
	private void synpred31_cs_fragment()
	{
		EnterRule_synpred31_cs_fragment();
		EnterRule("synpred31_cs_fragment", 348);
		var retval = new Antlr3AstNode("synpred31_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:855:23: ( arguments ( '[' | '.' | '->' ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:855:24: arguments ( '[' | '.' | '->' )
			{
			DebugLocation(855, 24);
			PushFollow(Follow._arguments_in_synpred31_cs6308);
			arguments();
			PopFollow();
			if (state.failed) return;
			DebugLocation(855, 36);
			if (input.LA(1)==DOT||input.LA(1)==PTR||input.LA(1)==91)
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("synpred31_cs_fragment", 348);
			LeaveRule("synpred31_cs_fragment", 348);
			LeaveRule_synpred31_cs_fragment();
		}
	}
	// $ANTLR end synpred31_cs

	partial void EnterRule_synpred32_cs_fragment();
	partial void LeaveRule_synpred32_cs_fragment();

	// $ANTLR start synpred32_cs
	private void synpred32_cs_fragment()
	{
		EnterRule_synpred32_cs_fragment();
		EnterRule("synpred32_cs_fragment", 349);
		var retval = new Antlr3AstNode("synpred32_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:859:4: ( identifier '<' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:859:5: identifier '<'
			{
			DebugLocation(859, 5);
			PushFollow(Follow._identifier_in_synpred32_cs6359);
			identifier();
			PopFollow();
			if (state.failed) return;
			DebugLocation(859, 19);
			Match(input,81,Follow._81_in_synpred32_cs6364); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred32_cs_fragment", 349);
			LeaveRule("synpred32_cs_fragment", 349);
			LeaveRule_synpred32_cs_fragment();
		}
	}
	// $ANTLR end synpred32_cs

	partial void EnterRule_synpred33_cs_fragment();
	partial void LeaveRule_synpred33_cs_fragment();

	// $ANTLR start synpred33_cs
	private void synpred33_cs_fragment()
	{
		EnterRule_synpred33_cs_fragment();
		EnterRule("synpred33_cs_fragment", 350);
		var retval = new Antlr3AstNode("synpred33_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:872:2: ( declaration_statement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:872:3: declaration_statement
			{
			DebugLocation(872, 3);
			PushFollow(Follow._declaration_statement_in_synpred33_cs6445);
			declaration_statement();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred33_cs_fragment", 350);
			LeaveRule("synpred33_cs_fragment", 350);
			LeaveRule_synpred33_cs_fragment();
		}
	}
	// $ANTLR end synpred33_cs

	partial void EnterRule_synpred34_cs_fragment();
	partial void LeaveRule_synpred34_cs_fragment();

	// $ANTLR start synpred34_cs
	private void synpred34_cs_fragment()
	{
		EnterRule_synpred34_cs_fragment();
		EnterRule("synpred34_cs_fragment", 351);
		var retval = new Antlr3AstNode("synpred34_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:873:4: ( identifier ':' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:873:5: identifier ':'
			{
			DebugLocation(873, 5);
			PushFollow(Follow._identifier_in_synpred34_cs6456);
			identifier();
			PopFollow();
			if (state.failed) return;
			DebugLocation(873, 18);
			Match(input,79,Follow._79_in_synpred34_cs6460); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred34_cs_fragment", 351);
			LeaveRule("synpred34_cs_fragment", 351);
			LeaveRule_synpred34_cs_fragment();
		}
	}
	// $ANTLR end synpred34_cs

	partial void EnterRule_synpred35_cs_fragment();
	partial void LeaveRule_synpred35_cs_fragment();

	// $ANTLR start synpred35_cs
	private void synpred35_cs_fragment()
	{
		EnterRule_synpred35_cs_fragment();
		EnterRule("synpred35_cs_fragment", 352);
		var retval = new Antlr3AstNode("synpred35_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:910:2: ( 'var' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:910:3: 'var'
			{
			DebugLocation(910, 3);
			Match(input,190,Follow._190_in_synpred35_cs6684); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred35_cs_fragment", 352);
			LeaveRule("synpred35_cs_fragment", 352);
			LeaveRule_synpred35_cs_fragment();
		}
	}
	// $ANTLR end synpred35_cs

	partial void EnterRule_synpred36_cs_fragment();
	partial void LeaveRule_synpred36_cs_fragment();

	// $ANTLR start synpred36_cs
	private void synpred36_cs_fragment()
	{
		EnterRule_synpred36_cs_fragment();
		EnterRule("synpred36_cs_fragment", 353);
		var retval = new Antlr3AstNode("synpred36_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:911:4: ( 'dynamic' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:911:5: 'dynamic'
			{
			DebugLocation(911, 5);
			Match(input,120,Follow._120_in_synpred36_cs6695); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred36_cs_fragment", 353);
			LeaveRule("synpred36_cs_fragment", 353);
			LeaveRule_synpred36_cs_fragment();
		}
	}
	// $ANTLR end synpred36_cs

	partial void EnterRule_synpred37_cs_fragment();
	partial void LeaveRule_synpred37_cs_fragment();

	// $ANTLR start synpred37_cs
	private void synpred37_cs_fragment()
	{
		EnterRule_synpred37_cs_fragment();
		EnterRule("synpred37_cs_fragment", 354);
		var retval = new Antlr3AstNode("synpred37_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:937:62: ( 'else' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:937:63: 'else'
			{
			DebugLocation(937, 63);
			Match(input,121,Follow._121_in_synpred37_cs6862); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred37_cs_fragment", 354);
			LeaveRule("synpred37_cs_fragment", 354);
			LeaveRule_synpred37_cs_fragment();
		}
	}
	// $ANTLR end synpred37_cs

	partial void EnterRule_synpred38_cs_fragment();
	partial void LeaveRule_synpred38_cs_fragment();

	// $ANTLR start synpred38_cs
	private void synpred38_cs_fragment()
	{
		EnterRule_synpred38_cs_fragment();
		EnterRule("synpred38_cs_fragment", 355);
		var retval = new Antlr3AstNode("synpred38_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:966:2: ( local_variable_declaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:966:3: local_variable_declaration
			{
			DebugLocation(966, 3);
			PushFollow(Follow._local_variable_declaration_in_synpred38_cs7113);
			local_variable_declaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred38_cs_fragment", 355);
			LeaveRule("synpred38_cs_fragment", 355);
			LeaveRule_synpred38_cs_fragment();
		}
	}
	// $ANTLR end synpred38_cs

	partial void EnterRule_synpred39_cs_fragment();
	partial void LeaveRule_synpred39_cs_fragment();

	// $ANTLR start synpred39_cs
	private void synpred39_cs_fragment()
	{
		EnterRule_synpred39_cs_fragment();
		EnterRule("synpred39_cs_fragment", 356);
		var retval = new Antlr3AstNode("synpred39_cs_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1018:2: ( local_variable_declaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Processors\\CSharp\\cs.g:1018:3: local_variable_declaration
			{
			DebugLocation(1018, 3);
			PushFollow(Follow._local_variable_declaration_in_synpred39_cs7526);
			local_variable_declaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred39_cs_fragment", 356);
			LeaveRule("synpred39_cs_fragment", 356);
			LeaveRule_synpred39_cs_fragment();
		}
	}
	// $ANTLR end synpred39_cs
	#endregion Rules

	#region Synpreds
	private bool EvaluatePredicate(System.Action fragment)
	{
		bool success = false;
		state.backtracking++;
		try { DebugBeginBacktrack(state.backtracking);
		int start = input.Mark();
		try
		{
			fragment();
		}
		catch ( RecognitionException re )
		{
			System.Console.Error.WriteLine("impossible: "+re);
		}
		success = !state.failed;
		input.Rewind(start);
		} finally { DebugEndBacktrack(state.backtracking, success); }
		state.backtracking--;
		state.failed=false;
		return success;
	}
	#endregion Synpreds


	#region DFA
	private DFA50 dfa50;
	private DFA71 dfa71;
	private DFA72 dfa72;

	protected override void InitDFAs()
	{
		base.InitDFAs();
		dfa50 = new DFA50( this );
		dfa71 = new DFA71( this, SpecialStateTransition71 );
		dfa72 = new DFA72( this, SpecialStateTransition72 );
	}

	private class DFA50 : DFA
	{
		private const string DFA50_eotS =
			"\x5\xFFFF";
		private const string DFA50_eofS =
			"\x1\x2\x3\xFFFF\x1\x2";
		private const string DFA50_minS =
			"\x1\xA\x1\x5\x2\xFFFF\x1\xA";
		private const string DFA50_maxS =
			"\x1\xC9\x1\xCA\x2\xFFFF\x1\xC9";
		private const string DFA50_acceptS =
			"\x2\xFFFF\x1\x1\x1\x2\x1\xFFFF";
		private const string DFA50_specialS =
			"\x5\xFFFF}>";
		private static readonly string[] DFA50_transitionS =
			{
				"\x1\x3\xA\xFFFF\x1\x2\x5\xFFFF\x1\x2\x6\xFFFF\x1\x2\xA\xFFFF\x1\x3\x1"+
				"\xFFFF\x1\x2\x2\xFFFF\x1\x2\xB\xFFFF\x6\x2\x1\x3\xB\x2\x1\xFFFF\x6\x2"+
				"\x1\xFFFF\x3\x2\x1\x1\x4\x2\x1\xFFFF\x5\x2\x3\xFFFF\x1\x2\xB\xFFFF\x1"+
				"\x2\x2\xFFFF\x1\x2\x1\xFFFF\x1\x2\x3\xFFFF\x1\x2\x5\xFFFF\x1\x2\x2\xFFFF"+
				"\x1\x2\x5\xFFFF\x4\x2\x2\xFFFF\x2\x2\x3\xFFFF\x1\x2\x1\xFFFF\x1\x2\x2"+
				"\xFFFF\x1\x2\x2\xFFFF\x1\x2\x1\xFFFF\x1\x2\x4\xFFFF\x1\x2\x3\xFFFF\x2"+
				"\x2\xA\xFFFF\x1\x2\x6\xFFFF\x1\x2\x3\xFFFF\x1\x2\x1\xFFFF\x6\x2",
				"\x1\x3\xE\xFFFF\x1\x3\x5\xFFFF\x2\x3\x6\xFFFF\x3\x3\xB\xFFFF\x1\x3\x2"+
				"\xFFFF\x1\x3\x1\xFFFF\x1\x3\x4\xFFFF\x1\x3\x2\xFFFF\x1\x3\x4\xFFFF\x1"+
				"\x3\x1\xFFFF\x2\x3\x1\xFFFF\x2\x3\x1\xFFFF\x1\x2\x1\x3\x10\xFFFF\x1"+
				"\x4\x2\xFFFF\x1\x3\x1\xFFFF\x2\x3\x1\xFFFF\x4\x3\x1\xFFFF\x2\x3\x2\xFFFF"+
				"\x2\x3\x3\xFFFF\x4\x3\x1\xFFFF\x2\x3\x1\xFFFF\x1\x3\x3\xFFFF\x1\x3\x2"+
				"\xFFFF\x1\x3\x2\xFFFF\x1\x3\x2\xFFFF\x1\x3\x2\xFFFF\x1\x3\x2\xFFFF\x1"+
				"\x3\x1\xFFFF\x2\x3\x1\xFFFF\x3\x3\x1\xFFFF\x3\x3\x1\xFFFF\x1\x3\x2\xFFFF"+
				"\x1\x3\x2\xFFFF\x1\x3\x1\xFFFF\x1\x3\x4\xFFFF\x1\x3\x1\xFFFF\x1\x3\x1"+
				"\xFFFF\x4\x3\x2\xFFFF\x1\x3\x2\xFFFF\x1\x3\x2\xFFFF\x5\x3\x1\xFFFF\x2"+
				"\x3\x3\xFFFF\x1\x3\x1\xFFFF\x1\x3\x5\xFFFF\x1\x3",
				"",
				"",
				"\x1\x3\xA\xFFFF\x1\x2\x5\xFFFF\x1\x2\x6\xFFFF\x1\x2\xA\xFFFF\x1\x3\x1"+
				"\xFFFF\x1\x2\x2\xFFFF\x1\x2\xB\xFFFF\x6\x2\x1\x3\xB\x2\x1\xFFFF\x6\x2"+
				"\x1\xFFFF\x3\x2\x1\x1\x4\x2\x1\xFFFF\x5\x2\x3\xFFFF\x1\x2\xB\xFFFF\x1"+
				"\x2\x2\xFFFF\x1\x2\x1\xFFFF\x1\x2\x3\xFFFF\x1\x2\x5\xFFFF\x1\x2\x2\xFFFF"+
				"\x1\x2\x5\xFFFF\x4\x2\x2\xFFFF\x2\x2\x3\xFFFF\x1\x2\x1\xFFFF\x1\x2\x2"+
				"\xFFFF\x1\x2\x2\xFFFF\x1\x2\x1\xFFFF\x1\x2\x4\xFFFF\x1\x2\x3\xFFFF\x2"+
				"\x2\xA\xFFFF\x1\x2\x6\xFFFF\x1\x2\x3\xFFFF\x1\x2\x1\xFFFF\x6\x2"
			};

		private static readonly short[] DFA50_eot = DFA.UnpackEncodedString(DFA50_eotS);
		private static readonly short[] DFA50_eof = DFA.UnpackEncodedString(DFA50_eofS);
		private static readonly char[] DFA50_min = DFA.UnpackEncodedStringToUnsignedChars(DFA50_minS);
		private static readonly char[] DFA50_max = DFA.UnpackEncodedStringToUnsignedChars(DFA50_maxS);
		private static readonly short[] DFA50_accept = DFA.UnpackEncodedString(DFA50_acceptS);
		private static readonly short[] DFA50_special = DFA.UnpackEncodedString(DFA50_specialS);
		private static readonly short[][] DFA50_transition;

		static DFA50()
		{
			int numStates = DFA50_transitionS.Length;
			DFA50_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA50_transition[i] = DFA.UnpackEncodedString(DFA50_transitionS[i]);
			}
		}

		public DFA50( BaseRecognizer recognizer )
		{
			this.recognizer = recognizer;
			this.decisionNumber = 50;
			this.eot = DFA50_eot;
			this.eof = DFA50_eof;
			this.min = DFA50_min;
			this.max = DFA50_max;
			this.accept = DFA50_accept;
			this.special = DFA50_special;
			this.transition = DFA50_transition;
		}

		public override string Description { get { return "206:6: ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private class DFA71 : DFA
	{
		private const string DFA71_eotS =
			"\x10\xFFFF";
		private const string DFA71_eofS =
			"\x10\xFFFF";
		private const string DFA71_minS =
			"\x1\x1B\x1\xA\x1\xFFFF\x1\x2F\x1\x1B\x1\x15\x1\x1B\x1\xFFFF\x1\xA\x2"+
			"\xFFFF\x1\xA\x2\x15\x2\xFFFF";
		private const string DFA71_maxS =
			"\x1\xC4\x1\x5B\x1\xFFFF\x1\x45\x3\xC4\x1\xFFFF\x1\x5B\x2\xFFFF\x1\x5B"+
			"\x2\xC4\x2\xFFFF";
		private const string DFA71_acceptS =
			"\x2\xFFFF\x1\x2\x4\xFFFF\x1\x3\x1\xFFFF\x2\x1\x3\xFFFF\x2\x1";
		private const string DFA71_specialS =
			"\x5\xFFFF\x1\x0\x6\xFFFF\x1\x1\x1\x2\x2\xFFFF}>";
		private static readonly string[] DFA71_transitionS =
			{
				"\x1\x1\x43\xFFFF\x1\x1\x1\xFFFF\x2\x1\x1\xFFFF\x2\x1\x1\xFFFF\x1\x2"+
				"\x1\xFFFF\x1\x1\x1\x2\x2\xFFFF\x1\x2\x4\xFFFF\x1\x2\x2\xFFFF\x1\x1\x1"+
				"\xFFFF\x1\x2\x1\x1\x1\xFFFF\x1\x1\x3\xFFFF\x1\x1\x2\xFFFF\x1\x2\x2\xFFFF"+
				"\x1\x1\x2\xFFFF\x1\x1\x2\xFFFF\x1\x2\x2\xFFFF\x1\x1\x1\xFFFF\x2\x1\x1"+
				"\xFFFF\x1\x2\x2\x1\x2\xFFFF\x1\x2\x1\x1\x1\xFFFF\x1\x1\x2\xFFFF\x1\x1"+
				"\x2\xFFFF\x1\x1\x1\xFFFF\x1\x1\x4\xFFFF\x1\x1\x1\xFFFF\x1\x2\x1\xFFFF"+
				"\x2\x1\x1\x2\x3\xFFFF\x1\x2\x5\xFFFF\x1\x1\x1\xFFFF\x2\x2\x2\xFFFF\x1"+
				"\x2\x1\x1\x1\xFFFF\x1\x3\x1\xFFFF\x1\x1\x1\xFFFF\x1\x1",
				"\x1\x6\x24\xFFFF\x1\x2\x15\xFFFF\x1\x2\xA\xFFFF\x1\x4\x1\x5\x7\xFFFF"+
				"\x1\x2\x1\xFFFF\x1\x2",
				"",
				"\x1\x7\x15\xFFFF\x1\x2",
				"\x1\x8\x43\xFFFF\x1\x8\x1\xFFFF\x2\x8\x1\xFFFF\x2\x8\x3\xFFFF\x1\x8"+
				"\xB\xFFFF\x1\x8\x2\xFFFF\x1\x8\x1\xFFFF\x1\x8\x3\xFFFF\x1\x8\x5\xFFFF"+
				"\x1\x8\x2\xFFFF\x1\x8\x5\xFFFF\x1\x8\x1\xFFFF\x2\x8\x2\xFFFF\x2\x8\x3"+
				"\xFFFF\x1\x8\x1\xFFFF\x1\x8\x2\xFFFF\x1\x8\x2\xFFFF\x1\x8\x1\xFFFF\x1"+
				"\x8\x4\xFFFF\x1\x8\x3\xFFFF\x2\x8\xA\xFFFF\x1\x8\x6\xFFFF\x1\x8\x3\xFFFF"+
				"\x1\x8\x1\xFFFF\x1\x8",
				"\x1\xA\x5\xFFFF\x1\x2\x2E\xFFFF\x1\x9\x14\xFFFF\x1\x2\x1\xFFFF\x2\x2"+
				"\x1\xFFFF\x2\x2\x1\xFFFF\x1\x2\x1\xFFFF\x2\x2\x2\xFFFF\x1\x2\x4\xFFFF"+
				"\x1\x2\x2\xFFFF\x1\x2\x1\xFFFF\x2\x2\x1\xFFFF\x1\x2\x3\xFFFF\x1\x2\x2"+
				"\xFFFF\x1\x2\x2\xFFFF\x1\x2\x2\xFFFF\x1\x2\x2\xFFFF\x1\x2\x2\xFFFF\x1"+
				"\x2\x1\xFFFF\x2\x2\x1\xFFFF\x3\x2\x2\xFFFF\x2\x2\x1\xFFFF\x1\x2\x2\xFFFF"+
				"\x1\x2\x2\xFFFF\x1\x2\x1\xFFFF\x1\x2\x4\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1"+
				"\xFFFF\x3\x2\x3\xFFFF\x1\x2\x5\xFFFF\x1\x2\x1\xFFFF\x2\x2\x2\xFFFF\x2"+
				"\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2",
				"\x1\xB\x43\xFFFF\x1\xB\x1\xFFFF\x2\xB\x1\xFFFF\x2\xB\x3\xFFFF\x1\xB"+
				"\xB\xFFFF\x1\xB\x2\xFFFF\x1\xB\x1\xFFFF\x1\xB\x3\xFFFF\x1\xB\x5\xFFFF"+
				"\x1\xB\x2\xFFFF\x1\xB\x5\xFFFF\x1\xB\x1\xFFFF\x2\xB\x2\xFFFF\x2\xB\x3"+
				"\xFFFF\x1\xB\x1\xFFFF\x1\xB\x2\xFFFF\x1\xB\x2\xFFFF\x1\xB\x1\xFFFF\x1"+
				"\xB\x4\xFFFF\x1\xB\x3\xFFFF\x2\xB\xA\xFFFF\x1\xB\x6\xFFFF\x1\xB\x3\xFFFF"+
				"\x1\xB\x1\xFFFF\x1\xB",
				"",
				"\x1\x6\x24\xFFFF\x1\x2\x15\xFFFF\x1\x2\xB\xFFFF\x1\xC\x7\xFFFF\x1\x2"+
				"\x1\xFFFF\x1\x2",
				"",
				"",
				"\x1\x6\x24\xFFFF\x1\x2\x15\xFFFF\x1\x2\xB\xFFFF\x1\xD\x7\xFFFF\x1\x2"+
				"\x1\xFFFF\x1\x2",
				"\x1\xA\x5\xFFFF\x1\x2\x2E\xFFFF\x1\x9\x14\xFFFF\x1\x2\x1\xFFFF\x2\x2"+
				"\x1\xFFFF\x2\x2\x1\xFFFF\x1\x2\x1\xFFFF\x2\x2\x2\xFFFF\x1\x2\x4\xFFFF"+
				"\x1\x2\x2\xFFFF\x1\x2\x1\xFFFF\x2\x2\x1\xFFFF\x1\x2\x3\xFFFF\x1\x2\x2"+
				"\xFFFF\x1\x2\x2\xFFFF\x1\x2\x2\xFFFF\x1\x2\x2\xFFFF\x1\x2\x2\xFFFF\x1"+
				"\x2\x1\xFFFF\x2\x2\x1\xFFFF\x3\x2\x2\xFFFF\x2\x2\x1\xFFFF\x1\x2\x2\xFFFF"+
				"\x1\x2\x2\xFFFF\x1\x2\x1\xFFFF\x1\x2\x4\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1"+
				"\xFFFF\x3\x2\x3\xFFFF\x1\x2\x5\xFFFF\x1\x2\x1\xFFFF\x2\x2\x2\xFFFF\x2"+
				"\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2",
				"\x1\xF\x5\xFFFF\x1\x2\x2E\xFFFF\x1\xE\x14\xFFFF\x1\x2\x1\xFFFF\x2\x2"+
				"\x1\xFFFF\x2\x2\x1\xFFFF\x1\x2\x1\xFFFF\x2\x2\x2\xFFFF\x1\x2\x4\xFFFF"+
				"\x1\x2\x2\xFFFF\x1\x2\x1\xFFFF\x2\x2\x1\xFFFF\x1\x2\x3\xFFFF\x1\x2\x2"+
				"\xFFFF\x1\x2\x2\xFFFF\x1\x2\x2\xFFFF\x1\x2\x2\xFFFF\x1\x2\x2\xFFFF\x1"+
				"\x2\x1\xFFFF\x2\x2\x1\xFFFF\x3\x2\x2\xFFFF\x2\x2\x1\xFFFF\x1\x2\x2\xFFFF"+
				"\x1\x2\x2\xFFFF\x1\x2\x1\xFFFF\x1\x2\x4\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1"+
				"\xFFFF\x3\x2\x3\xFFFF\x1\x2\x5\xFFFF\x1\x2\x1\xFFFF\x2\x2\x2\xFFFF\x2"+
				"\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2",
				"",
				""
			};

		private static readonly short[] DFA71_eot = DFA.UnpackEncodedString(DFA71_eotS);
		private static readonly short[] DFA71_eof = DFA.UnpackEncodedString(DFA71_eofS);
		private static readonly char[] DFA71_min = DFA.UnpackEncodedStringToUnsignedChars(DFA71_minS);
		private static readonly char[] DFA71_max = DFA.UnpackEncodedStringToUnsignedChars(DFA71_maxS);
		private static readonly short[] DFA71_accept = DFA.UnpackEncodedString(DFA71_acceptS);
		private static readonly short[] DFA71_special = DFA.UnpackEncodedString(DFA71_specialS);
		private static readonly short[][] DFA71_transition;

		static DFA71()
		{
			int numStates = DFA71_transitionS.Length;
			DFA71_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA71_transition[i] = DFA.UnpackEncodedString(DFA71_transitionS[i]);
			}
		}

		public DFA71( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 71;
			this.eot = DFA71_eot;
			this.eof = DFA71_eof;
			this.min = DFA71_min;
			this.max = DFA71_max;
			this.accept = DFA71_accept;
			this.special = DFA71_special;
			this.transition = DFA71_transition;
		}

		public override string Description { get { return "279:19: ( ( unbound_type_name )=> unbound_type_name | type | 'void' )"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition71(DFA dfa, int s, IIntStream _input)
	{
		ITokenStream input = (ITokenStream)_input;
		int _s = s;
		s = -1;
		int LA71_1 = input.LA(1);
		int index71_1 = input.Index;
		switch (_s)
		{
		case 0:
			{
				input.Rewind();
				if ((LA71_1==74) && (EvaluatePredicate(synpred13_cs_fragment))) {s = 9;}

				else if ((LA71_1==GT) && (EvaluatePredicate(synpred13_cs_fragment))) {s = 10;}

				else if ((LA71_1==IDENTIFIER||LA71_1==95||(LA71_1>=97 && LA71_1<=98)||(LA71_1>=100 && LA71_1<=101)||LA71_1==103||(LA71_1>=105 && LA71_1<=106)||LA71_1==109||LA71_1==114||LA71_1==117||(LA71_1>=119 && LA71_1<=120)||LA71_1==122||LA71_1==126||LA71_1==129||LA71_1==132||LA71_1==135||LA71_1==138||LA71_1==141||(LA71_1>=143 && LA71_1<=144)||(LA71_1>=146 && LA71_1<=148)||(LA71_1>=151 && LA71_1<=152)||LA71_1==154||LA71_1==157||LA71_1==160||LA71_1==162||LA71_1==167||LA71_1==169||(LA71_1>=171 && LA71_1<=173)||LA71_1==177||LA71_1==183||(LA71_1>=185 && LA71_1<=186)||(LA71_1>=189 && LA71_1<=190)||LA71_1==192||LA71_1==194||LA71_1==196)) {s = 2;}

				input.Seek(index71_1);
				break;
			}
		case 1:
			{
				input.Rewind();
				if ((LA71_1==74) && (EvaluatePredicate(synpred13_cs_fragment))) {s = 9;}

				else if ((LA71_1==GT) && (EvaluatePredicate(synpred13_cs_fragment))) {s = 10;}

				else if ((LA71_1==IDENTIFIER||LA71_1==95||(LA71_1>=97 && LA71_1<=98)||(LA71_1>=100 && LA71_1<=101)||LA71_1==103||(LA71_1>=105 && LA71_1<=106)||LA71_1==109||LA71_1==114||LA71_1==117||(LA71_1>=119 && LA71_1<=120)||LA71_1==122||LA71_1==126||LA71_1==129||LA71_1==132||LA71_1==135||LA71_1==138||LA71_1==141||(LA71_1>=143 && LA71_1<=144)||(LA71_1>=146 && LA71_1<=148)||(LA71_1>=151 && LA71_1<=152)||LA71_1==154||LA71_1==157||LA71_1==160||LA71_1==162||LA71_1==167||LA71_1==169||(LA71_1>=171 && LA71_1<=173)||LA71_1==177||LA71_1==183||(LA71_1>=185 && LA71_1<=186)||(LA71_1>=189 && LA71_1<=190)||LA71_1==192||LA71_1==194||LA71_1==196)) {s = 2;}

				input.Seek(index71_1);
				break;
			}
		case 2:
			{
				input.Rewind();
				if ((LA71_1==74) && (EvaluatePredicate(synpred13_cs_fragment))) {s = 14;}

				else if ((LA71_1==GT) && (EvaluatePredicate(synpred13_cs_fragment))) {s = 15;}

				else if ((LA71_1==IDENTIFIER||LA71_1==95||(LA71_1>=97 && LA71_1<=98)||(LA71_1>=100 && LA71_1<=101)||LA71_1==103||(LA71_1>=105 && LA71_1<=106)||LA71_1==109||LA71_1==114||LA71_1==117||(LA71_1>=119 && LA71_1<=120)||LA71_1==122||LA71_1==126||LA71_1==129||LA71_1==132||LA71_1==135||LA71_1==138||LA71_1==141||(LA71_1>=143 && LA71_1<=144)||(LA71_1>=146 && LA71_1<=148)||(LA71_1>=151 && LA71_1<=152)||LA71_1==154||LA71_1==157||LA71_1==160||LA71_1==162||LA71_1==167||LA71_1==169||(LA71_1>=171 && LA71_1<=173)||LA71_1==177||LA71_1==183||(LA71_1>=185 && LA71_1<=186)||(LA71_1>=189 && LA71_1<=190)||LA71_1==192||LA71_1==194||LA71_1==196)) {s = 2;}

				input.Seek(index71_1);
				break;
			}

		default:
			break;
		}

		if (s >= 0)
			return s;

		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 71, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}
	private class DFA72 : DFA
	{
		private const string DFA72_eotS =
			"\x7\xFFFF";
		private const string DFA72_eofS =
			"\x4\xFFFF\x1\x5\x2\xFFFF";
		private const string DFA72_minS =
			"\x1\xA\x1\x15\x1\xFFFF\x1\x15\x1\xA\x2\xFFFF";
		private const string DFA72_maxS =
			"\x1\x51\x1\x4A\x1\xFFFF\x1\x4A\x1\x2F\x2\xFFFF";
		private const string DFA72_acceptS =
			"\x2\xFFFF\x1\x2\x2\xFFFF\x1\x3\x1\x1";
		private const string DFA72_specialS =
			"\x4\xFFFF\x1\x0\x2\xFFFF}>";
		private static readonly string[] DFA72_transitionS =
			{
				"\x1\x2\x46\xFFFF\x1\x1",
				"\x1\x4\x34\xFFFF\x1\x3",
				"",
				"\x1\x4\x34\xFFFF\x1\x3",
				"\x1\x6\x24\xFFFF\x1\x5",
				"",
				""
			};

		private static readonly short[] DFA72_eot = DFA.UnpackEncodedString(DFA72_eotS);
		private static readonly short[] DFA72_eof = DFA.UnpackEncodedString(DFA72_eofS);
		private static readonly char[] DFA72_min = DFA.UnpackEncodedStringToUnsignedChars(DFA72_minS);
		private static readonly char[] DFA72_max = DFA.UnpackEncodedStringToUnsignedChars(DFA72_maxS);
		private static readonly short[] DFA72_accept = DFA.UnpackEncodedString(DFA72_acceptS);
		private static readonly short[] DFA72_special = DFA.UnpackEncodedString(DFA72_specialS);
		private static readonly short[][] DFA72_transition;

		static DFA72()
		{
			int numStates = DFA72_transitionS.Length;
			DFA72_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA72_transition[i] = DFA.UnpackEncodedString(DFA72_transitionS[i]);
			}
		}

		public DFA72( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 72;
			this.eot = DFA72_eot;
			this.eof = DFA72_eof;
			this.min = DFA72_min;
			this.max = DFA72_max;
			this.accept = DFA72_accept;
			this.special = DFA72_special;
			this.transition = DFA72_transition;
		}

		public override string Description { get { return "()* loopback of 289:3: ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )*"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition72(DFA dfa, int s, IIntStream _input)
	{
		ITokenStream input = (ITokenStream)_input;
		int _s = s;
		s = -1;
		int LA72_1 = input.LA(1);
		int index72_1 = input.Index;
		switch (_s)
		{
		case 0:
			{
				input.Rewind();
				if ((LA72_1==EOF||LA72_1==RPAREN)) {s = 5;}

				else if ((LA72_1==DOT) && (EvaluatePredicate(synpred14_cs_fragment))) {s = 6;}

				input.Seek(index72_1);
				break;
			}

		default:
			break;
		}

		if (s >= 0)
			return s;

		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 72, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}

	#endregion DFA

	#region Follow sets
	private static class Follow
	{
		public static readonly BitSet _namespace_body_in_compilation_unit85 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _149_in_namespace_declaration94 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _qualified_identifier_in_namespace_declaration98 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _namespace_block_in_namespace_declaration102 = new BitSet(new ulong[]{0x4000000000002UL});
		public static readonly BitSet _SEMI_in_namespace_declaration106 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _197_in_namespace_block115 = new BitSet(new ulong[]{0x200000000020000UL,0x2010800108000000UL,0x9005043A90601800UL,0x202UL});
		public static readonly BitSet _namespace_body_in_namespace_block119 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x200UL});
		public static readonly BitSet _201_in_namespace_block124 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _extern_alias_directives_in_namespace_body133 = new BitSet(new ulong[]{0x200000000020002UL,0x2010800108000000UL,0x9005043A90601800UL,0x2UL});
		public static readonly BitSet _using_directives_in_namespace_body138 = new BitSet(new ulong[]{0x20002UL,0x2010800108000000UL,0x9005043A90601800UL,0x2UL});
		public static readonly BitSet _global_attributes_in_namespace_body143 = new BitSet(new ulong[]{0x20002UL,0x2010800108000000UL,0x9005043A90601800UL,0x2UL});
		public static readonly BitSet _namespace_member_declarations_in_namespace_body148 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _extern_alias_directive_in_extern_alias_directives157 = new BitSet(new ulong[]{0x2UL,0x2000000000000000UL});
		public static readonly BitSet _125_in_extern_alias_directive166 = new BitSet(new ulong[]{0x0UL,0x400000000UL});
		public static readonly BitSet _98_in_extern_alias_directive170 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_extern_alias_directive174 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_extern_alias_directive177 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _using_directive_in_using_directives185 = new BitSet(new ulong[]{0x200000000000002UL});
		public static readonly BitSet _using_alias_directive_in_using_directive195 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _using_namespace_directive_in_using_directive200 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _USING_in_using_alias_directive209 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_using_alias_directive213 = new BitSet(new ulong[]{0x0UL,0x200000UL});
		public static readonly BitSet _85_in_using_alias_directive217 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _namespace_or_type_name_in_using_alias_directive221 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_using_alias_directive225 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _USING_in_using_namespace_directive233 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _namespace_name_in_using_namespace_directive237 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_using_namespace_directive241 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _namespace_member_declaration_in_namespace_member_declarations249 = new BitSet(new ulong[]{0x20002UL,0x2010800108000000UL,0x9005043A90601800UL,0x2UL});
		public static readonly BitSet _namespace_declaration_in_namespace_member_declaration258 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attributes_in_namespace_member_declaration263 = new BitSet(new ulong[]{0x20000UL,0x2010800100000000UL,0x9005043A90401800UL,0x2UL});
		public static readonly BitSet _modifiers_in_namespace_member_declaration268 = new BitSet(new ulong[]{0x20000UL,0x10800000000000UL,0x4000080000800UL});
		public static readonly BitSet _type_declaration_in_namespace_member_declaration273 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _159_in_type_declaration287 = new BitSet(new ulong[]{0x0UL,0x800000000000UL,0x4000000000800UL});
		public static readonly BitSet _class_declaration_in_type_declaration292 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _struct_declaration_in_type_declaration304 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_declaration_in_type_declaration316 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _class_declaration_in_type_declaration322 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _struct_declaration_in_type_declaration327 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_declaration_in_type_declaration332 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enum_declaration_in_type_declaration337 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _delegate_declaration_in_type_declaration342 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_qualified_identifier351 = new BitSet(new ulong[]{0x402UL});
		public static readonly BitSet _DOT_in_qualified_identifier354 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_qualified_identifier356 = new BitSet(new ulong[]{0x402UL});
		public static readonly BitSet _namespace_or_type_name_in_namespace_name367 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifier_in_modifiers376 = new BitSet(new ulong[]{0x2UL,0x2000000100000000UL,0x9001043A10401000UL,0x2UL});
		public static readonly BitSet _attributes_in_class_member_declaration448 = new BitSet(new ulong[]{0x8020000UL,0x7DB5A6B780000000UL,0xF6873EBFB5DDBD92UL,0x417UL});
		public static readonly BitSet _modifiers_in_class_member_declaration454 = new BitSet(new ulong[]{0x8020000UL,0x5DB5A6B680000000UL,0x66863A85A59DAD92UL,0x415UL});
		public static readonly BitSet _112_in_class_member_declaration460 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_in_class_member_declaration464 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _constant_declarators_in_class_member_declaration468 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_class_member_declaration472 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _event_declaration_in_class_member_declaration477 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _159_in_class_member_declaration484 = new BitSet(new ulong[]{0x42900180C100020UL,0x45A4A6B680000000UL,0x66863A85259DAC92UL,0x14UL});
		public static readonly BitSet _method_declaration_in_class_member_declaration487 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_declaration_in_class_member_declaration498 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _class_declaration_in_class_member_declaration509 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _struct_declaration_in_class_member_declaration520 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_declaration_in_class_member_declaration526 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _192_in_class_member_declaration532 = new BitSet(new ulong[]{0x42900180C100020UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x14UL});
		public static readonly BitSet _method_declaration_in_class_member_declaration536 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_class_member_declaration541 = new BitSet(new ulong[]{0x42900180C100020UL,0x45A426B680000000UL,0x66923A85279DA492UL,0x14UL});
		public static readonly BitSet _method_declaration_in_class_member_declaration555 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _property_declaration_in_class_member_declaration574 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_name_in_class_member_declaration597 = new BitSet(new ulong[]{0x400UL});
		public static readonly BitSet _DOT_in_class_member_declaration599 = new BitSet(new ulong[]{0x0UL,0x0UL,0x10000000000000UL});
		public static readonly BitSet _indexer_declaration_in_class_member_declaration601 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _indexer_declaration_in_class_member_declaration610 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _field_declaration_in_class_member_declaration623 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _operator_declaration_in_class_member_declaration641 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _class_declaration_in_class_member_declaration659 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _struct_declaration_in_class_member_declaration666 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enum_declaration_in_class_member_declaration672 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _delegate_declaration_in_class_member_declaration679 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _conversion_operator_declaration_in_class_member_declaration685 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constructor_declaration_in_class_member_declaration690 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _destructor_declaration_in_class_member_declaration696 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _180_in_primary_expression722 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _brackets_in_primary_expression726 = new BitSet(new ulong[]{0x200000000402UL,0x8000010UL});
		public static readonly BitSet _primary_expression_part_in_primary_expression730 = new BitSet(new ulong[]{0x200000000402UL,0x8000010UL});
		public static readonly BitSet _180_in_primary_expression746 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _brackets_in_primary_expression750 = new BitSet(new ulong[]{0x200000000402UL,0x8000010UL});
		public static readonly BitSet _primary_expression_part_in_primary_expression754 = new BitSet(new ulong[]{0x200000000402UL,0x8000010UL});
		public static readonly BitSet _primary_expression_start_in_primary_expression760 = new BitSet(new ulong[]{0x200000000402UL,0x8000010UL});
		public static readonly BitSet _primary_expression_part_in_primary_expression764 = new BitSet(new ulong[]{0x200000000402UL,0x8000010UL});
		public static readonly BitSet _150_in_primary_expression770 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x35UL});
		public static readonly BitSet _object_creation_expression_in_primary_expression798 = new BitSet(new ulong[]{0x200000000400UL,0x8000010UL});
		public static readonly BitSet _primary_expression_part_in_primary_expression802 = new BitSet(new ulong[]{0x200000000402UL,0x8000010UL});
		public static readonly BitSet _delegate_creation_expression_in_primary_expression830 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _object_creation_expression_in_primary_expression838 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _anonymous_object_creation_expression_in_primary_expression846 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _sizeof_expression_in_primary_expression859 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _checked_expression_in_primary_expression870 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _unchecked_expression_in_primary_expression889 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _default_value_expression_in_primary_expression906 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _anonymous_method_expression_in_primary_expression919 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _predefined_type_in_primary_expression_start932 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_primary_expression_start957 = new BitSet(new ulong[]{0x0UL,0x20000UL});
		public static readonly BitSet _generic_argument_list_in_primary_expression_start959 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_primary_expression_start964 = new BitSet(new ulong[]{0x2UL,0x10000UL});
		public static readonly BitSet _80_in_primary_expression_start967 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_primary_expression_start971 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _180_in_primary_expression_start978 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _102_in_primary_expression_start984 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _paren_expression_in_primary_expression_start989 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _typeof_expression_in_primary_expression_start994 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _literal_in_primary_expression_start1012 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _access_identifier_in_primary_expression_part1023 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _brackets_or_arguments_in_primary_expression_part1028 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _access_operator_in_access_identifier1036 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _type_or_generic_in_access_identifier1040 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _brackets_in_brackets_or_arguments1062 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _arguments_in_brackets_or_arguments1066 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _91_in_brackets1074 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6900009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_list_in_brackets1078 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _92_in_brackets1083 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _68_in_paren_expression1093 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_paren_expression1097 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_paren_expression1101 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _68_in_arguments1110 = new BitSet(new ulong[]{0x2429801C0C100020UL,0x45BC66F6800009B4UL,0x6F927AC52DDDA492UL,0x414UL});
		public static readonly BitSet _argument_list_in_arguments1114 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_arguments1119 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _argument_in_argument_list1128 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_argument_list1131 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927AC52DDDA492UL,0x414UL});
		public static readonly BitSet _argument_in_argument_list1133 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _argument_name_in_argument1143 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927AC52DDDA492UL,0x414UL});
		public static readonly BitSet _argument_value_in_argument1147 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _argument_value_in_argument1152 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_argument_name1159 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _79_in_argument_name1163 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_argument_value1171 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ref_variable_reference_in_argument_value1177 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _155_in_argument_value1183 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _variable_reference_in_argument_value1187 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _166_in_ref_variable_reference1195 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _68_in_ref_variable_reference1217 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_in_ref_variable_reference1221 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_ref_variable_reference1225 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927AC525DDA492UL,0x414UL});
		public static readonly BitSet _ref_variable_reference_in_ref_variable_reference1230 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variable_reference_in_ref_variable_reference1234 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variable_reference_in_ref_variable_reference1270 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_variable_reference1280 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _rank_specifier_in_rank_specifiers1288 = new BitSet(new ulong[]{0x2UL,0x8000000UL});
		public static readonly BitSet _91_in_rank_specifier1306 = new BitSet(new ulong[]{0x0UL,0x10000400UL});
		public static readonly BitSet _dim_separators_in_rank_specifier1310 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _92_in_rank_specifier1315 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _74_in_dim_separators1324 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _type_name_in_delegate_creation_expression1337 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_delegate_creation_expression1341 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _type_name_in_delegate_creation_expression1345 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_delegate_creation_expression1349 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _anonymous_object_initializer_in_anonymous_object_creation_expression1360 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _197_in_anonymous_object_initializer1369 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000400UL,0x408018852519A090UL,0x214UL});
		public static readonly BitSet _member_declarator_list_in_anonymous_object_initializer1373 = new BitSet(new ulong[]{0x0UL,0x400UL,0x0UL,0x200UL});
		public static readonly BitSet _74_in_anonymous_object_initializer1378 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x200UL});
		public static readonly BitSet _201_in_anonymous_object_initializer1383 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_declarator_in_member_declarator_list1391 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_member_declarator_list1395 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _member_declarator_in_member_declarator_list1397 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _identifier_in_member_declarator1409 = new BitSet(new ulong[]{0x400UL,0x220000UL});
		public static readonly BitSet _generic_argument_list_in_member_declarator1414 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_member_declarator1424 = new BitSet(new ulong[]{0x42900180C100020UL,0x45BC66F680000010UL,0x6F927A8525DDA492UL,0x14UL});
		public static readonly BitSet _primary_or_array_creation_expression_in_member_declarator1428 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _85_in_member_declarator1438 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_member_declarator1442 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _array_creation_expression_in_primary_or_array_creation_expression1457 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _primary_expression_in_primary_or_array_creation_expression1462 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _150_in_array_creation_expression1473 = new BitSet(new ulong[]{0x8000000UL,0x45A426B688000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_in_array_creation_expression1481 = new BitSet(new ulong[]{0x0UL,0x8000000UL,0x0UL,0x20UL});
		public static readonly BitSet _91_in_array_creation_expression1486 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_list_in_array_creation_expression1490 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _92_in_array_creation_expression1494 = new BitSet(new ulong[]{0x200000000402UL,0x8000010UL,0x0UL,0x20UL});
		public static readonly BitSet _rank_specifiers_in_array_creation_expression1506 = new BitSet(new ulong[]{0x2UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _array_initializer_in_array_creation_expression1511 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _arguments_in_array_creation_expression1547 = new BitSet(new ulong[]{0x200000000400UL,0x8000000UL});
		public static readonly BitSet _invocation_part_in_array_creation_expression1551 = new BitSet(new ulong[]{0x200000000400UL,0x8000010UL});
		public static readonly BitSet _invocation_part_in_array_creation_expression1563 = new BitSet(new ulong[]{0x200000000400UL,0x8000010UL});
		public static readonly BitSet _arguments_in_array_creation_expression1569 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _array_initializer_in_array_creation_expression1591 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _rank_specifier_in_array_creation_expression1605 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _array_initializer_in_array_creation_expression1614 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _197_in_array_initializer1635 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F680000DB4UL,0x6F927A8525DDA492UL,0x634UL});
		public static readonly BitSet _variable_initializer_list_in_array_initializer1639 = new BitSet(new ulong[]{0x0UL,0x400UL,0x0UL,0x200UL});
		public static readonly BitSet _74_in_array_initializer1644 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x200UL});
		public static readonly BitSet _201_in_array_initializer1649 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variable_initializer_in_variable_initializer_list1657 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_variable_initializer_list1660 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x434UL});
		public static readonly BitSet _variable_initializer_in_variable_initializer_list1662 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _expression_in_variable_initializer1672 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _array_initializer_in_variable_initializer1676 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _174_in_sizeof_expression1684 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_sizeof_expression1688 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _unmanaged_type_in_sizeof_expression1692 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_sizeof_expression1696 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _110_in_checked_expression1704 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_checked_expression1708 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_checked_expression1712 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_checked_expression1716 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _187_in_unchecked_expression1725 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_unchecked_expression1729 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_unchecked_expression1733 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_unchecked_expression1737 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _115_in_default_value_expression1746 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_default_value_expression1750 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_in_default_value_expression1754 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_default_value_expression1758 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _116_in_anonymous_method_expression1766 = new BitSet(new ulong[]{0x4000000000000UL,0x10UL,0x0UL,0x20UL});
		public static readonly BitSet _explicit_anonymous_function_signature_in_anonymous_method_expression1770 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _block_in_anonymous_method_expression1775 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _68_in_explicit_anonymous_function_signature1782 = new BitSet(new ulong[]{0x800008000000UL,0x45A426B680000000UL,0x66823AC52D9DA492UL,0x15UL});
		public static readonly BitSet _explicit_anonymous_function_parameter_list_in_explicit_anonymous_function_signature1786 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_explicit_anonymous_function_signature1791 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list1799 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_explicit_anonymous_function_parameter_list1804 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823AC52D9DA492UL,0x15UL});
		public static readonly BitSet _explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list1808 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _anonymous_function_parameter_modifier_in_explicit_anonymous_function_parameter1819 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_in_explicit_anonymous_function_parameter1824 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_explicit_anonymous_function_parameter1828 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_object_creation_expression1852 = new BitSet(new ulong[]{0x0UL,0x10UL,0x0UL,0x20UL});
		public static readonly BitSet _68_in_object_creation_expression1861 = new BitSet(new ulong[]{0x2429801C0C100020UL,0x45BC66F6800009B4UL,0x6F927AC52DDDA492UL,0x414UL});
		public static readonly BitSet _argument_list_in_object_creation_expression1865 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_object_creation_expression1870 = new BitSet(new ulong[]{0x2UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _object_or_collection_initializer_in_object_creation_expression1874 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _object_or_collection_initializer_in_object_creation_expression1885 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _197_in_object_or_collection_initializer1897 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F680000DB4UL,0x6F927A8525DDA492UL,0x634UL});
		public static readonly BitSet _object_initializer_in_object_or_collection_initializer1901 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _collection_initializer_in_object_or_collection_initializer1908 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _element_initializer_list_in_collection_initializer1918 = new BitSet(new ulong[]{0x0UL,0x400UL,0x0UL,0x200UL});
		public static readonly BitSet _74_in_collection_initializer1922 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x200UL});
		public static readonly BitSet _201_in_collection_initializer1927 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _element_initializer_in_element_initializer_list1936 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_element_initializer_list1940 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x434UL});
		public static readonly BitSet _element_initializer_in_element_initializer_list1942 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _non_assignment_expression_in_element_initializer1953 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _197_in_element_initializer1959 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_list_in_element_initializer1963 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x200UL});
		public static readonly BitSet _201_in_element_initializer1967 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_initializer_list_in_object_initializer1982 = new BitSet(new ulong[]{0x0UL,0x400UL,0x0UL,0x200UL});
		public static readonly BitSet _74_in_object_initializer1987 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x200UL});
		public static readonly BitSet _201_in_object_initializer1992 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_initializer_in_member_initializer_list2001 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _74_in_member_initializer_list2005 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _member_initializer_in_member_initializer_list2007 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_member_initializer2017 = new BitSet(new ulong[]{0x0UL,0x200000UL});
		public static readonly BitSet _85_in_member_initializer2021 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x434UL});
		public static readonly BitSet _initializer_value_in_member_initializer2025 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_initializer_value2034 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _object_or_collection_initializer_in_initializer_value2040 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _184_in_typeof_expression2052 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_typeof_expression2056 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _unbound_type_name_in_typeof_expression2067 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _type_in_typeof_expression2078 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _192_in_typeof_expression2090 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_typeof_expression2095 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _unbound_type_name_start_in_unbound_type_name2110 = new BitSet(new ulong[]{0x400UL,0x20000UL});
		public static readonly BitSet _generic_dimension_specifier_in_unbound_type_name2129 = new BitSet(new ulong[]{0x400UL});
		public static readonly BitSet _unbound_type_name_part_in_unbound_type_name2133 = new BitSet(new ulong[]{0x400UL,0x20000UL});
		public static readonly BitSet _unbound_type_name_part_in_unbound_type_name2140 = new BitSet(new ulong[]{0x400UL,0x20000UL});
		public static readonly BitSet _generic_dimension_specifier_in_unbound_type_name2150 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_unbound_type_name_start2160 = new BitSet(new ulong[]{0x2UL,0x10000UL});
		public static readonly BitSet _80_in_unbound_type_name_start2163 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_unbound_type_name_start2165 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_unbound_type_name_part2174 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_unbound_type_name_part2178 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _81_in_generic_dimension_specifier2186 = new BitSet(new ulong[]{0x200000UL,0x400UL});
		public static readonly BitSet _commas_in_generic_dimension_specifier2190 = new BitSet(new ulong[]{0x200000UL});
		public static readonly BitSet _GT_in_generic_dimension_specifier2195 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _74_in_commas2204 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _namespace_or_type_name_in_type_name2220 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_or_generic_in_namespace_or_type_name2229 = new BitSet(new ulong[]{0x402UL,0x10000UL});
		public static readonly BitSet _80_in_namespace_or_type_name2234 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _type_or_generic_in_namespace_or_type_name2236 = new BitSet(new ulong[]{0x402UL});
		public static readonly BitSet _DOT_in_namespace_or_type_name2241 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _type_or_generic_in_namespace_or_type_name2245 = new BitSet(new ulong[]{0x402UL});
		public static readonly BitSet _identifier_in_type_or_generic2265 = new BitSet(new ulong[]{0x0UL,0x20000UL});
		public static readonly BitSet _generic_argument_list_in_type_or_generic2269 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_type_or_generic2274 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _qid_start_in_qid2285 = new BitSet(new ulong[]{0x200000000402UL});
		public static readonly BitSet _qid_part_in_qid2289 = new BitSet(new ulong[]{0x200000000402UL});
		public static readonly BitSet _predefined_type_in_qid_start2299 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_qid_start2315 = new BitSet(new ulong[]{0x0UL,0x20000UL});
		public static readonly BitSet _generic_argument_list_in_qid_start2319 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_qid_start2326 = new BitSet(new ulong[]{0x2UL,0x10000UL});
		public static readonly BitSet _80_in_qid_start2331 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_qid_start2335 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _literal_in_qid_start2342 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _access_identifier_in_qid_part2356 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _81_in_generic_argument_list2366 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_arguments_in_generic_argument_list2370 = new BitSet(new ulong[]{0x200000UL});
		public static readonly BitSet _GT_in_generic_argument_list2374 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_type_arguments2383 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_type_arguments2386 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_in_type_arguments2388 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _predefined_type_in_type2417 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _type_name_in_type2421 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _rank_specifiers_in_type2426 = new BitSet(new ulong[]{0x2UL,0x20UL});
		public static readonly BitSet _69_in_type2430 = new BitSet(new ulong[]{0x2UL,0x20UL});
		public static readonly BitSet _predefined_type_in_type2459 = new BitSet(new ulong[]{0x0UL,0x2000020UL});
		public static readonly BitSet _type_name_in_type2463 = new BitSet(new ulong[]{0x0UL,0x2000020UL});
		public static readonly BitSet _69_in_type2469 = new BitSet(new ulong[]{0x2UL,0x20UL});
		public static readonly BitSet _89_in_type2474 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _predefined_type_in_type2481 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_name_in_type2485 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _192_in_type2491 = new BitSet(new ulong[]{0x0UL,0x20UL});
		public static readonly BitSet _69_in_type2493 = new BitSet(new ulong[]{0x2UL,0x20UL});
		public static readonly BitSet _predefined_type_in_non_nullable_type2504 = new BitSet(new ulong[]{0x2UL,0x8000020UL});
		public static readonly BitSet _type_name_in_non_nullable_type2508 = new BitSet(new ulong[]{0x2UL,0x8000020UL});
		public static readonly BitSet _rank_specifiers_in_non_nullable_type2517 = new BitSet(new ulong[]{0x2UL,0x20UL});
		public static readonly BitSet _69_in_non_nullable_type2521 = new BitSet(new ulong[]{0x2UL,0x20UL});
		public static readonly BitSet _69_in_non_nullable_type2530 = new BitSet(new ulong[]{0x2UL,0x20UL});
		public static readonly BitSet _192_in_non_nullable_type2542 = new BitSet(new ulong[]{0x0UL,0x20UL});
		public static readonly BitSet _69_in_non_nullable_type2546 = new BitSet(new ulong[]{0x2UL,0x20UL});
		public static readonly BitSet _type_in_non_array_type2557 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_array_type2564 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_unmanaged_type2571 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_class_type2578 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_pointer_type2585 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SEMI_in_block2597 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _197_in_block2602 = new BitSet(new ulong[]{0x262D001C1C100020UL,0x45FF67F6800009B4UL,0x7FFA7B8525DFA4DFUL,0x63DUL});
		public static readonly BitSet _statement_list_in_block2606 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x200UL});
		public static readonly BitSet _201_in_block2611 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _statement_in_statement_list2618 = new BitSet(new ulong[]{0x262D001C1C100022UL,0x45FF67F6800009B4UL,0x7FFA7B8525DFA4DFUL,0x43DUL});
		public static readonly BitSet _assignment_in_expression2643 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _non_assignment_expression_in_expression2649 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_expression_list2658 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_expression_list2662 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_expression_list2666 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _unary_expression_in_assignment2676 = new BitSet(new ulong[]{0x200000UL,0x40285249UL,0x0UL,0x80UL});
		public static readonly BitSet _assignment_operator_in_assignment2680 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_assignment2684 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _cast_expression_in_unary_expression2701 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _primary_or_array_creation_expression_in_unary_expression2706 = new BitSet(new ulong[]{0x2UL,0x900UL});
		public static readonly BitSet _72_in_unary_expression2710 = new BitSet(new ulong[]{0x2UL,0x800UL});
		public static readonly BitSet _75_in_unary_expression2715 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _71_in_unary_expression2721 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _unary_expression_in_unary_expression2725 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _MINUS_in_unary_expression2731 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _unary_expression_in_unary_expression2735 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _61_in_unary_expression2741 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _unary_expression_in_unary_expression2745 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _202_in_unary_expression2751 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _unary_expression_in_unary_expression2755 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _pre_increment_expression_in_unary_expression2761 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _pre_decrement_expression_in_unary_expression2767 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _pointer_indirection_expression_in_unary_expression2773 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _addressof_expression_in_unary_expression2778 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _68_in_cast_expression2788 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_in_cast_expression2792 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_cast_expression2796 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _unary_expression_in_cast_expression2800 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _85_in_assignment_operator2808 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _73_in_assignment_operator2812 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _76_in_assignment_operator2816 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _70_in_assignment_operator2820 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _78_in_assignment_operator2824 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _64_in_assignment_operator2828 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _67_in_assignment_operator2832 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _199_in_assignment_operator2836 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _94_in_assignment_operator2840 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _83_in_assignment_operator2844 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GT_in_assignment_operator2848 = new BitSet(new ulong[]{0x0UL,0x1000000UL});
		public static readonly BitSet _88_in_assignment_operator2850 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _72_in_pre_increment_expression2859 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _unary_expression_in_pre_increment_expression2863 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _75_in_pre_decrement_expression2872 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _unary_expression_in_pre_decrement_expression2876 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _69_in_pointer_indirection_expression2884 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _unary_expression_in_pointer_indirection_expression2888 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _66_in_addressof_expression2896 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _unary_expression_in_addressof_expression2900 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _lambda_expression_in_non_assignment_expression2921 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _query_expression_in_non_assignment_expression2932 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _conditional_expression_in_non_assignment_expression2938 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _unary_expression_in_multiplicative_expression2952 = new BitSet(new ulong[]{0x8000000000000002UL,0x2020UL});
		public static readonly BitSet _set_in_multiplicative_expression2957 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _unary_expression_in_multiplicative_expression2967 = new BitSet(new ulong[]{0x8000000000000002UL,0x2020UL});
		public static readonly BitSet _multiplicative_expression_in_additive_expression2977 = new BitSet(new ulong[]{0x400000002UL,0x80UL});
		public static readonly BitSet _set_in_additive_expression2980 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _multiplicative_expression_in_additive_expression2988 = new BitSet(new ulong[]{0x400000002UL,0x80UL});
		public static readonly BitSet _additive_expression_in_shift_expression2999 = new BitSet(new ulong[]{0x200002UL,0x40000UL});
		public static readonly BitSet _82_in_shift_expression3003 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _GT_in_shift_expression3005 = new BitSet(new ulong[]{0x200000UL});
		public static readonly BitSet _GT_in_shift_expression3007 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _additive_expression_in_shift_expression3010 = new BitSet(new ulong[]{0x200002UL,0x40000UL});
		public static readonly BitSet _shift_expression_in_relational_expression3020 = new BitSet(new ulong[]{0x200002UL,0x801120000UL,0x4000UL});
		public static readonly BitSet _set_in_relational_expression3027 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _shift_expression_in_relational_expression3037 = new BitSet(new ulong[]{0x200002UL,0x801120000UL,0x4000UL});
		public static readonly BitSet _set_in_relational_expression3046 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _non_nullable_type_in_relational_expression3054 = new BitSet(new ulong[]{0x200002UL,0x801120000UL,0x4000UL});
		public static readonly BitSet _relational_expression_in_equality_expression3068 = new BitSet(new ulong[]{0x4000000000000002UL,0x400000UL});
		public static readonly BitSet _set_in_equality_expression3075 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _relational_expression_in_equality_expression3083 = new BitSet(new ulong[]{0x4000000000000002UL,0x400000UL});
		public static readonly BitSet _equality_expression_in_and_expression3093 = new BitSet(new ulong[]{0x2UL,0x4UL});
		public static readonly BitSet _66_in_and_expression3096 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _equality_expression_in_and_expression3100 = new BitSet(new ulong[]{0x2UL,0x4UL});
		public static readonly BitSet _and_expression_in_exclusive_or_expression3110 = new BitSet(new ulong[]{0x2UL,0x20000000UL});
		public static readonly BitSet _93_in_exclusive_or_expression3113 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _and_expression_in_exclusive_or_expression3117 = new BitSet(new ulong[]{0x2UL,0x20000000UL});
		public static readonly BitSet _exclusive_or_expression_in_inclusive_or_expression3127 = new BitSet(new ulong[]{0x2UL,0x0UL,0x0UL,0x40UL});
		public static readonly BitSet _198_in_inclusive_or_expression3132 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _exclusive_or_expression_in_inclusive_or_expression3136 = new BitSet(new ulong[]{0x2UL,0x0UL,0x0UL,0x40UL});
		public static readonly BitSet _inclusive_or_expression_in_conditional_and_expression3146 = new BitSet(new ulong[]{0x2UL,0x2UL});
		public static readonly BitSet _65_in_conditional_and_expression3151 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _inclusive_or_expression_in_conditional_and_expression3155 = new BitSet(new ulong[]{0x2UL,0x2UL});
		public static readonly BitSet _conditional_and_expression_in_conditional_or_expression3165 = new BitSet(new ulong[]{0x2UL,0x0UL,0x0UL,0x100UL});
		public static readonly BitSet _200_in_conditional_or_expression3169 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _conditional_and_expression_in_conditional_or_expression3173 = new BitSet(new ulong[]{0x2UL,0x0UL,0x0UL,0x100UL});
		public static readonly BitSet _conditional_or_expression_in_null_coalescing_expression3184 = new BitSet(new ulong[]{0x2UL,0x4000000UL});
		public static readonly BitSet _90_in_null_coalescing_expression3189 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _conditional_or_expression_in_null_coalescing_expression3193 = new BitSet(new ulong[]{0x2UL,0x4000000UL});
		public static readonly BitSet _null_coalescing_expression_in_conditional_expression3203 = new BitSet(new ulong[]{0x2UL,0x2000000UL});
		public static readonly BitSet _89_in_conditional_expression3208 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_conditional_expression3212 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _79_in_conditional_expression3216 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_conditional_expression3220 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _anonymous_function_signature_in_lambda_expression3240 = new BitSet(new ulong[]{0x0UL,0x800000UL});
		public static readonly BitSet _87_in_lambda_expression3244 = new BitSet(new ulong[]{0x242D001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x434UL});
		public static readonly BitSet _anonymous_function_body_in_lambda_expression3248 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _68_in_anonymous_function_signature3255 = new BitSet(new ulong[]{0x800008000000UL,0x45A426B680000000UL,0x66823AC52D9DA492UL,0x15UL});
		public static readonly BitSet _explicit_anonymous_function_parameter_list_in_anonymous_function_signature3258 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _implicit_anonymous_function_parameter_list_in_anonymous_function_signature3264 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_anonymous_function_signature3268 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _implicit_anonymous_function_parameter_list_in_anonymous_function_signature3273 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list3282 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_implicit_anonymous_function_parameter_list3287 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list3291 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _identifier_in_implicit_anonymous_function_parameter3301 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_anonymous_function_body3308 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _block_in_anonymous_function_body3313 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _from_clause_in_query_expression3325 = new BitSet(new ulong[]{0x0UL,0x0UL,0x80004018090UL,0x4UL});
		public static readonly BitSet _query_body_in_query_expression3329 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _query_body_clauses_in_query_body3339 = new BitSet(new ulong[]{0x0UL,0x0UL,0x80000000080UL});
		public static readonly BitSet _select_or_group_clause_in_query_body3344 = new BitSet(new ulong[]{0x2UL,0x0UL,0x2000UL});
		public static readonly BitSet _query_continuation_in_query_body3355 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _141_in_query_continuation3365 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_query_continuation3369 = new BitSet(new ulong[]{0x0UL,0x0UL,0x80004018090UL,0x4UL});
		public static readonly BitSet _query_body_in_query_continuation3373 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _query_body_clause_in_query_body_clauses3380 = new BitSet(new ulong[]{0x2UL,0x0UL,0x4018010UL,0x4UL});
		public static readonly BitSet _from_clause_in_query_body_clause3389 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _let_clause_in_query_body_clause3394 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _where_clause_in_query_body_clause3399 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _join_clause_in_query_body_clause3404 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _orderby_clause_in_query_body_clause3409 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _132_in_from_clause3416 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_in_from_clause3420 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_from_clause3425 = new BitSet(new ulong[]{0x0UL,0x0UL,0x200UL});
		public static readonly BitSet _137_in_from_clause3429 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_from_clause3433 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _143_in_join_clause3441 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_in_join_clause3445 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_join_clause3450 = new BitSet(new ulong[]{0x0UL,0x0UL,0x200UL});
		public static readonly BitSet _137_in_join_clause3454 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_join_clause3458 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1000000UL});
		public static readonly BitSet _152_in_join_clause3462 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_join_clause3466 = new BitSet(new ulong[]{0x0UL,0x400000000000000UL});
		public static readonly BitSet _122_in_join_clause3470 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_join_clause3474 = new BitSet(new ulong[]{0x2UL,0x0UL,0x2000UL});
		public static readonly BitSet _141_in_join_clause3477 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_join_clause3479 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _144_in_let_clause3489 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_let_clause3493 = new BitSet(new ulong[]{0x0UL,0x200000UL});
		public static readonly BitSet _85_in_let_clause3497 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_let_clause3501 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _154_in_orderby_clause3508 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _ordering_list_in_orderby_clause3512 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ordering_in_ordering_list3520 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_ordering_list3525 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _ordering_in_ordering_list3529 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _expression_in_ordering3539 = new BitSet(new ulong[]{0x0UL,0x20001000000000UL});
		public static readonly BitSet _ordering_direction_in_ordering3544 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _select_clause_in_select_or_group_clause3566 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _group_clause_in_select_or_group_clause3571 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _171_in_select_clause3579 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_select_clause3583 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _135_in_group_clause3591 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_group_clause3595 = new BitSet(new ulong[]{0x0UL,0x20000000000UL});
		public static readonly BitSet _105_in_group_clause3599 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_group_clause3603 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _194_in_where_clause3611 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _boolean_expression_in_where_clause3615 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_boolean_expression3623 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _global_attribute_in_global_attributes3635 = new BitSet(new ulong[]{0x2UL,0x8000000UL});
		public static readonly BitSet _91_in_global_attribute3645 = new BitSet(new ulong[]{0x0UL,0x2000000000UL,0x100000UL});
		public static readonly BitSet _global_attribute_target_specifier_in_global_attribute3649 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _attribute_list_in_global_attribute3653 = new BitSet(new ulong[]{0x0UL,0x10000400UL});
		public static readonly BitSet _74_in_global_attribute3657 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _92_in_global_attribute3662 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _global_attribute_target_in_global_attribute_target_specifier3671 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _79_in_global_attribute_target_specifier3675 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attribute_sections_in_attributes3697 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attribute_section_in_attribute_sections3706 = new BitSet(new ulong[]{0x2UL,0x8000000UL});
		public static readonly BitSet _91_in_attribute_section3716 = new BitSet(new ulong[]{0x8000000UL,0x4D20023680000000UL,0x408019852519A090UL,0x14UL});
		public static readonly BitSet _attribute_target_specifier_in_attribute_section3720 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _attribute_list_in_attribute_section3725 = new BitSet(new ulong[]{0x0UL,0x10000400UL});
		public static readonly BitSet _74_in_attribute_section3729 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _92_in_attribute_section3734 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attribute_target_in_attribute_target_specifier3743 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _79_in_attribute_target_specifier3747 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attribute_in_attribute_list3789 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_attribute_list3792 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _attribute_in_attribute_list3794 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _type_name_in_attribute3806 = new BitSet(new ulong[]{0x2UL,0x10UL});
		public static readonly BitSet _attribute_arguments_in_attribute3810 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _68_in_attribute_arguments3821 = new BitSet(new ulong[]{0x2429801C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _RPAREN_in_attribute_arguments3826 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _positional_argument_in_attribute_arguments3846 = new BitSet(new ulong[]{0x800008000000UL,0x4520023680000400UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _named_argument_in_attribute_arguments3865 = new BitSet(new ulong[]{0x800008000000UL,0x4520023680000400UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _74_in_attribute_arguments3881 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _positional_argument_in_attribute_arguments3883 = new BitSet(new ulong[]{0x800008000000UL,0x4520023680000400UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _RPAREN_in_attribute_arguments3894 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _positional_argument_in_positional_argument_list3908 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_positional_argument_list3911 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _positional_argument_in_positional_argument_list3913 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _attribute_argument_expression_in_positional_argument3924 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _named_argument_in_named_argument_list3933 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_named_argument_list3936 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _named_argument_in_named_argument_list3938 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _identifier_in_named_argument3949 = new BitSet(new ulong[]{0x0UL,0x200000UL});
		public static readonly BitSet _85_in_named_argument3953 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _attribute_argument_expression_in_named_argument3957 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_attribute_argument_expression3966 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _111_in_class_declaration3979 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _type_or_generic_in_class_declaration3982 = new BitSet(new ulong[]{0x0UL,0x8000UL,0x0UL,0x24UL});
		public static readonly BitSet _class_base_in_class_declaration3986 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x24UL});
		public static readonly BitSet _type_parameter_constraints_clauses_in_class_declaration3991 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _class_body_in_class_declaration3996 = new BitSet(new ulong[]{0x4000000000002UL});
		public static readonly BitSet _SEMI_in_class_declaration4000 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _79_in_class_base4013 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _interface_type_list_in_class_base4017 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_interface_type_list4027 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_interface_type_list4030 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_in_interface_type_list4034 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _197_in_class_body4045 = new BitSet(new ulong[]{0x8020000UL,0x7DB5A6B788000000UL,0xF6873EBFB5DDBD92UL,0x617UL});
		public static readonly BitSet _class_member_declarations_in_class_body4049 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x200UL});
		public static readonly BitSet _201_in_class_body4054 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _class_member_declaration_in_class_member_declarations4062 = new BitSet(new ulong[]{0x8020002UL,0x7DB5A6B788000000UL,0xF6873EBFB5DDBD92UL,0x417UL});
		public static readonly BitSet _112_in_constant_declaration4073 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_in_constant_declaration4077 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _constant_declarators_in_constant_declaration4081 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_constant_declaration4085 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constant_declarator_in_constant_declarators4093 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_constant_declarators4096 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _constant_declarator_in_constant_declarators4098 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _identifier_in_constant_declarator4108 = new BitSet(new ulong[]{0x2UL,0x200000UL});
		public static readonly BitSet _85_in_constant_declarator4113 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _constant_expression_in_constant_declarator4117 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_constant_expression4127 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variable_declarators_in_field_declaration4136 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_field_declaration4140 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variable_declarator_in_variable_declarators4148 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_variable_declarators4151 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _variable_declarator_in_variable_declarators4155 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _type_name_in_variable_declarator4165 = new BitSet(new ulong[]{0x2UL,0x200000UL});
		public static readonly BitSet _85_in_variable_declarator4168 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x434UL});
		public static readonly BitSet _variable_initializer_in_variable_declarator4172 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _method_header_in_method_declaration4186 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _method_body_in_method_declaration4190 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_name_in_method_header4198 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_method_header4201 = new BitSet(new ulong[]{0x800008000000UL,0x45A426B688000000UL,0x66923AC56D9DA492UL,0x15UL});
		public static readonly BitSet _formal_parameter_list_in_method_header4205 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_method_header4210 = new BitSet(new ulong[]{0x2UL,0x0UL,0x0UL,0x4UL});
		public static readonly BitSet _type_parameter_constraints_clauses_in_method_header4214 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _block_in_method_body4223 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _qid_in_member_name4231 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_name_in_property_declaration4243 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _197_in_property_declaration4247 = new BitSet(new ulong[]{0x0UL,0x8000000UL,0x101A00001020UL});
		public static readonly BitSet _accessor_declarations_in_property_declaration4251 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x200UL});
		public static readonly BitSet _201_in_property_declaration4255 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attributes_in_accessor_declarations4263 = new BitSet(new ulong[]{0x0UL,0x0UL,0x101A00001020UL});
		public static readonly BitSet _get_accessor_declaration_in_accessor_declarations4269 = new BitSet(new ulong[]{0x2UL,0x8000000UL,0x101A00001000UL});
		public static readonly BitSet _attributes_in_accessor_declarations4273 = new BitSet(new ulong[]{0x2UL,0x0UL,0x101A00001000UL});
		public static readonly BitSet _set_accessor_declaration_in_accessor_declarations4278 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _set_accessor_declaration_in_accessor_declarations4285 = new BitSet(new ulong[]{0x2UL,0x8000000UL,0x1A00001020UL});
		public static readonly BitSet _attributes_in_accessor_declarations4289 = new BitSet(new ulong[]{0x2UL,0x0UL,0x1A00001020UL});
		public static readonly BitSet _get_accessor_declaration_in_accessor_declarations4294 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _accessor_modifier_in_get_accessor_declaration4304 = new BitSet(new ulong[]{0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _133_in_get_accessor_declaration4309 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _accessor_body_in_get_accessor_declaration4313 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _accessor_modifier_in_set_accessor_declaration4321 = new BitSet(new ulong[]{0x0UL,0x0UL,0x100000000000UL});
		public static readonly BitSet _172_in_set_accessor_declaration4326 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _accessor_body_in_set_accessor_declaration4330 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _block_in_accessor_body4358 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _123_in_event_declaration4368 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_in_event_declaration4372 = new BitSet(new ulong[]{0x42900180C100020UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x14UL});
		public static readonly BitSet _member_name_in_event_declaration4387 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _197_in_event_declaration4391 = new BitSet(new ulong[]{0x0UL,0x208000000UL,0x8000000000UL});
		public static readonly BitSet _event_accessor_declarations_in_event_declaration4395 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x200UL});
		public static readonly BitSet _201_in_event_declaration4399 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variable_declarators_in_event_declaration4405 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_event_declaration4409 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifier_in_event_modifiers4421 = new BitSet(new ulong[]{0x2UL,0x2000000100000000UL,0x9001043A10401000UL,0x2UL});
		public static readonly BitSet _attributes_in_event_accessor_declarations4430 = new BitSet(new ulong[]{0x0UL,0x200000000UL,0x8000000000UL});
		public static readonly BitSet _add_accessor_declaration_in_event_accessor_declarations4437 = new BitSet(new ulong[]{0x0UL,0x8000000UL,0x8000000000UL});
		public static readonly BitSet _attributes_in_event_accessor_declarations4441 = new BitSet(new ulong[]{0x0UL,0x0UL,0x8000000000UL});
		public static readonly BitSet _remove_accessor_declaration_in_event_accessor_declarations4446 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _remove_accessor_declaration_in_event_accessor_declarations4467 = new BitSet(new ulong[]{0x0UL,0x208000000UL});
		public static readonly BitSet _attributes_in_event_accessor_declarations4471 = new BitSet(new ulong[]{0x0UL,0x200000000UL});
		public static readonly BitSet _add_accessor_declaration_in_event_accessor_declarations4476 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _97_in_add_accessor_declaration4486 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _block_in_add_accessor_declaration4490 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _167_in_remove_accessor_declaration4498 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _block_in_remove_accessor_declaration4502 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ENUM_in_enum_declaration4514 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_enum_declaration4518 = new BitSet(new ulong[]{0x0UL,0x8000UL,0x0UL,0x20UL});
		public static readonly BitSet _enum_base_in_enum_declaration4522 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _enum_body_in_enum_declaration4527 = new BitSet(new ulong[]{0x4000000000002UL});
		public static readonly BitSet _SEMI_in_enum_declaration4531 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _79_in_enum_base4540 = new BitSet(new ulong[]{0x0UL,0x240000000000UL,0x2600220000040400UL});
		public static readonly BitSet _integral_type_in_enum_base4544 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _197_in_enum_body4552 = new BitSet(new ulong[]{0x8000000UL,0x4520023688000000UL,0x408018852519A090UL,0x214UL});
		public static readonly BitSet _enum_member_declarations_in_enum_body4555 = new BitSet(new ulong[]{0x0UL,0x400UL,0x0UL,0x200UL});
		public static readonly BitSet _74_in_enum_body4557 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x200UL});
		public static readonly BitSet _201_in_enum_body4564 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enum_member_declaration_in_enum_member_declarations4572 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_enum_member_declarations4575 = new BitSet(new ulong[]{0x8000000UL,0x4520023688000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _enum_member_declaration_in_enum_member_declarations4577 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _attributes_in_enum_member_declaration4587 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_enum_member_declaration4592 = new BitSet(new ulong[]{0x2UL,0x200000UL});
		public static readonly BitSet _85_in_enum_member_declaration4597 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_enum_member_declaration4601 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _116_in_delegate_declaration4658 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _return_type_in_delegate_declaration4662 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_delegate_declaration4666 = new BitSet(new ulong[]{0x0UL,0x20010UL});
		public static readonly BitSet _variant_generic_parameter_list_in_delegate_declaration4669 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_delegate_declaration4677 = new BitSet(new ulong[]{0x800008000000UL,0x45A426B688000000UL,0x66923AC56D9DA492UL,0x15UL});
		public static readonly BitSet _formal_parameter_list_in_delegate_declaration4681 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_delegate_declaration4686 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x4UL});
		public static readonly BitSet _type_parameter_constraints_clauses_in_delegate_declaration4690 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_delegate_declaration4695 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifier_in_delegate_modifiers4703 = new BitSet(new ulong[]{0x2UL,0x2000000100000000UL,0x9001043A10401000UL,0x2UL});
		public static readonly BitSet _81_in_variant_generic_parameter_list4713 = new BitSet(new ulong[]{0x8000000UL,0x4520023688000000UL,0x408018852D19A290UL,0x14UL});
		public static readonly BitSet _variant_type_parameters_in_variant_generic_parameter_list4717 = new BitSet(new ulong[]{0x200000UL});
		public static readonly BitSet _GT_in_variant_generic_parameter_list4721 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variant_type_variable_name_in_variant_type_parameters4729 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_variant_type_parameters4732 = new BitSet(new ulong[]{0x8000000UL,0x4520023688000000UL,0x408018852D19A290UL,0x14UL});
		public static readonly BitSet _variant_type_variable_name_in_variant_type_parameters4734 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _attributes_in_variant_type_variable_name4744 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852D19A290UL,0x14UL});
		public static readonly BitSet _variance_annotation_in_variant_type_variable_name4749 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _type_variable_name_in_variant_type_variable_name4754 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_parameter_constraints_clause_in_type_parameter_constraints_clauses4775 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_type_parameter_constraints_clauses4780 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x4UL});
		public static readonly BitSet _type_parameter_constraints_clause_in_type_parameter_constraints_clauses4784 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _194_in_type_parameter_constraints_clause4794 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _type_variable_name_in_type_parameter_constraints_clause4798 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _79_in_type_parameter_constraints_clause4802 = new BitSet(new ulong[]{0x8000000UL,0x4520823680000000UL,0x408418852559A090UL,0x14UL});
		public static readonly BitSet _type_parameter_constraint_list_in_type_parameter_constraints_clause4806 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _set_in_type_parameter_constraint_list4869 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_type_parameter_constraint_list4880 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _secondary_constraint_list_in_type_parameter_constraint_list4884 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_type_parameter_constraint_list4891 = new BitSet(new ulong[]{0x0UL,0x0UL,0x400000UL});
		public static readonly BitSet _constructor_constraint_in_type_parameter_constraint_list4895 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _secondary_constraint_list_in_type_parameter_constraint_list4902 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_type_parameter_constraint_list4907 = new BitSet(new ulong[]{0x0UL,0x0UL,0x400000UL});
		public static readonly BitSet _constructor_constraint_in_type_parameter_constraint_list4911 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constructor_constraint_in_type_parameter_constraint_list4918 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _secondary_constraint_in_secondary_constraint_list4930 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_secondary_constraint_list4933 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _secondary_constraint_in_secondary_constraint_list4935 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _type_name_in_secondary_constraint4945 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_type_variable_name4955 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _150_in_constructor_constraint4963 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_constructor_constraint4967 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_constructor_constraint4971 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_return_type4979 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _192_in_return_type4985 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _formal_parameter_in_formal_parameter_list4992 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_formal_parameter_list4995 = new BitSet(new ulong[]{0x8000000UL,0x45A426B688000000UL,0x66923AC56D9DA492UL,0x15UL});
		public static readonly BitSet _formal_parameter_in_formal_parameter_list4997 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _attributes_in_formal_parameter5007 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66923AC56D9DA492UL,0x15UL});
		public static readonly BitSet _fixed_parameter_in_formal_parameter5013 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _parameter_array_in_formal_parameter5017 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _95_in_formal_parameter5024 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _fixed_parameter_in_fixed_parameters5032 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_fixed_parameters5037 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66923AC52D9DA492UL,0x15UL});
		public static readonly BitSet _fixed_parameter_in_fixed_parameters5041 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _parameter_modifier_in_fixed_parameter5052 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_in_fixed_parameter5057 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_fixed_parameter5061 = new BitSet(new ulong[]{0x2UL,0x200000UL});
		public static readonly BitSet _default_argument_in_fixed_parameter5065 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _85_in_default_argument5075 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_default_argument5077 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _158_in_parameter_array5100 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_in_parameter_array5104 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_parameter_array5108 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _139_in_interface_declaration5118 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_interface_declaration5122 = new BitSet(new ulong[]{0x0UL,0x28000UL,0x0UL,0x24UL});
		public static readonly BitSet _variant_generic_parameter_list_in_interface_declaration5126 = new BitSet(new ulong[]{0x0UL,0x8000UL,0x0UL,0x24UL});
		public static readonly BitSet _interface_base_in_interface_declaration5135 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x24UL});
		public static readonly BitSet _type_parameter_constraints_clauses_in_interface_declaration5140 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _interface_body_in_interface_declaration5145 = new BitSet(new ulong[]{0x4000000000002UL});
		public static readonly BitSet _SEMI_in_interface_declaration5149 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifier_in_interface_modifiers5159 = new BitSet(new ulong[]{0x2UL,0x2000000100000000UL,0x9001043A10401000UL,0x2UL});
		public static readonly BitSet _79_in_interface_base5172 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _interface_type_list_in_interface_base5174 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _197_in_interface_body5182 = new BitSet(new ulong[]{0x8000000UL,0x6DA426B788000000UL,0xF6833EBF35DDB492UL,0x217UL});
		public static readonly BitSet _interface_member_declarations_in_interface_body5186 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x200UL});
		public static readonly BitSet _201_in_interface_body5191 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_member_declaration_in_interface_member_declarations5199 = new BitSet(new ulong[]{0x8000002UL,0x6DA426B788000000UL,0xF6833EBF35DDB492UL,0x17UL});
		public static readonly BitSet _attributes_in_interface_member_declaration5208 = new BitSet(new ulong[]{0x8000000UL,0x6DA426B780000000UL,0xF6833EBF35DDB492UL,0x17UL});
		public static readonly BitSet _modifiers_in_interface_member_declaration5214 = new BitSet(new ulong[]{0x8000000UL,0x4DA426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _192_in_interface_member_declaration5220 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _interface_method_declaration_in_interface_member_declaration5224 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_event_declaration_in_interface_member_declaration5230 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_interface_member_declaration5236 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x409018852519A090UL,0x14UL});
		public static readonly BitSet _interface_method_declaration_in_interface_member_declaration5252 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_property_declaration_in_interface_member_declaration5277 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_indexer_declaration_in_interface_member_declaration5287 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_interface_property_declaration5304 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _197_in_interface_property_declaration5308 = new BitSet(new ulong[]{0x0UL,0x8000000UL,0x100000000020UL});
		public static readonly BitSet _interface_accessor_declarations_in_interface_property_declaration5312 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x200UL});
		public static readonly BitSet _201_in_interface_property_declaration5316 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_interface_method_declaration5324 = new BitSet(new ulong[]{0x0UL,0x20010UL});
		public static readonly BitSet _generic_argument_list_in_interface_method_declaration5328 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_interface_method_declaration5336 = new BitSet(new ulong[]{0x800008000000UL,0x45A426B688000000UL,0x66923AC56D9DA492UL,0x15UL});
		public static readonly BitSet _formal_parameter_list_in_interface_method_declaration5340 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_interface_method_declaration5345 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x4UL});
		public static readonly BitSet _type_parameter_constraints_clauses_in_interface_method_declaration5349 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_interface_method_declaration5354 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _123_in_interface_event_declaration5365 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_in_interface_event_declaration5369 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_interface_event_declaration5373 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_interface_event_declaration5377 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _180_in_interface_indexer_declaration5389 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _91_in_interface_indexer_declaration5393 = new BitSet(new ulong[]{0x8000000UL,0x45A426B688000000UL,0x66923AC56D9DA492UL,0x15UL});
		public static readonly BitSet _formal_parameter_list_in_interface_indexer_declaration5397 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _92_in_interface_indexer_declaration5401 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _197_in_interface_indexer_declaration5405 = new BitSet(new ulong[]{0x0UL,0x8000000UL,0x100000000020UL});
		public static readonly BitSet _interface_accessor_declarations_in_interface_indexer_declaration5409 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x200UL});
		public static readonly BitSet _201_in_interface_indexer_declaration5413 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attributes_in_interface_accessor_declarations5421 = new BitSet(new ulong[]{0x0UL,0x0UL,0x100000000020UL});
		public static readonly BitSet _interface_get_accessor_declaration_in_interface_accessor_declarations5430 = new BitSet(new ulong[]{0x2UL,0x8000000UL,0x100000000000UL});
		public static readonly BitSet _attributes_in_interface_accessor_declarations5434 = new BitSet(new ulong[]{0x2UL,0x0UL,0x100000000000UL});
		public static readonly BitSet _interface_set_accessor_declaration_in_interface_accessor_declarations5439 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_set_accessor_declaration_in_interface_accessor_declarations5446 = new BitSet(new ulong[]{0x2UL,0x8000000UL,0x20UL});
		public static readonly BitSet _attributes_in_interface_accessor_declarations5450 = new BitSet(new ulong[]{0x2UL,0x0UL,0x20UL});
		public static readonly BitSet _interface_get_accessor_declaration_in_interface_accessor_declarations5455 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _133_in_interface_get_accessor_declaration5465 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_interface_get_accessor_declaration5469 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _172_in_interface_set_accessor_declaration5479 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_interface_set_accessor_declaration5483 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifier_in_method_modifiers5493 = new BitSet(new ulong[]{0x2UL,0x2000000100000000UL,0x9001043A10401000UL,0x2UL});
		public static readonly BitSet _178_in_struct_declaration5505 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _type_or_generic_in_struct_declaration5509 = new BitSet(new ulong[]{0x0UL,0x8000UL,0x0UL,0x24UL});
		public static readonly BitSet _struct_interfaces_in_struct_declaration5513 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x24UL});
		public static readonly BitSet _type_parameter_constraints_clauses_in_struct_declaration5518 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _struct_body_in_struct_declaration5523 = new BitSet(new ulong[]{0x4000000000002UL});
		public static readonly BitSet _SEMI_in_struct_declaration5527 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _struct_modifier_in_struct_modifiers5536 = new BitSet(new ulong[]{0x2UL,0x0UL,0x1000001A00401000UL});
		public static readonly BitSet _79_in_struct_interfaces5573 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _interface_type_list_in_struct_interfaces5577 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _197_in_struct_body5584 = new BitSet(new ulong[]{0x8020000UL,0x7DB5A6B788000000UL,0xF6873EBFB5DDBD92UL,0x217UL});
		public static readonly BitSet _struct_member_declarations_in_struct_body5588 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x200UL});
		public static readonly BitSet _201_in_struct_body5593 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _struct_member_declaration_in_struct_member_declarations5600 = new BitSet(new ulong[]{0x8020002UL,0x7DB5A6B788000000UL,0xF6873EBFB5DDBD92UL,0x17UL});
		public static readonly BitSet _attributes_in_struct_member_declaration5609 = new BitSet(new ulong[]{0x8020000UL,0x7DB5A6B780000000UL,0xF6873EBFB5DDBD92UL,0x17UL});
		public static readonly BitSet _modifiers_in_struct_member_declaration5616 = new BitSet(new ulong[]{0x8020000UL,0x5DB5A6B680000000UL,0x66863A85A59DAD92UL,0x15UL});
		public static readonly BitSet _112_in_struct_member_declaration5622 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_in_struct_member_declaration5626 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _constant_declarators_in_struct_member_declaration5630 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_struct_member_declaration5634 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _event_declaration_in_struct_member_declaration5639 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _159_in_struct_member_declaration5646 = new BitSet(new ulong[]{0x42900180C100020UL,0x45A4A6B680000000UL,0x66863A85259DAC92UL,0x14UL});
		public static readonly BitSet _method_declaration_in_struct_member_declaration5649 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_declaration_in_struct_member_declaration5660 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _class_declaration_in_struct_member_declaration5671 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _struct_declaration_in_struct_member_declaration5682 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_declaration_in_struct_member_declaration5689 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _class_declaration_in_struct_member_declaration5695 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _192_in_struct_member_declaration5702 = new BitSet(new ulong[]{0x42900180C100020UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x14UL});
		public static readonly BitSet _method_declaration_in_struct_member_declaration5706 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_struct_member_declaration5711 = new BitSet(new ulong[]{0x42900180C100020UL,0x45A426B680000000UL,0x66923A85279DA492UL,0x14UL});
		public static readonly BitSet _method_declaration_in_struct_member_declaration5725 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _property_declaration_in_struct_member_declaration5744 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_name_in_struct_member_declaration5767 = new BitSet(new ulong[]{0x400UL});
		public static readonly BitSet _DOT_in_struct_member_declaration5769 = new BitSet(new ulong[]{0x0UL,0x0UL,0x10000000000000UL});
		public static readonly BitSet _indexer_declaration_in_struct_member_declaration5771 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _indexer_declaration_in_struct_member_declaration5780 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _field_declaration_in_struct_member_declaration5793 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _operator_declaration_in_struct_member_declaration5811 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _struct_declaration_in_struct_member_declaration5829 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enum_declaration_in_struct_member_declaration5835 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _delegate_declaration_in_struct_member_declaration5842 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _conversion_operator_declaration_in_struct_member_declaration5848 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constructor_declaration_in_struct_member_declaration5853 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _indexer_declarator_in_indexer_declaration5870 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _197_in_indexer_declaration5874 = new BitSet(new ulong[]{0x0UL,0x8000000UL,0x101A00001020UL});
		public static readonly BitSet _accessor_declarations_in_indexer_declaration5878 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x200UL});
		public static readonly BitSet _201_in_indexer_declaration5882 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _180_in_indexer_declarator5892 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _91_in_indexer_declarator5896 = new BitSet(new ulong[]{0x8000000UL,0x45A426B688000000UL,0x66923AC56D9DA492UL,0x15UL});
		public static readonly BitSet _formal_parameter_list_in_indexer_declarator5900 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _92_in_indexer_declarator5904 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _operator_declarator_in_operator_declaration5915 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _operator_body_in_operator_declaration5919 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _153_in_operator_declarator5927 = new BitSet(new ulong[]{0xE020000400300000UL,0x215629A4UL,0x0UL,0x440UL});
		public static readonly BitSet _set_in_operator_declarator5935 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_operator_declarator5945 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_in_operator_declarator5949 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_operator_declarator5953 = new BitSet(new ulong[]{0x800000000000UL,0x400UL});
		public static readonly BitSet _binary_operator_declarator_in_operator_declarator5956 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _unary_operator_declarator_in_operator_declarator5960 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _overloadable_unary_operator_in_operator_declarator5967 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _unary_operator_declarator_in_operator_declarator5971 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _overloadable_binary_operator_in_operator_declarator5977 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _binary_operator_declarator_in_operator_declarator5981 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _RPAREN_in_unary_operator_declarator5993 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _74_in_binary_operator_declarator6036 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_in_binary_operator_declarator6040 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_binary_operator_declarator6044 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_binary_operator_declarator6048 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _69_in_overloadable_binary_operator6059 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _77_in_overloadable_binary_operator6063 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _63_in_overloadable_binary_operator6067 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _66_in_overloadable_binary_operator6071 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _198_in_overloadable_binary_operator6075 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _93_in_overloadable_binary_operator6079 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _82_in_overloadable_binary_operator6083 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GT_in_overloadable_binary_operator6087 = new BitSet(new ulong[]{0x200000UL});
		public static readonly BitSet _GT_in_overloadable_binary_operator6089 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _86_in_overloadable_binary_operator6093 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _62_in_overloadable_binary_operator6097 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GT_in_overloadable_binary_operator6101 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _81_in_overloadable_binary_operator6105 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _88_in_overloadable_binary_operator6109 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _84_in_overloadable_binary_operator6113 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _conversion_operator_declarator_in_conversion_operator_declaration6123 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _operator_body_in_conversion_operator_declaration6127 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _set_in_conversion_operator_declarator6135 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000000UL});
		public static readonly BitSet _153_in_conversion_operator_declarator6144 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_in_conversion_operator_declarator6148 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_conversion_operator_declarator6152 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_in_conversion_operator_declarator6156 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_conversion_operator_declarator6160 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_conversion_operator_declarator6164 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _block_in_operator_body6172 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constructor_declarator_in_constructor_declaration6182 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _constructor_body_in_constructor_declaration6186 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_constructor_declarator6194 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_constructor_declarator6198 = new BitSet(new ulong[]{0x800008000000UL,0x45A426B688000000UL,0x66923AC56D9DA492UL,0x15UL});
		public static readonly BitSet _formal_parameter_list_in_constructor_declarator6202 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_constructor_declarator6207 = new BitSet(new ulong[]{0x2UL,0x8000UL});
		public static readonly BitSet _constructor_initializer_in_constructor_declarator6211 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _79_in_constructor_initializer6220 = new BitSet(new ulong[]{0x0UL,0x4000000000UL,0x10000000000000UL});
		public static readonly BitSet _set_in_constructor_initializer6224 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_constructor_initializer6234 = new BitSet(new ulong[]{0x2429801C0C100020UL,0x45BC66F6800009B4UL,0x6F927AC52DDDA492UL,0x414UL});
		public static readonly BitSet _argument_list_in_constructor_initializer6238 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_constructor_initializer6243 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _block_in_constructor_body6251 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _202_in_destructor_declaration6267 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_destructor_declaration6270 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_destructor_declaration6274 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_destructor_declaration6278 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _destructor_body_in_destructor_declaration6283 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _block_in_destructor_body6291 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _invocation_start_in_invocation_expression6301 = new BitSet(new ulong[]{0x200000000400UL,0x8000010UL});
		public static readonly BitSet _arguments_in_invocation_expression6323 = new BitSet(new ulong[]{0x200000000400UL,0x8000000UL});
		public static readonly BitSet _invocation_part_in_invocation_expression6327 = new BitSet(new ulong[]{0x200000000400UL,0x8000010UL});
		public static readonly BitSet _invocation_part_in_invocation_expression6338 = new BitSet(new ulong[]{0x200000000400UL,0x8000010UL});
		public static readonly BitSet _arguments_in_invocation_expression6344 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _predefined_type_in_invocation_start6352 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_invocation_start6369 = new BitSet(new ulong[]{0x0UL,0x20000UL});
		public static readonly BitSet _generic_argument_list_in_invocation_start6373 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _180_in_invocation_start6378 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _102_in_invocation_start6384 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_invocation_start6389 = new BitSet(new ulong[]{0x2UL,0x10000UL});
		public static readonly BitSet _80_in_invocation_start6394 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_invocation_start6398 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _typeof_expression_in_invocation_start6405 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _access_identifier_in_invocation_part6428 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _brackets_in_invocation_part6433 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _declaration_statement_in_statement6450 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _labeled_statement_in_statement6465 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _embedded_statement_in_statement6470 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _block_in_embedded_statement6480 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _selection_statement_in_embedded_statement6485 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _iteration_statement_in_embedded_statement6491 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _jump_statement_in_embedded_statement6497 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _try_statement_in_embedded_statement6504 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _checked_statement_in_embedded_statement6509 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _unchecked_statement_in_embedded_statement6514 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _lock_statement_in_embedded_statement6519 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _using_statement_in_embedded_statement6524 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _yield_statement_in_embedded_statement6530 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _unsafe_statement_in_embedded_statement6536 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _fixed_statement_in_embedded_statement6541 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_statement_in_embedded_statement6546 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _128_in_fixed_statement6556 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_fixed_statement6560 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _pointer_type_in_fixed_statement6564 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _fixed_pointer_declarators_in_fixed_statement6566 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_fixed_statement6570 = new BitSet(new ulong[]{0x262D001C1C100020UL,0x45FE67F6800009B4UL,0x7FFA7B8525DFA4DFUL,0x43CUL});
		public static readonly BitSet _embedded_statement_in_fixed_statement6574 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _fixed_pointer_declarator_in_fixed_pointer_declarators6582 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_fixed_pointer_declarators6587 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _fixed_pointer_declarator_in_fixed_pointer_declarators6591 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _identifier_in_fixed_pointer_declarator6601 = new BitSet(new ulong[]{0x0UL,0x200000UL});
		public static readonly BitSet _85_in_fixed_pointer_declarator6605 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _fixed_pointer_initializer_in_fixed_pointer_declarator6609 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_fixed_pointer_initializer6619 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _188_in_unsafe_statement6626 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _block_in_unsafe_statement6630 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_labeled_statement6637 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _79_in_labeled_statement6641 = new BitSet(new ulong[]{0x262D001C1C100020UL,0x45FF67F6800009B4UL,0x7FFA7B8525DFA4DFUL,0x43DUL});
		public static readonly BitSet _statement_in_labeled_statement6645 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _local_variable_declaration_in_declaration_statement6654 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _local_constant_declaration_in_declaration_statement6660 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_declaration_statement6663 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _local_variable_type_in_local_variable_declaration6671 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _local_variable_declarators_in_local_variable_declaration6675 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _190_in_local_variable_type6689 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _120_in_local_variable_type6700 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_local_variable_type6705 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _local_variable_declarator_in_local_variable_declarators6713 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_local_variable_declarators6716 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _local_variable_declarator_in_local_variable_declarators6718 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _identifier_in_local_variable_declarator6728 = new BitSet(new ulong[]{0x2UL,0x200000UL});
		public static readonly BitSet _85_in_local_variable_declarator6731 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F92FA8525DDA492UL,0x434UL});
		public static readonly BitSet _local_variable_initializer_in_local_variable_declarator6735 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_local_variable_initializer6746 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _array_initializer_in_local_variable_initializer6751 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _stackalloc_initializer_in_local_variable_initializer6757 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _175_in_stackalloc_initializer6764 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _unmanaged_type_in_stackalloc_initializer6768 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _91_in_stackalloc_initializer6772 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_stackalloc_initializer6776 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _92_in_stackalloc_initializer6780 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _112_in_local_constant_declaration6788 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_in_local_constant_declaration6792 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _constant_declarators_in_local_constant_declaration6796 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_expression_statement6804 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_expression_statement6808 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_statement_expression6818 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _if_statement_in_selection_statement6827 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _switch_statement_in_selection_statement6832 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IF_in_if_statement6842 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_if_statement6846 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _boolean_expression_in_if_statement6850 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_if_statement6854 = new BitSet(new ulong[]{0x262D001C1C100020UL,0x45FE67F6800009B4UL,0x7FFA7B8525DFA4DFUL,0x43CUL});
		public static readonly BitSet _embedded_statement_in_if_statement6858 = new BitSet(new ulong[]{0x2UL,0x200000000000000UL});
		public static readonly BitSet _else_statement_in_if_statement6867 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _121_in_else_statement6878 = new BitSet(new ulong[]{0x262D001C1C100020UL,0x45FE67F6800009B4UL,0x7FFA7B8525DFA4DFUL,0x43CUL});
		public static readonly BitSet _embedded_statement_in_else_statement6882 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _179_in_switch_statement6890 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_switch_statement6894 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_switch_statement6898 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_switch_statement6902 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _switch_block_in_switch_statement6906 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _197_in_switch_block6914 = new BitSet(new ulong[]{0x0UL,0x8080000000000UL,0x0UL,0x200UL});
		public static readonly BitSet _switch_sections_in_switch_block6918 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x200UL});
		public static readonly BitSet _201_in_switch_block6923 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _switch_section_in_switch_sections6931 = new BitSet(new ulong[]{0x2UL,0x8080000000000UL});
		public static readonly BitSet _switch_labels_in_switch_section6940 = new BitSet(new ulong[]{0x262D001C1C100020UL,0x45FF67F6800009B4UL,0x7FFA7B8525DFA4DFUL,0x43DUL});
		public static readonly BitSet _statement_list_in_switch_section6944 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _switch_label_in_switch_labels6952 = new BitSet(new ulong[]{0x2UL,0x8080000000000UL});
		public static readonly BitSet _107_in_switch_label6962 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _constant_expression_in_switch_label6966 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _79_in_switch_label6970 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _115_in_switch_label6977 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _79_in_switch_label6981 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _while_statement_in_iteration_statement6990 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _do_statement_in_iteration_statement6995 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _for_statement_in_iteration_statement7000 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _foreach_statement_in_iteration_statement7005 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _195_in_while_statement7013 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_while_statement7017 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _boolean_expression_in_while_statement7021 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_while_statement7025 = new BitSet(new ulong[]{0x262D001C1C100020UL,0x45FE67F6800009B4UL,0x7FFA7B8525DFA4DFUL,0x43CUL});
		public static readonly BitSet _embedded_statement_in_while_statement7029 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _118_in_do_statement7037 = new BitSet(new ulong[]{0x262D001C1C100020UL,0x45FE67F6800009B4UL,0x7FFA7B8525DFA4DFUL,0x43CUL});
		public static readonly BitSet _embedded_statement_in_do_statement7041 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x8UL});
		public static readonly BitSet _195_in_do_statement7045 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_do_statement7049 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _boolean_expression_in_do_statement7053 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_do_statement7057 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_do_statement7061 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _130_in_for_statement7069 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_for_statement7073 = new BitSet(new ulong[]{0x242D001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x415UL});
		public static readonly BitSet _for_initializer_in_for_statement7077 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_for_statement7082 = new BitSet(new ulong[]{0x242D001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _for_condition_in_for_statement7086 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_for_statement7091 = new BitSet(new ulong[]{0x2429801C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _for_iterator_in_for_statement7095 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_for_statement7100 = new BitSet(new ulong[]{0x262D001C1C100020UL,0x45FE67F6800009B4UL,0x7FFA7B8525DFA4DFUL,0x43CUL});
		public static readonly BitSet _embedded_statement_in_for_statement7104 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _local_variable_declaration_in_for_initializer7118 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _statement_expression_list_in_for_initializer7123 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _boolean_expression_in_for_condition7133 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _statement_expression_list_in_for_iterator7141 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _statement_expression_in_statement_expression_list7149 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _74_in_statement_expression_list7152 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _statement_expression_in_statement_expression_list7154 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _131_in_foreach_statement7164 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_foreach_statement7168 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _local_variable_type_in_foreach_statement7172 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_foreach_statement7176 = new BitSet(new ulong[]{0x0UL,0x0UL,0x200UL});
		public static readonly BitSet _137_in_foreach_statement7180 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_foreach_statement7184 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_foreach_statement7188 = new BitSet(new ulong[]{0x262D001C1C100020UL,0x45FE67F6800009B4UL,0x7FFA7B8525DFA4DFUL,0x43CUL});
		public static readonly BitSet _embedded_statement_in_foreach_statement7192 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _break_statement_in_jump_statement7200 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _continue_statement_in_jump_statement7205 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _goto_statement_in_jump_statement7210 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _return_statement_in_jump_statement7215 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _throw_statement_in_jump_statement7220 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _104_in_break_statement7228 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_break_statement7232 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _113_in_continue_statement7240 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_continue_statement7244 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _134_in_goto_statement7252 = new BitSet(new ulong[]{0x8000000UL,0x45280A3680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_goto_statement7258 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _107_in_goto_statement7266 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _constant_expression_in_goto_statement7270 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _115_in_goto_statement7278 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_goto_statement7283 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _168_in_return_statement7291 = new BitSet(new ulong[]{0x242D001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_return_statement7295 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_return_statement7300 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _181_in_throw_statement7308 = new BitSet(new ulong[]{0x242D001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_throw_statement7312 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_throw_statement7317 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _182_in_try_statement7330 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _block_in_try_statement7334 = new BitSet(new ulong[]{0x0UL,0x8000100000000000UL});
		public static readonly BitSet _catch_clauses_in_try_statement7340 = new BitSet(new ulong[]{0x2UL,0x8000000000000000UL});
		public static readonly BitSet _finally_clause_in_try_statement7344 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _finally_clause_in_try_statement7356 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _108_in_catch_clauses7365 = new BitSet(new ulong[]{0x4000000000000UL,0x10UL,0x0UL,0x20UL});
		public static readonly BitSet _specific_catch_clauses_in_catch_clauses7370 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _general_catch_clause_in_catch_clauses7374 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _specific_catch_clause_in_specific_catch_clauses7383 = new BitSet(new ulong[]{0x2UL,0x100000000000UL});
		public static readonly BitSet _108_in_specific_catch_clauses7388 = new BitSet(new ulong[]{0x4000000000000UL,0x10UL,0x0UL,0x20UL});
		public static readonly BitSet _specific_catch_clause_in_specific_catch_clauses7393 = new BitSet(new ulong[]{0x2UL,0x100000000000UL});
		public static readonly BitSet _general_catch_clause_in_specific_catch_clauses7397 = new BitSet(new ulong[]{0x2UL,0x100000000000UL});
		public static readonly BitSet _68_in_specific_catch_clause7407 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _class_type_in_specific_catch_clause7411 = new BitSet(new ulong[]{0x800008000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_specific_catch_clause7415 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_specific_catch_clause7420 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _block_in_specific_catch_clause7424 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _block_in_general_catch_clause7432 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _127_in_finally_clause7440 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _block_in_finally_clause7444 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _110_in_checked_statement7452 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _block_in_checked_statement7456 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _187_in_unchecked_statement7464 = new BitSet(new ulong[]{0x4000000000000UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _block_in_unchecked_statement7468 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _145_in_lock_statement7476 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_lock_statement7480 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_lock_statement7483 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_lock_statement7487 = new BitSet(new ulong[]{0x262D001C1C100020UL,0x45FE67F6800009B4UL,0x7FFA7B8525DFA4DFUL,0x43CUL});
		public static readonly BitSet _embedded_statement_in_lock_statement7491 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _USING_in_using_statement7499 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_using_statement7503 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x415UL});
		public static readonly BitSet _resource_acquisition_in_using_statement7508 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_using_statement7512 = new BitSet(new ulong[]{0x262D001C1C100020UL,0x45FE67F6800009B4UL,0x7FFA7B8525DFA4DFUL,0x43CUL});
		public static readonly BitSet _embedded_statement_in_using_statement7517 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _local_variable_declaration_in_resource_acquisition7531 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_resource_acquisition7536 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _196_in_yield_statement7544 = new BitSet(new ulong[]{0x0UL,0x10000000000UL,0x10000000000UL});
		public static readonly BitSet _168_in_yield_statement7549 = new BitSet(new ulong[]{0x2429001C0C100020UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _expression_in_yield_statement7553 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_yield_statement7557 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _104_in_yield_statement7572 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_yield_statement7576 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _assignment_in_assignment_list10284 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_assignment_list10286 = new BitSet(new ulong[]{0x2429001C0C100022UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _attributes_in_field_declarations10297 = new BitSet(new ulong[]{0x8000000UL,0x65A426B780000000UL,0xF6833EBF35DDB492UL,0x17UL});
		public static readonly BitSet _modifiers_in_field_declarations10302 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_in_field_declarations10307 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _field_declaration_in_field_declarations10311 = new BitSet(new ulong[]{0x8000002UL,0x65A426B788000000UL,0xF6833EBF35DDB492UL,0x17UL});
		public static readonly BitSet _attributes_in_property_declaration_list10322 = new BitSet(new ulong[]{0x8000000UL,0x65A426B780000000UL,0xF6833EBF35DDB492UL,0x17UL});
		public static readonly BitSet _modifiers_in_property_declaration_list10327 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_in_property_declaration_list10332 = new BitSet(new ulong[]{0x42900180C100020UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x14UL});
		public static readonly BitSet _property_declaration_in_property_declaration_list10336 = new BitSet(new ulong[]{0x8000002UL,0x65A426B788000000UL,0xF6833EBF35DDB492UL,0x17UL});
		public static readonly BitSet _constant_declaration_in_constant_declarations10346 = new BitSet(new ulong[]{0x2UL,0x1000000000000UL});
		public static readonly BitSet _literal_in_literals10354 = new BitSet(new ulong[]{0x429001804100022UL});
		public static readonly BitSet _attributes_in_delegate_declaration_list10364 = new BitSet(new ulong[]{0x0UL,0x2010000100000000UL,0x9001043A10401000UL,0x2UL});
		public static readonly BitSet _modifiers_in_delegate_declaration_list10369 = new BitSet(new ulong[]{0x0UL,0x10000000000000UL});
		public static readonly BitSet _delegate_declaration_in_delegate_declaration_list10374 = new BitSet(new ulong[]{0x2UL,0x2010000108000000UL,0x9001043A10401000UL,0x2UL});
		public static readonly BitSet _local_variable_declaration_in_local_variable_declaration_list10385 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_local_variable_declaration_list10387 = new BitSet(new ulong[]{0x8000002UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _local_variable_initializer_in_local_variable_initializer_list10398 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_local_variable_initializer_list10400 = new BitSet(new ulong[]{0x2429001C0C100022UL,0x45BC66F6800009B4UL,0x6F92FA8525DDA492UL,0x434UL});
		public static readonly BitSet _expression_in_expression_list_test10411 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_expression_list_test10413 = new BitSet(new ulong[]{0x2429001C0C100022UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _unary_expression_in_unary_expression_list10424 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_unary_expression_list10426 = new BitSet(new ulong[]{0x2429001C0C100022UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _invocation_expression_in_invocation_expression_list10437 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_invocation_expression_list10439 = new BitSet(new ulong[]{0x8000002UL,0x45A426F680000000UL,0x67923A85259DA492UL,0x14UL});
		public static readonly BitSet _primary_expression_in_primary_expression_list10450 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_primary_expression_list10452 = new BitSet(new ulong[]{0x42900180C100022UL,0x45BC66F680000010UL,0x6F927A8525DDA492UL,0x14UL});
		public static readonly BitSet _non_assignment_expression_in_non_assignment_expression_list10463 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _SEMI_in_non_assignment_expression_list10465 = new BitSet(new ulong[]{0x2429001C0C100022UL,0x45BC66F6800009B4UL,0x6F927A8525DDA492UL,0x414UL});
		public static readonly BitSet _modifiers_in_method_declarations10476 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _192_in_method_declarations10480 = new BitSet(new ulong[]{0x42900180C100020UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x14UL});
		public static readonly BitSet _type_in_method_declarations10484 = new BitSet(new ulong[]{0x42900180C100020UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x14UL});
		public static readonly BitSet _method_declaration_in_method_declarations10487 = new BitSet(new ulong[]{0x8000002UL,0x65A426B780000000UL,0xF6833EBF35DDB492UL,0x17UL});
		public static readonly BitSet _159_in_synpred1_cs282 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_name_in_synpred2_cs546 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_synpred2_cs550 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_name_in_synpred3_cs565 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _197_in_synpred3_cs569 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_name_in_synpred4_cs584 = new BitSet(new ulong[]{0x400UL});
		public static readonly BitSet _DOT_in_synpred4_cs588 = new BitSet(new ulong[]{0x0UL,0x0UL,0x10000000000000UL});
		public static readonly BitSet _180_in_synpred4_cs592 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _180_in_synpred5_cs712 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _brackets_in_synpred5_cs717 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _102_in_synpred6_cs737 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _brackets_in_synpred6_cs741 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _object_creation_expression_in_synpred7_cs777 = new BitSet(new ulong[]{0x200000000400UL,0x8000000UL});
		public static readonly BitSet _set_in_synpred7_cs781 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _delegate_creation_expression_in_synpred8_cs825 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_synpred9_cs950 = new BitSet(new ulong[]{0x0UL,0x20000UL});
		public static readonly BitSet _generic_argument_list_in_synpred9_cs952 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _68_in_synpred10_cs1202 = new BitSet(new ulong[]{0x8000000UL,0x45A426B680000000UL,0x66823A85259DA492UL,0x15UL});
		public static readonly BitSet _type_in_synpred10_cs1206 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _RPAREN_in_synpred10_cs1210 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _array_creation_expression_in_synpred11_cs1452 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _arguments_in_synpred12_cs1532 = new BitSet(new ulong[]{0x200000000400UL,0x8000000UL});
		public static readonly BitSet _set_in_synpred12_cs1536 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _unbound_type_name_in_synpred13_cs2062 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _generic_dimension_specifier_in_synpred14_cs2120 = new BitSet(new ulong[]{0x400UL});
		public static readonly BitSet _DOT_in_synpred14_cs2124 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_synpred15_cs2256 = new BitSet(new ulong[]{0x0UL,0x20000UL});
		public static readonly BitSet _81_in_synpred15_cs2260 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_synpred16_cs2305 = new BitSet(new ulong[]{0x0UL,0x20000UL});
		public static readonly BitSet _81_in_synpred16_cs2310 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _predefined_type_in_synpred17_cs2403 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _type_name_in_synpred17_cs2407 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _rank_specifiers_in_synpred17_cs2411 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _predefined_type_in_synpred18_cs2438 = new BitSet(new ulong[]{0x0UL,0x2000020UL});
		public static readonly BitSet _type_name_in_synpred18_cs2442 = new BitSet(new ulong[]{0x0UL,0x2000020UL});
		public static readonly BitSet _69_in_synpred18_cs2447 = new BitSet(new ulong[]{0x2UL,0x20UL});
		public static readonly BitSet _89_in_synpred18_cs2452 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _unary_expression_in_synpred19_cs2634 = new BitSet(new ulong[]{0x200000UL,0x40285249UL,0x0UL,0x80UL});
		public static readonly BitSet _assignment_operator_in_synpred19_cs2638 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _cast_expression_in_synpred20_cs2696 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _anonymous_function_signature_in_synpred21_cs2912 = new BitSet(new ulong[]{0x0UL,0x800000UL});
		public static readonly BitSet _87_in_synpred21_cs2916 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _query_expression_in_synpred22_cs2927 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _141_in_synpred23_cs3350 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _74_in_synpred24_cs3852 = new BitSet(new ulong[]{0x8000000UL,0x4520023680000000UL,0x408018852519A090UL,0x14UL});
		public static readonly BitSet _identifier_in_synpred24_cs3856 = new BitSet(new ulong[]{0x0UL,0x200000UL});
		public static readonly BitSet _85_in_synpred24_cs3860 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_name_in_synpred25_cs4378 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _197_in_synpred25_cs4382 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_name_in_synpred26_cs5243 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_synpred26_cs5247 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_name_in_synpred27_cs5268 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _197_in_synpred27_cs5272 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_name_in_synpred28_cs5716 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _68_in_synpred28_cs5720 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_name_in_synpred29_cs5735 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x20UL});
		public static readonly BitSet _197_in_synpred29_cs5739 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _member_name_in_synpred30_cs5754 = new BitSet(new ulong[]{0x400UL});
		public static readonly BitSet _DOT_in_synpred30_cs5758 = new BitSet(new ulong[]{0x0UL,0x0UL,0x10000000000000UL});
		public static readonly BitSet _180_in_synpred30_cs5762 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _arguments_in_synpred31_cs6308 = new BitSet(new ulong[]{0x200000000400UL,0x8000000UL});
		public static readonly BitSet _set_in_synpred31_cs6312 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_synpred32_cs6359 = new BitSet(new ulong[]{0x0UL,0x20000UL});
		public static readonly BitSet _81_in_synpred32_cs6364 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _declaration_statement_in_synpred33_cs6445 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_synpred34_cs6456 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _79_in_synpred34_cs6460 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _190_in_synpred35_cs6684 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _120_in_synpred36_cs6695 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _121_in_synpred37_cs6862 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _local_variable_declaration_in_synpred38_cs7113 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _local_variable_declaration_in_synpred39_cs7526 = new BitSet(new ulong[]{0x2UL});
	}
	#endregion Follow sets
}

} // namespace  Code2Xml.Languages.ANTLRv3.Processors.CSharp 
