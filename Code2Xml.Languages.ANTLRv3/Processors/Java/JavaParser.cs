using Code2Xml.Languages.ANTLRv3.Core;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 3.5.0.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// $ANTLR 3.5.0.2 C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g 2013-10-10 16:37:40

// The variable 'variable' is assigned but its value is never used.
#pragma warning disable 219
// Unreachable code detected.
#pragma warning disable 162
// Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// CLS compliance checking will not be performed on 'type' because it is not visible from outside this assembly.
#pragma warning disable 3019


using System.Collections.Generic;
using Antlr.Runtime;
using Antlr.Runtime.Misc;


using Antlr.Runtime.Tree;
using RewriteRuleITokenStream = Antlr.Runtime.Tree.RewriteRuleTokenStream;

namespace  Code2Xml.Languages.ANTLRv3.Processors.Java 
{
/** A Java 1.5 grammar for ANTLR v3 derived from the spec
 *
 *  This is a very close representation of the spec; the changes
 *  are comestic (remove left recursion) and also fixes (the spec
 *  isn't exactly perfect).  I have run this on the 1.4.2 source
 *  and some nasty looking enums from 1.5, but have not really
 *  tested for 1.5 compatibility.
 *
 *  I built this with: java -Xmx100M org.antlr.Tool java.g
 *  and got two errors that are ok (for now):
 *  java.g:691:9: Decision can match input such as
 *    "'0'..'9'{'E', 'e'}{'+', '-'}'0'..'9'{'D', 'F', 'd', 'f'}"
 *    using multiple alternatives: 3, 4
 *  As a result, alternative(s) 4 were disabled for that input
 *  java.g:734:35: Decision can match input such as "{'$', 'A'..'Z',
 *    '_', 'a'..'z', '\u00C0'..'\u00D6', '\u00D8'..'\u00F6',
 *    '\u00F8'..'\u1FFF', '\u3040'..'\u318F', '\u3300'..'\u337F',
 *    '\u3400'..'\u3D2D', '\u4E00'..'\u9FFF', '\uF900'..'\uFAFF'}"
 *    using multiple alternatives: 1, 2
 *  As a result, alternative(s) 2 were disabled for that input
 *
 *  You can turn enum on/off as a keyword :)
 *
 *  Version 1.0 -- initial release July 5, 2006 (requires 3.0b2 or higher)
 *
 *  Primary author: Terence Parr, July 2006
 *
 *  Version 1.0.1 -- corrections by Koen Vanderkimpen & Marko van Dooren,
 *      October 25, 2006;
 *      fixed normalInterfaceDeclaration: now uses typeParameters instead
 *          of typeParameter (according to JLS, 3rd edition)
 *      fixed castExpression: no longer allows expression next to type
 *          (according to semantics in JLS, in contrast with syntax in JLS)
 *
 *  Version 1.0.2 -- Terence Parr, Nov 27, 2006
 *      java spec I built this from had some bizarre for-loop control.
 *          Looked weird and so I looked elsewhere...Yep, it's messed up.
 *          simplified.
 *
 *  Version 1.0.3 -- Chris Hogue, Feb 26, 2007
 *      Factored out an annotationName rule and used it in the annotation rule.
 *          Not sure why, but typeName wasn't recognizing references to inner
 *          annotations (e.g. @InterfaceName.InnerAnnotation())
 *      Factored out the elementValue section of an annotation reference.  Created
 *          elementValuePair and elementValuePairs rules, then used them in the
 *          annotation rule.  Allows it to recognize annotation references with
 *          multiple, comma separated attributes.
 *      Updated elementValueArrayInitializer so that it allows multiple elements.
 *          (It was only allowing 0 or 1 element).
 *      Updated localVariableDeclaration to allow annotations.  Interestingly the JLS
 *          doesn't appear to indicate this is legal, but it does work as of at least
 *          JDK 1.5.0_06.
 *      Moved the Identifier portion of annotationTypeElementRest to annotationMethodRest.
 *          Because annotationConstantRest already references variableDeclarator which
 *          has the Identifier portion in it, the parser would fail on constants in
 *          annotation definitions because it expected two identifiers.
 *      Added optional trailing ';' to the alternatives in annotationTypeElementRest.
 *          Wouldn't handle an inner interface that has a trailing ';'.
 *      Swapped the expression and type rule reference order in castExpression to
 *          make it check for genericized casts first.  It was failing to recognize a
 *          statement like  "Class<Byte> TYPE = (Class<Byte>)...;" because it was seeing
 *          'Class<Byte' in the cast expression as a less than expression, then failing
 *          on the '>'.
 *      Changed createdName to use typeArguments instead of nonWildcardTypeArguments.
 *         
 *      Changed the 'this' alternative in primary to allow 'identifierSuffix' rather than
 *          just 'arguments'.  The case it couldn't handle was a call to an explicit
 *          generic method invocation (e.g. this.<E>doSomething()).  Using identifierSuffix
 *          may be overly aggressive--perhaps should create a more constrained thisSuffix rule?
 *
 *  Version 1.0.4 -- Hiroaki Nakamura, May 3, 2007
 *
 *  Fixed formalParameterDecls, localVariableDeclaration, forInit,
 *  and forVarControl to use variableModifier* not 'final'? (annotation)?
 *
 *  Version 1.0.5 -- Terence, June 21, 2007
 *  --a[i].foo didn't work. Fixed unaryExpression
 *
 *  Version 1.0.6 -- John Ridgway, March 17, 2008
 *      Made "assert" a switchable keyword like "enum".
 *      Fixed compilationUnit to disallow "annotation importDeclaration ...".
 *      Changed "Identifier ('.' Identifier)*" to "qualifiedName" in more
 *          places.
 *      Changed modifier* and/or variableModifier* to classOrInterfaceModifiers,
 *          modifiers or variableModifiers, as appropriate.
 *      Renamed "bound" to "typeBound" to better match language in the JLS.
 *      Added "memberDeclaration" which rewrites to methodDeclaration or
 *      fieldDeclaration and pulled type into memberDeclaration.  So we parse
 *          type and then move on to decide whether we're dealing with a field
 *          or a method.
 *      Modified "constructorDeclaration" to use "constructorBody" instead of
 *          "methodBody".  constructorBody starts with explicitConstructorInvocation,
 *          then goes on to blockStatement*.  Pulling explicitConstructorInvocation
 *          out of expressions allowed me to simplify "primary".
 *      Changed variableDeclarator to simplify it.
 *      Changed type to use classOrInterfaceType, thus simplifying it; of course
 *          I then had to add classOrInterfaceType, but it is used in several
 *          places.
 *      Fixed annotations, old version allowed "@X(y,z)", which is illegal.
 *      Added optional comma to end of "elementValueArrayInitializer"; as per JLS.
 *      Changed annotationTypeElementRest to use normalClassDeclaration and
 *          normalInterfaceDeclaration rather than classDeclaration and
 *          interfaceDeclaration, thus getting rid of a couple of grammar ambiguities.
 *      Split localVariableDeclaration into localVariableDeclarationStatement
 *          (includes the terminating semi-colon) and localVariableDeclaration.
 *          This allowed me to use localVariableDeclaration in "forInit" clauses,
 *           simplifying them.
 *      Changed switchBlockStatementGroup to use multiple labels.  This adds an
 *          ambiguity, but if one uses appropriately greedy parsing it yields the
 *           parse that is closest to the meaning of the switch statement.
 *      Renamed "forVarControl" to "enhancedForControl" -- JLS language.
 *      Added semantic predicates to test for shift operations rather than other
 *          things.  Thus, for instance, the string "< <" will never be treated
 *          as a left-shift operator.
 *      In "creator" we rule out "nonWildcardTypeArguments" on arrayCreation,
 *          which are illegal.
 *      Moved "nonWildcardTypeArguments into innerCreator.
 *      Removed 'super' superSuffix from explicitGenericInvocation, since that
 *          is only used in explicitConstructorInvocation at the beginning of a
 *           constructorBody.  (This is part of the simplification of expressions
 *           mentioned earlier.)
 *      Simplified primary (got rid of those things that are only used in
 *          explicitConstructorInvocation).
 *      Lexer -- removed "Exponent?" from FloatingPointLiteral choice 4, since it
 *          led to an ambiguity.
 *
 *      This grammar successfully parses every .java file in the JDK 1.5 source
 *          tree (excluding those whose file names include '-', which are not
 *          valid Java compilation units).
 *
 *  Known remaining problems:
 *      "Letter" and "JavaIDDigit" are wrong.  The actual specification of
 *      "Letter" should be "a character for which the method
 *      Character.isJavaIdentifierStart(int) returns true."  A "Java
 *      letter-or-digit is a character for which the method
 *      Character.isJavaIdentifierPart(int) returns true."
 */
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "3.5.0.2")]
[System.CLSCompliant(false)]
 public  partial class JavaParser : Antlr.Runtime.Parser, ICustomizedAntlr3Parser
{
	internal static readonly string[] tokenNames = new string[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "ABSTRACT", "AMP", "AMPAMP", "AMPEQ", "ASSERT", "BANG", "BANGEQ", "BAR", "BARBAR", "BAREQ", "BOOLEAN", "BREAK", "BYTE", "CARET", "CARETEQ", "CASE", "CATCH", "CHAR", "CHARLITERAL", "CLASS", "COLON", "COMMA", "COMMENT", "CONST", "CONTINUE", "DEFAULT", "DO", "DOT", "DOUBLE", "DOUBLELITERAL", "DoubleSuffix", "ELLIPSIS", "ELSE", "ENUM", "EQ", "EQEQ", "EXTENDS", "EscapeSequence", "Exponent", "FALSE", "FINAL", "FINALLY", "FLOAT", "FLOATLITERAL", "FOR", "FloatSuffix", "GOTO", "GT", "HexDigit", "HexPrefix", "IDENTIFIER", "IF", "IMPLEMENTS", "IMPORT", "INSTANCEOF", "INT", "INTERFACE", "INTLITERAL", "IdentifierPart", "IdentifierStart", "IntegerNumber", "LBRACE", "LBRACKET", "LINE_COMMENT", "LONG", "LONGLITERAL", "LPAREN", "LT", "LongSuffix", "MONKEYS_AT", "NATIVE", "NEW", "NULL", "NonIntegerNumber", "PACKAGE", "PERCENT", "PERCENTEQ", "PLUS", "PLUSEQ", "PLUSPLUS", "PRIVATE", "PROTECTED", "PUBLIC", "QUES", "RBRACE", "RBRACKET", "RETURN", "RPAREN", "SEMI", "SHORT", "SLASH", "SLASHEQ", "STAR", "STAREQ", "STATIC", "STRICTFP", "STRINGLITERAL", "SUB", "SUBEQ", "SUBSUB", "SUPER", "SWITCH", "SYNCHRONIZED", "SurrogateIdentifer", "THIS", "THROW", "THROWS", "TILDE", "TRANSIENT", "TRUE", "TRY", "VOID", "VOLATILE", "WHILE", "WS", "'filly'"
	};
	public const int EOF=-1;
	public const int ABSTRACT=4;
	public const int AMP=5;
	public const int AMPAMP=6;
	public const int AMPEQ=7;
	public const int ASSERT=8;
	public const int BANG=9;
	public const int BANGEQ=10;
	public const int BAR=11;
	public const int BARBAR=12;
	public const int BAREQ=13;
	public const int BOOLEAN=14;
	public const int BREAK=15;
	public const int BYTE=16;
	public const int CARET=17;
	public const int CARETEQ=18;
	public const int CASE=19;
	public const int CATCH=20;
	public const int CHAR=21;
	public const int CHARLITERAL=22;
	public const int CLASS=23;
	public const int COLON=24;
	public const int COMMA=25;
	public const int COMMENT=26;
	public const int CONST=27;
	public const int CONTINUE=28;
	public const int DEFAULT=29;
	public const int DO=30;
	public const int DOT=31;
	public const int DOUBLE=32;
	public const int DOUBLELITERAL=33;
	public const int DoubleSuffix=34;
	public const int ELLIPSIS=35;
	public const int ELSE=36;
	public const int ENUM=37;
	public const int EQ=38;
	public const int EQEQ=39;
	public const int EXTENDS=40;
	public const int EscapeSequence=41;
	public const int Exponent=42;
	public const int FALSE=43;
	public const int FINAL=44;
	public const int FINALLY=45;
	public const int FLOAT=46;
	public const int FLOATLITERAL=47;
	public const int FOR=48;
	public const int FloatSuffix=49;
	public const int GOTO=50;
	public const int GT=51;
	public const int HexDigit=52;
	public const int HexPrefix=53;
	public const int IDENTIFIER=54;
	public const int IF=55;
	public const int IMPLEMENTS=56;
	public const int IMPORT=57;
	public const int INSTANCEOF=58;
	public const int INT=59;
	public const int INTERFACE=60;
	public const int INTLITERAL=61;
	public const int IdentifierPart=62;
	public const int IdentifierStart=63;
	public const int IntegerNumber=64;
	public const int LBRACE=65;
	public const int LBRACKET=66;
	public const int LINE_COMMENT=67;
	public const int LONG=68;
	public const int LONGLITERAL=69;
	public const int LPAREN=70;
	public const int LT=71;
	public const int LongSuffix=72;
	public const int MONKEYS_AT=73;
	public const int NATIVE=74;
	public const int NEW=75;
	public const int NULL=76;
	public const int NonIntegerNumber=77;
	public const int PACKAGE=78;
	public const int PERCENT=79;
	public const int PERCENTEQ=80;
	public const int PLUS=81;
	public const int PLUSEQ=82;
	public const int PLUSPLUS=83;
	public const int PRIVATE=84;
	public const int PROTECTED=85;
	public const int PUBLIC=86;
	public const int QUES=87;
	public const int RBRACE=88;
	public const int RBRACKET=89;
	public const int RETURN=90;
	public const int RPAREN=91;
	public const int SEMI=92;
	public const int SHORT=93;
	public const int SLASH=94;
	public const int SLASHEQ=95;
	public const int STAR=96;
	public const int STAREQ=97;
	public const int STATIC=98;
	public const int STRICTFP=99;
	public const int STRINGLITERAL=100;
	public const int SUB=101;
	public const int SUBEQ=102;
	public const int SUBSUB=103;
	public const int SUPER=104;
	public const int SWITCH=105;
	public const int SYNCHRONIZED=106;
	public const int SurrogateIdentifer=107;
	public const int THIS=108;
	public const int THROW=109;
	public const int THROWS=110;
	public const int TILDE=111;
	public const int TRANSIENT=112;
	public const int TRUE=113;
	public const int TRY=114;
	public const int VOID=115;
	public const int VOLATILE=116;
	public const int WHILE=117;
	public const int WS=118;
	public const int T__119=119;

	 public  JavaParser(ITokenStream input)
		: this(input, new RecognizerSharedState())
	{
	}
	 public  JavaParser(ITokenStream input, RecognizerSharedState state)
		: base(input, state)
	{
		this.state.ruleMemo = new System.Collections.Generic.Dictionary<int, int>[408+1];


		Antlr3AstBuilder treeAdaptor = default(Antlr3AstBuilder);
		CreateTreeAdaptor(ref treeAdaptor);
		TreeAdaptor = treeAdaptor ?? new Antlr3AstBuilder();
		OnCreated();
	}
	// Implement this function in your helper file to use a custom tree adaptor
	partial void CreateTreeAdaptor(ref Antlr3AstBuilder adaptor);

	private Antlr3AstBuilder adaptor;

	public Antlr3AstBuilder TreeAdaptor
	{
		get
		{
			return adaptor;
		}

		set
		{
			this.adaptor = value;
		}
	}

	public override string[] TokenNames { get { return JavaParser.tokenNames; } }
	public override string GrammarFileName { get { return "C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g"; } }


	partial void OnCreated();
	partial void EnterRule(string ruleName, int ruleIndex);
	partial void LeaveRule(string ruleName, int ruleIndex);

	#region Rules
	partial void EnterRule_compilationUnit();
	partial void LeaveRule_compilationUnit();
	// $ANTLR start "compilationUnit"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:304:1: public compilationUnit : ( ( annotations )? packageDeclaration )? ( importDeclaration )* ( typeDeclaration )* ;
	[GrammarRule("compilationUnit")]
	public Antlr3AstNode compilationUnit()
	{
		EnterRule_compilationUnit();
		EnterRule("compilationUnit", 1);
		var retval = new Antlr3AstNode("compilationUnit");
		
		retval.Start = (IToken)input.LT(1);
		int compilationUnit_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode annotations1 = default(Antlr3AstNode);
		Antlr3AstNode packageDeclaration2 = default(Antlr3AstNode);
		Antlr3AstNode importDeclaration3 = default(Antlr3AstNode);
		Antlr3AstNode typeDeclaration4 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "compilationUnit");
		DebugLocation(304, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 1)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:305:5: ( ( ( annotations )? packageDeclaration )? ( importDeclaration )* ( typeDeclaration )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:305:9: ( ( annotations )? packageDeclaration )? ( importDeclaration )* ( typeDeclaration )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(305, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:305:9: ( ( annotations )? packageDeclaration )?
			int alt2=2;
			try { DebugEnterSubRule(2);
			try { DebugEnterDecision(2, false);
			int LA2_1 = input.LA(1);

			if ((LA2_1==MONKEYS_AT))
			{
				int LA2_2 = input.LA(2);

				if ((EvaluatePredicate(synpred2_Java_fragment)))
				{
					alt2 = 1;
				}
			}
			else if ((LA2_1==PACKAGE))
			{
				alt2 = 1;
			}
			} finally { DebugExitDecision(2); }
			switch (alt2)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:305:13: ( annotations )? packageDeclaration
				{
				DebugLocation(305, 13);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:305:13: ( annotations )?
				int alt1=2;
				try { DebugEnterSubRule(1);
				try { DebugEnterDecision(1, false);
				int LA1_1 = input.LA(1);

				if ((LA1_1==MONKEYS_AT))
				{
					alt1 = 1;
				}
				} finally { DebugExitDecision(1); }
				switch (alt1)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:305:14: annotations
					{
					DebugLocation(305, 14);
					PushFollow(Follow._annotations_in_compilationUnit118);
					annotations1=annotations();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, annotations1.Tree, annotations1, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(1); }

				DebugLocation(307, 13);
				PushFollow(Follow._packageDeclaration_in_compilationUnit147);
				packageDeclaration2=packageDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, packageDeclaration2.Tree, packageDeclaration2, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(2); }

			DebugLocation(309, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:309:9: ( importDeclaration )*
			try { DebugEnterSubRule(3);
			while (true)
			{
				int alt3=2;
				try { DebugEnterDecision(3, false);
				int LA3_1 = input.LA(1);

				if ((LA3_1==IMPORT))
				{
					alt3 = 1;
				}


				} finally { DebugExitDecision(3); }
				switch ( alt3 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:309:10: importDeclaration
					{
					DebugLocation(309, 10);
					PushFollow(Follow._importDeclaration_in_compilationUnit169);
					importDeclaration3=importDeclaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, importDeclaration3.Tree, importDeclaration3, retval);

					}
					break;

				default:
					goto loop3;
				}
			}

			loop3:
				;

			} finally { DebugExitSubRule(3); }

			DebugLocation(311, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:311:9: ( typeDeclaration )*
			try { DebugEnterSubRule(4);
			while (true)
			{
				int alt4=2;
				try { DebugEnterDecision(4, false);
				int LA4_1 = input.LA(1);

				if ((LA4_1==ABSTRACT||LA4_1==BOOLEAN||LA4_1==BYTE||LA4_1==CHAR||LA4_1==CLASS||LA4_1==DOUBLE||LA4_1==ENUM||LA4_1==FINAL||LA4_1==FLOAT||LA4_1==IDENTIFIER||(LA4_1>=INT && LA4_1<=INTERFACE)||LA4_1==LONG||LA4_1==LT||(LA4_1>=MONKEYS_AT && LA4_1<=NATIVE)||(LA4_1>=PRIVATE && LA4_1<=PUBLIC)||(LA4_1>=SEMI && LA4_1<=SHORT)||(LA4_1>=STATIC && LA4_1<=STRICTFP)||LA4_1==SYNCHRONIZED||LA4_1==TRANSIENT||(LA4_1>=VOID && LA4_1<=VOLATILE)))
				{
					alt4 = 1;
				}


				} finally { DebugExitDecision(4); }
				switch ( alt4 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:311:10: typeDeclaration
					{
					DebugLocation(311, 10);
					PushFollow(Follow._typeDeclaration_in_compilationUnit191);
					typeDeclaration4=typeDeclaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, typeDeclaration4.Tree, typeDeclaration4, retval);

					}
					break;

				default:
					goto loop4;
				}
			}

			loop4:
				;

			} finally { DebugExitSubRule(4); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("compilationUnit", 1);
			LeaveRule("compilationUnit", 1);
			LeaveRule_compilationUnit();
			if (state.backtracking > 0) { Memoize(input, 1, compilationUnit_StartIndex); }

		}
		DebugLocation(313, 4);
		} finally { DebugExitRule(GrammarFileName, "compilationUnit"); }
		return retval;

	}
	// $ANTLR end "compilationUnit"

	partial void EnterRule_packageDeclaration();
	partial void LeaveRule_packageDeclaration();
	// $ANTLR start "packageDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:315:1: packageDeclaration : 'package' qualifiedName ';' ;
	[GrammarRule("packageDeclaration")]
	private Antlr3AstNode packageDeclaration()
	{
		EnterRule_packageDeclaration();
		EnterRule("packageDeclaration", 2);
		var retval = new Antlr3AstNode("packageDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int packageDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal5 = default(IToken);
		IToken char_literal7 = default(IToken);
		Antlr3AstNode qualifiedName6 = default(Antlr3AstNode);

		object string_literal5_tree = default(object);
		object char_literal7_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "packageDeclaration");
		DebugLocation(315, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 2)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:316:5: ( 'package' qualifiedName ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:316:9: 'package' qualifiedName ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(316, 9);
			string_literal5=(IToken)Match(input,PACKAGE,Follow._PACKAGE_in_packageDeclaration222); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal5_tree = (object)adaptor.Create(string_literal5, retval);
			adaptor.AddChild(root_0, string_literal5_tree);
			}
			DebugLocation(316, 19);
			PushFollow(Follow._qualifiedName_in_packageDeclaration224);
			qualifiedName6=qualifiedName();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedName6.Tree, qualifiedName6, retval);
			DebugLocation(317, 9);
			char_literal7=(IToken)Match(input,SEMI,Follow._SEMI_in_packageDeclaration234); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal7_tree = (object)adaptor.Create(char_literal7, retval);
			adaptor.AddChild(root_0, char_literal7_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("packageDeclaration", 2);
			LeaveRule("packageDeclaration", 2);
			LeaveRule_packageDeclaration();
			if (state.backtracking > 0) { Memoize(input, 2, packageDeclaration_StartIndex); }

		}
		DebugLocation(318, 4);
		} finally { DebugExitRule(GrammarFileName, "packageDeclaration"); }
		return retval;

	}
	// $ANTLR end "packageDeclaration"

	partial void EnterRule_importDeclaration();
	partial void LeaveRule_importDeclaration();
	// $ANTLR start "importDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:320:1: importDeclaration : ( 'import' ( 'static' )? IDENTIFIER '.' '*' ';' | 'import' ( 'static' )? IDENTIFIER ( '.' IDENTIFIER )+ ( '.' '*' )? ';' );
	[GrammarRule("importDeclaration")]
	private Antlr3AstNode importDeclaration()
	{
		EnterRule_importDeclaration();
		EnterRule("importDeclaration", 3);
		var retval = new Antlr3AstNode("importDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int importDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal8 = default(IToken);
		IToken string_literal9 = default(IToken);
		IToken IDENTIFIER10 = default(IToken);
		IToken char_literal11 = default(IToken);
		IToken char_literal12 = default(IToken);
		IToken char_literal13 = default(IToken);
		IToken string_literal14 = default(IToken);
		IToken string_literal15 = default(IToken);
		IToken IDENTIFIER16 = default(IToken);
		IToken char_literal17 = default(IToken);
		IToken IDENTIFIER18 = default(IToken);
		IToken char_literal19 = default(IToken);
		IToken char_literal20 = default(IToken);
		IToken char_literal21 = default(IToken);

		object string_literal8_tree = default(object);
		object string_literal9_tree = default(object);
		object IDENTIFIER10_tree = default(object);
		object char_literal11_tree = default(object);
		object char_literal12_tree = default(object);
		object char_literal13_tree = default(object);
		object string_literal14_tree = default(object);
		object string_literal15_tree = default(object);
		object IDENTIFIER16_tree = default(object);
		object char_literal17_tree = default(object);
		object IDENTIFIER18_tree = default(object);
		object char_literal19_tree = default(object);
		object char_literal20_tree = default(object);
		object char_literal21_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "importDeclaration");
		DebugLocation(320, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 3)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:321:5: ( 'import' ( 'static' )? IDENTIFIER '.' '*' ';' | 'import' ( 'static' )? IDENTIFIER ( '.' IDENTIFIER )+ ( '.' '*' )? ';' )
			int alt9=2;
			try { DebugEnterDecision(9, false);
			int LA9_1 = input.LA(1);

			if ((LA9_1==IMPORT))
			{
				int LA9_2 = input.LA(2);

				if ((LA9_2==STATIC))
				{
					int LA9_3 = input.LA(3);

					if ((LA9_3==IDENTIFIER))
					{
						int LA9_4 = input.LA(4);

						if ((LA9_4==DOT))
						{
							int LA9_5 = input.LA(5);

							if ((LA9_5==STAR))
							{
								alt9 = 1;
							}
							else if ((LA9_5==IDENTIFIER))
							{
								alt9 = 2;
							}
							else
							{
								if (state.backtracking>0) {state.failed=true; return retval;}
								NoViableAltException nvae = new NoViableAltException("", 9, 4, input, 5);
								DebugRecognitionException(nvae);
								throw nvae;
							}
						}
						else
						{
							if (state.backtracking>0) {state.failed=true; return retval;}
							NoViableAltException nvae = new NoViableAltException("", 9, 3, input, 4);
							DebugRecognitionException(nvae);
							throw nvae;
						}
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 9, 2, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else if ((LA9_2==IDENTIFIER))
				{
					int LA9_3 = input.LA(3);

					if ((LA9_3==DOT))
					{
						int LA9_4 = input.LA(4);

						if ((LA9_4==STAR))
						{
							alt9 = 1;
						}
						else if ((LA9_4==IDENTIFIER))
						{
							alt9 = 2;
						}
						else
						{
							if (state.backtracking>0) {state.failed=true; return retval;}
							NoViableAltException nvae = new NoViableAltException("", 9, 4, input, 4);
							DebugRecognitionException(nvae);
							throw nvae;
						}
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 9, 3, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 9, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 9, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(9); }
			switch (alt9)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:321:9: 'import' ( 'static' )? IDENTIFIER '.' '*' ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(321, 9);
				string_literal8=(IToken)Match(input,IMPORT,Follow._IMPORT_in_importDeclaration255); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal8_tree = (object)adaptor.Create(string_literal8, retval);
				adaptor.AddChild(root_0, string_literal8_tree);
				}
				DebugLocation(322, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:322:9: ( 'static' )?
				int alt5=2;
				try { DebugEnterSubRule(5);
				try { DebugEnterDecision(5, false);
				int LA5_1 = input.LA(1);

				if ((LA5_1==STATIC))
				{
					alt5 = 1;
				}
				} finally { DebugExitDecision(5); }
				switch (alt5)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:322:10: 'static'
					{
					DebugLocation(322, 10);
					string_literal9=(IToken)Match(input,STATIC,Follow._STATIC_in_importDeclaration267); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal9_tree = (object)adaptor.Create(string_literal9, retval);
					adaptor.AddChild(root_0, string_literal9_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(5); }

				DebugLocation(324, 9);
				IDENTIFIER10=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_importDeclaration288); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER10_tree = (object)adaptor.Create(IDENTIFIER10, retval);
				adaptor.AddChild(root_0, IDENTIFIER10_tree);
				}
				DebugLocation(324, 20);
				char_literal11=(IToken)Match(input,DOT,Follow._DOT_in_importDeclaration290); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal11_tree = (object)adaptor.Create(char_literal11, retval);
				adaptor.AddChild(root_0, char_literal11_tree);
				}
				DebugLocation(324, 24);
				char_literal12=(IToken)Match(input,STAR,Follow._STAR_in_importDeclaration292); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal12_tree = (object)adaptor.Create(char_literal12, retval);
				adaptor.AddChild(root_0, char_literal12_tree);
				}
				DebugLocation(325, 9);
				char_literal13=(IToken)Match(input,SEMI,Follow._SEMI_in_importDeclaration302); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal13_tree = (object)adaptor.Create(char_literal13, retval);
				adaptor.AddChild(root_0, char_literal13_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:326:9: 'import' ( 'static' )? IDENTIFIER ( '.' IDENTIFIER )+ ( '.' '*' )? ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(326, 9);
				string_literal14=(IToken)Match(input,IMPORT,Follow._IMPORT_in_importDeclaration319); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal14_tree = (object)adaptor.Create(string_literal14, retval);
				adaptor.AddChild(root_0, string_literal14_tree);
				}
				DebugLocation(327, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:327:9: ( 'static' )?
				int alt6=2;
				try { DebugEnterSubRule(6);
				try { DebugEnterDecision(6, false);
				int LA6_1 = input.LA(1);

				if ((LA6_1==STATIC))
				{
					alt6 = 1;
				}
				} finally { DebugExitDecision(6); }
				switch (alt6)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:327:10: 'static'
					{
					DebugLocation(327, 10);
					string_literal15=(IToken)Match(input,STATIC,Follow._STATIC_in_importDeclaration331); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal15_tree = (object)adaptor.Create(string_literal15, retval);
					adaptor.AddChild(root_0, string_literal15_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(6); }

				DebugLocation(329, 9);
				IDENTIFIER16=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_importDeclaration352); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER16_tree = (object)adaptor.Create(IDENTIFIER16, retval);
				adaptor.AddChild(root_0, IDENTIFIER16_tree);
				}
				DebugLocation(330, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:330:9: ( '.' IDENTIFIER )+
				int cnt7=0;
				try { DebugEnterSubRule(7);
				while (true)
				{
					int alt7=2;
					try { DebugEnterDecision(7, false);
					int LA7_1 = input.LA(1);

					if ((LA7_1==DOT))
					{
						int LA7_2 = input.LA(2);

						if ((LA7_2==IDENTIFIER))
						{
							alt7 = 1;
						}


					}


					} finally { DebugExitDecision(7); }
					switch (alt7)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:330:10: '.' IDENTIFIER
						{
						DebugLocation(330, 10);
						char_literal17=(IToken)Match(input,DOT,Follow._DOT_in_importDeclaration363); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal17_tree = (object)adaptor.Create(char_literal17, retval);
						adaptor.AddChild(root_0, char_literal17_tree);
						}
						DebugLocation(330, 14);
						IDENTIFIER18=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_importDeclaration365); if (state.failed) return retval;
						if (state.backtracking == 0) {
						IDENTIFIER18_tree = (object)adaptor.Create(IDENTIFIER18, retval);
						adaptor.AddChild(root_0, IDENTIFIER18_tree);
						}

						}
						break;

					default:
						if (cnt7 >= 1)
							goto loop7;

						if (state.backtracking>0) {state.failed=true; return retval;}
						EarlyExitException eee7 = new EarlyExitException( 7, input );
						DebugRecognitionException(eee7);
						throw eee7;
					}
					cnt7++;
				}
				loop7:
					;

				} finally { DebugExitSubRule(7); }

				DebugLocation(332, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:332:9: ( '.' '*' )?
				int alt8=2;
				try { DebugEnterSubRule(8);
				try { DebugEnterDecision(8, false);
				int LA8_1 = input.LA(1);

				if ((LA8_1==DOT))
				{
					alt8 = 1;
				}
				} finally { DebugExitDecision(8); }
				switch (alt8)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:332:10: '.' '*'
					{
					DebugLocation(332, 10);
					char_literal19=(IToken)Match(input,DOT,Follow._DOT_in_importDeclaration387); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal19_tree = (object)adaptor.Create(char_literal19, retval);
					adaptor.AddChild(root_0, char_literal19_tree);
					}
					DebugLocation(332, 14);
					char_literal20=(IToken)Match(input,STAR,Follow._STAR_in_importDeclaration389); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal20_tree = (object)adaptor.Create(char_literal20, retval);
					adaptor.AddChild(root_0, char_literal20_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(8); }

				DebugLocation(334, 9);
				char_literal21=(IToken)Match(input,SEMI,Follow._SEMI_in_importDeclaration410); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal21_tree = (object)adaptor.Create(char_literal21, retval);
				adaptor.AddChild(root_0, char_literal21_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("importDeclaration", 3);
			LeaveRule("importDeclaration", 3);
			LeaveRule_importDeclaration();
			if (state.backtracking > 0) { Memoize(input, 3, importDeclaration_StartIndex); }

		}
		DebugLocation(335, 4);
		} finally { DebugExitRule(GrammarFileName, "importDeclaration"); }
		return retval;

	}
	// $ANTLR end "importDeclaration"

	partial void EnterRule_qualifiedImportName();
	partial void LeaveRule_qualifiedImportName();
	// $ANTLR start "qualifiedImportName"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:337:1: qualifiedImportName : IDENTIFIER ( '.' IDENTIFIER )* ;
	[GrammarRule("qualifiedImportName")]
	private Antlr3AstNode qualifiedImportName()
	{
		EnterRule_qualifiedImportName();
		EnterRule("qualifiedImportName", 4);
		var retval = new Antlr3AstNode("qualifiedImportName");
		
		retval.Start = (IToken)input.LT(1);
		int qualifiedImportName_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER22 = default(IToken);
		IToken char_literal23 = default(IToken);
		IToken IDENTIFIER24 = default(IToken);

		object IDENTIFIER22_tree = default(object);
		object char_literal23_tree = default(object);
		object IDENTIFIER24_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "qualifiedImportName");
		DebugLocation(337, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 4)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:338:5: ( IDENTIFIER ( '.' IDENTIFIER )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:338:9: IDENTIFIER ( '.' IDENTIFIER )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(338, 9);
			IDENTIFIER22=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_qualifiedImportName430); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER22_tree = (object)adaptor.Create(IDENTIFIER22, retval);
			adaptor.AddChild(root_0, IDENTIFIER22_tree);
			}
			DebugLocation(339, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:339:9: ( '.' IDENTIFIER )*
			try { DebugEnterSubRule(10);
			while (true)
			{
				int alt10=2;
				try { DebugEnterDecision(10, false);
				int LA10_1 = input.LA(1);

				if ((LA10_1==DOT))
				{
					alt10 = 1;
				}


				} finally { DebugExitDecision(10); }
				switch ( alt10 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:339:10: '.' IDENTIFIER
					{
					DebugLocation(339, 10);
					char_literal23=(IToken)Match(input,DOT,Follow._DOT_in_qualifiedImportName441); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal23_tree = (object)adaptor.Create(char_literal23, retval);
					adaptor.AddChild(root_0, char_literal23_tree);
					}
					DebugLocation(339, 14);
					IDENTIFIER24=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_qualifiedImportName443); if (state.failed) return retval;
					if (state.backtracking == 0) {
					IDENTIFIER24_tree = (object)adaptor.Create(IDENTIFIER24, retval);
					adaptor.AddChild(root_0, IDENTIFIER24_tree);
					}

					}
					break;

				default:
					goto loop10;
				}
			}

			loop10:
				;

			} finally { DebugExitSubRule(10); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("qualifiedImportName", 4);
			LeaveRule("qualifiedImportName", 4);
			LeaveRule_qualifiedImportName();
			if (state.backtracking > 0) { Memoize(input, 4, qualifiedImportName_StartIndex); }

		}
		DebugLocation(341, 4);
		} finally { DebugExitRule(GrammarFileName, "qualifiedImportName"); }
		return retval;

	}
	// $ANTLR end "qualifiedImportName"

	partial void EnterRule_typeDeclaration();
	partial void LeaveRule_typeDeclaration();
	// $ANTLR start "typeDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:343:1: typeDeclaration : ( classOrInterfaceDeclaration | ';' );
	[GrammarRule("typeDeclaration")]
	private Antlr3AstNode typeDeclaration()
	{
		EnterRule_typeDeclaration();
		EnterRule("typeDeclaration", 5);
		var retval = new Antlr3AstNode("typeDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int typeDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal26 = default(IToken);
		Antlr3AstNode classOrInterfaceDeclaration25 = default(Antlr3AstNode);

		object char_literal26_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeDeclaration");
		DebugLocation(343, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 5)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:344:5: ( classOrInterfaceDeclaration | ';' )
			int alt11=2;
			try { DebugEnterDecision(11, false);
			int LA11_1 = input.LA(1);

			if ((LA11_1==ABSTRACT||LA11_1==BOOLEAN||LA11_1==BYTE||LA11_1==CHAR||LA11_1==CLASS||LA11_1==DOUBLE||LA11_1==ENUM||LA11_1==FINAL||LA11_1==FLOAT||LA11_1==IDENTIFIER||(LA11_1>=INT && LA11_1<=INTERFACE)||LA11_1==LONG||LA11_1==LT||(LA11_1>=MONKEYS_AT && LA11_1<=NATIVE)||(LA11_1>=PRIVATE && LA11_1<=PUBLIC)||LA11_1==SHORT||(LA11_1>=STATIC && LA11_1<=STRICTFP)||LA11_1==SYNCHRONIZED||LA11_1==TRANSIENT||(LA11_1>=VOID && LA11_1<=VOLATILE)))
			{
				alt11 = 1;
			}
			else if ((LA11_1==SEMI))
			{
				alt11 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 11, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(11); }
			switch (alt11)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:344:9: classOrInterfaceDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(344, 9);
				PushFollow(Follow._classOrInterfaceDeclaration_in_typeDeclaration474);
				classOrInterfaceDeclaration25=classOrInterfaceDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classOrInterfaceDeclaration25.Tree, classOrInterfaceDeclaration25, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:345:9: ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(345, 9);
				char_literal26=(IToken)Match(input,SEMI,Follow._SEMI_in_typeDeclaration484); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal26_tree = (object)adaptor.Create(char_literal26, retval);
				adaptor.AddChild(root_0, char_literal26_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeDeclaration", 5);
			LeaveRule("typeDeclaration", 5);
			LeaveRule_typeDeclaration();
			if (state.backtracking > 0) { Memoize(input, 5, typeDeclaration_StartIndex); }

		}
		DebugLocation(346, 4);
		} finally { DebugExitRule(GrammarFileName, "typeDeclaration"); }
		return retval;

	}
	// $ANTLR end "typeDeclaration"

	partial void EnterRule_classOrInterfaceDeclaration();
	partial void LeaveRule_classOrInterfaceDeclaration();
	// $ANTLR start "classOrInterfaceDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:348:1: classOrInterfaceDeclaration : ( classDeclaration | interfaceDeclaration );
	[GrammarRule("classOrInterfaceDeclaration")]
	private Antlr3AstNode classOrInterfaceDeclaration()
	{
		EnterRule_classOrInterfaceDeclaration();
		EnterRule("classOrInterfaceDeclaration", 6);
		var retval = new Antlr3AstNode("classOrInterfaceDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int classOrInterfaceDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode classDeclaration27 = default(Antlr3AstNode);
		Antlr3AstNode interfaceDeclaration28 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "classOrInterfaceDeclaration");
		DebugLocation(348, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 6)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:349:5: ( classDeclaration | interfaceDeclaration )
			int alt12=2;
			try { DebugEnterDecision(12, false);
			switch (input.LA(1))
			{
			case MONKEYS_AT:
				{
				int LA12_2 = input.LA(2);

				if ((EvaluatePredicate(synpred12_Java_fragment)))
				{
					alt12 = 1;
				}
				else if ((true))
				{
					alt12 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PUBLIC:
				{
				int LA12_2 = input.LA(2);

				if ((EvaluatePredicate(synpred12_Java_fragment)))
				{
					alt12 = 1;
				}
				else if ((true))
				{
					alt12 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PROTECTED:
				{
				int LA12_2 = input.LA(2);

				if ((EvaluatePredicate(synpred12_Java_fragment)))
				{
					alt12 = 1;
				}
				else if ((true))
				{
					alt12 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PRIVATE:
				{
				int LA12_2 = input.LA(2);

				if ((EvaluatePredicate(synpred12_Java_fragment)))
				{
					alt12 = 1;
				}
				else if ((true))
				{
					alt12 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STATIC:
				{
				int LA12_2 = input.LA(2);

				if ((EvaluatePredicate(synpred12_Java_fragment)))
				{
					alt12 = 1;
				}
				else if ((true))
				{
					alt12 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case ABSTRACT:
				{
				int LA12_2 = input.LA(2);

				if ((EvaluatePredicate(synpred12_Java_fragment)))
				{
					alt12 = 1;
				}
				else if ((true))
				{
					alt12 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case FINAL:
				{
				int LA12_2 = input.LA(2);

				if ((EvaluatePredicate(synpred12_Java_fragment)))
				{
					alt12 = 1;
				}
				else if ((true))
				{
					alt12 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 7, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case NATIVE:
				{
				int LA12_2 = input.LA(2);

				if ((EvaluatePredicate(synpred12_Java_fragment)))
				{
					alt12 = 1;
				}
				else if ((true))
				{
					alt12 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 8, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case SYNCHRONIZED:
				{
				int LA12_2 = input.LA(2);

				if ((EvaluatePredicate(synpred12_Java_fragment)))
				{
					alt12 = 1;
				}
				else if ((true))
				{
					alt12 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 9, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case TRANSIENT:
				{
				int LA12_2 = input.LA(2);

				if ((EvaluatePredicate(synpred12_Java_fragment)))
				{
					alt12 = 1;
				}
				else if ((true))
				{
					alt12 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 10, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case VOLATILE:
				{
				int LA12_2 = input.LA(2);

				if ((EvaluatePredicate(synpred12_Java_fragment)))
				{
					alt12 = 1;
				}
				else if ((true))
				{
					alt12 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STRICTFP:
				{
				int LA12_2 = input.LA(2);

				if ((EvaluatePredicate(synpred12_Java_fragment)))
				{
					alt12 = 1;
				}
				else if ((true))
				{
					alt12 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 12, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case CLASS:
			case ENUM:
				{
				alt12 = 1;
				}
				break;
			case INTERFACE:
				{
				alt12 = 2;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 12, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(12); }
			switch (alt12)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:349:10: classDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(349, 10);
				PushFollow(Follow._classDeclaration_in_classOrInterfaceDeclaration505);
				classDeclaration27=classDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classDeclaration27.Tree, classDeclaration27, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:350:9: interfaceDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(350, 9);
				PushFollow(Follow._interfaceDeclaration_in_classOrInterfaceDeclaration515);
				interfaceDeclaration28=interfaceDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceDeclaration28.Tree, interfaceDeclaration28, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("classOrInterfaceDeclaration", 6);
			LeaveRule("classOrInterfaceDeclaration", 6);
			LeaveRule_classOrInterfaceDeclaration();
			if (state.backtracking > 0) { Memoize(input, 6, classOrInterfaceDeclaration_StartIndex); }

		}
		DebugLocation(351, 4);
		} finally { DebugExitRule(GrammarFileName, "classOrInterfaceDeclaration"); }
		return retval;

	}
	// $ANTLR end "classOrInterfaceDeclaration"

	partial void EnterRule_modifiers();
	partial void LeaveRule_modifiers();
	// $ANTLR start "modifiers"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:354:1: modifiers : ( annotation | 'public' | 'protected' | 'private' | 'static' | 'abstract' | 'final' | 'native' | 'synchronized' | 'transient' | 'volatile' | 'strictfp' )* ;
	[GrammarRule("modifiers")]
	private Antlr3AstNode modifiers()
	{
		EnterRule_modifiers();
		EnterRule("modifiers", 7);
		var retval = new Antlr3AstNode("modifiers");
		
		retval.Start = (IToken)input.LT(1);
		int modifiers_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal30 = default(IToken);
		IToken string_literal31 = default(IToken);
		IToken string_literal32 = default(IToken);
		IToken string_literal33 = default(IToken);
		IToken string_literal34 = default(IToken);
		IToken string_literal35 = default(IToken);
		IToken string_literal36 = default(IToken);
		IToken string_literal37 = default(IToken);
		IToken string_literal38 = default(IToken);
		IToken string_literal39 = default(IToken);
		IToken string_literal40 = default(IToken);
		Antlr3AstNode annotation29 = default(Antlr3AstNode);

		object string_literal30_tree = default(object);
		object string_literal31_tree = default(object);
		object string_literal32_tree = default(object);
		object string_literal33_tree = default(object);
		object string_literal34_tree = default(object);
		object string_literal35_tree = default(object);
		object string_literal36_tree = default(object);
		object string_literal37_tree = default(object);
		object string_literal38_tree = default(object);
		object string_literal39_tree = default(object);
		object string_literal40_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "modifiers");
		DebugLocation(354, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 7)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:355:5: ( ( annotation | 'public' | 'protected' | 'private' | 'static' | 'abstract' | 'final' | 'native' | 'synchronized' | 'transient' | 'volatile' | 'strictfp' )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:356:5: ( annotation | 'public' | 'protected' | 'private' | 'static' | 'abstract' | 'final' | 'native' | 'synchronized' | 'transient' | 'volatile' | 'strictfp' )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(356, 5);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:356:5: ( annotation | 'public' | 'protected' | 'private' | 'static' | 'abstract' | 'final' | 'native' | 'synchronized' | 'transient' | 'volatile' | 'strictfp' )*
			try { DebugEnterSubRule(13);
			while (true)
			{
				int alt13=13;
				try { DebugEnterDecision(13, false);
				switch (input.LA(1))
				{
				case MONKEYS_AT:
					{
					int LA13_2 = input.LA(2);

					if ((LA13_2==IDENTIFIER))
					{
						alt13 = 1;
					}


					}
					break;
				case PUBLIC:
					{
					alt13 = 2;
					}
					break;
				case PROTECTED:
					{
					alt13 = 3;
					}
					break;
				case PRIVATE:
					{
					alt13 = 4;
					}
					break;
				case STATIC:
					{
					alt13 = 5;
					}
					break;
				case ABSTRACT:
					{
					alt13 = 6;
					}
					break;
				case FINAL:
					{
					alt13 = 7;
					}
					break;
				case NATIVE:
					{
					alt13 = 8;
					}
					break;
				case SYNCHRONIZED:
					{
					alt13 = 9;
					}
					break;
				case TRANSIENT:
					{
					alt13 = 10;
					}
					break;
				case VOLATILE:
					{
					alt13 = 11;
					}
					break;
				case STRICTFP:
					{
					alt13 = 12;
					}
					break;
				}

				} finally { DebugExitDecision(13); }
				switch ( alt13 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:356:10: annotation
					{
					DebugLocation(356, 10);
					PushFollow(Follow._annotation_in_modifiers550);
					annotation29=annotation();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, annotation29.Tree, annotation29, retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:357:9: 'public'
					{
					DebugLocation(357, 9);
					string_literal30=(IToken)Match(input,PUBLIC,Follow._PUBLIC_in_modifiers560); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal30_tree = (object)adaptor.Create(string_literal30, retval);
					adaptor.AddChild(root_0, string_literal30_tree);
					}

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:358:9: 'protected'
					{
					DebugLocation(358, 9);
					string_literal31=(IToken)Match(input,PROTECTED,Follow._PROTECTED_in_modifiers570); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal31_tree = (object)adaptor.Create(string_literal31, retval);
					adaptor.AddChild(root_0, string_literal31_tree);
					}

					}
					break;
				case 4:
					DebugEnterAlt(4);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:359:9: 'private'
					{
					DebugLocation(359, 9);
					string_literal32=(IToken)Match(input,PRIVATE,Follow._PRIVATE_in_modifiers580); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal32_tree = (object)adaptor.Create(string_literal32, retval);
					adaptor.AddChild(root_0, string_literal32_tree);
					}

					}
					break;
				case 5:
					DebugEnterAlt(5);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:360:9: 'static'
					{
					DebugLocation(360, 9);
					string_literal33=(IToken)Match(input,STATIC,Follow._STATIC_in_modifiers590); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal33_tree = (object)adaptor.Create(string_literal33, retval);
					adaptor.AddChild(root_0, string_literal33_tree);
					}

					}
					break;
				case 6:
					DebugEnterAlt(6);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:361:9: 'abstract'
					{
					DebugLocation(361, 9);
					string_literal34=(IToken)Match(input,ABSTRACT,Follow._ABSTRACT_in_modifiers600); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal34_tree = (object)adaptor.Create(string_literal34, retval);
					adaptor.AddChild(root_0, string_literal34_tree);
					}

					}
					break;
				case 7:
					DebugEnterAlt(7);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:362:9: 'final'
					{
					DebugLocation(362, 9);
					string_literal35=(IToken)Match(input,FINAL,Follow._FINAL_in_modifiers610); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal35_tree = (object)adaptor.Create(string_literal35, retval);
					adaptor.AddChild(root_0, string_literal35_tree);
					}

					}
					break;
				case 8:
					DebugEnterAlt(8);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:363:9: 'native'
					{
					DebugLocation(363, 9);
					string_literal36=(IToken)Match(input,NATIVE,Follow._NATIVE_in_modifiers620); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal36_tree = (object)adaptor.Create(string_literal36, retval);
					adaptor.AddChild(root_0, string_literal36_tree);
					}

					}
					break;
				case 9:
					DebugEnterAlt(9);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:364:9: 'synchronized'
					{
					DebugLocation(364, 9);
					string_literal37=(IToken)Match(input,SYNCHRONIZED,Follow._SYNCHRONIZED_in_modifiers630); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal37_tree = (object)adaptor.Create(string_literal37, retval);
					adaptor.AddChild(root_0, string_literal37_tree);
					}

					}
					break;
				case 10:
					DebugEnterAlt(10);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:365:9: 'transient'
					{
					DebugLocation(365, 9);
					string_literal38=(IToken)Match(input,TRANSIENT,Follow._TRANSIENT_in_modifiers640); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal38_tree = (object)adaptor.Create(string_literal38, retval);
					adaptor.AddChild(root_0, string_literal38_tree);
					}

					}
					break;
				case 11:
					DebugEnterAlt(11);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:366:9: 'volatile'
					{
					DebugLocation(366, 9);
					string_literal39=(IToken)Match(input,VOLATILE,Follow._VOLATILE_in_modifiers650); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal39_tree = (object)adaptor.Create(string_literal39, retval);
					adaptor.AddChild(root_0, string_literal39_tree);
					}

					}
					break;
				case 12:
					DebugEnterAlt(12);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:367:9: 'strictfp'
					{
					DebugLocation(367, 9);
					string_literal40=(IToken)Match(input,STRICTFP,Follow._STRICTFP_in_modifiers660); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal40_tree = (object)adaptor.Create(string_literal40, retval);
					adaptor.AddChild(root_0, string_literal40_tree);
					}

					}
					break;

				default:
					goto loop13;
				}
			}

			loop13:
				;

			} finally { DebugExitSubRule(13); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("modifiers", 7);
			LeaveRule("modifiers", 7);
			LeaveRule_modifiers();
			if (state.backtracking > 0) { Memoize(input, 7, modifiers_StartIndex); }

		}
		DebugLocation(369, 4);
		} finally { DebugExitRule(GrammarFileName, "modifiers"); }
		return retval;

	}
	// $ANTLR end "modifiers"

	partial void EnterRule_variableModifiers();
	partial void LeaveRule_variableModifiers();
	// $ANTLR start "variableModifiers"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:372:1: variableModifiers : ( 'final' | annotation )* ;
	[GrammarRule("variableModifiers")]
	private Antlr3AstNode variableModifiers()
	{
		EnterRule_variableModifiers();
		EnterRule("variableModifiers", 8);
		var retval = new Antlr3AstNode("variableModifiers");
		
		retval.Start = (IToken)input.LT(1);
		int variableModifiers_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal41 = default(IToken);
		Antlr3AstNode annotation42 = default(Antlr3AstNode);

		object string_literal41_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "variableModifiers");
		DebugLocation(372, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 8)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:373:5: ( ( 'final' | annotation )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:373:9: ( 'final' | annotation )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(373, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:373:9: ( 'final' | annotation )*
			try { DebugEnterSubRule(14);
			while (true)
			{
				int alt14=3;
				try { DebugEnterDecision(14, false);
				int LA14_1 = input.LA(1);

				if ((LA14_1==FINAL))
				{
					alt14 = 1;
				}
				else if ((LA14_1==MONKEYS_AT))
				{
					alt14 = 2;
				}


				} finally { DebugExitDecision(14); }
				switch ( alt14 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:373:13: 'final'
					{
					DebugLocation(373, 13);
					string_literal41=(IToken)Match(input,FINAL,Follow._FINAL_in_variableModifiers692); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal41_tree = (object)adaptor.Create(string_literal41, retval);
					adaptor.AddChild(root_0, string_literal41_tree);
					}

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:374:13: annotation
					{
					DebugLocation(374, 13);
					PushFollow(Follow._annotation_in_variableModifiers706);
					annotation42=annotation();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, annotation42.Tree, annotation42, retval);

					}
					break;

				default:
					goto loop14;
				}
			}

			loop14:
				;

			} finally { DebugExitSubRule(14); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variableModifiers", 8);
			LeaveRule("variableModifiers", 8);
			LeaveRule_variableModifiers();
			if (state.backtracking > 0) { Memoize(input, 8, variableModifiers_StartIndex); }

		}
		DebugLocation(376, 4);
		} finally { DebugExitRule(GrammarFileName, "variableModifiers"); }
		return retval;

	}
	// $ANTLR end "variableModifiers"

	partial void EnterRule_classDeclaration();
	partial void LeaveRule_classDeclaration();
	// $ANTLR start "classDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:379:1: classDeclaration : ( normalClassDeclaration | enumDeclaration );
	[GrammarRule("classDeclaration")]
	private Antlr3AstNode classDeclaration()
	{
		EnterRule_classDeclaration();
		EnterRule("classDeclaration", 9);
		var retval = new Antlr3AstNode("classDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int classDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode normalClassDeclaration43 = default(Antlr3AstNode);
		Antlr3AstNode enumDeclaration44 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "classDeclaration");
		DebugLocation(379, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 9)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:380:5: ( normalClassDeclaration | enumDeclaration )
			int alt15=2;
			try { DebugEnterDecision(15, false);
			switch (input.LA(1))
			{
			case MONKEYS_AT:
				{
				int LA15_2 = input.LA(2);

				if ((EvaluatePredicate(synpred27_Java_fragment)))
				{
					alt15 = 1;
				}
				else if ((true))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PUBLIC:
				{
				int LA15_2 = input.LA(2);

				if ((EvaluatePredicate(synpred27_Java_fragment)))
				{
					alt15 = 1;
				}
				else if ((true))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PROTECTED:
				{
				int LA15_2 = input.LA(2);

				if ((EvaluatePredicate(synpred27_Java_fragment)))
				{
					alt15 = 1;
				}
				else if ((true))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PRIVATE:
				{
				int LA15_2 = input.LA(2);

				if ((EvaluatePredicate(synpred27_Java_fragment)))
				{
					alt15 = 1;
				}
				else if ((true))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STATIC:
				{
				int LA15_2 = input.LA(2);

				if ((EvaluatePredicate(synpred27_Java_fragment)))
				{
					alt15 = 1;
				}
				else if ((true))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case ABSTRACT:
				{
				int LA15_2 = input.LA(2);

				if ((EvaluatePredicate(synpred27_Java_fragment)))
				{
					alt15 = 1;
				}
				else if ((true))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case FINAL:
				{
				int LA15_2 = input.LA(2);

				if ((EvaluatePredicate(synpred27_Java_fragment)))
				{
					alt15 = 1;
				}
				else if ((true))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 7, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case NATIVE:
				{
				int LA15_2 = input.LA(2);

				if ((EvaluatePredicate(synpred27_Java_fragment)))
				{
					alt15 = 1;
				}
				else if ((true))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 8, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case SYNCHRONIZED:
				{
				int LA15_2 = input.LA(2);

				if ((EvaluatePredicate(synpred27_Java_fragment)))
				{
					alt15 = 1;
				}
				else if ((true))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 9, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case TRANSIENT:
				{
				int LA15_2 = input.LA(2);

				if ((EvaluatePredicate(synpred27_Java_fragment)))
				{
					alt15 = 1;
				}
				else if ((true))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 10, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case VOLATILE:
				{
				int LA15_2 = input.LA(2);

				if ((EvaluatePredicate(synpred27_Java_fragment)))
				{
					alt15 = 1;
				}
				else if ((true))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STRICTFP:
				{
				int LA15_2 = input.LA(2);

				if ((EvaluatePredicate(synpred27_Java_fragment)))
				{
					alt15 = 1;
				}
				else if ((true))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 12, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case CLASS:
				{
				alt15 = 1;
				}
				break;
			case ENUM:
				{
				alt15 = 2;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(15); }
			switch (alt15)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:380:9: normalClassDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(380, 9);
				PushFollow(Follow._normalClassDeclaration_in_classDeclaration742);
				normalClassDeclaration43=normalClassDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, normalClassDeclaration43.Tree, normalClassDeclaration43, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:381:9: enumDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(381, 9);
				PushFollow(Follow._enumDeclaration_in_classDeclaration752);
				enumDeclaration44=enumDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enumDeclaration44.Tree, enumDeclaration44, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("classDeclaration", 9);
			LeaveRule("classDeclaration", 9);
			LeaveRule_classDeclaration();
			if (state.backtracking > 0) { Memoize(input, 9, classDeclaration_StartIndex); }

		}
		DebugLocation(382, 4);
		} finally { DebugExitRule(GrammarFileName, "classDeclaration"); }
		return retval;

	}
	// $ANTLR end "classDeclaration"

	partial void EnterRule_normalClassDeclaration();
	partial void LeaveRule_normalClassDeclaration();
	// $ANTLR start "normalClassDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:384:1: normalClassDeclaration : modifiers 'class' IDENTIFIER ( typeParameters )? ( 'extends' type )? ( 'implements' typeList )? classBody ;
	[GrammarRule("normalClassDeclaration")]
	private Antlr3AstNode normalClassDeclaration()
	{
		EnterRule_normalClassDeclaration();
		EnterRule("normalClassDeclaration", 10);
		var retval = new Antlr3AstNode("normalClassDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int normalClassDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal46 = default(IToken);
		IToken IDENTIFIER47 = default(IToken);
		IToken string_literal49 = default(IToken);
		IToken string_literal51 = default(IToken);
		Antlr3AstNode modifiers45 = default(Antlr3AstNode);
		Antlr3AstNode typeParameters48 = default(Antlr3AstNode);
		Antlr3AstNode type50 = default(Antlr3AstNode);
		Antlr3AstNode typeList52 = default(Antlr3AstNode);
		Antlr3AstNode classBody53 = default(Antlr3AstNode);

		object string_literal46_tree = default(object);
		object IDENTIFIER47_tree = default(object);
		object string_literal49_tree = default(object);
		object string_literal51_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "normalClassDeclaration");
		DebugLocation(384, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 10)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:385:5: ( modifiers 'class' IDENTIFIER ( typeParameters )? ( 'extends' type )? ( 'implements' typeList )? classBody )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:385:9: modifiers 'class' IDENTIFIER ( typeParameters )? ( 'extends' type )? ( 'implements' typeList )? classBody
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(385, 9);
			PushFollow(Follow._modifiers_in_normalClassDeclaration772);
			modifiers45=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers45.Tree, modifiers45, retval);
			DebugLocation(385, 20);
			string_literal46=(IToken)Match(input,CLASS,Follow._CLASS_in_normalClassDeclaration775); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal46_tree = (object)adaptor.Create(string_literal46, retval);
			adaptor.AddChild(root_0, string_literal46_tree);
			}
			DebugLocation(385, 28);
			IDENTIFIER47=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_normalClassDeclaration777); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER47_tree = (object)adaptor.Create(IDENTIFIER47, retval);
			adaptor.AddChild(root_0, IDENTIFIER47_tree);
			}
			DebugLocation(386, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:386:9: ( typeParameters )?
			int alt16=2;
			try { DebugEnterSubRule(16);
			try { DebugEnterDecision(16, false);
			int LA16_1 = input.LA(1);

			if ((LA16_1==LT))
			{
				alt16 = 1;
			}
			} finally { DebugExitDecision(16); }
			switch (alt16)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:386:10: typeParameters
				{
				DebugLocation(386, 10);
				PushFollow(Follow._typeParameters_in_normalClassDeclaration788);
				typeParameters48=typeParameters();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeParameters48.Tree, typeParameters48, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(16); }

			DebugLocation(388, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:388:9: ( 'extends' type )?
			int alt17=2;
			try { DebugEnterSubRule(17);
			try { DebugEnterDecision(17, false);
			int LA17_1 = input.LA(1);

			if ((LA17_1==EXTENDS))
			{
				alt17 = 1;
			}
			} finally { DebugExitDecision(17); }
			switch (alt17)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:388:10: 'extends' type
				{
				DebugLocation(388, 10);
				string_literal49=(IToken)Match(input,EXTENDS,Follow._EXTENDS_in_normalClassDeclaration810); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal49_tree = (object)adaptor.Create(string_literal49, retval);
				adaptor.AddChild(root_0, string_literal49_tree);
				}
				DebugLocation(388, 20);
				PushFollow(Follow._type_in_normalClassDeclaration812);
				type50=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type50.Tree, type50, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(17); }

			DebugLocation(390, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:390:9: ( 'implements' typeList )?
			int alt18=2;
			try { DebugEnterSubRule(18);
			try { DebugEnterDecision(18, false);
			int LA18_1 = input.LA(1);

			if ((LA18_1==IMPLEMENTS))
			{
				alt18 = 1;
			}
			} finally { DebugExitDecision(18); }
			switch (alt18)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:390:10: 'implements' typeList
				{
				DebugLocation(390, 10);
				string_literal51=(IToken)Match(input,IMPLEMENTS,Follow._IMPLEMENTS_in_normalClassDeclaration834); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal51_tree = (object)adaptor.Create(string_literal51, retval);
				adaptor.AddChild(root_0, string_literal51_tree);
				}
				DebugLocation(390, 23);
				PushFollow(Follow._typeList_in_normalClassDeclaration836);
				typeList52=typeList();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeList52.Tree, typeList52, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(18); }

			DebugLocation(392, 9);
			PushFollow(Follow._classBody_in_normalClassDeclaration869);
			classBody53=classBody();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, classBody53.Tree, classBody53, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("normalClassDeclaration", 10);
			LeaveRule("normalClassDeclaration", 10);
			LeaveRule_normalClassDeclaration();
			if (state.backtracking > 0) { Memoize(input, 10, normalClassDeclaration_StartIndex); }

		}
		DebugLocation(393, 4);
		} finally { DebugExitRule(GrammarFileName, "normalClassDeclaration"); }
		return retval;

	}
	// $ANTLR end "normalClassDeclaration"

	partial void EnterRule_typeParameters();
	partial void LeaveRule_typeParameters();
	// $ANTLR start "typeParameters"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:396:1: typeParameters : '<' typeParameter ( ',' typeParameter )* '>' ;
	[GrammarRule("typeParameters")]
	private Antlr3AstNode typeParameters()
	{
		EnterRule_typeParameters();
		EnterRule("typeParameters", 11);
		var retval = new Antlr3AstNode("typeParameters");
		
		retval.Start = (IToken)input.LT(1);
		int typeParameters_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal54 = default(IToken);
		IToken char_literal56 = default(IToken);
		IToken char_literal58 = default(IToken);
		Antlr3AstNode typeParameter55 = default(Antlr3AstNode);
		Antlr3AstNode typeParameter57 = default(Antlr3AstNode);

		object char_literal54_tree = default(object);
		object char_literal56_tree = default(object);
		object char_literal58_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeParameters");
		DebugLocation(396, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 11)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:397:5: ( '<' typeParameter ( ',' typeParameter )* '>' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:397:9: '<' typeParameter ( ',' typeParameter )* '>'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(397, 9);
			char_literal54=(IToken)Match(input,LT,Follow._LT_in_typeParameters890); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal54_tree = (object)adaptor.Create(char_literal54, retval);
			adaptor.AddChild(root_0, char_literal54_tree);
			}
			DebugLocation(398, 13);
			PushFollow(Follow._typeParameter_in_typeParameters904);
			typeParameter55=typeParameter();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, typeParameter55.Tree, typeParameter55, retval);
			DebugLocation(399, 13);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:399:13: ( ',' typeParameter )*
			try { DebugEnterSubRule(19);
			while (true)
			{
				int alt19=2;
				try { DebugEnterDecision(19, false);
				int LA19_1 = input.LA(1);

				if ((LA19_1==COMMA))
				{
					alt19 = 1;
				}


				} finally { DebugExitDecision(19); }
				switch ( alt19 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:399:14: ',' typeParameter
					{
					DebugLocation(399, 14);
					char_literal56=(IToken)Match(input,COMMA,Follow._COMMA_in_typeParameters919); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal56_tree = (object)adaptor.Create(char_literal56, retval);
					adaptor.AddChild(root_0, char_literal56_tree);
					}
					DebugLocation(399, 18);
					PushFollow(Follow._typeParameter_in_typeParameters921);
					typeParameter57=typeParameter();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, typeParameter57.Tree, typeParameter57, retval);

					}
					break;

				default:
					goto loop19;
				}
			}

			loop19:
				;

			} finally { DebugExitSubRule(19); }

			DebugLocation(401, 9);
			char_literal58=(IToken)Match(input,GT,Follow._GT_in_typeParameters946); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal58_tree = (object)adaptor.Create(char_literal58, retval);
			adaptor.AddChild(root_0, char_literal58_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeParameters", 11);
			LeaveRule("typeParameters", 11);
			LeaveRule_typeParameters();
			if (state.backtracking > 0) { Memoize(input, 11, typeParameters_StartIndex); }

		}
		DebugLocation(402, 4);
		} finally { DebugExitRule(GrammarFileName, "typeParameters"); }
		return retval;

	}
	// $ANTLR end "typeParameters"

	partial void EnterRule_typeParameter();
	partial void LeaveRule_typeParameter();
	// $ANTLR start "typeParameter"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:404:1: typeParameter : IDENTIFIER ( 'extends' typeBound )? ;
	[GrammarRule("typeParameter")]
	private Antlr3AstNode typeParameter()
	{
		EnterRule_typeParameter();
		EnterRule("typeParameter", 12);
		var retval = new Antlr3AstNode("typeParameter");
		
		retval.Start = (IToken)input.LT(1);
		int typeParameter_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER59 = default(IToken);
		IToken string_literal60 = default(IToken);
		Antlr3AstNode typeBound61 = default(Antlr3AstNode);

		object IDENTIFIER59_tree = default(object);
		object string_literal60_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeParameter");
		DebugLocation(404, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 12)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:405:5: ( IDENTIFIER ( 'extends' typeBound )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:405:9: IDENTIFIER ( 'extends' typeBound )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(405, 9);
			IDENTIFIER59=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_typeParameter966); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER59_tree = (object)adaptor.Create(IDENTIFIER59, retval);
			adaptor.AddChild(root_0, IDENTIFIER59_tree);
			}
			DebugLocation(406, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:406:9: ( 'extends' typeBound )?
			int alt20=2;
			try { DebugEnterSubRule(20);
			try { DebugEnterDecision(20, false);
			int LA20_1 = input.LA(1);

			if ((LA20_1==EXTENDS))
			{
				alt20 = 1;
			}
			} finally { DebugExitDecision(20); }
			switch (alt20)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:406:10: 'extends' typeBound
				{
				DebugLocation(406, 10);
				string_literal60=(IToken)Match(input,EXTENDS,Follow._EXTENDS_in_typeParameter977); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal60_tree = (object)adaptor.Create(string_literal60, retval);
				adaptor.AddChild(root_0, string_literal60_tree);
				}
				DebugLocation(406, 20);
				PushFollow(Follow._typeBound_in_typeParameter979);
				typeBound61=typeBound();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeBound61.Tree, typeBound61, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(20); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeParameter", 12);
			LeaveRule("typeParameter", 12);
			LeaveRule_typeParameter();
			if (state.backtracking > 0) { Memoize(input, 12, typeParameter_StartIndex); }

		}
		DebugLocation(408, 4);
		} finally { DebugExitRule(GrammarFileName, "typeParameter"); }
		return retval;

	}
	// $ANTLR end "typeParameter"

	partial void EnterRule_typeBound();
	partial void LeaveRule_typeBound();
	// $ANTLR start "typeBound"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:411:1: typeBound : type ( '&' type )* ;
	[GrammarRule("typeBound")]
	private Antlr3AstNode typeBound()
	{
		EnterRule_typeBound();
		EnterRule("typeBound", 13);
		var retval = new Antlr3AstNode("typeBound");
		
		retval.Start = (IToken)input.LT(1);
		int typeBound_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal63 = default(IToken);
		Antlr3AstNode type62 = default(Antlr3AstNode);
		Antlr3AstNode type64 = default(Antlr3AstNode);

		object char_literal63_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeBound");
		DebugLocation(411, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 13)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:412:5: ( type ( '&' type )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:412:9: type ( '&' type )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(412, 9);
			PushFollow(Follow._type_in_typeBound1011);
			type62=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type62.Tree, type62, retval);
			DebugLocation(413, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:413:9: ( '&' type )*
			try { DebugEnterSubRule(21);
			while (true)
			{
				int alt21=2;
				try { DebugEnterDecision(21, false);
				int LA21_1 = input.LA(1);

				if ((LA21_1==AMP))
				{
					alt21 = 1;
				}


				} finally { DebugExitDecision(21); }
				switch ( alt21 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:413:10: '&' type
					{
					DebugLocation(413, 10);
					char_literal63=(IToken)Match(input,AMP,Follow._AMP_in_typeBound1022); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal63_tree = (object)adaptor.Create(char_literal63, retval);
					adaptor.AddChild(root_0, char_literal63_tree);
					}
					DebugLocation(413, 14);
					PushFollow(Follow._type_in_typeBound1024);
					type64=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type64.Tree, type64, retval);

					}
					break;

				default:
					goto loop21;
				}
			}

			loop21:
				;

			} finally { DebugExitSubRule(21); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeBound", 13);
			LeaveRule("typeBound", 13);
			LeaveRule_typeBound();
			if (state.backtracking > 0) { Memoize(input, 13, typeBound_StartIndex); }

		}
		DebugLocation(415, 4);
		} finally { DebugExitRule(GrammarFileName, "typeBound"); }
		return retval;

	}
	// $ANTLR end "typeBound"

	partial void EnterRule_enumDeclaration();
	partial void LeaveRule_enumDeclaration();
	// $ANTLR start "enumDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:418:1: enumDeclaration : modifiers ( 'enum' ) IDENTIFIER ( 'implements' typeList )? enumBody ;
	[GrammarRule("enumDeclaration")]
	private Antlr3AstNode enumDeclaration()
	{
		EnterRule_enumDeclaration();
		EnterRule("enumDeclaration", 14);
		var retval = new Antlr3AstNode("enumDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int enumDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal66 = default(IToken);
		IToken IDENTIFIER67 = default(IToken);
		IToken string_literal68 = default(IToken);
		Antlr3AstNode modifiers65 = default(Antlr3AstNode);
		Antlr3AstNode typeList69 = default(Antlr3AstNode);
		Antlr3AstNode enumBody70 = default(Antlr3AstNode);

		object string_literal66_tree = default(object);
		object IDENTIFIER67_tree = default(object);
		object string_literal68_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enumDeclaration");
		DebugLocation(418, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 14)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:419:5: ( modifiers ( 'enum' ) IDENTIFIER ( 'implements' typeList )? enumBody )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:419:9: modifiers ( 'enum' ) IDENTIFIER ( 'implements' typeList )? enumBody
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(419, 9);
			PushFollow(Follow._modifiers_in_enumDeclaration1056);
			modifiers65=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers65.Tree, modifiers65, retval);
			DebugLocation(420, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:420:9: ( 'enum' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:420:10: 'enum'
			{
			DebugLocation(420, 10);
			string_literal66=(IToken)Match(input,ENUM,Follow._ENUM_in_enumDeclaration1068); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal66_tree = (object)adaptor.Create(string_literal66, retval);
			adaptor.AddChild(root_0, string_literal66_tree);
			}

			}

			DebugLocation(422, 9);
			IDENTIFIER67=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_enumDeclaration1089); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER67_tree = (object)adaptor.Create(IDENTIFIER67, retval);
			adaptor.AddChild(root_0, IDENTIFIER67_tree);
			}
			DebugLocation(423, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:423:9: ( 'implements' typeList )?
			int alt22=2;
			try { DebugEnterSubRule(22);
			try { DebugEnterDecision(22, false);
			int LA22_1 = input.LA(1);

			if ((LA22_1==IMPLEMENTS))
			{
				alt22 = 1;
			}
			} finally { DebugExitDecision(22); }
			switch (alt22)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:423:10: 'implements' typeList
				{
				DebugLocation(423, 10);
				string_literal68=(IToken)Match(input,IMPLEMENTS,Follow._IMPLEMENTS_in_enumDeclaration1100); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal68_tree = (object)adaptor.Create(string_literal68, retval);
				adaptor.AddChild(root_0, string_literal68_tree);
				}
				DebugLocation(423, 23);
				PushFollow(Follow._typeList_in_enumDeclaration1102);
				typeList69=typeList();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeList69.Tree, typeList69, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(22); }

			DebugLocation(425, 9);
			PushFollow(Follow._enumBody_in_enumDeclaration1123);
			enumBody70=enumBody();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, enumBody70.Tree, enumBody70, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enumDeclaration", 14);
			LeaveRule("enumDeclaration", 14);
			LeaveRule_enumDeclaration();
			if (state.backtracking > 0) { Memoize(input, 14, enumDeclaration_StartIndex); }

		}
		DebugLocation(426, 4);
		} finally { DebugExitRule(GrammarFileName, "enumDeclaration"); }
		return retval;

	}
	// $ANTLR end "enumDeclaration"

	partial void EnterRule_enumBody();
	partial void LeaveRule_enumBody();
	// $ANTLR start "enumBody"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:429:1: enumBody : '{' ( enumConstants )? ( ',' )? ( enumBodyDeclarations )? '}' ;
	[GrammarRule("enumBody")]
	private Antlr3AstNode enumBody()
	{
		EnterRule_enumBody();
		EnterRule("enumBody", 15);
		var retval = new Antlr3AstNode("enumBody");
		
		retval.Start = (IToken)input.LT(1);
		int enumBody_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal71 = default(IToken);
		IToken char_literal73 = default(IToken);
		IToken char_literal75 = default(IToken);
		Antlr3AstNode enumConstants72 = default(Antlr3AstNode);
		Antlr3AstNode enumBodyDeclarations74 = default(Antlr3AstNode);

		object char_literal71_tree = default(object);
		object char_literal73_tree = default(object);
		object char_literal75_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enumBody");
		DebugLocation(429, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 15)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:430:5: ( '{' ( enumConstants )? ( ',' )? ( enumBodyDeclarations )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:430:9: '{' ( enumConstants )? ( ',' )? ( enumBodyDeclarations )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(430, 9);
			char_literal71=(IToken)Match(input,LBRACE,Follow._LBRACE_in_enumBody1148); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal71_tree = (object)adaptor.Create(char_literal71, retval);
			adaptor.AddChild(root_0, char_literal71_tree);
			}
			DebugLocation(431, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:431:9: ( enumConstants )?
			int alt23=2;
			try { DebugEnterSubRule(23);
			try { DebugEnterDecision(23, false);
			int LA23_1 = input.LA(1);

			if ((LA23_1==IDENTIFIER||LA23_1==MONKEYS_AT))
			{
				alt23 = 1;
			}
			} finally { DebugExitDecision(23); }
			switch (alt23)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:431:10: enumConstants
				{
				DebugLocation(431, 10);
				PushFollow(Follow._enumConstants_in_enumBody1159);
				enumConstants72=enumConstants();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enumConstants72.Tree, enumConstants72, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(23); }

			DebugLocation(433, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:433:9: ( ',' )?
			int alt24=2;
			try { DebugEnterSubRule(24);
			try { DebugEnterDecision(24, false);
			int LA24_1 = input.LA(1);

			if ((LA24_1==COMMA))
			{
				alt24 = 1;
			}
			} finally { DebugExitDecision(24); }
			switch (alt24)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:433:9: ','
				{
				DebugLocation(433, 9);
				char_literal73=(IToken)Match(input,COMMA,Follow._COMMA_in_enumBody1181); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal73_tree = (object)adaptor.Create(char_literal73, retval);
				adaptor.AddChild(root_0, char_literal73_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(24); }

			DebugLocation(434, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:434:9: ( enumBodyDeclarations )?
			int alt25=2;
			try { DebugEnterSubRule(25);
			try { DebugEnterDecision(25, false);
			int LA25_1 = input.LA(1);

			if ((LA25_1==SEMI))
			{
				alt25 = 1;
			}
			} finally { DebugExitDecision(25); }
			switch (alt25)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:434:10: enumBodyDeclarations
				{
				DebugLocation(434, 10);
				PushFollow(Follow._enumBodyDeclarations_in_enumBody1194);
				enumBodyDeclarations74=enumBodyDeclarations();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enumBodyDeclarations74.Tree, enumBodyDeclarations74, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(25); }

			DebugLocation(436, 9);
			char_literal75=(IToken)Match(input,RBRACE,Follow._RBRACE_in_enumBody1216); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal75_tree = (object)adaptor.Create(char_literal75, retval);
			adaptor.AddChild(root_0, char_literal75_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enumBody", 15);
			LeaveRule("enumBody", 15);
			LeaveRule_enumBody();
			if (state.backtracking > 0) { Memoize(input, 15, enumBody_StartIndex); }

		}
		DebugLocation(437, 4);
		} finally { DebugExitRule(GrammarFileName, "enumBody"); }
		return retval;

	}
	// $ANTLR end "enumBody"

	partial void EnterRule_enumConstants();
	partial void LeaveRule_enumConstants();
	// $ANTLR start "enumConstants"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:439:1: enumConstants : enumConstant ( ',' enumConstant )* ;
	[GrammarRule("enumConstants")]
	private Antlr3AstNode enumConstants()
	{
		EnterRule_enumConstants();
		EnterRule("enumConstants", 16);
		var retval = new Antlr3AstNode("enumConstants");
		
		retval.Start = (IToken)input.LT(1);
		int enumConstants_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal77 = default(IToken);
		Antlr3AstNode enumConstant76 = default(Antlr3AstNode);
		Antlr3AstNode enumConstant78 = default(Antlr3AstNode);

		object char_literal77_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enumConstants");
		DebugLocation(439, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 16)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:440:5: ( enumConstant ( ',' enumConstant )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:440:9: enumConstant ( ',' enumConstant )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(440, 9);
			PushFollow(Follow._enumConstant_in_enumConstants1236);
			enumConstant76=enumConstant();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, enumConstant76.Tree, enumConstant76, retval);
			DebugLocation(441, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:441:9: ( ',' enumConstant )*
			try { DebugEnterSubRule(26);
			while (true)
			{
				int alt26=2;
				try { DebugEnterDecision(26, false);
				int LA26_1 = input.LA(1);

				if ((LA26_1==COMMA))
				{
					int LA26_2 = input.LA(2);

					if ((LA26_2==IDENTIFIER||LA26_2==MONKEYS_AT))
					{
						alt26 = 1;
					}


				}


				} finally { DebugExitDecision(26); }
				switch ( alt26 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:441:10: ',' enumConstant
					{
					DebugLocation(441, 10);
					char_literal77=(IToken)Match(input,COMMA,Follow._COMMA_in_enumConstants1247); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal77_tree = (object)adaptor.Create(char_literal77, retval);
					adaptor.AddChild(root_0, char_literal77_tree);
					}
					DebugLocation(441, 14);
					PushFollow(Follow._enumConstant_in_enumConstants1249);
					enumConstant78=enumConstant();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, enumConstant78.Tree, enumConstant78, retval);

					}
					break;

				default:
					goto loop26;
				}
			}

			loop26:
				;

			} finally { DebugExitSubRule(26); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enumConstants", 16);
			LeaveRule("enumConstants", 16);
			LeaveRule_enumConstants();
			if (state.backtracking > 0) { Memoize(input, 16, enumConstants_StartIndex); }

		}
		DebugLocation(443, 4);
		} finally { DebugExitRule(GrammarFileName, "enumConstants"); }
		return retval;

	}
	// $ANTLR end "enumConstants"

	partial void EnterRule_enumConstant();
	partial void LeaveRule_enumConstant();
	// $ANTLR start "enumConstant"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:449:1: enumConstant : ( annotations )? IDENTIFIER ( arguments )? ( classBody )? ;
	[GrammarRule("enumConstant")]
	private Antlr3AstNode enumConstant()
	{
		EnterRule_enumConstant();
		EnterRule("enumConstant", 17);
		var retval = new Antlr3AstNode("enumConstant");
		
		retval.Start = (IToken)input.LT(1);
		int enumConstant_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER80 = default(IToken);
		Antlr3AstNode annotations79 = default(Antlr3AstNode);
		Antlr3AstNode arguments81 = default(Antlr3AstNode);
		Antlr3AstNode classBody82 = default(Antlr3AstNode);

		object IDENTIFIER80_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enumConstant");
		DebugLocation(449, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 17)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:450:5: ( ( annotations )? IDENTIFIER ( arguments )? ( classBody )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:450:9: ( annotations )? IDENTIFIER ( arguments )? ( classBody )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(450, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:450:9: ( annotations )?
			int alt27=2;
			try { DebugEnterSubRule(27);
			try { DebugEnterDecision(27, false);
			int LA27_1 = input.LA(1);

			if ((LA27_1==MONKEYS_AT))
			{
				alt27 = 1;
			}
			} finally { DebugExitDecision(27); }
			switch (alt27)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:450:10: annotations
				{
				DebugLocation(450, 10);
				PushFollow(Follow._annotations_in_enumConstant1283);
				annotations79=annotations();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, annotations79.Tree, annotations79, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(27); }

			DebugLocation(452, 9);
			IDENTIFIER80=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_enumConstant1304); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER80_tree = (object)adaptor.Create(IDENTIFIER80, retval);
			adaptor.AddChild(root_0, IDENTIFIER80_tree);
			}
			DebugLocation(453, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:453:9: ( arguments )?
			int alt28=2;
			try { DebugEnterSubRule(28);
			try { DebugEnterDecision(28, false);
			int LA28_1 = input.LA(1);

			if ((LA28_1==LPAREN))
			{
				alt28 = 1;
			}
			} finally { DebugExitDecision(28); }
			switch (alt28)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:453:10: arguments
				{
				DebugLocation(453, 10);
				PushFollow(Follow._arguments_in_enumConstant1315);
				arguments81=arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arguments81.Tree, arguments81, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(28); }

			DebugLocation(455, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:455:9: ( classBody )?
			int alt29=2;
			try { DebugEnterSubRule(29);
			try { DebugEnterDecision(29, false);
			int LA29_1 = input.LA(1);

			if ((LA29_1==LBRACE))
			{
				alt29 = 1;
			}
			} finally { DebugExitDecision(29); }
			switch (alt29)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:455:10: classBody
				{
				DebugLocation(455, 10);
				PushFollow(Follow._classBody_in_enumConstant1337);
				classBody82=classBody();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classBody82.Tree, classBody82, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(29); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enumConstant", 17);
			LeaveRule("enumConstant", 17);
			LeaveRule_enumConstant();
			if (state.backtracking > 0) { Memoize(input, 17, enumConstant_StartIndex); }

		}
		DebugLocation(459, 4);
		} finally { DebugExitRule(GrammarFileName, "enumConstant"); }
		return retval;

	}
	// $ANTLR end "enumConstant"

	partial void EnterRule_enumBodyDeclarations();
	partial void LeaveRule_enumBodyDeclarations();
	// $ANTLR start "enumBodyDeclarations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:461:1: enumBodyDeclarations : ';' ( classBodyDeclaration )* ;
	[GrammarRule("enumBodyDeclarations")]
	private Antlr3AstNode enumBodyDeclarations()
	{
		EnterRule_enumBodyDeclarations();
		EnterRule("enumBodyDeclarations", 18);
		var retval = new Antlr3AstNode("enumBodyDeclarations");
		
		retval.Start = (IToken)input.LT(1);
		int enumBodyDeclarations_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal83 = default(IToken);
		Antlr3AstNode classBodyDeclaration84 = default(Antlr3AstNode);

		object char_literal83_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enumBodyDeclarations");
		DebugLocation(461, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 18)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:462:5: ( ';' ( classBodyDeclaration )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:462:9: ';' ( classBodyDeclaration )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(462, 9);
			char_literal83=(IToken)Match(input,SEMI,Follow._SEMI_in_enumBodyDeclarations1378); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal83_tree = (object)adaptor.Create(char_literal83, retval);
			adaptor.AddChild(root_0, char_literal83_tree);
			}
			DebugLocation(463, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:463:9: ( classBodyDeclaration )*
			try { DebugEnterSubRule(30);
			while (true)
			{
				int alt30=2;
				try { DebugEnterDecision(30, false);
				int LA30_1 = input.LA(1);

				if ((LA30_1==ABSTRACT||LA30_1==BOOLEAN||LA30_1==BYTE||LA30_1==CHAR||LA30_1==CLASS||LA30_1==DOUBLE||LA30_1==ENUM||LA30_1==FINAL||LA30_1==FLOAT||LA30_1==IDENTIFIER||(LA30_1>=INT && LA30_1<=INTERFACE)||LA30_1==LBRACE||LA30_1==LONG||LA30_1==LT||(LA30_1>=MONKEYS_AT && LA30_1<=NATIVE)||(LA30_1>=PRIVATE && LA30_1<=PUBLIC)||(LA30_1>=SEMI && LA30_1<=SHORT)||(LA30_1>=STATIC && LA30_1<=STRICTFP)||LA30_1==SYNCHRONIZED||LA30_1==TRANSIENT||(LA30_1>=VOID && LA30_1<=VOLATILE)))
				{
					alt30 = 1;
				}


				} finally { DebugExitDecision(30); }
				switch ( alt30 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:463:10: classBodyDeclaration
					{
					DebugLocation(463, 10);
					PushFollow(Follow._classBodyDeclaration_in_enumBodyDeclarations1390);
					classBodyDeclaration84=classBodyDeclaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, classBodyDeclaration84.Tree, classBodyDeclaration84, retval);

					}
					break;

				default:
					goto loop30;
				}
			}

			loop30:
				;

			} finally { DebugExitSubRule(30); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enumBodyDeclarations", 18);
			LeaveRule("enumBodyDeclarations", 18);
			LeaveRule_enumBodyDeclarations();
			if (state.backtracking > 0) { Memoize(input, 18, enumBodyDeclarations_StartIndex); }

		}
		DebugLocation(465, 4);
		} finally { DebugExitRule(GrammarFileName, "enumBodyDeclarations"); }
		return retval;

	}
	// $ANTLR end "enumBodyDeclarations"

	partial void EnterRule_interfaceDeclaration();
	partial void LeaveRule_interfaceDeclaration();
	// $ANTLR start "interfaceDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:467:1: interfaceDeclaration : ( normalInterfaceDeclaration | annotationTypeDeclaration );
	[GrammarRule("interfaceDeclaration")]
	private Antlr3AstNode interfaceDeclaration()
	{
		EnterRule_interfaceDeclaration();
		EnterRule("interfaceDeclaration", 19);
		var retval = new Antlr3AstNode("interfaceDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int interfaceDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode normalInterfaceDeclaration85 = default(Antlr3AstNode);
		Antlr3AstNode annotationTypeDeclaration86 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "interfaceDeclaration");
		DebugLocation(467, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 19)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:468:5: ( normalInterfaceDeclaration | annotationTypeDeclaration )
			int alt31=2;
			try { DebugEnterDecision(31, false);
			switch (input.LA(1))
			{
			case MONKEYS_AT:
				{
				int LA31_2 = input.LA(2);

				if ((EvaluatePredicate(synpred43_Java_fragment)))
				{
					alt31 = 1;
				}
				else if ((true))
				{
					alt31 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PUBLIC:
				{
				int LA31_2 = input.LA(2);

				if ((EvaluatePredicate(synpred43_Java_fragment)))
				{
					alt31 = 1;
				}
				else if ((true))
				{
					alt31 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PROTECTED:
				{
				int LA31_2 = input.LA(2);

				if ((EvaluatePredicate(synpred43_Java_fragment)))
				{
					alt31 = 1;
				}
				else if ((true))
				{
					alt31 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PRIVATE:
				{
				int LA31_2 = input.LA(2);

				if ((EvaluatePredicate(synpred43_Java_fragment)))
				{
					alt31 = 1;
				}
				else if ((true))
				{
					alt31 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STATIC:
				{
				int LA31_2 = input.LA(2);

				if ((EvaluatePredicate(synpred43_Java_fragment)))
				{
					alt31 = 1;
				}
				else if ((true))
				{
					alt31 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case ABSTRACT:
				{
				int LA31_2 = input.LA(2);

				if ((EvaluatePredicate(synpred43_Java_fragment)))
				{
					alt31 = 1;
				}
				else if ((true))
				{
					alt31 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case FINAL:
				{
				int LA31_2 = input.LA(2);

				if ((EvaluatePredicate(synpred43_Java_fragment)))
				{
					alt31 = 1;
				}
				else if ((true))
				{
					alt31 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 7, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case NATIVE:
				{
				int LA31_2 = input.LA(2);

				if ((EvaluatePredicate(synpred43_Java_fragment)))
				{
					alt31 = 1;
				}
				else if ((true))
				{
					alt31 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 8, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case SYNCHRONIZED:
				{
				int LA31_2 = input.LA(2);

				if ((EvaluatePredicate(synpred43_Java_fragment)))
				{
					alt31 = 1;
				}
				else if ((true))
				{
					alt31 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 9, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case TRANSIENT:
				{
				int LA31_2 = input.LA(2);

				if ((EvaluatePredicate(synpred43_Java_fragment)))
				{
					alt31 = 1;
				}
				else if ((true))
				{
					alt31 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 10, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case VOLATILE:
				{
				int LA31_2 = input.LA(2);

				if ((EvaluatePredicate(synpred43_Java_fragment)))
				{
					alt31 = 1;
				}
				else if ((true))
				{
					alt31 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STRICTFP:
				{
				int LA31_2 = input.LA(2);

				if ((EvaluatePredicate(synpred43_Java_fragment)))
				{
					alt31 = 1;
				}
				else if ((true))
				{
					alt31 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 12, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case INTERFACE:
				{
				alt31 = 1;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 31, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(31); }
			switch (alt31)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:468:9: normalInterfaceDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(468, 9);
				PushFollow(Follow._normalInterfaceDeclaration_in_interfaceDeclaration1421);
				normalInterfaceDeclaration85=normalInterfaceDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, normalInterfaceDeclaration85.Tree, normalInterfaceDeclaration85, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:469:9: annotationTypeDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(469, 9);
				PushFollow(Follow._annotationTypeDeclaration_in_interfaceDeclaration1431);
				annotationTypeDeclaration86=annotationTypeDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, annotationTypeDeclaration86.Tree, annotationTypeDeclaration86, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interfaceDeclaration", 19);
			LeaveRule("interfaceDeclaration", 19);
			LeaveRule_interfaceDeclaration();
			if (state.backtracking > 0) { Memoize(input, 19, interfaceDeclaration_StartIndex); }

		}
		DebugLocation(470, 4);
		} finally { DebugExitRule(GrammarFileName, "interfaceDeclaration"); }
		return retval;

	}
	// $ANTLR end "interfaceDeclaration"

	partial void EnterRule_normalInterfaceDeclaration();
	partial void LeaveRule_normalInterfaceDeclaration();
	// $ANTLR start "normalInterfaceDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:472:1: normalInterfaceDeclaration : modifiers 'interface' IDENTIFIER ( typeParameters )? ( 'extends' typeList )? interfaceBody ;
	[GrammarRule("normalInterfaceDeclaration")]
	private Antlr3AstNode normalInterfaceDeclaration()
	{
		EnterRule_normalInterfaceDeclaration();
		EnterRule("normalInterfaceDeclaration", 20);
		var retval = new Antlr3AstNode("normalInterfaceDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int normalInterfaceDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal88 = default(IToken);
		IToken IDENTIFIER89 = default(IToken);
		IToken string_literal91 = default(IToken);
		Antlr3AstNode modifiers87 = default(Antlr3AstNode);
		Antlr3AstNode typeParameters90 = default(Antlr3AstNode);
		Antlr3AstNode typeList92 = default(Antlr3AstNode);
		Antlr3AstNode interfaceBody93 = default(Antlr3AstNode);

		object string_literal88_tree = default(object);
		object IDENTIFIER89_tree = default(object);
		object string_literal91_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "normalInterfaceDeclaration");
		DebugLocation(472, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 20)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:473:5: ( modifiers 'interface' IDENTIFIER ( typeParameters )? ( 'extends' typeList )? interfaceBody )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:473:9: modifiers 'interface' IDENTIFIER ( typeParameters )? ( 'extends' typeList )? interfaceBody
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(473, 9);
			PushFollow(Follow._modifiers_in_normalInterfaceDeclaration1455);
			modifiers87=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers87.Tree, modifiers87, retval);
			DebugLocation(473, 19);
			string_literal88=(IToken)Match(input,INTERFACE,Follow._INTERFACE_in_normalInterfaceDeclaration1457); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal88_tree = (object)adaptor.Create(string_literal88, retval);
			adaptor.AddChild(root_0, string_literal88_tree);
			}
			DebugLocation(473, 31);
			IDENTIFIER89=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_normalInterfaceDeclaration1459); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER89_tree = (object)adaptor.Create(IDENTIFIER89, retval);
			adaptor.AddChild(root_0, IDENTIFIER89_tree);
			}
			DebugLocation(474, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:474:9: ( typeParameters )?
			int alt32=2;
			try { DebugEnterSubRule(32);
			try { DebugEnterDecision(32, false);
			int LA32_1 = input.LA(1);

			if ((LA32_1==LT))
			{
				alt32 = 1;
			}
			} finally { DebugExitDecision(32); }
			switch (alt32)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:474:10: typeParameters
				{
				DebugLocation(474, 10);
				PushFollow(Follow._typeParameters_in_normalInterfaceDeclaration1470);
				typeParameters90=typeParameters();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeParameters90.Tree, typeParameters90, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(32); }

			DebugLocation(476, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:476:9: ( 'extends' typeList )?
			int alt33=2;
			try { DebugEnterSubRule(33);
			try { DebugEnterDecision(33, false);
			int LA33_1 = input.LA(1);

			if ((LA33_1==EXTENDS))
			{
				alt33 = 1;
			}
			} finally { DebugExitDecision(33); }
			switch (alt33)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:476:10: 'extends' typeList
				{
				DebugLocation(476, 10);
				string_literal91=(IToken)Match(input,EXTENDS,Follow._EXTENDS_in_normalInterfaceDeclaration1492); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal91_tree = (object)adaptor.Create(string_literal91, retval);
				adaptor.AddChild(root_0, string_literal91_tree);
				}
				DebugLocation(476, 20);
				PushFollow(Follow._typeList_in_normalInterfaceDeclaration1494);
				typeList92=typeList();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeList92.Tree, typeList92, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(33); }

			DebugLocation(478, 9);
			PushFollow(Follow._interfaceBody_in_normalInterfaceDeclaration1515);
			interfaceBody93=interfaceBody();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceBody93.Tree, interfaceBody93, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("normalInterfaceDeclaration", 20);
			LeaveRule("normalInterfaceDeclaration", 20);
			LeaveRule_normalInterfaceDeclaration();
			if (state.backtracking > 0) { Memoize(input, 20, normalInterfaceDeclaration_StartIndex); }

		}
		DebugLocation(479, 4);
		} finally { DebugExitRule(GrammarFileName, "normalInterfaceDeclaration"); }
		return retval;

	}
	// $ANTLR end "normalInterfaceDeclaration"

	partial void EnterRule_typeList();
	partial void LeaveRule_typeList();
	// $ANTLR start "typeList"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:481:1: typeList : type ( ',' type )* ;
	[GrammarRule("typeList")]
	private Antlr3AstNode typeList()
	{
		EnterRule_typeList();
		EnterRule("typeList", 21);
		var retval = new Antlr3AstNode("typeList");
		
		retval.Start = (IToken)input.LT(1);
		int typeList_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal95 = default(IToken);
		Antlr3AstNode type94 = default(Antlr3AstNode);
		Antlr3AstNode type96 = default(Antlr3AstNode);

		object char_literal95_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeList");
		DebugLocation(481, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 21)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:482:5: ( type ( ',' type )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:482:9: type ( ',' type )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(482, 9);
			PushFollow(Follow._type_in_typeList1535);
			type94=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type94.Tree, type94, retval);
			DebugLocation(483, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:483:9: ( ',' type )*
			try { DebugEnterSubRule(34);
			while (true)
			{
				int alt34=2;
				try { DebugEnterDecision(34, false);
				int LA34_1 = input.LA(1);

				if ((LA34_1==COMMA))
				{
					alt34 = 1;
				}


				} finally { DebugExitDecision(34); }
				switch ( alt34 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:483:10: ',' type
					{
					DebugLocation(483, 10);
					char_literal95=(IToken)Match(input,COMMA,Follow._COMMA_in_typeList1546); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal95_tree = (object)adaptor.Create(char_literal95, retval);
					adaptor.AddChild(root_0, char_literal95_tree);
					}
					DebugLocation(483, 14);
					PushFollow(Follow._type_in_typeList1548);
					type96=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type96.Tree, type96, retval);

					}
					break;

				default:
					goto loop34;
				}
			}

			loop34:
				;

			} finally { DebugExitSubRule(34); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeList", 21);
			LeaveRule("typeList", 21);
			LeaveRule_typeList();
			if (state.backtracking > 0) { Memoize(input, 21, typeList_StartIndex); }

		}
		DebugLocation(485, 4);
		} finally { DebugExitRule(GrammarFileName, "typeList"); }
		return retval;

	}
	// $ANTLR end "typeList"

	partial void EnterRule_classBody();
	partial void LeaveRule_classBody();
	// $ANTLR start "classBody"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:487:1: classBody : '{' ( classBodyDeclaration )* '}' ;
	[GrammarRule("classBody")]
	private Antlr3AstNode classBody()
	{
		EnterRule_classBody();
		EnterRule("classBody", 22);
		var retval = new Antlr3AstNode("classBody");
		
		retval.Start = (IToken)input.LT(1);
		int classBody_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal97 = default(IToken);
		IToken char_literal99 = default(IToken);
		Antlr3AstNode classBodyDeclaration98 = default(Antlr3AstNode);

		object char_literal97_tree = default(object);
		object char_literal99_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "classBody");
		DebugLocation(487, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 22)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:488:5: ( '{' ( classBodyDeclaration )* '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:488:9: '{' ( classBodyDeclaration )* '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(488, 9);
			char_literal97=(IToken)Match(input,LBRACE,Follow._LBRACE_in_classBody1579); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal97_tree = (object)adaptor.Create(char_literal97, retval);
			adaptor.AddChild(root_0, char_literal97_tree);
			}
			DebugLocation(489, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:489:9: ( classBodyDeclaration )*
			try { DebugEnterSubRule(35);
			while (true)
			{
				int alt35=2;
				try { DebugEnterDecision(35, false);
				int LA35_1 = input.LA(1);

				if ((LA35_1==ABSTRACT||LA35_1==BOOLEAN||LA35_1==BYTE||LA35_1==CHAR||LA35_1==CLASS||LA35_1==DOUBLE||LA35_1==ENUM||LA35_1==FINAL||LA35_1==FLOAT||LA35_1==IDENTIFIER||(LA35_1>=INT && LA35_1<=INTERFACE)||LA35_1==LBRACE||LA35_1==LONG||LA35_1==LT||(LA35_1>=MONKEYS_AT && LA35_1<=NATIVE)||(LA35_1>=PRIVATE && LA35_1<=PUBLIC)||(LA35_1>=SEMI && LA35_1<=SHORT)||(LA35_1>=STATIC && LA35_1<=STRICTFP)||LA35_1==SYNCHRONIZED||LA35_1==TRANSIENT||(LA35_1>=VOID && LA35_1<=VOLATILE)))
				{
					alt35 = 1;
				}


				} finally { DebugExitDecision(35); }
				switch ( alt35 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:489:10: classBodyDeclaration
					{
					DebugLocation(489, 10);
					PushFollow(Follow._classBodyDeclaration_in_classBody1591);
					classBodyDeclaration98=classBodyDeclaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, classBodyDeclaration98.Tree, classBodyDeclaration98, retval);

					}
					break;

				default:
					goto loop35;
				}
			}

			loop35:
				;

			} finally { DebugExitSubRule(35); }

			DebugLocation(491, 9);
			char_literal99=(IToken)Match(input,RBRACE,Follow._RBRACE_in_classBody1613); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal99_tree = (object)adaptor.Create(char_literal99, retval);
			adaptor.AddChild(root_0, char_literal99_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("classBody", 22);
			LeaveRule("classBody", 22);
			LeaveRule_classBody();
			if (state.backtracking > 0) { Memoize(input, 22, classBody_StartIndex); }

		}
		DebugLocation(492, 4);
		} finally { DebugExitRule(GrammarFileName, "classBody"); }
		return retval;

	}
	// $ANTLR end "classBody"

	partial void EnterRule_interfaceBody();
	partial void LeaveRule_interfaceBody();
	// $ANTLR start "interfaceBody"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:494:1: interfaceBody : '{' ( interfaceBodyDeclaration )* '}' ;
	[GrammarRule("interfaceBody")]
	private Antlr3AstNode interfaceBody()
	{
		EnterRule_interfaceBody();
		EnterRule("interfaceBody", 23);
		var retval = new Antlr3AstNode("interfaceBody");
		
		retval.Start = (IToken)input.LT(1);
		int interfaceBody_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal100 = default(IToken);
		IToken char_literal102 = default(IToken);
		Antlr3AstNode interfaceBodyDeclaration101 = default(Antlr3AstNode);

		object char_literal100_tree = default(object);
		object char_literal102_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interfaceBody");
		DebugLocation(494, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 23)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:495:5: ( '{' ( interfaceBodyDeclaration )* '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:495:9: '{' ( interfaceBodyDeclaration )* '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(495, 9);
			char_literal100=(IToken)Match(input,LBRACE,Follow._LBRACE_in_interfaceBody1633); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal100_tree = (object)adaptor.Create(char_literal100, retval);
			adaptor.AddChild(root_0, char_literal100_tree);
			}
			DebugLocation(496, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:496:9: ( interfaceBodyDeclaration )*
			try { DebugEnterSubRule(36);
			while (true)
			{
				int alt36=2;
				try { DebugEnterDecision(36, false);
				int LA36_1 = input.LA(1);

				if ((LA36_1==ABSTRACT||LA36_1==BOOLEAN||LA36_1==BYTE||LA36_1==CHAR||LA36_1==CLASS||LA36_1==DOUBLE||LA36_1==ENUM||LA36_1==FINAL||LA36_1==FLOAT||LA36_1==IDENTIFIER||(LA36_1>=INT && LA36_1<=INTERFACE)||LA36_1==LONG||LA36_1==LT||(LA36_1>=MONKEYS_AT && LA36_1<=NATIVE)||(LA36_1>=PRIVATE && LA36_1<=PUBLIC)||(LA36_1>=SEMI && LA36_1<=SHORT)||(LA36_1>=STATIC && LA36_1<=STRICTFP)||LA36_1==SYNCHRONIZED||LA36_1==TRANSIENT||(LA36_1>=VOID && LA36_1<=VOLATILE)))
				{
					alt36 = 1;
				}


				} finally { DebugExitDecision(36); }
				switch ( alt36 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:496:10: interfaceBodyDeclaration
					{
					DebugLocation(496, 10);
					PushFollow(Follow._interfaceBodyDeclaration_in_interfaceBody1645);
					interfaceBodyDeclaration101=interfaceBodyDeclaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceBodyDeclaration101.Tree, interfaceBodyDeclaration101, retval);

					}
					break;

				default:
					goto loop36;
				}
			}

			loop36:
				;

			} finally { DebugExitSubRule(36); }

			DebugLocation(498, 9);
			char_literal102=(IToken)Match(input,RBRACE,Follow._RBRACE_in_interfaceBody1667); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal102_tree = (object)adaptor.Create(char_literal102, retval);
			adaptor.AddChild(root_0, char_literal102_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interfaceBody", 23);
			LeaveRule("interfaceBody", 23);
			LeaveRule_interfaceBody();
			if (state.backtracking > 0) { Memoize(input, 23, interfaceBody_StartIndex); }

		}
		DebugLocation(499, 4);
		} finally { DebugExitRule(GrammarFileName, "interfaceBody"); }
		return retval;

	}
	// $ANTLR end "interfaceBody"

	partial void EnterRule_classBodyDeclaration();
	partial void LeaveRule_classBodyDeclaration();
	// $ANTLR start "classBodyDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:501:1: classBodyDeclaration : ( ';' | ( 'static' )? block | memberDecl );
	[GrammarRule("classBodyDeclaration")]
	private Antlr3AstNode classBodyDeclaration()
	{
		EnterRule_classBodyDeclaration();
		EnterRule("classBodyDeclaration", 24);
		var retval = new Antlr3AstNode("classBodyDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int classBodyDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal103 = default(IToken);
		IToken string_literal104 = default(IToken);
		Antlr3AstNode block105 = default(Antlr3AstNode);
		Antlr3AstNode memberDecl106 = default(Antlr3AstNode);

		object char_literal103_tree = default(object);
		object string_literal104_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "classBodyDeclaration");
		DebugLocation(501, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 24)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:502:5: ( ';' | ( 'static' )? block | memberDecl )
			int alt38=3;
			try { DebugEnterDecision(38, false);
			switch (input.LA(1))
			{
			case SEMI:
				{
				alt38 = 1;
				}
				break;
			case STATIC:
				{
				int LA38_2 = input.LA(2);

				if ((LA38_2==LBRACE))
				{
					alt38 = 2;
				}
				else if ((LA38_2==ABSTRACT||LA38_2==BOOLEAN||LA38_2==BYTE||LA38_2==CHAR||LA38_2==CLASS||LA38_2==DOUBLE||LA38_2==ENUM||LA38_2==FINAL||LA38_2==FLOAT||LA38_2==IDENTIFIER||(LA38_2>=INT && LA38_2<=INTERFACE)||LA38_2==LONG||LA38_2==LT||(LA38_2>=MONKEYS_AT && LA38_2<=NATIVE)||(LA38_2>=PRIVATE && LA38_2<=PUBLIC)||LA38_2==SHORT||(LA38_2>=STATIC && LA38_2<=STRICTFP)||LA38_2==SYNCHRONIZED||LA38_2==TRANSIENT||(LA38_2>=VOID && LA38_2<=VOLATILE)))
				{
					alt38 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 38, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case LBRACE:
				{
				alt38 = 2;
				}
				break;
			case ABSTRACT:
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case CLASS:
			case DOUBLE:
			case ENUM:
			case FINAL:
			case FLOAT:
			case IDENTIFIER:
			case INT:
			case INTERFACE:
			case LONG:
			case LT:
			case MONKEYS_AT:
			case NATIVE:
			case PRIVATE:
			case PROTECTED:
			case PUBLIC:
			case SHORT:
			case STRICTFP:
			case SYNCHRONIZED:
			case TRANSIENT:
			case VOID:
			case VOLATILE:
				{
				alt38 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 38, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(38); }
			switch (alt38)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:502:9: ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(502, 9);
				char_literal103=(IToken)Match(input,SEMI,Follow._SEMI_in_classBodyDeclaration1687); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal103_tree = (object)adaptor.Create(char_literal103, retval);
				adaptor.AddChild(root_0, char_literal103_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:503:9: ( 'static' )? block
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(503, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:503:9: ( 'static' )?
				int alt37=2;
				try { DebugEnterSubRule(37);
				try { DebugEnterDecision(37, false);
				int LA37_1 = input.LA(1);

				if ((LA37_1==STATIC))
				{
					alt37 = 1;
				}
				} finally { DebugExitDecision(37); }
				switch (alt37)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:503:10: 'static'
					{
					DebugLocation(503, 10);
					string_literal104=(IToken)Match(input,STATIC,Follow._STATIC_in_classBodyDeclaration1698); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal104_tree = (object)adaptor.Create(string_literal104, retval);
					adaptor.AddChild(root_0, string_literal104_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(37); }

				DebugLocation(505, 9);
				PushFollow(Follow._block_in_classBodyDeclaration1720);
				block105=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block105.Tree, block105, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:506:9: memberDecl
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(506, 9);
				PushFollow(Follow._memberDecl_in_classBodyDeclaration1730);
				memberDecl106=memberDecl();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, memberDecl106.Tree, memberDecl106, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("classBodyDeclaration", 24);
			LeaveRule("classBodyDeclaration", 24);
			LeaveRule_classBodyDeclaration();
			if (state.backtracking > 0) { Memoize(input, 24, classBodyDeclaration_StartIndex); }

		}
		DebugLocation(507, 4);
		} finally { DebugExitRule(GrammarFileName, "classBodyDeclaration"); }
		return retval;

	}
	// $ANTLR end "classBodyDeclaration"

	partial void EnterRule_memberDecl();
	partial void LeaveRule_memberDecl();
	// $ANTLR start "memberDecl"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:509:1: memberDecl : ( fieldDeclaration | methodDeclaration | classDeclaration | interfaceDeclaration );
	[GrammarRule("memberDecl")]
	private Antlr3AstNode memberDecl()
	{
		EnterRule_memberDecl();
		EnterRule("memberDecl", 25);
		var retval = new Antlr3AstNode("memberDecl");
		
		retval.Start = (IToken)input.LT(1);
		int memberDecl_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode fieldDeclaration107 = default(Antlr3AstNode);
		Antlr3AstNode methodDeclaration108 = default(Antlr3AstNode);
		Antlr3AstNode classDeclaration109 = default(Antlr3AstNode);
		Antlr3AstNode interfaceDeclaration110 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "memberDecl");
		DebugLocation(509, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 25)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:510:5: ( fieldDeclaration | methodDeclaration | classDeclaration | interfaceDeclaration )
			int alt39=4;
			try { DebugEnterDecision(39, false);
			switch (input.LA(1))
			{
			case MONKEYS_AT:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else if ((EvaluatePredicate(synpred54_Java_fragment)))
				{
					alt39 = 3;
				}
				else if ((true))
				{
					alt39 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PUBLIC:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else if ((EvaluatePredicate(synpred54_Java_fragment)))
				{
					alt39 = 3;
				}
				else if ((true))
				{
					alt39 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PROTECTED:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else if ((EvaluatePredicate(synpred54_Java_fragment)))
				{
					alt39 = 3;
				}
				else if ((true))
				{
					alt39 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PRIVATE:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else if ((EvaluatePredicate(synpred54_Java_fragment)))
				{
					alt39 = 3;
				}
				else if ((true))
				{
					alt39 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STATIC:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else if ((EvaluatePredicate(synpred54_Java_fragment)))
				{
					alt39 = 3;
				}
				else if ((true))
				{
					alt39 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case ABSTRACT:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else if ((EvaluatePredicate(synpred54_Java_fragment)))
				{
					alt39 = 3;
				}
				else if ((true))
				{
					alt39 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case FINAL:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else if ((EvaluatePredicate(synpred54_Java_fragment)))
				{
					alt39 = 3;
				}
				else if ((true))
				{
					alt39 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 7, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case NATIVE:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else if ((EvaluatePredicate(synpred54_Java_fragment)))
				{
					alt39 = 3;
				}
				else if ((true))
				{
					alt39 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 8, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case SYNCHRONIZED:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else if ((EvaluatePredicate(synpred54_Java_fragment)))
				{
					alt39 = 3;
				}
				else if ((true))
				{
					alt39 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 9, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case TRANSIENT:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else if ((EvaluatePredicate(synpred54_Java_fragment)))
				{
					alt39 = 3;
				}
				else if ((true))
				{
					alt39 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 10, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case VOLATILE:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else if ((EvaluatePredicate(synpred54_Java_fragment)))
				{
					alt39 = 3;
				}
				else if ((true))
				{
					alt39 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STRICTFP:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else if ((EvaluatePredicate(synpred54_Java_fragment)))
				{
					alt39 = 3;
				}
				else if ((true))
				{
					alt39 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 12, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case IDENTIFIER:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 13, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
				{
				int LA39_2 = input.LA(2);

				if ((EvaluatePredicate(synpred52_Java_fragment)))
				{
					alt39 = 1;
				}
				else if ((EvaluatePredicate(synpred53_Java_fragment)))
				{
					alt39 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 14, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case LT:
			case VOID:
				{
				alt39 = 2;
				}
				break;
			case CLASS:
			case ENUM:
				{
				alt39 = 3;
				}
				break;
			case INTERFACE:
				{
				alt39 = 4;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(39); }
			switch (alt39)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:510:10: fieldDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(510, 10);
				PushFollow(Follow._fieldDeclaration_in_memberDecl1751);
				fieldDeclaration107=fieldDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, fieldDeclaration107.Tree, fieldDeclaration107, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:511:10: methodDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(511, 10);
				PushFollow(Follow._methodDeclaration_in_memberDecl1762);
				methodDeclaration108=methodDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, methodDeclaration108.Tree, methodDeclaration108, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:512:10: classDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(512, 10);
				PushFollow(Follow._classDeclaration_in_memberDecl1773);
				classDeclaration109=classDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classDeclaration109.Tree, classDeclaration109, retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:513:10: interfaceDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(513, 10);
				PushFollow(Follow._interfaceDeclaration_in_memberDecl1784);
				interfaceDeclaration110=interfaceDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceDeclaration110.Tree, interfaceDeclaration110, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("memberDecl", 25);
			LeaveRule("memberDecl", 25);
			LeaveRule_memberDecl();
			if (state.backtracking > 0) { Memoize(input, 25, memberDecl_StartIndex); }

		}
		DebugLocation(514, 4);
		} finally { DebugExitRule(GrammarFileName, "memberDecl"); }
		return retval;

	}
	// $ANTLR end "memberDecl"

	partial void EnterRule_methodDeclaration();
	partial void LeaveRule_methodDeclaration();
	// $ANTLR start "methodDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:517:1: methodDeclaration : ( modifiers ( typeParameters )? IDENTIFIER formalParameters ( 'throws' qualifiedNameList )? '{' ( explicitConstructorInvocation )? ( blockStatement )* '}' | modifiers ( typeParameters )? ( type | 'void' ) IDENTIFIER formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ( block | ';' ) );
	[GrammarRule("methodDeclaration")]
	private Antlr3AstNode methodDeclaration()
	{
		EnterRule_methodDeclaration();
		EnterRule("methodDeclaration", 26);
		var retval = new Antlr3AstNode("methodDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int methodDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER113 = default(IToken);
		IToken string_literal115 = default(IToken);
		IToken char_literal117 = default(IToken);
		IToken char_literal120 = default(IToken);
		IToken string_literal124 = default(IToken);
		IToken IDENTIFIER125 = default(IToken);
		IToken char_literal127 = default(IToken);
		IToken char_literal128 = default(IToken);
		IToken string_literal129 = default(IToken);
		IToken char_literal132 = default(IToken);
		Antlr3AstNode modifiers111 = default(Antlr3AstNode);
		Antlr3AstNode typeParameters112 = default(Antlr3AstNode);
		Antlr3AstNode formalParameters114 = default(Antlr3AstNode);
		Antlr3AstNode qualifiedNameList116 = default(Antlr3AstNode);
		Antlr3AstNode explicitConstructorInvocation118 = default(Antlr3AstNode);
		Antlr3AstNode blockStatement119 = default(Antlr3AstNode);
		Antlr3AstNode modifiers121 = default(Antlr3AstNode);
		Antlr3AstNode typeParameters122 = default(Antlr3AstNode);
		Antlr3AstNode type123 = default(Antlr3AstNode);
		Antlr3AstNode formalParameters126 = default(Antlr3AstNode);
		Antlr3AstNode qualifiedNameList130 = default(Antlr3AstNode);
		Antlr3AstNode block131 = default(Antlr3AstNode);

		object IDENTIFIER113_tree = default(object);
		object string_literal115_tree = default(object);
		object char_literal117_tree = default(object);
		object char_literal120_tree = default(object);
		object string_literal124_tree = default(object);
		object IDENTIFIER125_tree = default(object);
		object char_literal127_tree = default(object);
		object char_literal128_tree = default(object);
		object string_literal129_tree = default(object);
		object char_literal132_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "methodDeclaration");
		DebugLocation(517, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 26)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:518:5: ( modifiers ( typeParameters )? IDENTIFIER formalParameters ( 'throws' qualifiedNameList )? '{' ( explicitConstructorInvocation )? ( blockStatement )* '}' | modifiers ( typeParameters )? ( type | 'void' ) IDENTIFIER formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ( block | ';' ) )
			int alt49=2;
			try { DebugEnterDecision(49, false);
			switch (input.LA(1))
			{
			case MONKEYS_AT:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PUBLIC:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PROTECTED:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PRIVATE:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STATIC:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case ABSTRACT:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case FINAL:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 7, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case NATIVE:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 8, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case SYNCHRONIZED:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 9, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case TRANSIENT:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 10, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case VOLATILE:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STRICTFP:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 12, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case LT:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 13, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case IDENTIFIER:
				{
				int LA49_2 = input.LA(2);

				if ((EvaluatePredicate(synpred59_Java_fragment)))
				{
					alt49 = 1;
				}
				else if ((true))
				{
					alt49 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 14, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
			case VOID:
				{
				alt49 = 2;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 49, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(49); }
			switch (alt49)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:520:10: modifiers ( typeParameters )? IDENTIFIER formalParameters ( 'throws' qualifiedNameList )? '{' ( explicitConstructorInvocation )? ( blockStatement )* '}'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(520, 10);
				PushFollow(Follow._modifiers_in_methodDeclaration1822);
				modifiers111=modifiers();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers111.Tree, modifiers111, retval);
				DebugLocation(521, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:521:9: ( typeParameters )?
				int alt40=2;
				try { DebugEnterSubRule(40);
				try { DebugEnterDecision(40, false);
				int LA40_1 = input.LA(1);

				if ((LA40_1==LT))
				{
					alt40 = 1;
				}
				} finally { DebugExitDecision(40); }
				switch (alt40)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:521:10: typeParameters
					{
					DebugLocation(521, 10);
					PushFollow(Follow._typeParameters_in_methodDeclaration1833);
					typeParameters112=typeParameters();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, typeParameters112.Tree, typeParameters112, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(40); }

				DebugLocation(523, 9);
				IDENTIFIER113=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_methodDeclaration1854); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER113_tree = (object)adaptor.Create(IDENTIFIER113, retval);
				adaptor.AddChild(root_0, IDENTIFIER113_tree);
				}
				DebugLocation(524, 9);
				PushFollow(Follow._formalParameters_in_methodDeclaration1864);
				formalParameters114=formalParameters();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, formalParameters114.Tree, formalParameters114, retval);
				DebugLocation(525, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:525:9: ( 'throws' qualifiedNameList )?
				int alt41=2;
				try { DebugEnterSubRule(41);
				try { DebugEnterDecision(41, false);
				int LA41_1 = input.LA(1);

				if ((LA41_1==THROWS))
				{
					alt41 = 1;
				}
				} finally { DebugExitDecision(41); }
				switch (alt41)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:525:10: 'throws' qualifiedNameList
					{
					DebugLocation(525, 10);
					string_literal115=(IToken)Match(input,THROWS,Follow._THROWS_in_methodDeclaration1875); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal115_tree = (object)adaptor.Create(string_literal115, retval);
					adaptor.AddChild(root_0, string_literal115_tree);
					}
					DebugLocation(525, 19);
					PushFollow(Follow._qualifiedNameList_in_methodDeclaration1877);
					qualifiedNameList116=qualifiedNameList();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedNameList116.Tree, qualifiedNameList116, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(41); }

				DebugLocation(527, 9);
				char_literal117=(IToken)Match(input,LBRACE,Follow._LBRACE_in_methodDeclaration1898); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal117_tree = (object)adaptor.Create(char_literal117, retval);
				adaptor.AddChild(root_0, char_literal117_tree);
				}
				DebugLocation(528, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:528:9: ( explicitConstructorInvocation )?
				int alt42=2;
				try { DebugEnterSubRule(42);
				try { DebugEnterDecision(42, false);
				switch (input.LA(1))
				{
				case LT:
					{
					alt42 = 1;
					}
					break;
				case THIS:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case LPAREN:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case SUPER:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case IDENTIFIER:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case INTLITERAL:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case LONGLITERAL:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case FLOATLITERAL:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case DOUBLELITERAL:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case CHARLITERAL:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case STRINGLITERAL:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case TRUE:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case FALSE:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case NULL:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case NEW:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case BOOLEAN:
				case BYTE:
				case CHAR:
				case DOUBLE:
				case FLOAT:
				case INT:
				case LONG:
				case SHORT:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				case VOID:
					{
					int LA42_2 = input.LA(2);

					if ((EvaluatePredicate(synpred57_Java_fragment)))
					{
						alt42 = 1;
					}
					}
					break;
				}

				} finally { DebugExitDecision(42); }
				switch (alt42)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:528:10: explicitConstructorInvocation
					{
					DebugLocation(528, 10);
					PushFollow(Follow._explicitConstructorInvocation_in_methodDeclaration1910);
					explicitConstructorInvocation118=explicitConstructorInvocation();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, explicitConstructorInvocation118.Tree, explicitConstructorInvocation118, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(42); }

				DebugLocation(530, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:530:9: ( blockStatement )*
				try { DebugEnterSubRule(43);
				while (true)
				{
					int alt43=2;
					try { DebugEnterDecision(43, false);
					int LA43_1 = input.LA(1);

					if ((LA43_1==ABSTRACT||(LA43_1>=ASSERT && LA43_1<=BANG)||(LA43_1>=BOOLEAN && LA43_1<=BYTE)||(LA43_1>=CHAR && LA43_1<=CLASS)||LA43_1==CONTINUE||LA43_1==DO||(LA43_1>=DOUBLE && LA43_1<=DOUBLELITERAL)||LA43_1==ENUM||(LA43_1>=FALSE && LA43_1<=FINAL)||(LA43_1>=FLOAT && LA43_1<=FOR)||(LA43_1>=IDENTIFIER && LA43_1<=IF)||(LA43_1>=INT && LA43_1<=INTLITERAL)||LA43_1==LBRACE||(LA43_1>=LONG && LA43_1<=LT)||(LA43_1>=MONKEYS_AT && LA43_1<=NULL)||LA43_1==PLUS||(LA43_1>=PLUSPLUS && LA43_1<=PUBLIC)||LA43_1==RETURN||(LA43_1>=SEMI && LA43_1<=SHORT)||(LA43_1>=STATIC && LA43_1<=SUB)||(LA43_1>=SUBSUB && LA43_1<=SYNCHRONIZED)||(LA43_1>=THIS && LA43_1<=THROW)||(LA43_1>=TILDE && LA43_1<=WHILE)))
					{
						alt43 = 1;
					}


					} finally { DebugExitDecision(43); }
					switch ( alt43 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:530:10: blockStatement
						{
						DebugLocation(530, 10);
						PushFollow(Follow._blockStatement_in_methodDeclaration1932);
						blockStatement119=blockStatement();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, blockStatement119.Tree, blockStatement119, retval);

						}
						break;

					default:
						goto loop43;
					}
				}

				loop43:
					;

				} finally { DebugExitSubRule(43); }

				DebugLocation(532, 9);
				char_literal120=(IToken)Match(input,RBRACE,Follow._RBRACE_in_methodDeclaration1953); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal120_tree = (object)adaptor.Create(char_literal120, retval);
				adaptor.AddChild(root_0, char_literal120_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:533:9: modifiers ( typeParameters )? ( type | 'void' ) IDENTIFIER formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ( block | ';' )
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(533, 9);
				PushFollow(Follow._modifiers_in_methodDeclaration1963);
				modifiers121=modifiers();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers121.Tree, modifiers121, retval);
				DebugLocation(534, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:534:9: ( typeParameters )?
				int alt44=2;
				try { DebugEnterSubRule(44);
				try { DebugEnterDecision(44, false);
				int LA44_1 = input.LA(1);

				if ((LA44_1==LT))
				{
					alt44 = 1;
				}
				} finally { DebugExitDecision(44); }
				switch (alt44)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:534:10: typeParameters
					{
					DebugLocation(534, 10);
					PushFollow(Follow._typeParameters_in_methodDeclaration1974);
					typeParameters122=typeParameters();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, typeParameters122.Tree, typeParameters122, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(44); }

				DebugLocation(536, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:536:9: ( type | 'void' )
				int alt45=2;
				try { DebugEnterSubRule(45);
				try { DebugEnterDecision(45, false);
				int LA45_1 = input.LA(1);

				if ((LA45_1==BOOLEAN||LA45_1==BYTE||LA45_1==CHAR||LA45_1==DOUBLE||LA45_1==FLOAT||LA45_1==IDENTIFIER||LA45_1==INT||LA45_1==LONG||LA45_1==SHORT))
				{
					alt45 = 1;
				}
				else if ((LA45_1==VOID))
				{
					alt45 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 45, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(45); }
				switch (alt45)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:536:10: type
					{
					DebugLocation(536, 10);
					PushFollow(Follow._type_in_methodDeclaration1996);
					type123=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type123.Tree, type123, retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:537:13: 'void'
					{
					DebugLocation(537, 13);
					string_literal124=(IToken)Match(input,VOID,Follow._VOID_in_methodDeclaration2010); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal124_tree = (object)adaptor.Create(string_literal124, retval);
					adaptor.AddChild(root_0, string_literal124_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(45); }

				DebugLocation(539, 9);
				IDENTIFIER125=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_methodDeclaration2030); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER125_tree = (object)adaptor.Create(IDENTIFIER125, retval);
				adaptor.AddChild(root_0, IDENTIFIER125_tree);
				}
				DebugLocation(540, 9);
				PushFollow(Follow._formalParameters_in_methodDeclaration2040);
				formalParameters126=formalParameters();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, formalParameters126.Tree, formalParameters126, retval);
				DebugLocation(541, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:541:9: ( '[' ']' )*
				try { DebugEnterSubRule(46);
				while (true)
				{
					int alt46=2;
					try { DebugEnterDecision(46, false);
					int LA46_1 = input.LA(1);

					if ((LA46_1==LBRACKET))
					{
						alt46 = 1;
					}


					} finally { DebugExitDecision(46); }
					switch ( alt46 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:541:10: '[' ']'
						{
						DebugLocation(541, 10);
						char_literal127=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_methodDeclaration2051); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal127_tree = (object)adaptor.Create(char_literal127, retval);
						adaptor.AddChild(root_0, char_literal127_tree);
						}
						DebugLocation(541, 14);
						char_literal128=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_methodDeclaration2053); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal128_tree = (object)adaptor.Create(char_literal128, retval);
						adaptor.AddChild(root_0, char_literal128_tree);
						}

						}
						break;

					default:
						goto loop46;
					}
				}

				loop46:
					;

				} finally { DebugExitSubRule(46); }

				DebugLocation(543, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:543:9: ( 'throws' qualifiedNameList )?
				int alt47=2;
				try { DebugEnterSubRule(47);
				try { DebugEnterDecision(47, false);
				int LA47_1 = input.LA(1);

				if ((LA47_1==THROWS))
				{
					alt47 = 1;
				}
				} finally { DebugExitDecision(47); }
				switch (alt47)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:543:10: 'throws' qualifiedNameList
					{
					DebugLocation(543, 10);
					string_literal129=(IToken)Match(input,THROWS,Follow._THROWS_in_methodDeclaration2075); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal129_tree = (object)adaptor.Create(string_literal129, retval);
					adaptor.AddChild(root_0, string_literal129_tree);
					}
					DebugLocation(543, 19);
					PushFollow(Follow._qualifiedNameList_in_methodDeclaration2077);
					qualifiedNameList130=qualifiedNameList();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedNameList130.Tree, qualifiedNameList130, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(47); }

				DebugLocation(545, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:545:9: ( block | ';' )
				int alt48=2;
				try { DebugEnterSubRule(48);
				try { DebugEnterDecision(48, false);
				int LA48_1 = input.LA(1);

				if ((LA48_1==LBRACE))
				{
					alt48 = 1;
				}
				else if ((LA48_1==SEMI))
				{
					alt48 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 48, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(48); }
				switch (alt48)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:546:13: block
					{
					DebugLocation(546, 13);
					PushFollow(Follow._block_in_methodDeclaration2132);
					block131=block();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, block131.Tree, block131, retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:547:13: ';'
					{
					DebugLocation(547, 13);
					char_literal132=(IToken)Match(input,SEMI,Follow._SEMI_in_methodDeclaration2146); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal132_tree = (object)adaptor.Create(char_literal132, retval);
					adaptor.AddChild(root_0, char_literal132_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(48); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("methodDeclaration", 26);
			LeaveRule("methodDeclaration", 26);
			LeaveRule_methodDeclaration();
			if (state.backtracking > 0) { Memoize(input, 26, methodDeclaration_StartIndex); }

		}
		DebugLocation(549, 4);
		} finally { DebugExitRule(GrammarFileName, "methodDeclaration"); }
		return retval;

	}
	// $ANTLR end "methodDeclaration"

	partial void EnterRule_fieldDeclaration();
	partial void LeaveRule_fieldDeclaration();
	// $ANTLR start "fieldDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:552:1: fieldDeclaration : modifiers type variableDeclarator ( ',' variableDeclarator )* ';' ;
	[GrammarRule("fieldDeclaration")]
	private Antlr3AstNode fieldDeclaration()
	{
		EnterRule_fieldDeclaration();
		EnterRule("fieldDeclaration", 27);
		var retval = new Antlr3AstNode("fieldDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int fieldDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal136 = default(IToken);
		IToken char_literal138 = default(IToken);
		Antlr3AstNode modifiers133 = default(Antlr3AstNode);
		Antlr3AstNode type134 = default(Antlr3AstNode);
		Antlr3AstNode variableDeclarator135 = default(Antlr3AstNode);
		Antlr3AstNode variableDeclarator137 = default(Antlr3AstNode);

		object char_literal136_tree = default(object);
		object char_literal138_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "fieldDeclaration");
		DebugLocation(552, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 27)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:553:5: ( modifiers type variableDeclarator ( ',' variableDeclarator )* ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:553:9: modifiers type variableDeclarator ( ',' variableDeclarator )* ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(553, 9);
			PushFollow(Follow._modifiers_in_fieldDeclaration2178);
			modifiers133=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers133.Tree, modifiers133, retval);
			DebugLocation(554, 9);
			PushFollow(Follow._type_in_fieldDeclaration2188);
			type134=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type134.Tree, type134, retval);
			DebugLocation(555, 9);
			PushFollow(Follow._variableDeclarator_in_fieldDeclaration2198);
			variableDeclarator135=variableDeclarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableDeclarator135.Tree, variableDeclarator135, retval);
			DebugLocation(556, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:556:9: ( ',' variableDeclarator )*
			try { DebugEnterSubRule(50);
			while (true)
			{
				int alt50=2;
				try { DebugEnterDecision(50, false);
				int LA50_1 = input.LA(1);

				if ((LA50_1==COMMA))
				{
					alt50 = 1;
				}


				} finally { DebugExitDecision(50); }
				switch ( alt50 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:556:10: ',' variableDeclarator
					{
					DebugLocation(556, 10);
					char_literal136=(IToken)Match(input,COMMA,Follow._COMMA_in_fieldDeclaration2209); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal136_tree = (object)adaptor.Create(char_literal136, retval);
					adaptor.AddChild(root_0, char_literal136_tree);
					}
					DebugLocation(556, 14);
					PushFollow(Follow._variableDeclarator_in_fieldDeclaration2211);
					variableDeclarator137=variableDeclarator();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, variableDeclarator137.Tree, variableDeclarator137, retval);

					}
					break;

				default:
					goto loop50;
				}
			}

			loop50:
				;

			} finally { DebugExitSubRule(50); }

			DebugLocation(558, 9);
			char_literal138=(IToken)Match(input,SEMI,Follow._SEMI_in_fieldDeclaration2232); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal138_tree = (object)adaptor.Create(char_literal138, retval);
			adaptor.AddChild(root_0, char_literal138_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("fieldDeclaration", 27);
			LeaveRule("fieldDeclaration", 27);
			LeaveRule_fieldDeclaration();
			if (state.backtracking > 0) { Memoize(input, 27, fieldDeclaration_StartIndex); }

		}
		DebugLocation(559, 4);
		} finally { DebugExitRule(GrammarFileName, "fieldDeclaration"); }
		return retval;

	}
	// $ANTLR end "fieldDeclaration"

	partial void EnterRule_variableDeclarator();
	partial void LeaveRule_variableDeclarator();
	// $ANTLR start "variableDeclarator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:561:1: variableDeclarator : IDENTIFIER ( '[' ']' )* ( '=' variableInitializer )? ;
	[GrammarRule("variableDeclarator")]
	private Antlr3AstNode variableDeclarator()
	{
		EnterRule_variableDeclarator();
		EnterRule("variableDeclarator", 28);
		var retval = new Antlr3AstNode("variableDeclarator");
		
		retval.Start = (IToken)input.LT(1);
		int variableDeclarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER139 = default(IToken);
		IToken char_literal140 = default(IToken);
		IToken char_literal141 = default(IToken);
		IToken char_literal142 = default(IToken);
		Antlr3AstNode variableInitializer143 = default(Antlr3AstNode);

		object IDENTIFIER139_tree = default(object);
		object char_literal140_tree = default(object);
		object char_literal141_tree = default(object);
		object char_literal142_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "variableDeclarator");
		DebugLocation(561, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 28)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:562:5: ( IDENTIFIER ( '[' ']' )* ( '=' variableInitializer )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:562:9: IDENTIFIER ( '[' ']' )* ( '=' variableInitializer )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(562, 9);
			IDENTIFIER139=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_variableDeclarator2252); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER139_tree = (object)adaptor.Create(IDENTIFIER139, retval);
			adaptor.AddChild(root_0, IDENTIFIER139_tree);
			}
			DebugLocation(563, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:563:9: ( '[' ']' )*
			try { DebugEnterSubRule(51);
			while (true)
			{
				int alt51=2;
				try { DebugEnterDecision(51, false);
				int LA51_1 = input.LA(1);

				if ((LA51_1==LBRACKET))
				{
					alt51 = 1;
				}


				} finally { DebugExitDecision(51); }
				switch ( alt51 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:563:10: '[' ']'
					{
					DebugLocation(563, 10);
					char_literal140=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_variableDeclarator2263); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal140_tree = (object)adaptor.Create(char_literal140, retval);
					adaptor.AddChild(root_0, char_literal140_tree);
					}
					DebugLocation(563, 14);
					char_literal141=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_variableDeclarator2265); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal141_tree = (object)adaptor.Create(char_literal141, retval);
					adaptor.AddChild(root_0, char_literal141_tree);
					}

					}
					break;

				default:
					goto loop51;
				}
			}

			loop51:
				;

			} finally { DebugExitSubRule(51); }

			DebugLocation(565, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:565:9: ( '=' variableInitializer )?
			int alt52=2;
			try { DebugEnterSubRule(52);
			try { DebugEnterDecision(52, false);
			int LA52_1 = input.LA(1);

			if ((LA52_1==EQ))
			{
				alt52 = 1;
			}
			} finally { DebugExitDecision(52); }
			switch (alt52)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:565:10: '=' variableInitializer
				{
				DebugLocation(565, 10);
				char_literal142=(IToken)Match(input,EQ,Follow._EQ_in_variableDeclarator2287); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal142_tree = (object)adaptor.Create(char_literal142, retval);
				adaptor.AddChild(root_0, char_literal142_tree);
				}
				DebugLocation(565, 14);
				PushFollow(Follow._variableInitializer_in_variableDeclarator2289);
				variableInitializer143=variableInitializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variableInitializer143.Tree, variableInitializer143, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(52); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variableDeclarator", 28);
			LeaveRule("variableDeclarator", 28);
			LeaveRule_variableDeclarator();
			if (state.backtracking > 0) { Memoize(input, 28, variableDeclarator_StartIndex); }

		}
		DebugLocation(567, 4);
		} finally { DebugExitRule(GrammarFileName, "variableDeclarator"); }
		return retval;

	}
	// $ANTLR end "variableDeclarator"

	partial void EnterRule_interfaceBodyDeclaration();
	partial void LeaveRule_interfaceBodyDeclaration();
	// $ANTLR start "interfaceBodyDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:572:1: interfaceBodyDeclaration : ( interfaceFieldDeclaration | interfaceMethodDeclaration | interfaceDeclaration | classDeclaration | ';' );
	[GrammarRule("interfaceBodyDeclaration")]
	private Antlr3AstNode interfaceBodyDeclaration()
	{
		EnterRule_interfaceBodyDeclaration();
		EnterRule("interfaceBodyDeclaration", 29);
		var retval = new Antlr3AstNode("interfaceBodyDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int interfaceBodyDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal148 = default(IToken);
		Antlr3AstNode interfaceFieldDeclaration144 = default(Antlr3AstNode);
		Antlr3AstNode interfaceMethodDeclaration145 = default(Antlr3AstNode);
		Antlr3AstNode interfaceDeclaration146 = default(Antlr3AstNode);
		Antlr3AstNode classDeclaration147 = default(Antlr3AstNode);

		object char_literal148_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interfaceBodyDeclaration");
		DebugLocation(572, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 29)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:573:5: ( interfaceFieldDeclaration | interfaceMethodDeclaration | interfaceDeclaration | classDeclaration | ';' )
			int alt53=5;
			try { DebugEnterDecision(53, false);
			switch (input.LA(1))
			{
			case MONKEYS_AT:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else if ((EvaluatePredicate(synpred70_Java_fragment)))
				{
					alt53 = 3;
				}
				else if ((EvaluatePredicate(synpred71_Java_fragment)))
				{
					alt53 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PUBLIC:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else if ((EvaluatePredicate(synpred70_Java_fragment)))
				{
					alt53 = 3;
				}
				else if ((EvaluatePredicate(synpred71_Java_fragment)))
				{
					alt53 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PROTECTED:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else if ((EvaluatePredicate(synpred70_Java_fragment)))
				{
					alt53 = 3;
				}
				else if ((EvaluatePredicate(synpred71_Java_fragment)))
				{
					alt53 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PRIVATE:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else if ((EvaluatePredicate(synpred70_Java_fragment)))
				{
					alt53 = 3;
				}
				else if ((EvaluatePredicate(synpred71_Java_fragment)))
				{
					alt53 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STATIC:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else if ((EvaluatePredicate(synpred70_Java_fragment)))
				{
					alt53 = 3;
				}
				else if ((EvaluatePredicate(synpred71_Java_fragment)))
				{
					alt53 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case ABSTRACT:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else if ((EvaluatePredicate(synpred70_Java_fragment)))
				{
					alt53 = 3;
				}
				else if ((EvaluatePredicate(synpred71_Java_fragment)))
				{
					alt53 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case FINAL:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else if ((EvaluatePredicate(synpred70_Java_fragment)))
				{
					alt53 = 3;
				}
				else if ((EvaluatePredicate(synpred71_Java_fragment)))
				{
					alt53 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 7, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case NATIVE:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else if ((EvaluatePredicate(synpred70_Java_fragment)))
				{
					alt53 = 3;
				}
				else if ((EvaluatePredicate(synpred71_Java_fragment)))
				{
					alt53 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 8, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case SYNCHRONIZED:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else if ((EvaluatePredicate(synpred70_Java_fragment)))
				{
					alt53 = 3;
				}
				else if ((EvaluatePredicate(synpred71_Java_fragment)))
				{
					alt53 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 9, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case TRANSIENT:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else if ((EvaluatePredicate(synpred70_Java_fragment)))
				{
					alt53 = 3;
				}
				else if ((EvaluatePredicate(synpred71_Java_fragment)))
				{
					alt53 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 10, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case VOLATILE:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else if ((EvaluatePredicate(synpred70_Java_fragment)))
				{
					alt53 = 3;
				}
				else if ((EvaluatePredicate(synpred71_Java_fragment)))
				{
					alt53 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STRICTFP:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else if ((EvaluatePredicate(synpred70_Java_fragment)))
				{
					alt53 = 3;
				}
				else if ((EvaluatePredicate(synpred71_Java_fragment)))
				{
					alt53 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 12, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case IDENTIFIER:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 13, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
				{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred68_Java_fragment)))
				{
					alt53 = 1;
				}
				else if ((EvaluatePredicate(synpred69_Java_fragment)))
				{
					alt53 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 14, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case LT:
			case VOID:
				{
				alt53 = 2;
				}
				break;
			case INTERFACE:
				{
				alt53 = 3;
				}
				break;
			case CLASS:
			case ENUM:
				{
				alt53 = 4;
				}
				break;
			case SEMI:
				{
				alt53 = 5;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 53, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(53); }
			switch (alt53)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:574:9: interfaceFieldDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(574, 9);
				PushFollow(Follow._interfaceFieldDeclaration_in_interfaceBodyDeclaration2328);
				interfaceFieldDeclaration144=interfaceFieldDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceFieldDeclaration144.Tree, interfaceFieldDeclaration144, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:575:9: interfaceMethodDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(575, 9);
				PushFollow(Follow._interfaceMethodDeclaration_in_interfaceBodyDeclaration2338);
				interfaceMethodDeclaration145=interfaceMethodDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceMethodDeclaration145.Tree, interfaceMethodDeclaration145, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:576:9: interfaceDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(576, 9);
				PushFollow(Follow._interfaceDeclaration_in_interfaceBodyDeclaration2348);
				interfaceDeclaration146=interfaceDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceDeclaration146.Tree, interfaceDeclaration146, retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:577:9: classDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(577, 9);
				PushFollow(Follow._classDeclaration_in_interfaceBodyDeclaration2358);
				classDeclaration147=classDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classDeclaration147.Tree, classDeclaration147, retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:578:9: ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(578, 9);
				char_literal148=(IToken)Match(input,SEMI,Follow._SEMI_in_interfaceBodyDeclaration2368); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal148_tree = (object)adaptor.Create(char_literal148, retval);
				adaptor.AddChild(root_0, char_literal148_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interfaceBodyDeclaration", 29);
			LeaveRule("interfaceBodyDeclaration", 29);
			LeaveRule_interfaceBodyDeclaration();
			if (state.backtracking > 0) { Memoize(input, 29, interfaceBodyDeclaration_StartIndex); }

		}
		DebugLocation(579, 4);
		} finally { DebugExitRule(GrammarFileName, "interfaceBodyDeclaration"); }
		return retval;

	}
	// $ANTLR end "interfaceBodyDeclaration"

	partial void EnterRule_interfaceMethodDeclaration();
	partial void LeaveRule_interfaceMethodDeclaration();
	// $ANTLR start "interfaceMethodDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:581:1: interfaceMethodDeclaration : modifiers ( typeParameters )? ( type | 'void' ) IDENTIFIER formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ';' ;
	[GrammarRule("interfaceMethodDeclaration")]
	private Antlr3AstNode interfaceMethodDeclaration()
	{
		EnterRule_interfaceMethodDeclaration();
		EnterRule("interfaceMethodDeclaration", 30);
		var retval = new Antlr3AstNode("interfaceMethodDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int interfaceMethodDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal152 = default(IToken);
		IToken IDENTIFIER153 = default(IToken);
		IToken char_literal155 = default(IToken);
		IToken char_literal156 = default(IToken);
		IToken string_literal157 = default(IToken);
		IToken char_literal159 = default(IToken);
		Antlr3AstNode modifiers149 = default(Antlr3AstNode);
		Antlr3AstNode typeParameters150 = default(Antlr3AstNode);
		Antlr3AstNode type151 = default(Antlr3AstNode);
		Antlr3AstNode formalParameters154 = default(Antlr3AstNode);
		Antlr3AstNode qualifiedNameList158 = default(Antlr3AstNode);

		object string_literal152_tree = default(object);
		object IDENTIFIER153_tree = default(object);
		object char_literal155_tree = default(object);
		object char_literal156_tree = default(object);
		object string_literal157_tree = default(object);
		object char_literal159_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interfaceMethodDeclaration");
		DebugLocation(581, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 30)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:582:5: ( modifiers ( typeParameters )? ( type | 'void' ) IDENTIFIER formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:582:9: modifiers ( typeParameters )? ( type | 'void' ) IDENTIFIER formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(582, 9);
			PushFollow(Follow._modifiers_in_interfaceMethodDeclaration2388);
			modifiers149=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers149.Tree, modifiers149, retval);
			DebugLocation(583, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:583:9: ( typeParameters )?
			int alt54=2;
			try { DebugEnterSubRule(54);
			try { DebugEnterDecision(54, false);
			int LA54_1 = input.LA(1);

			if ((LA54_1==LT))
			{
				alt54 = 1;
			}
			} finally { DebugExitDecision(54); }
			switch (alt54)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:583:10: typeParameters
				{
				DebugLocation(583, 10);
				PushFollow(Follow._typeParameters_in_interfaceMethodDeclaration2399);
				typeParameters150=typeParameters();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeParameters150.Tree, typeParameters150, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(54); }

			DebugLocation(585, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:585:9: ( type | 'void' )
			int alt55=2;
			try { DebugEnterSubRule(55);
			try { DebugEnterDecision(55, false);
			int LA55_1 = input.LA(1);

			if ((LA55_1==BOOLEAN||LA55_1==BYTE||LA55_1==CHAR||LA55_1==DOUBLE||LA55_1==FLOAT||LA55_1==IDENTIFIER||LA55_1==INT||LA55_1==LONG||LA55_1==SHORT))
			{
				alt55 = 1;
			}
			else if ((LA55_1==VOID))
			{
				alt55 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 55, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(55); }
			switch (alt55)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:585:10: type
				{
				DebugLocation(585, 10);
				PushFollow(Follow._type_in_interfaceMethodDeclaration2421);
				type151=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type151.Tree, type151, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:586:10: 'void'
				{
				DebugLocation(586, 10);
				string_literal152=(IToken)Match(input,VOID,Follow._VOID_in_interfaceMethodDeclaration2432); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal152_tree = (object)adaptor.Create(string_literal152, retval);
				adaptor.AddChild(root_0, string_literal152_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(55); }

			DebugLocation(588, 9);
			IDENTIFIER153=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_interfaceMethodDeclaration2452); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER153_tree = (object)adaptor.Create(IDENTIFIER153, retval);
			adaptor.AddChild(root_0, IDENTIFIER153_tree);
			}
			DebugLocation(589, 9);
			PushFollow(Follow._formalParameters_in_interfaceMethodDeclaration2462);
			formalParameters154=formalParameters();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, formalParameters154.Tree, formalParameters154, retval);
			DebugLocation(590, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:590:9: ( '[' ']' )*
			try { DebugEnterSubRule(56);
			while (true)
			{
				int alt56=2;
				try { DebugEnterDecision(56, false);
				int LA56_1 = input.LA(1);

				if ((LA56_1==LBRACKET))
				{
					alt56 = 1;
				}


				} finally { DebugExitDecision(56); }
				switch ( alt56 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:590:10: '[' ']'
					{
					DebugLocation(590, 10);
					char_literal155=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_interfaceMethodDeclaration2473); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal155_tree = (object)adaptor.Create(char_literal155, retval);
					adaptor.AddChild(root_0, char_literal155_tree);
					}
					DebugLocation(590, 14);
					char_literal156=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_interfaceMethodDeclaration2475); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal156_tree = (object)adaptor.Create(char_literal156, retval);
					adaptor.AddChild(root_0, char_literal156_tree);
					}

					}
					break;

				default:
					goto loop56;
				}
			}

			loop56:
				;

			} finally { DebugExitSubRule(56); }

			DebugLocation(592, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:592:9: ( 'throws' qualifiedNameList )?
			int alt57=2;
			try { DebugEnterSubRule(57);
			try { DebugEnterDecision(57, false);
			int LA57_1 = input.LA(1);

			if ((LA57_1==THROWS))
			{
				alt57 = 1;
			}
			} finally { DebugExitDecision(57); }
			switch (alt57)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:592:10: 'throws' qualifiedNameList
				{
				DebugLocation(592, 10);
				string_literal157=(IToken)Match(input,THROWS,Follow._THROWS_in_interfaceMethodDeclaration2497); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal157_tree = (object)adaptor.Create(string_literal157, retval);
				adaptor.AddChild(root_0, string_literal157_tree);
				}
				DebugLocation(592, 19);
				PushFollow(Follow._qualifiedNameList_in_interfaceMethodDeclaration2499);
				qualifiedNameList158=qualifiedNameList();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedNameList158.Tree, qualifiedNameList158, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(57); }

			DebugLocation(593, 12);
			char_literal159=(IToken)Match(input,SEMI,Follow._SEMI_in_interfaceMethodDeclaration2512); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal159_tree = (object)adaptor.Create(char_literal159, retval);
			adaptor.AddChild(root_0, char_literal159_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interfaceMethodDeclaration", 30);
			LeaveRule("interfaceMethodDeclaration", 30);
			LeaveRule_interfaceMethodDeclaration();
			if (state.backtracking > 0) { Memoize(input, 30, interfaceMethodDeclaration_StartIndex); }

		}
		DebugLocation(594, 4);
		} finally { DebugExitRule(GrammarFileName, "interfaceMethodDeclaration"); }
		return retval;

	}
	// $ANTLR end "interfaceMethodDeclaration"

	partial void EnterRule_interfaceFieldDeclaration();
	partial void LeaveRule_interfaceFieldDeclaration();
	// $ANTLR start "interfaceFieldDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:601:1: interfaceFieldDeclaration : modifiers type variableDeclarator ( ',' variableDeclarator )* ';' ;
	[GrammarRule("interfaceFieldDeclaration")]
	private Antlr3AstNode interfaceFieldDeclaration()
	{
		EnterRule_interfaceFieldDeclaration();
		EnterRule("interfaceFieldDeclaration", 31);
		var retval = new Antlr3AstNode("interfaceFieldDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int interfaceFieldDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal163 = default(IToken);
		IToken char_literal165 = default(IToken);
		Antlr3AstNode modifiers160 = default(Antlr3AstNode);
		Antlr3AstNode type161 = default(Antlr3AstNode);
		Antlr3AstNode variableDeclarator162 = default(Antlr3AstNode);
		Antlr3AstNode variableDeclarator164 = default(Antlr3AstNode);

		object char_literal163_tree = default(object);
		object char_literal165_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interfaceFieldDeclaration");
		DebugLocation(601, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 31)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:602:5: ( modifiers type variableDeclarator ( ',' variableDeclarator )* ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:602:9: modifiers type variableDeclarator ( ',' variableDeclarator )* ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(602, 9);
			PushFollow(Follow._modifiers_in_interfaceFieldDeclaration2534);
			modifiers160=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers160.Tree, modifiers160, retval);
			DebugLocation(602, 19);
			PushFollow(Follow._type_in_interfaceFieldDeclaration2536);
			type161=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type161.Tree, type161, retval);
			DebugLocation(602, 24);
			PushFollow(Follow._variableDeclarator_in_interfaceFieldDeclaration2538);
			variableDeclarator162=variableDeclarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableDeclarator162.Tree, variableDeclarator162, retval);
			DebugLocation(603, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:603:9: ( ',' variableDeclarator )*
			try { DebugEnterSubRule(58);
			while (true)
			{
				int alt58=2;
				try { DebugEnterDecision(58, false);
				int LA58_1 = input.LA(1);

				if ((LA58_1==COMMA))
				{
					alt58 = 1;
				}


				} finally { DebugExitDecision(58); }
				switch ( alt58 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:603:10: ',' variableDeclarator
					{
					DebugLocation(603, 10);
					char_literal163=(IToken)Match(input,COMMA,Follow._COMMA_in_interfaceFieldDeclaration2549); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal163_tree = (object)adaptor.Create(char_literal163, retval);
					adaptor.AddChild(root_0, char_literal163_tree);
					}
					DebugLocation(603, 14);
					PushFollow(Follow._variableDeclarator_in_interfaceFieldDeclaration2551);
					variableDeclarator164=variableDeclarator();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, variableDeclarator164.Tree, variableDeclarator164, retval);

					}
					break;

				default:
					goto loop58;
				}
			}

			loop58:
				;

			} finally { DebugExitSubRule(58); }

			DebugLocation(605, 9);
			char_literal165=(IToken)Match(input,SEMI,Follow._SEMI_in_interfaceFieldDeclaration2572); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal165_tree = (object)adaptor.Create(char_literal165, retval);
			adaptor.AddChild(root_0, char_literal165_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interfaceFieldDeclaration", 31);
			LeaveRule("interfaceFieldDeclaration", 31);
			LeaveRule_interfaceFieldDeclaration();
			if (state.backtracking > 0) { Memoize(input, 31, interfaceFieldDeclaration_StartIndex); }

		}
		DebugLocation(606, 4);
		} finally { DebugExitRule(GrammarFileName, "interfaceFieldDeclaration"); }
		return retval;

	}
	// $ANTLR end "interfaceFieldDeclaration"

	partial void EnterRule_type();
	partial void LeaveRule_type();
	// $ANTLR start "type"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:609:1: type : ( classOrInterfaceType ( '[' ']' )* | primitiveType ( '[' ']' )* );
	[GrammarRule("type")]
	private Antlr3AstNode type()
	{
		EnterRule_type();
		EnterRule("type", 32);
		var retval = new Antlr3AstNode("type");
		
		retval.Start = (IToken)input.LT(1);
		int type_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal167 = default(IToken);
		IToken char_literal168 = default(IToken);
		IToken char_literal170 = default(IToken);
		IToken char_literal171 = default(IToken);
		Antlr3AstNode classOrInterfaceType166 = default(Antlr3AstNode);
		Antlr3AstNode primitiveType169 = default(Antlr3AstNode);

		object char_literal167_tree = default(object);
		object char_literal168_tree = default(object);
		object char_literal170_tree = default(object);
		object char_literal171_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "type");
		DebugLocation(609, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 32)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:610:5: ( classOrInterfaceType ( '[' ']' )* | primitiveType ( '[' ']' )* )
			int alt61=2;
			try { DebugEnterDecision(61, false);
			int LA61_1 = input.LA(1);

			if ((LA61_1==IDENTIFIER))
			{
				alt61 = 1;
			}
			else if ((LA61_1==BOOLEAN||LA61_1==BYTE||LA61_1==CHAR||LA61_1==DOUBLE||LA61_1==FLOAT||LA61_1==INT||LA61_1==LONG||LA61_1==SHORT))
			{
				alt61 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 61, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(61); }
			switch (alt61)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:610:9: classOrInterfaceType ( '[' ']' )*
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(610, 9);
				PushFollow(Follow._classOrInterfaceType_in_type2593);
				classOrInterfaceType166=classOrInterfaceType();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classOrInterfaceType166.Tree, classOrInterfaceType166, retval);
				DebugLocation(611, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:611:9: ( '[' ']' )*
				try { DebugEnterSubRule(59);
				while (true)
				{
					int alt59=2;
					try { DebugEnterDecision(59, false);
					int LA59_1 = input.LA(1);

					if ((LA59_1==LBRACKET))
					{
						alt59 = 1;
					}


					} finally { DebugExitDecision(59); }
					switch ( alt59 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:611:10: '[' ']'
						{
						DebugLocation(611, 10);
						char_literal167=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_type2604); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal167_tree = (object)adaptor.Create(char_literal167, retval);
						adaptor.AddChild(root_0, char_literal167_tree);
						}
						DebugLocation(611, 14);
						char_literal168=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_type2606); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal168_tree = (object)adaptor.Create(char_literal168, retval);
						adaptor.AddChild(root_0, char_literal168_tree);
						}

						}
						break;

					default:
						goto loop59;
					}
				}

				loop59:
					;

				} finally { DebugExitSubRule(59); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:613:9: primitiveType ( '[' ']' )*
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(613, 9);
				PushFollow(Follow._primitiveType_in_type2627);
				primitiveType169=primitiveType();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primitiveType169.Tree, primitiveType169, retval);
				DebugLocation(614, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:614:9: ( '[' ']' )*
				try { DebugEnterSubRule(60);
				while (true)
				{
					int alt60=2;
					try { DebugEnterDecision(60, false);
					int LA60_1 = input.LA(1);

					if ((LA60_1==LBRACKET))
					{
						alt60 = 1;
					}


					} finally { DebugExitDecision(60); }
					switch ( alt60 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:614:10: '[' ']'
						{
						DebugLocation(614, 10);
						char_literal170=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_type2638); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal170_tree = (object)adaptor.Create(char_literal170, retval);
						adaptor.AddChild(root_0, char_literal170_tree);
						}
						DebugLocation(614, 14);
						char_literal171=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_type2640); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal171_tree = (object)adaptor.Create(char_literal171, retval);
						adaptor.AddChild(root_0, char_literal171_tree);
						}

						}
						break;

					default:
						goto loop60;
					}
				}

				loop60:
					;

				} finally { DebugExitSubRule(60); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("type", 32);
			LeaveRule("type", 32);
			LeaveRule_type();
			if (state.backtracking > 0) { Memoize(input, 32, type_StartIndex); }

		}
		DebugLocation(616, 4);
		} finally { DebugExitRule(GrammarFileName, "type"); }
		return retval;

	}
	// $ANTLR end "type"

	partial void EnterRule_classOrInterfaceType();
	partial void LeaveRule_classOrInterfaceType();
	// $ANTLR start "classOrInterfaceType"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:619:1: classOrInterfaceType : IDENTIFIER ( typeArguments )? ( '.' IDENTIFIER ( typeArguments )? )* ;
	[GrammarRule("classOrInterfaceType")]
	private Antlr3AstNode classOrInterfaceType()
	{
		EnterRule_classOrInterfaceType();
		EnterRule("classOrInterfaceType", 33);
		var retval = new Antlr3AstNode("classOrInterfaceType");
		
		retval.Start = (IToken)input.LT(1);
		int classOrInterfaceType_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER172 = default(IToken);
		IToken char_literal174 = default(IToken);
		IToken IDENTIFIER175 = default(IToken);
		Antlr3AstNode typeArguments173 = default(Antlr3AstNode);
		Antlr3AstNode typeArguments176 = default(Antlr3AstNode);

		object IDENTIFIER172_tree = default(object);
		object char_literal174_tree = default(object);
		object IDENTIFIER175_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "classOrInterfaceType");
		DebugLocation(619, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 33)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:620:5: ( IDENTIFIER ( typeArguments )? ( '.' IDENTIFIER ( typeArguments )? )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:620:9: IDENTIFIER ( typeArguments )? ( '.' IDENTIFIER ( typeArguments )? )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(620, 9);
			IDENTIFIER172=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_classOrInterfaceType2672); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER172_tree = (object)adaptor.Create(IDENTIFIER172, retval);
			adaptor.AddChild(root_0, IDENTIFIER172_tree);
			}
			DebugLocation(621, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:621:9: ( typeArguments )?
			int alt62=2;
			try { DebugEnterSubRule(62);
			try { DebugEnterDecision(62, false);
			int LA62_1 = input.LA(1);

			if ((LA62_1==LT))
			{
				int LA62_2 = input.LA(2);

				if ((LA62_2==BOOLEAN||LA62_2==BYTE||LA62_2==CHAR||LA62_2==DOUBLE||LA62_2==FLOAT||LA62_2==IDENTIFIER||LA62_2==INT||LA62_2==LONG||LA62_2==QUES||LA62_2==SHORT))
				{
					alt62 = 1;
				}
			}
			} finally { DebugExitDecision(62); }
			switch (alt62)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:621:10: typeArguments
				{
				DebugLocation(621, 10);
				PushFollow(Follow._typeArguments_in_classOrInterfaceType2683);
				typeArguments173=typeArguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeArguments173.Tree, typeArguments173, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(62); }

			DebugLocation(623, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:623:9: ( '.' IDENTIFIER ( typeArguments )? )*
			try { DebugEnterSubRule(64);
			while (true)
			{
				int alt64=2;
				try { DebugEnterDecision(64, false);
				int LA64_1 = input.LA(1);

				if ((LA64_1==DOT))
				{
					alt64 = 1;
				}


				} finally { DebugExitDecision(64); }
				switch ( alt64 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:623:10: '.' IDENTIFIER ( typeArguments )?
					{
					DebugLocation(623, 10);
					char_literal174=(IToken)Match(input,DOT,Follow._DOT_in_classOrInterfaceType2705); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal174_tree = (object)adaptor.Create(char_literal174, retval);
					adaptor.AddChild(root_0, char_literal174_tree);
					}
					DebugLocation(623, 14);
					IDENTIFIER175=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_classOrInterfaceType2707); if (state.failed) return retval;
					if (state.backtracking == 0) {
					IDENTIFIER175_tree = (object)adaptor.Create(IDENTIFIER175, retval);
					adaptor.AddChild(root_0, IDENTIFIER175_tree);
					}
					DebugLocation(624, 13);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:624:13: ( typeArguments )?
					int alt63=2;
					try { DebugEnterSubRule(63);
					try { DebugEnterDecision(63, false);
					int LA63_1 = input.LA(1);

					if ((LA63_1==LT))
					{
						int LA63_2 = input.LA(2);

						if ((LA63_2==BOOLEAN||LA63_2==BYTE||LA63_2==CHAR||LA63_2==DOUBLE||LA63_2==FLOAT||LA63_2==IDENTIFIER||LA63_2==INT||LA63_2==LONG||LA63_2==QUES||LA63_2==SHORT))
						{
							alt63 = 1;
						}
					}
					} finally { DebugExitDecision(63); }
					switch (alt63)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:624:14: typeArguments
						{
						DebugLocation(624, 14);
						PushFollow(Follow._typeArguments_in_classOrInterfaceType2722);
						typeArguments176=typeArguments();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, typeArguments176.Tree, typeArguments176, retval);

						}
						break;

					}
					} finally { DebugExitSubRule(63); }


					}
					break;

				default:
					goto loop64;
				}
			}

			loop64:
				;

			} finally { DebugExitSubRule(64); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("classOrInterfaceType", 33);
			LeaveRule("classOrInterfaceType", 33);
			LeaveRule_classOrInterfaceType();
			if (state.backtracking > 0) { Memoize(input, 33, classOrInterfaceType_StartIndex); }

		}
		DebugLocation(627, 4);
		} finally { DebugExitRule(GrammarFileName, "classOrInterfaceType"); }
		return retval;

	}
	// $ANTLR end "classOrInterfaceType"

	partial void EnterRule_primitiveType();
	partial void LeaveRule_primitiveType();
	// $ANTLR start "primitiveType"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:629:1: primitiveType : ( 'boolean' | 'char' | 'byte' | 'short' | 'int' | 'long' | 'float' | 'double' );
	[GrammarRule("primitiveType")]
	private Antlr3AstNode primitiveType()
	{
		EnterRule_primitiveType();
		EnterRule("primitiveType", 34);
		var retval = new Antlr3AstNode("primitiveType");
		
		retval.Start = (IToken)input.LT(1);
		int primitiveType_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set177 = default(IToken);

		object set177_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "primitiveType");
		DebugLocation(629, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 34)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:630:5: ( 'boolean' | 'char' | 'byte' | 'short' | 'int' | 'long' | 'float' | 'double' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(630, 5);

			set177=(IToken)input.LT(1);
			if (input.LA(1)==BOOLEAN||input.LA(1)==BYTE||input.LA(1)==CHAR||input.LA(1)==DOUBLE||input.LA(1)==FLOAT||input.LA(1)==INT||input.LA(1)==LONG||input.LA(1)==SHORT)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set177, retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("primitiveType", 34);
			LeaveRule("primitiveType", 34);
			LeaveRule_primitiveType();
			if (state.backtracking > 0) { Memoize(input, 34, primitiveType_StartIndex); }

		}
		DebugLocation(638, 4);
		} finally { DebugExitRule(GrammarFileName, "primitiveType"); }
		return retval;

	}
	// $ANTLR end "primitiveType"

	partial void EnterRule_typeArguments();
	partial void LeaveRule_typeArguments();
	// $ANTLR start "typeArguments"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:640:1: typeArguments : '<' typeArgument ( ',' typeArgument )* '>' ;
	[GrammarRule("typeArguments")]
	private Antlr3AstNode typeArguments()
	{
		EnterRule_typeArguments();
		EnterRule("typeArguments", 35);
		var retval = new Antlr3AstNode("typeArguments");
		
		retval.Start = (IToken)input.LT(1);
		int typeArguments_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal178 = default(IToken);
		IToken char_literal180 = default(IToken);
		IToken char_literal182 = default(IToken);
		Antlr3AstNode typeArgument179 = default(Antlr3AstNode);
		Antlr3AstNode typeArgument181 = default(Antlr3AstNode);

		object char_literal178_tree = default(object);
		object char_literal180_tree = default(object);
		object char_literal182_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeArguments");
		DebugLocation(640, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 35)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:641:5: ( '<' typeArgument ( ',' typeArgument )* '>' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:641:9: '<' typeArgument ( ',' typeArgument )* '>'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(641, 9);
			char_literal178=(IToken)Match(input,LT,Follow._LT_in_typeArguments2859); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal178_tree = (object)adaptor.Create(char_literal178, retval);
			adaptor.AddChild(root_0, char_literal178_tree);
			}
			DebugLocation(641, 13);
			PushFollow(Follow._typeArgument_in_typeArguments2861);
			typeArgument179=typeArgument();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, typeArgument179.Tree, typeArgument179, retval);
			DebugLocation(642, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:642:9: ( ',' typeArgument )*
			try { DebugEnterSubRule(65);
			while (true)
			{
				int alt65=2;
				try { DebugEnterDecision(65, false);
				int LA65_1 = input.LA(1);

				if ((LA65_1==COMMA))
				{
					alt65 = 1;
				}


				} finally { DebugExitDecision(65); }
				switch ( alt65 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:642:10: ',' typeArgument
					{
					DebugLocation(642, 10);
					char_literal180=(IToken)Match(input,COMMA,Follow._COMMA_in_typeArguments2872); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal180_tree = (object)adaptor.Create(char_literal180, retval);
					adaptor.AddChild(root_0, char_literal180_tree);
					}
					DebugLocation(642, 14);
					PushFollow(Follow._typeArgument_in_typeArguments2874);
					typeArgument181=typeArgument();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, typeArgument181.Tree, typeArgument181, retval);

					}
					break;

				default:
					goto loop65;
				}
			}

			loop65:
				;

			} finally { DebugExitSubRule(65); }

			DebugLocation(644, 9);
			char_literal182=(IToken)Match(input,GT,Follow._GT_in_typeArguments2896); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal182_tree = (object)adaptor.Create(char_literal182, retval);
			adaptor.AddChild(root_0, char_literal182_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeArguments", 35);
			LeaveRule("typeArguments", 35);
			LeaveRule_typeArguments();
			if (state.backtracking > 0) { Memoize(input, 35, typeArguments_StartIndex); }

		}
		DebugLocation(645, 4);
		} finally { DebugExitRule(GrammarFileName, "typeArguments"); }
		return retval;

	}
	// $ANTLR end "typeArguments"

	partial void EnterRule_typeArgument();
	partial void LeaveRule_typeArgument();
	// $ANTLR start "typeArgument"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:647:1: typeArgument : ( type | '?' ( ( 'extends' | 'super' ) type )? );
	[GrammarRule("typeArgument")]
	private Antlr3AstNode typeArgument()
	{
		EnterRule_typeArgument();
		EnterRule("typeArgument", 36);
		var retval = new Antlr3AstNode("typeArgument");
		
		retval.Start = (IToken)input.LT(1);
		int typeArgument_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal184 = default(IToken);
		IToken set185 = default(IToken);
		Antlr3AstNode type183 = default(Antlr3AstNode);
		Antlr3AstNode type186 = default(Antlr3AstNode);

		object char_literal184_tree = default(object);
		object set185_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeArgument");
		DebugLocation(647, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 36)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:648:5: ( type | '?' ( ( 'extends' | 'super' ) type )? )
			int alt67=2;
			try { DebugEnterDecision(67, false);
			int LA67_1 = input.LA(1);

			if ((LA67_1==BOOLEAN||LA67_1==BYTE||LA67_1==CHAR||LA67_1==DOUBLE||LA67_1==FLOAT||LA67_1==IDENTIFIER||LA67_1==INT||LA67_1==LONG||LA67_1==SHORT))
			{
				alt67 = 1;
			}
			else if ((LA67_1==QUES))
			{
				alt67 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 67, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(67); }
			switch (alt67)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:648:9: type
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(648, 9);
				PushFollow(Follow._type_in_typeArgument2916);
				type183=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type183.Tree, type183, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:649:9: '?' ( ( 'extends' | 'super' ) type )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(649, 9);
				char_literal184=(IToken)Match(input,QUES,Follow._QUES_in_typeArgument2926); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal184_tree = (object)adaptor.Create(char_literal184, retval);
				adaptor.AddChild(root_0, char_literal184_tree);
				}
				DebugLocation(650, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:650:9: ( ( 'extends' | 'super' ) type )?
				int alt66=2;
				try { DebugEnterSubRule(66);
				try { DebugEnterDecision(66, false);
				int LA66_1 = input.LA(1);

				if ((LA66_1==EXTENDS||LA66_1==SUPER))
				{
					alt66 = 1;
				}
				} finally { DebugExitDecision(66); }
				switch (alt66)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:651:13: ( 'extends' | 'super' ) type
					{
					DebugLocation(651, 13);

					set185=(IToken)input.LT(1);
					if (input.LA(1)==EXTENDS||input.LA(1)==SUPER)
					{
						input.Consume();
						if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set185, retval));
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}

					DebugLocation(654, 13);
					PushFollow(Follow._type_in_typeArgument2994);
					type186=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type186.Tree, type186, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(66); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeArgument", 36);
			LeaveRule("typeArgument", 36);
			LeaveRule_typeArgument();
			if (state.backtracking > 0) { Memoize(input, 36, typeArgument_StartIndex); }

		}
		DebugLocation(656, 4);
		} finally { DebugExitRule(GrammarFileName, "typeArgument"); }
		return retval;

	}
	// $ANTLR end "typeArgument"

	partial void EnterRule_qualifiedNameList();
	partial void LeaveRule_qualifiedNameList();
	// $ANTLR start "qualifiedNameList"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:658:1: qualifiedNameList : qualifiedName ( ',' qualifiedName )* ;
	[GrammarRule("qualifiedNameList")]
	private Antlr3AstNode qualifiedNameList()
	{
		EnterRule_qualifiedNameList();
		EnterRule("qualifiedNameList", 37);
		var retval = new Antlr3AstNode("qualifiedNameList");
		
		retval.Start = (IToken)input.LT(1);
		int qualifiedNameList_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal188 = default(IToken);
		Antlr3AstNode qualifiedName187 = default(Antlr3AstNode);
		Antlr3AstNode qualifiedName189 = default(Antlr3AstNode);

		object char_literal188_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "qualifiedNameList");
		DebugLocation(658, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 37)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:659:5: ( qualifiedName ( ',' qualifiedName )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:659:9: qualifiedName ( ',' qualifiedName )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(659, 9);
			PushFollow(Follow._qualifiedName_in_qualifiedNameList3025);
			qualifiedName187=qualifiedName();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedName187.Tree, qualifiedName187, retval);
			DebugLocation(660, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:660:9: ( ',' qualifiedName )*
			try { DebugEnterSubRule(68);
			while (true)
			{
				int alt68=2;
				try { DebugEnterDecision(68, false);
				int LA68_1 = input.LA(1);

				if ((LA68_1==COMMA))
				{
					alt68 = 1;
				}


				} finally { DebugExitDecision(68); }
				switch ( alt68 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:660:10: ',' qualifiedName
					{
					DebugLocation(660, 10);
					char_literal188=(IToken)Match(input,COMMA,Follow._COMMA_in_qualifiedNameList3036); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal188_tree = (object)adaptor.Create(char_literal188, retval);
					adaptor.AddChild(root_0, char_literal188_tree);
					}
					DebugLocation(660, 14);
					PushFollow(Follow._qualifiedName_in_qualifiedNameList3038);
					qualifiedName189=qualifiedName();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedName189.Tree, qualifiedName189, retval);

					}
					break;

				default:
					goto loop68;
				}
			}

			loop68:
				;

			} finally { DebugExitSubRule(68); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("qualifiedNameList", 37);
			LeaveRule("qualifiedNameList", 37);
			LeaveRule_qualifiedNameList();
			if (state.backtracking > 0) { Memoize(input, 37, qualifiedNameList_StartIndex); }

		}
		DebugLocation(662, 4);
		} finally { DebugExitRule(GrammarFileName, "qualifiedNameList"); }
		return retval;

	}
	// $ANTLR end "qualifiedNameList"

	partial void EnterRule_formalParameters();
	partial void LeaveRule_formalParameters();
	// $ANTLR start "formalParameters"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:664:1: formalParameters : '(' ( formalParameterDecls )? ')' ;
	[GrammarRule("formalParameters")]
	private Antlr3AstNode formalParameters()
	{
		EnterRule_formalParameters();
		EnterRule("formalParameters", 38);
		var retval = new Antlr3AstNode("formalParameters");
		
		retval.Start = (IToken)input.LT(1);
		int formalParameters_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal190 = default(IToken);
		IToken char_literal192 = default(IToken);
		Antlr3AstNode formalParameterDecls191 = default(Antlr3AstNode);

		object char_literal190_tree = default(object);
		object char_literal192_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "formalParameters");
		DebugLocation(664, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 38)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:665:5: ( '(' ( formalParameterDecls )? ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:665:9: '(' ( formalParameterDecls )? ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(665, 9);
			char_literal190=(IToken)Match(input,LPAREN,Follow._LPAREN_in_formalParameters3069); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal190_tree = (object)adaptor.Create(char_literal190, retval);
			adaptor.AddChild(root_0, char_literal190_tree);
			}
			DebugLocation(666, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:666:9: ( formalParameterDecls )?
			int alt69=2;
			try { DebugEnterSubRule(69);
			try { DebugEnterDecision(69, false);
			int LA69_1 = input.LA(1);

			if ((LA69_1==BOOLEAN||LA69_1==BYTE||LA69_1==CHAR||LA69_1==DOUBLE||LA69_1==FINAL||LA69_1==FLOAT||LA69_1==IDENTIFIER||LA69_1==INT||LA69_1==LONG||LA69_1==MONKEYS_AT||LA69_1==SHORT))
			{
				alt69 = 1;
			}
			} finally { DebugExitDecision(69); }
			switch (alt69)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:666:10: formalParameterDecls
				{
				DebugLocation(666, 10);
				PushFollow(Follow._formalParameterDecls_in_formalParameters3080);
				formalParameterDecls191=formalParameterDecls();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, formalParameterDecls191.Tree, formalParameterDecls191, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(69); }

			DebugLocation(668, 9);
			char_literal192=(IToken)Match(input,RPAREN,Follow._RPAREN_in_formalParameters3102); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal192_tree = (object)adaptor.Create(char_literal192, retval);
			adaptor.AddChild(root_0, char_literal192_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("formalParameters", 38);
			LeaveRule("formalParameters", 38);
			LeaveRule_formalParameters();
			if (state.backtracking > 0) { Memoize(input, 38, formalParameters_StartIndex); }

		}
		DebugLocation(669, 4);
		} finally { DebugExitRule(GrammarFileName, "formalParameters"); }
		return retval;

	}
	// $ANTLR end "formalParameters"

	partial void EnterRule_formalParameterDecls();
	partial void LeaveRule_formalParameterDecls();
	// $ANTLR start "formalParameterDecls"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:671:1: formalParameterDecls : ( ellipsisParameterDecl | normalParameterDecl ( ',' normalParameterDecl )* | ( normalParameterDecl ',' )+ ellipsisParameterDecl );
	[GrammarRule("formalParameterDecls")]
	private Antlr3AstNode formalParameterDecls()
	{
		EnterRule_formalParameterDecls();
		EnterRule("formalParameterDecls", 39);
		var retval = new Antlr3AstNode("formalParameterDecls");
		
		retval.Start = (IToken)input.LT(1);
		int formalParameterDecls_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal195 = default(IToken);
		IToken char_literal198 = default(IToken);
		Antlr3AstNode ellipsisParameterDecl193 = default(Antlr3AstNode);
		Antlr3AstNode normalParameterDecl194 = default(Antlr3AstNode);
		Antlr3AstNode normalParameterDecl196 = default(Antlr3AstNode);
		Antlr3AstNode normalParameterDecl197 = default(Antlr3AstNode);
		Antlr3AstNode ellipsisParameterDecl199 = default(Antlr3AstNode);

		object char_literal195_tree = default(object);
		object char_literal198_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "formalParameterDecls");
		DebugLocation(671, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 39)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:672:5: ( ellipsisParameterDecl | normalParameterDecl ( ',' normalParameterDecl )* | ( normalParameterDecl ',' )+ ellipsisParameterDecl )
			int alt72=3;
			try { DebugEnterDecision(72, false);
			switch (input.LA(1))
			{
			case FINAL:
				{
				int LA72_2 = input.LA(2);

				if ((EvaluatePredicate(synpred96_Java_fragment)))
				{
					alt72 = 1;
				}
				else if ((EvaluatePredicate(synpred98_Java_fragment)))
				{
					alt72 = 2;
				}
				else if ((true))
				{
					alt72 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 72, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case MONKEYS_AT:
				{
				int LA72_2 = input.LA(2);

				if ((EvaluatePredicate(synpred96_Java_fragment)))
				{
					alt72 = 1;
				}
				else if ((EvaluatePredicate(synpred98_Java_fragment)))
				{
					alt72 = 2;
				}
				else if ((true))
				{
					alt72 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 72, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case IDENTIFIER:
				{
				int LA72_2 = input.LA(2);

				if ((EvaluatePredicate(synpred96_Java_fragment)))
				{
					alt72 = 1;
				}
				else if ((EvaluatePredicate(synpred98_Java_fragment)))
				{
					alt72 = 2;
				}
				else if ((true))
				{
					alt72 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 72, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
				{
				int LA72_2 = input.LA(2);

				if ((EvaluatePredicate(synpred96_Java_fragment)))
				{
					alt72 = 1;
				}
				else if ((EvaluatePredicate(synpred98_Java_fragment)))
				{
					alt72 = 2;
				}
				else if ((true))
				{
					alt72 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 72, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 72, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(72); }
			switch (alt72)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:672:9: ellipsisParameterDecl
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(672, 9);
				PushFollow(Follow._ellipsisParameterDecl_in_formalParameterDecls3122);
				ellipsisParameterDecl193=ellipsisParameterDecl();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, ellipsisParameterDecl193.Tree, ellipsisParameterDecl193, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:673:9: normalParameterDecl ( ',' normalParameterDecl )*
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(673, 9);
				PushFollow(Follow._normalParameterDecl_in_formalParameterDecls3132);
				normalParameterDecl194=normalParameterDecl();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, normalParameterDecl194.Tree, normalParameterDecl194, retval);
				DebugLocation(674, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:674:9: ( ',' normalParameterDecl )*
				try { DebugEnterSubRule(70);
				while (true)
				{
					int alt70=2;
					try { DebugEnterDecision(70, false);
					int LA70_1 = input.LA(1);

					if ((LA70_1==COMMA))
					{
						alt70 = 1;
					}


					} finally { DebugExitDecision(70); }
					switch ( alt70 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:674:10: ',' normalParameterDecl
						{
						DebugLocation(674, 10);
						char_literal195=(IToken)Match(input,COMMA,Follow._COMMA_in_formalParameterDecls3143); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal195_tree = (object)adaptor.Create(char_literal195, retval);
						adaptor.AddChild(root_0, char_literal195_tree);
						}
						DebugLocation(674, 14);
						PushFollow(Follow._normalParameterDecl_in_formalParameterDecls3145);
						normalParameterDecl196=normalParameterDecl();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, normalParameterDecl196.Tree, normalParameterDecl196, retval);

						}
						break;

					default:
						goto loop70;
					}
				}

				loop70:
					;

				} finally { DebugExitSubRule(70); }


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:676:9: ( normalParameterDecl ',' )+ ellipsisParameterDecl
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(676, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:676:9: ( normalParameterDecl ',' )+
				int cnt71=0;
				try { DebugEnterSubRule(71);
				while (true)
				{
					int alt71=2;
					try { DebugEnterDecision(71, false);
					switch (input.LA(1))
					{
					case FINAL:
						{
						int LA71_2 = input.LA(2);

						if ((EvaluatePredicate(synpred99_Java_fragment)))
						{
							alt71 = 1;
						}


						}
						break;
					case MONKEYS_AT:
						{
						int LA71_2 = input.LA(2);

						if ((EvaluatePredicate(synpred99_Java_fragment)))
						{
							alt71 = 1;
						}


						}
						break;
					case IDENTIFIER:
						{
						int LA71_2 = input.LA(2);

						if ((EvaluatePredicate(synpred99_Java_fragment)))
						{
							alt71 = 1;
						}


						}
						break;
					case BOOLEAN:
					case BYTE:
					case CHAR:
					case DOUBLE:
					case FLOAT:
					case INT:
					case LONG:
					case SHORT:
						{
						int LA71_2 = input.LA(2);

						if ((EvaluatePredicate(synpred99_Java_fragment)))
						{
							alt71 = 1;
						}


						}
						break;
					}

					} finally { DebugExitDecision(71); }
					switch (alt71)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:676:10: normalParameterDecl ','
						{
						DebugLocation(676, 10);
						PushFollow(Follow._normalParameterDecl_in_formalParameterDecls3167);
						normalParameterDecl197=normalParameterDecl();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, normalParameterDecl197.Tree, normalParameterDecl197, retval);
						DebugLocation(677, 9);
						char_literal198=(IToken)Match(input,COMMA,Follow._COMMA_in_formalParameterDecls3177); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal198_tree = (object)adaptor.Create(char_literal198, retval);
						adaptor.AddChild(root_0, char_literal198_tree);
						}

						}
						break;

					default:
						if (cnt71 >= 1)
							goto loop71;

						if (state.backtracking>0) {state.failed=true; return retval;}
						EarlyExitException eee71 = new EarlyExitException( 71, input );
						DebugRecognitionException(eee71);
						throw eee71;
					}
					cnt71++;
				}
				loop71:
					;

				} finally { DebugExitSubRule(71); }

				DebugLocation(679, 9);
				PushFollow(Follow._ellipsisParameterDecl_in_formalParameterDecls3199);
				ellipsisParameterDecl199=ellipsisParameterDecl();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, ellipsisParameterDecl199.Tree, ellipsisParameterDecl199, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("formalParameterDecls", 39);
			LeaveRule("formalParameterDecls", 39);
			LeaveRule_formalParameterDecls();
			if (state.backtracking > 0) { Memoize(input, 39, formalParameterDecls_StartIndex); }

		}
		DebugLocation(680, 4);
		} finally { DebugExitRule(GrammarFileName, "formalParameterDecls"); }
		return retval;

	}
	// $ANTLR end "formalParameterDecls"

	partial void EnterRule_normalParameterDecl();
	partial void LeaveRule_normalParameterDecl();
	// $ANTLR start "normalParameterDecl"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:682:1: normalParameterDecl : variableModifiers type IDENTIFIER ( '[' ']' )* ;
	[GrammarRule("normalParameterDecl")]
	private Antlr3AstNode normalParameterDecl()
	{
		EnterRule_normalParameterDecl();
		EnterRule("normalParameterDecl", 40);
		var retval = new Antlr3AstNode("normalParameterDecl");
		
		retval.Start = (IToken)input.LT(1);
		int normalParameterDecl_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER202 = default(IToken);
		IToken char_literal203 = default(IToken);
		IToken char_literal204 = default(IToken);
		Antlr3AstNode variableModifiers200 = default(Antlr3AstNode);
		Antlr3AstNode type201 = default(Antlr3AstNode);

		object IDENTIFIER202_tree = default(object);
		object char_literal203_tree = default(object);
		object char_literal204_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "normalParameterDecl");
		DebugLocation(682, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 40)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:683:5: ( variableModifiers type IDENTIFIER ( '[' ']' )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:683:9: variableModifiers type IDENTIFIER ( '[' ']' )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(683, 9);
			PushFollow(Follow._variableModifiers_in_normalParameterDecl3219);
			variableModifiers200=variableModifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableModifiers200.Tree, variableModifiers200, retval);
			DebugLocation(683, 27);
			PushFollow(Follow._type_in_normalParameterDecl3221);
			type201=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type201.Tree, type201, retval);
			DebugLocation(683, 32);
			IDENTIFIER202=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_normalParameterDecl3223); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER202_tree = (object)adaptor.Create(IDENTIFIER202, retval);
			adaptor.AddChild(root_0, IDENTIFIER202_tree);
			}
			DebugLocation(684, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:684:9: ( '[' ']' )*
			try { DebugEnterSubRule(73);
			while (true)
			{
				int alt73=2;
				try { DebugEnterDecision(73, false);
				int LA73_1 = input.LA(1);

				if ((LA73_1==LBRACKET))
				{
					alt73 = 1;
				}


				} finally { DebugExitDecision(73); }
				switch ( alt73 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:684:10: '[' ']'
					{
					DebugLocation(684, 10);
					char_literal203=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_normalParameterDecl3234); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal203_tree = (object)adaptor.Create(char_literal203, retval);
					adaptor.AddChild(root_0, char_literal203_tree);
					}
					DebugLocation(684, 14);
					char_literal204=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_normalParameterDecl3236); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal204_tree = (object)adaptor.Create(char_literal204, retval);
					adaptor.AddChild(root_0, char_literal204_tree);
					}

					}
					break;

				default:
					goto loop73;
				}
			}

			loop73:
				;

			} finally { DebugExitSubRule(73); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("normalParameterDecl", 40);
			LeaveRule("normalParameterDecl", 40);
			LeaveRule_normalParameterDecl();
			if (state.backtracking > 0) { Memoize(input, 40, normalParameterDecl_StartIndex); }

		}
		DebugLocation(686, 4);
		} finally { DebugExitRule(GrammarFileName, "normalParameterDecl"); }
		return retval;

	}
	// $ANTLR end "normalParameterDecl"

	partial void EnterRule_ellipsisParameterDecl();
	partial void LeaveRule_ellipsisParameterDecl();
	// $ANTLR start "ellipsisParameterDecl"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:688:1: ellipsisParameterDecl : variableModifiers type '...' IDENTIFIER ;
	[GrammarRule("ellipsisParameterDecl")]
	private Antlr3AstNode ellipsisParameterDecl()
	{
		EnterRule_ellipsisParameterDecl();
		EnterRule("ellipsisParameterDecl", 41);
		var retval = new Antlr3AstNode("ellipsisParameterDecl");
		
		retval.Start = (IToken)input.LT(1);
		int ellipsisParameterDecl_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal207 = default(IToken);
		IToken IDENTIFIER208 = default(IToken);
		Antlr3AstNode variableModifiers205 = default(Antlr3AstNode);
		Antlr3AstNode type206 = default(Antlr3AstNode);

		object string_literal207_tree = default(object);
		object IDENTIFIER208_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "ellipsisParameterDecl");
		DebugLocation(688, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 41)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:689:5: ( variableModifiers type '...' IDENTIFIER )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:689:9: variableModifiers type '...' IDENTIFIER
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(689, 9);
			PushFollow(Follow._variableModifiers_in_ellipsisParameterDecl3267);
			variableModifiers205=variableModifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableModifiers205.Tree, variableModifiers205, retval);
			DebugLocation(690, 9);
			PushFollow(Follow._type_in_ellipsisParameterDecl3277);
			type206=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type206.Tree, type206, retval);
			DebugLocation(690, 15);
			string_literal207=(IToken)Match(input,ELLIPSIS,Follow._ELLIPSIS_in_ellipsisParameterDecl3280); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal207_tree = (object)adaptor.Create(string_literal207, retval);
			adaptor.AddChild(root_0, string_literal207_tree);
			}
			DebugLocation(691, 9);
			IDENTIFIER208=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_ellipsisParameterDecl3290); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER208_tree = (object)adaptor.Create(IDENTIFIER208, retval);
			adaptor.AddChild(root_0, IDENTIFIER208_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("ellipsisParameterDecl", 41);
			LeaveRule("ellipsisParameterDecl", 41);
			LeaveRule_ellipsisParameterDecl();
			if (state.backtracking > 0) { Memoize(input, 41, ellipsisParameterDecl_StartIndex); }

		}
		DebugLocation(692, 4);
		} finally { DebugExitRule(GrammarFileName, "ellipsisParameterDecl"); }
		return retval;

	}
	// $ANTLR end "ellipsisParameterDecl"

	partial void EnterRule_explicitConstructorInvocation();
	partial void LeaveRule_explicitConstructorInvocation();
	// $ANTLR start "explicitConstructorInvocation"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:695:1: explicitConstructorInvocation : ( ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';' | primary '.' ( nonWildcardTypeArguments )? 'super' arguments ';' );
	[GrammarRule("explicitConstructorInvocation")]
	private Antlr3AstNode explicitConstructorInvocation()
	{
		EnterRule_explicitConstructorInvocation();
		EnterRule("explicitConstructorInvocation", 42);
		var retval = new Antlr3AstNode("explicitConstructorInvocation");
		
		retval.Start = (IToken)input.LT(1);
		int explicitConstructorInvocation_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set210 = default(IToken);
		IToken char_literal212 = default(IToken);
		IToken char_literal214 = default(IToken);
		IToken string_literal216 = default(IToken);
		IToken char_literal218 = default(IToken);
		Antlr3AstNode nonWildcardTypeArguments209 = default(Antlr3AstNode);
		Antlr3AstNode arguments211 = default(Antlr3AstNode);
		Antlr3AstNode primary213 = default(Antlr3AstNode);
		Antlr3AstNode nonWildcardTypeArguments215 = default(Antlr3AstNode);
		Antlr3AstNode arguments217 = default(Antlr3AstNode);

		object set210_tree = default(object);
		object char_literal212_tree = default(object);
		object char_literal214_tree = default(object);
		object string_literal216_tree = default(object);
		object char_literal218_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "explicitConstructorInvocation");
		DebugLocation(695, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 42)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:696:5: ( ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';' | primary '.' ( nonWildcardTypeArguments )? 'super' arguments ';' )
			int alt76=2;
			try { DebugEnterDecision(76, false);
			switch (input.LA(1))
			{
			case LT:
				{
				alt76 = 1;
				}
				break;
			case THIS:
				{
				int LA76_2 = input.LA(2);

				if ((EvaluatePredicate(synpred103_Java_fragment)))
				{
					alt76 = 1;
				}
				else if ((true))
				{
					alt76 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 76, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case CHARLITERAL:
			case DOUBLE:
			case DOUBLELITERAL:
			case FALSE:
			case FLOAT:
			case FLOATLITERAL:
			case IDENTIFIER:
			case INT:
			case INTLITERAL:
			case LONG:
			case LONGLITERAL:
			case LPAREN:
			case NEW:
			case NULL:
			case SHORT:
			case STRINGLITERAL:
			case TRUE:
			case VOID:
				{
				alt76 = 2;
				}
				break;
			case SUPER:
				{
				int LA76_2 = input.LA(2);

				if ((EvaluatePredicate(synpred103_Java_fragment)))
				{
					alt76 = 1;
				}
				else if ((true))
				{
					alt76 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 76, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 76, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(76); }
			switch (alt76)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:696:9: ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(696, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:696:9: ( nonWildcardTypeArguments )?
				int alt74=2;
				try { DebugEnterSubRule(74);
				try { DebugEnterDecision(74, false);
				int LA74_1 = input.LA(1);

				if ((LA74_1==LT))
				{
					alt74 = 1;
				}
				} finally { DebugExitDecision(74); }
				switch (alt74)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:696:10: nonWildcardTypeArguments
					{
					DebugLocation(696, 10);
					PushFollow(Follow._nonWildcardTypeArguments_in_explicitConstructorInvocation3312);
					nonWildcardTypeArguments209=nonWildcardTypeArguments();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, nonWildcardTypeArguments209.Tree, nonWildcardTypeArguments209, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(74); }

				DebugLocation(698, 9);

				set210=(IToken)input.LT(1);
				if (input.LA(1)==SUPER||input.LA(1)==THIS)
				{
					input.Consume();
					if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set210, retval));
					state.errorRecovery=false;state.failed=false;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					DebugRecognitionException(mse);
					throw mse;
				}

				DebugLocation(701, 9);
				PushFollow(Follow._arguments_in_explicitConstructorInvocation3370);
				arguments211=arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arguments211.Tree, arguments211, retval);
				DebugLocation(701, 19);
				char_literal212=(IToken)Match(input,SEMI,Follow._SEMI_in_explicitConstructorInvocation3372); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal212_tree = (object)adaptor.Create(char_literal212, retval);
				adaptor.AddChild(root_0, char_literal212_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:703:9: primary '.' ( nonWildcardTypeArguments )? 'super' arguments ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(703, 9);
				PushFollow(Follow._primary_in_explicitConstructorInvocation3383);
				primary213=primary();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primary213.Tree, primary213, retval);
				DebugLocation(704, 9);
				char_literal214=(IToken)Match(input,DOT,Follow._DOT_in_explicitConstructorInvocation3393); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal214_tree = (object)adaptor.Create(char_literal214, retval);
				adaptor.AddChild(root_0, char_literal214_tree);
				}
				DebugLocation(705, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:705:9: ( nonWildcardTypeArguments )?
				int alt75=2;
				try { DebugEnterSubRule(75);
				try { DebugEnterDecision(75, false);
				int LA75_1 = input.LA(1);

				if ((LA75_1==LT))
				{
					alt75 = 1;
				}
				} finally { DebugExitDecision(75); }
				switch (alt75)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:705:10: nonWildcardTypeArguments
					{
					DebugLocation(705, 10);
					PushFollow(Follow._nonWildcardTypeArguments_in_explicitConstructorInvocation3404);
					nonWildcardTypeArguments215=nonWildcardTypeArguments();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, nonWildcardTypeArguments215.Tree, nonWildcardTypeArguments215, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(75); }

				DebugLocation(707, 9);
				string_literal216=(IToken)Match(input,SUPER,Follow._SUPER_in_explicitConstructorInvocation3425); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal216_tree = (object)adaptor.Create(string_literal216, retval);
				adaptor.AddChild(root_0, string_literal216_tree);
				}
				DebugLocation(708, 9);
				PushFollow(Follow._arguments_in_explicitConstructorInvocation3435);
				arguments217=arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arguments217.Tree, arguments217, retval);
				DebugLocation(708, 19);
				char_literal218=(IToken)Match(input,SEMI,Follow._SEMI_in_explicitConstructorInvocation3437); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal218_tree = (object)adaptor.Create(char_literal218, retval);
				adaptor.AddChild(root_0, char_literal218_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("explicitConstructorInvocation", 42);
			LeaveRule("explicitConstructorInvocation", 42);
			LeaveRule_explicitConstructorInvocation();
			if (state.backtracking > 0) { Memoize(input, 42, explicitConstructorInvocation_StartIndex); }

		}
		DebugLocation(709, 4);
		} finally { DebugExitRule(GrammarFileName, "explicitConstructorInvocation"); }
		return retval;

	}
	// $ANTLR end "explicitConstructorInvocation"

	partial void EnterRule_qualifiedName();
	partial void LeaveRule_qualifiedName();
	// $ANTLR start "qualifiedName"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:711:1: qualifiedName : IDENTIFIER ( '.' IDENTIFIER )* ;
	[GrammarRule("qualifiedName")]
	private Antlr3AstNode qualifiedName()
	{
		EnterRule_qualifiedName();
		EnterRule("qualifiedName", 43);
		var retval = new Antlr3AstNode("qualifiedName");
		
		retval.Start = (IToken)input.LT(1);
		int qualifiedName_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER219 = default(IToken);
		IToken char_literal220 = default(IToken);
		IToken IDENTIFIER221 = default(IToken);

		object IDENTIFIER219_tree = default(object);
		object char_literal220_tree = default(object);
		object IDENTIFIER221_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "qualifiedName");
		DebugLocation(711, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 43)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:712:5: ( IDENTIFIER ( '.' IDENTIFIER )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:712:9: IDENTIFIER ( '.' IDENTIFIER )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(712, 9);
			IDENTIFIER219=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_qualifiedName3457); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER219_tree = (object)adaptor.Create(IDENTIFIER219, retval);
			adaptor.AddChild(root_0, IDENTIFIER219_tree);
			}
			DebugLocation(713, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:713:9: ( '.' IDENTIFIER )*
			try { DebugEnterSubRule(77);
			while (true)
			{
				int alt77=2;
				try { DebugEnterDecision(77, false);
				int LA77_1 = input.LA(1);

				if ((LA77_1==DOT))
				{
					alt77 = 1;
				}


				} finally { DebugExitDecision(77); }
				switch ( alt77 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:713:10: '.' IDENTIFIER
					{
					DebugLocation(713, 10);
					char_literal220=(IToken)Match(input,DOT,Follow._DOT_in_qualifiedName3468); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal220_tree = (object)adaptor.Create(char_literal220, retval);
					adaptor.AddChild(root_0, char_literal220_tree);
					}
					DebugLocation(713, 14);
					IDENTIFIER221=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_qualifiedName3470); if (state.failed) return retval;
					if (state.backtracking == 0) {
					IDENTIFIER221_tree = (object)adaptor.Create(IDENTIFIER221, retval);
					adaptor.AddChild(root_0, IDENTIFIER221_tree);
					}

					}
					break;

				default:
					goto loop77;
				}
			}

			loop77:
				;

			} finally { DebugExitSubRule(77); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("qualifiedName", 43);
			LeaveRule("qualifiedName", 43);
			LeaveRule_qualifiedName();
			if (state.backtracking > 0) { Memoize(input, 43, qualifiedName_StartIndex); }

		}
		DebugLocation(715, 4);
		} finally { DebugExitRule(GrammarFileName, "qualifiedName"); }
		return retval;

	}
	// $ANTLR end "qualifiedName"

	partial void EnterRule_annotations();
	partial void LeaveRule_annotations();
	// $ANTLR start "annotations"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:717:1: annotations : ( annotation )+ ;
	[GrammarRule("annotations")]
	private Antlr3AstNode annotations()
	{
		EnterRule_annotations();
		EnterRule("annotations", 44);
		var retval = new Antlr3AstNode("annotations");
		
		retval.Start = (IToken)input.LT(1);
		int annotations_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode annotation222 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "annotations");
		DebugLocation(717, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 44)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:718:5: ( ( annotation )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:718:9: ( annotation )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(718, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:718:9: ( annotation )+
			int cnt78=0;
			try { DebugEnterSubRule(78);
			while (true)
			{
				int alt78=2;
				try { DebugEnterDecision(78, false);
				int LA78_1 = input.LA(1);

				if ((LA78_1==MONKEYS_AT))
				{
					alt78 = 1;
				}


				} finally { DebugExitDecision(78); }
				switch (alt78)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:718:10: annotation
					{
					DebugLocation(718, 10);
					PushFollow(Follow._annotation_in_annotations3502);
					annotation222=annotation();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, annotation222.Tree, annotation222, retval);

					}
					break;

				default:
					if (cnt78 >= 1)
						goto loop78;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee78 = new EarlyExitException( 78, input );
					DebugRecognitionException(eee78);
					throw eee78;
				}
				cnt78++;
			}
			loop78:
				;

			} finally { DebugExitSubRule(78); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("annotations", 44);
			LeaveRule("annotations", 44);
			LeaveRule_annotations();
			if (state.backtracking > 0) { Memoize(input, 44, annotations_StartIndex); }

		}
		DebugLocation(720, 4);
		} finally { DebugExitRule(GrammarFileName, "annotations"); }
		return retval;

	}
	// $ANTLR end "annotations"

	partial void EnterRule_annotation();
	partial void LeaveRule_annotation();
	// $ANTLR start "annotation"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:726:1: annotation : '@' qualifiedName ( '(' ( elementValuePairs | elementValue )? ')' )? ;
	[GrammarRule("annotation")]
	private Antlr3AstNode annotation()
	{
		EnterRule_annotation();
		EnterRule("annotation", 45);
		var retval = new Antlr3AstNode("annotation");
		
		retval.Start = (IToken)input.LT(1);
		int annotation_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal223 = default(IToken);
		IToken char_literal225 = default(IToken);
		IToken char_literal228 = default(IToken);
		Antlr3AstNode qualifiedName224 = default(Antlr3AstNode);
		Antlr3AstNode elementValuePairs226 = default(Antlr3AstNode);
		Antlr3AstNode elementValue227 = default(Antlr3AstNode);

		object char_literal223_tree = default(object);
		object char_literal225_tree = default(object);
		object char_literal228_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "annotation");
		DebugLocation(726, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 45)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:727:5: ( '@' qualifiedName ( '(' ( elementValuePairs | elementValue )? ')' )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:727:9: '@' qualifiedName ( '(' ( elementValuePairs | elementValue )? ')' )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(727, 9);
			char_literal223=(IToken)Match(input,MONKEYS_AT,Follow._MONKEYS_AT_in_annotation3535); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal223_tree = (object)adaptor.Create(char_literal223, retval);
			adaptor.AddChild(root_0, char_literal223_tree);
			}
			DebugLocation(727, 13);
			PushFollow(Follow._qualifiedName_in_annotation3537);
			qualifiedName224=qualifiedName();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedName224.Tree, qualifiedName224, retval);
			DebugLocation(728, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:728:9: ( '(' ( elementValuePairs | elementValue )? ')' )?
			int alt80=2;
			try { DebugEnterSubRule(80);
			try { DebugEnterDecision(80, false);
			int LA80_1 = input.LA(1);

			if ((LA80_1==LPAREN))
			{
				alt80 = 1;
			}
			} finally { DebugExitDecision(80); }
			switch (alt80)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:728:13: '(' ( elementValuePairs | elementValue )? ')'
				{
				DebugLocation(728, 13);
				char_literal225=(IToken)Match(input,LPAREN,Follow._LPAREN_in_annotation3551); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal225_tree = (object)adaptor.Create(char_literal225, retval);
				adaptor.AddChild(root_0, char_literal225_tree);
				}
				DebugLocation(729, 19);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:729:19: ( elementValuePairs | elementValue )?
				int alt79=3;
				try { DebugEnterSubRule(79);
				try { DebugEnterDecision(79, false);
				int LA79_1 = input.LA(1);

				if ((LA79_1==IDENTIFIER))
				{
					int LA79_2 = input.LA(2);

					if ((LA79_2==EQ))
					{
						alt79 = 1;
					}
					else if (((LA79_2>=AMP && LA79_2<=AMPAMP)||(LA79_2>=BANGEQ && LA79_2<=BARBAR)||LA79_2==CARET||LA79_2==DOT||LA79_2==EQEQ||LA79_2==GT||LA79_2==INSTANCEOF||LA79_2==LBRACKET||(LA79_2>=LPAREN && LA79_2<=LT)||LA79_2==PERCENT||LA79_2==PLUS||LA79_2==PLUSPLUS||LA79_2==QUES||LA79_2==RPAREN||LA79_2==SLASH||LA79_2==STAR||LA79_2==SUB||LA79_2==SUBSUB))
					{
						alt79 = 2;
					}
				}
				else if ((LA79_1==BANG||LA79_1==BOOLEAN||LA79_1==BYTE||(LA79_1>=CHAR && LA79_1<=CHARLITERAL)||(LA79_1>=DOUBLE && LA79_1<=DOUBLELITERAL)||LA79_1==FALSE||(LA79_1>=FLOAT && LA79_1<=FLOATLITERAL)||LA79_1==INT||LA79_1==INTLITERAL||LA79_1==LBRACE||(LA79_1>=LONG && LA79_1<=LPAREN)||LA79_1==MONKEYS_AT||(LA79_1>=NEW && LA79_1<=NULL)||LA79_1==PLUS||LA79_1==PLUSPLUS||LA79_1==SHORT||(LA79_1>=STRINGLITERAL && LA79_1<=SUB)||(LA79_1>=SUBSUB && LA79_1<=SUPER)||LA79_1==THIS||LA79_1==TILDE||LA79_1==TRUE||LA79_1==VOID))
				{
					alt79 = 2;
				}
				} finally { DebugExitDecision(79); }
				switch (alt79)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:729:23: elementValuePairs
					{
					DebugLocation(729, 23);
					PushFollow(Follow._elementValuePairs_in_annotation3578);
					elementValuePairs226=elementValuePairs();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, elementValuePairs226.Tree, elementValuePairs226, retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:730:23: elementValue
					{
					DebugLocation(730, 23);
					PushFollow(Follow._elementValue_in_annotation3602);
					elementValue227=elementValue();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, elementValue227.Tree, elementValue227, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(79); }

				DebugLocation(732, 13);
				char_literal228=(IToken)Match(input,RPAREN,Follow._RPAREN_in_annotation3638); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal228_tree = (object)adaptor.Create(char_literal228, retval);
				adaptor.AddChild(root_0, char_literal228_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(80); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("annotation", 45);
			LeaveRule("annotation", 45);
			LeaveRule_annotation();
			if (state.backtracking > 0) { Memoize(input, 45, annotation_StartIndex); }

		}
		DebugLocation(734, 4);
		} finally { DebugExitRule(GrammarFileName, "annotation"); }
		return retval;

	}
	// $ANTLR end "annotation"

	partial void EnterRule_elementValuePairs();
	partial void LeaveRule_elementValuePairs();
	// $ANTLR start "elementValuePairs"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:736:1: elementValuePairs : elementValuePair ( ',' elementValuePair )* ;
	[GrammarRule("elementValuePairs")]
	private Antlr3AstNode elementValuePairs()
	{
		EnterRule_elementValuePairs();
		EnterRule("elementValuePairs", 46);
		var retval = new Antlr3AstNode("elementValuePairs");
		
		retval.Start = (IToken)input.LT(1);
		int elementValuePairs_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal230 = default(IToken);
		Antlr3AstNode elementValuePair229 = default(Antlr3AstNode);
		Antlr3AstNode elementValuePair231 = default(Antlr3AstNode);

		object char_literal230_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "elementValuePairs");
		DebugLocation(736, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 46)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:737:5: ( elementValuePair ( ',' elementValuePair )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:737:9: elementValuePair ( ',' elementValuePair )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(737, 9);
			PushFollow(Follow._elementValuePair_in_elementValuePairs3670);
			elementValuePair229=elementValuePair();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, elementValuePair229.Tree, elementValuePair229, retval);
			DebugLocation(738, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:738:9: ( ',' elementValuePair )*
			try { DebugEnterSubRule(81);
			while (true)
			{
				int alt81=2;
				try { DebugEnterDecision(81, false);
				int LA81_1 = input.LA(1);

				if ((LA81_1==COMMA))
				{
					alt81 = 1;
				}


				} finally { DebugExitDecision(81); }
				switch ( alt81 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:738:10: ',' elementValuePair
					{
					DebugLocation(738, 10);
					char_literal230=(IToken)Match(input,COMMA,Follow._COMMA_in_elementValuePairs3681); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal230_tree = (object)adaptor.Create(char_literal230, retval);
					adaptor.AddChild(root_0, char_literal230_tree);
					}
					DebugLocation(738, 14);
					PushFollow(Follow._elementValuePair_in_elementValuePairs3683);
					elementValuePair231=elementValuePair();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, elementValuePair231.Tree, elementValuePair231, retval);

					}
					break;

				default:
					goto loop81;
				}
			}

			loop81:
				;

			} finally { DebugExitSubRule(81); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("elementValuePairs", 46);
			LeaveRule("elementValuePairs", 46);
			LeaveRule_elementValuePairs();
			if (state.backtracking > 0) { Memoize(input, 46, elementValuePairs_StartIndex); }

		}
		DebugLocation(740, 4);
		} finally { DebugExitRule(GrammarFileName, "elementValuePairs"); }
		return retval;

	}
	// $ANTLR end "elementValuePairs"

	partial void EnterRule_elementValuePair();
	partial void LeaveRule_elementValuePair();
	// $ANTLR start "elementValuePair"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:742:1: elementValuePair : IDENTIFIER '=' elementValue ;
	[GrammarRule("elementValuePair")]
	private Antlr3AstNode elementValuePair()
	{
		EnterRule_elementValuePair();
		EnterRule("elementValuePair", 47);
		var retval = new Antlr3AstNode("elementValuePair");
		
		retval.Start = (IToken)input.LT(1);
		int elementValuePair_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER232 = default(IToken);
		IToken char_literal233 = default(IToken);
		Antlr3AstNode elementValue234 = default(Antlr3AstNode);

		object IDENTIFIER232_tree = default(object);
		object char_literal233_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "elementValuePair");
		DebugLocation(742, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 47)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:743:5: ( IDENTIFIER '=' elementValue )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:743:9: IDENTIFIER '=' elementValue
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(743, 9);
			IDENTIFIER232=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_elementValuePair3714); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER232_tree = (object)adaptor.Create(IDENTIFIER232, retval);
			adaptor.AddChild(root_0, IDENTIFIER232_tree);
			}
			DebugLocation(743, 20);
			char_literal233=(IToken)Match(input,EQ,Follow._EQ_in_elementValuePair3716); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal233_tree = (object)adaptor.Create(char_literal233, retval);
			adaptor.AddChild(root_0, char_literal233_tree);
			}
			DebugLocation(743, 24);
			PushFollow(Follow._elementValue_in_elementValuePair3718);
			elementValue234=elementValue();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, elementValue234.Tree, elementValue234, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("elementValuePair", 47);
			LeaveRule("elementValuePair", 47);
			LeaveRule_elementValuePair();
			if (state.backtracking > 0) { Memoize(input, 47, elementValuePair_StartIndex); }

		}
		DebugLocation(744, 4);
		} finally { DebugExitRule(GrammarFileName, "elementValuePair"); }
		return retval;

	}
	// $ANTLR end "elementValuePair"

	partial void EnterRule_elementValue();
	partial void LeaveRule_elementValue();
	// $ANTLR start "elementValue"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:746:1: elementValue : ( conditionalExpression | annotation | elementValueArrayInitializer );
	[GrammarRule("elementValue")]
	private Antlr3AstNode elementValue()
	{
		EnterRule_elementValue();
		EnterRule("elementValue", 48);
		var retval = new Antlr3AstNode("elementValue");
		
		retval.Start = (IToken)input.LT(1);
		int elementValue_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode conditionalExpression235 = default(Antlr3AstNode);
		Antlr3AstNode annotation236 = default(Antlr3AstNode);
		Antlr3AstNode elementValueArrayInitializer237 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "elementValue");
		DebugLocation(746, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 48)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:747:5: ( conditionalExpression | annotation | elementValueArrayInitializer )
			int alt82=3;
			try { DebugEnterDecision(82, false);
			switch (input.LA(1))
			{
			case BANG:
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case CHARLITERAL:
			case DOUBLE:
			case DOUBLELITERAL:
			case FALSE:
			case FLOAT:
			case FLOATLITERAL:
			case IDENTIFIER:
			case INT:
			case INTLITERAL:
			case LONG:
			case LONGLITERAL:
			case LPAREN:
			case NEW:
			case NULL:
			case PLUS:
			case PLUSPLUS:
			case SHORT:
			case STRINGLITERAL:
			case SUB:
			case SUBSUB:
			case SUPER:
			case THIS:
			case TILDE:
			case TRUE:
			case VOID:
				{
				alt82 = 1;
				}
				break;
			case MONKEYS_AT:
				{
				alt82 = 2;
				}
				break;
			case LBRACE:
				{
				alt82 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 82, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(82); }
			switch (alt82)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:747:9: conditionalExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(747, 9);
				PushFollow(Follow._conditionalExpression_in_elementValue3738);
				conditionalExpression235=conditionalExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, conditionalExpression235.Tree, conditionalExpression235, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:748:9: annotation
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(748, 9);
				PushFollow(Follow._annotation_in_elementValue3748);
				annotation236=annotation();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, annotation236.Tree, annotation236, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:749:9: elementValueArrayInitializer
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(749, 9);
				PushFollow(Follow._elementValueArrayInitializer_in_elementValue3758);
				elementValueArrayInitializer237=elementValueArrayInitializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, elementValueArrayInitializer237.Tree, elementValueArrayInitializer237, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("elementValue", 48);
			LeaveRule("elementValue", 48);
			LeaveRule_elementValue();
			if (state.backtracking > 0) { Memoize(input, 48, elementValue_StartIndex); }

		}
		DebugLocation(750, 4);
		} finally { DebugExitRule(GrammarFileName, "elementValue"); }
		return retval;

	}
	// $ANTLR end "elementValue"

	partial void EnterRule_elementValueArrayInitializer();
	partial void LeaveRule_elementValueArrayInitializer();
	// $ANTLR start "elementValueArrayInitializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:752:1: elementValueArrayInitializer : '{' ( elementValue ( ',' elementValue )* )? ( ',' )? '}' ;
	[GrammarRule("elementValueArrayInitializer")]
	private Antlr3AstNode elementValueArrayInitializer()
	{
		EnterRule_elementValueArrayInitializer();
		EnterRule("elementValueArrayInitializer", 49);
		var retval = new Antlr3AstNode("elementValueArrayInitializer");
		
		retval.Start = (IToken)input.LT(1);
		int elementValueArrayInitializer_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal238 = default(IToken);
		IToken char_literal240 = default(IToken);
		IToken char_literal242 = default(IToken);
		IToken char_literal243 = default(IToken);
		Antlr3AstNode elementValue239 = default(Antlr3AstNode);
		Antlr3AstNode elementValue241 = default(Antlr3AstNode);

		object char_literal238_tree = default(object);
		object char_literal240_tree = default(object);
		object char_literal242_tree = default(object);
		object char_literal243_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "elementValueArrayInitializer");
		DebugLocation(752, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 49)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:753:5: ( '{' ( elementValue ( ',' elementValue )* )? ( ',' )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:753:9: '{' ( elementValue ( ',' elementValue )* )? ( ',' )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(753, 9);
			char_literal238=(IToken)Match(input,LBRACE,Follow._LBRACE_in_elementValueArrayInitializer3778); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal238_tree = (object)adaptor.Create(char_literal238, retval);
			adaptor.AddChild(root_0, char_literal238_tree);
			}
			DebugLocation(754, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:754:9: ( elementValue ( ',' elementValue )* )?
			int alt84=2;
			try { DebugEnterSubRule(84);
			try { DebugEnterDecision(84, false);
			int LA84_1 = input.LA(1);

			if ((LA84_1==BANG||LA84_1==BOOLEAN||LA84_1==BYTE||(LA84_1>=CHAR && LA84_1<=CHARLITERAL)||(LA84_1>=DOUBLE && LA84_1<=DOUBLELITERAL)||LA84_1==FALSE||(LA84_1>=FLOAT && LA84_1<=FLOATLITERAL)||LA84_1==IDENTIFIER||LA84_1==INT||LA84_1==INTLITERAL||LA84_1==LBRACE||(LA84_1>=LONG && LA84_1<=LPAREN)||LA84_1==MONKEYS_AT||(LA84_1>=NEW && LA84_1<=NULL)||LA84_1==PLUS||LA84_1==PLUSPLUS||LA84_1==SHORT||(LA84_1>=STRINGLITERAL && LA84_1<=SUB)||(LA84_1>=SUBSUB && LA84_1<=SUPER)||LA84_1==THIS||LA84_1==TILDE||LA84_1==TRUE||LA84_1==VOID))
			{
				alt84 = 1;
			}
			} finally { DebugExitDecision(84); }
			switch (alt84)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:754:10: elementValue ( ',' elementValue )*
				{
				DebugLocation(754, 10);
				PushFollow(Follow._elementValue_in_elementValueArrayInitializer3789);
				elementValue239=elementValue();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, elementValue239.Tree, elementValue239, retval);
				DebugLocation(755, 13);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:755:13: ( ',' elementValue )*
				try { DebugEnterSubRule(83);
				while (true)
				{
					int alt83=2;
					try { DebugEnterDecision(83, false);
					int LA83_1 = input.LA(1);

					if ((LA83_1==COMMA))
					{
						int LA83_2 = input.LA(2);

						if ((LA83_2==BANG||LA83_2==BOOLEAN||LA83_2==BYTE||(LA83_2>=CHAR && LA83_2<=CHARLITERAL)||(LA83_2>=DOUBLE && LA83_2<=DOUBLELITERAL)||LA83_2==FALSE||(LA83_2>=FLOAT && LA83_2<=FLOATLITERAL)||LA83_2==IDENTIFIER||LA83_2==INT||LA83_2==INTLITERAL||LA83_2==LBRACE||(LA83_2>=LONG && LA83_2<=LPAREN)||LA83_2==MONKEYS_AT||(LA83_2>=NEW && LA83_2<=NULL)||LA83_2==PLUS||LA83_2==PLUSPLUS||LA83_2==SHORT||(LA83_2>=STRINGLITERAL && LA83_2<=SUB)||(LA83_2>=SUBSUB && LA83_2<=SUPER)||LA83_2==THIS||LA83_2==TILDE||LA83_2==TRUE||LA83_2==VOID))
						{
							alt83 = 1;
						}


					}


					} finally { DebugExitDecision(83); }
					switch ( alt83 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:755:14: ',' elementValue
						{
						DebugLocation(755, 14);
						char_literal240=(IToken)Match(input,COMMA,Follow._COMMA_in_elementValueArrayInitializer3804); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal240_tree = (object)adaptor.Create(char_literal240, retval);
						adaptor.AddChild(root_0, char_literal240_tree);
						}
						DebugLocation(755, 18);
						PushFollow(Follow._elementValue_in_elementValueArrayInitializer3806);
						elementValue241=elementValue();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, elementValue241.Tree, elementValue241, retval);

						}
						break;

					default:
						goto loop83;
					}
				}

				loop83:
					;

				} finally { DebugExitSubRule(83); }


				}
				break;

			}
			} finally { DebugExitSubRule(84); }

			DebugLocation(757, 12);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:757:12: ( ',' )?
			int alt85=2;
			try { DebugEnterSubRule(85);
			try { DebugEnterDecision(85, false);
			int LA85_1 = input.LA(1);

			if ((LA85_1==COMMA))
			{
				alt85 = 1;
			}
			} finally { DebugExitDecision(85); }
			switch (alt85)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:757:13: ','
				{
				DebugLocation(757, 13);
				char_literal242=(IToken)Match(input,COMMA,Follow._COMMA_in_elementValueArrayInitializer3835); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal242_tree = (object)adaptor.Create(char_literal242, retval);
				adaptor.AddChild(root_0, char_literal242_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(85); }

			DebugLocation(757, 19);
			char_literal243=(IToken)Match(input,RBRACE,Follow._RBRACE_in_elementValueArrayInitializer3839); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal243_tree = (object)adaptor.Create(char_literal243, retval);
			adaptor.AddChild(root_0, char_literal243_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("elementValueArrayInitializer", 49);
			LeaveRule("elementValueArrayInitializer", 49);
			LeaveRule_elementValueArrayInitializer();
			if (state.backtracking > 0) { Memoize(input, 49, elementValueArrayInitializer_StartIndex); }

		}
		DebugLocation(758, 4);
		} finally { DebugExitRule(GrammarFileName, "elementValueArrayInitializer"); }
		return retval;

	}
	// $ANTLR end "elementValueArrayInitializer"

	partial void EnterRule_annotationTypeDeclaration();
	partial void LeaveRule_annotationTypeDeclaration();
	// $ANTLR start "annotationTypeDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:764:1: annotationTypeDeclaration : modifiers '@' 'interface' IDENTIFIER annotationTypeBody ;
	[GrammarRule("annotationTypeDeclaration")]
	private Antlr3AstNode annotationTypeDeclaration()
	{
		EnterRule_annotationTypeDeclaration();
		EnterRule("annotationTypeDeclaration", 50);
		var retval = new Antlr3AstNode("annotationTypeDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int annotationTypeDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal245 = default(IToken);
		IToken string_literal246 = default(IToken);
		IToken IDENTIFIER247 = default(IToken);
		Antlr3AstNode modifiers244 = default(Antlr3AstNode);
		Antlr3AstNode annotationTypeBody248 = default(Antlr3AstNode);

		object char_literal245_tree = default(object);
		object string_literal246_tree = default(object);
		object IDENTIFIER247_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "annotationTypeDeclaration");
		DebugLocation(764, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 50)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:765:5: ( modifiers '@' 'interface' IDENTIFIER annotationTypeBody )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:765:9: modifiers '@' 'interface' IDENTIFIER annotationTypeBody
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(765, 9);
			PushFollow(Follow._modifiers_in_annotationTypeDeclaration3862);
			modifiers244=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers244.Tree, modifiers244, retval);
			DebugLocation(765, 19);
			char_literal245=(IToken)Match(input,MONKEYS_AT,Follow._MONKEYS_AT_in_annotationTypeDeclaration3864); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal245_tree = (object)adaptor.Create(char_literal245, retval);
			adaptor.AddChild(root_0, char_literal245_tree);
			}
			DebugLocation(766, 9);
			string_literal246=(IToken)Match(input,INTERFACE,Follow._INTERFACE_in_annotationTypeDeclaration3874); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal246_tree = (object)adaptor.Create(string_literal246, retval);
			adaptor.AddChild(root_0, string_literal246_tree);
			}
			DebugLocation(767, 9);
			IDENTIFIER247=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_annotationTypeDeclaration3884); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER247_tree = (object)adaptor.Create(IDENTIFIER247, retval);
			adaptor.AddChild(root_0, IDENTIFIER247_tree);
			}
			DebugLocation(768, 9);
			PushFollow(Follow._annotationTypeBody_in_annotationTypeDeclaration3894);
			annotationTypeBody248=annotationTypeBody();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, annotationTypeBody248.Tree, annotationTypeBody248, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("annotationTypeDeclaration", 50);
			LeaveRule("annotationTypeDeclaration", 50);
			LeaveRule_annotationTypeDeclaration();
			if (state.backtracking > 0) { Memoize(input, 50, annotationTypeDeclaration_StartIndex); }

		}
		DebugLocation(769, 4);
		} finally { DebugExitRule(GrammarFileName, "annotationTypeDeclaration"); }
		return retval;

	}
	// $ANTLR end "annotationTypeDeclaration"

	partial void EnterRule_annotationTypeBody();
	partial void LeaveRule_annotationTypeBody();
	// $ANTLR start "annotationTypeBody"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:772:1: annotationTypeBody : '{' ( annotationTypeElementDeclaration )* '}' ;
	[GrammarRule("annotationTypeBody")]
	private Antlr3AstNode annotationTypeBody()
	{
		EnterRule_annotationTypeBody();
		EnterRule("annotationTypeBody", 51);
		var retval = new Antlr3AstNode("annotationTypeBody");
		
		retval.Start = (IToken)input.LT(1);
		int annotationTypeBody_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal249 = default(IToken);
		IToken char_literal251 = default(IToken);
		Antlr3AstNode annotationTypeElementDeclaration250 = default(Antlr3AstNode);

		object char_literal249_tree = default(object);
		object char_literal251_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "annotationTypeBody");
		DebugLocation(772, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 51)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:773:5: ( '{' ( annotationTypeElementDeclaration )* '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:773:9: '{' ( annotationTypeElementDeclaration )* '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(773, 9);
			char_literal249=(IToken)Match(input,LBRACE,Follow._LBRACE_in_annotationTypeBody3915); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal249_tree = (object)adaptor.Create(char_literal249, retval);
			adaptor.AddChild(root_0, char_literal249_tree);
			}
			DebugLocation(774, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:774:9: ( annotationTypeElementDeclaration )*
			try { DebugEnterSubRule(86);
			while (true)
			{
				int alt86=2;
				try { DebugEnterDecision(86, false);
				int LA86_1 = input.LA(1);

				if ((LA86_1==ABSTRACT||LA86_1==BOOLEAN||LA86_1==BYTE||LA86_1==CHAR||LA86_1==CLASS||LA86_1==DOUBLE||LA86_1==ENUM||LA86_1==FINAL||LA86_1==FLOAT||LA86_1==IDENTIFIER||(LA86_1>=INT && LA86_1<=INTERFACE)||LA86_1==LONG||LA86_1==LT||(LA86_1>=MONKEYS_AT && LA86_1<=NATIVE)||(LA86_1>=PRIVATE && LA86_1<=PUBLIC)||(LA86_1>=SEMI && LA86_1<=SHORT)||(LA86_1>=STATIC && LA86_1<=STRICTFP)||LA86_1==SYNCHRONIZED||LA86_1==TRANSIENT||(LA86_1>=VOID && LA86_1<=VOLATILE)))
				{
					alt86 = 1;
				}


				} finally { DebugExitDecision(86); }
				switch ( alt86 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:774:10: annotationTypeElementDeclaration
					{
					DebugLocation(774, 10);
					PushFollow(Follow._annotationTypeElementDeclaration_in_annotationTypeBody3927);
					annotationTypeElementDeclaration250=annotationTypeElementDeclaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, annotationTypeElementDeclaration250.Tree, annotationTypeElementDeclaration250, retval);

					}
					break;

				default:
					goto loop86;
				}
			}

			loop86:
				;

			} finally { DebugExitSubRule(86); }

			DebugLocation(776, 9);
			char_literal251=(IToken)Match(input,RBRACE,Follow._RBRACE_in_annotationTypeBody3949); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal251_tree = (object)adaptor.Create(char_literal251, retval);
			adaptor.AddChild(root_0, char_literal251_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("annotationTypeBody", 51);
			LeaveRule("annotationTypeBody", 51);
			LeaveRule_annotationTypeBody();
			if (state.backtracking > 0) { Memoize(input, 51, annotationTypeBody_StartIndex); }

		}
		DebugLocation(777, 4);
		} finally { DebugExitRule(GrammarFileName, "annotationTypeBody"); }
		return retval;

	}
	// $ANTLR end "annotationTypeBody"

	partial void EnterRule_annotationTypeElementDeclaration();
	partial void LeaveRule_annotationTypeElementDeclaration();
	// $ANTLR start "annotationTypeElementDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:782:1: annotationTypeElementDeclaration : ( annotationMethodDeclaration | interfaceFieldDeclaration | normalClassDeclaration | normalInterfaceDeclaration | enumDeclaration | annotationTypeDeclaration | ';' );
	[GrammarRule("annotationTypeElementDeclaration")]
	private Antlr3AstNode annotationTypeElementDeclaration()
	{
		EnterRule_annotationTypeElementDeclaration();
		EnterRule("annotationTypeElementDeclaration", 52);
		var retval = new Antlr3AstNode("annotationTypeElementDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int annotationTypeElementDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal258 = default(IToken);
		Antlr3AstNode annotationMethodDeclaration252 = default(Antlr3AstNode);
		Antlr3AstNode interfaceFieldDeclaration253 = default(Antlr3AstNode);
		Antlr3AstNode normalClassDeclaration254 = default(Antlr3AstNode);
		Antlr3AstNode normalInterfaceDeclaration255 = default(Antlr3AstNode);
		Antlr3AstNode enumDeclaration256 = default(Antlr3AstNode);
		Antlr3AstNode annotationTypeDeclaration257 = default(Antlr3AstNode);

		object char_literal258_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "annotationTypeElementDeclaration");
		DebugLocation(782, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 52)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:783:5: ( annotationMethodDeclaration | interfaceFieldDeclaration | normalClassDeclaration | normalInterfaceDeclaration | enumDeclaration | annotationTypeDeclaration | ';' )
			int alt87=7;
			try { DebugEnterDecision(87, false);
			switch (input.LA(1))
			{
			case MONKEYS_AT:
				{
				int LA87_2 = input.LA(2);

				if ((EvaluatePredicate(synpred117_Java_fragment)))
				{
					alt87 = 1;
				}
				else if ((EvaluatePredicate(synpred118_Java_fragment)))
				{
					alt87 = 2;
				}
				else if ((EvaluatePredicate(synpred119_Java_fragment)))
				{
					alt87 = 3;
				}
				else if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt87 = 4;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt87 = 5;
				}
				else if ((EvaluatePredicate(synpred122_Java_fragment)))
				{
					alt87 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 87, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PUBLIC:
				{
				int LA87_2 = input.LA(2);

				if ((EvaluatePredicate(synpred117_Java_fragment)))
				{
					alt87 = 1;
				}
				else if ((EvaluatePredicate(synpred118_Java_fragment)))
				{
					alt87 = 2;
				}
				else if ((EvaluatePredicate(synpred119_Java_fragment)))
				{
					alt87 = 3;
				}
				else if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt87 = 4;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt87 = 5;
				}
				else if ((EvaluatePredicate(synpred122_Java_fragment)))
				{
					alt87 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 87, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PROTECTED:
				{
				int LA87_2 = input.LA(2);

				if ((EvaluatePredicate(synpred117_Java_fragment)))
				{
					alt87 = 1;
				}
				else if ((EvaluatePredicate(synpred118_Java_fragment)))
				{
					alt87 = 2;
				}
				else if ((EvaluatePredicate(synpred119_Java_fragment)))
				{
					alt87 = 3;
				}
				else if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt87 = 4;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt87 = 5;
				}
				else if ((EvaluatePredicate(synpred122_Java_fragment)))
				{
					alt87 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 87, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PRIVATE:
				{
				int LA87_2 = input.LA(2);

				if ((EvaluatePredicate(synpred117_Java_fragment)))
				{
					alt87 = 1;
				}
				else if ((EvaluatePredicate(synpred118_Java_fragment)))
				{
					alt87 = 2;
				}
				else if ((EvaluatePredicate(synpred119_Java_fragment)))
				{
					alt87 = 3;
				}
				else if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt87 = 4;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt87 = 5;
				}
				else if ((EvaluatePredicate(synpred122_Java_fragment)))
				{
					alt87 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 87, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STATIC:
				{
				int LA87_2 = input.LA(2);

				if ((EvaluatePredicate(synpred117_Java_fragment)))
				{
					alt87 = 1;
				}
				else if ((EvaluatePredicate(synpred118_Java_fragment)))
				{
					alt87 = 2;
				}
				else if ((EvaluatePredicate(synpred119_Java_fragment)))
				{
					alt87 = 3;
				}
				else if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt87 = 4;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt87 = 5;
				}
				else if ((EvaluatePredicate(synpred122_Java_fragment)))
				{
					alt87 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 87, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case ABSTRACT:
				{
				int LA87_2 = input.LA(2);

				if ((EvaluatePredicate(synpred117_Java_fragment)))
				{
					alt87 = 1;
				}
				else if ((EvaluatePredicate(synpred118_Java_fragment)))
				{
					alt87 = 2;
				}
				else if ((EvaluatePredicate(synpred119_Java_fragment)))
				{
					alt87 = 3;
				}
				else if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt87 = 4;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt87 = 5;
				}
				else if ((EvaluatePredicate(synpred122_Java_fragment)))
				{
					alt87 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 87, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case FINAL:
				{
				int LA87_2 = input.LA(2);

				if ((EvaluatePredicate(synpred117_Java_fragment)))
				{
					alt87 = 1;
				}
				else if ((EvaluatePredicate(synpred118_Java_fragment)))
				{
					alt87 = 2;
				}
				else if ((EvaluatePredicate(synpred119_Java_fragment)))
				{
					alt87 = 3;
				}
				else if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt87 = 4;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt87 = 5;
				}
				else if ((EvaluatePredicate(synpred122_Java_fragment)))
				{
					alt87 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 87, 7, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case NATIVE:
				{
				int LA87_2 = input.LA(2);

				if ((EvaluatePredicate(synpred117_Java_fragment)))
				{
					alt87 = 1;
				}
				else if ((EvaluatePredicate(synpred118_Java_fragment)))
				{
					alt87 = 2;
				}
				else if ((EvaluatePredicate(synpred119_Java_fragment)))
				{
					alt87 = 3;
				}
				else if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt87 = 4;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt87 = 5;
				}
				else if ((EvaluatePredicate(synpred122_Java_fragment)))
				{
					alt87 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 87, 8, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case SYNCHRONIZED:
				{
				int LA87_2 = input.LA(2);

				if ((EvaluatePredicate(synpred117_Java_fragment)))
				{
					alt87 = 1;
				}
				else if ((EvaluatePredicate(synpred118_Java_fragment)))
				{
					alt87 = 2;
				}
				else if ((EvaluatePredicate(synpred119_Java_fragment)))
				{
					alt87 = 3;
				}
				else if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt87 = 4;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt87 = 5;
				}
				else if ((EvaluatePredicate(synpred122_Java_fragment)))
				{
					alt87 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 87, 9, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case TRANSIENT:
				{
				int LA87_2 = input.LA(2);

				if ((EvaluatePredicate(synpred117_Java_fragment)))
				{
					alt87 = 1;
				}
				else if ((EvaluatePredicate(synpred118_Java_fragment)))
				{
					alt87 = 2;
				}
				else if ((EvaluatePredicate(synpred119_Java_fragment)))
				{
					alt87 = 3;
				}
				else if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt87 = 4;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt87 = 5;
				}
				else if ((EvaluatePredicate(synpred122_Java_fragment)))
				{
					alt87 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 87, 10, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case VOLATILE:
				{
				int LA87_2 = input.LA(2);

				if ((EvaluatePredicate(synpred117_Java_fragment)))
				{
					alt87 = 1;
				}
				else if ((EvaluatePredicate(synpred118_Java_fragment)))
				{
					alt87 = 2;
				}
				else if ((EvaluatePredicate(synpred119_Java_fragment)))
				{
					alt87 = 3;
				}
				else if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt87 = 4;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt87 = 5;
				}
				else if ((EvaluatePredicate(synpred122_Java_fragment)))
				{
					alt87 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 87, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case STRICTFP:
				{
				int LA87_2 = input.LA(2);

				if ((EvaluatePredicate(synpred117_Java_fragment)))
				{
					alt87 = 1;
				}
				else if ((EvaluatePredicate(synpred118_Java_fragment)))
				{
					alt87 = 2;
				}
				else if ((EvaluatePredicate(synpred119_Java_fragment)))
				{
					alt87 = 3;
				}
				else if ((EvaluatePredicate(synpred120_Java_fragment)))
				{
					alt87 = 4;
				}
				else if ((EvaluatePredicate(synpred121_Java_fragment)))
				{
					alt87 = 5;
				}
				else if ((EvaluatePredicate(synpred122_Java_fragment)))
				{
					alt87 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 87, 12, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case IDENTIFIER:
				{
				int LA87_2 = input.LA(2);

				if ((EvaluatePredicate(synpred117_Java_fragment)))
				{
					alt87 = 1;
				}
				else if ((EvaluatePredicate(synpred118_Java_fragment)))
				{
					alt87 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 87, 13, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
				{
				int LA87_2 = input.LA(2);

				if ((EvaluatePredicate(synpred117_Java_fragment)))
				{
					alt87 = 1;
				}
				else if ((EvaluatePredicate(synpred118_Java_fragment)))
				{
					alt87 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 87, 14, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case CLASS:
				{
				alt87 = 3;
				}
				break;
			case INTERFACE:
				{
				alt87 = 4;
				}
				break;
			case ENUM:
				{
				alt87 = 5;
				}
				break;
			case SEMI:
				{
				alt87 = 7;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 87, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(87); }
			switch (alt87)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:783:9: annotationMethodDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(783, 9);
				PushFollow(Follow._annotationMethodDeclaration_in_annotationTypeElementDeclaration3971);
				annotationMethodDeclaration252=annotationMethodDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, annotationMethodDeclaration252.Tree, annotationMethodDeclaration252, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:784:9: interfaceFieldDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(784, 9);
				PushFollow(Follow._interfaceFieldDeclaration_in_annotationTypeElementDeclaration3981);
				interfaceFieldDeclaration253=interfaceFieldDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceFieldDeclaration253.Tree, interfaceFieldDeclaration253, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:785:9: normalClassDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(785, 9);
				PushFollow(Follow._normalClassDeclaration_in_annotationTypeElementDeclaration3991);
				normalClassDeclaration254=normalClassDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, normalClassDeclaration254.Tree, normalClassDeclaration254, retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:786:9: normalInterfaceDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(786, 9);
				PushFollow(Follow._normalInterfaceDeclaration_in_annotationTypeElementDeclaration4001);
				normalInterfaceDeclaration255=normalInterfaceDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, normalInterfaceDeclaration255.Tree, normalInterfaceDeclaration255, retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:787:9: enumDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(787, 9);
				PushFollow(Follow._enumDeclaration_in_annotationTypeElementDeclaration4011);
				enumDeclaration256=enumDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enumDeclaration256.Tree, enumDeclaration256, retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:788:9: annotationTypeDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(788, 9);
				PushFollow(Follow._annotationTypeDeclaration_in_annotationTypeElementDeclaration4021);
				annotationTypeDeclaration257=annotationTypeDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, annotationTypeDeclaration257.Tree, annotationTypeDeclaration257, retval);

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:789:9: ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(789, 9);
				char_literal258=(IToken)Match(input,SEMI,Follow._SEMI_in_annotationTypeElementDeclaration4031); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal258_tree = (object)adaptor.Create(char_literal258, retval);
				adaptor.AddChild(root_0, char_literal258_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("annotationTypeElementDeclaration", 52);
			LeaveRule("annotationTypeElementDeclaration", 52);
			LeaveRule_annotationTypeElementDeclaration();
			if (state.backtracking > 0) { Memoize(input, 52, annotationTypeElementDeclaration_StartIndex); }

		}
		DebugLocation(790, 4);
		} finally { DebugExitRule(GrammarFileName, "annotationTypeElementDeclaration"); }
		return retval;

	}
	// $ANTLR end "annotationTypeElementDeclaration"

	partial void EnterRule_annotationMethodDeclaration();
	partial void LeaveRule_annotationMethodDeclaration();
	// $ANTLR start "annotationMethodDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:792:1: annotationMethodDeclaration : modifiers type IDENTIFIER '(' ')' ( 'default' elementValue )? ';' ;
	[GrammarRule("annotationMethodDeclaration")]
	private Antlr3AstNode annotationMethodDeclaration()
	{
		EnterRule_annotationMethodDeclaration();
		EnterRule("annotationMethodDeclaration", 53);
		var retval = new Antlr3AstNode("annotationMethodDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int annotationMethodDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER261 = default(IToken);
		IToken char_literal262 = default(IToken);
		IToken char_literal263 = default(IToken);
		IToken string_literal264 = default(IToken);
		IToken char_literal266 = default(IToken);
		Antlr3AstNode modifiers259 = default(Antlr3AstNode);
		Antlr3AstNode type260 = default(Antlr3AstNode);
		Antlr3AstNode elementValue265 = default(Antlr3AstNode);

		object IDENTIFIER261_tree = default(object);
		object char_literal262_tree = default(object);
		object char_literal263_tree = default(object);
		object string_literal264_tree = default(object);
		object char_literal266_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "annotationMethodDeclaration");
		DebugLocation(792, 8);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 53)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:793:5: ( modifiers type IDENTIFIER '(' ')' ( 'default' elementValue )? ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:793:9: modifiers type IDENTIFIER '(' ')' ( 'default' elementValue )? ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(793, 9);
			PushFollow(Follow._modifiers_in_annotationMethodDeclaration4051);
			modifiers259=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers259.Tree, modifiers259, retval);
			DebugLocation(793, 19);
			PushFollow(Follow._type_in_annotationMethodDeclaration4053);
			type260=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type260.Tree, type260, retval);
			DebugLocation(793, 24);
			IDENTIFIER261=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_annotationMethodDeclaration4055); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER261_tree = (object)adaptor.Create(IDENTIFIER261, retval);
			adaptor.AddChild(root_0, IDENTIFIER261_tree);
			}
			DebugLocation(794, 9);
			char_literal262=(IToken)Match(input,LPAREN,Follow._LPAREN_in_annotationMethodDeclaration4065); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal262_tree = (object)adaptor.Create(char_literal262, retval);
			adaptor.AddChild(root_0, char_literal262_tree);
			}
			DebugLocation(794, 13);
			char_literal263=(IToken)Match(input,RPAREN,Follow._RPAREN_in_annotationMethodDeclaration4067); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal263_tree = (object)adaptor.Create(char_literal263, retval);
			adaptor.AddChild(root_0, char_literal263_tree);
			}
			DebugLocation(794, 17);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:794:17: ( 'default' elementValue )?
			int alt88=2;
			try { DebugEnterSubRule(88);
			try { DebugEnterDecision(88, false);
			int LA88_1 = input.LA(1);

			if ((LA88_1==DEFAULT))
			{
				alt88 = 1;
			}
			} finally { DebugExitDecision(88); }
			switch (alt88)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:794:18: 'default' elementValue
				{
				DebugLocation(794, 18);
				string_literal264=(IToken)Match(input,DEFAULT,Follow._DEFAULT_in_annotationMethodDeclaration4070); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal264_tree = (object)adaptor.Create(string_literal264, retval);
				adaptor.AddChild(root_0, string_literal264_tree);
				}
				DebugLocation(794, 28);
				PushFollow(Follow._elementValue_in_annotationMethodDeclaration4072);
				elementValue265=elementValue();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, elementValue265.Tree, elementValue265, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(88); }

			DebugLocation(796, 9);
			char_literal266=(IToken)Match(input,SEMI,Follow._SEMI_in_annotationMethodDeclaration4101); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal266_tree = (object)adaptor.Create(char_literal266, retval);
			adaptor.AddChild(root_0, char_literal266_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("annotationMethodDeclaration", 53);
			LeaveRule("annotationMethodDeclaration", 53);
			LeaveRule_annotationMethodDeclaration();
			if (state.backtracking > 0) { Memoize(input, 53, annotationMethodDeclaration_StartIndex); }

		}
		DebugLocation(797, 8);
		} finally { DebugExitRule(GrammarFileName, "annotationMethodDeclaration"); }
		return retval;

	}
	// $ANTLR end "annotationMethodDeclaration"

	partial void EnterRule_block();
	partial void LeaveRule_block();
	// $ANTLR start "block"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:799:1: block : '{' ( blockStatement )* '}' ;
	[GrammarRule("block")]
	private Antlr3AstNode block()
	{
		EnterRule_block();
		EnterRule("block", 54);
		var retval = new Antlr3AstNode("block");
		
		retval.Start = (IToken)input.LT(1);
		int block_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal267 = default(IToken);
		IToken char_literal269 = default(IToken);
		Antlr3AstNode blockStatement268 = default(Antlr3AstNode);

		object char_literal267_tree = default(object);
		object char_literal269_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "block");
		DebugLocation(799, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 54)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:800:5: ( '{' ( blockStatement )* '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:800:9: '{' ( blockStatement )* '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(800, 9);
			char_literal267=(IToken)Match(input,LBRACE,Follow._LBRACE_in_block4125); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal267_tree = (object)adaptor.Create(char_literal267, retval);
			adaptor.AddChild(root_0, char_literal267_tree);
			}
			DebugLocation(801, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:801:9: ( blockStatement )*
			try { DebugEnterSubRule(89);
			while (true)
			{
				int alt89=2;
				try { DebugEnterDecision(89, false);
				int LA89_1 = input.LA(1);

				if ((LA89_1==ABSTRACT||(LA89_1>=ASSERT && LA89_1<=BANG)||(LA89_1>=BOOLEAN && LA89_1<=BYTE)||(LA89_1>=CHAR && LA89_1<=CLASS)||LA89_1==CONTINUE||LA89_1==DO||(LA89_1>=DOUBLE && LA89_1<=DOUBLELITERAL)||LA89_1==ENUM||(LA89_1>=FALSE && LA89_1<=FINAL)||(LA89_1>=FLOAT && LA89_1<=FOR)||(LA89_1>=IDENTIFIER && LA89_1<=IF)||(LA89_1>=INT && LA89_1<=INTLITERAL)||LA89_1==LBRACE||(LA89_1>=LONG && LA89_1<=LT)||(LA89_1>=MONKEYS_AT && LA89_1<=NULL)||LA89_1==PLUS||(LA89_1>=PLUSPLUS && LA89_1<=PUBLIC)||LA89_1==RETURN||(LA89_1>=SEMI && LA89_1<=SHORT)||(LA89_1>=STATIC && LA89_1<=SUB)||(LA89_1>=SUBSUB && LA89_1<=SYNCHRONIZED)||(LA89_1>=THIS && LA89_1<=THROW)||(LA89_1>=TILDE && LA89_1<=WHILE)))
				{
					alt89 = 1;
				}


				} finally { DebugExitDecision(89); }
				switch ( alt89 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:801:10: blockStatement
					{
					DebugLocation(801, 10);
					PushFollow(Follow._blockStatement_in_block4136);
					blockStatement268=blockStatement();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, blockStatement268.Tree, blockStatement268, retval);

					}
					break;

				default:
					goto loop89;
				}
			}

			loop89:
				;

			} finally { DebugExitSubRule(89); }

			DebugLocation(803, 9);
			char_literal269=(IToken)Match(input,RBRACE,Follow._RBRACE_in_block4157); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal269_tree = (object)adaptor.Create(char_literal269, retval);
			adaptor.AddChild(root_0, char_literal269_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("block", 54);
			LeaveRule("block", 54);
			LeaveRule_block();
			if (state.backtracking > 0) { Memoize(input, 54, block_StartIndex); }

		}
		DebugLocation(804, 4);
		} finally { DebugExitRule(GrammarFileName, "block"); }
		return retval;

	}
	// $ANTLR end "block"

	partial void EnterRule_blockStatement();
	partial void LeaveRule_blockStatement();
	// $ANTLR start "blockStatement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:830:1: blockStatement : ( localVariableDeclarationStatement | classOrInterfaceDeclaration | statement );
	[GrammarRule("blockStatement")]
	private Antlr3AstNode blockStatement()
	{
		EnterRule_blockStatement();
		EnterRule("blockStatement", 55);
		var retval = new Antlr3AstNode("blockStatement");
		
		retval.Start = (IToken)input.LT(1);
		int blockStatement_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode localVariableDeclarationStatement270 = default(Antlr3AstNode);
		Antlr3AstNode classOrInterfaceDeclaration271 = default(Antlr3AstNode);
		Antlr3AstNode statement272 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "blockStatement");
		DebugLocation(830, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 55)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:831:5: ( localVariableDeclarationStatement | classOrInterfaceDeclaration | statement )
			int alt90=3;
			try { DebugEnterDecision(90, false);
			switch (input.LA(1))
			{
			case FINAL:
				{
				int LA90_2 = input.LA(2);

				if ((EvaluatePredicate(synpred125_Java_fragment)))
				{
					alt90 = 1;
				}
				else if ((EvaluatePredicate(synpred126_Java_fragment)))
				{
					alt90 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case MONKEYS_AT:
				{
				int LA90_2 = input.LA(2);

				if ((EvaluatePredicate(synpred125_Java_fragment)))
				{
					alt90 = 1;
				}
				else if ((EvaluatePredicate(synpred126_Java_fragment)))
				{
					alt90 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case IDENTIFIER:
				{
				int LA90_2 = input.LA(2);

				if ((EvaluatePredicate(synpred125_Java_fragment)))
				{
					alt90 = 1;
				}
				else if ((true))
				{
					alt90 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
				{
				int LA90_2 = input.LA(2);

				if ((EvaluatePredicate(synpred125_Java_fragment)))
				{
					alt90 = 1;
				}
				else if ((true))
				{
					alt90 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case ABSTRACT:
			case CLASS:
			case ENUM:
			case INTERFACE:
			case NATIVE:
			case PRIVATE:
			case PROTECTED:
			case PUBLIC:
			case STATIC:
			case STRICTFP:
			case TRANSIENT:
			case VOLATILE:
				{
				alt90 = 2;
				}
				break;
			case SYNCHRONIZED:
				{
				int LA90_2 = input.LA(2);

				if ((EvaluatePredicate(synpred126_Java_fragment)))
				{
					alt90 = 2;
				}
				else if ((true))
				{
					alt90 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case ASSERT:
			case BANG:
			case BREAK:
			case CHARLITERAL:
			case CONTINUE:
			case DO:
			case DOUBLELITERAL:
			case FALSE:
			case FLOATLITERAL:
			case FOR:
			case IF:
			case INTLITERAL:
			case LBRACE:
			case LONGLITERAL:
			case LPAREN:
			case NEW:
			case NULL:
			case PLUS:
			case PLUSPLUS:
			case RETURN:
			case SEMI:
			case STRINGLITERAL:
			case SUB:
			case SUBSUB:
			case SUPER:
			case SWITCH:
			case THIS:
			case THROW:
			case TILDE:
			case TRUE:
			case TRY:
			case VOID:
			case WHILE:
				{
				alt90 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(90); }
			switch (alt90)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:831:9: localVariableDeclarationStatement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(831, 9);
				PushFollow(Follow._localVariableDeclarationStatement_in_blockStatement4179);
				localVariableDeclarationStatement270=localVariableDeclarationStatement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, localVariableDeclarationStatement270.Tree, localVariableDeclarationStatement270, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:832:9: classOrInterfaceDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(832, 9);
				PushFollow(Follow._classOrInterfaceDeclaration_in_blockStatement4189);
				classOrInterfaceDeclaration271=classOrInterfaceDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classOrInterfaceDeclaration271.Tree, classOrInterfaceDeclaration271, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:833:9: statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(833, 9);
				PushFollow(Follow._statement_in_blockStatement4199);
				statement272=statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, statement272.Tree, statement272, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("blockStatement", 55);
			LeaveRule("blockStatement", 55);
			LeaveRule_blockStatement();
			if (state.backtracking > 0) { Memoize(input, 55, blockStatement_StartIndex); }

		}
		DebugLocation(834, 4);
		} finally { DebugExitRule(GrammarFileName, "blockStatement"); }
		return retval;

	}
	// $ANTLR end "blockStatement"

	partial void EnterRule_localVariableDeclarationStatement();
	partial void LeaveRule_localVariableDeclarationStatement();
	// $ANTLR start "localVariableDeclarationStatement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:837:1: localVariableDeclarationStatement : localVariableDeclaration ';' ;
	[GrammarRule("localVariableDeclarationStatement")]
	private Antlr3AstNode localVariableDeclarationStatement()
	{
		EnterRule_localVariableDeclarationStatement();
		EnterRule("localVariableDeclarationStatement", 56);
		var retval = new Antlr3AstNode("localVariableDeclarationStatement");
		
		retval.Start = (IToken)input.LT(1);
		int localVariableDeclarationStatement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal274 = default(IToken);
		Antlr3AstNode localVariableDeclaration273 = default(Antlr3AstNode);

		object char_literal274_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "localVariableDeclarationStatement");
		DebugLocation(837, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 56)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:838:5: ( localVariableDeclaration ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:838:9: localVariableDeclaration ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(838, 9);
			PushFollow(Follow._localVariableDeclaration_in_localVariableDeclarationStatement4220);
			localVariableDeclaration273=localVariableDeclaration();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, localVariableDeclaration273.Tree, localVariableDeclaration273, retval);
			DebugLocation(839, 9);
			char_literal274=(IToken)Match(input,SEMI,Follow._SEMI_in_localVariableDeclarationStatement4230); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal274_tree = (object)adaptor.Create(char_literal274, retval);
			adaptor.AddChild(root_0, char_literal274_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("localVariableDeclarationStatement", 56);
			LeaveRule("localVariableDeclarationStatement", 56);
			LeaveRule_localVariableDeclarationStatement();
			if (state.backtracking > 0) { Memoize(input, 56, localVariableDeclarationStatement_StartIndex); }

		}
		DebugLocation(840, 4);
		} finally { DebugExitRule(GrammarFileName, "localVariableDeclarationStatement"); }
		return retval;

	}
	// $ANTLR end "localVariableDeclarationStatement"

	partial void EnterRule_localVariableDeclaration();
	partial void LeaveRule_localVariableDeclaration();
	// $ANTLR start "localVariableDeclaration"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:842:1: localVariableDeclaration : variableModifiers type variableDeclarator ( ',' variableDeclarator )* ;
	[GrammarRule("localVariableDeclaration")]
	private Antlr3AstNode localVariableDeclaration()
	{
		EnterRule_localVariableDeclaration();
		EnterRule("localVariableDeclaration", 57);
		var retval = new Antlr3AstNode("localVariableDeclaration");
		
		retval.Start = (IToken)input.LT(1);
		int localVariableDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal278 = default(IToken);
		Antlr3AstNode variableModifiers275 = default(Antlr3AstNode);
		Antlr3AstNode type276 = default(Antlr3AstNode);
		Antlr3AstNode variableDeclarator277 = default(Antlr3AstNode);
		Antlr3AstNode variableDeclarator279 = default(Antlr3AstNode);

		object char_literal278_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "localVariableDeclaration");
		DebugLocation(842, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 57)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:843:5: ( variableModifiers type variableDeclarator ( ',' variableDeclarator )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:843:9: variableModifiers type variableDeclarator ( ',' variableDeclarator )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(843, 9);
			PushFollow(Follow._variableModifiers_in_localVariableDeclaration4250);
			variableModifiers275=variableModifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableModifiers275.Tree, variableModifiers275, retval);
			DebugLocation(843, 27);
			PushFollow(Follow._type_in_localVariableDeclaration4252);
			type276=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type276.Tree, type276, retval);
			DebugLocation(844, 9);
			PushFollow(Follow._variableDeclarator_in_localVariableDeclaration4262);
			variableDeclarator277=variableDeclarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableDeclarator277.Tree, variableDeclarator277, retval);
			DebugLocation(845, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:845:9: ( ',' variableDeclarator )*
			try { DebugEnterSubRule(91);
			while (true)
			{
				int alt91=2;
				try { DebugEnterDecision(91, false);
				int LA91_1 = input.LA(1);

				if ((LA91_1==COMMA))
				{
					alt91 = 1;
				}


				} finally { DebugExitDecision(91); }
				switch ( alt91 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:845:10: ',' variableDeclarator
					{
					DebugLocation(845, 10);
					char_literal278=(IToken)Match(input,COMMA,Follow._COMMA_in_localVariableDeclaration4273); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal278_tree = (object)adaptor.Create(char_literal278, retval);
					adaptor.AddChild(root_0, char_literal278_tree);
					}
					DebugLocation(845, 14);
					PushFollow(Follow._variableDeclarator_in_localVariableDeclaration4275);
					variableDeclarator279=variableDeclarator();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, variableDeclarator279.Tree, variableDeclarator279, retval);

					}
					break;

				default:
					goto loop91;
				}
			}

			loop91:
				;

			} finally { DebugExitSubRule(91); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("localVariableDeclaration", 57);
			LeaveRule("localVariableDeclaration", 57);
			LeaveRule_localVariableDeclaration();
			if (state.backtracking > 0) { Memoize(input, 57, localVariableDeclaration_StartIndex); }

		}
		DebugLocation(847, 4);
		} finally { DebugExitRule(GrammarFileName, "localVariableDeclaration"); }
		return retval;

	}
	// $ANTLR end "localVariableDeclaration"

	partial void EnterRule_statement();
	partial void LeaveRule_statement();
	// $ANTLR start "statement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:849:1: statement : ( block | ( 'assert' ) expression ( ':' expression )? ';' | 'assert' expression ( ':' expression )? ';' | 'if' parExpression statement ( 'else' statement )? | forstatement | 'while' parExpression statement | 'do' statement 'while' parExpression ';' | trystatement | 'switch' parExpression '{' switchBlockStatementGroups '}' | 'synchronized' parExpression block | 'return' ( expression )? ';' | 'throw' expression ';' | 'break' ( IDENTIFIER )? ';' | 'continue' ( IDENTIFIER )? ';' | expression ';' | IDENTIFIER ':' statement | ';' );
	[GrammarRule("statement")]
	private Antlr3AstNode statement()
	{
		EnterRule_statement();
		EnterRule("statement", 58);
		var retval = new Antlr3AstNode("statement");
		
		retval.Start = (IToken)input.LT(1);
		int statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal281 = default(IToken);
		IToken char_literal283 = default(IToken);
		IToken char_literal285 = default(IToken);
		IToken string_literal286 = default(IToken);
		IToken char_literal288 = default(IToken);
		IToken char_literal290 = default(IToken);
		IToken string_literal291 = default(IToken);
		IToken string_literal294 = default(IToken);
		IToken string_literal297 = default(IToken);
		IToken string_literal300 = default(IToken);
		IToken string_literal302 = default(IToken);
		IToken char_literal304 = default(IToken);
		IToken string_literal306 = default(IToken);
		IToken char_literal308 = default(IToken);
		IToken char_literal310 = default(IToken);
		IToken string_literal311 = default(IToken);
		IToken string_literal314 = default(IToken);
		IToken char_literal316 = default(IToken);
		IToken string_literal317 = default(IToken);
		IToken char_literal319 = default(IToken);
		IToken string_literal320 = default(IToken);
		IToken IDENTIFIER321 = default(IToken);
		IToken char_literal322 = default(IToken);
		IToken string_literal323 = default(IToken);
		IToken IDENTIFIER324 = default(IToken);
		IToken char_literal325 = default(IToken);
		IToken char_literal327 = default(IToken);
		IToken IDENTIFIER328 = default(IToken);
		IToken char_literal329 = default(IToken);
		IToken char_literal331 = default(IToken);
		Antlr3AstNode block280 = default(Antlr3AstNode);
		Antlr3AstNode expression282 = default(Antlr3AstNode);
		Antlr3AstNode expression284 = default(Antlr3AstNode);
		Antlr3AstNode expression287 = default(Antlr3AstNode);
		Antlr3AstNode expression289 = default(Antlr3AstNode);
		Antlr3AstNode parExpression292 = default(Antlr3AstNode);
		Antlr3AstNode statement293 = default(Antlr3AstNode);
		Antlr3AstNode statement295 = default(Antlr3AstNode);
		Antlr3AstNode forstatement296 = default(Antlr3AstNode);
		Antlr3AstNode parExpression298 = default(Antlr3AstNode);
		Antlr3AstNode statement299 = default(Antlr3AstNode);
		Antlr3AstNode statement301 = default(Antlr3AstNode);
		Antlr3AstNode parExpression303 = default(Antlr3AstNode);
		Antlr3AstNode trystatement305 = default(Antlr3AstNode);
		Antlr3AstNode parExpression307 = default(Antlr3AstNode);
		Antlr3AstNode switchBlockStatementGroups309 = default(Antlr3AstNode);
		Antlr3AstNode parExpression312 = default(Antlr3AstNode);
		Antlr3AstNode block313 = default(Antlr3AstNode);
		Antlr3AstNode expression315 = default(Antlr3AstNode);
		Antlr3AstNode expression318 = default(Antlr3AstNode);
		Antlr3AstNode expression326 = default(Antlr3AstNode);
		Antlr3AstNode statement330 = default(Antlr3AstNode);

		object string_literal281_tree = default(object);
		object char_literal283_tree = default(object);
		object char_literal285_tree = default(object);
		object string_literal286_tree = default(object);
		object char_literal288_tree = default(object);
		object char_literal290_tree = default(object);
		object string_literal291_tree = default(object);
		object string_literal294_tree = default(object);
		object string_literal297_tree = default(object);
		object string_literal300_tree = default(object);
		object string_literal302_tree = default(object);
		object char_literal304_tree = default(object);
		object string_literal306_tree = default(object);
		object char_literal308_tree = default(object);
		object char_literal310_tree = default(object);
		object string_literal311_tree = default(object);
		object string_literal314_tree = default(object);
		object char_literal316_tree = default(object);
		object string_literal317_tree = default(object);
		object char_literal319_tree = default(object);
		object string_literal320_tree = default(object);
		object IDENTIFIER321_tree = default(object);
		object char_literal322_tree = default(object);
		object string_literal323_tree = default(object);
		object IDENTIFIER324_tree = default(object);
		object char_literal325_tree = default(object);
		object char_literal327_tree = default(object);
		object IDENTIFIER328_tree = default(object);
		object char_literal329_tree = default(object);
		object char_literal331_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "statement");
		DebugLocation(849, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 58)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:850:5: ( block | ( 'assert' ) expression ( ':' expression )? ';' | 'assert' expression ( ':' expression )? ';' | 'if' parExpression statement ( 'else' statement )? | forstatement | 'while' parExpression statement | 'do' statement 'while' parExpression ';' | trystatement | 'switch' parExpression '{' switchBlockStatementGroups '}' | 'synchronized' parExpression block | 'return' ( expression )? ';' | 'throw' expression ';' | 'break' ( IDENTIFIER )? ';' | 'continue' ( IDENTIFIER )? ';' | expression ';' | IDENTIFIER ':' statement | ';' )
			int alt98=17;
			try { DebugEnterDecision(98, false);
			switch (input.LA(1))
			{
			case LBRACE:
				{
				alt98 = 1;
				}
				break;
			case ASSERT:
				{
				int LA98_2 = input.LA(2);

				if ((EvaluatePredicate(synpred130_Java_fragment)))
				{
					alt98 = 2;
				}
				else if ((EvaluatePredicate(synpred132_Java_fragment)))
				{
					alt98 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 98, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case IF:
				{
				alt98 = 4;
				}
				break;
			case FOR:
				{
				alt98 = 5;
				}
				break;
			case WHILE:
				{
				alt98 = 6;
				}
				break;
			case DO:
				{
				alt98 = 7;
				}
				break;
			case TRY:
				{
				alt98 = 8;
				}
				break;
			case SWITCH:
				{
				alt98 = 9;
				}
				break;
			case SYNCHRONIZED:
				{
				alt98 = 10;
				}
				break;
			case RETURN:
				{
				alt98 = 11;
				}
				break;
			case THROW:
				{
				alt98 = 12;
				}
				break;
			case BREAK:
				{
				alt98 = 13;
				}
				break;
			case CONTINUE:
				{
				alt98 = 14;
				}
				break;
			case BANG:
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case CHARLITERAL:
			case DOUBLE:
			case DOUBLELITERAL:
			case FALSE:
			case FLOAT:
			case FLOATLITERAL:
			case INT:
			case INTLITERAL:
			case LONG:
			case LONGLITERAL:
			case LPAREN:
			case NEW:
			case NULL:
			case PLUS:
			case PLUSPLUS:
			case SHORT:
			case STRINGLITERAL:
			case SUB:
			case SUBSUB:
			case SUPER:
			case THIS:
			case TILDE:
			case TRUE:
			case VOID:
				{
				alt98 = 15;
				}
				break;
			case IDENTIFIER:
				{
				int LA98_2 = input.LA(2);

				if ((EvaluatePredicate(synpred148_Java_fragment)))
				{
					alt98 = 15;
				}
				else if ((EvaluatePredicate(synpred149_Java_fragment)))
				{
					alt98 = 16;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 98, 22, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case SEMI:
				{
				alt98 = 17;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 98, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(98); }
			switch (alt98)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:850:9: block
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(850, 9);
				PushFollow(Follow._block_in_statement4306);
				block280=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block280.Tree, block280, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:852:9: ( 'assert' ) expression ( ':' expression )? ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(852, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:852:9: ( 'assert' )
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:852:10: 'assert'
				{
				DebugLocation(852, 10);
				string_literal281=(IToken)Match(input,ASSERT,Follow._ASSERT_in_statement4330); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal281_tree = (object)adaptor.Create(string_literal281, retval);
				adaptor.AddChild(root_0, string_literal281_tree);
				}

				}

				DebugLocation(854, 9);
				PushFollow(Follow._expression_in_statement4350);
				expression282=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression282.Tree, expression282, retval);
				DebugLocation(854, 20);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:854:20: ( ':' expression )?
				int alt92=2;
				try { DebugEnterSubRule(92);
				try { DebugEnterDecision(92, false);
				int LA92_1 = input.LA(1);

				if ((LA92_1==COLON))
				{
					alt92 = 1;
				}
				} finally { DebugExitDecision(92); }
				switch (alt92)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:854:21: ':' expression
					{
					DebugLocation(854, 21);
					char_literal283=(IToken)Match(input,COLON,Follow._COLON_in_statement4353); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal283_tree = (object)adaptor.Create(char_literal283, retval);
					adaptor.AddChild(root_0, char_literal283_tree);
					}
					DebugLocation(854, 25);
					PushFollow(Follow._expression_in_statement4355);
					expression284=expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, expression284.Tree, expression284, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(92); }

				DebugLocation(854, 38);
				char_literal285=(IToken)Match(input,SEMI,Follow._SEMI_in_statement4359); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal285_tree = (object)adaptor.Create(char_literal285, retval);
				adaptor.AddChild(root_0, char_literal285_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:855:9: 'assert' expression ( ':' expression )? ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(855, 9);
				string_literal286=(IToken)Match(input,ASSERT,Follow._ASSERT_in_statement4369); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal286_tree = (object)adaptor.Create(string_literal286, retval);
				adaptor.AddChild(root_0, string_literal286_tree);
				}
				DebugLocation(855, 19);
				PushFollow(Follow._expression_in_statement4372);
				expression287=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression287.Tree, expression287, retval);
				DebugLocation(855, 30);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:855:30: ( ':' expression )?
				int alt93=2;
				try { DebugEnterSubRule(93);
				try { DebugEnterDecision(93, false);
				int LA93_1 = input.LA(1);

				if ((LA93_1==COLON))
				{
					alt93 = 1;
				}
				} finally { DebugExitDecision(93); }
				switch (alt93)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:855:31: ':' expression
					{
					DebugLocation(855, 31);
					char_literal288=(IToken)Match(input,COLON,Follow._COLON_in_statement4375); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal288_tree = (object)adaptor.Create(char_literal288, retval);
					adaptor.AddChild(root_0, char_literal288_tree);
					}
					DebugLocation(855, 35);
					PushFollow(Follow._expression_in_statement4377);
					expression289=expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, expression289.Tree, expression289, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(93); }

				DebugLocation(855, 48);
				char_literal290=(IToken)Match(input,SEMI,Follow._SEMI_in_statement4381); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal290_tree = (object)adaptor.Create(char_literal290, retval);
				adaptor.AddChild(root_0, char_literal290_tree);
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:856:9: 'if' parExpression statement ( 'else' statement )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(856, 9);
				string_literal291=(IToken)Match(input,IF,Follow._IF_in_statement4403); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal291_tree = (object)adaptor.Create(string_literal291, retval);
				adaptor.AddChild(root_0, string_literal291_tree);
				}
				DebugLocation(856, 14);
				PushFollow(Follow._parExpression_in_statement4405);
				parExpression292=parExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, parExpression292.Tree, parExpression292, retval);
				DebugLocation(856, 28);
				PushFollow(Follow._statement_in_statement4407);
				statement293=statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, statement293.Tree, statement293, retval);
				DebugLocation(856, 38);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:856:38: ( 'else' statement )?
				int alt94=2;
				try { DebugEnterSubRule(94);
				try { DebugEnterDecision(94, false);
				int LA94_1 = input.LA(1);

				if ((LA94_1==ELSE))
				{
					int LA94_2 = input.LA(2);

					if ((EvaluatePredicate(synpred133_Java_fragment)))
					{
						alt94 = 1;
					}
				}
				} finally { DebugExitDecision(94); }
				switch (alt94)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:856:39: 'else' statement
					{
					DebugLocation(856, 39);
					string_literal294=(IToken)Match(input,ELSE,Follow._ELSE_in_statement4410); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal294_tree = (object)adaptor.Create(string_literal294, retval);
					adaptor.AddChild(root_0, string_literal294_tree);
					}
					DebugLocation(856, 46);
					PushFollow(Follow._statement_in_statement4412);
					statement295=statement();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, statement295.Tree, statement295, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(94); }


				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:857:9: forstatement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(857, 9);
				PushFollow(Follow._forstatement_in_statement4434);
				forstatement296=forstatement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, forstatement296.Tree, forstatement296, retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:858:9: 'while' parExpression statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(858, 9);
				string_literal297=(IToken)Match(input,WHILE,Follow._WHILE_in_statement4444); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal297_tree = (object)adaptor.Create(string_literal297, retval);
				adaptor.AddChild(root_0, string_literal297_tree);
				}
				DebugLocation(858, 17);
				PushFollow(Follow._parExpression_in_statement4446);
				parExpression298=parExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, parExpression298.Tree, parExpression298, retval);
				DebugLocation(858, 31);
				PushFollow(Follow._statement_in_statement4448);
				statement299=statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, statement299.Tree, statement299, retval);

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:859:9: 'do' statement 'while' parExpression ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(859, 9);
				string_literal300=(IToken)Match(input,DO,Follow._DO_in_statement4458); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal300_tree = (object)adaptor.Create(string_literal300, retval);
				adaptor.AddChild(root_0, string_literal300_tree);
				}
				DebugLocation(859, 14);
				PushFollow(Follow._statement_in_statement4460);
				statement301=statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, statement301.Tree, statement301, retval);
				DebugLocation(859, 24);
				string_literal302=(IToken)Match(input,WHILE,Follow._WHILE_in_statement4462); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal302_tree = (object)adaptor.Create(string_literal302, retval);
				adaptor.AddChild(root_0, string_literal302_tree);
				}
				DebugLocation(859, 32);
				PushFollow(Follow._parExpression_in_statement4464);
				parExpression303=parExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, parExpression303.Tree, parExpression303, retval);
				DebugLocation(859, 46);
				char_literal304=(IToken)Match(input,SEMI,Follow._SEMI_in_statement4466); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal304_tree = (object)adaptor.Create(char_literal304, retval);
				adaptor.AddChild(root_0, char_literal304_tree);
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:860:9: trystatement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(860, 9);
				PushFollow(Follow._trystatement_in_statement4476);
				trystatement305=trystatement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, trystatement305.Tree, trystatement305, retval);

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:861:9: 'switch' parExpression '{' switchBlockStatementGroups '}'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(861, 9);
				string_literal306=(IToken)Match(input,SWITCH,Follow._SWITCH_in_statement4486); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal306_tree = (object)adaptor.Create(string_literal306, retval);
				adaptor.AddChild(root_0, string_literal306_tree);
				}
				DebugLocation(861, 18);
				PushFollow(Follow._parExpression_in_statement4488);
				parExpression307=parExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, parExpression307.Tree, parExpression307, retval);
				DebugLocation(861, 32);
				char_literal308=(IToken)Match(input,LBRACE,Follow._LBRACE_in_statement4490); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal308_tree = (object)adaptor.Create(char_literal308, retval);
				adaptor.AddChild(root_0, char_literal308_tree);
				}
				DebugLocation(861, 36);
				PushFollow(Follow._switchBlockStatementGroups_in_statement4492);
				switchBlockStatementGroups309=switchBlockStatementGroups();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, switchBlockStatementGroups309.Tree, switchBlockStatementGroups309, retval);
				DebugLocation(861, 63);
				char_literal310=(IToken)Match(input,RBRACE,Follow._RBRACE_in_statement4494); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal310_tree = (object)adaptor.Create(char_literal310, retval);
				adaptor.AddChild(root_0, char_literal310_tree);
				}

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:862:9: 'synchronized' parExpression block
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(862, 9);
				string_literal311=(IToken)Match(input,SYNCHRONIZED,Follow._SYNCHRONIZED_in_statement4504); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal311_tree = (object)adaptor.Create(string_literal311, retval);
				adaptor.AddChild(root_0, string_literal311_tree);
				}
				DebugLocation(862, 24);
				PushFollow(Follow._parExpression_in_statement4506);
				parExpression312=parExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, parExpression312.Tree, parExpression312, retval);
				DebugLocation(862, 38);
				PushFollow(Follow._block_in_statement4508);
				block313=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block313.Tree, block313, retval);

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:863:9: 'return' ( expression )? ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(863, 9);
				string_literal314=(IToken)Match(input,RETURN,Follow._RETURN_in_statement4518); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal314_tree = (object)adaptor.Create(string_literal314, retval);
				adaptor.AddChild(root_0, string_literal314_tree);
				}
				DebugLocation(863, 18);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:863:18: ( expression )?
				int alt95=2;
				try { DebugEnterSubRule(95);
				try { DebugEnterDecision(95, false);
				int LA95_1 = input.LA(1);

				if ((LA95_1==BANG||LA95_1==BOOLEAN||LA95_1==BYTE||(LA95_1>=CHAR && LA95_1<=CHARLITERAL)||(LA95_1>=DOUBLE && LA95_1<=DOUBLELITERAL)||LA95_1==FALSE||(LA95_1>=FLOAT && LA95_1<=FLOATLITERAL)||LA95_1==IDENTIFIER||LA95_1==INT||LA95_1==INTLITERAL||(LA95_1>=LONG && LA95_1<=LPAREN)||(LA95_1>=NEW && LA95_1<=NULL)||LA95_1==PLUS||LA95_1==PLUSPLUS||LA95_1==SHORT||(LA95_1>=STRINGLITERAL && LA95_1<=SUB)||(LA95_1>=SUBSUB && LA95_1<=SUPER)||LA95_1==THIS||LA95_1==TILDE||LA95_1==TRUE||LA95_1==VOID))
				{
					alt95 = 1;
				}
				} finally { DebugExitDecision(95); }
				switch (alt95)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:863:19: expression
					{
					DebugLocation(863, 19);
					PushFollow(Follow._expression_in_statement4521);
					expression315=expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, expression315.Tree, expression315, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(95); }

				DebugLocation(863, 33);
				char_literal316=(IToken)Match(input,SEMI,Follow._SEMI_in_statement4526); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal316_tree = (object)adaptor.Create(char_literal316, retval);
				adaptor.AddChild(root_0, char_literal316_tree);
				}

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:864:9: 'throw' expression ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(864, 9);
				string_literal317=(IToken)Match(input,THROW,Follow._THROW_in_statement4536); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal317_tree = (object)adaptor.Create(string_literal317, retval);
				adaptor.AddChild(root_0, string_literal317_tree);
				}
				DebugLocation(864, 17);
				PushFollow(Follow._expression_in_statement4538);
				expression318=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression318.Tree, expression318, retval);
				DebugLocation(864, 28);
				char_literal319=(IToken)Match(input,SEMI,Follow._SEMI_in_statement4540); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal319_tree = (object)adaptor.Create(char_literal319, retval);
				adaptor.AddChild(root_0, char_literal319_tree);
				}

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:865:9: 'break' ( IDENTIFIER )? ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(865, 9);
				string_literal320=(IToken)Match(input,BREAK,Follow._BREAK_in_statement4550); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal320_tree = (object)adaptor.Create(string_literal320, retval);
				adaptor.AddChild(root_0, string_literal320_tree);
				}
				DebugLocation(866, 13);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:866:13: ( IDENTIFIER )?
				int alt96=2;
				try { DebugEnterSubRule(96);
				try { DebugEnterDecision(96, false);
				int LA96_1 = input.LA(1);

				if ((LA96_1==IDENTIFIER))
				{
					alt96 = 1;
				}
				} finally { DebugExitDecision(96); }
				switch (alt96)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:866:14: IDENTIFIER
					{
					DebugLocation(866, 14);
					IDENTIFIER321=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_statement4565); if (state.failed) return retval;
					if (state.backtracking == 0) {
					IDENTIFIER321_tree = (object)adaptor.Create(IDENTIFIER321, retval);
					adaptor.AddChild(root_0, IDENTIFIER321_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(96); }

				DebugLocation(867, 16);
				char_literal322=(IToken)Match(input,SEMI,Follow._SEMI_in_statement4582); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal322_tree = (object)adaptor.Create(char_literal322, retval);
				adaptor.AddChild(root_0, char_literal322_tree);
				}

				}
				break;
			case 14:
				DebugEnterAlt(14);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:868:9: 'continue' ( IDENTIFIER )? ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(868, 9);
				string_literal323=(IToken)Match(input,CONTINUE,Follow._CONTINUE_in_statement4592); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal323_tree = (object)adaptor.Create(string_literal323, retval);
				adaptor.AddChild(root_0, string_literal323_tree);
				}
				DebugLocation(869, 13);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:869:13: ( IDENTIFIER )?
				int alt97=2;
				try { DebugEnterSubRule(97);
				try { DebugEnterDecision(97, false);
				int LA97_1 = input.LA(1);

				if ((LA97_1==IDENTIFIER))
				{
					alt97 = 1;
				}
				} finally { DebugExitDecision(97); }
				switch (alt97)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:869:14: IDENTIFIER
					{
					DebugLocation(869, 14);
					IDENTIFIER324=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_statement4607); if (state.failed) return retval;
					if (state.backtracking == 0) {
					IDENTIFIER324_tree = (object)adaptor.Create(IDENTIFIER324, retval);
					adaptor.AddChild(root_0, IDENTIFIER324_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(97); }

				DebugLocation(870, 16);
				char_literal325=(IToken)Match(input,SEMI,Follow._SEMI_in_statement4624); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal325_tree = (object)adaptor.Create(char_literal325, retval);
				adaptor.AddChild(root_0, char_literal325_tree);
				}

				}
				break;
			case 15:
				DebugEnterAlt(15);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:871:9: expression ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(871, 9);
				PushFollow(Follow._expression_in_statement4634);
				expression326=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression326.Tree, expression326, retval);
				DebugLocation(871, 21);
				char_literal327=(IToken)Match(input,SEMI,Follow._SEMI_in_statement4637); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal327_tree = (object)adaptor.Create(char_literal327, retval);
				adaptor.AddChild(root_0, char_literal327_tree);
				}

				}
				break;
			case 16:
				DebugEnterAlt(16);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:872:9: IDENTIFIER ':' statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(872, 9);
				IDENTIFIER328=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_statement4652); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER328_tree = (object)adaptor.Create(IDENTIFIER328, retval);
				adaptor.AddChild(root_0, IDENTIFIER328_tree);
				}
				DebugLocation(872, 20);
				char_literal329=(IToken)Match(input,COLON,Follow._COLON_in_statement4654); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal329_tree = (object)adaptor.Create(char_literal329, retval);
				adaptor.AddChild(root_0, char_literal329_tree);
				}
				DebugLocation(872, 24);
				PushFollow(Follow._statement_in_statement4656);
				statement330=statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, statement330.Tree, statement330, retval);

				}
				break;
			case 17:
				DebugEnterAlt(17);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:873:9: ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(873, 9);
				char_literal331=(IToken)Match(input,SEMI,Follow._SEMI_in_statement4666); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal331_tree = (object)adaptor.Create(char_literal331, retval);
				adaptor.AddChild(root_0, char_literal331_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("statement", 58);
			LeaveRule("statement", 58);
			LeaveRule_statement();
			if (state.backtracking > 0) { Memoize(input, 58, statement_StartIndex); }

		}
		DebugLocation(875, 4);
		} finally { DebugExitRule(GrammarFileName, "statement"); }
		return retval;

	}
	// $ANTLR end "statement"

	partial void EnterRule_switchBlockStatementGroups();
	partial void LeaveRule_switchBlockStatementGroups();
	// $ANTLR start "switchBlockStatementGroups"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:877:1: switchBlockStatementGroups : ( switchBlockStatementGroup )* ;
	[GrammarRule("switchBlockStatementGroups")]
	private Antlr3AstNode switchBlockStatementGroups()
	{
		EnterRule_switchBlockStatementGroups();
		EnterRule("switchBlockStatementGroups", 59);
		var retval = new Antlr3AstNode("switchBlockStatementGroups");
		
		retval.Start = (IToken)input.LT(1);
		int switchBlockStatementGroups_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode switchBlockStatementGroup332 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "switchBlockStatementGroups");
		DebugLocation(877, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 59)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:878:5: ( ( switchBlockStatementGroup )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:878:9: ( switchBlockStatementGroup )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(878, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:878:9: ( switchBlockStatementGroup )*
			try { DebugEnterSubRule(99);
			while (true)
			{
				int alt99=2;
				try { DebugEnterDecision(99, false);
				int LA99_1 = input.LA(1);

				if ((LA99_1==CASE||LA99_1==DEFAULT))
				{
					alt99 = 1;
				}


				} finally { DebugExitDecision(99); }
				switch ( alt99 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:878:10: switchBlockStatementGroup
					{
					DebugLocation(878, 10);
					PushFollow(Follow._switchBlockStatementGroup_in_switchBlockStatementGroups4688);
					switchBlockStatementGroup332=switchBlockStatementGroup();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, switchBlockStatementGroup332.Tree, switchBlockStatementGroup332, retval);

					}
					break;

				default:
					goto loop99;
				}
			}

			loop99:
				;

			} finally { DebugExitSubRule(99); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("switchBlockStatementGroups", 59);
			LeaveRule("switchBlockStatementGroups", 59);
			LeaveRule_switchBlockStatementGroups();
			if (state.backtracking > 0) { Memoize(input, 59, switchBlockStatementGroups_StartIndex); }

		}
		DebugLocation(879, 4);
		} finally { DebugExitRule(GrammarFileName, "switchBlockStatementGroups"); }
		return retval;

	}
	// $ANTLR end "switchBlockStatementGroups"

	partial void EnterRule_switchBlockStatementGroup();
	partial void LeaveRule_switchBlockStatementGroup();
	// $ANTLR start "switchBlockStatementGroup"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:881:1: switchBlockStatementGroup : switchLabel ( blockStatement )* ;
	[GrammarRule("switchBlockStatementGroup")]
	private Antlr3AstNode switchBlockStatementGroup()
	{
		EnterRule_switchBlockStatementGroup();
		EnterRule("switchBlockStatementGroup", 60);
		var retval = new Antlr3AstNode("switchBlockStatementGroup");
		
		retval.Start = (IToken)input.LT(1);
		int switchBlockStatementGroup_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode switchLabel333 = default(Antlr3AstNode);
		Antlr3AstNode blockStatement334 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "switchBlockStatementGroup");
		DebugLocation(881, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 60)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:882:5: ( switchLabel ( blockStatement )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:883:9: switchLabel ( blockStatement )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(883, 9);
			PushFollow(Follow._switchLabel_in_switchBlockStatementGroup4717);
			switchLabel333=switchLabel();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, switchLabel333.Tree, switchLabel333, retval);
			DebugLocation(884, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:884:9: ( blockStatement )*
			try { DebugEnterSubRule(100);
			while (true)
			{
				int alt100=2;
				try { DebugEnterDecision(100, false);
				int LA100_1 = input.LA(1);

				if ((LA100_1==ABSTRACT||(LA100_1>=ASSERT && LA100_1<=BANG)||(LA100_1>=BOOLEAN && LA100_1<=BYTE)||(LA100_1>=CHAR && LA100_1<=CLASS)||LA100_1==CONTINUE||LA100_1==DO||(LA100_1>=DOUBLE && LA100_1<=DOUBLELITERAL)||LA100_1==ENUM||(LA100_1>=FALSE && LA100_1<=FINAL)||(LA100_1>=FLOAT && LA100_1<=FOR)||(LA100_1>=IDENTIFIER && LA100_1<=IF)||(LA100_1>=INT && LA100_1<=INTLITERAL)||LA100_1==LBRACE||(LA100_1>=LONG && LA100_1<=LT)||(LA100_1>=MONKEYS_AT && LA100_1<=NULL)||LA100_1==PLUS||(LA100_1>=PLUSPLUS && LA100_1<=PUBLIC)||LA100_1==RETURN||(LA100_1>=SEMI && LA100_1<=SHORT)||(LA100_1>=STATIC && LA100_1<=SUB)||(LA100_1>=SUBSUB && LA100_1<=SYNCHRONIZED)||(LA100_1>=THIS && LA100_1<=THROW)||(LA100_1>=TILDE && LA100_1<=WHILE)))
				{
					alt100 = 1;
				}


				} finally { DebugExitDecision(100); }
				switch ( alt100 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:884:10: blockStatement
					{
					DebugLocation(884, 10);
					PushFollow(Follow._blockStatement_in_switchBlockStatementGroup4728);
					blockStatement334=blockStatement();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, blockStatement334.Tree, blockStatement334, retval);

					}
					break;

				default:
					goto loop100;
				}
			}

			loop100:
				;

			} finally { DebugExitSubRule(100); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("switchBlockStatementGroup", 60);
			LeaveRule("switchBlockStatementGroup", 60);
			LeaveRule_switchBlockStatementGroup();
			if (state.backtracking > 0) { Memoize(input, 60, switchBlockStatementGroup_StartIndex); }

		}
		DebugLocation(886, 4);
		} finally { DebugExitRule(GrammarFileName, "switchBlockStatementGroup"); }
		return retval;

	}
	// $ANTLR end "switchBlockStatementGroup"

	partial void EnterRule_switchLabel();
	partial void LeaveRule_switchLabel();
	// $ANTLR start "switchLabel"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:888:1: switchLabel : ( 'case' expression ':' | 'default' ':' );
	[GrammarRule("switchLabel")]
	private Antlr3AstNode switchLabel()
	{
		EnterRule_switchLabel();
		EnterRule("switchLabel", 61);
		var retval = new Antlr3AstNode("switchLabel");
		
		retval.Start = (IToken)input.LT(1);
		int switchLabel_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal335 = default(IToken);
		IToken char_literal337 = default(IToken);
		IToken string_literal338 = default(IToken);
		IToken char_literal339 = default(IToken);
		Antlr3AstNode expression336 = default(Antlr3AstNode);

		object string_literal335_tree = default(object);
		object char_literal337_tree = default(object);
		object string_literal338_tree = default(object);
		object char_literal339_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "switchLabel");
		DebugLocation(888, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 61)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:889:5: ( 'case' expression ':' | 'default' ':' )
			int alt101=2;
			try { DebugEnterDecision(101, false);
			int LA101_1 = input.LA(1);

			if ((LA101_1==CASE))
			{
				alt101 = 1;
			}
			else if ((LA101_1==DEFAULT))
			{
				alt101 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 101, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(101); }
			switch (alt101)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:889:9: 'case' expression ':'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(889, 9);
				string_literal335=(IToken)Match(input,CASE,Follow._CASE_in_switchLabel4759); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal335_tree = (object)adaptor.Create(string_literal335, retval);
				adaptor.AddChild(root_0, string_literal335_tree);
				}
				DebugLocation(889, 16);
				PushFollow(Follow._expression_in_switchLabel4761);
				expression336=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression336.Tree, expression336, retval);
				DebugLocation(889, 27);
				char_literal337=(IToken)Match(input,COLON,Follow._COLON_in_switchLabel4763); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal337_tree = (object)adaptor.Create(char_literal337, retval);
				adaptor.AddChild(root_0, char_literal337_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:890:9: 'default' ':'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(890, 9);
				string_literal338=(IToken)Match(input,DEFAULT,Follow._DEFAULT_in_switchLabel4773); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal338_tree = (object)adaptor.Create(string_literal338, retval);
				adaptor.AddChild(root_0, string_literal338_tree);
				}
				DebugLocation(890, 19);
				char_literal339=(IToken)Match(input,COLON,Follow._COLON_in_switchLabel4775); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal339_tree = (object)adaptor.Create(char_literal339, retval);
				adaptor.AddChild(root_0, char_literal339_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("switchLabel", 61);
			LeaveRule("switchLabel", 61);
			LeaveRule_switchLabel();
			if (state.backtracking > 0) { Memoize(input, 61, switchLabel_StartIndex); }

		}
		DebugLocation(891, 4);
		} finally { DebugExitRule(GrammarFileName, "switchLabel"); }
		return retval;

	}
	// $ANTLR end "switchLabel"

	partial void EnterRule_trystatement();
	partial void LeaveRule_trystatement();
	// $ANTLR start "trystatement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:894:1: trystatement : ( 'try' block ( catches 'finally' block | catches | 'finally' block ) | tryWithResourcesStatement );
	[GrammarRule("trystatement")]
	private Antlr3AstNode trystatement()
	{
		EnterRule_trystatement();
		EnterRule("trystatement", 62);
		var retval = new Antlr3AstNode("trystatement");
		
		retval.Start = (IToken)input.LT(1);
		int trystatement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal340 = default(IToken);
		IToken string_literal343 = default(IToken);
		IToken string_literal346 = default(IToken);
		Antlr3AstNode block341 = default(Antlr3AstNode);
		Antlr3AstNode catches342 = default(Antlr3AstNode);
		Antlr3AstNode block344 = default(Antlr3AstNode);
		Antlr3AstNode catches345 = default(Antlr3AstNode);
		Antlr3AstNode block347 = default(Antlr3AstNode);
		Antlr3AstNode tryWithResourcesStatement348 = default(Antlr3AstNode);

		object string_literal340_tree = default(object);
		object string_literal343_tree = default(object);
		object string_literal346_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "trystatement");
		DebugLocation(894, 5);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 62)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:895:5: ( 'try' block ( catches 'finally' block | catches | 'finally' block ) | tryWithResourcesStatement )
			int alt103=2;
			try { DebugEnterDecision(103, false);
			int LA103_1 = input.LA(1);

			if ((LA103_1==TRY))
			{
				int LA103_2 = input.LA(2);

				if ((LA103_2==LBRACE))
				{
					alt103 = 1;
				}
				else if ((LA103_2==LPAREN))
				{
					alt103 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 103, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 103, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(103); }
			switch (alt103)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:895:9: 'try' block ( catches 'finally' block | catches | 'finally' block )
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(895, 9);
				string_literal340=(IToken)Match(input,TRY,Follow._TRY_in_trystatement4796); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal340_tree = (object)adaptor.Create(string_literal340, retval);
				adaptor.AddChild(root_0, string_literal340_tree);
				}
				DebugLocation(895, 15);
				PushFollow(Follow._block_in_trystatement4798);
				block341=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block341.Tree, block341, retval);
				DebugLocation(896, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:896:9: ( catches 'finally' block | catches | 'finally' block )
				int alt102=3;
				try { DebugEnterSubRule(102);
				try { DebugEnterDecision(102, false);
				int LA102_1 = input.LA(1);

				if ((LA102_1==CATCH))
				{
					int LA102_2 = input.LA(2);

					if ((EvaluatePredicate(synpred153_Java_fragment)))
					{
						alt102 = 1;
					}
					else if ((EvaluatePredicate(synpred154_Java_fragment)))
					{
						alt102 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 102, 1, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else if ((LA102_1==FINALLY))
				{
					alt102 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 102, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(102); }
				switch (alt102)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:896:13: catches 'finally' block
					{
					DebugLocation(896, 13);
					PushFollow(Follow._catches_in_trystatement4812);
					catches342=catches();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, catches342.Tree, catches342, retval);
					DebugLocation(896, 21);
					string_literal343=(IToken)Match(input,FINALLY,Follow._FINALLY_in_trystatement4814); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal343_tree = (object)adaptor.Create(string_literal343, retval);
					adaptor.AddChild(root_0, string_literal343_tree);
					}
					DebugLocation(896, 31);
					PushFollow(Follow._block_in_trystatement4816);
					block344=block();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, block344.Tree, block344, retval);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:897:13: catches
					{
					DebugLocation(897, 13);
					PushFollow(Follow._catches_in_trystatement4830);
					catches345=catches();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, catches345.Tree, catches345, retval);

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:898:13: 'finally' block
					{
					DebugLocation(898, 13);
					string_literal346=(IToken)Match(input,FINALLY,Follow._FINALLY_in_trystatement4844); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal346_tree = (object)adaptor.Create(string_literal346, retval);
					adaptor.AddChild(root_0, string_literal346_tree);
					}
					DebugLocation(898, 23);
					PushFollow(Follow._block_in_trystatement4846);
					block347=block();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, block347.Tree, block347, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(102); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:900:9: tryWithResourcesStatement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(900, 9);
				PushFollow(Follow._tryWithResourcesStatement_in_trystatement4866);
				tryWithResourcesStatement348=tryWithResourcesStatement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, tryWithResourcesStatement348.Tree, tryWithResourcesStatement348, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("trystatement", 62);
			LeaveRule("trystatement", 62);
			LeaveRule_trystatement();
			if (state.backtracking > 0) { Memoize(input, 62, trystatement_StartIndex); }

		}
		DebugLocation(901, 5);
		} finally { DebugExitRule(GrammarFileName, "trystatement"); }
		return retval;

	}
	// $ANTLR end "trystatement"

	partial void EnterRule_catches();
	partial void LeaveRule_catches();
	// $ANTLR start "catches"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:903:1: catches : catchClause ( catchClause )* ;
	[GrammarRule("catches")]
	private Antlr3AstNode catches()
	{
		EnterRule_catches();
		EnterRule("catches", 63);
		var retval = new Antlr3AstNode("catches");
		
		retval.Start = (IToken)input.LT(1);
		int catches_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode catchClause349 = default(Antlr3AstNode);
		Antlr3AstNode catchClause350 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "catches");
		DebugLocation(903, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 63)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:904:5: ( catchClause ( catchClause )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:904:9: catchClause ( catchClause )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(904, 9);
			PushFollow(Follow._catchClause_in_catches4887);
			catchClause349=catchClause();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, catchClause349.Tree, catchClause349, retval);
			DebugLocation(905, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:905:9: ( catchClause )*
			try { DebugEnterSubRule(104);
			while (true)
			{
				int alt104=2;
				try { DebugEnterDecision(104, false);
				int LA104_1 = input.LA(1);

				if ((LA104_1==CATCH))
				{
					alt104 = 1;
				}


				} finally { DebugExitDecision(104); }
				switch ( alt104 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:905:10: catchClause
					{
					DebugLocation(905, 10);
					PushFollow(Follow._catchClause_in_catches4898);
					catchClause350=catchClause();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, catchClause350.Tree, catchClause350, retval);

					}
					break;

				default:
					goto loop104;
				}
			}

			loop104:
				;

			} finally { DebugExitSubRule(104); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("catches", 63);
			LeaveRule("catches", 63);
			LeaveRule_catches();
			if (state.backtracking > 0) { Memoize(input, 63, catches_StartIndex); }

		}
		DebugLocation(907, 4);
		} finally { DebugExitRule(GrammarFileName, "catches"); }
		return retval;

	}
	// $ANTLR end "catches"

	partial void EnterRule_catchClause();
	partial void LeaveRule_catchClause();
	// $ANTLR start "catchClause"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:909:1: catchClause : 'catch' '(' formalParameter ')' block ;
	[GrammarRule("catchClause")]
	private Antlr3AstNode catchClause()
	{
		EnterRule_catchClause();
		EnterRule("catchClause", 64);
		var retval = new Antlr3AstNode("catchClause");
		
		retval.Start = (IToken)input.LT(1);
		int catchClause_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal351 = default(IToken);
		IToken char_literal352 = default(IToken);
		IToken char_literal354 = default(IToken);
		Antlr3AstNode formalParameter353 = default(Antlr3AstNode);
		Antlr3AstNode block355 = default(Antlr3AstNode);

		object string_literal351_tree = default(object);
		object char_literal352_tree = default(object);
		object char_literal354_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "catchClause");
		DebugLocation(909, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 64)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:910:5: ( 'catch' '(' formalParameter ')' block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:910:9: 'catch' '(' formalParameter ')' block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(910, 9);
			string_literal351=(IToken)Match(input,CATCH,Follow._CATCH_in_catchClause4929); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal351_tree = (object)adaptor.Create(string_literal351, retval);
			adaptor.AddChild(root_0, string_literal351_tree);
			}
			DebugLocation(910, 17);
			char_literal352=(IToken)Match(input,LPAREN,Follow._LPAREN_in_catchClause4931); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal352_tree = (object)adaptor.Create(char_literal352, retval);
			adaptor.AddChild(root_0, char_literal352_tree);
			}
			DebugLocation(910, 21);
			PushFollow(Follow._formalParameter_in_catchClause4933);
			formalParameter353=formalParameter();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, formalParameter353.Tree, formalParameter353, retval);
			DebugLocation(911, 9);
			char_literal354=(IToken)Match(input,RPAREN,Follow._RPAREN_in_catchClause4943); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal354_tree = (object)adaptor.Create(char_literal354, retval);
			adaptor.AddChild(root_0, char_literal354_tree);
			}
			DebugLocation(911, 13);
			PushFollow(Follow._block_in_catchClause4945);
			block355=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block355.Tree, block355, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("catchClause", 64);
			LeaveRule("catchClause", 64);
			LeaveRule_catchClause();
			if (state.backtracking > 0) { Memoize(input, 64, catchClause_StartIndex); }

		}
		DebugLocation(912, 4);
		} finally { DebugExitRule(GrammarFileName, "catchClause"); }
		return retval;

	}
	// $ANTLR end "catchClause"

	partial void EnterRule_formalParameter();
	partial void LeaveRule_formalParameter();
	// $ANTLR start "formalParameter"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:914:1: formalParameter : ( variableModifiers catchType IDENTIFIER ( '[' ']' )* | catchType IDENTIFIER ( '[' ']' )* );
	[GrammarRule("formalParameter")]
	private Antlr3AstNode formalParameter()
	{
		EnterRule_formalParameter();
		EnterRule("formalParameter", 65);
		var retval = new Antlr3AstNode("formalParameter");
		
		retval.Start = (IToken)input.LT(1);
		int formalParameter_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER358 = default(IToken);
		IToken char_literal359 = default(IToken);
		IToken char_literal360 = default(IToken);
		IToken IDENTIFIER362 = default(IToken);
		IToken char_literal363 = default(IToken);
		IToken char_literal364 = default(IToken);
		Antlr3AstNode variableModifiers356 = default(Antlr3AstNode);
		Antlr3AstNode catchType357 = default(Antlr3AstNode);
		Antlr3AstNode catchType361 = default(Antlr3AstNode);

		object IDENTIFIER358_tree = default(object);
		object char_literal359_tree = default(object);
		object char_literal360_tree = default(object);
		object IDENTIFIER362_tree = default(object);
		object char_literal363_tree = default(object);
		object char_literal364_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "formalParameter");
		DebugLocation(914, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 65)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:915:5: ( variableModifiers catchType IDENTIFIER ( '[' ']' )* | catchType IDENTIFIER ( '[' ']' )* )
			int alt107=2;
			try { DebugEnterDecision(107, false);
			switch (input.LA(1))
			{
			case FINAL:
			case MONKEYS_AT:
				{
				alt107 = 1;
				}
				break;
			case IDENTIFIER:
				{
				int LA107_2 = input.LA(2);

				if ((EvaluatePredicate(synpred158_Java_fragment)))
				{
					alt107 = 1;
				}
				else if ((true))
				{
					alt107 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 107, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
				{
				int LA107_2 = input.LA(2);

				if ((EvaluatePredicate(synpred158_Java_fragment)))
				{
					alt107 = 1;
				}
				else if ((true))
				{
					alt107 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 107, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 107, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(107); }
			switch (alt107)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:915:9: variableModifiers catchType IDENTIFIER ( '[' ']' )*
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(915, 9);
				PushFollow(Follow._variableModifiers_in_formalParameter4966);
				variableModifiers356=variableModifiers();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variableModifiers356.Tree, variableModifiers356, retval);
				DebugLocation(915, 27);
				PushFollow(Follow._catchType_in_formalParameter4968);
				catchType357=catchType();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, catchType357.Tree, catchType357, retval);
				DebugLocation(915, 37);
				IDENTIFIER358=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_formalParameter4970); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER358_tree = (object)adaptor.Create(IDENTIFIER358, retval);
				adaptor.AddChild(root_0, IDENTIFIER358_tree);
				}
				DebugLocation(916, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:916:9: ( '[' ']' )*
				try { DebugEnterSubRule(105);
				while (true)
				{
					int alt105=2;
					try { DebugEnterDecision(105, false);
					int LA105_1 = input.LA(1);

					if ((LA105_1==LBRACKET))
					{
						alt105 = 1;
					}


					} finally { DebugExitDecision(105); }
					switch ( alt105 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:916:10: '[' ']'
						{
						DebugLocation(916, 10);
						char_literal359=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_formalParameter4981); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal359_tree = (object)adaptor.Create(char_literal359, retval);
						adaptor.AddChild(root_0, char_literal359_tree);
						}
						DebugLocation(916, 14);
						char_literal360=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_formalParameter4983); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal360_tree = (object)adaptor.Create(char_literal360, retval);
						adaptor.AddChild(root_0, char_literal360_tree);
						}

						}
						break;

					default:
						goto loop105;
					}
				}

				loop105:
					;

				} finally { DebugExitSubRule(105); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:918:9: catchType IDENTIFIER ( '[' ']' )*
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(918, 9);
				PushFollow(Follow._catchType_in_formalParameter5004);
				catchType361=catchType();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, catchType361.Tree, catchType361, retval);
				DebugLocation(918, 19);
				IDENTIFIER362=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_formalParameter5006); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER362_tree = (object)adaptor.Create(IDENTIFIER362, retval);
				adaptor.AddChild(root_0, IDENTIFIER362_tree);
				}
				DebugLocation(919, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:919:9: ( '[' ']' )*
				try { DebugEnterSubRule(106);
				while (true)
				{
					int alt106=2;
					try { DebugEnterDecision(106, false);
					int LA106_1 = input.LA(1);

					if ((LA106_1==LBRACKET))
					{
						alt106 = 1;
					}


					} finally { DebugExitDecision(106); }
					switch ( alt106 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:919:10: '[' ']'
						{
						DebugLocation(919, 10);
						char_literal363=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_formalParameter5017); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal363_tree = (object)adaptor.Create(char_literal363, retval);
						adaptor.AddChild(root_0, char_literal363_tree);
						}
						DebugLocation(919, 14);
						char_literal364=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_formalParameter5019); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal364_tree = (object)adaptor.Create(char_literal364, retval);
						adaptor.AddChild(root_0, char_literal364_tree);
						}

						}
						break;

					default:
						goto loop106;
					}
				}

				loop106:
					;

				} finally { DebugExitSubRule(106); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("formalParameter", 65);
			LeaveRule("formalParameter", 65);
			LeaveRule_formalParameter();
			if (state.backtracking > 0) { Memoize(input, 65, formalParameter_StartIndex); }

		}
		DebugLocation(921, 4);
		} finally { DebugExitRule(GrammarFileName, "formalParameter"); }
		return retval;

	}
	// $ANTLR end "formalParameter"

	partial void EnterRule_catchType();
	partial void LeaveRule_catchType();
	// $ANTLR start "catchType"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:923:1: catchType : type ( '|' type )* ;
	[GrammarRule("catchType")]
	private Antlr3AstNode catchType()
	{
		EnterRule_catchType();
		EnterRule("catchType", 66);
		var retval = new Antlr3AstNode("catchType");
		
		retval.Start = (IToken)input.LT(1);
		int catchType_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal366 = default(IToken);
		Antlr3AstNode type365 = default(Antlr3AstNode);
		Antlr3AstNode type367 = default(Antlr3AstNode);

		object char_literal366_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "catchType");
		DebugLocation(923, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 66)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:924:5: ( type ( '|' type )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:924:9: type ( '|' type )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(924, 9);
			PushFollow(Follow._type_in_catchType5049);
			type365=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type365.Tree, type365, retval);
			DebugLocation(925, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:925:9: ( '|' type )*
			try { DebugEnterSubRule(108);
			while (true)
			{
				int alt108=2;
				try { DebugEnterDecision(108, false);
				int LA108_1 = input.LA(1);

				if ((LA108_1==BAR))
				{
					alt108 = 1;
				}


				} finally { DebugExitDecision(108); }
				switch ( alt108 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:925:10: '|' type
					{
					DebugLocation(925, 10);
					char_literal366=(IToken)Match(input,BAR,Follow._BAR_in_catchType5060); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal366_tree = (object)adaptor.Create(char_literal366, retval);
					adaptor.AddChild(root_0, char_literal366_tree);
					}
					DebugLocation(925, 14);
					PushFollow(Follow._type_in_catchType5062);
					type367=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type367.Tree, type367, retval);

					}
					break;

				default:
					goto loop108;
				}
			}

			loop108:
				;

			} finally { DebugExitSubRule(108); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("catchType", 66);
			LeaveRule("catchType", 66);
			LeaveRule_catchType();
			if (state.backtracking > 0) { Memoize(input, 66, catchType_StartIndex); }

		}
		DebugLocation(927, 4);
		} finally { DebugExitRule(GrammarFileName, "catchType"); }
		return retval;

	}
	// $ANTLR end "catchType"

	partial void EnterRule_tryWithResourcesStatement();
	partial void LeaveRule_tryWithResourcesStatement();
	// $ANTLR start "tryWithResourcesStatement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:929:1: tryWithResourcesStatement : 'try' resourceSpecification ( block catches 'finally' block | block 'filly' block | block catches | block ) ;
	[GrammarRule("tryWithResourcesStatement")]
	private Antlr3AstNode tryWithResourcesStatement()
	{
		EnterRule_tryWithResourcesStatement();
		EnterRule("tryWithResourcesStatement", 67);
		var retval = new Antlr3AstNode("tryWithResourcesStatement");
		
		retval.Start = (IToken)input.LT(1);
		int tryWithResourcesStatement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal368 = default(IToken);
		IToken string_literal372 = default(IToken);
		IToken string_literal375 = default(IToken);
		Antlr3AstNode resourceSpecification369 = default(Antlr3AstNode);
		Antlr3AstNode block370 = default(Antlr3AstNode);
		Antlr3AstNode catches371 = default(Antlr3AstNode);
		Antlr3AstNode block373 = default(Antlr3AstNode);
		Antlr3AstNode block374 = default(Antlr3AstNode);
		Antlr3AstNode block376 = default(Antlr3AstNode);
		Antlr3AstNode block377 = default(Antlr3AstNode);
		Antlr3AstNode catches378 = default(Antlr3AstNode);
		Antlr3AstNode block379 = default(Antlr3AstNode);

		object string_literal368_tree = default(object);
		object string_literal372_tree = default(object);
		object string_literal375_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "tryWithResourcesStatement");
		DebugLocation(929, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 67)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:930:5: ( 'try' resourceSpecification ( block catches 'finally' block | block 'filly' block | block catches | block ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:930:10: 'try' resourceSpecification ( block catches 'finally' block | block 'filly' block | block catches | block )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(930, 10);
			string_literal368=(IToken)Match(input,TRY,Follow._TRY_in_tryWithResourcesStatement5093); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal368_tree = (object)adaptor.Create(string_literal368, retval);
			adaptor.AddChild(root_0, string_literal368_tree);
			}
			DebugLocation(930, 16);
			PushFollow(Follow._resourceSpecification_in_tryWithResourcesStatement5095);
			resourceSpecification369=resourceSpecification();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, resourceSpecification369.Tree, resourceSpecification369, retval);
			DebugLocation(931, 10);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:931:10: ( block catches 'finally' block | block 'filly' block | block catches | block )
			int alt109=4;
			try { DebugEnterSubRule(109);
			try { DebugEnterDecision(109, false);
			int LA109_1 = input.LA(1);

			if ((LA109_1==LBRACE))
			{
				int LA109_2 = input.LA(2);

				if ((EvaluatePredicate(synpred161_Java_fragment)))
				{
					alt109 = 1;
				}
				else if ((EvaluatePredicate(synpred162_Java_fragment)))
				{
					alt109 = 2;
				}
				else if ((EvaluatePredicate(synpred163_Java_fragment)))
				{
					alt109 = 3;
				}
				else if ((true))
				{
					alt109 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 109, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 109, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(109); }
			switch (alt109)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:931:14: block catches 'finally' block
				{
				DebugLocation(931, 14);
				PushFollow(Follow._block_in_tryWithResourcesStatement5110);
				block370=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block370.Tree, block370, retval);
				DebugLocation(931, 20);
				PushFollow(Follow._catches_in_tryWithResourcesStatement5112);
				catches371=catches();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, catches371.Tree, catches371, retval);
				DebugLocation(931, 28);
				string_literal372=(IToken)Match(input,FINALLY,Follow._FINALLY_in_tryWithResourcesStatement5114); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal372_tree = (object)adaptor.Create(string_literal372, retval);
				adaptor.AddChild(root_0, string_literal372_tree);
				}
				DebugLocation(931, 38);
				PushFollow(Follow._block_in_tryWithResourcesStatement5116);
				block373=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block373.Tree, block373, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:932:14: block 'filly' block
				{
				DebugLocation(932, 14);
				PushFollow(Follow._block_in_tryWithResourcesStatement5131);
				block374=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block374.Tree, block374, retval);
				DebugLocation(932, 20);
				string_literal375=(IToken)Match(input,119,Follow._119_in_tryWithResourcesStatement5133); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal375_tree = (object)adaptor.Create(string_literal375, retval);
				adaptor.AddChild(root_0, string_literal375_tree);
				}
				DebugLocation(932, 28);
				PushFollow(Follow._block_in_tryWithResourcesStatement5135);
				block376=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block376.Tree, block376, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:933:14: block catches
				{
				DebugLocation(933, 14);
				PushFollow(Follow._block_in_tryWithResourcesStatement5150);
				block377=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block377.Tree, block377, retval);
				DebugLocation(933, 20);
				PushFollow(Follow._catches_in_tryWithResourcesStatement5152);
				catches378=catches();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, catches378.Tree, catches378, retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:934:14: block
				{
				DebugLocation(934, 14);
				PushFollow(Follow._block_in_tryWithResourcesStatement5167);
				block379=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block379.Tree, block379, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(109); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("tryWithResourcesStatement", 67);
			LeaveRule("tryWithResourcesStatement", 67);
			LeaveRule_tryWithResourcesStatement();
			if (state.backtracking > 0) { Memoize(input, 67, tryWithResourcesStatement_StartIndex); }

		}
		DebugLocation(936, 4);
		} finally { DebugExitRule(GrammarFileName, "tryWithResourcesStatement"); }
		return retval;

	}
	// $ANTLR end "tryWithResourcesStatement"

	partial void EnterRule_resourceSpecification();
	partial void LeaveRule_resourceSpecification();
	// $ANTLR start "resourceSpecification"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:938:1: resourceSpecification : '(' resources ( ';' ')' | ')' ) ;
	[GrammarRule("resourceSpecification")]
	private Antlr3AstNode resourceSpecification()
	{
		EnterRule_resourceSpecification();
		EnterRule("resourceSpecification", 68);
		var retval = new Antlr3AstNode("resourceSpecification");
		
		retval.Start = (IToken)input.LT(1);
		int resourceSpecification_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal380 = default(IToken);
		IToken char_literal382 = default(IToken);
		IToken char_literal383 = default(IToken);
		IToken char_literal384 = default(IToken);
		Antlr3AstNode resources381 = default(Antlr3AstNode);

		object char_literal380_tree = default(object);
		object char_literal382_tree = default(object);
		object char_literal383_tree = default(object);
		object char_literal384_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "resourceSpecification");
		DebugLocation(938, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 68)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:939:5: ( '(' resources ( ';' ')' | ')' ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:939:10: '(' resources ( ';' ')' | ')' )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(939, 10);
			char_literal380=(IToken)Match(input,LPAREN,Follow._LPAREN_in_resourceSpecification5198); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal380_tree = (object)adaptor.Create(char_literal380, retval);
			adaptor.AddChild(root_0, char_literal380_tree);
			}
			DebugLocation(939, 14);
			PushFollow(Follow._resources_in_resourceSpecification5200);
			resources381=resources();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, resources381.Tree, resources381, retval);
			DebugLocation(940, 11);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:940:11: ( ';' ')' | ')' )
			int alt110=2;
			try { DebugEnterSubRule(110);
			try { DebugEnterDecision(110, false);
			int LA110_1 = input.LA(1);

			if ((LA110_1==SEMI))
			{
				alt110 = 1;
			}
			else if ((LA110_1==RPAREN))
			{
				alt110 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 110, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(110); }
			switch (alt110)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:940:14: ';' ')'
				{
				DebugLocation(940, 14);
				char_literal382=(IToken)Match(input,SEMI,Follow._SEMI_in_resourceSpecification5215); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal382_tree = (object)adaptor.Create(char_literal382, retval);
				adaptor.AddChild(root_0, char_literal382_tree);
				}
				DebugLocation(940, 18);
				char_literal383=(IToken)Match(input,RPAREN,Follow._RPAREN_in_resourceSpecification5217); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal383_tree = (object)adaptor.Create(char_literal383, retval);
				adaptor.AddChild(root_0, char_literal383_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:941:15: ')'
				{
				DebugLocation(941, 15);
				char_literal384=(IToken)Match(input,RPAREN,Follow._RPAREN_in_resourceSpecification5233); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal384_tree = (object)adaptor.Create(char_literal384, retval);
				adaptor.AddChild(root_0, char_literal384_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(110); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("resourceSpecification", 68);
			LeaveRule("resourceSpecification", 68);
			LeaveRule_resourceSpecification();
			if (state.backtracking > 0) { Memoize(input, 68, resourceSpecification_StartIndex); }

		}
		DebugLocation(943, 4);
		} finally { DebugExitRule(GrammarFileName, "resourceSpecification"); }
		return retval;

	}
	// $ANTLR end "resourceSpecification"

	partial void EnterRule_resources();
	partial void LeaveRule_resources();
	// $ANTLR start "resources"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:945:1: resources : ( resource | resource ( ';' resource )* );
	[GrammarRule("resources")]
	private Antlr3AstNode resources()
	{
		EnterRule_resources();
		EnterRule("resources", 69);
		var retval = new Antlr3AstNode("resources");
		
		retval.Start = (IToken)input.LT(1);
		int resources_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal387 = default(IToken);
		Antlr3AstNode resource385 = default(Antlr3AstNode);
		Antlr3AstNode resource386 = default(Antlr3AstNode);
		Antlr3AstNode resource388 = default(Antlr3AstNode);

		object char_literal387_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "resources");
		DebugLocation(945, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 69)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:946:5: ( resource | resource ( ';' resource )* )
			int alt112=2;
			try { DebugEnterDecision(112, false);
			switch (input.LA(1))
			{
			case FINAL:
				{
				int LA112_2 = input.LA(2);

				if ((EvaluatePredicate(synpred165_Java_fragment)))
				{
					alt112 = 1;
				}
				else if ((true))
				{
					alt112 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 112, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case MONKEYS_AT:
				{
				int LA112_2 = input.LA(2);

				if ((EvaluatePredicate(synpred165_Java_fragment)))
				{
					alt112 = 1;
				}
				else if ((true))
				{
					alt112 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 112, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case IDENTIFIER:
				{
				int LA112_2 = input.LA(2);

				if ((EvaluatePredicate(synpred165_Java_fragment)))
				{
					alt112 = 1;
				}
				else if ((true))
				{
					alt112 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 112, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
				{
				int LA112_2 = input.LA(2);

				if ((EvaluatePredicate(synpred165_Java_fragment)))
				{
					alt112 = 1;
				}
				else if ((true))
				{
					alt112 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 112, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 112, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(112); }
			switch (alt112)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:946:10: resource
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(946, 10);
				PushFollow(Follow._resource_in_resources5265);
				resource385=resource();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, resource385.Tree, resource385, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:947:10: resource ( ';' resource )*
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(947, 10);
				PushFollow(Follow._resource_in_resources5276);
				resource386=resource();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, resource386.Tree, resource386, retval);
				DebugLocation(948, 10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:948:10: ( ';' resource )*
				try { DebugEnterSubRule(111);
				while (true)
				{
					int alt111=2;
					try { DebugEnterDecision(111, false);
					int LA111_1 = input.LA(1);

					if ((LA111_1==SEMI))
					{
						int LA111_2 = input.LA(2);

						if ((LA111_2==BOOLEAN||LA111_2==BYTE||LA111_2==CHAR||LA111_2==DOUBLE||LA111_2==FINAL||LA111_2==FLOAT||LA111_2==IDENTIFIER||LA111_2==INT||LA111_2==LONG||LA111_2==MONKEYS_AT||LA111_2==SHORT))
						{
							alt111 = 1;
						}


					}


					} finally { DebugExitDecision(111); }
					switch ( alt111 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:948:14: ';' resource
						{
						DebugLocation(948, 14);
						char_literal387=(IToken)Match(input,SEMI,Follow._SEMI_in_resources5292); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal387_tree = (object)adaptor.Create(char_literal387, retval);
						adaptor.AddChild(root_0, char_literal387_tree);
						}
						DebugLocation(948, 18);
						PushFollow(Follow._resource_in_resources5294);
						resource388=resource();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, resource388.Tree, resource388, retval);

						}
						break;

					default:
						goto loop111;
					}
				}

				loop111:
					;

				} finally { DebugExitSubRule(111); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("resources", 69);
			LeaveRule("resources", 69);
			LeaveRule_resources();
			if (state.backtracking > 0) { Memoize(input, 69, resources_StartIndex); }

		}
		DebugLocation(950, 4);
		} finally { DebugExitRule(GrammarFileName, "resources"); }
		return retval;

	}
	// $ANTLR end "resources"

	partial void EnterRule_resource();
	partial void LeaveRule_resource();
	// $ANTLR start "resource"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:952:1: resource : ( variableModifiers type IDENTIFIER | type IDENTIFIER ) ( '[' ']' )* '=' expression ;
	[GrammarRule("resource")]
	private Antlr3AstNode resource()
	{
		EnterRule_resource();
		EnterRule("resource", 70);
		var retval = new Antlr3AstNode("resource");
		
		retval.Start = (IToken)input.LT(1);
		int resource_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER391 = default(IToken);
		IToken IDENTIFIER393 = default(IToken);
		IToken char_literal394 = default(IToken);
		IToken char_literal395 = default(IToken);
		IToken char_literal396 = default(IToken);
		Antlr3AstNode variableModifiers389 = default(Antlr3AstNode);
		Antlr3AstNode type390 = default(Antlr3AstNode);
		Antlr3AstNode type392 = default(Antlr3AstNode);
		Antlr3AstNode expression397 = default(Antlr3AstNode);

		object IDENTIFIER391_tree = default(object);
		object IDENTIFIER393_tree = default(object);
		object char_literal394_tree = default(object);
		object char_literal395_tree = default(object);
		object char_literal396_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "resource");
		DebugLocation(952, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 70)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:953:5: ( ( variableModifiers type IDENTIFIER | type IDENTIFIER ) ( '[' ']' )* '=' expression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:953:10: ( variableModifiers type IDENTIFIER | type IDENTIFIER ) ( '[' ']' )* '=' expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(953, 10);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:953:10: ( variableModifiers type IDENTIFIER | type IDENTIFIER )
			int alt113=2;
			try { DebugEnterSubRule(113);
			try { DebugEnterDecision(113, false);
			switch (input.LA(1))
			{
			case FINAL:
			case MONKEYS_AT:
				{
				alt113 = 1;
				}
				break;
			case IDENTIFIER:
				{
				int LA113_2 = input.LA(2);

				if ((EvaluatePredicate(synpred167_Java_fragment)))
				{
					alt113 = 1;
				}
				else if ((true))
				{
					alt113 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 113, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
				{
				int LA113_2 = input.LA(2);

				if ((EvaluatePredicate(synpred167_Java_fragment)))
				{
					alt113 = 1;
				}
				else if ((true))
				{
					alt113 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 113, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 113, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(113); }
			switch (alt113)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:953:14: variableModifiers type IDENTIFIER
				{
				DebugLocation(953, 14);
				PushFollow(Follow._variableModifiers_in_resource5330);
				variableModifiers389=variableModifiers();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variableModifiers389.Tree, variableModifiers389, retval);
				DebugLocation(953, 32);
				PushFollow(Follow._type_in_resource5332);
				type390=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type390.Tree, type390, retval);
				DebugLocation(953, 37);
				IDENTIFIER391=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_resource5334); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER391_tree = (object)adaptor.Create(IDENTIFIER391, retval);
				adaptor.AddChild(root_0, IDENTIFIER391_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:954:14: type IDENTIFIER
				{
				DebugLocation(954, 14);
				PushFollow(Follow._type_in_resource5349);
				type392=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type392.Tree, type392, retval);
				DebugLocation(954, 19);
				IDENTIFIER393=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_resource5351); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER393_tree = (object)adaptor.Create(IDENTIFIER393, retval);
				adaptor.AddChild(root_0, IDENTIFIER393_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(113); }

			DebugLocation(956, 10);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:956:10: ( '[' ']' )*
			try { DebugEnterSubRule(114);
			while (true)
			{
				int alt114=2;
				try { DebugEnterDecision(114, false);
				int LA114_1 = input.LA(1);

				if ((LA114_1==LBRACKET))
				{
					alt114 = 1;
				}


				} finally { DebugExitDecision(114); }
				switch ( alt114 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:956:14: '[' ']'
					{
					DebugLocation(956, 14);
					char_literal394=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_resource5377); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal394_tree = (object)adaptor.Create(char_literal394, retval);
					adaptor.AddChild(root_0, char_literal394_tree);
					}
					DebugLocation(956, 18);
					char_literal395=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_resource5379); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal395_tree = (object)adaptor.Create(char_literal395, retval);
					adaptor.AddChild(root_0, char_literal395_tree);
					}

					}
					break;

				default:
					goto loop114;
				}
			}

			loop114:
				;

			} finally { DebugExitSubRule(114); }

			DebugLocation(958, 10);
			char_literal396=(IToken)Match(input,EQ,Follow._EQ_in_resource5402); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal396_tree = (object)adaptor.Create(char_literal396, retval);
			adaptor.AddChild(root_0, char_literal396_tree);
			}
			DebugLocation(958, 14);
			PushFollow(Follow._expression_in_resource5404);
			expression397=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression397.Tree, expression397, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("resource", 70);
			LeaveRule("resource", 70);
			LeaveRule_resource();
			if (state.backtracking > 0) { Memoize(input, 70, resource_StartIndex); }

		}
		DebugLocation(959, 4);
		} finally { DebugExitRule(GrammarFileName, "resource"); }
		return retval;

	}
	// $ANTLR end "resource"

	partial void EnterRule_forstatement();
	partial void LeaveRule_forstatement();
	// $ANTLR start "forstatement"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:961:1: forstatement : ( 'for' '(' variableModifiers type IDENTIFIER ':' expression ')' statement | 'for' '(' ( forInit )? ';' ( expression )? ';' ( expressionList )? ')' statement );
	[GrammarRule("forstatement")]
	private Antlr3AstNode forstatement()
	{
		EnterRule_forstatement();
		EnterRule("forstatement", 71);
		var retval = new Antlr3AstNode("forstatement");
		
		retval.Start = (IToken)input.LT(1);
		int forstatement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal398 = default(IToken);
		IToken char_literal399 = default(IToken);
		IToken IDENTIFIER402 = default(IToken);
		IToken char_literal403 = default(IToken);
		IToken char_literal405 = default(IToken);
		IToken string_literal407 = default(IToken);
		IToken char_literal408 = default(IToken);
		IToken char_literal410 = default(IToken);
		IToken char_literal412 = default(IToken);
		IToken char_literal414 = default(IToken);
		Antlr3AstNode variableModifiers400 = default(Antlr3AstNode);
		Antlr3AstNode type401 = default(Antlr3AstNode);
		Antlr3AstNode expression404 = default(Antlr3AstNode);
		Antlr3AstNode statement406 = default(Antlr3AstNode);
		Antlr3AstNode forInit409 = default(Antlr3AstNode);
		Antlr3AstNode expression411 = default(Antlr3AstNode);
		Antlr3AstNode expressionList413 = default(Antlr3AstNode);
		Antlr3AstNode statement415 = default(Antlr3AstNode);

		object string_literal398_tree = default(object);
		object char_literal399_tree = default(object);
		object IDENTIFIER402_tree = default(object);
		object char_literal403_tree = default(object);
		object char_literal405_tree = default(object);
		object string_literal407_tree = default(object);
		object char_literal408_tree = default(object);
		object char_literal410_tree = default(object);
		object char_literal412_tree = default(object);
		object char_literal414_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "forstatement");
		DebugLocation(961, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 71)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:962:5: ( 'for' '(' variableModifiers type IDENTIFIER ':' expression ')' statement | 'for' '(' ( forInit )? ';' ( expression )? ';' ( expressionList )? ')' statement )
			int alt118=2;
			try { DebugEnterDecision(118, false);
			int LA118_1 = input.LA(1);

			if ((LA118_1==FOR))
			{
				int LA118_2 = input.LA(2);

				if ((EvaluatePredicate(synpred169_Java_fragment)))
				{
					alt118 = 1;
				}
				else if ((true))
				{
					alt118 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 118, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 118, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(118); }
			switch (alt118)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:964:9: 'for' '(' variableModifiers type IDENTIFIER ':' expression ')' statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(964, 9);
				string_literal398=(IToken)Match(input,FOR,Follow._FOR_in_forstatement5443); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal398_tree = (object)adaptor.Create(string_literal398, retval);
				adaptor.AddChild(root_0, string_literal398_tree);
				}
				DebugLocation(964, 15);
				char_literal399=(IToken)Match(input,LPAREN,Follow._LPAREN_in_forstatement5445); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal399_tree = (object)adaptor.Create(char_literal399, retval);
				adaptor.AddChild(root_0, char_literal399_tree);
				}
				DebugLocation(964, 19);
				PushFollow(Follow._variableModifiers_in_forstatement5447);
				variableModifiers400=variableModifiers();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variableModifiers400.Tree, variableModifiers400, retval);
				DebugLocation(964, 37);
				PushFollow(Follow._type_in_forstatement5449);
				type401=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type401.Tree, type401, retval);
				DebugLocation(964, 42);
				IDENTIFIER402=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_forstatement5451); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER402_tree = (object)adaptor.Create(IDENTIFIER402, retval);
				adaptor.AddChild(root_0, IDENTIFIER402_tree);
				}
				DebugLocation(964, 53);
				char_literal403=(IToken)Match(input,COLON,Follow._COLON_in_forstatement5453); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal403_tree = (object)adaptor.Create(char_literal403, retval);
				adaptor.AddChild(root_0, char_literal403_tree);
				}
				DebugLocation(965, 9);
				PushFollow(Follow._expression_in_forstatement5464);
				expression404=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression404.Tree, expression404, retval);
				DebugLocation(965, 20);
				char_literal405=(IToken)Match(input,RPAREN,Follow._RPAREN_in_forstatement5466); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal405_tree = (object)adaptor.Create(char_literal405, retval);
				adaptor.AddChild(root_0, char_literal405_tree);
				}
				DebugLocation(965, 24);
				PushFollow(Follow._statement_in_forstatement5468);
				statement406=statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, statement406.Tree, statement406, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:968:9: 'for' '(' ( forInit )? ';' ( expression )? ';' ( expressionList )? ')' statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(968, 9);
				string_literal407=(IToken)Match(input,FOR,Follow._FOR_in_forstatement5500); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal407_tree = (object)adaptor.Create(string_literal407, retval);
				adaptor.AddChild(root_0, string_literal407_tree);
				}
				DebugLocation(968, 15);
				char_literal408=(IToken)Match(input,LPAREN,Follow._LPAREN_in_forstatement5502); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal408_tree = (object)adaptor.Create(char_literal408, retval);
				adaptor.AddChild(root_0, char_literal408_tree);
				}
				DebugLocation(969, 17);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:969:17: ( forInit )?
				int alt115=2;
				try { DebugEnterSubRule(115);
				try { DebugEnterDecision(115, false);
				int LA115_1 = input.LA(1);

				if ((LA115_1==BANG||LA115_1==BOOLEAN||LA115_1==BYTE||(LA115_1>=CHAR && LA115_1<=CHARLITERAL)||(LA115_1>=DOUBLE && LA115_1<=DOUBLELITERAL)||(LA115_1>=FALSE && LA115_1<=FINAL)||(LA115_1>=FLOAT && LA115_1<=FLOATLITERAL)||LA115_1==IDENTIFIER||LA115_1==INT||LA115_1==INTLITERAL||(LA115_1>=LONG && LA115_1<=LPAREN)||LA115_1==MONKEYS_AT||(LA115_1>=NEW && LA115_1<=NULL)||LA115_1==PLUS||LA115_1==PLUSPLUS||LA115_1==SHORT||(LA115_1>=STRINGLITERAL && LA115_1<=SUB)||(LA115_1>=SUBSUB && LA115_1<=SUPER)||LA115_1==THIS||LA115_1==TILDE||LA115_1==TRUE||LA115_1==VOID))
				{
					alt115 = 1;
				}
				} finally { DebugExitDecision(115); }
				switch (alt115)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:969:18: forInit
					{
					DebugLocation(969, 18);
					PushFollow(Follow._forInit_in_forstatement5522);
					forInit409=forInit();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, forInit409.Tree, forInit409, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(115); }

				DebugLocation(970, 20);
				char_literal410=(IToken)Match(input,SEMI,Follow._SEMI_in_forstatement5543); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal410_tree = (object)adaptor.Create(char_literal410, retval);
				adaptor.AddChild(root_0, char_literal410_tree);
				}
				DebugLocation(971, 17);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:971:17: ( expression )?
				int alt116=2;
				try { DebugEnterSubRule(116);
				try { DebugEnterDecision(116, false);
				int LA116_1 = input.LA(1);

				if ((LA116_1==BANG||LA116_1==BOOLEAN||LA116_1==BYTE||(LA116_1>=CHAR && LA116_1<=CHARLITERAL)||(LA116_1>=DOUBLE && LA116_1<=DOUBLELITERAL)||LA116_1==FALSE||(LA116_1>=FLOAT && LA116_1<=FLOATLITERAL)||LA116_1==IDENTIFIER||LA116_1==INT||LA116_1==INTLITERAL||(LA116_1>=LONG && LA116_1<=LPAREN)||(LA116_1>=NEW && LA116_1<=NULL)||LA116_1==PLUS||LA116_1==PLUSPLUS||LA116_1==SHORT||(LA116_1>=STRINGLITERAL && LA116_1<=SUB)||(LA116_1>=SUBSUB && LA116_1<=SUPER)||LA116_1==THIS||LA116_1==TILDE||LA116_1==TRUE||LA116_1==VOID))
				{
					alt116 = 1;
				}
				} finally { DebugExitDecision(116); }
				switch (alt116)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:971:18: expression
					{
					DebugLocation(971, 18);
					PushFollow(Follow._expression_in_forstatement5563);
					expression411=expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, expression411.Tree, expression411, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(116); }

				DebugLocation(972, 20);
				char_literal412=(IToken)Match(input,SEMI,Follow._SEMI_in_forstatement5584); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal412_tree = (object)adaptor.Create(char_literal412, retval);
				adaptor.AddChild(root_0, char_literal412_tree);
				}
				DebugLocation(973, 17);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:973:17: ( expressionList )?
				int alt117=2;
				try { DebugEnterSubRule(117);
				try { DebugEnterDecision(117, false);
				int LA117_1 = input.LA(1);

				if ((LA117_1==BANG||LA117_1==BOOLEAN||LA117_1==BYTE||(LA117_1>=CHAR && LA117_1<=CHARLITERAL)||(LA117_1>=DOUBLE && LA117_1<=DOUBLELITERAL)||LA117_1==FALSE||(LA117_1>=FLOAT && LA117_1<=FLOATLITERAL)||LA117_1==IDENTIFIER||LA117_1==INT||LA117_1==INTLITERAL||(LA117_1>=LONG && LA117_1<=LPAREN)||(LA117_1>=NEW && LA117_1<=NULL)||LA117_1==PLUS||LA117_1==PLUSPLUS||LA117_1==SHORT||(LA117_1>=STRINGLITERAL && LA117_1<=SUB)||(LA117_1>=SUBSUB && LA117_1<=SUPER)||LA117_1==THIS||LA117_1==TILDE||LA117_1==TRUE||LA117_1==VOID))
				{
					alt117 = 1;
				}
				} finally { DebugExitDecision(117); }
				switch (alt117)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:973:18: expressionList
					{
					DebugLocation(973, 18);
					PushFollow(Follow._expressionList_in_forstatement5604);
					expressionList413=expressionList();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, expressionList413.Tree, expressionList413, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(117); }

				DebugLocation(974, 20);
				char_literal414=(IToken)Match(input,RPAREN,Follow._RPAREN_in_forstatement5625); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal414_tree = (object)adaptor.Create(char_literal414, retval);
				adaptor.AddChild(root_0, char_literal414_tree);
				}
				DebugLocation(974, 24);
				PushFollow(Follow._statement_in_forstatement5627);
				statement415=statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, statement415.Tree, statement415, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("forstatement", 71);
			LeaveRule("forstatement", 71);
			LeaveRule_forstatement();
			if (state.backtracking > 0) { Memoize(input, 71, forstatement_StartIndex); }

		}
		DebugLocation(975, 4);
		} finally { DebugExitRule(GrammarFileName, "forstatement"); }
		return retval;

	}
	// $ANTLR end "forstatement"

	partial void EnterRule_forInit();
	partial void LeaveRule_forInit();
	// $ANTLR start "forInit"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:977:1: forInit : ( localVariableDeclaration | expressionList );
	[GrammarRule("forInit")]
	private Antlr3AstNode forInit()
	{
		EnterRule_forInit();
		EnterRule("forInit", 72);
		var retval = new Antlr3AstNode("forInit");
		
		retval.Start = (IToken)input.LT(1);
		int forInit_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode localVariableDeclaration416 = default(Antlr3AstNode);
		Antlr3AstNode expressionList417 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "forInit");
		DebugLocation(977, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 72)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:978:5: ( localVariableDeclaration | expressionList )
			int alt119=2;
			try { DebugEnterDecision(119, false);
			switch (input.LA(1))
			{
			case FINAL:
			case MONKEYS_AT:
				{
				alt119 = 1;
				}
				break;
			case IDENTIFIER:
				{
				int LA119_2 = input.LA(2);

				if ((EvaluatePredicate(synpred173_Java_fragment)))
				{
					alt119 = 1;
				}
				else if ((true))
				{
					alt119 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 119, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
				{
				int LA119_2 = input.LA(2);

				if ((EvaluatePredicate(synpred173_Java_fragment)))
				{
					alt119 = 1;
				}
				else if ((true))
				{
					alt119 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 119, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case BANG:
			case CHARLITERAL:
			case DOUBLELITERAL:
			case FALSE:
			case FLOATLITERAL:
			case INTLITERAL:
			case LONGLITERAL:
			case LPAREN:
			case NEW:
			case NULL:
			case PLUS:
			case PLUSPLUS:
			case STRINGLITERAL:
			case SUB:
			case SUBSUB:
			case SUPER:
			case THIS:
			case TILDE:
			case TRUE:
			case VOID:
				{
				alt119 = 2;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 119, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(119); }
			switch (alt119)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:978:9: localVariableDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(978, 9);
				PushFollow(Follow._localVariableDeclaration_in_forInit5647);
				localVariableDeclaration416=localVariableDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, localVariableDeclaration416.Tree, localVariableDeclaration416, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:979:9: expressionList
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(979, 9);
				PushFollow(Follow._expressionList_in_forInit5657);
				expressionList417=expressionList();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expressionList417.Tree, expressionList417, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("forInit", 72);
			LeaveRule("forInit", 72);
			LeaveRule_forInit();
			if (state.backtracking > 0) { Memoize(input, 72, forInit_StartIndex); }

		}
		DebugLocation(980, 4);
		} finally { DebugExitRule(GrammarFileName, "forInit"); }
		return retval;

	}
	// $ANTLR end "forInit"

	partial void EnterRule_parExpression();
	partial void LeaveRule_parExpression();
	// $ANTLR start "parExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:982:1: parExpression : '(' expression ')' ;
	[GrammarRule("parExpression")]
	private Antlr3AstNode parExpression()
	{
		EnterRule_parExpression();
		EnterRule("parExpression", 73);
		var retval = new Antlr3AstNode("parExpression");
		
		retval.Start = (IToken)input.LT(1);
		int parExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal418 = default(IToken);
		IToken char_literal420 = default(IToken);
		Antlr3AstNode expression419 = default(Antlr3AstNode);

		object char_literal418_tree = default(object);
		object char_literal420_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "parExpression");
		DebugLocation(982, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 73)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:983:5: ( '(' expression ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:983:9: '(' expression ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(983, 9);
			char_literal418=(IToken)Match(input,LPAREN,Follow._LPAREN_in_parExpression5677); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal418_tree = (object)adaptor.Create(char_literal418, retval);
			adaptor.AddChild(root_0, char_literal418_tree);
			}
			DebugLocation(983, 13);
			PushFollow(Follow._expression_in_parExpression5679);
			expression419=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression419.Tree, expression419, retval);
			DebugLocation(983, 24);
			char_literal420=(IToken)Match(input,RPAREN,Follow._RPAREN_in_parExpression5681); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal420_tree = (object)adaptor.Create(char_literal420, retval);
			adaptor.AddChild(root_0, char_literal420_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("parExpression", 73);
			LeaveRule("parExpression", 73);
			LeaveRule_parExpression();
			if (state.backtracking > 0) { Memoize(input, 73, parExpression_StartIndex); }

		}
		DebugLocation(984, 4);
		} finally { DebugExitRule(GrammarFileName, "parExpression"); }
		return retval;

	}
	// $ANTLR end "parExpression"

	partial void EnterRule_expressionList();
	partial void LeaveRule_expressionList();
	// $ANTLR start "expressionList"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:986:1: expressionList : expression ( ',' expression )* ;
	[GrammarRule("expressionList")]
	private Antlr3AstNode expressionList()
	{
		EnterRule_expressionList();
		EnterRule("expressionList", 74);
		var retval = new Antlr3AstNode("expressionList");
		
		retval.Start = (IToken)input.LT(1);
		int expressionList_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal422 = default(IToken);
		Antlr3AstNode expression421 = default(Antlr3AstNode);
		Antlr3AstNode expression423 = default(Antlr3AstNode);

		object char_literal422_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "expressionList");
		DebugLocation(986, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 74)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:987:5: ( expression ( ',' expression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:987:9: expression ( ',' expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(987, 9);
			PushFollow(Follow._expression_in_expressionList5701);
			expression421=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression421.Tree, expression421, retval);
			DebugLocation(988, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:988:9: ( ',' expression )*
			try { DebugEnterSubRule(120);
			while (true)
			{
				int alt120=2;
				try { DebugEnterDecision(120, false);
				int LA120_1 = input.LA(1);

				if ((LA120_1==COMMA))
				{
					alt120 = 1;
				}


				} finally { DebugExitDecision(120); }
				switch ( alt120 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:988:10: ',' expression
					{
					DebugLocation(988, 10);
					char_literal422=(IToken)Match(input,COMMA,Follow._COMMA_in_expressionList5712); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal422_tree = (object)adaptor.Create(char_literal422, retval);
					adaptor.AddChild(root_0, char_literal422_tree);
					}
					DebugLocation(988, 14);
					PushFollow(Follow._expression_in_expressionList5714);
					expression423=expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, expression423.Tree, expression423, retval);

					}
					break;

				default:
					goto loop120;
				}
			}

			loop120:
				;

			} finally { DebugExitSubRule(120); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("expressionList", 74);
			LeaveRule("expressionList", 74);
			LeaveRule_expressionList();
			if (state.backtracking > 0) { Memoize(input, 74, expressionList_StartIndex); }

		}
		DebugLocation(990, 4);
		} finally { DebugExitRule(GrammarFileName, "expressionList"); }
		return retval;

	}
	// $ANTLR end "expressionList"

	partial void EnterRule_expression();
	partial void LeaveRule_expression();
	// $ANTLR start "expression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:993:1: expression : conditionalExpression ( assignmentOperator expression )? ;
	[GrammarRule("expression")]
	private Antlr3AstNode expression()
	{
		EnterRule_expression();
		EnterRule("expression", 75);
		var retval = new Antlr3AstNode("expression");
		
		retval.Start = (IToken)input.LT(1);
		int expression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode conditionalExpression424 = default(Antlr3AstNode);
		Antlr3AstNode assignmentOperator425 = default(Antlr3AstNode);
		Antlr3AstNode expression426 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "expression");
		DebugLocation(993, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 75)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:994:5: ( conditionalExpression ( assignmentOperator expression )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:994:9: conditionalExpression ( assignmentOperator expression )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(994, 9);
			PushFollow(Follow._conditionalExpression_in_expression5746);
			conditionalExpression424=conditionalExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, conditionalExpression424.Tree, conditionalExpression424, retval);
			DebugLocation(995, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:995:9: ( assignmentOperator expression )?
			int alt121=2;
			try { DebugEnterSubRule(121);
			try { DebugEnterDecision(121, false);
			int LA121_1 = input.LA(1);

			if ((LA121_1==AMPEQ||LA121_1==BAREQ||LA121_1==CARETEQ||LA121_1==EQ||LA121_1==GT||LA121_1==LT||LA121_1==PERCENTEQ||LA121_1==PLUSEQ||LA121_1==SLASHEQ||LA121_1==STAREQ||LA121_1==SUBEQ))
			{
				alt121 = 1;
			}
			} finally { DebugExitDecision(121); }
			switch (alt121)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:995:10: assignmentOperator expression
				{
				DebugLocation(995, 10);
				PushFollow(Follow._assignmentOperator_in_expression5757);
				assignmentOperator425=assignmentOperator();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, assignmentOperator425.Tree, assignmentOperator425, retval);
				DebugLocation(995, 29);
				PushFollow(Follow._expression_in_expression5759);
				expression426=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression426.Tree, expression426, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(121); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("expression", 75);
			LeaveRule("expression", 75);
			LeaveRule_expression();
			if (state.backtracking > 0) { Memoize(input, 75, expression_StartIndex); }

		}
		DebugLocation(997, 4);
		} finally { DebugExitRule(GrammarFileName, "expression"); }
		return retval;

	}
	// $ANTLR end "expression"

	partial void EnterRule_assignmentOperator();
	partial void LeaveRule_assignmentOperator();
	// $ANTLR start "assignmentOperator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1000:1: assignmentOperator : ( '=' | '+=' | '-=' | '*=' | '/=' | '&=' | '|=' | '^=' | '%=' | '<' '<' '=' | '>' '>' '>' '=' | '>' '>' '=' );
	[GrammarRule("assignmentOperator")]
	private Antlr3AstNode assignmentOperator()
	{
		EnterRule_assignmentOperator();
		EnterRule("assignmentOperator", 76);
		var retval = new Antlr3AstNode("assignmentOperator");
		
		retval.Start = (IToken)input.LT(1);
		int assignmentOperator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal427 = default(IToken);
		IToken string_literal428 = default(IToken);
		IToken string_literal429 = default(IToken);
		IToken string_literal430 = default(IToken);
		IToken string_literal431 = default(IToken);
		IToken string_literal432 = default(IToken);
		IToken string_literal433 = default(IToken);
		IToken string_literal434 = default(IToken);
		IToken string_literal435 = default(IToken);
		IToken char_literal436 = default(IToken);
		IToken char_literal437 = default(IToken);
		IToken char_literal438 = default(IToken);
		IToken char_literal439 = default(IToken);
		IToken char_literal440 = default(IToken);
		IToken char_literal441 = default(IToken);
		IToken char_literal442 = default(IToken);
		IToken char_literal443 = default(IToken);
		IToken char_literal444 = default(IToken);
		IToken char_literal445 = default(IToken);

		object char_literal427_tree = default(object);
		object string_literal428_tree = default(object);
		object string_literal429_tree = default(object);
		object string_literal430_tree = default(object);
		object string_literal431_tree = default(object);
		object string_literal432_tree = default(object);
		object string_literal433_tree = default(object);
		object string_literal434_tree = default(object);
		object string_literal435_tree = default(object);
		object char_literal436_tree = default(object);
		object char_literal437_tree = default(object);
		object char_literal438_tree = default(object);
		object char_literal439_tree = default(object);
		object char_literal440_tree = default(object);
		object char_literal441_tree = default(object);
		object char_literal442_tree = default(object);
		object char_literal443_tree = default(object);
		object char_literal444_tree = default(object);
		object char_literal445_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "assignmentOperator");
		DebugLocation(1000, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 76)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1001:5: ( '=' | '+=' | '-=' | '*=' | '/=' | '&=' | '|=' | '^=' | '%=' | '<' '<' '=' | '>' '>' '>' '=' | '>' '>' '=' )
			int alt122=12;
			try { DebugEnterDecision(122, false);
			switch (input.LA(1))
			{
			case EQ:
				{
				alt122 = 1;
				}
				break;
			case PLUSEQ:
				{
				alt122 = 2;
				}
				break;
			case SUBEQ:
				{
				alt122 = 3;
				}
				break;
			case STAREQ:
				{
				alt122 = 4;
				}
				break;
			case SLASHEQ:
				{
				alt122 = 5;
				}
				break;
			case AMPEQ:
				{
				alt122 = 6;
				}
				break;
			case BAREQ:
				{
				alt122 = 7;
				}
				break;
			case CARETEQ:
				{
				alt122 = 8;
				}
				break;
			case PERCENTEQ:
				{
				alt122 = 9;
				}
				break;
			case LT:
				{
				alt122 = 10;
				}
				break;
			case GT:
				{
				int LA122_2 = input.LA(2);

				if ((LA122_2==GT))
				{
					int LA122_3 = input.LA(3);

					if ((LA122_3==GT))
					{
						alt122 = 11;
					}
					else if ((LA122_3==EQ))
					{
						alt122 = 12;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 122, 12, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 122, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 122, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(122); }
			switch (alt122)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1001:9: '='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1001, 9);
				char_literal427=(IToken)Match(input,EQ,Follow._EQ_in_assignmentOperator5791); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal427_tree = (object)adaptor.Create(char_literal427, retval);
				adaptor.AddChild(root_0, char_literal427_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1002:9: '+='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1002, 9);
				string_literal428=(IToken)Match(input,PLUSEQ,Follow._PLUSEQ_in_assignmentOperator5801); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal428_tree = (object)adaptor.Create(string_literal428, retval);
				adaptor.AddChild(root_0, string_literal428_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1003:9: '-='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1003, 9);
				string_literal429=(IToken)Match(input,SUBEQ,Follow._SUBEQ_in_assignmentOperator5811); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal429_tree = (object)adaptor.Create(string_literal429, retval);
				adaptor.AddChild(root_0, string_literal429_tree);
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1004:9: '*='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1004, 9);
				string_literal430=(IToken)Match(input,STAREQ,Follow._STAREQ_in_assignmentOperator5821); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal430_tree = (object)adaptor.Create(string_literal430, retval);
				adaptor.AddChild(root_0, string_literal430_tree);
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1005:9: '/='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1005, 9);
				string_literal431=(IToken)Match(input,SLASHEQ,Follow._SLASHEQ_in_assignmentOperator5831); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal431_tree = (object)adaptor.Create(string_literal431, retval);
				adaptor.AddChild(root_0, string_literal431_tree);
				}

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1006:9: '&='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1006, 9);
				string_literal432=(IToken)Match(input,AMPEQ,Follow._AMPEQ_in_assignmentOperator5841); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal432_tree = (object)adaptor.Create(string_literal432, retval);
				adaptor.AddChild(root_0, string_literal432_tree);
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1007:9: '|='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1007, 9);
				string_literal433=(IToken)Match(input,BAREQ,Follow._BAREQ_in_assignmentOperator5851); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal433_tree = (object)adaptor.Create(string_literal433, retval);
				adaptor.AddChild(root_0, string_literal433_tree);
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1008:9: '^='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1008, 9);
				string_literal434=(IToken)Match(input,CARETEQ,Follow._CARETEQ_in_assignmentOperator5861); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal434_tree = (object)adaptor.Create(string_literal434, retval);
				adaptor.AddChild(root_0, string_literal434_tree);
				}

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1009:9: '%='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1009, 9);
				string_literal435=(IToken)Match(input,PERCENTEQ,Follow._PERCENTEQ_in_assignmentOperator5871); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal435_tree = (object)adaptor.Create(string_literal435, retval);
				adaptor.AddChild(root_0, string_literal435_tree);
				}

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1010:10: '<' '<' '='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1010, 10);
				char_literal436=(IToken)Match(input,LT,Follow._LT_in_assignmentOperator5882); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal436_tree = (object)adaptor.Create(char_literal436, retval);
				adaptor.AddChild(root_0, char_literal436_tree);
				}
				DebugLocation(1010, 14);
				char_literal437=(IToken)Match(input,LT,Follow._LT_in_assignmentOperator5884); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal437_tree = (object)adaptor.Create(char_literal437, retval);
				adaptor.AddChild(root_0, char_literal437_tree);
				}
				DebugLocation(1010, 18);
				char_literal438=(IToken)Match(input,EQ,Follow._EQ_in_assignmentOperator5886); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal438_tree = (object)adaptor.Create(char_literal438, retval);
				adaptor.AddChild(root_0, char_literal438_tree);
				}

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1011:10: '>' '>' '>' '='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1011, 10);
				char_literal439=(IToken)Match(input,GT,Follow._GT_in_assignmentOperator5897); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal439_tree = (object)adaptor.Create(char_literal439, retval);
				adaptor.AddChild(root_0, char_literal439_tree);
				}
				DebugLocation(1011, 14);
				char_literal440=(IToken)Match(input,GT,Follow._GT_in_assignmentOperator5899); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal440_tree = (object)adaptor.Create(char_literal440, retval);
				adaptor.AddChild(root_0, char_literal440_tree);
				}
				DebugLocation(1011, 18);
				char_literal441=(IToken)Match(input,GT,Follow._GT_in_assignmentOperator5901); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal441_tree = (object)adaptor.Create(char_literal441, retval);
				adaptor.AddChild(root_0, char_literal441_tree);
				}
				DebugLocation(1011, 22);
				char_literal442=(IToken)Match(input,EQ,Follow._EQ_in_assignmentOperator5903); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal442_tree = (object)adaptor.Create(char_literal442, retval);
				adaptor.AddChild(root_0, char_literal442_tree);
				}

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1012:10: '>' '>' '='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1012, 10);
				char_literal443=(IToken)Match(input,GT,Follow._GT_in_assignmentOperator5914); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal443_tree = (object)adaptor.Create(char_literal443, retval);
				adaptor.AddChild(root_0, char_literal443_tree);
				}
				DebugLocation(1012, 14);
				char_literal444=(IToken)Match(input,GT,Follow._GT_in_assignmentOperator5916); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal444_tree = (object)adaptor.Create(char_literal444, retval);
				adaptor.AddChild(root_0, char_literal444_tree);
				}
				DebugLocation(1012, 18);
				char_literal445=(IToken)Match(input,EQ,Follow._EQ_in_assignmentOperator5918); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal445_tree = (object)adaptor.Create(char_literal445, retval);
				adaptor.AddChild(root_0, char_literal445_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("assignmentOperator", 76);
			LeaveRule("assignmentOperator", 76);
			LeaveRule_assignmentOperator();
			if (state.backtracking > 0) { Memoize(input, 76, assignmentOperator_StartIndex); }

		}
		DebugLocation(1013, 4);
		} finally { DebugExitRule(GrammarFileName, "assignmentOperator"); }
		return retval;

	}
	// $ANTLR end "assignmentOperator"

	partial void EnterRule_conditionalExpression();
	partial void LeaveRule_conditionalExpression();
	// $ANTLR start "conditionalExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1016:1: conditionalExpression : conditionalOrExpression ( '?' expression ':' conditionalExpression )? ;
	[GrammarRule("conditionalExpression")]
	private Antlr3AstNode conditionalExpression()
	{
		EnterRule_conditionalExpression();
		EnterRule("conditionalExpression", 77);
		var retval = new Antlr3AstNode("conditionalExpression");
		
		retval.Start = (IToken)input.LT(1);
		int conditionalExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal447 = default(IToken);
		IToken char_literal449 = default(IToken);
		Antlr3AstNode conditionalOrExpression446 = default(Antlr3AstNode);
		Antlr3AstNode expression448 = default(Antlr3AstNode);
		Antlr3AstNode conditionalExpression450 = default(Antlr3AstNode);

		object char_literal447_tree = default(object);
		object char_literal449_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "conditionalExpression");
		DebugLocation(1016, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 77)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1017:5: ( conditionalOrExpression ( '?' expression ':' conditionalExpression )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1017:9: conditionalOrExpression ( '?' expression ':' conditionalExpression )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1017, 9);
			PushFollow(Follow._conditionalOrExpression_in_conditionalExpression5939);
			conditionalOrExpression446=conditionalOrExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, conditionalOrExpression446.Tree, conditionalOrExpression446, retval);
			DebugLocation(1018, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1018:9: ( '?' expression ':' conditionalExpression )?
			int alt123=2;
			try { DebugEnterSubRule(123);
			try { DebugEnterDecision(123, false);
			int LA123_1 = input.LA(1);

			if ((LA123_1==QUES))
			{
				alt123 = 1;
			}
			} finally { DebugExitDecision(123); }
			switch (alt123)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1018:10: '?' expression ':' conditionalExpression
				{
				DebugLocation(1018, 10);
				char_literal447=(IToken)Match(input,QUES,Follow._QUES_in_conditionalExpression5950); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal447_tree = (object)adaptor.Create(char_literal447, retval);
				adaptor.AddChild(root_0, char_literal447_tree);
				}
				DebugLocation(1018, 14);
				PushFollow(Follow._expression_in_conditionalExpression5952);
				expression448=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression448.Tree, expression448, retval);
				DebugLocation(1018, 25);
				char_literal449=(IToken)Match(input,COLON,Follow._COLON_in_conditionalExpression5954); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal449_tree = (object)adaptor.Create(char_literal449, retval);
				adaptor.AddChild(root_0, char_literal449_tree);
				}
				DebugLocation(1018, 29);
				PushFollow(Follow._conditionalExpression_in_conditionalExpression5956);
				conditionalExpression450=conditionalExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, conditionalExpression450.Tree, conditionalExpression450, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(123); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("conditionalExpression", 77);
			LeaveRule("conditionalExpression", 77);
			LeaveRule_conditionalExpression();
			if (state.backtracking > 0) { Memoize(input, 77, conditionalExpression_StartIndex); }

		}
		DebugLocation(1020, 4);
		} finally { DebugExitRule(GrammarFileName, "conditionalExpression"); }
		return retval;

	}
	// $ANTLR end "conditionalExpression"

	partial void EnterRule_conditionalOrExpression();
	partial void LeaveRule_conditionalOrExpression();
	// $ANTLR start "conditionalOrExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1022:1: conditionalOrExpression : conditionalAndExpression ( '||' conditionalAndExpression )* ;
	[GrammarRule("conditionalOrExpression")]
	private Antlr3AstNode conditionalOrExpression()
	{
		EnterRule_conditionalOrExpression();
		EnterRule("conditionalOrExpression", 78);
		var retval = new Antlr3AstNode("conditionalOrExpression");
		
		retval.Start = (IToken)input.LT(1);
		int conditionalOrExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal452 = default(IToken);
		Antlr3AstNode conditionalAndExpression451 = default(Antlr3AstNode);
		Antlr3AstNode conditionalAndExpression453 = default(Antlr3AstNode);

		object string_literal452_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "conditionalOrExpression");
		DebugLocation(1022, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 78)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1023:5: ( conditionalAndExpression ( '||' conditionalAndExpression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1023:9: conditionalAndExpression ( '||' conditionalAndExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1023, 9);
			PushFollow(Follow._conditionalAndExpression_in_conditionalOrExpression5987);
			conditionalAndExpression451=conditionalAndExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, conditionalAndExpression451.Tree, conditionalAndExpression451, retval);
			DebugLocation(1024, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1024:9: ( '||' conditionalAndExpression )*
			try { DebugEnterSubRule(124);
			while (true)
			{
				int alt124=2;
				try { DebugEnterDecision(124, false);
				int LA124_1 = input.LA(1);

				if ((LA124_1==BARBAR))
				{
					alt124 = 1;
				}


				} finally { DebugExitDecision(124); }
				switch ( alt124 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1024:10: '||' conditionalAndExpression
					{
					DebugLocation(1024, 10);
					string_literal452=(IToken)Match(input,BARBAR,Follow._BARBAR_in_conditionalOrExpression5998); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal452_tree = (object)adaptor.Create(string_literal452, retval);
					adaptor.AddChild(root_0, string_literal452_tree);
					}
					DebugLocation(1024, 15);
					PushFollow(Follow._conditionalAndExpression_in_conditionalOrExpression6000);
					conditionalAndExpression453=conditionalAndExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, conditionalAndExpression453.Tree, conditionalAndExpression453, retval);

					}
					break;

				default:
					goto loop124;
				}
			}

			loop124:
				;

			} finally { DebugExitSubRule(124); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("conditionalOrExpression", 78);
			LeaveRule("conditionalOrExpression", 78);
			LeaveRule_conditionalOrExpression();
			if (state.backtracking > 0) { Memoize(input, 78, conditionalOrExpression_StartIndex); }

		}
		DebugLocation(1026, 4);
		} finally { DebugExitRule(GrammarFileName, "conditionalOrExpression"); }
		return retval;

	}
	// $ANTLR end "conditionalOrExpression"

	partial void EnterRule_conditionalAndExpression();
	partial void LeaveRule_conditionalAndExpression();
	// $ANTLR start "conditionalAndExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1028:1: conditionalAndExpression : inclusiveOrExpression ( '&&' inclusiveOrExpression )* ;
	[GrammarRule("conditionalAndExpression")]
	private Antlr3AstNode conditionalAndExpression()
	{
		EnterRule_conditionalAndExpression();
		EnterRule("conditionalAndExpression", 79);
		var retval = new Antlr3AstNode("conditionalAndExpression");
		
		retval.Start = (IToken)input.LT(1);
		int conditionalAndExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal455 = default(IToken);
		Antlr3AstNode inclusiveOrExpression454 = default(Antlr3AstNode);
		Antlr3AstNode inclusiveOrExpression456 = default(Antlr3AstNode);

		object string_literal455_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "conditionalAndExpression");
		DebugLocation(1028, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 79)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1029:5: ( inclusiveOrExpression ( '&&' inclusiveOrExpression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1029:9: inclusiveOrExpression ( '&&' inclusiveOrExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1029, 9);
			PushFollow(Follow._inclusiveOrExpression_in_conditionalAndExpression6031);
			inclusiveOrExpression454=inclusiveOrExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, inclusiveOrExpression454.Tree, inclusiveOrExpression454, retval);
			DebugLocation(1030, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1030:9: ( '&&' inclusiveOrExpression )*
			try { DebugEnterSubRule(125);
			while (true)
			{
				int alt125=2;
				try { DebugEnterDecision(125, false);
				int LA125_1 = input.LA(1);

				if ((LA125_1==AMPAMP))
				{
					alt125 = 1;
				}


				} finally { DebugExitDecision(125); }
				switch ( alt125 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1030:10: '&&' inclusiveOrExpression
					{
					DebugLocation(1030, 10);
					string_literal455=(IToken)Match(input,AMPAMP,Follow._AMPAMP_in_conditionalAndExpression6042); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal455_tree = (object)adaptor.Create(string_literal455, retval);
					adaptor.AddChild(root_0, string_literal455_tree);
					}
					DebugLocation(1030, 15);
					PushFollow(Follow._inclusiveOrExpression_in_conditionalAndExpression6044);
					inclusiveOrExpression456=inclusiveOrExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, inclusiveOrExpression456.Tree, inclusiveOrExpression456, retval);

					}
					break;

				default:
					goto loop125;
				}
			}

			loop125:
				;

			} finally { DebugExitSubRule(125); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("conditionalAndExpression", 79);
			LeaveRule("conditionalAndExpression", 79);
			LeaveRule_conditionalAndExpression();
			if (state.backtracking > 0) { Memoize(input, 79, conditionalAndExpression_StartIndex); }

		}
		DebugLocation(1032, 4);
		} finally { DebugExitRule(GrammarFileName, "conditionalAndExpression"); }
		return retval;

	}
	// $ANTLR end "conditionalAndExpression"

	partial void EnterRule_inclusiveOrExpression();
	partial void LeaveRule_inclusiveOrExpression();
	// $ANTLR start "inclusiveOrExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1034:1: inclusiveOrExpression : exclusiveOrExpression ( '|' exclusiveOrExpression )* ;
	[GrammarRule("inclusiveOrExpression")]
	private Antlr3AstNode inclusiveOrExpression()
	{
		EnterRule_inclusiveOrExpression();
		EnterRule("inclusiveOrExpression", 80);
		var retval = new Antlr3AstNode("inclusiveOrExpression");
		
		retval.Start = (IToken)input.LT(1);
		int inclusiveOrExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal458 = default(IToken);
		Antlr3AstNode exclusiveOrExpression457 = default(Antlr3AstNode);
		Antlr3AstNode exclusiveOrExpression459 = default(Antlr3AstNode);

		object char_literal458_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "inclusiveOrExpression");
		DebugLocation(1034, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 80)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1035:5: ( exclusiveOrExpression ( '|' exclusiveOrExpression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1035:9: exclusiveOrExpression ( '|' exclusiveOrExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1035, 9);
			PushFollow(Follow._exclusiveOrExpression_in_inclusiveOrExpression6075);
			exclusiveOrExpression457=exclusiveOrExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, exclusiveOrExpression457.Tree, exclusiveOrExpression457, retval);
			DebugLocation(1036, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1036:9: ( '|' exclusiveOrExpression )*
			try { DebugEnterSubRule(126);
			while (true)
			{
				int alt126=2;
				try { DebugEnterDecision(126, false);
				int LA126_1 = input.LA(1);

				if ((LA126_1==BAR))
				{
					alt126 = 1;
				}


				} finally { DebugExitDecision(126); }
				switch ( alt126 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1036:10: '|' exclusiveOrExpression
					{
					DebugLocation(1036, 10);
					char_literal458=(IToken)Match(input,BAR,Follow._BAR_in_inclusiveOrExpression6086); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal458_tree = (object)adaptor.Create(char_literal458, retval);
					adaptor.AddChild(root_0, char_literal458_tree);
					}
					DebugLocation(1036, 14);
					PushFollow(Follow._exclusiveOrExpression_in_inclusiveOrExpression6088);
					exclusiveOrExpression459=exclusiveOrExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, exclusiveOrExpression459.Tree, exclusiveOrExpression459, retval);

					}
					break;

				default:
					goto loop126;
				}
			}

			loop126:
				;

			} finally { DebugExitSubRule(126); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("inclusiveOrExpression", 80);
			LeaveRule("inclusiveOrExpression", 80);
			LeaveRule_inclusiveOrExpression();
			if (state.backtracking > 0) { Memoize(input, 80, inclusiveOrExpression_StartIndex); }

		}
		DebugLocation(1038, 4);
		} finally { DebugExitRule(GrammarFileName, "inclusiveOrExpression"); }
		return retval;

	}
	// $ANTLR end "inclusiveOrExpression"

	partial void EnterRule_exclusiveOrExpression();
	partial void LeaveRule_exclusiveOrExpression();
	// $ANTLR start "exclusiveOrExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1040:1: exclusiveOrExpression : andExpression ( '^' andExpression )* ;
	[GrammarRule("exclusiveOrExpression")]
	private Antlr3AstNode exclusiveOrExpression()
	{
		EnterRule_exclusiveOrExpression();
		EnterRule("exclusiveOrExpression", 81);
		var retval = new Antlr3AstNode("exclusiveOrExpression");
		
		retval.Start = (IToken)input.LT(1);
		int exclusiveOrExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal461 = default(IToken);
		Antlr3AstNode andExpression460 = default(Antlr3AstNode);
		Antlr3AstNode andExpression462 = default(Antlr3AstNode);

		object char_literal461_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "exclusiveOrExpression");
		DebugLocation(1040, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 81)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1041:5: ( andExpression ( '^' andExpression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1041:9: andExpression ( '^' andExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1041, 9);
			PushFollow(Follow._andExpression_in_exclusiveOrExpression6119);
			andExpression460=andExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, andExpression460.Tree, andExpression460, retval);
			DebugLocation(1042, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1042:9: ( '^' andExpression )*
			try { DebugEnterSubRule(127);
			while (true)
			{
				int alt127=2;
				try { DebugEnterDecision(127, false);
				int LA127_1 = input.LA(1);

				if ((LA127_1==CARET))
				{
					alt127 = 1;
				}


				} finally { DebugExitDecision(127); }
				switch ( alt127 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1042:10: '^' andExpression
					{
					DebugLocation(1042, 10);
					char_literal461=(IToken)Match(input,CARET,Follow._CARET_in_exclusiveOrExpression6130); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal461_tree = (object)adaptor.Create(char_literal461, retval);
					adaptor.AddChild(root_0, char_literal461_tree);
					}
					DebugLocation(1042, 14);
					PushFollow(Follow._andExpression_in_exclusiveOrExpression6132);
					andExpression462=andExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, andExpression462.Tree, andExpression462, retval);

					}
					break;

				default:
					goto loop127;
				}
			}

			loop127:
				;

			} finally { DebugExitSubRule(127); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("exclusiveOrExpression", 81);
			LeaveRule("exclusiveOrExpression", 81);
			LeaveRule_exclusiveOrExpression();
			if (state.backtracking > 0) { Memoize(input, 81, exclusiveOrExpression_StartIndex); }

		}
		DebugLocation(1044, 4);
		} finally { DebugExitRule(GrammarFileName, "exclusiveOrExpression"); }
		return retval;

	}
	// $ANTLR end "exclusiveOrExpression"

	partial void EnterRule_andExpression();
	partial void LeaveRule_andExpression();
	// $ANTLR start "andExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1046:1: andExpression : equalityExpression ( '&' equalityExpression )* ;
	[GrammarRule("andExpression")]
	private Antlr3AstNode andExpression()
	{
		EnterRule_andExpression();
		EnterRule("andExpression", 82);
		var retval = new Antlr3AstNode("andExpression");
		
		retval.Start = (IToken)input.LT(1);
		int andExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal464 = default(IToken);
		Antlr3AstNode equalityExpression463 = default(Antlr3AstNode);
		Antlr3AstNode equalityExpression465 = default(Antlr3AstNode);

		object char_literal464_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "andExpression");
		DebugLocation(1046, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 82)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1047:5: ( equalityExpression ( '&' equalityExpression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1047:9: equalityExpression ( '&' equalityExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1047, 9);
			PushFollow(Follow._equalityExpression_in_andExpression6163);
			equalityExpression463=equalityExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, equalityExpression463.Tree, equalityExpression463, retval);
			DebugLocation(1048, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1048:9: ( '&' equalityExpression )*
			try { DebugEnterSubRule(128);
			while (true)
			{
				int alt128=2;
				try { DebugEnterDecision(128, false);
				int LA128_1 = input.LA(1);

				if ((LA128_1==AMP))
				{
					alt128 = 1;
				}


				} finally { DebugExitDecision(128); }
				switch ( alt128 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1048:10: '&' equalityExpression
					{
					DebugLocation(1048, 10);
					char_literal464=(IToken)Match(input,AMP,Follow._AMP_in_andExpression6174); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal464_tree = (object)adaptor.Create(char_literal464, retval);
					adaptor.AddChild(root_0, char_literal464_tree);
					}
					DebugLocation(1048, 14);
					PushFollow(Follow._equalityExpression_in_andExpression6176);
					equalityExpression465=equalityExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, equalityExpression465.Tree, equalityExpression465, retval);

					}
					break;

				default:
					goto loop128;
				}
			}

			loop128:
				;

			} finally { DebugExitSubRule(128); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("andExpression", 82);
			LeaveRule("andExpression", 82);
			LeaveRule_andExpression();
			if (state.backtracking > 0) { Memoize(input, 82, andExpression_StartIndex); }

		}
		DebugLocation(1050, 4);
		} finally { DebugExitRule(GrammarFileName, "andExpression"); }
		return retval;

	}
	// $ANTLR end "andExpression"

	partial void EnterRule_equalityExpression();
	partial void LeaveRule_equalityExpression();
	// $ANTLR start "equalityExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1052:1: equalityExpression : instanceOfExpression ( ( '==' | '!=' ) instanceOfExpression )* ;
	[GrammarRule("equalityExpression")]
	private Antlr3AstNode equalityExpression()
	{
		EnterRule_equalityExpression();
		EnterRule("equalityExpression", 83);
		var retval = new Antlr3AstNode("equalityExpression");
		
		retval.Start = (IToken)input.LT(1);
		int equalityExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set467 = default(IToken);
		Antlr3AstNode instanceOfExpression466 = default(Antlr3AstNode);
		Antlr3AstNode instanceOfExpression468 = default(Antlr3AstNode);

		object set467_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "equalityExpression");
		DebugLocation(1052, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 83)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1053:5: ( instanceOfExpression ( ( '==' | '!=' ) instanceOfExpression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1053:9: instanceOfExpression ( ( '==' | '!=' ) instanceOfExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1053, 9);
			PushFollow(Follow._instanceOfExpression_in_equalityExpression6207);
			instanceOfExpression466=instanceOfExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, instanceOfExpression466.Tree, instanceOfExpression466, retval);
			DebugLocation(1054, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1054:9: ( ( '==' | '!=' ) instanceOfExpression )*
			try { DebugEnterSubRule(129);
			while (true)
			{
				int alt129=2;
				try { DebugEnterDecision(129, false);
				int LA129_1 = input.LA(1);

				if ((LA129_1==BANGEQ||LA129_1==EQEQ))
				{
					alt129 = 1;
				}


				} finally { DebugExitDecision(129); }
				switch ( alt129 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1055:13: ( '==' | '!=' ) instanceOfExpression
					{
					DebugLocation(1055, 13);

					set467=(IToken)input.LT(1);
					if (input.LA(1)==BANGEQ||input.LA(1)==EQEQ)
					{
						input.Consume();
						if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set467, retval));
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}

					DebugLocation(1058, 13);
					PushFollow(Follow._instanceOfExpression_in_equalityExpression6284);
					instanceOfExpression468=instanceOfExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, instanceOfExpression468.Tree, instanceOfExpression468, retval);

					}
					break;

				default:
					goto loop129;
				}
			}

			loop129:
				;

			} finally { DebugExitSubRule(129); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("equalityExpression", 83);
			LeaveRule("equalityExpression", 83);
			LeaveRule_equalityExpression();
			if (state.backtracking > 0) { Memoize(input, 83, equalityExpression_StartIndex); }

		}
		DebugLocation(1060, 4);
		} finally { DebugExitRule(GrammarFileName, "equalityExpression"); }
		return retval;

	}
	// $ANTLR end "equalityExpression"

	partial void EnterRule_instanceOfExpression();
	partial void LeaveRule_instanceOfExpression();
	// $ANTLR start "instanceOfExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1062:1: instanceOfExpression : relationalExpression ( 'instanceof' type )? ;
	[GrammarRule("instanceOfExpression")]
	private Antlr3AstNode instanceOfExpression()
	{
		EnterRule_instanceOfExpression();
		EnterRule("instanceOfExpression", 84);
		var retval = new Antlr3AstNode("instanceOfExpression");
		
		retval.Start = (IToken)input.LT(1);
		int instanceOfExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal470 = default(IToken);
		Antlr3AstNode relationalExpression469 = default(Antlr3AstNode);
		Antlr3AstNode type471 = default(Antlr3AstNode);

		object string_literal470_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "instanceOfExpression");
		DebugLocation(1062, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 84)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1063:5: ( relationalExpression ( 'instanceof' type )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1063:9: relationalExpression ( 'instanceof' type )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1063, 9);
			PushFollow(Follow._relationalExpression_in_instanceOfExpression6315);
			relationalExpression469=relationalExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, relationalExpression469.Tree, relationalExpression469, retval);
			DebugLocation(1064, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1064:9: ( 'instanceof' type )?
			int alt130=2;
			try { DebugEnterSubRule(130);
			try { DebugEnterDecision(130, false);
			int LA130_1 = input.LA(1);

			if ((LA130_1==INSTANCEOF))
			{
				alt130 = 1;
			}
			} finally { DebugExitDecision(130); }
			switch (alt130)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1064:10: 'instanceof' type
				{
				DebugLocation(1064, 10);
				string_literal470=(IToken)Match(input,INSTANCEOF,Follow._INSTANCEOF_in_instanceOfExpression6326); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal470_tree = (object)adaptor.Create(string_literal470, retval);
				adaptor.AddChild(root_0, string_literal470_tree);
				}
				DebugLocation(1064, 23);
				PushFollow(Follow._type_in_instanceOfExpression6328);
				type471=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type471.Tree, type471, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(130); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("instanceOfExpression", 84);
			LeaveRule("instanceOfExpression", 84);
			LeaveRule_instanceOfExpression();
			if (state.backtracking > 0) { Memoize(input, 84, instanceOfExpression_StartIndex); }

		}
		DebugLocation(1066, 4);
		} finally { DebugExitRule(GrammarFileName, "instanceOfExpression"); }
		return retval;

	}
	// $ANTLR end "instanceOfExpression"

	partial void EnterRule_relationalExpression();
	partial void LeaveRule_relationalExpression();
	// $ANTLR start "relationalExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1068:1: relationalExpression : shiftExpression ( relationalOp shiftExpression )* ;
	[GrammarRule("relationalExpression")]
	private Antlr3AstNode relationalExpression()
	{
		EnterRule_relationalExpression();
		EnterRule("relationalExpression", 85);
		var retval = new Antlr3AstNode("relationalExpression");
		
		retval.Start = (IToken)input.LT(1);
		int relationalExpression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode shiftExpression472 = default(Antlr3AstNode);
		Antlr3AstNode relationalOp473 = default(Antlr3AstNode);
		Antlr3AstNode shiftExpression474 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "relationalExpression");
		DebugLocation(1068, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 85)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1069:5: ( shiftExpression ( relationalOp shiftExpression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1069:9: shiftExpression ( relationalOp shiftExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1069, 9);
			PushFollow(Follow._shiftExpression_in_relationalExpression6359);
			shiftExpression472=shiftExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, shiftExpression472.Tree, shiftExpression472, retval);
			DebugLocation(1070, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1070:9: ( relationalOp shiftExpression )*
			try { DebugEnterSubRule(131);
			while (true)
			{
				int alt131=2;
				try { DebugEnterDecision(131, false);
				int LA131_1 = input.LA(1);

				if ((LA131_1==LT))
				{
					int LA131_2 = input.LA(2);

					if ((LA131_2==BANG||LA131_2==BOOLEAN||LA131_2==BYTE||(LA131_2>=CHAR && LA131_2<=CHARLITERAL)||(LA131_2>=DOUBLE && LA131_2<=DOUBLELITERAL)||LA131_2==EQ||LA131_2==FALSE||(LA131_2>=FLOAT && LA131_2<=FLOATLITERAL)||LA131_2==IDENTIFIER||LA131_2==INT||LA131_2==INTLITERAL||(LA131_2>=LONG && LA131_2<=LPAREN)||(LA131_2>=NEW && LA131_2<=NULL)||LA131_2==PLUS||LA131_2==PLUSPLUS||LA131_2==SHORT||(LA131_2>=STRINGLITERAL && LA131_2<=SUB)||(LA131_2>=SUBSUB && LA131_2<=SUPER)||LA131_2==THIS||LA131_2==TILDE||LA131_2==TRUE||LA131_2==VOID))
					{
						alt131 = 1;
					}


				}
				else if ((LA131_1==GT))
				{
					int LA131_2 = input.LA(2);

					if ((LA131_2==BANG||LA131_2==BOOLEAN||LA131_2==BYTE||(LA131_2>=CHAR && LA131_2<=CHARLITERAL)||(LA131_2>=DOUBLE && LA131_2<=DOUBLELITERAL)||LA131_2==EQ||LA131_2==FALSE||(LA131_2>=FLOAT && LA131_2<=FLOATLITERAL)||LA131_2==IDENTIFIER||LA131_2==INT||LA131_2==INTLITERAL||(LA131_2>=LONG && LA131_2<=LPAREN)||(LA131_2>=NEW && LA131_2<=NULL)||LA131_2==PLUS||LA131_2==PLUSPLUS||LA131_2==SHORT||(LA131_2>=STRINGLITERAL && LA131_2<=SUB)||(LA131_2>=SUBSUB && LA131_2<=SUPER)||LA131_2==THIS||LA131_2==TILDE||LA131_2==TRUE||LA131_2==VOID))
					{
						alt131 = 1;
					}


				}


				} finally { DebugExitDecision(131); }
				switch ( alt131 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1070:10: relationalOp shiftExpression
					{
					DebugLocation(1070, 10);
					PushFollow(Follow._relationalOp_in_relationalExpression6370);
					relationalOp473=relationalOp();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, relationalOp473.Tree, relationalOp473, retval);
					DebugLocation(1070, 23);
					PushFollow(Follow._shiftExpression_in_relationalExpression6372);
					shiftExpression474=shiftExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, shiftExpression474.Tree, shiftExpression474, retval);

					}
					break;

				default:
					goto loop131;
				}
			}

			loop131:
				;

			} finally { DebugExitSubRule(131); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("relationalExpression", 85);
			LeaveRule("relationalExpression", 85);
			LeaveRule_relationalExpression();
			if (state.backtracking > 0) { Memoize(input, 85, relationalExpression_StartIndex); }

		}
		DebugLocation(1072, 4);
		} finally { DebugExitRule(GrammarFileName, "relationalExpression"); }
		return retval;

	}
	// $ANTLR end "relationalExpression"

	partial void EnterRule_relationalOp();
	partial void LeaveRule_relationalOp();
	// $ANTLR start "relationalOp"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1074:1: relationalOp : ( '<' '=' | '>' '=' | '<' | '>' );
	[GrammarRule("relationalOp")]
	private Antlr3AstNode relationalOp()
	{
		EnterRule_relationalOp();
		EnterRule("relationalOp", 86);
		var retval = new Antlr3AstNode("relationalOp");
		
		retval.Start = (IToken)input.LT(1);
		int relationalOp_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal475 = default(IToken);
		IToken char_literal476 = default(IToken);
		IToken char_literal477 = default(IToken);
		IToken char_literal478 = default(IToken);
		IToken char_literal479 = default(IToken);
		IToken char_literal480 = default(IToken);

		object char_literal475_tree = default(object);
		object char_literal476_tree = default(object);
		object char_literal477_tree = default(object);
		object char_literal478_tree = default(object);
		object char_literal479_tree = default(object);
		object char_literal480_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "relationalOp");
		DebugLocation(1074, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 86)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1075:5: ( '<' '=' | '>' '=' | '<' | '>' )
			int alt132=4;
			try { DebugEnterDecision(132, false);
			int LA132_1 = input.LA(1);

			if ((LA132_1==LT))
			{
				int LA132_2 = input.LA(2);

				if ((LA132_2==EQ))
				{
					alt132 = 1;
				}
				else if ((LA132_2==BANG||LA132_2==BOOLEAN||LA132_2==BYTE||(LA132_2>=CHAR && LA132_2<=CHARLITERAL)||(LA132_2>=DOUBLE && LA132_2<=DOUBLELITERAL)||LA132_2==FALSE||(LA132_2>=FLOAT && LA132_2<=FLOATLITERAL)||LA132_2==IDENTIFIER||LA132_2==INT||LA132_2==INTLITERAL||(LA132_2>=LONG && LA132_2<=LPAREN)||(LA132_2>=NEW && LA132_2<=NULL)||LA132_2==PLUS||LA132_2==PLUSPLUS||LA132_2==SHORT||(LA132_2>=STRINGLITERAL && LA132_2<=SUB)||(LA132_2>=SUBSUB && LA132_2<=SUPER)||LA132_2==THIS||LA132_2==TILDE||LA132_2==TRUE||LA132_2==VOID))
				{
					alt132 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 132, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA132_1==GT))
			{
				int LA132_2 = input.LA(2);

				if ((LA132_2==EQ))
				{
					alt132 = 2;
				}
				else if ((LA132_2==BANG||LA132_2==BOOLEAN||LA132_2==BYTE||(LA132_2>=CHAR && LA132_2<=CHARLITERAL)||(LA132_2>=DOUBLE && LA132_2<=DOUBLELITERAL)||LA132_2==FALSE||(LA132_2>=FLOAT && LA132_2<=FLOATLITERAL)||LA132_2==IDENTIFIER||LA132_2==INT||LA132_2==INTLITERAL||(LA132_2>=LONG && LA132_2<=LPAREN)||(LA132_2>=NEW && LA132_2<=NULL)||LA132_2==PLUS||LA132_2==PLUSPLUS||LA132_2==SHORT||(LA132_2>=STRINGLITERAL && LA132_2<=SUB)||(LA132_2>=SUBSUB && LA132_2<=SUPER)||LA132_2==THIS||LA132_2==TILDE||LA132_2==TRUE||LA132_2==VOID))
				{
					alt132 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 132, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 132, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(132); }
			switch (alt132)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1075:10: '<' '='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1075, 10);
				char_literal475=(IToken)Match(input,LT,Follow._LT_in_relationalOp6404); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal475_tree = (object)adaptor.Create(char_literal475, retval);
				adaptor.AddChild(root_0, char_literal475_tree);
				}
				DebugLocation(1075, 14);
				char_literal476=(IToken)Match(input,EQ,Follow._EQ_in_relationalOp6406); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal476_tree = (object)adaptor.Create(char_literal476, retval);
				adaptor.AddChild(root_0, char_literal476_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1076:10: '>' '='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1076, 10);
				char_literal477=(IToken)Match(input,GT,Follow._GT_in_relationalOp6417); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal477_tree = (object)adaptor.Create(char_literal477, retval);
				adaptor.AddChild(root_0, char_literal477_tree);
				}
				DebugLocation(1076, 14);
				char_literal478=(IToken)Match(input,EQ,Follow._EQ_in_relationalOp6419); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal478_tree = (object)adaptor.Create(char_literal478, retval);
				adaptor.AddChild(root_0, char_literal478_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1077:9: '<'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1077, 9);
				char_literal479=(IToken)Match(input,LT,Follow._LT_in_relationalOp6429); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal479_tree = (object)adaptor.Create(char_literal479, retval);
				adaptor.AddChild(root_0, char_literal479_tree);
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1078:9: '>'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1078, 9);
				char_literal480=(IToken)Match(input,GT,Follow._GT_in_relationalOp6439); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal480_tree = (object)adaptor.Create(char_literal480, retval);
				adaptor.AddChild(root_0, char_literal480_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("relationalOp", 86);
			LeaveRule("relationalOp", 86);
			LeaveRule_relationalOp();
			if (state.backtracking > 0) { Memoize(input, 86, relationalOp_StartIndex); }

		}
		DebugLocation(1079, 4);
		} finally { DebugExitRule(GrammarFileName, "relationalOp"); }
		return retval;

	}
	// $ANTLR end "relationalOp"

	partial void EnterRule_shiftExpression();
	partial void LeaveRule_shiftExpression();
	// $ANTLR start "shiftExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1081:1: shiftExpression : additiveExpression ( shiftOp additiveExpression )* ;
	[GrammarRule("shiftExpression")]
	private Antlr3AstNode shiftExpression()
	{
		EnterRule_shiftExpression();
		EnterRule("shiftExpression", 87);
		var retval = new Antlr3AstNode("shiftExpression");
		
		retval.Start = (IToken)input.LT(1);
		int shiftExpression_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode additiveExpression481 = default(Antlr3AstNode);
		Antlr3AstNode shiftOp482 = default(Antlr3AstNode);
		Antlr3AstNode additiveExpression483 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "shiftExpression");
		DebugLocation(1081, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 87)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1082:5: ( additiveExpression ( shiftOp additiveExpression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1082:9: additiveExpression ( shiftOp additiveExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1082, 9);
			PushFollow(Follow._additiveExpression_in_shiftExpression6459);
			additiveExpression481=additiveExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, additiveExpression481.Tree, additiveExpression481, retval);
			DebugLocation(1083, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1083:9: ( shiftOp additiveExpression )*
			try { DebugEnterSubRule(133);
			while (true)
			{
				int alt133=2;
				try { DebugEnterDecision(133, false);
				int LA133_1 = input.LA(1);

				if ((LA133_1==LT))
				{
					int LA133_2 = input.LA(2);

					if ((LA133_2==LT))
					{
						int LA133_3 = input.LA(3);

						if ((LA133_3==BANG||LA133_3==BOOLEAN||LA133_3==BYTE||(LA133_3>=CHAR && LA133_3<=CHARLITERAL)||(LA133_3>=DOUBLE && LA133_3<=DOUBLELITERAL)||LA133_3==FALSE||(LA133_3>=FLOAT && LA133_3<=FLOATLITERAL)||LA133_3==IDENTIFIER||LA133_3==INT||LA133_3==INTLITERAL||(LA133_3>=LONG && LA133_3<=LPAREN)||(LA133_3>=NEW && LA133_3<=NULL)||LA133_3==PLUS||LA133_3==PLUSPLUS||LA133_3==SHORT||(LA133_3>=STRINGLITERAL && LA133_3<=SUB)||(LA133_3>=SUBSUB && LA133_3<=SUPER)||LA133_3==THIS||LA133_3==TILDE||LA133_3==TRUE||LA133_3==VOID))
						{
							alt133 = 1;
						}


					}


				}
				else if ((LA133_1==GT))
				{
					int LA133_2 = input.LA(2);

					if ((LA133_2==GT))
					{
						int LA133_3 = input.LA(3);

						if ((LA133_3==GT))
						{
							int LA133_4 = input.LA(4);

							if ((LA133_4==BANG||LA133_4==BOOLEAN||LA133_4==BYTE||(LA133_4>=CHAR && LA133_4<=CHARLITERAL)||(LA133_4>=DOUBLE && LA133_4<=DOUBLELITERAL)||LA133_4==FALSE||(LA133_4>=FLOAT && LA133_4<=FLOATLITERAL)||LA133_4==IDENTIFIER||LA133_4==INT||LA133_4==INTLITERAL||(LA133_4>=LONG && LA133_4<=LPAREN)||(LA133_4>=NEW && LA133_4<=NULL)||LA133_4==PLUS||LA133_4==PLUSPLUS||LA133_4==SHORT||(LA133_4>=STRINGLITERAL && LA133_4<=SUB)||(LA133_4>=SUBSUB && LA133_4<=SUPER)||LA133_4==THIS||LA133_4==TILDE||LA133_4==TRUE||LA133_4==VOID))
							{
								alt133 = 1;
							}


						}
						else if ((LA133_3==BANG||LA133_3==BOOLEAN||LA133_3==BYTE||(LA133_3>=CHAR && LA133_3<=CHARLITERAL)||(LA133_3>=DOUBLE && LA133_3<=DOUBLELITERAL)||LA133_3==FALSE||(LA133_3>=FLOAT && LA133_3<=FLOATLITERAL)||LA133_3==IDENTIFIER||LA133_3==INT||LA133_3==INTLITERAL||(LA133_3>=LONG && LA133_3<=LPAREN)||(LA133_3>=NEW && LA133_3<=NULL)||LA133_3==PLUS||LA133_3==PLUSPLUS||LA133_3==SHORT||(LA133_3>=STRINGLITERAL && LA133_3<=SUB)||(LA133_3>=SUBSUB && LA133_3<=SUPER)||LA133_3==THIS||LA133_3==TILDE||LA133_3==TRUE||LA133_3==VOID))
						{
							alt133 = 1;
						}


					}


				}


				} finally { DebugExitDecision(133); }
				switch ( alt133 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1083:10: shiftOp additiveExpression
					{
					DebugLocation(1083, 10);
					PushFollow(Follow._shiftOp_in_shiftExpression6470);
					shiftOp482=shiftOp();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, shiftOp482.Tree, shiftOp482, retval);
					DebugLocation(1083, 18);
					PushFollow(Follow._additiveExpression_in_shiftExpression6472);
					additiveExpression483=additiveExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, additiveExpression483.Tree, additiveExpression483, retval);

					}
					break;

				default:
					goto loop133;
				}
			}

			loop133:
				;

			} finally { DebugExitSubRule(133); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("shiftExpression", 87);
			LeaveRule("shiftExpression", 87);
			LeaveRule_shiftExpression();
			if (state.backtracking > 0) { Memoize(input, 87, shiftExpression_StartIndex); }

		}
		DebugLocation(1085, 4);
		} finally { DebugExitRule(GrammarFileName, "shiftExpression"); }
		return retval;

	}
	// $ANTLR end "shiftExpression"

	partial void EnterRule_shiftOp();
	partial void LeaveRule_shiftOp();
	// $ANTLR start "shiftOp"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1088:1: shiftOp : ( '<' '<' | '>' '>' '>' | '>' '>' );
	[GrammarRule("shiftOp")]
	private Antlr3AstNode shiftOp()
	{
		EnterRule_shiftOp();
		EnterRule("shiftOp", 88);
		var retval = new Antlr3AstNode("shiftOp");
		
		retval.Start = (IToken)input.LT(1);
		int shiftOp_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal484 = default(IToken);
		IToken char_literal485 = default(IToken);
		IToken char_literal486 = default(IToken);
		IToken char_literal487 = default(IToken);
		IToken char_literal488 = default(IToken);
		IToken char_literal489 = default(IToken);
		IToken char_literal490 = default(IToken);

		object char_literal484_tree = default(object);
		object char_literal485_tree = default(object);
		object char_literal486_tree = default(object);
		object char_literal487_tree = default(object);
		object char_literal488_tree = default(object);
		object char_literal489_tree = default(object);
		object char_literal490_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "shiftOp");
		DebugLocation(1088, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 88)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1089:5: ( '<' '<' | '>' '>' '>' | '>' '>' )
			int alt134=3;
			try { DebugEnterDecision(134, false);
			int LA134_1 = input.LA(1);

			if ((LA134_1==LT))
			{
				alt134 = 1;
			}
			else if ((LA134_1==GT))
			{
				int LA134_2 = input.LA(2);

				if ((LA134_2==GT))
				{
					int LA134_3 = input.LA(3);

					if ((LA134_3==GT))
					{
						alt134 = 2;
					}
					else if ((LA134_3==BANG||LA134_3==BOOLEAN||LA134_3==BYTE||(LA134_3>=CHAR && LA134_3<=CHARLITERAL)||(LA134_3>=DOUBLE && LA134_3<=DOUBLELITERAL)||LA134_3==FALSE||(LA134_3>=FLOAT && LA134_3<=FLOATLITERAL)||LA134_3==IDENTIFIER||LA134_3==INT||LA134_3==INTLITERAL||(LA134_3>=LONG && LA134_3<=LPAREN)||(LA134_3>=NEW && LA134_3<=NULL)||LA134_3==PLUS||LA134_3==PLUSPLUS||LA134_3==SHORT||(LA134_3>=STRINGLITERAL && LA134_3<=SUB)||(LA134_3>=SUBSUB && LA134_3<=SUPER)||LA134_3==THIS||LA134_3==TILDE||LA134_3==TRUE||LA134_3==VOID))
					{
						alt134 = 3;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 134, 3, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 134, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 134, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(134); }
			switch (alt134)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1089:10: '<' '<'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1089, 10);
				char_literal484=(IToken)Match(input,LT,Follow._LT_in_shiftOp6505); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal484_tree = (object)adaptor.Create(char_literal484, retval);
				adaptor.AddChild(root_0, char_literal484_tree);
				}
				DebugLocation(1089, 14);
				char_literal485=(IToken)Match(input,LT,Follow._LT_in_shiftOp6507); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal485_tree = (object)adaptor.Create(char_literal485, retval);
				adaptor.AddChild(root_0, char_literal485_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1090:10: '>' '>' '>'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1090, 10);
				char_literal486=(IToken)Match(input,GT,Follow._GT_in_shiftOp6518); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal486_tree = (object)adaptor.Create(char_literal486, retval);
				adaptor.AddChild(root_0, char_literal486_tree);
				}
				DebugLocation(1090, 14);
				char_literal487=(IToken)Match(input,GT,Follow._GT_in_shiftOp6520); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal487_tree = (object)adaptor.Create(char_literal487, retval);
				adaptor.AddChild(root_0, char_literal487_tree);
				}
				DebugLocation(1090, 18);
				char_literal488=(IToken)Match(input,GT,Follow._GT_in_shiftOp6522); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal488_tree = (object)adaptor.Create(char_literal488, retval);
				adaptor.AddChild(root_0, char_literal488_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1091:10: '>' '>'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1091, 10);
				char_literal489=(IToken)Match(input,GT,Follow._GT_in_shiftOp6533); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal489_tree = (object)adaptor.Create(char_literal489, retval);
				adaptor.AddChild(root_0, char_literal489_tree);
				}
				DebugLocation(1091, 14);
				char_literal490=(IToken)Match(input,GT,Follow._GT_in_shiftOp6535); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal490_tree = (object)adaptor.Create(char_literal490, retval);
				adaptor.AddChild(root_0, char_literal490_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("shiftOp", 88);
			LeaveRule("shiftOp", 88);
			LeaveRule_shiftOp();
			if (state.backtracking > 0) { Memoize(input, 88, shiftOp_StartIndex); }

		}
		DebugLocation(1092, 4);
		} finally { DebugExitRule(GrammarFileName, "shiftOp"); }
		return retval;

	}
	// $ANTLR end "shiftOp"

	partial void EnterRule_additiveExpression();
	partial void LeaveRule_additiveExpression();
	// $ANTLR start "additiveExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1095:1: additiveExpression : multiplicativeExpression ( ( '+' | '-' ) multiplicativeExpression )* ;
	[GrammarRule("additiveExpression")]
	private Antlr3AstNode additiveExpression()
	{
		EnterRule_additiveExpression();
		EnterRule("additiveExpression", 89);
		var retval = new Antlr3AstNode("additiveExpression");
		
		retval.Start = (IToken)input.LT(1);
		int additiveExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set492 = default(IToken);
		Antlr3AstNode multiplicativeExpression491 = default(Antlr3AstNode);
		Antlr3AstNode multiplicativeExpression493 = default(Antlr3AstNode);

		object set492_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "additiveExpression");
		DebugLocation(1095, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 89)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1096:5: ( multiplicativeExpression ( ( '+' | '-' ) multiplicativeExpression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1096:9: multiplicativeExpression ( ( '+' | '-' ) multiplicativeExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1096, 9);
			PushFollow(Follow._multiplicativeExpression_in_additiveExpression6556);
			multiplicativeExpression491=multiplicativeExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, multiplicativeExpression491.Tree, multiplicativeExpression491, retval);
			DebugLocation(1097, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1097:9: ( ( '+' | '-' ) multiplicativeExpression )*
			try { DebugEnterSubRule(135);
			while (true)
			{
				int alt135=2;
				try { DebugEnterDecision(135, false);
				int LA135_1 = input.LA(1);

				if ((LA135_1==PLUS||LA135_1==SUB))
				{
					alt135 = 1;
				}


				} finally { DebugExitDecision(135); }
				switch ( alt135 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1098:13: ( '+' | '-' ) multiplicativeExpression
					{
					DebugLocation(1098, 13);

					set492=(IToken)input.LT(1);
					if (input.LA(1)==PLUS||input.LA(1)==SUB)
					{
						input.Consume();
						if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set492, retval));
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}

					DebugLocation(1101, 13);
					PushFollow(Follow._multiplicativeExpression_in_additiveExpression6633);
					multiplicativeExpression493=multiplicativeExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, multiplicativeExpression493.Tree, multiplicativeExpression493, retval);

					}
					break;

				default:
					goto loop135;
				}
			}

			loop135:
				;

			} finally { DebugExitSubRule(135); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("additiveExpression", 89);
			LeaveRule("additiveExpression", 89);
			LeaveRule_additiveExpression();
			if (state.backtracking > 0) { Memoize(input, 89, additiveExpression_StartIndex); }

		}
		DebugLocation(1103, 4);
		} finally { DebugExitRule(GrammarFileName, "additiveExpression"); }
		return retval;

	}
	// $ANTLR end "additiveExpression"

	partial void EnterRule_multiplicativeExpression();
	partial void LeaveRule_multiplicativeExpression();
	// $ANTLR start "multiplicativeExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1105:1: multiplicativeExpression : unaryExpression ( ( '*' | '/' | '%' ) unaryExpression )* ;
	[GrammarRule("multiplicativeExpression")]
	private Antlr3AstNode multiplicativeExpression()
	{
		EnterRule_multiplicativeExpression();
		EnterRule("multiplicativeExpression", 90);
		var retval = new Antlr3AstNode("multiplicativeExpression");
		
		retval.Start = (IToken)input.LT(1);
		int multiplicativeExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set495 = default(IToken);
		Antlr3AstNode unaryExpression494 = default(Antlr3AstNode);
		Antlr3AstNode unaryExpression496 = default(Antlr3AstNode);

		object set495_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "multiplicativeExpression");
		DebugLocation(1105, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 90)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1106:5: ( unaryExpression ( ( '*' | '/' | '%' ) unaryExpression )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1107:9: unaryExpression ( ( '*' | '/' | '%' ) unaryExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1107, 9);
			PushFollow(Follow._unaryExpression_in_multiplicativeExpression6671);
			unaryExpression494=unaryExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression494.Tree, unaryExpression494, retval);
			DebugLocation(1108, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1108:9: ( ( '*' | '/' | '%' ) unaryExpression )*
			try { DebugEnterSubRule(136);
			while (true)
			{
				int alt136=2;
				try { DebugEnterDecision(136, false);
				int LA136_1 = input.LA(1);

				if ((LA136_1==PERCENT||LA136_1==SLASH||LA136_1==STAR))
				{
					alt136 = 1;
				}


				} finally { DebugExitDecision(136); }
				switch ( alt136 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1109:13: ( '*' | '/' | '%' ) unaryExpression
					{
					DebugLocation(1109, 13);

					set495=(IToken)input.LT(1);
					if (input.LA(1)==PERCENT||input.LA(1)==SLASH||input.LA(1)==STAR)
					{
						input.Consume();
						if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set495, retval));
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}

					DebugLocation(1113, 13);
					PushFollow(Follow._unaryExpression_in_multiplicativeExpression6766);
					unaryExpression496=unaryExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression496.Tree, unaryExpression496, retval);

					}
					break;

				default:
					goto loop136;
				}
			}

			loop136:
				;

			} finally { DebugExitSubRule(136); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("multiplicativeExpression", 90);
			LeaveRule("multiplicativeExpression", 90);
			LeaveRule_multiplicativeExpression();
			if (state.backtracking > 0) { Memoize(input, 90, multiplicativeExpression_StartIndex); }

		}
		DebugLocation(1115, 4);
		} finally { DebugExitRule(GrammarFileName, "multiplicativeExpression"); }
		return retval;

	}
	// $ANTLR end "multiplicativeExpression"

	partial void EnterRule_unaryExpression();
	partial void LeaveRule_unaryExpression();
	// $ANTLR start "unaryExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1121:1: unaryExpression : ( '+' unaryExpression | '-' unaryExpression | '++' unaryExpression | '--' unaryExpression | unaryExpressionNotPlusMinus );
	[GrammarRule("unaryExpression")]
	private Antlr3AstNode unaryExpression()
	{
		EnterRule_unaryExpression();
		EnterRule("unaryExpression", 91);
		var retval = new Antlr3AstNode("unaryExpression");
		
		retval.Start = (IToken)input.LT(1);
		int unaryExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal497 = default(IToken);
		IToken char_literal499 = default(IToken);
		IToken string_literal501 = default(IToken);
		IToken string_literal503 = default(IToken);
		Antlr3AstNode unaryExpression498 = default(Antlr3AstNode);
		Antlr3AstNode unaryExpression500 = default(Antlr3AstNode);
		Antlr3AstNode unaryExpression502 = default(Antlr3AstNode);
		Antlr3AstNode unaryExpression504 = default(Antlr3AstNode);
		Antlr3AstNode unaryExpressionNotPlusMinus505 = default(Antlr3AstNode);

		object char_literal497_tree = default(object);
		object char_literal499_tree = default(object);
		object string_literal501_tree = default(object);
		object string_literal503_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "unaryExpression");
		DebugLocation(1121, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 91)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1122:5: ( '+' unaryExpression | '-' unaryExpression | '++' unaryExpression | '--' unaryExpression | unaryExpressionNotPlusMinus )
			int alt137=5;
			try { DebugEnterDecision(137, false);
			switch (input.LA(1))
			{
			case PLUS:
				{
				alt137 = 1;
				}
				break;
			case SUB:
				{
				alt137 = 2;
				}
				break;
			case PLUSPLUS:
				{
				alt137 = 3;
				}
				break;
			case SUBSUB:
				{
				alt137 = 4;
				}
				break;
			case BANG:
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case CHARLITERAL:
			case DOUBLE:
			case DOUBLELITERAL:
			case FALSE:
			case FLOAT:
			case FLOATLITERAL:
			case IDENTIFIER:
			case INT:
			case INTLITERAL:
			case LONG:
			case LONGLITERAL:
			case LPAREN:
			case NEW:
			case NULL:
			case SHORT:
			case STRINGLITERAL:
			case SUPER:
			case THIS:
			case TILDE:
			case TRUE:
			case VOID:
				{
				alt137 = 5;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 137, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(137); }
			switch (alt137)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1122:9: '+' unaryExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1122, 9);
				char_literal497=(IToken)Match(input,PLUS,Follow._PLUS_in_unaryExpression6799); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal497_tree = (object)adaptor.Create(char_literal497, retval);
				adaptor.AddChild(root_0, char_literal497_tree);
				}
				DebugLocation(1122, 14);
				PushFollow(Follow._unaryExpression_in_unaryExpression6802);
				unaryExpression498=unaryExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression498.Tree, unaryExpression498, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1123:9: '-' unaryExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1123, 9);
				char_literal499=(IToken)Match(input,SUB,Follow._SUB_in_unaryExpression6812); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal499_tree = (object)adaptor.Create(char_literal499, retval);
				adaptor.AddChild(root_0, char_literal499_tree);
				}
				DebugLocation(1123, 13);
				PushFollow(Follow._unaryExpression_in_unaryExpression6814);
				unaryExpression500=unaryExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression500.Tree, unaryExpression500, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1124:9: '++' unaryExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1124, 9);
				string_literal501=(IToken)Match(input,PLUSPLUS,Follow._PLUSPLUS_in_unaryExpression6824); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal501_tree = (object)adaptor.Create(string_literal501, retval);
				adaptor.AddChild(root_0, string_literal501_tree);
				}
				DebugLocation(1124, 14);
				PushFollow(Follow._unaryExpression_in_unaryExpression6826);
				unaryExpression502=unaryExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression502.Tree, unaryExpression502, retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1125:9: '--' unaryExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1125, 9);
				string_literal503=(IToken)Match(input,SUBSUB,Follow._SUBSUB_in_unaryExpression6836); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal503_tree = (object)adaptor.Create(string_literal503, retval);
				adaptor.AddChild(root_0, string_literal503_tree);
				}
				DebugLocation(1125, 14);
				PushFollow(Follow._unaryExpression_in_unaryExpression6838);
				unaryExpression504=unaryExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression504.Tree, unaryExpression504, retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1126:9: unaryExpressionNotPlusMinus
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1126, 9);
				PushFollow(Follow._unaryExpressionNotPlusMinus_in_unaryExpression6848);
				unaryExpressionNotPlusMinus505=unaryExpressionNotPlusMinus();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpressionNotPlusMinus505.Tree, unaryExpressionNotPlusMinus505, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unaryExpression", 91);
			LeaveRule("unaryExpression", 91);
			LeaveRule_unaryExpression();
			if (state.backtracking > 0) { Memoize(input, 91, unaryExpression_StartIndex); }

		}
		DebugLocation(1127, 4);
		} finally { DebugExitRule(GrammarFileName, "unaryExpression"); }
		return retval;

	}
	// $ANTLR end "unaryExpression"

	partial void EnterRule_unaryExpressionNotPlusMinus();
	partial void LeaveRule_unaryExpressionNotPlusMinus();
	// $ANTLR start "unaryExpressionNotPlusMinus"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1129:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );
	[GrammarRule("unaryExpressionNotPlusMinus")]
	private Antlr3AstNode unaryExpressionNotPlusMinus()
	{
		EnterRule_unaryExpressionNotPlusMinus();
		EnterRule("unaryExpressionNotPlusMinus", 92);
		var retval = new Antlr3AstNode("unaryExpressionNotPlusMinus");
		
		retval.Start = (IToken)input.LT(1);
		int unaryExpressionNotPlusMinus_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal506 = default(IToken);
		IToken char_literal508 = default(IToken);
		IToken set513 = default(IToken);
		Antlr3AstNode unaryExpression507 = default(Antlr3AstNode);
		Antlr3AstNode unaryExpression509 = default(Antlr3AstNode);
		Antlr3AstNode castExpression510 = default(Antlr3AstNode);
		Antlr3AstNode primary511 = default(Antlr3AstNode);
		Antlr3AstNode selector512 = default(Antlr3AstNode);

		object char_literal506_tree = default(object);
		object char_literal508_tree = default(object);
		object set513_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "unaryExpressionNotPlusMinus");
		DebugLocation(1129, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 92)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1130:5: ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? )
			int alt140=4;
			try { DebugEnterDecision(140, false);
			switch (input.LA(1))
			{
			case TILDE:
				{
				alt140 = 1;
				}
				break;
			case BANG:
				{
				alt140 = 2;
				}
				break;
			case LPAREN:
				{
				int LA140_2 = input.LA(2);

				if ((EvaluatePredicate(synpred214_Java_fragment)))
				{
					alt140 = 3;
				}
				else if ((true))
				{
					alt140 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 140, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case CHARLITERAL:
			case DOUBLE:
			case DOUBLELITERAL:
			case FALSE:
			case FLOAT:
			case FLOATLITERAL:
			case IDENTIFIER:
			case INT:
			case INTLITERAL:
			case LONG:
			case LONGLITERAL:
			case NEW:
			case NULL:
			case SHORT:
			case STRINGLITERAL:
			case SUPER:
			case THIS:
			case TRUE:
			case VOID:
				{
				alt140 = 4;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 140, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(140); }
			switch (alt140)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1130:9: '~' unaryExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1130, 9);
				char_literal506=(IToken)Match(input,TILDE,Follow._TILDE_in_unaryExpressionNotPlusMinus6868); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal506_tree = (object)adaptor.Create(char_literal506, retval);
				adaptor.AddChild(root_0, char_literal506_tree);
				}
				DebugLocation(1130, 13);
				PushFollow(Follow._unaryExpression_in_unaryExpressionNotPlusMinus6870);
				unaryExpression507=unaryExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression507.Tree, unaryExpression507, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1131:9: '!' unaryExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1131, 9);
				char_literal508=(IToken)Match(input,BANG,Follow._BANG_in_unaryExpressionNotPlusMinus6880); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal508_tree = (object)adaptor.Create(char_literal508, retval);
				adaptor.AddChild(root_0, char_literal508_tree);
				}
				DebugLocation(1131, 13);
				PushFollow(Follow._unaryExpression_in_unaryExpressionNotPlusMinus6882);
				unaryExpression509=unaryExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression509.Tree, unaryExpression509, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1132:9: castExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1132, 9);
				PushFollow(Follow._castExpression_in_unaryExpressionNotPlusMinus6892);
				castExpression510=castExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, castExpression510.Tree, castExpression510, retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1133:9: primary ( selector )* ( '++' | '--' )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1133, 9);
				PushFollow(Follow._primary_in_unaryExpressionNotPlusMinus6902);
				primary511=primary();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primary511.Tree, primary511, retval);
				DebugLocation(1134, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1134:9: ( selector )*
				try { DebugEnterSubRule(138);
				while (true)
				{
					int alt138=2;
					try { DebugEnterDecision(138, false);
					int LA138_1 = input.LA(1);

					if ((LA138_1==DOT||LA138_1==LBRACKET))
					{
						alt138 = 1;
					}


					} finally { DebugExitDecision(138); }
					switch ( alt138 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1134:10: selector
						{
						DebugLocation(1134, 10);
						PushFollow(Follow._selector_in_unaryExpressionNotPlusMinus6913);
						selector512=selector();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, selector512.Tree, selector512, retval);

						}
						break;

					default:
						goto loop138;
					}
				}

				loop138:
					;

				} finally { DebugExitSubRule(138); }

				DebugLocation(1136, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1136:9: ( '++' | '--' )?
				int alt139=2;
				try { DebugEnterSubRule(139);
				try { DebugEnterDecision(139, false);
				int LA139_1 = input.LA(1);

				if ((LA139_1==PLUSPLUS||LA139_1==SUBSUB))
				{
					alt139 = 1;
				}
				} finally { DebugExitDecision(139); }
				switch (alt139)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:
					{
					DebugLocation(1136, 9);

					set513=(IToken)input.LT(1);
					if (input.LA(1)==PLUSPLUS||input.LA(1)==SUBSUB)
					{
						input.Consume();
						if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set513, retval));
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}


					}
					break;

				}
				} finally { DebugExitSubRule(139); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unaryExpressionNotPlusMinus", 92);
			LeaveRule("unaryExpressionNotPlusMinus", 92);
			LeaveRule_unaryExpressionNotPlusMinus();
			if (state.backtracking > 0) { Memoize(input, 92, unaryExpressionNotPlusMinus_StartIndex); }

		}
		DebugLocation(1139, 4);
		} finally { DebugExitRule(GrammarFileName, "unaryExpressionNotPlusMinus"); }
		return retval;

	}
	// $ANTLR end "unaryExpressionNotPlusMinus"

	partial void EnterRule_castExpression();
	partial void LeaveRule_castExpression();
	// $ANTLR start "castExpression"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1141:1: castExpression : ( '(' primitiveType ')' unaryExpression | '(' type ')' unaryExpressionNotPlusMinus );
	[GrammarRule("castExpression")]
	private Antlr3AstNode castExpression()
	{
		EnterRule_castExpression();
		EnterRule("castExpression", 93);
		var retval = new Antlr3AstNode("castExpression");
		
		retval.Start = (IToken)input.LT(1);
		int castExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal514 = default(IToken);
		IToken char_literal516 = default(IToken);
		IToken char_literal518 = default(IToken);
		IToken char_literal520 = default(IToken);
		Antlr3AstNode primitiveType515 = default(Antlr3AstNode);
		Antlr3AstNode unaryExpression517 = default(Antlr3AstNode);
		Antlr3AstNode type519 = default(Antlr3AstNode);
		Antlr3AstNode unaryExpressionNotPlusMinus521 = default(Antlr3AstNode);

		object char_literal514_tree = default(object);
		object char_literal516_tree = default(object);
		object char_literal518_tree = default(object);
		object char_literal520_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "castExpression");
		DebugLocation(1141, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 93)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1142:5: ( '(' primitiveType ')' unaryExpression | '(' type ')' unaryExpressionNotPlusMinus )
			int alt141=2;
			try { DebugEnterDecision(141, false);
			int LA141_1 = input.LA(1);

			if ((LA141_1==LPAREN))
			{
				int LA141_2 = input.LA(2);

				if ((EvaluatePredicate(synpred218_Java_fragment)))
				{
					alt141 = 1;
				}
				else if ((true))
				{
					alt141 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 141, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 141, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(141); }
			switch (alt141)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1142:9: '(' primitiveType ')' unaryExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1142, 9);
				char_literal514=(IToken)Match(input,LPAREN,Follow._LPAREN_in_castExpression6983); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal514_tree = (object)adaptor.Create(char_literal514, retval);
				adaptor.AddChild(root_0, char_literal514_tree);
				}
				DebugLocation(1142, 13);
				PushFollow(Follow._primitiveType_in_castExpression6985);
				primitiveType515=primitiveType();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primitiveType515.Tree, primitiveType515, retval);
				DebugLocation(1142, 27);
				char_literal516=(IToken)Match(input,RPAREN,Follow._RPAREN_in_castExpression6987); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal516_tree = (object)adaptor.Create(char_literal516, retval);
				adaptor.AddChild(root_0, char_literal516_tree);
				}
				DebugLocation(1142, 31);
				PushFollow(Follow._unaryExpression_in_castExpression6989);
				unaryExpression517=unaryExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression517.Tree, unaryExpression517, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1143:9: '(' type ')' unaryExpressionNotPlusMinus
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1143, 9);
				char_literal518=(IToken)Match(input,LPAREN,Follow._LPAREN_in_castExpression6999); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal518_tree = (object)adaptor.Create(char_literal518, retval);
				adaptor.AddChild(root_0, char_literal518_tree);
				}
				DebugLocation(1143, 13);
				PushFollow(Follow._type_in_castExpression7001);
				type519=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type519.Tree, type519, retval);
				DebugLocation(1143, 18);
				char_literal520=(IToken)Match(input,RPAREN,Follow._RPAREN_in_castExpression7003); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal520_tree = (object)adaptor.Create(char_literal520, retval);
				adaptor.AddChild(root_0, char_literal520_tree);
				}
				DebugLocation(1143, 22);
				PushFollow(Follow._unaryExpressionNotPlusMinus_in_castExpression7005);
				unaryExpressionNotPlusMinus521=unaryExpressionNotPlusMinus();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpressionNotPlusMinus521.Tree, unaryExpressionNotPlusMinus521, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("castExpression", 93);
			LeaveRule("castExpression", 93);
			LeaveRule_castExpression();
			if (state.backtracking > 0) { Memoize(input, 93, castExpression_StartIndex); }

		}
		DebugLocation(1144, 4);
		} finally { DebugExitRule(GrammarFileName, "castExpression"); }
		return retval;

	}
	// $ANTLR end "castExpression"

	partial void EnterRule_primary();
	partial void LeaveRule_primary();
	// $ANTLR start "primary"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1149:1: primary : ( parExpression | 'this' ( '.' IDENTIFIER )* ( identifierSuffix )? | IDENTIFIER ( '.' IDENTIFIER )* ( identifierSuffix )? | 'super' superSuffix | literal | creator | primitiveType ( '[' ']' )* '.' 'class' | 'void' '.' 'class' );
	[GrammarRule("primary")]
	private Antlr3AstNode primary()
	{
		EnterRule_primary();
		EnterRule("primary", 94);
		var retval = new Antlr3AstNode("primary");
		
		retval.Start = (IToken)input.LT(1);
		int primary_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal523 = default(IToken);
		IToken char_literal524 = default(IToken);
		IToken IDENTIFIER525 = default(IToken);
		IToken IDENTIFIER527 = default(IToken);
		IToken char_literal528 = default(IToken);
		IToken IDENTIFIER529 = default(IToken);
		IToken string_literal531 = default(IToken);
		IToken char_literal536 = default(IToken);
		IToken char_literal537 = default(IToken);
		IToken char_literal538 = default(IToken);
		IToken string_literal539 = default(IToken);
		IToken string_literal540 = default(IToken);
		IToken char_literal541 = default(IToken);
		IToken string_literal542 = default(IToken);
		Antlr3AstNode parExpression522 = default(Antlr3AstNode);
		Antlr3AstNode identifierSuffix526 = default(Antlr3AstNode);
		Antlr3AstNode identifierSuffix530 = default(Antlr3AstNode);
		Antlr3AstNode superSuffix532 = default(Antlr3AstNode);
		Antlr3AstNode literal533 = default(Antlr3AstNode);
		Antlr3AstNode creator534 = default(Antlr3AstNode);
		Antlr3AstNode primitiveType535 = default(Antlr3AstNode);

		object string_literal523_tree = default(object);
		object char_literal524_tree = default(object);
		object IDENTIFIER525_tree = default(object);
		object IDENTIFIER527_tree = default(object);
		object char_literal528_tree = default(object);
		object IDENTIFIER529_tree = default(object);
		object string_literal531_tree = default(object);
		object char_literal536_tree = default(object);
		object char_literal537_tree = default(object);
		object char_literal538_tree = default(object);
		object string_literal539_tree = default(object);
		object string_literal540_tree = default(object);
		object char_literal541_tree = default(object);
		object string_literal542_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "primary");
		DebugLocation(1149, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 94)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1150:5: ( parExpression | 'this' ( '.' IDENTIFIER )* ( identifierSuffix )? | IDENTIFIER ( '.' IDENTIFIER )* ( identifierSuffix )? | 'super' superSuffix | literal | creator | primitiveType ( '[' ']' )* '.' 'class' | 'void' '.' 'class' )
			int alt147=8;
			try { DebugEnterDecision(147, false);
			switch (input.LA(1))
			{
			case LPAREN:
				{
				alt147 = 1;
				}
				break;
			case THIS:
				{
				alt147 = 2;
				}
				break;
			case IDENTIFIER:
				{
				alt147 = 3;
				}
				break;
			case SUPER:
				{
				alt147 = 4;
				}
				break;
			case CHARLITERAL:
			case DOUBLELITERAL:
			case FALSE:
			case FLOATLITERAL:
			case INTLITERAL:
			case LONGLITERAL:
			case NULL:
			case STRINGLITERAL:
			case TRUE:
				{
				alt147 = 5;
				}
				break;
			case NEW:
				{
				alt147 = 6;
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
				{
				alt147 = 7;
				}
				break;
			case VOID:
				{
				alt147 = 8;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 147, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(147); }
			switch (alt147)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1150:9: parExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1150, 9);
				PushFollow(Follow._parExpression_in_primary7027);
				parExpression522=parExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, parExpression522.Tree, parExpression522, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1151:9: 'this' ( '.' IDENTIFIER )* ( identifierSuffix )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1151, 9);
				string_literal523=(IToken)Match(input,THIS,Follow._THIS_in_primary7049); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal523_tree = (object)adaptor.Create(string_literal523, retval);
				adaptor.AddChild(root_0, string_literal523_tree);
				}
				DebugLocation(1152, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1152:9: ( '.' IDENTIFIER )*
				try { DebugEnterSubRule(142);
				while (true)
				{
					int alt142=2;
					try { DebugEnterDecision(142, false);
					int LA142_1 = input.LA(1);

					if ((LA142_1==DOT))
					{
						int LA142_2 = input.LA(2);

						if ((LA142_2==IDENTIFIER))
						{
							int LA142_3 = input.LA(3);

							if ((EvaluatePredicate(synpred220_Java_fragment)))
							{
								alt142 = 1;
							}


						}


					}


					} finally { DebugExitDecision(142); }
					switch ( alt142 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1152:10: '.' IDENTIFIER
						{
						DebugLocation(1152, 10);
						char_literal524=(IToken)Match(input,DOT,Follow._DOT_in_primary7060); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal524_tree = (object)adaptor.Create(char_literal524, retval);
						adaptor.AddChild(root_0, char_literal524_tree);
						}
						DebugLocation(1152, 14);
						IDENTIFIER525=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_primary7062); if (state.failed) return retval;
						if (state.backtracking == 0) {
						IDENTIFIER525_tree = (object)adaptor.Create(IDENTIFIER525, retval);
						adaptor.AddChild(root_0, IDENTIFIER525_tree);
						}

						}
						break;

					default:
						goto loop142;
					}
				}

				loop142:
					;

				} finally { DebugExitSubRule(142); }

				DebugLocation(1154, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1154:9: ( identifierSuffix )?
				int alt143=2;
				try { DebugEnterSubRule(143);
				try { DebugEnterDecision(143, false);
				switch (input.LA(1))
				{
				case LBRACKET:
					{
					int LA143_2 = input.LA(2);

					if ((EvaluatePredicate(synpred221_Java_fragment)))
					{
						alt143 = 1;
					}
					}
					break;
				case LPAREN:
					{
					alt143 = 1;
					}
					break;
				case DOT:
					{
					int LA143_2 = input.LA(2);

					if ((EvaluatePredicate(synpred221_Java_fragment)))
					{
						alt143 = 1;
					}
					}
					break;
				}

				} finally { DebugExitDecision(143); }
				switch (alt143)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1154:10: identifierSuffix
					{
					DebugLocation(1154, 10);
					PushFollow(Follow._identifierSuffix_in_primary7084);
					identifierSuffix526=identifierSuffix();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, identifierSuffix526.Tree, identifierSuffix526, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(143); }


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1156:9: IDENTIFIER ( '.' IDENTIFIER )* ( identifierSuffix )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1156, 9);
				IDENTIFIER527=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_primary7105); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER527_tree = (object)adaptor.Create(IDENTIFIER527, retval);
				adaptor.AddChild(root_0, IDENTIFIER527_tree);
				}
				DebugLocation(1157, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1157:9: ( '.' IDENTIFIER )*
				try { DebugEnterSubRule(144);
				while (true)
				{
					int alt144=2;
					try { DebugEnterDecision(144, false);
					int LA144_1 = input.LA(1);

					if ((LA144_1==DOT))
					{
						int LA144_2 = input.LA(2);

						if ((LA144_2==IDENTIFIER))
						{
							int LA144_3 = input.LA(3);

							if ((EvaluatePredicate(synpred223_Java_fragment)))
							{
								alt144 = 1;
							}


						}


					}


					} finally { DebugExitDecision(144); }
					switch ( alt144 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1157:10: '.' IDENTIFIER
						{
						DebugLocation(1157, 10);
						char_literal528=(IToken)Match(input,DOT,Follow._DOT_in_primary7116); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal528_tree = (object)adaptor.Create(char_literal528, retval);
						adaptor.AddChild(root_0, char_literal528_tree);
						}
						DebugLocation(1157, 14);
						IDENTIFIER529=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_primary7118); if (state.failed) return retval;
						if (state.backtracking == 0) {
						IDENTIFIER529_tree = (object)adaptor.Create(IDENTIFIER529, retval);
						adaptor.AddChild(root_0, IDENTIFIER529_tree);
						}

						}
						break;

					default:
						goto loop144;
					}
				}

				loop144:
					;

				} finally { DebugExitSubRule(144); }

				DebugLocation(1159, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1159:9: ( identifierSuffix )?
				int alt145=2;
				try { DebugEnterSubRule(145);
				try { DebugEnterDecision(145, false);
				switch (input.LA(1))
				{
				case LBRACKET:
					{
					int LA145_2 = input.LA(2);

					if ((EvaluatePredicate(synpred224_Java_fragment)))
					{
						alt145 = 1;
					}
					}
					break;
				case LPAREN:
					{
					alt145 = 1;
					}
					break;
				case DOT:
					{
					int LA145_2 = input.LA(2);

					if ((EvaluatePredicate(synpred224_Java_fragment)))
					{
						alt145 = 1;
					}
					}
					break;
				}

				} finally { DebugExitDecision(145); }
				switch (alt145)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1159:10: identifierSuffix
					{
					DebugLocation(1159, 10);
					PushFollow(Follow._identifierSuffix_in_primary7140);
					identifierSuffix530=identifierSuffix();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, identifierSuffix530.Tree, identifierSuffix530, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(145); }


				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1161:9: 'super' superSuffix
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1161, 9);
				string_literal531=(IToken)Match(input,SUPER,Follow._SUPER_in_primary7161); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal531_tree = (object)adaptor.Create(string_literal531, retval);
				adaptor.AddChild(root_0, string_literal531_tree);
				}
				DebugLocation(1162, 9);
				PushFollow(Follow._superSuffix_in_primary7171);
				superSuffix532=superSuffix();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, superSuffix532.Tree, superSuffix532, retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1163:9: literal
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1163, 9);
				PushFollow(Follow._literal_in_primary7181);
				literal533=literal();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, literal533.Tree, literal533, retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1164:9: creator
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1164, 9);
				PushFollow(Follow._creator_in_primary7191);
				creator534=creator();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, creator534.Tree, creator534, retval);

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1165:9: primitiveType ( '[' ']' )* '.' 'class'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1165, 9);
				PushFollow(Follow._primitiveType_in_primary7201);
				primitiveType535=primitiveType();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primitiveType535.Tree, primitiveType535, retval);
				DebugLocation(1166, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1166:9: ( '[' ']' )*
				try { DebugEnterSubRule(146);
				while (true)
				{
					int alt146=2;
					try { DebugEnterDecision(146, false);
					int LA146_1 = input.LA(1);

					if ((LA146_1==LBRACKET))
					{
						alt146 = 1;
					}


					} finally { DebugExitDecision(146); }
					switch ( alt146 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1166:10: '[' ']'
						{
						DebugLocation(1166, 10);
						char_literal536=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_primary7212); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal536_tree = (object)adaptor.Create(char_literal536, retval);
						adaptor.AddChild(root_0, char_literal536_tree);
						}
						DebugLocation(1166, 14);
						char_literal537=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_primary7214); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal537_tree = (object)adaptor.Create(char_literal537, retval);
						adaptor.AddChild(root_0, char_literal537_tree);
						}

						}
						break;

					default:
						goto loop146;
					}
				}

				loop146:
					;

				} finally { DebugExitSubRule(146); }

				DebugLocation(1168, 9);
				char_literal538=(IToken)Match(input,DOT,Follow._DOT_in_primary7235); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal538_tree = (object)adaptor.Create(char_literal538, retval);
				adaptor.AddChild(root_0, char_literal538_tree);
				}
				DebugLocation(1168, 13);
				string_literal539=(IToken)Match(input,CLASS,Follow._CLASS_in_primary7237); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal539_tree = (object)adaptor.Create(string_literal539, retval);
				adaptor.AddChild(root_0, string_literal539_tree);
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1169:9: 'void' '.' 'class'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1169, 9);
				string_literal540=(IToken)Match(input,VOID,Follow._VOID_in_primary7247); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal540_tree = (object)adaptor.Create(string_literal540, retval);
				adaptor.AddChild(root_0, string_literal540_tree);
				}
				DebugLocation(1169, 16);
				char_literal541=(IToken)Match(input,DOT,Follow._DOT_in_primary7249); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal541_tree = (object)adaptor.Create(char_literal541, retval);
				adaptor.AddChild(root_0, char_literal541_tree);
				}
				DebugLocation(1169, 20);
				string_literal542=(IToken)Match(input,CLASS,Follow._CLASS_in_primary7251); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal542_tree = (object)adaptor.Create(string_literal542, retval);
				adaptor.AddChild(root_0, string_literal542_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("primary", 94);
			LeaveRule("primary", 94);
			LeaveRule_primary();
			if (state.backtracking > 0) { Memoize(input, 94, primary_StartIndex); }

		}
		DebugLocation(1170, 4);
		} finally { DebugExitRule(GrammarFileName, "primary"); }
		return retval;

	}
	// $ANTLR end "primary"

	partial void EnterRule_superSuffix();
	partial void LeaveRule_superSuffix();
	// $ANTLR start "superSuffix"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1173:1: superSuffix : ( arguments | '.' ( typeArguments )? IDENTIFIER ( arguments )? );
	[GrammarRule("superSuffix")]
	private Antlr3AstNode superSuffix()
	{
		EnterRule_superSuffix();
		EnterRule("superSuffix", 95);
		var retval = new Antlr3AstNode("superSuffix");
		
		retval.Start = (IToken)input.LT(1);
		int superSuffix_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal544 = default(IToken);
		IToken IDENTIFIER546 = default(IToken);
		Antlr3AstNode arguments543 = default(Antlr3AstNode);
		Antlr3AstNode typeArguments545 = default(Antlr3AstNode);
		Antlr3AstNode arguments547 = default(Antlr3AstNode);

		object char_literal544_tree = default(object);
		object IDENTIFIER546_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "superSuffix");
		DebugLocation(1173, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 95)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1174:5: ( arguments | '.' ( typeArguments )? IDENTIFIER ( arguments )? )
			int alt150=2;
			try { DebugEnterDecision(150, false);
			int LA150_1 = input.LA(1);

			if ((LA150_1==LPAREN))
			{
				alt150 = 1;
			}
			else if ((LA150_1==DOT))
			{
				alt150 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 150, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(150); }
			switch (alt150)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1174:9: arguments
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1174, 9);
				PushFollow(Follow._arguments_in_superSuffix7277);
				arguments543=arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arguments543.Tree, arguments543, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1175:9: '.' ( typeArguments )? IDENTIFIER ( arguments )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1175, 9);
				char_literal544=(IToken)Match(input,DOT,Follow._DOT_in_superSuffix7287); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal544_tree = (object)adaptor.Create(char_literal544, retval);
				adaptor.AddChild(root_0, char_literal544_tree);
				}
				DebugLocation(1175, 13);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1175:13: ( typeArguments )?
				int alt148=2;
				try { DebugEnterSubRule(148);
				try { DebugEnterDecision(148, false);
				int LA148_1 = input.LA(1);

				if ((LA148_1==LT))
				{
					alt148 = 1;
				}
				} finally { DebugExitDecision(148); }
				switch (alt148)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1175:14: typeArguments
					{
					DebugLocation(1175, 14);
					PushFollow(Follow._typeArguments_in_superSuffix7290);
					typeArguments545=typeArguments();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, typeArguments545.Tree, typeArguments545, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(148); }

				DebugLocation(1177, 9);
				IDENTIFIER546=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_superSuffix7311); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER546_tree = (object)adaptor.Create(IDENTIFIER546, retval);
				adaptor.AddChild(root_0, IDENTIFIER546_tree);
				}
				DebugLocation(1178, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1178:9: ( arguments )?
				int alt149=2;
				try { DebugEnterSubRule(149);
				try { DebugEnterDecision(149, false);
				int LA149_1 = input.LA(1);

				if ((LA149_1==LPAREN))
				{
					alt149 = 1;
				}
				} finally { DebugExitDecision(149); }
				switch (alt149)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1178:10: arguments
					{
					DebugLocation(1178, 10);
					PushFollow(Follow._arguments_in_superSuffix7322);
					arguments547=arguments();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, arguments547.Tree, arguments547, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(149); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("superSuffix", 95);
			LeaveRule("superSuffix", 95);
			LeaveRule_superSuffix();
			if (state.backtracking > 0) { Memoize(input, 95, superSuffix_StartIndex); }

		}
		DebugLocation(1180, 4);
		} finally { DebugExitRule(GrammarFileName, "superSuffix"); }
		return retval;

	}
	// $ANTLR end "superSuffix"

	partial void EnterRule_identifierSuffix();
	partial void LeaveRule_identifierSuffix();
	// $ANTLR start "identifierSuffix"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1183:1: identifierSuffix : ( ( '[' ']' )+ '.' 'class' | ( '[' expression ']' )+ | arguments | '.' 'class' | '.' nonWildcardTypeArguments IDENTIFIER arguments | '.' 'this' | '.' 'super' arguments | innerCreator );
	[GrammarRule("identifierSuffix")]
	private Antlr3AstNode identifierSuffix()
	{
		EnterRule_identifierSuffix();
		EnterRule("identifierSuffix", 96);
		var retval = new Antlr3AstNode("identifierSuffix");
		
		retval.Start = (IToken)input.LT(1);
		int identifierSuffix_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal548 = default(IToken);
		IToken char_literal549 = default(IToken);
		IToken char_literal550 = default(IToken);
		IToken string_literal551 = default(IToken);
		IToken char_literal552 = default(IToken);
		IToken char_literal554 = default(IToken);
		IToken char_literal556 = default(IToken);
		IToken string_literal557 = default(IToken);
		IToken char_literal558 = default(IToken);
		IToken IDENTIFIER560 = default(IToken);
		IToken char_literal562 = default(IToken);
		IToken string_literal563 = default(IToken);
		IToken char_literal564 = default(IToken);
		IToken string_literal565 = default(IToken);
		Antlr3AstNode expression553 = default(Antlr3AstNode);
		Antlr3AstNode arguments555 = default(Antlr3AstNode);
		Antlr3AstNode nonWildcardTypeArguments559 = default(Antlr3AstNode);
		Antlr3AstNode arguments561 = default(Antlr3AstNode);
		Antlr3AstNode arguments566 = default(Antlr3AstNode);
		Antlr3AstNode innerCreator567 = default(Antlr3AstNode);

		object char_literal548_tree = default(object);
		object char_literal549_tree = default(object);
		object char_literal550_tree = default(object);
		object string_literal551_tree = default(object);
		object char_literal552_tree = default(object);
		object char_literal554_tree = default(object);
		object char_literal556_tree = default(object);
		object string_literal557_tree = default(object);
		object char_literal558_tree = default(object);
		object IDENTIFIER560_tree = default(object);
		object char_literal562_tree = default(object);
		object string_literal563_tree = default(object);
		object char_literal564_tree = default(object);
		object string_literal565_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "identifierSuffix");
		DebugLocation(1183, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 96)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1184:5: ( ( '[' ']' )+ '.' 'class' | ( '[' expression ']' )+ | arguments | '.' 'class' | '.' nonWildcardTypeArguments IDENTIFIER arguments | '.' 'this' | '.' 'super' arguments | innerCreator )
			int alt153=8;
			try { DebugEnterDecision(153, false);
			switch (input.LA(1))
			{
			case LBRACKET:
				{
				int LA153_2 = input.LA(2);

				if ((LA153_2==RBRACKET))
				{
					alt153 = 1;
				}
				else if ((LA153_2==BANG||LA153_2==BOOLEAN||LA153_2==BYTE||(LA153_2>=CHAR && LA153_2<=CHARLITERAL)||(LA153_2>=DOUBLE && LA153_2<=DOUBLELITERAL)||LA153_2==FALSE||(LA153_2>=FLOAT && LA153_2<=FLOATLITERAL)||LA153_2==IDENTIFIER||LA153_2==INT||LA153_2==INTLITERAL||(LA153_2>=LONG && LA153_2<=LPAREN)||(LA153_2>=NEW && LA153_2<=NULL)||LA153_2==PLUS||LA153_2==PLUSPLUS||LA153_2==SHORT||(LA153_2>=STRINGLITERAL && LA153_2<=SUB)||(LA153_2>=SUBSUB && LA153_2<=SUPER)||LA153_2==THIS||LA153_2==TILDE||LA153_2==TRUE||LA153_2==VOID))
				{
					alt153 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 153, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case LPAREN:
				{
				alt153 = 3;
				}
				break;
			case DOT:
				{
				switch (input.LA(2))
				{
				case CLASS:
					{
					alt153 = 4;
					}
					break;
				case THIS:
					{
					alt153 = 6;
					}
					break;
				case SUPER:
					{
					alt153 = 7;
					}
					break;
				case NEW:
					{
					alt153 = 8;
					}
					break;
				case LT:
					{
					alt153 = 5;
					}
					break;
				default:
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 153, 3, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}

				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 153, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(153); }
			switch (alt153)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1184:9: ( '[' ']' )+ '.' 'class'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1184, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1184:9: ( '[' ']' )+
				int cnt151=0;
				try { DebugEnterSubRule(151);
				while (true)
				{
					int alt151=2;
					try { DebugEnterDecision(151, false);
					int LA151_1 = input.LA(1);

					if ((LA151_1==LBRACKET))
					{
						alt151 = 1;
					}


					} finally { DebugExitDecision(151); }
					switch (alt151)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1184:10: '[' ']'
						{
						DebugLocation(1184, 10);
						char_literal548=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_identifierSuffix7355); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal548_tree = (object)adaptor.Create(char_literal548, retval);
						adaptor.AddChild(root_0, char_literal548_tree);
						}
						DebugLocation(1184, 14);
						char_literal549=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_identifierSuffix7357); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal549_tree = (object)adaptor.Create(char_literal549, retval);
						adaptor.AddChild(root_0, char_literal549_tree);
						}

						}
						break;

					default:
						if (cnt151 >= 1)
							goto loop151;

						if (state.backtracking>0) {state.failed=true; return retval;}
						EarlyExitException eee151 = new EarlyExitException( 151, input );
						DebugRecognitionException(eee151);
						throw eee151;
					}
					cnt151++;
				}
				loop151:
					;

				} finally { DebugExitSubRule(151); }

				DebugLocation(1186, 9);
				char_literal550=(IToken)Match(input,DOT,Follow._DOT_in_identifierSuffix7378); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal550_tree = (object)adaptor.Create(char_literal550, retval);
				adaptor.AddChild(root_0, char_literal550_tree);
				}
				DebugLocation(1186, 13);
				string_literal551=(IToken)Match(input,CLASS,Follow._CLASS_in_identifierSuffix7380); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal551_tree = (object)adaptor.Create(string_literal551, retval);
				adaptor.AddChild(root_0, string_literal551_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1187:9: ( '[' expression ']' )+
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1187, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1187:9: ( '[' expression ']' )+
				int cnt152=0;
				try { DebugEnterSubRule(152);
				while (true)
				{
					int alt152=2;
					try { DebugEnterDecision(152, false);
					int LA152_1 = input.LA(1);

					if ((LA152_1==LBRACKET))
					{
						int LA152_2 = input.LA(2);

						if ((EvaluatePredicate(synpred236_Java_fragment)))
						{
							alt152 = 1;
						}


					}


					} finally { DebugExitDecision(152); }
					switch (alt152)
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1187:10: '[' expression ']'
						{
						DebugLocation(1187, 10);
						char_literal552=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_identifierSuffix7391); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal552_tree = (object)adaptor.Create(char_literal552, retval);
						adaptor.AddChild(root_0, char_literal552_tree);
						}
						DebugLocation(1187, 14);
						PushFollow(Follow._expression_in_identifierSuffix7393);
						expression553=expression();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, expression553.Tree, expression553, retval);
						DebugLocation(1187, 25);
						char_literal554=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_identifierSuffix7395); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal554_tree = (object)adaptor.Create(char_literal554, retval);
						adaptor.AddChild(root_0, char_literal554_tree);
						}

						}
						break;

					default:
						if (cnt152 >= 1)
							goto loop152;

						if (state.backtracking>0) {state.failed=true; return retval;}
						EarlyExitException eee152 = new EarlyExitException( 152, input );
						DebugRecognitionException(eee152);
						throw eee152;
					}
					cnt152++;
				}
				loop152:
					;

				} finally { DebugExitSubRule(152); }


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1189:9: arguments
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1189, 9);
				PushFollow(Follow._arguments_in_identifierSuffix7416);
				arguments555=arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arguments555.Tree, arguments555, retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1190:9: '.' 'class'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1190, 9);
				char_literal556=(IToken)Match(input,DOT,Follow._DOT_in_identifierSuffix7426); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal556_tree = (object)adaptor.Create(char_literal556, retval);
				adaptor.AddChild(root_0, char_literal556_tree);
				}
				DebugLocation(1190, 13);
				string_literal557=(IToken)Match(input,CLASS,Follow._CLASS_in_identifierSuffix7428); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal557_tree = (object)adaptor.Create(string_literal557, retval);
				adaptor.AddChild(root_0, string_literal557_tree);
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1191:9: '.' nonWildcardTypeArguments IDENTIFIER arguments
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1191, 9);
				char_literal558=(IToken)Match(input,DOT,Follow._DOT_in_identifierSuffix7438); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal558_tree = (object)adaptor.Create(char_literal558, retval);
				adaptor.AddChild(root_0, char_literal558_tree);
				}
				DebugLocation(1191, 13);
				PushFollow(Follow._nonWildcardTypeArguments_in_identifierSuffix7440);
				nonWildcardTypeArguments559=nonWildcardTypeArguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, nonWildcardTypeArguments559.Tree, nonWildcardTypeArguments559, retval);
				DebugLocation(1191, 38);
				IDENTIFIER560=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_identifierSuffix7442); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER560_tree = (object)adaptor.Create(IDENTIFIER560, retval);
				adaptor.AddChild(root_0, IDENTIFIER560_tree);
				}
				DebugLocation(1191, 49);
				PushFollow(Follow._arguments_in_identifierSuffix7444);
				arguments561=arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arguments561.Tree, arguments561, retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1192:9: '.' 'this'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1192, 9);
				char_literal562=(IToken)Match(input,DOT,Follow._DOT_in_identifierSuffix7454); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal562_tree = (object)adaptor.Create(char_literal562, retval);
				adaptor.AddChild(root_0, char_literal562_tree);
				}
				DebugLocation(1192, 13);
				string_literal563=(IToken)Match(input,THIS,Follow._THIS_in_identifierSuffix7456); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal563_tree = (object)adaptor.Create(string_literal563, retval);
				adaptor.AddChild(root_0, string_literal563_tree);
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1193:9: '.' 'super' arguments
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1193, 9);
				char_literal564=(IToken)Match(input,DOT,Follow._DOT_in_identifierSuffix7466); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal564_tree = (object)adaptor.Create(char_literal564, retval);
				adaptor.AddChild(root_0, char_literal564_tree);
				}
				DebugLocation(1193, 13);
				string_literal565=(IToken)Match(input,SUPER,Follow._SUPER_in_identifierSuffix7468); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal565_tree = (object)adaptor.Create(string_literal565, retval);
				adaptor.AddChild(root_0, string_literal565_tree);
				}
				DebugLocation(1193, 21);
				PushFollow(Follow._arguments_in_identifierSuffix7470);
				arguments566=arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arguments566.Tree, arguments566, retval);

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1194:9: innerCreator
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1194, 9);
				PushFollow(Follow._innerCreator_in_identifierSuffix7480);
				innerCreator567=innerCreator();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, innerCreator567.Tree, innerCreator567, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("identifierSuffix", 96);
			LeaveRule("identifierSuffix", 96);
			LeaveRule_identifierSuffix();
			if (state.backtracking > 0) { Memoize(input, 96, identifierSuffix_StartIndex); }

		}
		DebugLocation(1195, 4);
		} finally { DebugExitRule(GrammarFileName, "identifierSuffix"); }
		return retval;

	}
	// $ANTLR end "identifierSuffix"

	partial void EnterRule_selector();
	partial void LeaveRule_selector();
	// $ANTLR start "selector"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1198:1: selector : ( '.' IDENTIFIER ( arguments )? | '.' nonWildcardTypeArguments IDENTIFIER arguments | '.' 'this' | '.' 'super' superSuffix | innerCreator | '[' expression ']' );
	[GrammarRule("selector")]
	private Antlr3AstNode selector()
	{
		EnterRule_selector();
		EnterRule("selector", 97);
		var retval = new Antlr3AstNode("selector");
		
		retval.Start = (IToken)input.LT(1);
		int selector_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal568 = default(IToken);
		IToken IDENTIFIER569 = default(IToken);
		IToken char_literal571 = default(IToken);
		IToken IDENTIFIER573 = default(IToken);
		IToken char_literal575 = default(IToken);
		IToken string_literal576 = default(IToken);
		IToken char_literal577 = default(IToken);
		IToken string_literal578 = default(IToken);
		IToken char_literal581 = default(IToken);
		IToken char_literal583 = default(IToken);
		Antlr3AstNode arguments570 = default(Antlr3AstNode);
		Antlr3AstNode nonWildcardTypeArguments572 = default(Antlr3AstNode);
		Antlr3AstNode arguments574 = default(Antlr3AstNode);
		Antlr3AstNode superSuffix579 = default(Antlr3AstNode);
		Antlr3AstNode innerCreator580 = default(Antlr3AstNode);
		Antlr3AstNode expression582 = default(Antlr3AstNode);

		object char_literal568_tree = default(object);
		object IDENTIFIER569_tree = default(object);
		object char_literal571_tree = default(object);
		object IDENTIFIER573_tree = default(object);
		object char_literal575_tree = default(object);
		object string_literal576_tree = default(object);
		object char_literal577_tree = default(object);
		object string_literal578_tree = default(object);
		object char_literal581_tree = default(object);
		object char_literal583_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "selector");
		DebugLocation(1198, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 97)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1199:5: ( '.' IDENTIFIER ( arguments )? | '.' nonWildcardTypeArguments IDENTIFIER arguments | '.' 'this' | '.' 'super' superSuffix | innerCreator | '[' expression ']' )
			int alt155=6;
			try { DebugEnterDecision(155, false);
			int LA155_1 = input.LA(1);

			if ((LA155_1==DOT))
			{
				switch (input.LA(2))
				{
				case IDENTIFIER:
					{
					alt155 = 1;
					}
					break;
				case THIS:
					{
					alt155 = 3;
					}
					break;
				case SUPER:
					{
					alt155 = 4;
					}
					break;
				case NEW:
					{
					alt155 = 5;
					}
					break;
				case LT:
					{
					alt155 = 2;
					}
					break;
				default:
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 155, 1, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}

			}
			else if ((LA155_1==LBRACKET))
			{
				alt155 = 6;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 155, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(155); }
			switch (alt155)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1199:9: '.' IDENTIFIER ( arguments )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1199, 9);
				char_literal568=(IToken)Match(input,DOT,Follow._DOT_in_selector7502); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal568_tree = (object)adaptor.Create(char_literal568, retval);
				adaptor.AddChild(root_0, char_literal568_tree);
				}
				DebugLocation(1199, 13);
				IDENTIFIER569=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_selector7504); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER569_tree = (object)adaptor.Create(IDENTIFIER569, retval);
				adaptor.AddChild(root_0, IDENTIFIER569_tree);
				}
				DebugLocation(1199, 24);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1199:24: ( arguments )?
				int alt154=2;
				try { DebugEnterSubRule(154);
				try { DebugEnterDecision(154, false);
				int LA154_1 = input.LA(1);

				if ((LA154_1==LPAREN))
				{
					alt154 = 1;
				}
				} finally { DebugExitDecision(154); }
				switch (alt154)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1199:24: arguments
					{
					DebugLocation(1199, 24);
					PushFollow(Follow._arguments_in_selector7506);
					arguments570=arguments();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, arguments570.Tree, arguments570, retval);

					}
					break;

				}
				} finally { DebugExitSubRule(154); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1200:9: '.' nonWildcardTypeArguments IDENTIFIER arguments
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1200, 9);
				char_literal571=(IToken)Match(input,DOT,Follow._DOT_in_selector7517); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal571_tree = (object)adaptor.Create(char_literal571, retval);
				adaptor.AddChild(root_0, char_literal571_tree);
				}
				DebugLocation(1200, 13);
				PushFollow(Follow._nonWildcardTypeArguments_in_selector7519);
				nonWildcardTypeArguments572=nonWildcardTypeArguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, nonWildcardTypeArguments572.Tree, nonWildcardTypeArguments572, retval);
				DebugLocation(1200, 38);
				IDENTIFIER573=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_selector7521); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER573_tree = (object)adaptor.Create(IDENTIFIER573, retval);
				adaptor.AddChild(root_0, IDENTIFIER573_tree);
				}
				DebugLocation(1200, 49);
				PushFollow(Follow._arguments_in_selector7523);
				arguments574=arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arguments574.Tree, arguments574, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1201:9: '.' 'this'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1201, 9);
				char_literal575=(IToken)Match(input,DOT,Follow._DOT_in_selector7534); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal575_tree = (object)adaptor.Create(char_literal575, retval);
				adaptor.AddChild(root_0, char_literal575_tree);
				}
				DebugLocation(1201, 13);
				string_literal576=(IToken)Match(input,THIS,Follow._THIS_in_selector7536); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal576_tree = (object)adaptor.Create(string_literal576, retval);
				adaptor.AddChild(root_0, string_literal576_tree);
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1202:9: '.' 'super' superSuffix
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1202, 9);
				char_literal577=(IToken)Match(input,DOT,Follow._DOT_in_selector7546); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal577_tree = (object)adaptor.Create(char_literal577, retval);
				adaptor.AddChild(root_0, char_literal577_tree);
				}
				DebugLocation(1202, 13);
				string_literal578=(IToken)Match(input,SUPER,Follow._SUPER_in_selector7548); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal578_tree = (object)adaptor.Create(string_literal578, retval);
				adaptor.AddChild(root_0, string_literal578_tree);
				}
				DebugLocation(1203, 9);
				PushFollow(Follow._superSuffix_in_selector7558);
				superSuffix579=superSuffix();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, superSuffix579.Tree, superSuffix579, retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1204:9: innerCreator
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1204, 9);
				PushFollow(Follow._innerCreator_in_selector7568);
				innerCreator580=innerCreator();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, innerCreator580.Tree, innerCreator580, retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1205:9: '[' expression ']'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1205, 9);
				char_literal581=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_selector7578); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal581_tree = (object)adaptor.Create(char_literal581, retval);
				adaptor.AddChild(root_0, char_literal581_tree);
				}
				DebugLocation(1205, 13);
				PushFollow(Follow._expression_in_selector7580);
				expression582=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression582.Tree, expression582, retval);
				DebugLocation(1205, 24);
				char_literal583=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_selector7582); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal583_tree = (object)adaptor.Create(char_literal583, retval);
				adaptor.AddChild(root_0, char_literal583_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("selector", 97);
			LeaveRule("selector", 97);
			LeaveRule_selector();
			if (state.backtracking > 0) { Memoize(input, 97, selector_StartIndex); }

		}
		DebugLocation(1206, 4);
		} finally { DebugExitRule(GrammarFileName, "selector"); }
		return retval;

	}
	// $ANTLR end "selector"

	partial void EnterRule_creator();
	partial void LeaveRule_creator();
	// $ANTLR start "creator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1208:1: creator : ( 'new' nonWildcardTypeArguments classOrInterfaceType classCreatorRest | 'new' classOrInterfaceType classCreatorRest | arrayCreator );
	[GrammarRule("creator")]
	private Antlr3AstNode creator()
	{
		EnterRule_creator();
		EnterRule("creator", 98);
		var retval = new Antlr3AstNode("creator");
		
		retval.Start = (IToken)input.LT(1);
		int creator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal584 = default(IToken);
		IToken string_literal588 = default(IToken);
		Antlr3AstNode nonWildcardTypeArguments585 = default(Antlr3AstNode);
		Antlr3AstNode classOrInterfaceType586 = default(Antlr3AstNode);
		Antlr3AstNode classCreatorRest587 = default(Antlr3AstNode);
		Antlr3AstNode classOrInterfaceType589 = default(Antlr3AstNode);
		Antlr3AstNode classCreatorRest590 = default(Antlr3AstNode);
		Antlr3AstNode arrayCreator591 = default(Antlr3AstNode);

		object string_literal584_tree = default(object);
		object string_literal588_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "creator");
		DebugLocation(1208, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 98)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1209:5: ( 'new' nonWildcardTypeArguments classOrInterfaceType classCreatorRest | 'new' classOrInterfaceType classCreatorRest | arrayCreator )
			int alt156=3;
			try { DebugEnterDecision(156, false);
			int LA156_1 = input.LA(1);

			if ((LA156_1==NEW))
			{
				int LA156_2 = input.LA(2);

				if ((EvaluatePredicate(synpred249_Java_fragment)))
				{
					alt156 = 1;
				}
				else if ((EvaluatePredicate(synpred250_Java_fragment)))
				{
					alt156 = 2;
				}
				else if ((true))
				{
					alt156 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 156, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 156, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(156); }
			switch (alt156)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1209:9: 'new' nonWildcardTypeArguments classOrInterfaceType classCreatorRest
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1209, 9);
				string_literal584=(IToken)Match(input,NEW,Follow._NEW_in_creator7602); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal584_tree = (object)adaptor.Create(string_literal584, retval);
				adaptor.AddChild(root_0, string_literal584_tree);
				}
				DebugLocation(1209, 15);
				PushFollow(Follow._nonWildcardTypeArguments_in_creator7604);
				nonWildcardTypeArguments585=nonWildcardTypeArguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, nonWildcardTypeArguments585.Tree, nonWildcardTypeArguments585, retval);
				DebugLocation(1209, 40);
				PushFollow(Follow._classOrInterfaceType_in_creator7606);
				classOrInterfaceType586=classOrInterfaceType();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classOrInterfaceType586.Tree, classOrInterfaceType586, retval);
				DebugLocation(1209, 61);
				PushFollow(Follow._classCreatorRest_in_creator7608);
				classCreatorRest587=classCreatorRest();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classCreatorRest587.Tree, classCreatorRest587, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1210:9: 'new' classOrInterfaceType classCreatorRest
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1210, 9);
				string_literal588=(IToken)Match(input,NEW,Follow._NEW_in_creator7618); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal588_tree = (object)adaptor.Create(string_literal588, retval);
				adaptor.AddChild(root_0, string_literal588_tree);
				}
				DebugLocation(1210, 15);
				PushFollow(Follow._classOrInterfaceType_in_creator7620);
				classOrInterfaceType589=classOrInterfaceType();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classOrInterfaceType589.Tree, classOrInterfaceType589, retval);
				DebugLocation(1210, 36);
				PushFollow(Follow._classCreatorRest_in_creator7622);
				classCreatorRest590=classCreatorRest();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classCreatorRest590.Tree, classCreatorRest590, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1211:9: arrayCreator
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1211, 9);
				PushFollow(Follow._arrayCreator_in_creator7632);
				arrayCreator591=arrayCreator();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arrayCreator591.Tree, arrayCreator591, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("creator", 98);
			LeaveRule("creator", 98);
			LeaveRule_creator();
			if (state.backtracking > 0) { Memoize(input, 98, creator_StartIndex); }

		}
		DebugLocation(1212, 4);
		} finally { DebugExitRule(GrammarFileName, "creator"); }
		return retval;

	}
	// $ANTLR end "creator"

	partial void EnterRule_arrayCreator();
	partial void LeaveRule_arrayCreator();
	// $ANTLR start "arrayCreator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1214:1: arrayCreator : ( 'new' createdName '[' ']' ( '[' ']' )* arrayInitializer | 'new' createdName '[' expression ']' ( '[' expression ']' )* ( '[' ']' )* );
	[GrammarRule("arrayCreator")]
	private Antlr3AstNode arrayCreator()
	{
		EnterRule_arrayCreator();
		EnterRule("arrayCreator", 99);
		var retval = new Antlr3AstNode("arrayCreator");
		
		retval.Start = (IToken)input.LT(1);
		int arrayCreator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal592 = default(IToken);
		IToken char_literal594 = default(IToken);
		IToken char_literal595 = default(IToken);
		IToken char_literal596 = default(IToken);
		IToken char_literal597 = default(IToken);
		IToken string_literal599 = default(IToken);
		IToken char_literal601 = default(IToken);
		IToken char_literal603 = default(IToken);
		IToken char_literal604 = default(IToken);
		IToken char_literal606 = default(IToken);
		IToken char_literal607 = default(IToken);
		IToken char_literal608 = default(IToken);
		Antlr3AstNode createdName593 = default(Antlr3AstNode);
		Antlr3AstNode arrayInitializer598 = default(Antlr3AstNode);
		Antlr3AstNode createdName600 = default(Antlr3AstNode);
		Antlr3AstNode expression602 = default(Antlr3AstNode);
		Antlr3AstNode expression605 = default(Antlr3AstNode);

		object string_literal592_tree = default(object);
		object char_literal594_tree = default(object);
		object char_literal595_tree = default(object);
		object char_literal596_tree = default(object);
		object char_literal597_tree = default(object);
		object string_literal599_tree = default(object);
		object char_literal601_tree = default(object);
		object char_literal603_tree = default(object);
		object char_literal604_tree = default(object);
		object char_literal606_tree = default(object);
		object char_literal607_tree = default(object);
		object char_literal608_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "arrayCreator");
		DebugLocation(1214, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 99)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1215:5: ( 'new' createdName '[' ']' ( '[' ']' )* arrayInitializer | 'new' createdName '[' expression ']' ( '[' expression ']' )* ( '[' ']' )* )
			int alt160=2;
			try { DebugEnterDecision(160, false);
			int LA160_1 = input.LA(1);

			if ((LA160_1==NEW))
			{
				int LA160_2 = input.LA(2);

				if ((EvaluatePredicate(synpred252_Java_fragment)))
				{
					alt160 = 1;
				}
				else if ((true))
				{
					alt160 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 160, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 160, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(160); }
			switch (alt160)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1215:9: 'new' createdName '[' ']' ( '[' ']' )* arrayInitializer
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1215, 9);
				string_literal592=(IToken)Match(input,NEW,Follow._NEW_in_arrayCreator7652); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal592_tree = (object)adaptor.Create(string_literal592, retval);
				adaptor.AddChild(root_0, string_literal592_tree);
				}
				DebugLocation(1215, 15);
				PushFollow(Follow._createdName_in_arrayCreator7654);
				createdName593=createdName();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, createdName593.Tree, createdName593, retval);
				DebugLocation(1216, 9);
				char_literal594=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_arrayCreator7664); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal594_tree = (object)adaptor.Create(char_literal594, retval);
				adaptor.AddChild(root_0, char_literal594_tree);
				}
				DebugLocation(1216, 13);
				char_literal595=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_arrayCreator7666); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal595_tree = (object)adaptor.Create(char_literal595, retval);
				adaptor.AddChild(root_0, char_literal595_tree);
				}
				DebugLocation(1217, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1217:9: ( '[' ']' )*
				try { DebugEnterSubRule(157);
				while (true)
				{
					int alt157=2;
					try { DebugEnterDecision(157, false);
					int LA157_1 = input.LA(1);

					if ((LA157_1==LBRACKET))
					{
						alt157 = 1;
					}


					} finally { DebugExitDecision(157); }
					switch ( alt157 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1217:10: '[' ']'
						{
						DebugLocation(1217, 10);
						char_literal596=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_arrayCreator7677); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal596_tree = (object)adaptor.Create(char_literal596, retval);
						adaptor.AddChild(root_0, char_literal596_tree);
						}
						DebugLocation(1217, 14);
						char_literal597=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_arrayCreator7679); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal597_tree = (object)adaptor.Create(char_literal597, retval);
						adaptor.AddChild(root_0, char_literal597_tree);
						}

						}
						break;

					default:
						goto loop157;
					}
				}

				loop157:
					;

				} finally { DebugExitSubRule(157); }

				DebugLocation(1219, 9);
				PushFollow(Follow._arrayInitializer_in_arrayCreator7700);
				arrayInitializer598=arrayInitializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arrayInitializer598.Tree, arrayInitializer598, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1221:9: 'new' createdName '[' expression ']' ( '[' expression ']' )* ( '[' ']' )*
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1221, 9);
				string_literal599=(IToken)Match(input,NEW,Follow._NEW_in_arrayCreator7711); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal599_tree = (object)adaptor.Create(string_literal599, retval);
				adaptor.AddChild(root_0, string_literal599_tree);
				}
				DebugLocation(1221, 15);
				PushFollow(Follow._createdName_in_arrayCreator7713);
				createdName600=createdName();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, createdName600.Tree, createdName600, retval);
				DebugLocation(1222, 9);
				char_literal601=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_arrayCreator7723); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal601_tree = (object)adaptor.Create(char_literal601, retval);
				adaptor.AddChild(root_0, char_literal601_tree);
				}
				DebugLocation(1222, 13);
				PushFollow(Follow._expression_in_arrayCreator7725);
				expression602=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression602.Tree, expression602, retval);
				DebugLocation(1223, 9);
				char_literal603=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_arrayCreator7735); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal603_tree = (object)adaptor.Create(char_literal603, retval);
				adaptor.AddChild(root_0, char_literal603_tree);
				}
				DebugLocation(1224, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1224:9: ( '[' expression ']' )*
				try { DebugEnterSubRule(158);
				while (true)
				{
					int alt158=2;
					try { DebugEnterDecision(158, false);
					int LA158_1 = input.LA(1);

					if ((LA158_1==LBRACKET))
					{
						int LA158_2 = input.LA(2);

						if ((EvaluatePredicate(synpred253_Java_fragment)))
						{
							alt158 = 1;
						}


					}


					} finally { DebugExitDecision(158); }
					switch ( alt158 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1224:13: '[' expression ']'
						{
						DebugLocation(1224, 13);
						char_literal604=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_arrayCreator7749); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal604_tree = (object)adaptor.Create(char_literal604, retval);
						adaptor.AddChild(root_0, char_literal604_tree);
						}
						DebugLocation(1224, 17);
						PushFollow(Follow._expression_in_arrayCreator7751);
						expression605=expression();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, expression605.Tree, expression605, retval);
						DebugLocation(1225, 13);
						char_literal606=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_arrayCreator7765); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal606_tree = (object)adaptor.Create(char_literal606, retval);
						adaptor.AddChild(root_0, char_literal606_tree);
						}

						}
						break;

					default:
						goto loop158;
					}
				}

				loop158:
					;

				} finally { DebugExitSubRule(158); }

				DebugLocation(1227, 9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1227:9: ( '[' ']' )*
				try { DebugEnterSubRule(159);
				while (true)
				{
					int alt159=2;
					try { DebugEnterDecision(159, false);
					int LA159_1 = input.LA(1);

					if ((LA159_1==LBRACKET))
					{
						int LA159_2 = input.LA(2);

						if ((LA159_2==RBRACKET))
						{
							alt159 = 1;
						}


					}


					} finally { DebugExitDecision(159); }
					switch ( alt159 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1227:10: '[' ']'
						{
						DebugLocation(1227, 10);
						char_literal607=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_arrayCreator7787); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal607_tree = (object)adaptor.Create(char_literal607, retval);
						adaptor.AddChild(root_0, char_literal607_tree);
						}
						DebugLocation(1227, 14);
						char_literal608=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_arrayCreator7789); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal608_tree = (object)adaptor.Create(char_literal608, retval);
						adaptor.AddChild(root_0, char_literal608_tree);
						}

						}
						break;

					default:
						goto loop159;
					}
				}

				loop159:
					;

				} finally { DebugExitSubRule(159); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("arrayCreator", 99);
			LeaveRule("arrayCreator", 99);
			LeaveRule_arrayCreator();
			if (state.backtracking > 0) { Memoize(input, 99, arrayCreator_StartIndex); }

		}
		DebugLocation(1229, 4);
		} finally { DebugExitRule(GrammarFileName, "arrayCreator"); }
		return retval;

	}
	// $ANTLR end "arrayCreator"

	partial void EnterRule_variableInitializer();
	partial void LeaveRule_variableInitializer();
	// $ANTLR start "variableInitializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1231:1: variableInitializer : ( arrayInitializer | expression );
	[GrammarRule("variableInitializer")]
	private Antlr3AstNode variableInitializer()
	{
		EnterRule_variableInitializer();
		EnterRule("variableInitializer", 100);
		var retval = new Antlr3AstNode("variableInitializer");
		
		retval.Start = (IToken)input.LT(1);
		int variableInitializer_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode arrayInitializer609 = default(Antlr3AstNode);
		Antlr3AstNode expression610 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "variableInitializer");
		DebugLocation(1231, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 100)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1232:5: ( arrayInitializer | expression )
			int alt161=2;
			try { DebugEnterDecision(161, false);
			int LA161_1 = input.LA(1);

			if ((LA161_1==LBRACE))
			{
				alt161 = 1;
			}
			else if ((LA161_1==BANG||LA161_1==BOOLEAN||LA161_1==BYTE||(LA161_1>=CHAR && LA161_1<=CHARLITERAL)||(LA161_1>=DOUBLE && LA161_1<=DOUBLELITERAL)||LA161_1==FALSE||(LA161_1>=FLOAT && LA161_1<=FLOATLITERAL)||LA161_1==IDENTIFIER||LA161_1==INT||LA161_1==INTLITERAL||(LA161_1>=LONG && LA161_1<=LPAREN)||(LA161_1>=NEW && LA161_1<=NULL)||LA161_1==PLUS||LA161_1==PLUSPLUS||LA161_1==SHORT||(LA161_1>=STRINGLITERAL && LA161_1<=SUB)||(LA161_1>=SUBSUB && LA161_1<=SUPER)||LA161_1==THIS||LA161_1==TILDE||LA161_1==TRUE||LA161_1==VOID))
			{
				alt161 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 161, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(161); }
			switch (alt161)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1232:9: arrayInitializer
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1232, 9);
				PushFollow(Follow._arrayInitializer_in_variableInitializer7820);
				arrayInitializer609=arrayInitializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arrayInitializer609.Tree, arrayInitializer609, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1233:9: expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1233, 9);
				PushFollow(Follow._expression_in_variableInitializer7830);
				expression610=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression610.Tree, expression610, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variableInitializer", 100);
			LeaveRule("variableInitializer", 100);
			LeaveRule_variableInitializer();
			if (state.backtracking > 0) { Memoize(input, 100, variableInitializer_StartIndex); }

		}
		DebugLocation(1234, 4);
		} finally { DebugExitRule(GrammarFileName, "variableInitializer"); }
		return retval;

	}
	// $ANTLR end "variableInitializer"

	partial void EnterRule_arrayInitializer();
	partial void LeaveRule_arrayInitializer();
	// $ANTLR start "arrayInitializer"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1236:1: arrayInitializer : '{' ( variableInitializer ( ',' variableInitializer )* )? ( ',' )? '}' ;
	[GrammarRule("arrayInitializer")]
	private Antlr3AstNode arrayInitializer()
	{
		EnterRule_arrayInitializer();
		EnterRule("arrayInitializer", 101);
		var retval = new Antlr3AstNode("arrayInitializer");
		
		retval.Start = (IToken)input.LT(1);
		int arrayInitializer_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal611 = default(IToken);
		IToken char_literal613 = default(IToken);
		IToken char_literal615 = default(IToken);
		IToken char_literal616 = default(IToken);
		Antlr3AstNode variableInitializer612 = default(Antlr3AstNode);
		Antlr3AstNode variableInitializer614 = default(Antlr3AstNode);

		object char_literal611_tree = default(object);
		object char_literal613_tree = default(object);
		object char_literal615_tree = default(object);
		object char_literal616_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "arrayInitializer");
		DebugLocation(1236, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 101)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1237:5: ( '{' ( variableInitializer ( ',' variableInitializer )* )? ( ',' )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1237:9: '{' ( variableInitializer ( ',' variableInitializer )* )? ( ',' )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1237, 9);
			char_literal611=(IToken)Match(input,LBRACE,Follow._LBRACE_in_arrayInitializer7850); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal611_tree = (object)adaptor.Create(char_literal611, retval);
			adaptor.AddChild(root_0, char_literal611_tree);
			}
			DebugLocation(1238, 13);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1238:13: ( variableInitializer ( ',' variableInitializer )* )?
			int alt163=2;
			try { DebugEnterSubRule(163);
			try { DebugEnterDecision(163, false);
			int LA163_1 = input.LA(1);

			if ((LA163_1==BANG||LA163_1==BOOLEAN||LA163_1==BYTE||(LA163_1>=CHAR && LA163_1<=CHARLITERAL)||(LA163_1>=DOUBLE && LA163_1<=DOUBLELITERAL)||LA163_1==FALSE||(LA163_1>=FLOAT && LA163_1<=FLOATLITERAL)||LA163_1==IDENTIFIER||LA163_1==INT||LA163_1==INTLITERAL||LA163_1==LBRACE||(LA163_1>=LONG && LA163_1<=LPAREN)||(LA163_1>=NEW && LA163_1<=NULL)||LA163_1==PLUS||LA163_1==PLUSPLUS||LA163_1==SHORT||(LA163_1>=STRINGLITERAL && LA163_1<=SUB)||(LA163_1>=SUBSUB && LA163_1<=SUPER)||LA163_1==THIS||LA163_1==TILDE||LA163_1==TRUE||LA163_1==VOID))
			{
				alt163 = 1;
			}
			} finally { DebugExitDecision(163); }
			switch (alt163)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1238:14: variableInitializer ( ',' variableInitializer )*
				{
				DebugLocation(1238, 14);
				PushFollow(Follow._variableInitializer_in_arrayInitializer7866);
				variableInitializer612=variableInitializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variableInitializer612.Tree, variableInitializer612, retval);
				DebugLocation(1239, 17);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1239:17: ( ',' variableInitializer )*
				try { DebugEnterSubRule(162);
				while (true)
				{
					int alt162=2;
					try { DebugEnterDecision(162, false);
					int LA162_1 = input.LA(1);

					if ((LA162_1==COMMA))
					{
						int LA162_2 = input.LA(2);

						if ((LA162_2==BANG||LA162_2==BOOLEAN||LA162_2==BYTE||(LA162_2>=CHAR && LA162_2<=CHARLITERAL)||(LA162_2>=DOUBLE && LA162_2<=DOUBLELITERAL)||LA162_2==FALSE||(LA162_2>=FLOAT && LA162_2<=FLOATLITERAL)||LA162_2==IDENTIFIER||LA162_2==INT||LA162_2==INTLITERAL||LA162_2==LBRACE||(LA162_2>=LONG && LA162_2<=LPAREN)||(LA162_2>=NEW && LA162_2<=NULL)||LA162_2==PLUS||LA162_2==PLUSPLUS||LA162_2==SHORT||(LA162_2>=STRINGLITERAL && LA162_2<=SUB)||(LA162_2>=SUBSUB && LA162_2<=SUPER)||LA162_2==THIS||LA162_2==TILDE||LA162_2==TRUE||LA162_2==VOID))
						{
							alt162 = 1;
						}


					}


					} finally { DebugExitDecision(162); }
					switch ( alt162 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1239:18: ',' variableInitializer
						{
						DebugLocation(1239, 18);
						char_literal613=(IToken)Match(input,COMMA,Follow._COMMA_in_arrayInitializer7885); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal613_tree = (object)adaptor.Create(char_literal613, retval);
						adaptor.AddChild(root_0, char_literal613_tree);
						}
						DebugLocation(1239, 22);
						PushFollow(Follow._variableInitializer_in_arrayInitializer7887);
						variableInitializer614=variableInitializer();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, variableInitializer614.Tree, variableInitializer614, retval);

						}
						break;

					default:
						goto loop162;
					}
				}

				loop162:
					;

				} finally { DebugExitSubRule(162); }


				}
				break;

			}
			} finally { DebugExitSubRule(163); }

			DebugLocation(1242, 13);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1242:13: ( ',' )?
			int alt164=2;
			try { DebugEnterSubRule(164);
			try { DebugEnterDecision(164, false);
			int LA164_1 = input.LA(1);

			if ((LA164_1==COMMA))
			{
				alt164 = 1;
			}
			} finally { DebugExitDecision(164); }
			switch (alt164)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1242:14: ','
				{
				DebugLocation(1242, 14);
				char_literal615=(IToken)Match(input,COMMA,Follow._COMMA_in_arrayInitializer7937); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal615_tree = (object)adaptor.Create(char_literal615, retval);
				adaptor.AddChild(root_0, char_literal615_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(164); }

			DebugLocation(1243, 9);
			char_literal616=(IToken)Match(input,RBRACE,Follow._RBRACE_in_arrayInitializer7950); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal616_tree = (object)adaptor.Create(char_literal616, retval);
			adaptor.AddChild(root_0, char_literal616_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("arrayInitializer", 101);
			LeaveRule("arrayInitializer", 101);
			LeaveRule_arrayInitializer();
			if (state.backtracking > 0) { Memoize(input, 101, arrayInitializer_StartIndex); }

		}
		DebugLocation(1244, 4);
		} finally { DebugExitRule(GrammarFileName, "arrayInitializer"); }
		return retval;

	}
	// $ANTLR end "arrayInitializer"

	partial void EnterRule_createdName();
	partial void LeaveRule_createdName();
	// $ANTLR start "createdName"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1247:1: createdName : ( classOrInterfaceType | primitiveType );
	[GrammarRule("createdName")]
	private Antlr3AstNode createdName()
	{
		EnterRule_createdName();
		EnterRule("createdName", 102);
		var retval = new Antlr3AstNode("createdName");
		
		retval.Start = (IToken)input.LT(1);
		int createdName_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode classOrInterfaceType617 = default(Antlr3AstNode);
		Antlr3AstNode primitiveType618 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "createdName");
		DebugLocation(1247, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 102)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1248:5: ( classOrInterfaceType | primitiveType )
			int alt165=2;
			try { DebugEnterDecision(165, false);
			int LA165_1 = input.LA(1);

			if ((LA165_1==IDENTIFIER))
			{
				alt165 = 1;
			}
			else if ((LA165_1==BOOLEAN||LA165_1==BYTE||LA165_1==CHAR||LA165_1==DOUBLE||LA165_1==FLOAT||LA165_1==INT||LA165_1==LONG||LA165_1==SHORT))
			{
				alt165 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 165, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(165); }
			switch (alt165)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1248:9: classOrInterfaceType
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1248, 9);
				PushFollow(Follow._classOrInterfaceType_in_createdName7984);
				classOrInterfaceType617=classOrInterfaceType();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classOrInterfaceType617.Tree, classOrInterfaceType617, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1249:9: primitiveType
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1249, 9);
				PushFollow(Follow._primitiveType_in_createdName7994);
				primitiveType618=primitiveType();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primitiveType618.Tree, primitiveType618, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("createdName", 102);
			LeaveRule("createdName", 102);
			LeaveRule_createdName();
			if (state.backtracking > 0) { Memoize(input, 102, createdName_StartIndex); }

		}
		DebugLocation(1250, 4);
		} finally { DebugExitRule(GrammarFileName, "createdName"); }
		return retval;

	}
	// $ANTLR end "createdName"

	partial void EnterRule_innerCreator();
	partial void LeaveRule_innerCreator();
	// $ANTLR start "innerCreator"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1252:1: innerCreator : '.' 'new' ( nonWildcardTypeArguments )? IDENTIFIER ( typeArguments )? classCreatorRest ;
	[GrammarRule("innerCreator")]
	private Antlr3AstNode innerCreator()
	{
		EnterRule_innerCreator();
		EnterRule("innerCreator", 103);
		var retval = new Antlr3AstNode("innerCreator");
		
		retval.Start = (IToken)input.LT(1);
		int innerCreator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal619 = default(IToken);
		IToken string_literal620 = default(IToken);
		IToken IDENTIFIER622 = default(IToken);
		Antlr3AstNode nonWildcardTypeArguments621 = default(Antlr3AstNode);
		Antlr3AstNode typeArguments623 = default(Antlr3AstNode);
		Antlr3AstNode classCreatorRest624 = default(Antlr3AstNode);

		object char_literal619_tree = default(object);
		object string_literal620_tree = default(object);
		object IDENTIFIER622_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "innerCreator");
		DebugLocation(1252, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 103)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1253:5: ( '.' 'new' ( nonWildcardTypeArguments )? IDENTIFIER ( typeArguments )? classCreatorRest )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1253:9: '.' 'new' ( nonWildcardTypeArguments )? IDENTIFIER ( typeArguments )? classCreatorRest
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1253, 9);
			char_literal619=(IToken)Match(input,DOT,Follow._DOT_in_innerCreator8015); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal619_tree = (object)adaptor.Create(char_literal619, retval);
			adaptor.AddChild(root_0, char_literal619_tree);
			}
			DebugLocation(1253, 13);
			string_literal620=(IToken)Match(input,NEW,Follow._NEW_in_innerCreator8017); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal620_tree = (object)adaptor.Create(string_literal620, retval);
			adaptor.AddChild(root_0, string_literal620_tree);
			}
			DebugLocation(1254, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1254:9: ( nonWildcardTypeArguments )?
			int alt166=2;
			try { DebugEnterSubRule(166);
			try { DebugEnterDecision(166, false);
			int LA166_1 = input.LA(1);

			if ((LA166_1==LT))
			{
				alt166 = 1;
			}
			} finally { DebugExitDecision(166); }
			switch (alt166)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1254:10: nonWildcardTypeArguments
				{
				DebugLocation(1254, 10);
				PushFollow(Follow._nonWildcardTypeArguments_in_innerCreator8028);
				nonWildcardTypeArguments621=nonWildcardTypeArguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, nonWildcardTypeArguments621.Tree, nonWildcardTypeArguments621, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(166); }

			DebugLocation(1256, 9);
			IDENTIFIER622=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_innerCreator8049); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER622_tree = (object)adaptor.Create(IDENTIFIER622, retval);
			adaptor.AddChild(root_0, IDENTIFIER622_tree);
			}
			DebugLocation(1257, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1257:9: ( typeArguments )?
			int alt167=2;
			try { DebugEnterSubRule(167);
			try { DebugEnterDecision(167, false);
			int LA167_1 = input.LA(1);

			if ((LA167_1==LT))
			{
				alt167 = 1;
			}
			} finally { DebugExitDecision(167); }
			switch (alt167)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1257:10: typeArguments
				{
				DebugLocation(1257, 10);
				PushFollow(Follow._typeArguments_in_innerCreator8060);
				typeArguments623=typeArguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeArguments623.Tree, typeArguments623, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(167); }

			DebugLocation(1259, 9);
			PushFollow(Follow._classCreatorRest_in_innerCreator8081);
			classCreatorRest624=classCreatorRest();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, classCreatorRest624.Tree, classCreatorRest624, retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("innerCreator", 103);
			LeaveRule("innerCreator", 103);
			LeaveRule_innerCreator();
			if (state.backtracking > 0) { Memoize(input, 103, innerCreator_StartIndex); }

		}
		DebugLocation(1260, 4);
		} finally { DebugExitRule(GrammarFileName, "innerCreator"); }
		return retval;

	}
	// $ANTLR end "innerCreator"

	partial void EnterRule_classCreatorRest();
	partial void LeaveRule_classCreatorRest();
	// $ANTLR start "classCreatorRest"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1263:1: classCreatorRest : arguments ( classBody )? ;
	[GrammarRule("classCreatorRest")]
	private Antlr3AstNode classCreatorRest()
	{
		EnterRule_classCreatorRest();
		EnterRule("classCreatorRest", 104);
		var retval = new Antlr3AstNode("classCreatorRest");
		
		retval.Start = (IToken)input.LT(1);
		int classCreatorRest_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode arguments625 = default(Antlr3AstNode);
		Antlr3AstNode classBody626 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "classCreatorRest");
		DebugLocation(1263, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 104)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1264:5: ( arguments ( classBody )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1264:9: arguments ( classBody )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1264, 9);
			PushFollow(Follow._arguments_in_classCreatorRest8102);
			arguments625=arguments();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, arguments625.Tree, arguments625, retval);
			DebugLocation(1265, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1265:9: ( classBody )?
			int alt168=2;
			try { DebugEnterSubRule(168);
			try { DebugEnterDecision(168, false);
			int LA168_1 = input.LA(1);

			if ((LA168_1==LBRACE))
			{
				alt168 = 1;
			}
			} finally { DebugExitDecision(168); }
			switch (alt168)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1265:10: classBody
				{
				DebugLocation(1265, 10);
				PushFollow(Follow._classBody_in_classCreatorRest8113);
				classBody626=classBody();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classBody626.Tree, classBody626, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(168); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("classCreatorRest", 104);
			LeaveRule("classCreatorRest", 104);
			LeaveRule_classCreatorRest();
			if (state.backtracking > 0) { Memoize(input, 104, classCreatorRest_StartIndex); }

		}
		DebugLocation(1267, 4);
		} finally { DebugExitRule(GrammarFileName, "classCreatorRest"); }
		return retval;

	}
	// $ANTLR end "classCreatorRest"

	partial void EnterRule_nonWildcardTypeArguments();
	partial void LeaveRule_nonWildcardTypeArguments();
	// $ANTLR start "nonWildcardTypeArguments"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1270:1: nonWildcardTypeArguments : '<' typeList '>' ;
	[GrammarRule("nonWildcardTypeArguments")]
	private Antlr3AstNode nonWildcardTypeArguments()
	{
		EnterRule_nonWildcardTypeArguments();
		EnterRule("nonWildcardTypeArguments", 105);
		var retval = new Antlr3AstNode("nonWildcardTypeArguments");
		
		retval.Start = (IToken)input.LT(1);
		int nonWildcardTypeArguments_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal627 = default(IToken);
		IToken char_literal629 = default(IToken);
		Antlr3AstNode typeList628 = default(Antlr3AstNode);

		object char_literal627_tree = default(object);
		object char_literal629_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "nonWildcardTypeArguments");
		DebugLocation(1270, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 105)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1271:5: ( '<' typeList '>' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1271:9: '<' typeList '>'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1271, 9);
			char_literal627=(IToken)Match(input,LT,Follow._LT_in_nonWildcardTypeArguments8145); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal627_tree = (object)adaptor.Create(char_literal627, retval);
			adaptor.AddChild(root_0, char_literal627_tree);
			}
			DebugLocation(1271, 13);
			PushFollow(Follow._typeList_in_nonWildcardTypeArguments8147);
			typeList628=typeList();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, typeList628.Tree, typeList628, retval);
			DebugLocation(1272, 9);
			char_literal629=(IToken)Match(input,GT,Follow._GT_in_nonWildcardTypeArguments8157); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal629_tree = (object)adaptor.Create(char_literal629, retval);
			adaptor.AddChild(root_0, char_literal629_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("nonWildcardTypeArguments", 105);
			LeaveRule("nonWildcardTypeArguments", 105);
			LeaveRule_nonWildcardTypeArguments();
			if (state.backtracking > 0) { Memoize(input, 105, nonWildcardTypeArguments_StartIndex); }

		}
		DebugLocation(1273, 4);
		} finally { DebugExitRule(GrammarFileName, "nonWildcardTypeArguments"); }
		return retval;

	}
	// $ANTLR end "nonWildcardTypeArguments"

	partial void EnterRule_arguments();
	partial void LeaveRule_arguments();
	// $ANTLR start "arguments"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1275:1: arguments : '(' ( expressionList )? ')' ;
	[GrammarRule("arguments")]
	private Antlr3AstNode arguments()
	{
		EnterRule_arguments();
		EnterRule("arguments", 106);
		var retval = new Antlr3AstNode("arguments");
		
		retval.Start = (IToken)input.LT(1);
		int arguments_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal630 = default(IToken);
		IToken char_literal632 = default(IToken);
		Antlr3AstNode expressionList631 = default(Antlr3AstNode);

		object char_literal630_tree = default(object);
		object char_literal632_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "arguments");
		DebugLocation(1275, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 106)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1276:5: ( '(' ( expressionList )? ')' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1276:9: '(' ( expressionList )? ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1276, 9);
			char_literal630=(IToken)Match(input,LPAREN,Follow._LPAREN_in_arguments8177); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal630_tree = (object)adaptor.Create(char_literal630, retval);
			adaptor.AddChild(root_0, char_literal630_tree);
			}
			DebugLocation(1276, 13);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1276:13: ( expressionList )?
			int alt169=2;
			try { DebugEnterSubRule(169);
			try { DebugEnterDecision(169, false);
			int LA169_1 = input.LA(1);

			if ((LA169_1==BANG||LA169_1==BOOLEAN||LA169_1==BYTE||(LA169_1>=CHAR && LA169_1<=CHARLITERAL)||(LA169_1>=DOUBLE && LA169_1<=DOUBLELITERAL)||LA169_1==FALSE||(LA169_1>=FLOAT && LA169_1<=FLOATLITERAL)||LA169_1==IDENTIFIER||LA169_1==INT||LA169_1==INTLITERAL||(LA169_1>=LONG && LA169_1<=LPAREN)||(LA169_1>=NEW && LA169_1<=NULL)||LA169_1==PLUS||LA169_1==PLUSPLUS||LA169_1==SHORT||(LA169_1>=STRINGLITERAL && LA169_1<=SUB)||(LA169_1>=SUBSUB && LA169_1<=SUPER)||LA169_1==THIS||LA169_1==TILDE||LA169_1==TRUE||LA169_1==VOID))
			{
				alt169 = 1;
			}
			} finally { DebugExitDecision(169); }
			switch (alt169)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1276:14: expressionList
				{
				DebugLocation(1276, 14);
				PushFollow(Follow._expressionList_in_arguments8180);
				expressionList631=expressionList();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expressionList631.Tree, expressionList631, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(169); }

			DebugLocation(1277, 12);
			char_literal632=(IToken)Match(input,RPAREN,Follow._RPAREN_in_arguments8193); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal632_tree = (object)adaptor.Create(char_literal632, retval);
			adaptor.AddChild(root_0, char_literal632_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("arguments", 106);
			LeaveRule("arguments", 106);
			LeaveRule_arguments();
			if (state.backtracking > 0) { Memoize(input, 106, arguments_StartIndex); }

		}
		DebugLocation(1278, 4);
		} finally { DebugExitRule(GrammarFileName, "arguments"); }
		return retval;

	}
	// $ANTLR end "arguments"

	partial void EnterRule_intLiteral();
	partial void LeaveRule_intLiteral();
	// $ANTLR start "intLiteral"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1280:1: intLiteral : INTLITERAL ;
	[GrammarRule("intLiteral")]
	private Antlr3AstNode intLiteral()
	{
		EnterRule_intLiteral();
		EnterRule("intLiteral", 107);
		var retval = new Antlr3AstNode("intLiteral");
		
		retval.Start = (IToken)input.LT(1);
		int intLiteral_StartIndex = input.Index;

		object root_0 = default(object);

		IToken INTLITERAL633 = default(IToken);

		object INTLITERAL633_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "intLiteral");
		DebugLocation(1280, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 107)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1281:5: ( INTLITERAL )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1281:7: INTLITERAL
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1281, 7);
			INTLITERAL633=(IToken)Match(input,INTLITERAL,Follow._INTLITERAL_in_intLiteral8210); if (state.failed) return retval;
			if (state.backtracking == 0) {
			INTLITERAL633_tree = (object)adaptor.Create(INTLITERAL633, retval);
			adaptor.AddChild(root_0, INTLITERAL633_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("intLiteral", 107);
			LeaveRule("intLiteral", 107);
			LeaveRule_intLiteral();
			if (state.backtracking > 0) { Memoize(input, 107, intLiteral_StartIndex); }

		}
		DebugLocation(1282, 4);
		} finally { DebugExitRule(GrammarFileName, "intLiteral"); }
		return retval;

	}
	// $ANTLR end "intLiteral"

	partial void EnterRule_longLiteral();
	partial void LeaveRule_longLiteral();
	// $ANTLR start "longLiteral"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1284:1: longLiteral : LONGLITERAL ;
	[GrammarRule("longLiteral")]
	private Antlr3AstNode longLiteral()
	{
		EnterRule_longLiteral();
		EnterRule("longLiteral", 108);
		var retval = new Antlr3AstNode("longLiteral");
		
		retval.Start = (IToken)input.LT(1);
		int longLiteral_StartIndex = input.Index;

		object root_0 = default(object);

		IToken LONGLITERAL634 = default(IToken);

		object LONGLITERAL634_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "longLiteral");
		DebugLocation(1284, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 108)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1285:5: ( LONGLITERAL )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1285:7: LONGLITERAL
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1285, 7);
			LONGLITERAL634=(IToken)Match(input,LONGLITERAL,Follow._LONGLITERAL_in_longLiteral8227); if (state.failed) return retval;
			if (state.backtracking == 0) {
			LONGLITERAL634_tree = (object)adaptor.Create(LONGLITERAL634, retval);
			adaptor.AddChild(root_0, LONGLITERAL634_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("longLiteral", 108);
			LeaveRule("longLiteral", 108);
			LeaveRule_longLiteral();
			if (state.backtracking > 0) { Memoize(input, 108, longLiteral_StartIndex); }

		}
		DebugLocation(1286, 4);
		} finally { DebugExitRule(GrammarFileName, "longLiteral"); }
		return retval;

	}
	// $ANTLR end "longLiteral"

	partial void EnterRule_floatLiteral();
	partial void LeaveRule_floatLiteral();
	// $ANTLR start "floatLiteral"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1288:1: floatLiteral : FLOATLITERAL ;
	[GrammarRule("floatLiteral")]
	private Antlr3AstNode floatLiteral()
	{
		EnterRule_floatLiteral();
		EnterRule("floatLiteral", 109);
		var retval = new Antlr3AstNode("floatLiteral");
		
		retval.Start = (IToken)input.LT(1);
		int floatLiteral_StartIndex = input.Index;

		object root_0 = default(object);

		IToken FLOATLITERAL635 = default(IToken);

		object FLOATLITERAL635_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "floatLiteral");
		DebugLocation(1288, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 109)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1289:5: ( FLOATLITERAL )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1289:7: FLOATLITERAL
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1289, 7);
			FLOATLITERAL635=(IToken)Match(input,FLOATLITERAL,Follow._FLOATLITERAL_in_floatLiteral8244); if (state.failed) return retval;
			if (state.backtracking == 0) {
			FLOATLITERAL635_tree = (object)adaptor.Create(FLOATLITERAL635, retval);
			adaptor.AddChild(root_0, FLOATLITERAL635_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("floatLiteral", 109);
			LeaveRule("floatLiteral", 109);
			LeaveRule_floatLiteral();
			if (state.backtracking > 0) { Memoize(input, 109, floatLiteral_StartIndex); }

		}
		DebugLocation(1290, 4);
		} finally { DebugExitRule(GrammarFileName, "floatLiteral"); }
		return retval;

	}
	// $ANTLR end "floatLiteral"

	partial void EnterRule_doubleLiteral();
	partial void LeaveRule_doubleLiteral();
	// $ANTLR start "doubleLiteral"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1292:1: doubleLiteral : DOUBLELITERAL ;
	[GrammarRule("doubleLiteral")]
	private Antlr3AstNode doubleLiteral()
	{
		EnterRule_doubleLiteral();
		EnterRule("doubleLiteral", 110);
		var retval = new Antlr3AstNode("doubleLiteral");
		
		retval.Start = (IToken)input.LT(1);
		int doubleLiteral_StartIndex = input.Index;

		object root_0 = default(object);

		IToken DOUBLELITERAL636 = default(IToken);

		object DOUBLELITERAL636_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "doubleLiteral");
		DebugLocation(1292, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 110)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1293:5: ( DOUBLELITERAL )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1293:7: DOUBLELITERAL
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1293, 7);
			DOUBLELITERAL636=(IToken)Match(input,DOUBLELITERAL,Follow._DOUBLELITERAL_in_doubleLiteral8261); if (state.failed) return retval;
			if (state.backtracking == 0) {
			DOUBLELITERAL636_tree = (object)adaptor.Create(DOUBLELITERAL636, retval);
			adaptor.AddChild(root_0, DOUBLELITERAL636_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("doubleLiteral", 110);
			LeaveRule("doubleLiteral", 110);
			LeaveRule_doubleLiteral();
			if (state.backtracking > 0) { Memoize(input, 110, doubleLiteral_StartIndex); }

		}
		DebugLocation(1294, 4);
		} finally { DebugExitRule(GrammarFileName, "doubleLiteral"); }
		return retval;

	}
	// $ANTLR end "doubleLiteral"

	partial void EnterRule_charLiteral();
	partial void LeaveRule_charLiteral();
	// $ANTLR start "charLiteral"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1296:1: charLiteral : CHARLITERAL ;
	[GrammarRule("charLiteral")]
	private Antlr3AstNode charLiteral()
	{
		EnterRule_charLiteral();
		EnterRule("charLiteral", 111);
		var retval = new Antlr3AstNode("charLiteral");
		
		retval.Start = (IToken)input.LT(1);
		int charLiteral_StartIndex = input.Index;

		object root_0 = default(object);

		IToken CHARLITERAL637 = default(IToken);

		object CHARLITERAL637_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "charLiteral");
		DebugLocation(1296, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 111)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1297:5: ( CHARLITERAL )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1297:7: CHARLITERAL
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1297, 7);
			CHARLITERAL637=(IToken)Match(input,CHARLITERAL,Follow._CHARLITERAL_in_charLiteral8278); if (state.failed) return retval;
			if (state.backtracking == 0) {
			CHARLITERAL637_tree = (object)adaptor.Create(CHARLITERAL637, retval);
			adaptor.AddChild(root_0, CHARLITERAL637_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("charLiteral", 111);
			LeaveRule("charLiteral", 111);
			LeaveRule_charLiteral();
			if (state.backtracking > 0) { Memoize(input, 111, charLiteral_StartIndex); }

		}
		DebugLocation(1298, 4);
		} finally { DebugExitRule(GrammarFileName, "charLiteral"); }
		return retval;

	}
	// $ANTLR end "charLiteral"

	partial void EnterRule_stringLiteral();
	partial void LeaveRule_stringLiteral();
	// $ANTLR start "stringLiteral"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1300:1: stringLiteral : STRINGLITERAL ;
	[GrammarRule("stringLiteral")]
	private Antlr3AstNode stringLiteral()
	{
		EnterRule_stringLiteral();
		EnterRule("stringLiteral", 112);
		var retval = new Antlr3AstNode("stringLiteral");
		
		retval.Start = (IToken)input.LT(1);
		int stringLiteral_StartIndex = input.Index;

		object root_0 = default(object);

		IToken STRINGLITERAL638 = default(IToken);

		object STRINGLITERAL638_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "stringLiteral");
		DebugLocation(1300, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 112)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1301:5: ( STRINGLITERAL )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1301:7: STRINGLITERAL
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1301, 7);
			STRINGLITERAL638=(IToken)Match(input,STRINGLITERAL,Follow._STRINGLITERAL_in_stringLiteral8295); if (state.failed) return retval;
			if (state.backtracking == 0) {
			STRINGLITERAL638_tree = (object)adaptor.Create(STRINGLITERAL638, retval);
			adaptor.AddChild(root_0, STRINGLITERAL638_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("stringLiteral", 112);
			LeaveRule("stringLiteral", 112);
			LeaveRule_stringLiteral();
			if (state.backtracking > 0) { Memoize(input, 112, stringLiteral_StartIndex); }

		}
		DebugLocation(1302, 4);
		} finally { DebugExitRule(GrammarFileName, "stringLiteral"); }
		return retval;

	}
	// $ANTLR end "stringLiteral"

	partial void EnterRule_trueLiteral();
	partial void LeaveRule_trueLiteral();
	// $ANTLR start "trueLiteral"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1304:1: trueLiteral : TRUE ;
	[GrammarRule("trueLiteral")]
	private Antlr3AstNode trueLiteral()
	{
		EnterRule_trueLiteral();
		EnterRule("trueLiteral", 113);
		var retval = new Antlr3AstNode("trueLiteral");
		
		retval.Start = (IToken)input.LT(1);
		int trueLiteral_StartIndex = input.Index;

		object root_0 = default(object);

		IToken TRUE639 = default(IToken);

		object TRUE639_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "trueLiteral");
		DebugLocation(1304, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 113)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1305:5: ( TRUE )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1305:7: TRUE
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1305, 7);
			TRUE639=(IToken)Match(input,TRUE,Follow._TRUE_in_trueLiteral8312); if (state.failed) return retval;
			if (state.backtracking == 0) {
			TRUE639_tree = (object)adaptor.Create(TRUE639, retval);
			adaptor.AddChild(root_0, TRUE639_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("trueLiteral", 113);
			LeaveRule("trueLiteral", 113);
			LeaveRule_trueLiteral();
			if (state.backtracking > 0) { Memoize(input, 113, trueLiteral_StartIndex); }

		}
		DebugLocation(1306, 4);
		} finally { DebugExitRule(GrammarFileName, "trueLiteral"); }
		return retval;

	}
	// $ANTLR end "trueLiteral"

	partial void EnterRule_falseLiteral();
	partial void LeaveRule_falseLiteral();
	// $ANTLR start "falseLiteral"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1308:1: falseLiteral : FALSE ;
	[GrammarRule("falseLiteral")]
	private Antlr3AstNode falseLiteral()
	{
		EnterRule_falseLiteral();
		EnterRule("falseLiteral", 114);
		var retval = new Antlr3AstNode("falseLiteral");
		
		retval.Start = (IToken)input.LT(1);
		int falseLiteral_StartIndex = input.Index;

		object root_0 = default(object);

		IToken FALSE640 = default(IToken);

		object FALSE640_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "falseLiteral");
		DebugLocation(1308, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 114)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1309:5: ( FALSE )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1309:7: FALSE
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1309, 7);
			FALSE640=(IToken)Match(input,FALSE,Follow._FALSE_in_falseLiteral8329); if (state.failed) return retval;
			if (state.backtracking == 0) {
			FALSE640_tree = (object)adaptor.Create(FALSE640, retval);
			adaptor.AddChild(root_0, FALSE640_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("falseLiteral", 114);
			LeaveRule("falseLiteral", 114);
			LeaveRule_falseLiteral();
			if (state.backtracking > 0) { Memoize(input, 114, falseLiteral_StartIndex); }

		}
		DebugLocation(1310, 4);
		} finally { DebugExitRule(GrammarFileName, "falseLiteral"); }
		return retval;

	}
	// $ANTLR end "falseLiteral"

	partial void EnterRule_nullLiteral();
	partial void LeaveRule_nullLiteral();
	// $ANTLR start "nullLiteral"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1312:1: nullLiteral : NULL ;
	[GrammarRule("nullLiteral")]
	private Antlr3AstNode nullLiteral()
	{
		EnterRule_nullLiteral();
		EnterRule("nullLiteral", 115);
		var retval = new Antlr3AstNode("nullLiteral");
		
		retval.Start = (IToken)input.LT(1);
		int nullLiteral_StartIndex = input.Index;

		object root_0 = default(object);

		IToken NULL641 = default(IToken);

		object NULL641_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "nullLiteral");
		DebugLocation(1312, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 115)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1313:5: ( NULL )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1313:7: NULL
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1313, 7);
			NULL641=(IToken)Match(input,NULL,Follow._NULL_in_nullLiteral8346); if (state.failed) return retval;
			if (state.backtracking == 0) {
			NULL641_tree = (object)adaptor.Create(NULL641, retval);
			adaptor.AddChild(root_0, NULL641_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("nullLiteral", 115);
			LeaveRule("nullLiteral", 115);
			LeaveRule_nullLiteral();
			if (state.backtracking > 0) { Memoize(input, 115, nullLiteral_StartIndex); }

		}
		DebugLocation(1314, 4);
		} finally { DebugExitRule(GrammarFileName, "nullLiteral"); }
		return retval;

	}
	// $ANTLR end "nullLiteral"

	partial void EnterRule_literal();
	partial void LeaveRule_literal();
	// $ANTLR start "literal"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1316:1: literal : ( intLiteral | longLiteral | floatLiteral | doubleLiteral | charLiteral | stringLiteral | trueLiteral | falseLiteral | nullLiteral );
	[GrammarRule("literal")]
	private Antlr3AstNode literal()
	{
		EnterRule_literal();
		EnterRule("literal", 116);
		var retval = new Antlr3AstNode("literal");
		
		retval.Start = (IToken)input.LT(1);
		int literal_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3AstNode intLiteral642 = default(Antlr3AstNode);
		Antlr3AstNode longLiteral643 = default(Antlr3AstNode);
		Antlr3AstNode floatLiteral644 = default(Antlr3AstNode);
		Antlr3AstNode doubleLiteral645 = default(Antlr3AstNode);
		Antlr3AstNode charLiteral646 = default(Antlr3AstNode);
		Antlr3AstNode stringLiteral647 = default(Antlr3AstNode);
		Antlr3AstNode trueLiteral648 = default(Antlr3AstNode);
		Antlr3AstNode falseLiteral649 = default(Antlr3AstNode);
		Antlr3AstNode nullLiteral650 = default(Antlr3AstNode);

		try { DebugEnterRule(GrammarFileName, "literal");
		DebugLocation(1316, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 116)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1317:5: ( intLiteral | longLiteral | floatLiteral | doubleLiteral | charLiteral | stringLiteral | trueLiteral | falseLiteral | nullLiteral )
			int alt170=9;
			try { DebugEnterDecision(170, false);
			switch (input.LA(1))
			{
			case INTLITERAL:
				{
				alt170 = 1;
				}
				break;
			case LONGLITERAL:
				{
				alt170 = 2;
				}
				break;
			case FLOATLITERAL:
				{
				alt170 = 3;
				}
				break;
			case DOUBLELITERAL:
				{
				alt170 = 4;
				}
				break;
			case CHARLITERAL:
				{
				alt170 = 5;
				}
				break;
			case STRINGLITERAL:
				{
				alt170 = 6;
				}
				break;
			case TRUE:
				{
				alt170 = 7;
				}
				break;
			case FALSE:
				{
				alt170 = 8;
				}
				break;
			case NULL:
				{
				alt170 = 9;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 170, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(170); }
			switch (alt170)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1317:9: intLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1317, 9);
				PushFollow(Follow._intLiteral_in_literal8366);
				intLiteral642=intLiteral();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, intLiteral642.Tree, intLiteral642, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1318:9: longLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1318, 9);
				PushFollow(Follow._longLiteral_in_literal8376);
				longLiteral643=longLiteral();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, longLiteral643.Tree, longLiteral643, retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1319:9: floatLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1319, 9);
				PushFollow(Follow._floatLiteral_in_literal8386);
				floatLiteral644=floatLiteral();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, floatLiteral644.Tree, floatLiteral644, retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1320:9: doubleLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1320, 9);
				PushFollow(Follow._doubleLiteral_in_literal8396);
				doubleLiteral645=doubleLiteral();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, doubleLiteral645.Tree, doubleLiteral645, retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1321:9: charLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1321, 9);
				PushFollow(Follow._charLiteral_in_literal8406);
				charLiteral646=charLiteral();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, charLiteral646.Tree, charLiteral646, retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1322:9: stringLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1322, 9);
				PushFollow(Follow._stringLiteral_in_literal8416);
				stringLiteral647=stringLiteral();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, stringLiteral647.Tree, stringLiteral647, retval);

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1323:9: trueLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1323, 9);
				PushFollow(Follow._trueLiteral_in_literal8426);
				trueLiteral648=trueLiteral();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, trueLiteral648.Tree, trueLiteral648, retval);

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1324:9: falseLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1324, 9);
				PushFollow(Follow._falseLiteral_in_literal8436);
				falseLiteral649=falseLiteral();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, falseLiteral649.Tree, falseLiteral649, retval);

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1325:9: nullLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(1325, 9);
				PushFollow(Follow._nullLiteral_in_literal8446);
				nullLiteral650=nullLiteral();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, nullLiteral650.Tree, nullLiteral650, retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("literal", 116);
			LeaveRule("literal", 116);
			LeaveRule_literal();
			if (state.backtracking > 0) { Memoize(input, 116, literal_StartIndex); }

		}
		DebugLocation(1326, 4);
		} finally { DebugExitRule(GrammarFileName, "literal"); }
		return retval;

	}
	// $ANTLR end "literal"

	partial void EnterRule_classHeader();
	partial void LeaveRule_classHeader();
	// $ANTLR start "classHeader"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1332:1: classHeader : modifiers 'class' IDENTIFIER ;
	[GrammarRule("classHeader")]
	private Antlr3AstNode classHeader()
	{
		EnterRule_classHeader();
		EnterRule("classHeader", 117);
		var retval = new Antlr3AstNode("classHeader");
		
		retval.Start = (IToken)input.LT(1);
		int classHeader_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal652 = default(IToken);
		IToken IDENTIFIER653 = default(IToken);
		Antlr3AstNode modifiers651 = default(Antlr3AstNode);

		object string_literal652_tree = default(object);
		object IDENTIFIER653_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "classHeader");
		DebugLocation(1332, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 117)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1333:5: ( modifiers 'class' IDENTIFIER )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1333:9: modifiers 'class' IDENTIFIER
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1333, 9);
			PushFollow(Follow._modifiers_in_classHeader8470);
			modifiers651=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers651.Tree, modifiers651, retval);
			DebugLocation(1333, 19);
			string_literal652=(IToken)Match(input,CLASS,Follow._CLASS_in_classHeader8472); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal652_tree = (object)adaptor.Create(string_literal652, retval);
			adaptor.AddChild(root_0, string_literal652_tree);
			}
			DebugLocation(1333, 27);
			IDENTIFIER653=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_classHeader8474); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER653_tree = (object)adaptor.Create(IDENTIFIER653, retval);
			adaptor.AddChild(root_0, IDENTIFIER653_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("classHeader", 117);
			LeaveRule("classHeader", 117);
			LeaveRule_classHeader();
			if (state.backtracking > 0) { Memoize(input, 117, classHeader_StartIndex); }

		}
		DebugLocation(1334, 4);
		} finally { DebugExitRule(GrammarFileName, "classHeader"); }
		return retval;

	}
	// $ANTLR end "classHeader"

	partial void EnterRule_enumHeader();
	partial void LeaveRule_enumHeader();
	// $ANTLR start "enumHeader"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1336:1: enumHeader : modifiers ( 'enum' | IDENTIFIER ) IDENTIFIER ;
	[GrammarRule("enumHeader")]
	private Antlr3AstNode enumHeader()
	{
		EnterRule_enumHeader();
		EnterRule("enumHeader", 118);
		var retval = new Antlr3AstNode("enumHeader");
		
		retval.Start = (IToken)input.LT(1);
		int enumHeader_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set655 = default(IToken);
		IToken IDENTIFIER656 = default(IToken);
		Antlr3AstNode modifiers654 = default(Antlr3AstNode);

		object set655_tree = default(object);
		object IDENTIFIER656_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enumHeader");
		DebugLocation(1336, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 118)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1337:5: ( modifiers ( 'enum' | IDENTIFIER ) IDENTIFIER )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1337:9: modifiers ( 'enum' | IDENTIFIER ) IDENTIFIER
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1337, 9);
			PushFollow(Follow._modifiers_in_enumHeader8494);
			modifiers654=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers654.Tree, modifiers654, retval);
			DebugLocation(1337, 19);

			set655=(IToken)input.LT(1);
			if (input.LA(1)==ENUM||input.LA(1)==IDENTIFIER)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set655, retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}

			DebugLocation(1337, 39);
			IDENTIFIER656=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_enumHeader8502); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER656_tree = (object)adaptor.Create(IDENTIFIER656, retval);
			adaptor.AddChild(root_0, IDENTIFIER656_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enumHeader", 118);
			LeaveRule("enumHeader", 118);
			LeaveRule_enumHeader();
			if (state.backtracking > 0) { Memoize(input, 118, enumHeader_StartIndex); }

		}
		DebugLocation(1338, 4);
		} finally { DebugExitRule(GrammarFileName, "enumHeader"); }
		return retval;

	}
	// $ANTLR end "enumHeader"

	partial void EnterRule_interfaceHeader();
	partial void LeaveRule_interfaceHeader();
	// $ANTLR start "interfaceHeader"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1340:1: interfaceHeader : modifiers 'interface' IDENTIFIER ;
	[GrammarRule("interfaceHeader")]
	private Antlr3AstNode interfaceHeader()
	{
		EnterRule_interfaceHeader();
		EnterRule("interfaceHeader", 119);
		var retval = new Antlr3AstNode("interfaceHeader");
		
		retval.Start = (IToken)input.LT(1);
		int interfaceHeader_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal658 = default(IToken);
		IToken IDENTIFIER659 = default(IToken);
		Antlr3AstNode modifiers657 = default(Antlr3AstNode);

		object string_literal658_tree = default(object);
		object IDENTIFIER659_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interfaceHeader");
		DebugLocation(1340, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 119)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1341:5: ( modifiers 'interface' IDENTIFIER )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1341:9: modifiers 'interface' IDENTIFIER
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1341, 9);
			PushFollow(Follow._modifiers_in_interfaceHeader8522);
			modifiers657=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers657.Tree, modifiers657, retval);
			DebugLocation(1341, 19);
			string_literal658=(IToken)Match(input,INTERFACE,Follow._INTERFACE_in_interfaceHeader8524); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal658_tree = (object)adaptor.Create(string_literal658, retval);
			adaptor.AddChild(root_0, string_literal658_tree);
			}
			DebugLocation(1341, 31);
			IDENTIFIER659=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_interfaceHeader8526); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER659_tree = (object)adaptor.Create(IDENTIFIER659, retval);
			adaptor.AddChild(root_0, IDENTIFIER659_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interfaceHeader", 119);
			LeaveRule("interfaceHeader", 119);
			LeaveRule_interfaceHeader();
			if (state.backtracking > 0) { Memoize(input, 119, interfaceHeader_StartIndex); }

		}
		DebugLocation(1342, 4);
		} finally { DebugExitRule(GrammarFileName, "interfaceHeader"); }
		return retval;

	}
	// $ANTLR end "interfaceHeader"

	partial void EnterRule_annotationHeader();
	partial void LeaveRule_annotationHeader();
	// $ANTLR start "annotationHeader"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1344:1: annotationHeader : modifiers '@' 'interface' IDENTIFIER ;
	[GrammarRule("annotationHeader")]
	private Antlr3AstNode annotationHeader()
	{
		EnterRule_annotationHeader();
		EnterRule("annotationHeader", 120);
		var retval = new Antlr3AstNode("annotationHeader");
		
		retval.Start = (IToken)input.LT(1);
		int annotationHeader_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal661 = default(IToken);
		IToken string_literal662 = default(IToken);
		IToken IDENTIFIER663 = default(IToken);
		Antlr3AstNode modifiers660 = default(Antlr3AstNode);

		object char_literal661_tree = default(object);
		object string_literal662_tree = default(object);
		object IDENTIFIER663_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "annotationHeader");
		DebugLocation(1344, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 120)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1345:5: ( modifiers '@' 'interface' IDENTIFIER )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1345:9: modifiers '@' 'interface' IDENTIFIER
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1345, 9);
			PushFollow(Follow._modifiers_in_annotationHeader8546);
			modifiers660=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers660.Tree, modifiers660, retval);
			DebugLocation(1345, 19);
			char_literal661=(IToken)Match(input,MONKEYS_AT,Follow._MONKEYS_AT_in_annotationHeader8548); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal661_tree = (object)adaptor.Create(char_literal661, retval);
			adaptor.AddChild(root_0, char_literal661_tree);
			}
			DebugLocation(1345, 23);
			string_literal662=(IToken)Match(input,INTERFACE,Follow._INTERFACE_in_annotationHeader8550); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal662_tree = (object)adaptor.Create(string_literal662, retval);
			adaptor.AddChild(root_0, string_literal662_tree);
			}
			DebugLocation(1345, 35);
			IDENTIFIER663=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_annotationHeader8552); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER663_tree = (object)adaptor.Create(IDENTIFIER663, retval);
			adaptor.AddChild(root_0, IDENTIFIER663_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("annotationHeader", 120);
			LeaveRule("annotationHeader", 120);
			LeaveRule_annotationHeader();
			if (state.backtracking > 0) { Memoize(input, 120, annotationHeader_StartIndex); }

		}
		DebugLocation(1346, 4);
		} finally { DebugExitRule(GrammarFileName, "annotationHeader"); }
		return retval;

	}
	// $ANTLR end "annotationHeader"

	partial void EnterRule_typeHeader();
	partial void LeaveRule_typeHeader();
	// $ANTLR start "typeHeader"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1348:1: typeHeader : modifiers ( 'class' | 'enum' | ( ( '@' )? 'interface' ) ) IDENTIFIER ;
	[GrammarRule("typeHeader")]
	private Antlr3AstNode typeHeader()
	{
		EnterRule_typeHeader();
		EnterRule("typeHeader", 121);
		var retval = new Antlr3AstNode("typeHeader");
		
		retval.Start = (IToken)input.LT(1);
		int typeHeader_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal665 = default(IToken);
		IToken string_literal666 = default(IToken);
		IToken char_literal667 = default(IToken);
		IToken string_literal668 = default(IToken);
		IToken IDENTIFIER669 = default(IToken);
		Antlr3AstNode modifiers664 = default(Antlr3AstNode);

		object string_literal665_tree = default(object);
		object string_literal666_tree = default(object);
		object char_literal667_tree = default(object);
		object string_literal668_tree = default(object);
		object IDENTIFIER669_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeHeader");
		DebugLocation(1348, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 121)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1349:5: ( modifiers ( 'class' | 'enum' | ( ( '@' )? 'interface' ) ) IDENTIFIER )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1349:9: modifiers ( 'class' | 'enum' | ( ( '@' )? 'interface' ) ) IDENTIFIER
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1349, 9);
			PushFollow(Follow._modifiers_in_typeHeader8572);
			modifiers664=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers664.Tree, modifiers664, retval);
			DebugLocation(1349, 19);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1349:19: ( 'class' | 'enum' | ( ( '@' )? 'interface' ) )
			int alt172=3;
			try { DebugEnterSubRule(172);
			try { DebugEnterDecision(172, false);
			switch (input.LA(1))
			{
			case CLASS:
				{
				alt172 = 1;
				}
				break;
			case ENUM:
				{
				alt172 = 2;
				}
				break;
			case INTERFACE:
			case MONKEYS_AT:
				{
				alt172 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 172, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(172); }
			switch (alt172)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1349:20: 'class'
				{
				DebugLocation(1349, 20);
				string_literal665=(IToken)Match(input,CLASS,Follow._CLASS_in_typeHeader8575); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal665_tree = (object)adaptor.Create(string_literal665, retval);
				adaptor.AddChild(root_0, string_literal665_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1349:28: 'enum'
				{
				DebugLocation(1349, 28);
				string_literal666=(IToken)Match(input,ENUM,Follow._ENUM_in_typeHeader8577); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal666_tree = (object)adaptor.Create(string_literal666, retval);
				adaptor.AddChild(root_0, string_literal666_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1349:35: ( ( '@' )? 'interface' )
				{
				DebugLocation(1349, 35);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1349:35: ( ( '@' )? 'interface' )
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1349:36: ( '@' )? 'interface'
				{
				DebugLocation(1349, 36);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1349:36: ( '@' )?
				int alt171=2;
				try { DebugEnterSubRule(171);
				try { DebugEnterDecision(171, false);
				int LA171_1 = input.LA(1);

				if ((LA171_1==MONKEYS_AT))
				{
					alt171 = 1;
				}
				} finally { DebugExitDecision(171); }
				switch (alt171)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1349:36: '@'
					{
					DebugLocation(1349, 36);
					char_literal667=(IToken)Match(input,MONKEYS_AT,Follow._MONKEYS_AT_in_typeHeader8580); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal667_tree = (object)adaptor.Create(char_literal667, retval);
					adaptor.AddChild(root_0, char_literal667_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(171); }

				DebugLocation(1349, 42);
				string_literal668=(IToken)Match(input,INTERFACE,Follow._INTERFACE_in_typeHeader8584); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal668_tree = (object)adaptor.Create(string_literal668, retval);
				adaptor.AddChild(root_0, string_literal668_tree);
				}

				}


				}
				break;

			}
			} finally { DebugExitSubRule(172); }

			DebugLocation(1349, 56);
			IDENTIFIER669=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_typeHeader8588); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER669_tree = (object)adaptor.Create(IDENTIFIER669, retval);
			adaptor.AddChild(root_0, IDENTIFIER669_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeHeader", 121);
			LeaveRule("typeHeader", 121);
			LeaveRule_typeHeader();
			if (state.backtracking > 0) { Memoize(input, 121, typeHeader_StartIndex); }

		}
		DebugLocation(1350, 4);
		} finally { DebugExitRule(GrammarFileName, "typeHeader"); }
		return retval;

	}
	// $ANTLR end "typeHeader"

	partial void EnterRule_methodHeader();
	partial void LeaveRule_methodHeader();
	// $ANTLR start "methodHeader"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1352:1: methodHeader : modifiers ( typeParameters )? ( type | 'void' )? IDENTIFIER '(' ;
	[GrammarRule("methodHeader")]
	private Antlr3AstNode methodHeader()
	{
		EnterRule_methodHeader();
		EnterRule("methodHeader", 122);
		var retval = new Antlr3AstNode("methodHeader");
		
		retval.Start = (IToken)input.LT(1);
		int methodHeader_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal673 = default(IToken);
		IToken IDENTIFIER674 = default(IToken);
		IToken char_literal675 = default(IToken);
		Antlr3AstNode modifiers670 = default(Antlr3AstNode);
		Antlr3AstNode typeParameters671 = default(Antlr3AstNode);
		Antlr3AstNode type672 = default(Antlr3AstNode);

		object string_literal673_tree = default(object);
		object IDENTIFIER674_tree = default(object);
		object char_literal675_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "methodHeader");
		DebugLocation(1352, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 122)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1353:5: ( modifiers ( typeParameters )? ( type | 'void' )? IDENTIFIER '(' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1353:9: modifiers ( typeParameters )? ( type | 'void' )? IDENTIFIER '('
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1353, 9);
			PushFollow(Follow._modifiers_in_methodHeader8608);
			modifiers670=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers670.Tree, modifiers670, retval);
			DebugLocation(1353, 19);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1353:19: ( typeParameters )?
			int alt173=2;
			try { DebugEnterSubRule(173);
			try { DebugEnterDecision(173, false);
			int LA173_1 = input.LA(1);

			if ((LA173_1==LT))
			{
				alt173 = 1;
			}
			} finally { DebugExitDecision(173); }
			switch (alt173)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1353:19: typeParameters
				{
				DebugLocation(1353, 19);
				PushFollow(Follow._typeParameters_in_methodHeader8610);
				typeParameters671=typeParameters();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeParameters671.Tree, typeParameters671, retval);

				}
				break;

			}
			} finally { DebugExitSubRule(173); }

			DebugLocation(1353, 35);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1353:35: ( type | 'void' )?
			int alt174=3;
			try { DebugEnterSubRule(174);
			try { DebugEnterDecision(174, false);
			switch (input.LA(1))
			{
			case IDENTIFIER:
				{
				int LA174_2 = input.LA(2);

				if ((LA174_2==DOT||LA174_2==IDENTIFIER||LA174_2==LBRACKET||LA174_2==LT))
				{
					alt174 = 1;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
				{
				alt174 = 1;
				}
				break;
			case VOID:
				{
				alt174 = 2;
				}
				break;
			}

			} finally { DebugExitDecision(174); }
			switch (alt174)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1353:36: type
				{
				DebugLocation(1353, 36);
				PushFollow(Follow._type_in_methodHeader8614);
				type672=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type672.Tree, type672, retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1353:41: 'void'
				{
				DebugLocation(1353, 41);
				string_literal673=(IToken)Match(input,VOID,Follow._VOID_in_methodHeader8616); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal673_tree = (object)adaptor.Create(string_literal673, retval);
				adaptor.AddChild(root_0, string_literal673_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(174); }

			DebugLocation(1353, 50);
			IDENTIFIER674=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_methodHeader8620); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER674_tree = (object)adaptor.Create(IDENTIFIER674, retval);
			adaptor.AddChild(root_0, IDENTIFIER674_tree);
			}
			DebugLocation(1353, 61);
			char_literal675=(IToken)Match(input,LPAREN,Follow._LPAREN_in_methodHeader8622); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal675_tree = (object)adaptor.Create(char_literal675, retval);
			adaptor.AddChild(root_0, char_literal675_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("methodHeader", 122);
			LeaveRule("methodHeader", 122);
			LeaveRule_methodHeader();
			if (state.backtracking > 0) { Memoize(input, 122, methodHeader_StartIndex); }

		}
		DebugLocation(1354, 4);
		} finally { DebugExitRule(GrammarFileName, "methodHeader"); }
		return retval;

	}
	// $ANTLR end "methodHeader"

	partial void EnterRule_fieldHeader();
	partial void LeaveRule_fieldHeader();
	// $ANTLR start "fieldHeader"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1356:1: fieldHeader : modifiers type IDENTIFIER ( '[' ']' )* ( '=' | ',' | ';' ) ;
	[GrammarRule("fieldHeader")]
	private Antlr3AstNode fieldHeader()
	{
		EnterRule_fieldHeader();
		EnterRule("fieldHeader", 123);
		var retval = new Antlr3AstNode("fieldHeader");
		
		retval.Start = (IToken)input.LT(1);
		int fieldHeader_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER678 = default(IToken);
		IToken char_literal679 = default(IToken);
		IToken char_literal680 = default(IToken);
		IToken set681 = default(IToken);
		Antlr3AstNode modifiers676 = default(Antlr3AstNode);
		Antlr3AstNode type677 = default(Antlr3AstNode);

		object IDENTIFIER678_tree = default(object);
		object char_literal679_tree = default(object);
		object char_literal680_tree = default(object);
		object set681_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "fieldHeader");
		DebugLocation(1356, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 123)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1357:5: ( modifiers type IDENTIFIER ( '[' ']' )* ( '=' | ',' | ';' ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1357:9: modifiers type IDENTIFIER ( '[' ']' )* ( '=' | ',' | ';' )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1357, 9);
			PushFollow(Follow._modifiers_in_fieldHeader8642);
			modifiers676=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers676.Tree, modifiers676, retval);
			DebugLocation(1357, 19);
			PushFollow(Follow._type_in_fieldHeader8644);
			type677=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type677.Tree, type677, retval);
			DebugLocation(1357, 24);
			IDENTIFIER678=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_fieldHeader8646); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER678_tree = (object)adaptor.Create(IDENTIFIER678, retval);
			adaptor.AddChild(root_0, IDENTIFIER678_tree);
			}
			DebugLocation(1357, 35);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1357:35: ( '[' ']' )*
			try { DebugEnterSubRule(175);
			while (true)
			{
				int alt175=2;
				try { DebugEnterDecision(175, false);
				int LA175_1 = input.LA(1);

				if ((LA175_1==LBRACKET))
				{
					alt175 = 1;
				}


				} finally { DebugExitDecision(175); }
				switch ( alt175 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1357:36: '[' ']'
					{
					DebugLocation(1357, 36);
					char_literal679=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_fieldHeader8649); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal679_tree = (object)adaptor.Create(char_literal679, retval);
					adaptor.AddChild(root_0, char_literal679_tree);
					}
					DebugLocation(1357, 39);
					char_literal680=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_fieldHeader8650); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal680_tree = (object)adaptor.Create(char_literal680, retval);
					adaptor.AddChild(root_0, char_literal680_tree);
					}

					}
					break;

				default:
					goto loop175;
				}
			}

			loop175:
				;

			} finally { DebugExitSubRule(175); }

			DebugLocation(1357, 45);

			set681=(IToken)input.LT(1);
			if (input.LA(1)==COMMA||input.LA(1)==EQ||input.LA(1)==SEMI)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set681, retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("fieldHeader", 123);
			LeaveRule("fieldHeader", 123);
			LeaveRule_fieldHeader();
			if (state.backtracking > 0) { Memoize(input, 123, fieldHeader_StartIndex); }

		}
		DebugLocation(1358, 4);
		} finally { DebugExitRule(GrammarFileName, "fieldHeader"); }
		return retval;

	}
	// $ANTLR end "fieldHeader"

	partial void EnterRule_localVariableHeader();
	partial void LeaveRule_localVariableHeader();
	// $ANTLR start "localVariableHeader"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1360:1: localVariableHeader : variableModifiers type IDENTIFIER ( '[' ']' )* ( '=' | ',' | ';' ) ;
	[GrammarRule("localVariableHeader")]
	private Antlr3AstNode localVariableHeader()
	{
		EnterRule_localVariableHeader();
		EnterRule("localVariableHeader", 124);
		var retval = new Antlr3AstNode("localVariableHeader");
		
		retval.Start = (IToken)input.LT(1);
		int localVariableHeader_StartIndex = input.Index;

		object root_0 = default(object);

		IToken IDENTIFIER684 = default(IToken);
		IToken char_literal685 = default(IToken);
		IToken char_literal686 = default(IToken);
		IToken set687 = default(IToken);
		Antlr3AstNode variableModifiers682 = default(Antlr3AstNode);
		Antlr3AstNode type683 = default(Antlr3AstNode);

		object IDENTIFIER684_tree = default(object);
		object char_literal685_tree = default(object);
		object char_literal686_tree = default(object);
		object set687_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "localVariableHeader");
		DebugLocation(1360, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 124)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1361:5: ( variableModifiers type IDENTIFIER ( '[' ']' )* ( '=' | ',' | ';' ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1361:9: variableModifiers type IDENTIFIER ( '[' ']' )* ( '=' | ',' | ';' )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(1361, 9);
			PushFollow(Follow._variableModifiers_in_localVariableHeader8680);
			variableModifiers682=variableModifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableModifiers682.Tree, variableModifiers682, retval);
			DebugLocation(1361, 27);
			PushFollow(Follow._type_in_localVariableHeader8682);
			type683=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type683.Tree, type683, retval);
			DebugLocation(1361, 32);
			IDENTIFIER684=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_localVariableHeader8684); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER684_tree = (object)adaptor.Create(IDENTIFIER684, retval);
			adaptor.AddChild(root_0, IDENTIFIER684_tree);
			}
			DebugLocation(1361, 43);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1361:43: ( '[' ']' )*
			try { DebugEnterSubRule(176);
			while (true)
			{
				int alt176=2;
				try { DebugEnterDecision(176, false);
				int LA176_1 = input.LA(1);

				if ((LA176_1==LBRACKET))
				{
					alt176 = 1;
				}


				} finally { DebugExitDecision(176); }
				switch ( alt176 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1361:44: '[' ']'
					{
					DebugLocation(1361, 44);
					char_literal685=(IToken)Match(input,LBRACKET,Follow._LBRACKET_in_localVariableHeader8687); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal685_tree = (object)adaptor.Create(char_literal685, retval);
					adaptor.AddChild(root_0, char_literal685_tree);
					}
					DebugLocation(1361, 47);
					char_literal686=(IToken)Match(input,RBRACKET,Follow._RBRACKET_in_localVariableHeader8688); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal686_tree = (object)adaptor.Create(char_literal686, retval);
					adaptor.AddChild(root_0, char_literal686_tree);
					}

					}
					break;

				default:
					goto loop176;
				}
			}

			loop176:
				;

			} finally { DebugExitSubRule(176); }

			DebugLocation(1361, 53);

			set687=(IToken)input.LT(1);
			if (input.LA(1)==COMMA||input.LA(1)==EQ||input.LA(1)==SEMI)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set687, retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("localVariableHeader", 124);
			LeaveRule("localVariableHeader", 124);
			LeaveRule_localVariableHeader();
			if (state.backtracking > 0) { Memoize(input, 124, localVariableHeader_StartIndex); }

		}
		DebugLocation(1362, 4);
		} finally { DebugExitRule(GrammarFileName, "localVariableHeader"); }
		return retval;

	}
	// $ANTLR end "localVariableHeader"

	partial void EnterRule_synpred2_Java_fragment();
	partial void LeaveRule_synpred2_Java_fragment();

	// $ANTLR start synpred2_Java
	private void synpred2_Java_fragment()
	{
		EnterRule_synpred2_Java_fragment();
		EnterRule("synpred2_Java_fragment", 126);
		var retval = new Antlr3AstNode("synpred2_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:305:13: ( ( annotations )? packageDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:305:13: ( annotations )? packageDeclaration
			{
			DebugLocation(305, 13);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:305:13: ( annotations )?
			int alt177=2;
			try { DebugEnterSubRule(177);
			try { DebugEnterDecision(177, false);
			int LA177_1 = input.LA(1);

			if ((LA177_1==MONKEYS_AT))
			{
				alt177 = 1;
			}
			} finally { DebugExitDecision(177); }
			switch (alt177)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:305:14: annotations
				{
				DebugLocation(305, 14);
				PushFollow(Follow._annotations_in_synpred2_Java118);
				annotations();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(177); }

			DebugLocation(307, 13);
			PushFollow(Follow._packageDeclaration_in_synpred2_Java147);
			packageDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred2_Java_fragment", 126);
			LeaveRule("synpred2_Java_fragment", 126);
			LeaveRule_synpred2_Java_fragment();
		}
	}
	// $ANTLR end synpred2_Java

	partial void EnterRule_synpred12_Java_fragment();
	partial void LeaveRule_synpred12_Java_fragment();

	// $ANTLR start synpred12_Java
	private void synpred12_Java_fragment()
	{
		EnterRule_synpred12_Java_fragment();
		EnterRule("synpred12_Java_fragment", 136);
		var retval = new Antlr3AstNode("synpred12_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:349:10: ( classDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:349:10: classDeclaration
			{
			DebugLocation(349, 10);
			PushFollow(Follow._classDeclaration_in_synpred12_Java505);
			classDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred12_Java_fragment", 136);
			LeaveRule("synpred12_Java_fragment", 136);
			LeaveRule_synpred12_Java_fragment();
		}
	}
	// $ANTLR end synpred12_Java

	partial void EnterRule_synpred27_Java_fragment();
	partial void LeaveRule_synpred27_Java_fragment();

	// $ANTLR start synpred27_Java
	private void synpred27_Java_fragment()
	{
		EnterRule_synpred27_Java_fragment();
		EnterRule("synpred27_Java_fragment", 151);
		var retval = new Antlr3AstNode("synpred27_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:380:9: ( normalClassDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:380:9: normalClassDeclaration
			{
			DebugLocation(380, 9);
			PushFollow(Follow._normalClassDeclaration_in_synpred27_Java742);
			normalClassDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred27_Java_fragment", 151);
			LeaveRule("synpred27_Java_fragment", 151);
			LeaveRule_synpred27_Java_fragment();
		}
	}
	// $ANTLR end synpred27_Java

	partial void EnterRule_synpred43_Java_fragment();
	partial void LeaveRule_synpred43_Java_fragment();

	// $ANTLR start synpred43_Java
	private void synpred43_Java_fragment()
	{
		EnterRule_synpred43_Java_fragment();
		EnterRule("synpred43_Java_fragment", 167);
		var retval = new Antlr3AstNode("synpred43_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:468:9: ( normalInterfaceDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:468:9: normalInterfaceDeclaration
			{
			DebugLocation(468, 9);
			PushFollow(Follow._normalInterfaceDeclaration_in_synpred43_Java1421);
			normalInterfaceDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred43_Java_fragment", 167);
			LeaveRule("synpred43_Java_fragment", 167);
			LeaveRule_synpred43_Java_fragment();
		}
	}
	// $ANTLR end synpred43_Java

	partial void EnterRule_synpred52_Java_fragment();
	partial void LeaveRule_synpred52_Java_fragment();

	// $ANTLR start synpred52_Java
	private void synpred52_Java_fragment()
	{
		EnterRule_synpred52_Java_fragment();
		EnterRule("synpred52_Java_fragment", 176);
		var retval = new Antlr3AstNode("synpred52_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:510:10: ( fieldDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:510:10: fieldDeclaration
			{
			DebugLocation(510, 10);
			PushFollow(Follow._fieldDeclaration_in_synpred52_Java1751);
			fieldDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred52_Java_fragment", 176);
			LeaveRule("synpred52_Java_fragment", 176);
			LeaveRule_synpred52_Java_fragment();
		}
	}
	// $ANTLR end synpred52_Java

	partial void EnterRule_synpred53_Java_fragment();
	partial void LeaveRule_synpred53_Java_fragment();

	// $ANTLR start synpred53_Java
	private void synpred53_Java_fragment()
	{
		EnterRule_synpred53_Java_fragment();
		EnterRule("synpred53_Java_fragment", 177);
		var retval = new Antlr3AstNode("synpred53_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:511:10: ( methodDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:511:10: methodDeclaration
			{
			DebugLocation(511, 10);
			PushFollow(Follow._methodDeclaration_in_synpred53_Java1762);
			methodDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred53_Java_fragment", 177);
			LeaveRule("synpred53_Java_fragment", 177);
			LeaveRule_synpred53_Java_fragment();
		}
	}
	// $ANTLR end synpred53_Java

	partial void EnterRule_synpred54_Java_fragment();
	partial void LeaveRule_synpred54_Java_fragment();

	// $ANTLR start synpred54_Java
	private void synpred54_Java_fragment()
	{
		EnterRule_synpred54_Java_fragment();
		EnterRule("synpred54_Java_fragment", 178);
		var retval = new Antlr3AstNode("synpred54_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:512:10: ( classDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:512:10: classDeclaration
			{
			DebugLocation(512, 10);
			PushFollow(Follow._classDeclaration_in_synpred54_Java1773);
			classDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred54_Java_fragment", 178);
			LeaveRule("synpred54_Java_fragment", 178);
			LeaveRule_synpred54_Java_fragment();
		}
	}
	// $ANTLR end synpred54_Java

	partial void EnterRule_synpred57_Java_fragment();
	partial void LeaveRule_synpred57_Java_fragment();

	// $ANTLR start synpred57_Java
	private void synpred57_Java_fragment()
	{
		EnterRule_synpred57_Java_fragment();
		EnterRule("synpred57_Java_fragment", 181);
		var retval = new Antlr3AstNode("synpred57_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:528:10: ( explicitConstructorInvocation )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:528:10: explicitConstructorInvocation
			{
			DebugLocation(528, 10);
			PushFollow(Follow._explicitConstructorInvocation_in_synpred57_Java1910);
			explicitConstructorInvocation();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred57_Java_fragment", 181);
			LeaveRule("synpred57_Java_fragment", 181);
			LeaveRule_synpred57_Java_fragment();
		}
	}
	// $ANTLR end synpred57_Java

	partial void EnterRule_synpred59_Java_fragment();
	partial void LeaveRule_synpred59_Java_fragment();

	// $ANTLR start synpred59_Java
	private void synpred59_Java_fragment()
	{
		EnterRule_synpred59_Java_fragment();
		EnterRule("synpred59_Java_fragment", 183);
		var retval = new Antlr3AstNode("synpred59_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:520:10: ( modifiers ( typeParameters )? IDENTIFIER formalParameters ( 'throws' qualifiedNameList )? '{' ( explicitConstructorInvocation )? ( blockStatement )* '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:520:10: modifiers ( typeParameters )? IDENTIFIER formalParameters ( 'throws' qualifiedNameList )? '{' ( explicitConstructorInvocation )? ( blockStatement )* '}'
			{
			DebugLocation(520, 10);
			PushFollow(Follow._modifiers_in_synpred59_Java1822);
			modifiers();
			PopFollow();
			if (state.failed) return;
			DebugLocation(521, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:521:9: ( typeParameters )?
			int alt180=2;
			try { DebugEnterSubRule(180);
			try { DebugEnterDecision(180, false);
			int LA180_1 = input.LA(1);

			if ((LA180_1==LT))
			{
				alt180 = 1;
			}
			} finally { DebugExitDecision(180); }
			switch (alt180)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:521:10: typeParameters
				{
				DebugLocation(521, 10);
				PushFollow(Follow._typeParameters_in_synpred59_Java1833);
				typeParameters();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(180); }

			DebugLocation(523, 9);
			Match(input,IDENTIFIER,Follow._IDENTIFIER_in_synpred59_Java1854); if (state.failed) return;
			DebugLocation(524, 9);
			PushFollow(Follow._formalParameters_in_synpred59_Java1864);
			formalParameters();
			PopFollow();
			if (state.failed) return;
			DebugLocation(525, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:525:9: ( 'throws' qualifiedNameList )?
			int alt181=2;
			try { DebugEnterSubRule(181);
			try { DebugEnterDecision(181, false);
			int LA181_1 = input.LA(1);

			if ((LA181_1==THROWS))
			{
				alt181 = 1;
			}
			} finally { DebugExitDecision(181); }
			switch (alt181)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:525:10: 'throws' qualifiedNameList
				{
				DebugLocation(525, 10);
				Match(input,THROWS,Follow._THROWS_in_synpred59_Java1875); if (state.failed) return;
				DebugLocation(525, 19);
				PushFollow(Follow._qualifiedNameList_in_synpred59_Java1877);
				qualifiedNameList();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(181); }

			DebugLocation(527, 9);
			Match(input,LBRACE,Follow._LBRACE_in_synpred59_Java1898); if (state.failed) return;
			DebugLocation(528, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:528:9: ( explicitConstructorInvocation )?
			int alt182=2;
			try { DebugEnterSubRule(182);
			try { DebugEnterDecision(182, false);
			switch (input.LA(1))
			{
			case LT:
				{
				alt182 = 1;
				}
				break;
			case THIS:
				{
				int LA182_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt182 = 1;
				}
				}
				break;
			case LPAREN:
				{
				int LA182_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt182 = 1;
				}
				}
				break;
			case SUPER:
				{
				int LA182_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt182 = 1;
				}
				}
				break;
			case IDENTIFIER:
				{
				int LA182_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt182 = 1;
				}
				}
				break;
			case INTLITERAL:
				{
				int LA182_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt182 = 1;
				}
				}
				break;
			case LONGLITERAL:
				{
				int LA182_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt182 = 1;
				}
				}
				break;
			case FLOATLITERAL:
				{
				int LA182_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt182 = 1;
				}
				}
				break;
			case DOUBLELITERAL:
				{
				int LA182_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt182 = 1;
				}
				}
				break;
			case CHARLITERAL:
				{
				int LA182_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt182 = 1;
				}
				}
				break;
			case STRINGLITERAL:
				{
				int LA182_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt182 = 1;
				}
				}
				break;
			case TRUE:
				{
				int LA182_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt182 = 1;
				}
				}
				break;
			case FALSE:
				{
				int LA182_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt182 = 1;
				}
				}
				break;
			case NULL:
				{
				int LA182_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt182 = 1;
				}
				}
				break;
			case NEW:
				{
				int LA182_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt182 = 1;
				}
				}
				break;
			case BOOLEAN:
			case BYTE:
			case CHAR:
			case DOUBLE:
			case FLOAT:
			case INT:
			case LONG:
			case SHORT:
				{
				int LA182_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt182 = 1;
				}
				}
				break;
			case VOID:
				{
				int LA182_2 = input.LA(2);

				if ((EvaluatePredicate(synpred57_Java_fragment)))
				{
					alt182 = 1;
				}
				}
				break;
			}

			} finally { DebugExitDecision(182); }
			switch (alt182)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:528:10: explicitConstructorInvocation
				{
				DebugLocation(528, 10);
				PushFollow(Follow._explicitConstructorInvocation_in_synpred59_Java1910);
				explicitConstructorInvocation();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(182); }

			DebugLocation(530, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:530:9: ( blockStatement )*
			try { DebugEnterSubRule(183);
			while (true)
			{
				int alt183=2;
				try { DebugEnterDecision(183, false);
				int LA183_1 = input.LA(1);

				if ((LA183_1==ABSTRACT||(LA183_1>=ASSERT && LA183_1<=BANG)||(LA183_1>=BOOLEAN && LA183_1<=BYTE)||(LA183_1>=CHAR && LA183_1<=CLASS)||LA183_1==CONTINUE||LA183_1==DO||(LA183_1>=DOUBLE && LA183_1<=DOUBLELITERAL)||LA183_1==ENUM||(LA183_1>=FALSE && LA183_1<=FINAL)||(LA183_1>=FLOAT && LA183_1<=FOR)||(LA183_1>=IDENTIFIER && LA183_1<=IF)||(LA183_1>=INT && LA183_1<=INTLITERAL)||LA183_1==LBRACE||(LA183_1>=LONG && LA183_1<=LT)||(LA183_1>=MONKEYS_AT && LA183_1<=NULL)||LA183_1==PLUS||(LA183_1>=PLUSPLUS && LA183_1<=PUBLIC)||LA183_1==RETURN||(LA183_1>=SEMI && LA183_1<=SHORT)||(LA183_1>=STATIC && LA183_1<=SUB)||(LA183_1>=SUBSUB && LA183_1<=SYNCHRONIZED)||(LA183_1>=THIS && LA183_1<=THROW)||(LA183_1>=TILDE && LA183_1<=WHILE)))
				{
					alt183 = 1;
				}


				} finally { DebugExitDecision(183); }
				switch ( alt183 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:530:10: blockStatement
					{
					DebugLocation(530, 10);
					PushFollow(Follow._blockStatement_in_synpred59_Java1932);
					blockStatement();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop183;
				}
			}

			loop183:
				;

			} finally { DebugExitSubRule(183); }

			DebugLocation(532, 9);
			Match(input,RBRACE,Follow._RBRACE_in_synpred59_Java1953); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred59_Java_fragment", 183);
			LeaveRule("synpred59_Java_fragment", 183);
			LeaveRule_synpred59_Java_fragment();
		}
	}
	// $ANTLR end synpred59_Java

	partial void EnterRule_synpred68_Java_fragment();
	partial void LeaveRule_synpred68_Java_fragment();

	// $ANTLR start synpred68_Java
	private void synpred68_Java_fragment()
	{
		EnterRule_synpred68_Java_fragment();
		EnterRule("synpred68_Java_fragment", 192);
		var retval = new Antlr3AstNode("synpred68_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:574:9: ( interfaceFieldDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:574:9: interfaceFieldDeclaration
			{
			DebugLocation(574, 9);
			PushFollow(Follow._interfaceFieldDeclaration_in_synpred68_Java2328);
			interfaceFieldDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred68_Java_fragment", 192);
			LeaveRule("synpred68_Java_fragment", 192);
			LeaveRule_synpred68_Java_fragment();
		}
	}
	// $ANTLR end synpred68_Java

	partial void EnterRule_synpred69_Java_fragment();
	partial void LeaveRule_synpred69_Java_fragment();

	// $ANTLR start synpred69_Java
	private void synpred69_Java_fragment()
	{
		EnterRule_synpred69_Java_fragment();
		EnterRule("synpred69_Java_fragment", 193);
		var retval = new Antlr3AstNode("synpred69_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:575:9: ( interfaceMethodDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:575:9: interfaceMethodDeclaration
			{
			DebugLocation(575, 9);
			PushFollow(Follow._interfaceMethodDeclaration_in_synpred69_Java2338);
			interfaceMethodDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred69_Java_fragment", 193);
			LeaveRule("synpred69_Java_fragment", 193);
			LeaveRule_synpred69_Java_fragment();
		}
	}
	// $ANTLR end synpred69_Java

	partial void EnterRule_synpred70_Java_fragment();
	partial void LeaveRule_synpred70_Java_fragment();

	// $ANTLR start synpred70_Java
	private void synpred70_Java_fragment()
	{
		EnterRule_synpred70_Java_fragment();
		EnterRule("synpred70_Java_fragment", 194);
		var retval = new Antlr3AstNode("synpred70_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:576:9: ( interfaceDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:576:9: interfaceDeclaration
			{
			DebugLocation(576, 9);
			PushFollow(Follow._interfaceDeclaration_in_synpred70_Java2348);
			interfaceDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred70_Java_fragment", 194);
			LeaveRule("synpred70_Java_fragment", 194);
			LeaveRule_synpred70_Java_fragment();
		}
	}
	// $ANTLR end synpred70_Java

	partial void EnterRule_synpred71_Java_fragment();
	partial void LeaveRule_synpred71_Java_fragment();

	// $ANTLR start synpred71_Java
	private void synpred71_Java_fragment()
	{
		EnterRule_synpred71_Java_fragment();
		EnterRule("synpred71_Java_fragment", 195);
		var retval = new Antlr3AstNode("synpred71_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:577:9: ( classDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:577:9: classDeclaration
			{
			DebugLocation(577, 9);
			PushFollow(Follow._classDeclaration_in_synpred71_Java2358);
			classDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred71_Java_fragment", 195);
			LeaveRule("synpred71_Java_fragment", 195);
			LeaveRule_synpred71_Java_fragment();
		}
	}
	// $ANTLR end synpred71_Java

	partial void EnterRule_synpred96_Java_fragment();
	partial void LeaveRule_synpred96_Java_fragment();

	// $ANTLR start synpred96_Java
	private void synpred96_Java_fragment()
	{
		EnterRule_synpred96_Java_fragment();
		EnterRule("synpred96_Java_fragment", 220);
		var retval = new Antlr3AstNode("synpred96_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:672:9: ( ellipsisParameterDecl )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:672:9: ellipsisParameterDecl
			{
			DebugLocation(672, 9);
			PushFollow(Follow._ellipsisParameterDecl_in_synpred96_Java3122);
			ellipsisParameterDecl();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred96_Java_fragment", 220);
			LeaveRule("synpred96_Java_fragment", 220);
			LeaveRule_synpred96_Java_fragment();
		}
	}
	// $ANTLR end synpred96_Java

	partial void EnterRule_synpred98_Java_fragment();
	partial void LeaveRule_synpred98_Java_fragment();

	// $ANTLR start synpred98_Java
	private void synpred98_Java_fragment()
	{
		EnterRule_synpred98_Java_fragment();
		EnterRule("synpred98_Java_fragment", 222);
		var retval = new Antlr3AstNode("synpred98_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:673:9: ( normalParameterDecl ( ',' normalParameterDecl )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:673:9: normalParameterDecl ( ',' normalParameterDecl )*
			{
			DebugLocation(673, 9);
			PushFollow(Follow._normalParameterDecl_in_synpred98_Java3132);
			normalParameterDecl();
			PopFollow();
			if (state.failed) return;
			DebugLocation(674, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:674:9: ( ',' normalParameterDecl )*
			try { DebugEnterSubRule(186);
			while (true)
			{
				int alt186=2;
				try { DebugEnterDecision(186, false);
				int LA186_1 = input.LA(1);

				if ((LA186_1==COMMA))
				{
					alt186 = 1;
				}


				} finally { DebugExitDecision(186); }
				switch ( alt186 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:674:10: ',' normalParameterDecl
					{
					DebugLocation(674, 10);
					Match(input,COMMA,Follow._COMMA_in_synpred98_Java3143); if (state.failed) return;
					DebugLocation(674, 14);
					PushFollow(Follow._normalParameterDecl_in_synpred98_Java3145);
					normalParameterDecl();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop186;
				}
			}

			loop186:
				;

			} finally { DebugExitSubRule(186); }


			}

		}
		finally
		{
			TraceOut("synpred98_Java_fragment", 222);
			LeaveRule("synpred98_Java_fragment", 222);
			LeaveRule_synpred98_Java_fragment();
		}
	}
	// $ANTLR end synpred98_Java

	partial void EnterRule_synpred99_Java_fragment();
	partial void LeaveRule_synpred99_Java_fragment();

	// $ANTLR start synpred99_Java
	private void synpred99_Java_fragment()
	{
		EnterRule_synpred99_Java_fragment();
		EnterRule("synpred99_Java_fragment", 223);
		var retval = new Antlr3AstNode("synpred99_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:676:10: ( normalParameterDecl ',' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:676:10: normalParameterDecl ','
			{
			DebugLocation(676, 10);
			PushFollow(Follow._normalParameterDecl_in_synpred99_Java3167);
			normalParameterDecl();
			PopFollow();
			if (state.failed) return;
			DebugLocation(677, 9);
			Match(input,COMMA,Follow._COMMA_in_synpred99_Java3177); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred99_Java_fragment", 223);
			LeaveRule("synpred99_Java_fragment", 223);
			LeaveRule_synpred99_Java_fragment();
		}
	}
	// $ANTLR end synpred99_Java

	partial void EnterRule_synpred103_Java_fragment();
	partial void LeaveRule_synpred103_Java_fragment();

	// $ANTLR start synpred103_Java
	private void synpred103_Java_fragment()
	{
		EnterRule_synpred103_Java_fragment();
		EnterRule("synpred103_Java_fragment", 227);
		var retval = new Antlr3AstNode("synpred103_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:696:9: ( ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:696:9: ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';'
			{
			DebugLocation(696, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:696:9: ( nonWildcardTypeArguments )?
			int alt187=2;
			try { DebugEnterSubRule(187);
			try { DebugEnterDecision(187, false);
			int LA187_1 = input.LA(1);

			if ((LA187_1==LT))
			{
				alt187 = 1;
			}
			} finally { DebugExitDecision(187); }
			switch (alt187)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:696:10: nonWildcardTypeArguments
				{
				DebugLocation(696, 10);
				PushFollow(Follow._nonWildcardTypeArguments_in_synpred103_Java3312);
				nonWildcardTypeArguments();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(187); }

			DebugLocation(698, 9);
			if (input.LA(1)==SUPER||input.LA(1)==THIS)
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}

			DebugLocation(701, 9);
			PushFollow(Follow._arguments_in_synpred103_Java3370);
			arguments();
			PopFollow();
			if (state.failed) return;
			DebugLocation(701, 19);
			Match(input,SEMI,Follow._SEMI_in_synpred103_Java3372); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred103_Java_fragment", 227);
			LeaveRule("synpred103_Java_fragment", 227);
			LeaveRule_synpred103_Java_fragment();
		}
	}
	// $ANTLR end synpred103_Java

	partial void EnterRule_synpred117_Java_fragment();
	partial void LeaveRule_synpred117_Java_fragment();

	// $ANTLR start synpred117_Java
	private void synpred117_Java_fragment()
	{
		EnterRule_synpred117_Java_fragment();
		EnterRule("synpred117_Java_fragment", 241);
		var retval = new Antlr3AstNode("synpred117_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:783:9: ( annotationMethodDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:783:9: annotationMethodDeclaration
			{
			DebugLocation(783, 9);
			PushFollow(Follow._annotationMethodDeclaration_in_synpred117_Java3971);
			annotationMethodDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred117_Java_fragment", 241);
			LeaveRule("synpred117_Java_fragment", 241);
			LeaveRule_synpred117_Java_fragment();
		}
	}
	// $ANTLR end synpred117_Java

	partial void EnterRule_synpred118_Java_fragment();
	partial void LeaveRule_synpred118_Java_fragment();

	// $ANTLR start synpred118_Java
	private void synpred118_Java_fragment()
	{
		EnterRule_synpred118_Java_fragment();
		EnterRule("synpred118_Java_fragment", 242);
		var retval = new Antlr3AstNode("synpred118_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:784:9: ( interfaceFieldDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:784:9: interfaceFieldDeclaration
			{
			DebugLocation(784, 9);
			PushFollow(Follow._interfaceFieldDeclaration_in_synpred118_Java3981);
			interfaceFieldDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred118_Java_fragment", 242);
			LeaveRule("synpred118_Java_fragment", 242);
			LeaveRule_synpred118_Java_fragment();
		}
	}
	// $ANTLR end synpred118_Java

	partial void EnterRule_synpred119_Java_fragment();
	partial void LeaveRule_synpred119_Java_fragment();

	// $ANTLR start synpred119_Java
	private void synpred119_Java_fragment()
	{
		EnterRule_synpred119_Java_fragment();
		EnterRule("synpred119_Java_fragment", 243);
		var retval = new Antlr3AstNode("synpred119_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:785:9: ( normalClassDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:785:9: normalClassDeclaration
			{
			DebugLocation(785, 9);
			PushFollow(Follow._normalClassDeclaration_in_synpred119_Java3991);
			normalClassDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred119_Java_fragment", 243);
			LeaveRule("synpred119_Java_fragment", 243);
			LeaveRule_synpred119_Java_fragment();
		}
	}
	// $ANTLR end synpred119_Java

	partial void EnterRule_synpred120_Java_fragment();
	partial void LeaveRule_synpred120_Java_fragment();

	// $ANTLR start synpred120_Java
	private void synpred120_Java_fragment()
	{
		EnterRule_synpred120_Java_fragment();
		EnterRule("synpred120_Java_fragment", 244);
		var retval = new Antlr3AstNode("synpred120_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:786:9: ( normalInterfaceDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:786:9: normalInterfaceDeclaration
			{
			DebugLocation(786, 9);
			PushFollow(Follow._normalInterfaceDeclaration_in_synpred120_Java4001);
			normalInterfaceDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred120_Java_fragment", 244);
			LeaveRule("synpred120_Java_fragment", 244);
			LeaveRule_synpred120_Java_fragment();
		}
	}
	// $ANTLR end synpred120_Java

	partial void EnterRule_synpred121_Java_fragment();
	partial void LeaveRule_synpred121_Java_fragment();

	// $ANTLR start synpred121_Java
	private void synpred121_Java_fragment()
	{
		EnterRule_synpred121_Java_fragment();
		EnterRule("synpred121_Java_fragment", 245);
		var retval = new Antlr3AstNode("synpred121_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:787:9: ( enumDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:787:9: enumDeclaration
			{
			DebugLocation(787, 9);
			PushFollow(Follow._enumDeclaration_in_synpred121_Java4011);
			enumDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred121_Java_fragment", 245);
			LeaveRule("synpred121_Java_fragment", 245);
			LeaveRule_synpred121_Java_fragment();
		}
	}
	// $ANTLR end synpred121_Java

	partial void EnterRule_synpred122_Java_fragment();
	partial void LeaveRule_synpred122_Java_fragment();

	// $ANTLR start synpred122_Java
	private void synpred122_Java_fragment()
	{
		EnterRule_synpred122_Java_fragment();
		EnterRule("synpred122_Java_fragment", 246);
		var retval = new Antlr3AstNode("synpred122_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:788:9: ( annotationTypeDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:788:9: annotationTypeDeclaration
			{
			DebugLocation(788, 9);
			PushFollow(Follow._annotationTypeDeclaration_in_synpred122_Java4021);
			annotationTypeDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred122_Java_fragment", 246);
			LeaveRule("synpred122_Java_fragment", 246);
			LeaveRule_synpred122_Java_fragment();
		}
	}
	// $ANTLR end synpred122_Java

	partial void EnterRule_synpred125_Java_fragment();
	partial void LeaveRule_synpred125_Java_fragment();

	// $ANTLR start synpred125_Java
	private void synpred125_Java_fragment()
	{
		EnterRule_synpred125_Java_fragment();
		EnterRule("synpred125_Java_fragment", 249);
		var retval = new Antlr3AstNode("synpred125_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:831:9: ( localVariableDeclarationStatement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:831:9: localVariableDeclarationStatement
			{
			DebugLocation(831, 9);
			PushFollow(Follow._localVariableDeclarationStatement_in_synpred125_Java4179);
			localVariableDeclarationStatement();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred125_Java_fragment", 249);
			LeaveRule("synpred125_Java_fragment", 249);
			LeaveRule_synpred125_Java_fragment();
		}
	}
	// $ANTLR end synpred125_Java

	partial void EnterRule_synpred126_Java_fragment();
	partial void LeaveRule_synpred126_Java_fragment();

	// $ANTLR start synpred126_Java
	private void synpred126_Java_fragment()
	{
		EnterRule_synpred126_Java_fragment();
		EnterRule("synpred126_Java_fragment", 250);
		var retval = new Antlr3AstNode("synpred126_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:832:9: ( classOrInterfaceDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:832:9: classOrInterfaceDeclaration
			{
			DebugLocation(832, 9);
			PushFollow(Follow._classOrInterfaceDeclaration_in_synpred126_Java4189);
			classOrInterfaceDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred126_Java_fragment", 250);
			LeaveRule("synpred126_Java_fragment", 250);
			LeaveRule_synpred126_Java_fragment();
		}
	}
	// $ANTLR end synpred126_Java

	partial void EnterRule_synpred130_Java_fragment();
	partial void LeaveRule_synpred130_Java_fragment();

	// $ANTLR start synpred130_Java
	private void synpred130_Java_fragment()
	{
		EnterRule_synpred130_Java_fragment();
		EnterRule("synpred130_Java_fragment", 254);
		var retval = new Antlr3AstNode("synpred130_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:852:9: ( ( 'assert' ) expression ( ':' expression )? ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:852:9: ( 'assert' ) expression ( ':' expression )? ';'
			{
			DebugLocation(852, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:852:9: ( 'assert' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:852:10: 'assert'
			{
			DebugLocation(852, 10);
			Match(input,ASSERT,Follow._ASSERT_in_synpred130_Java4330); if (state.failed) return;

			}

			DebugLocation(854, 9);
			PushFollow(Follow._expression_in_synpred130_Java4350);
			expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(854, 20);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:854:20: ( ':' expression )?
			int alt190=2;
			try { DebugEnterSubRule(190);
			try { DebugEnterDecision(190, false);
			int LA190_1 = input.LA(1);

			if ((LA190_1==COLON))
			{
				alt190 = 1;
			}
			} finally { DebugExitDecision(190); }
			switch (alt190)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:854:21: ':' expression
				{
				DebugLocation(854, 21);
				Match(input,COLON,Follow._COLON_in_synpred130_Java4353); if (state.failed) return;
				DebugLocation(854, 25);
				PushFollow(Follow._expression_in_synpred130_Java4355);
				expression();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(190); }

			DebugLocation(854, 38);
			Match(input,SEMI,Follow._SEMI_in_synpred130_Java4359); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred130_Java_fragment", 254);
			LeaveRule("synpred130_Java_fragment", 254);
			LeaveRule_synpred130_Java_fragment();
		}
	}
	// $ANTLR end synpred130_Java

	partial void EnterRule_synpred132_Java_fragment();
	partial void LeaveRule_synpred132_Java_fragment();

	// $ANTLR start synpred132_Java
	private void synpred132_Java_fragment()
	{
		EnterRule_synpred132_Java_fragment();
		EnterRule("synpred132_Java_fragment", 256);
		var retval = new Antlr3AstNode("synpred132_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:855:9: ( 'assert' expression ( ':' expression )? ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:855:9: 'assert' expression ( ':' expression )? ';'
			{
			DebugLocation(855, 9);
			Match(input,ASSERT,Follow._ASSERT_in_synpred132_Java4369); if (state.failed) return;
			DebugLocation(855, 19);
			PushFollow(Follow._expression_in_synpred132_Java4372);
			expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(855, 30);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:855:30: ( ':' expression )?
			int alt191=2;
			try { DebugEnterSubRule(191);
			try { DebugEnterDecision(191, false);
			int LA191_1 = input.LA(1);

			if ((LA191_1==COLON))
			{
				alt191 = 1;
			}
			} finally { DebugExitDecision(191); }
			switch (alt191)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:855:31: ':' expression
				{
				DebugLocation(855, 31);
				Match(input,COLON,Follow._COLON_in_synpred132_Java4375); if (state.failed) return;
				DebugLocation(855, 35);
				PushFollow(Follow._expression_in_synpred132_Java4377);
				expression();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(191); }

			DebugLocation(855, 48);
			Match(input,SEMI,Follow._SEMI_in_synpred132_Java4381); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred132_Java_fragment", 256);
			LeaveRule("synpred132_Java_fragment", 256);
			LeaveRule_synpred132_Java_fragment();
		}
	}
	// $ANTLR end synpred132_Java

	partial void EnterRule_synpred133_Java_fragment();
	partial void LeaveRule_synpred133_Java_fragment();

	// $ANTLR start synpred133_Java
	private void synpred133_Java_fragment()
	{
		EnterRule_synpred133_Java_fragment();
		EnterRule("synpred133_Java_fragment", 257);
		var retval = new Antlr3AstNode("synpred133_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:856:39: ( 'else' statement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:856:39: 'else' statement
			{
			DebugLocation(856, 39);
			Match(input,ELSE,Follow._ELSE_in_synpred133_Java4410); if (state.failed) return;
			DebugLocation(856, 46);
			PushFollow(Follow._statement_in_synpred133_Java4412);
			statement();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred133_Java_fragment", 257);
			LeaveRule("synpred133_Java_fragment", 257);
			LeaveRule_synpred133_Java_fragment();
		}
	}
	// $ANTLR end synpred133_Java

	partial void EnterRule_synpred148_Java_fragment();
	partial void LeaveRule_synpred148_Java_fragment();

	// $ANTLR start synpred148_Java
	private void synpred148_Java_fragment()
	{
		EnterRule_synpred148_Java_fragment();
		EnterRule("synpred148_Java_fragment", 272);
		var retval = new Antlr3AstNode("synpred148_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:871:9: ( expression ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:871:9: expression ';'
			{
			DebugLocation(871, 9);
			PushFollow(Follow._expression_in_synpred148_Java4634);
			expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(871, 21);
			Match(input,SEMI,Follow._SEMI_in_synpred148_Java4637); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred148_Java_fragment", 272);
			LeaveRule("synpred148_Java_fragment", 272);
			LeaveRule_synpred148_Java_fragment();
		}
	}
	// $ANTLR end synpred148_Java

	partial void EnterRule_synpred149_Java_fragment();
	partial void LeaveRule_synpred149_Java_fragment();

	// $ANTLR start synpred149_Java
	private void synpred149_Java_fragment()
	{
		EnterRule_synpred149_Java_fragment();
		EnterRule("synpred149_Java_fragment", 273);
		var retval = new Antlr3AstNode("synpred149_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:872:9: ( IDENTIFIER ':' statement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:872:9: IDENTIFIER ':' statement
			{
			DebugLocation(872, 9);
			Match(input,IDENTIFIER,Follow._IDENTIFIER_in_synpred149_Java4652); if (state.failed) return;
			DebugLocation(872, 20);
			Match(input,COLON,Follow._COLON_in_synpred149_Java4654); if (state.failed) return;
			DebugLocation(872, 24);
			PushFollow(Follow._statement_in_synpred149_Java4656);
			statement();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred149_Java_fragment", 273);
			LeaveRule("synpred149_Java_fragment", 273);
			LeaveRule_synpred149_Java_fragment();
		}
	}
	// $ANTLR end synpred149_Java

	partial void EnterRule_synpred153_Java_fragment();
	partial void LeaveRule_synpred153_Java_fragment();

	// $ANTLR start synpred153_Java
	private void synpred153_Java_fragment()
	{
		EnterRule_synpred153_Java_fragment();
		EnterRule("synpred153_Java_fragment", 277);
		var retval = new Antlr3AstNode("synpred153_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:896:13: ( catches 'finally' block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:896:13: catches 'finally' block
			{
			DebugLocation(896, 13);
			PushFollow(Follow._catches_in_synpred153_Java4812);
			catches();
			PopFollow();
			if (state.failed) return;
			DebugLocation(896, 21);
			Match(input,FINALLY,Follow._FINALLY_in_synpred153_Java4814); if (state.failed) return;
			DebugLocation(896, 31);
			PushFollow(Follow._block_in_synpred153_Java4816);
			block();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred153_Java_fragment", 277);
			LeaveRule("synpred153_Java_fragment", 277);
			LeaveRule_synpred153_Java_fragment();
		}
	}
	// $ANTLR end synpred153_Java

	partial void EnterRule_synpred154_Java_fragment();
	partial void LeaveRule_synpred154_Java_fragment();

	// $ANTLR start synpred154_Java
	private void synpred154_Java_fragment()
	{
		EnterRule_synpred154_Java_fragment();
		EnterRule("synpred154_Java_fragment", 278);
		var retval = new Antlr3AstNode("synpred154_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:897:13: ( catches )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:897:13: catches
			{
			DebugLocation(897, 13);
			PushFollow(Follow._catches_in_synpred154_Java4830);
			catches();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred154_Java_fragment", 278);
			LeaveRule("synpred154_Java_fragment", 278);
			LeaveRule_synpred154_Java_fragment();
		}
	}
	// $ANTLR end synpred154_Java

	partial void EnterRule_synpred158_Java_fragment();
	partial void LeaveRule_synpred158_Java_fragment();

	// $ANTLR start synpred158_Java
	private void synpred158_Java_fragment()
	{
		EnterRule_synpred158_Java_fragment();
		EnterRule("synpred158_Java_fragment", 282);
		var retval = new Antlr3AstNode("synpred158_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:915:9: ( variableModifiers catchType IDENTIFIER ( '[' ']' )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:915:9: variableModifiers catchType IDENTIFIER ( '[' ']' )*
			{
			DebugLocation(915, 9);
			PushFollow(Follow._variableModifiers_in_synpred158_Java4966);
			variableModifiers();
			PopFollow();
			if (state.failed) return;
			DebugLocation(915, 27);
			PushFollow(Follow._catchType_in_synpred158_Java4968);
			catchType();
			PopFollow();
			if (state.failed) return;
			DebugLocation(915, 37);
			Match(input,IDENTIFIER,Follow._IDENTIFIER_in_synpred158_Java4970); if (state.failed) return;
			DebugLocation(916, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:916:9: ( '[' ']' )*
			try { DebugEnterSubRule(197);
			while (true)
			{
				int alt197=2;
				try { DebugEnterDecision(197, false);
				int LA197_1 = input.LA(1);

				if ((LA197_1==LBRACKET))
				{
					alt197 = 1;
				}


				} finally { DebugExitDecision(197); }
				switch ( alt197 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:916:10: '[' ']'
					{
					DebugLocation(916, 10);
					Match(input,LBRACKET,Follow._LBRACKET_in_synpred158_Java4981); if (state.failed) return;
					DebugLocation(916, 14);
					Match(input,RBRACKET,Follow._RBRACKET_in_synpred158_Java4983); if (state.failed) return;

					}
					break;

				default:
					goto loop197;
				}
			}

			loop197:
				;

			} finally { DebugExitSubRule(197); }


			}

		}
		finally
		{
			TraceOut("synpred158_Java_fragment", 282);
			LeaveRule("synpred158_Java_fragment", 282);
			LeaveRule_synpred158_Java_fragment();
		}
	}
	// $ANTLR end synpred158_Java

	partial void EnterRule_synpred161_Java_fragment();
	partial void LeaveRule_synpred161_Java_fragment();

	// $ANTLR start synpred161_Java
	private void synpred161_Java_fragment()
	{
		EnterRule_synpred161_Java_fragment();
		EnterRule("synpred161_Java_fragment", 285);
		var retval = new Antlr3AstNode("synpred161_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:931:14: ( block catches 'finally' block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:931:14: block catches 'finally' block
			{
			DebugLocation(931, 14);
			PushFollow(Follow._block_in_synpred161_Java5110);
			block();
			PopFollow();
			if (state.failed) return;
			DebugLocation(931, 20);
			PushFollow(Follow._catches_in_synpred161_Java5112);
			catches();
			PopFollow();
			if (state.failed) return;
			DebugLocation(931, 28);
			Match(input,FINALLY,Follow._FINALLY_in_synpred161_Java5114); if (state.failed) return;
			DebugLocation(931, 38);
			PushFollow(Follow._block_in_synpred161_Java5116);
			block();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred161_Java_fragment", 285);
			LeaveRule("synpred161_Java_fragment", 285);
			LeaveRule_synpred161_Java_fragment();
		}
	}
	// $ANTLR end synpred161_Java

	partial void EnterRule_synpred162_Java_fragment();
	partial void LeaveRule_synpred162_Java_fragment();

	// $ANTLR start synpred162_Java
	private void synpred162_Java_fragment()
	{
		EnterRule_synpred162_Java_fragment();
		EnterRule("synpred162_Java_fragment", 286);
		var retval = new Antlr3AstNode("synpred162_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:932:14: ( block 'filly' block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:932:14: block 'filly' block
			{
			DebugLocation(932, 14);
			PushFollow(Follow._block_in_synpred162_Java5131);
			block();
			PopFollow();
			if (state.failed) return;
			DebugLocation(932, 20);
			Match(input,119,Follow._119_in_synpred162_Java5133); if (state.failed) return;
			DebugLocation(932, 28);
			PushFollow(Follow._block_in_synpred162_Java5135);
			block();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred162_Java_fragment", 286);
			LeaveRule("synpred162_Java_fragment", 286);
			LeaveRule_synpred162_Java_fragment();
		}
	}
	// $ANTLR end synpred162_Java

	partial void EnterRule_synpred163_Java_fragment();
	partial void LeaveRule_synpred163_Java_fragment();

	// $ANTLR start synpred163_Java
	private void synpred163_Java_fragment()
	{
		EnterRule_synpred163_Java_fragment();
		EnterRule("synpred163_Java_fragment", 287);
		var retval = new Antlr3AstNode("synpred163_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:933:14: ( block catches )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:933:14: block catches
			{
			DebugLocation(933, 14);
			PushFollow(Follow._block_in_synpred163_Java5150);
			block();
			PopFollow();
			if (state.failed) return;
			DebugLocation(933, 20);
			PushFollow(Follow._catches_in_synpred163_Java5152);
			catches();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred163_Java_fragment", 287);
			LeaveRule("synpred163_Java_fragment", 287);
			LeaveRule_synpred163_Java_fragment();
		}
	}
	// $ANTLR end synpred163_Java

	partial void EnterRule_synpred165_Java_fragment();
	partial void LeaveRule_synpred165_Java_fragment();

	// $ANTLR start synpred165_Java
	private void synpred165_Java_fragment()
	{
		EnterRule_synpred165_Java_fragment();
		EnterRule("synpred165_Java_fragment", 289);
		var retval = new Antlr3AstNode("synpred165_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:946:10: ( resource )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:946:10: resource
			{
			DebugLocation(946, 10);
			PushFollow(Follow._resource_in_synpred165_Java5265);
			resource();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred165_Java_fragment", 289);
			LeaveRule("synpred165_Java_fragment", 289);
			LeaveRule_synpred165_Java_fragment();
		}
	}
	// $ANTLR end synpred165_Java

	partial void EnterRule_synpred167_Java_fragment();
	partial void LeaveRule_synpred167_Java_fragment();

	// $ANTLR start synpred167_Java
	private void synpred167_Java_fragment()
	{
		EnterRule_synpred167_Java_fragment();
		EnterRule("synpred167_Java_fragment", 291);
		var retval = new Antlr3AstNode("synpred167_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:953:14: ( variableModifiers type IDENTIFIER )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:953:14: variableModifiers type IDENTIFIER
			{
			DebugLocation(953, 14);
			PushFollow(Follow._variableModifiers_in_synpred167_Java5330);
			variableModifiers();
			PopFollow();
			if (state.failed) return;
			DebugLocation(953, 32);
			PushFollow(Follow._type_in_synpred167_Java5332);
			type();
			PopFollow();
			if (state.failed) return;
			DebugLocation(953, 37);
			Match(input,IDENTIFIER,Follow._IDENTIFIER_in_synpred167_Java5334); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred167_Java_fragment", 291);
			LeaveRule("synpred167_Java_fragment", 291);
			LeaveRule_synpred167_Java_fragment();
		}
	}
	// $ANTLR end synpred167_Java

	partial void EnterRule_synpred169_Java_fragment();
	partial void LeaveRule_synpred169_Java_fragment();

	// $ANTLR start synpred169_Java
	private void synpred169_Java_fragment()
	{
		EnterRule_synpred169_Java_fragment();
		EnterRule("synpred169_Java_fragment", 293);
		var retval = new Antlr3AstNode("synpred169_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:964:9: ( 'for' '(' variableModifiers type IDENTIFIER ':' expression ')' statement )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:964:9: 'for' '(' variableModifiers type IDENTIFIER ':' expression ')' statement
			{
			DebugLocation(964, 9);
			Match(input,FOR,Follow._FOR_in_synpred169_Java5443); if (state.failed) return;
			DebugLocation(964, 15);
			Match(input,LPAREN,Follow._LPAREN_in_synpred169_Java5445); if (state.failed) return;
			DebugLocation(964, 19);
			PushFollow(Follow._variableModifiers_in_synpred169_Java5447);
			variableModifiers();
			PopFollow();
			if (state.failed) return;
			DebugLocation(964, 37);
			PushFollow(Follow._type_in_synpred169_Java5449);
			type();
			PopFollow();
			if (state.failed) return;
			DebugLocation(964, 42);
			Match(input,IDENTIFIER,Follow._IDENTIFIER_in_synpred169_Java5451); if (state.failed) return;
			DebugLocation(964, 53);
			Match(input,COLON,Follow._COLON_in_synpred169_Java5453); if (state.failed) return;
			DebugLocation(965, 9);
			PushFollow(Follow._expression_in_synpred169_Java5464);
			expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(965, 20);
			Match(input,RPAREN,Follow._RPAREN_in_synpred169_Java5466); if (state.failed) return;
			DebugLocation(965, 24);
			PushFollow(Follow._statement_in_synpred169_Java5468);
			statement();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred169_Java_fragment", 293);
			LeaveRule("synpred169_Java_fragment", 293);
			LeaveRule_synpred169_Java_fragment();
		}
	}
	// $ANTLR end synpred169_Java

	partial void EnterRule_synpred173_Java_fragment();
	partial void LeaveRule_synpred173_Java_fragment();

	// $ANTLR start synpred173_Java
	private void synpred173_Java_fragment()
	{
		EnterRule_synpred173_Java_fragment();
		EnterRule("synpred173_Java_fragment", 297);
		var retval = new Antlr3AstNode("synpred173_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:978:9: ( localVariableDeclaration )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:978:9: localVariableDeclaration
			{
			DebugLocation(978, 9);
			PushFollow(Follow._localVariableDeclaration_in_synpred173_Java5647);
			localVariableDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred173_Java_fragment", 297);
			LeaveRule("synpred173_Java_fragment", 297);
			LeaveRule_synpred173_Java_fragment();
		}
	}
	// $ANTLR end synpred173_Java

	partial void EnterRule_synpred214_Java_fragment();
	partial void LeaveRule_synpred214_Java_fragment();

	// $ANTLR start synpred214_Java
	private void synpred214_Java_fragment()
	{
		EnterRule_synpred214_Java_fragment();
		EnterRule("synpred214_Java_fragment", 338);
		var retval = new Antlr3AstNode("synpred214_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1132:9: ( castExpression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1132:9: castExpression
			{
			DebugLocation(1132, 9);
			PushFollow(Follow._castExpression_in_synpred214_Java6892);
			castExpression();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred214_Java_fragment", 338);
			LeaveRule("synpred214_Java_fragment", 338);
			LeaveRule_synpred214_Java_fragment();
		}
	}
	// $ANTLR end synpred214_Java

	partial void EnterRule_synpred218_Java_fragment();
	partial void LeaveRule_synpred218_Java_fragment();

	// $ANTLR start synpred218_Java
	private void synpred218_Java_fragment()
	{
		EnterRule_synpred218_Java_fragment();
		EnterRule("synpred218_Java_fragment", 342);
		var retval = new Antlr3AstNode("synpred218_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1142:9: ( '(' primitiveType ')' unaryExpression )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1142:9: '(' primitiveType ')' unaryExpression
			{
			DebugLocation(1142, 9);
			Match(input,LPAREN,Follow._LPAREN_in_synpred218_Java6983); if (state.failed) return;
			DebugLocation(1142, 13);
			PushFollow(Follow._primitiveType_in_synpred218_Java6985);
			primitiveType();
			PopFollow();
			if (state.failed) return;
			DebugLocation(1142, 27);
			Match(input,RPAREN,Follow._RPAREN_in_synpred218_Java6987); if (state.failed) return;
			DebugLocation(1142, 31);
			PushFollow(Follow._unaryExpression_in_synpred218_Java6989);
			unaryExpression();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred218_Java_fragment", 342);
			LeaveRule("synpred218_Java_fragment", 342);
			LeaveRule_synpred218_Java_fragment();
		}
	}
	// $ANTLR end synpred218_Java

	partial void EnterRule_synpred220_Java_fragment();
	partial void LeaveRule_synpred220_Java_fragment();

	// $ANTLR start synpred220_Java
	private void synpred220_Java_fragment()
	{
		EnterRule_synpred220_Java_fragment();
		EnterRule("synpred220_Java_fragment", 344);
		var retval = new Antlr3AstNode("synpred220_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1152:10: ( '.' IDENTIFIER )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1152:10: '.' IDENTIFIER
			{
			DebugLocation(1152, 10);
			Match(input,DOT,Follow._DOT_in_synpred220_Java7060); if (state.failed) return;
			DebugLocation(1152, 14);
			Match(input,IDENTIFIER,Follow._IDENTIFIER_in_synpred220_Java7062); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred220_Java_fragment", 344);
			LeaveRule("synpred220_Java_fragment", 344);
			LeaveRule_synpred220_Java_fragment();
		}
	}
	// $ANTLR end synpred220_Java

	partial void EnterRule_synpred221_Java_fragment();
	partial void LeaveRule_synpred221_Java_fragment();

	// $ANTLR start synpred221_Java
	private void synpred221_Java_fragment()
	{
		EnterRule_synpred221_Java_fragment();
		EnterRule("synpred221_Java_fragment", 345);
		var retval = new Antlr3AstNode("synpred221_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1154:10: ( identifierSuffix )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1154:10: identifierSuffix
			{
			DebugLocation(1154, 10);
			PushFollow(Follow._identifierSuffix_in_synpred221_Java7084);
			identifierSuffix();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred221_Java_fragment", 345);
			LeaveRule("synpred221_Java_fragment", 345);
			LeaveRule_synpred221_Java_fragment();
		}
	}
	// $ANTLR end synpred221_Java

	partial void EnterRule_synpred223_Java_fragment();
	partial void LeaveRule_synpred223_Java_fragment();

	// $ANTLR start synpred223_Java
	private void synpred223_Java_fragment()
	{
		EnterRule_synpred223_Java_fragment();
		EnterRule("synpred223_Java_fragment", 347);
		var retval = new Antlr3AstNode("synpred223_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1157:10: ( '.' IDENTIFIER )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1157:10: '.' IDENTIFIER
			{
			DebugLocation(1157, 10);
			Match(input,DOT,Follow._DOT_in_synpred223_Java7116); if (state.failed) return;
			DebugLocation(1157, 14);
			Match(input,IDENTIFIER,Follow._IDENTIFIER_in_synpred223_Java7118); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred223_Java_fragment", 347);
			LeaveRule("synpred223_Java_fragment", 347);
			LeaveRule_synpred223_Java_fragment();
		}
	}
	// $ANTLR end synpred223_Java

	partial void EnterRule_synpred224_Java_fragment();
	partial void LeaveRule_synpred224_Java_fragment();

	// $ANTLR start synpred224_Java
	private void synpred224_Java_fragment()
	{
		EnterRule_synpred224_Java_fragment();
		EnterRule("synpred224_Java_fragment", 348);
		var retval = new Antlr3AstNode("synpred224_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1159:10: ( identifierSuffix )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1159:10: identifierSuffix
			{
			DebugLocation(1159, 10);
			PushFollow(Follow._identifierSuffix_in_synpred224_Java7140);
			identifierSuffix();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred224_Java_fragment", 348);
			LeaveRule("synpred224_Java_fragment", 348);
			LeaveRule_synpred224_Java_fragment();
		}
	}
	// $ANTLR end synpred224_Java

	partial void EnterRule_synpred236_Java_fragment();
	partial void LeaveRule_synpred236_Java_fragment();

	// $ANTLR start synpred236_Java
	private void synpred236_Java_fragment()
	{
		EnterRule_synpred236_Java_fragment();
		EnterRule("synpred236_Java_fragment", 360);
		var retval = new Antlr3AstNode("synpred236_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1187:10: ( '[' expression ']' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1187:10: '[' expression ']'
			{
			DebugLocation(1187, 10);
			Match(input,LBRACKET,Follow._LBRACKET_in_synpred236_Java7391); if (state.failed) return;
			DebugLocation(1187, 14);
			PushFollow(Follow._expression_in_synpred236_Java7393);
			expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(1187, 25);
			Match(input,RBRACKET,Follow._RBRACKET_in_synpred236_Java7395); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred236_Java_fragment", 360);
			LeaveRule("synpred236_Java_fragment", 360);
			LeaveRule_synpred236_Java_fragment();
		}
	}
	// $ANTLR end synpred236_Java

	partial void EnterRule_synpred249_Java_fragment();
	partial void LeaveRule_synpred249_Java_fragment();

	// $ANTLR start synpred249_Java
	private void synpred249_Java_fragment()
	{
		EnterRule_synpred249_Java_fragment();
		EnterRule("synpred249_Java_fragment", 373);
		var retval = new Antlr3AstNode("synpred249_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1209:9: ( 'new' nonWildcardTypeArguments classOrInterfaceType classCreatorRest )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1209:9: 'new' nonWildcardTypeArguments classOrInterfaceType classCreatorRest
			{
			DebugLocation(1209, 9);
			Match(input,NEW,Follow._NEW_in_synpred249_Java7602); if (state.failed) return;
			DebugLocation(1209, 15);
			PushFollow(Follow._nonWildcardTypeArguments_in_synpred249_Java7604);
			nonWildcardTypeArguments();
			PopFollow();
			if (state.failed) return;
			DebugLocation(1209, 40);
			PushFollow(Follow._classOrInterfaceType_in_synpred249_Java7606);
			classOrInterfaceType();
			PopFollow();
			if (state.failed) return;
			DebugLocation(1209, 61);
			PushFollow(Follow._classCreatorRest_in_synpred249_Java7608);
			classCreatorRest();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred249_Java_fragment", 373);
			LeaveRule("synpred249_Java_fragment", 373);
			LeaveRule_synpred249_Java_fragment();
		}
	}
	// $ANTLR end synpred249_Java

	partial void EnterRule_synpred250_Java_fragment();
	partial void LeaveRule_synpred250_Java_fragment();

	// $ANTLR start synpred250_Java
	private void synpred250_Java_fragment()
	{
		EnterRule_synpred250_Java_fragment();
		EnterRule("synpred250_Java_fragment", 374);
		var retval = new Antlr3AstNode("synpred250_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1210:9: ( 'new' classOrInterfaceType classCreatorRest )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1210:9: 'new' classOrInterfaceType classCreatorRest
			{
			DebugLocation(1210, 9);
			Match(input,NEW,Follow._NEW_in_synpred250_Java7618); if (state.failed) return;
			DebugLocation(1210, 15);
			PushFollow(Follow._classOrInterfaceType_in_synpred250_Java7620);
			classOrInterfaceType();
			PopFollow();
			if (state.failed) return;
			DebugLocation(1210, 36);
			PushFollow(Follow._classCreatorRest_in_synpred250_Java7622);
			classCreatorRest();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred250_Java_fragment", 374);
			LeaveRule("synpred250_Java_fragment", 374);
			LeaveRule_synpred250_Java_fragment();
		}
	}
	// $ANTLR end synpred250_Java

	partial void EnterRule_synpred252_Java_fragment();
	partial void LeaveRule_synpred252_Java_fragment();

	// $ANTLR start synpred252_Java
	private void synpred252_Java_fragment()
	{
		EnterRule_synpred252_Java_fragment();
		EnterRule("synpred252_Java_fragment", 376);
		var retval = new Antlr3AstNode("synpred252_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1215:9: ( 'new' createdName '[' ']' ( '[' ']' )* arrayInitializer )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1215:9: 'new' createdName '[' ']' ( '[' ']' )* arrayInitializer
			{
			DebugLocation(1215, 9);
			Match(input,NEW,Follow._NEW_in_synpred252_Java7652); if (state.failed) return;
			DebugLocation(1215, 15);
			PushFollow(Follow._createdName_in_synpred252_Java7654);
			createdName();
			PopFollow();
			if (state.failed) return;
			DebugLocation(1216, 9);
			Match(input,LBRACKET,Follow._LBRACKET_in_synpred252_Java7664); if (state.failed) return;
			DebugLocation(1216, 13);
			Match(input,RBRACKET,Follow._RBRACKET_in_synpred252_Java7666); if (state.failed) return;
			DebugLocation(1217, 9);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1217:9: ( '[' ']' )*
			try { DebugEnterSubRule(206);
			while (true)
			{
				int alt206=2;
				try { DebugEnterDecision(206, false);
				int LA206_1 = input.LA(1);

				if ((LA206_1==LBRACKET))
				{
					alt206 = 1;
				}


				} finally { DebugExitDecision(206); }
				switch ( alt206 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1217:10: '[' ']'
					{
					DebugLocation(1217, 10);
					Match(input,LBRACKET,Follow._LBRACKET_in_synpred252_Java7677); if (state.failed) return;
					DebugLocation(1217, 14);
					Match(input,RBRACKET,Follow._RBRACKET_in_synpred252_Java7679); if (state.failed) return;

					}
					break;

				default:
					goto loop206;
				}
			}

			loop206:
				;

			} finally { DebugExitSubRule(206); }

			DebugLocation(1219, 9);
			PushFollow(Follow._arrayInitializer_in_synpred252_Java7700);
			arrayInitializer();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred252_Java_fragment", 376);
			LeaveRule("synpred252_Java_fragment", 376);
			LeaveRule_synpred252_Java_fragment();
		}
	}
	// $ANTLR end synpred252_Java

	partial void EnterRule_synpred253_Java_fragment();
	partial void LeaveRule_synpred253_Java_fragment();

	// $ANTLR start synpred253_Java
	private void synpred253_Java_fragment()
	{
		EnterRule_synpred253_Java_fragment();
		EnterRule("synpred253_Java_fragment", 377);
		var retval = new Antlr3AstNode("synpred253_Java_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1224:13: ( '[' expression ']' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages.ANTLRv3\\Processors\\Java\\Java.g:1224:13: '[' expression ']'
			{
			DebugLocation(1224, 13);
			Match(input,LBRACKET,Follow._LBRACKET_in_synpred253_Java7749); if (state.failed) return;
			DebugLocation(1224, 17);
			PushFollow(Follow._expression_in_synpred253_Java7751);
			expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(1225, 13);
			Match(input,RBRACKET,Follow._RBRACKET_in_synpred253_Java7765); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred253_Java_fragment", 377);
			LeaveRule("synpred253_Java_fragment", 377);
			LeaveRule_synpred253_Java_fragment();
		}
	}
	// $ANTLR end synpred253_Java
	#endregion Rules

	#region Synpreds
	private bool EvaluatePredicate(System.Action fragment)
	{
		bool success = false;
		state.backtracking++;
		try { DebugBeginBacktrack(state.backtracking);
		int start = input.Mark();
		try
		{
			fragment();
		}
		catch ( RecognitionException re )
		{
			System.Console.Error.WriteLine("impossible: "+re);
		}
		success = !state.failed;
		input.Rewind(start);
		} finally { DebugEndBacktrack(state.backtracking, success); }
		state.backtracking--;
		state.failed=false;
		return success;
	}
	#endregion Synpreds


	#region Follow sets
	private static class Follow
	{
		public static readonly BitSet _annotations_in_compilationUnit118 = new BitSet(new ulong[]{0x0UL,0x4000UL});
		public static readonly BitSet _packageDeclaration_in_compilationUnit147 = new BitSet(new ulong[]{0x1200102000800012UL,0x11040C10700600UL});
		public static readonly BitSet _importDeclaration_in_compilationUnit169 = new BitSet(new ulong[]{0x1200102000800012UL,0x11040C10700600UL});
		public static readonly BitSet _typeDeclaration_in_compilationUnit191 = new BitSet(new ulong[]{0x1000102000800012UL,0x11040C10700600UL});
		public static readonly BitSet _PACKAGE_in_packageDeclaration222 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _qualifiedName_in_packageDeclaration224 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_packageDeclaration234 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IMPORT_in_importDeclaration255 = new BitSet(new ulong[]{0x40000000000000UL,0x400000000UL});
		public static readonly BitSet _STATIC_in_importDeclaration267 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_importDeclaration288 = new BitSet(new ulong[]{0x80000000UL});
		public static readonly BitSet _DOT_in_importDeclaration290 = new BitSet(new ulong[]{0x0UL,0x100000000UL});
		public static readonly BitSet _STAR_in_importDeclaration292 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_importDeclaration302 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IMPORT_in_importDeclaration319 = new BitSet(new ulong[]{0x40000000000000UL,0x400000000UL});
		public static readonly BitSet _STATIC_in_importDeclaration331 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_importDeclaration352 = new BitSet(new ulong[]{0x80000000UL});
		public static readonly BitSet _DOT_in_importDeclaration363 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_importDeclaration365 = new BitSet(new ulong[]{0x80000000UL,0x10000000UL});
		public static readonly BitSet _DOT_in_importDeclaration387 = new BitSet(new ulong[]{0x0UL,0x100000000UL});
		public static readonly BitSet _STAR_in_importDeclaration389 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_importDeclaration410 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IDENTIFIER_in_qualifiedImportName430 = new BitSet(new ulong[]{0x80000002UL});
		public static readonly BitSet _DOT_in_qualifiedImportName441 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_qualifiedImportName443 = new BitSet(new ulong[]{0x80000002UL});
		public static readonly BitSet _classOrInterfaceDeclaration_in_typeDeclaration474 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SEMI_in_typeDeclaration484 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classDeclaration_in_classOrInterfaceDeclaration505 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceDeclaration_in_classOrInterfaceDeclaration515 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotation_in_modifiers550 = new BitSet(new ulong[]{0x100000000012UL,0x11040C00700600UL});
		public static readonly BitSet _PUBLIC_in_modifiers560 = new BitSet(new ulong[]{0x100000000012UL,0x11040C00700600UL});
		public static readonly BitSet _PROTECTED_in_modifiers570 = new BitSet(new ulong[]{0x100000000012UL,0x11040C00700600UL});
		public static readonly BitSet _PRIVATE_in_modifiers580 = new BitSet(new ulong[]{0x100000000012UL,0x11040C00700600UL});
		public static readonly BitSet _STATIC_in_modifiers590 = new BitSet(new ulong[]{0x100000000012UL,0x11040C00700600UL});
		public static readonly BitSet _ABSTRACT_in_modifiers600 = new BitSet(new ulong[]{0x100000000012UL,0x11040C00700600UL});
		public static readonly BitSet _FINAL_in_modifiers610 = new BitSet(new ulong[]{0x100000000012UL,0x11040C00700600UL});
		public static readonly BitSet _NATIVE_in_modifiers620 = new BitSet(new ulong[]{0x100000000012UL,0x11040C00700600UL});
		public static readonly BitSet _SYNCHRONIZED_in_modifiers630 = new BitSet(new ulong[]{0x100000000012UL,0x11040C00700600UL});
		public static readonly BitSet _TRANSIENT_in_modifiers640 = new BitSet(new ulong[]{0x100000000012UL,0x11040C00700600UL});
		public static readonly BitSet _VOLATILE_in_modifiers650 = new BitSet(new ulong[]{0x100000000012UL,0x11040C00700600UL});
		public static readonly BitSet _STRICTFP_in_modifiers660 = new BitSet(new ulong[]{0x100000000012UL,0x11040C00700600UL});
		public static readonly BitSet _FINAL_in_variableModifiers692 = new BitSet(new ulong[]{0x100000000002UL,0x200UL});
		public static readonly BitSet _annotation_in_variableModifiers706 = new BitSet(new ulong[]{0x100000000002UL,0x200UL});
		public static readonly BitSet _normalClassDeclaration_in_classDeclaration742 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enumDeclaration_in_classDeclaration752 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_normalClassDeclaration772 = new BitSet(new ulong[]{0x800000UL});
		public static readonly BitSet _CLASS_in_normalClassDeclaration775 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_normalClassDeclaration777 = new BitSet(new ulong[]{0x100010000000000UL,0x82UL});
		public static readonly BitSet _typeParameters_in_normalClassDeclaration788 = new BitSet(new ulong[]{0x100010000000000UL,0x2UL});
		public static readonly BitSet _EXTENDS_in_normalClassDeclaration810 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _type_in_normalClassDeclaration812 = new BitSet(new ulong[]{0x100000000000000UL,0x2UL});
		public static readonly BitSet _IMPLEMENTS_in_normalClassDeclaration834 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _typeList_in_normalClassDeclaration836 = new BitSet(new ulong[]{0x0UL,0x2UL});
		public static readonly BitSet _classBody_in_normalClassDeclaration869 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LT_in_typeParameters890 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _typeParameter_in_typeParameters904 = new BitSet(new ulong[]{0x8000002000000UL});
		public static readonly BitSet _COMMA_in_typeParameters919 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _typeParameter_in_typeParameters921 = new BitSet(new ulong[]{0x8000002000000UL});
		public static readonly BitSet _GT_in_typeParameters946 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IDENTIFIER_in_typeParameter966 = new BitSet(new ulong[]{0x10000000002UL});
		public static readonly BitSet _EXTENDS_in_typeParameter977 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _typeBound_in_typeParameter979 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_typeBound1011 = new BitSet(new ulong[]{0x22UL});
		public static readonly BitSet _AMP_in_typeBound1022 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _type_in_typeBound1024 = new BitSet(new ulong[]{0x22UL});
		public static readonly BitSet _modifiers_in_enumDeclaration1056 = new BitSet(new ulong[]{0x2000000000UL});
		public static readonly BitSet _ENUM_in_enumDeclaration1068 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_enumDeclaration1089 = new BitSet(new ulong[]{0x100000000000000UL,0x2UL});
		public static readonly BitSet _IMPLEMENTS_in_enumDeclaration1100 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _typeList_in_enumDeclaration1102 = new BitSet(new ulong[]{0x0UL,0x2UL});
		public static readonly BitSet _enumBody_in_enumDeclaration1123 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LBRACE_in_enumBody1148 = new BitSet(new ulong[]{0x40000002000000UL,0x11000200UL});
		public static readonly BitSet _enumConstants_in_enumBody1159 = new BitSet(new ulong[]{0x2000000UL,0x11000000UL});
		public static readonly BitSet _COMMA_in_enumBody1181 = new BitSet(new ulong[]{0x0UL,0x11000000UL});
		public static readonly BitSet _enumBodyDeclarations_in_enumBody1194 = new BitSet(new ulong[]{0x0UL,0x1000000UL});
		public static readonly BitSet _RBRACE_in_enumBody1216 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enumConstant_in_enumConstants1236 = new BitSet(new ulong[]{0x2000002UL});
		public static readonly BitSet _COMMA_in_enumConstants1247 = new BitSet(new ulong[]{0x40000000000000UL,0x200UL});
		public static readonly BitSet _enumConstant_in_enumConstants1249 = new BitSet(new ulong[]{0x2000002UL});
		public static readonly BitSet _annotations_in_enumConstant1283 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_enumConstant1304 = new BitSet(new ulong[]{0x2UL,0x42UL});
		public static readonly BitSet _arguments_in_enumConstant1315 = new BitSet(new ulong[]{0x2UL,0x2UL});
		public static readonly BitSet _classBody_in_enumConstant1337 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SEMI_in_enumBodyDeclarations1378 = new BitSet(new ulong[]{0x1840502100A14012UL,0x19040C30700692UL});
		public static readonly BitSet _classBodyDeclaration_in_enumBodyDeclarations1390 = new BitSet(new ulong[]{0x1840502100A14012UL,0x19040C30700692UL});
		public static readonly BitSet _normalInterfaceDeclaration_in_interfaceDeclaration1421 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotationTypeDeclaration_in_interfaceDeclaration1431 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_normalInterfaceDeclaration1455 = new BitSet(new ulong[]{0x1000000000000000UL});
		public static readonly BitSet _INTERFACE_in_normalInterfaceDeclaration1457 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_normalInterfaceDeclaration1459 = new BitSet(new ulong[]{0x10000000000UL,0x82UL});
		public static readonly BitSet _typeParameters_in_normalInterfaceDeclaration1470 = new BitSet(new ulong[]{0x10000000000UL,0x2UL});
		public static readonly BitSet _EXTENDS_in_normalInterfaceDeclaration1492 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _typeList_in_normalInterfaceDeclaration1494 = new BitSet(new ulong[]{0x0UL,0x2UL});
		public static readonly BitSet _interfaceBody_in_normalInterfaceDeclaration1515 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_typeList1535 = new BitSet(new ulong[]{0x2000002UL});
		public static readonly BitSet _COMMA_in_typeList1546 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _type_in_typeList1548 = new BitSet(new ulong[]{0x2000002UL});
		public static readonly BitSet _LBRACE_in_classBody1579 = new BitSet(new ulong[]{0x1840502100A14010UL,0x19040C31700692UL});
		public static readonly BitSet _classBodyDeclaration_in_classBody1591 = new BitSet(new ulong[]{0x1840502100A14010UL,0x19040C31700692UL});
		public static readonly BitSet _RBRACE_in_classBody1613 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LBRACE_in_interfaceBody1633 = new BitSet(new ulong[]{0x1840502100A14010UL,0x19040C31700690UL});
		public static readonly BitSet _interfaceBodyDeclaration_in_interfaceBody1645 = new BitSet(new ulong[]{0x1840502100A14010UL,0x19040C31700690UL});
		public static readonly BitSet _RBRACE_in_interfaceBody1667 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SEMI_in_classBodyDeclaration1687 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _STATIC_in_classBodyDeclaration1698 = new BitSet(new ulong[]{0x0UL,0x2UL});
		public static readonly BitSet _block_in_classBodyDeclaration1720 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _memberDecl_in_classBodyDeclaration1730 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _fieldDeclaration_in_memberDecl1751 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _methodDeclaration_in_memberDecl1762 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classDeclaration_in_memberDecl1773 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceDeclaration_in_memberDecl1784 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_methodDeclaration1822 = new BitSet(new ulong[]{0x40000000000000UL,0x80UL});
		public static readonly BitSet _typeParameters_in_methodDeclaration1833 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_methodDeclaration1854 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _formalParameters_in_methodDeclaration1864 = new BitSet(new ulong[]{0x0UL,0x400000000002UL});
		public static readonly BitSet _THROWS_in_methodDeclaration1875 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _qualifiedNameList_in_methodDeclaration1877 = new BitSet(new ulong[]{0x0UL,0x2UL});
		public static readonly BitSet _LBRACE_in_methodDeclaration1898 = new BitSet(new ulong[]{0x38C1D82350E1C310UL,0x3FB7BC357A1EF2UL});
		public static readonly BitSet _explicitConstructorInvocation_in_methodDeclaration1910 = new BitSet(new ulong[]{0x38C1D82350E1C310UL,0x3FB7BC357A1E72UL});
		public static readonly BitSet _blockStatement_in_methodDeclaration1932 = new BitSet(new ulong[]{0x38C1D82350E1C310UL,0x3FB7BC357A1E72UL});
		public static readonly BitSet _RBRACE_in_methodDeclaration1953 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_methodDeclaration1963 = new BitSet(new ulong[]{0x840400100214000UL,0x8000020000090UL});
		public static readonly BitSet _typeParameters_in_methodDeclaration1974 = new BitSet(new ulong[]{0x840400100214000UL,0x8000020000010UL});
		public static readonly BitSet _type_in_methodDeclaration1996 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _VOID_in_methodDeclaration2010 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_methodDeclaration2030 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _formalParameters_in_methodDeclaration2040 = new BitSet(new ulong[]{0x0UL,0x400010000006UL});
		public static readonly BitSet _LBRACKET_in_methodDeclaration2051 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_methodDeclaration2053 = new BitSet(new ulong[]{0x0UL,0x400010000006UL});
		public static readonly BitSet _THROWS_in_methodDeclaration2075 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _qualifiedNameList_in_methodDeclaration2077 = new BitSet(new ulong[]{0x0UL,0x10000002UL});
		public static readonly BitSet _block_in_methodDeclaration2132 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SEMI_in_methodDeclaration2146 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_fieldDeclaration2178 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _type_in_fieldDeclaration2188 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _variableDeclarator_in_fieldDeclaration2198 = new BitSet(new ulong[]{0x2000000UL,0x10000000UL});
		public static readonly BitSet _COMMA_in_fieldDeclaration2209 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _variableDeclarator_in_fieldDeclaration2211 = new BitSet(new ulong[]{0x2000000UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_fieldDeclaration2232 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IDENTIFIER_in_variableDeclarator2252 = new BitSet(new ulong[]{0x4000000002UL,0x4UL});
		public static readonly BitSet _LBRACKET_in_variableDeclarator2263 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_variableDeclarator2265 = new BitSet(new ulong[]{0x4000000002UL,0x4UL});
		public static readonly BitSet _EQ_in_variableDeclarator2287 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1872UL});
		public static readonly BitSet _variableInitializer_in_variableDeclarator2289 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceFieldDeclaration_in_interfaceBodyDeclaration2328 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceMethodDeclaration_in_interfaceBodyDeclaration2338 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceDeclaration_in_interfaceBodyDeclaration2348 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classDeclaration_in_interfaceBodyDeclaration2358 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SEMI_in_interfaceBodyDeclaration2368 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_interfaceMethodDeclaration2388 = new BitSet(new ulong[]{0x840400100214000UL,0x8000020000090UL});
		public static readonly BitSet _typeParameters_in_interfaceMethodDeclaration2399 = new BitSet(new ulong[]{0x840400100214000UL,0x8000020000010UL});
		public static readonly BitSet _type_in_interfaceMethodDeclaration2421 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _VOID_in_interfaceMethodDeclaration2432 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_interfaceMethodDeclaration2452 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _formalParameters_in_interfaceMethodDeclaration2462 = new BitSet(new ulong[]{0x0UL,0x400010000004UL});
		public static readonly BitSet _LBRACKET_in_interfaceMethodDeclaration2473 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_interfaceMethodDeclaration2475 = new BitSet(new ulong[]{0x0UL,0x400010000004UL});
		public static readonly BitSet _THROWS_in_interfaceMethodDeclaration2497 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _qualifiedNameList_in_interfaceMethodDeclaration2499 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_interfaceMethodDeclaration2512 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_interfaceFieldDeclaration2534 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _type_in_interfaceFieldDeclaration2536 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _variableDeclarator_in_interfaceFieldDeclaration2538 = new BitSet(new ulong[]{0x2000000UL,0x10000000UL});
		public static readonly BitSet _COMMA_in_interfaceFieldDeclaration2549 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _variableDeclarator_in_interfaceFieldDeclaration2551 = new BitSet(new ulong[]{0x2000000UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_interfaceFieldDeclaration2572 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classOrInterfaceType_in_type2593 = new BitSet(new ulong[]{0x2UL,0x4UL});
		public static readonly BitSet _LBRACKET_in_type2604 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_type2606 = new BitSet(new ulong[]{0x2UL,0x4UL});
		public static readonly BitSet _primitiveType_in_type2627 = new BitSet(new ulong[]{0x2UL,0x4UL});
		public static readonly BitSet _LBRACKET_in_type2638 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_type2640 = new BitSet(new ulong[]{0x2UL,0x4UL});
		public static readonly BitSet _IDENTIFIER_in_classOrInterfaceType2672 = new BitSet(new ulong[]{0x80000002UL,0x80UL});
		public static readonly BitSet _typeArguments_in_classOrInterfaceType2683 = new BitSet(new ulong[]{0x80000002UL});
		public static readonly BitSet _DOT_in_classOrInterfaceType2705 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_classOrInterfaceType2707 = new BitSet(new ulong[]{0x80000002UL,0x80UL});
		public static readonly BitSet _typeArguments_in_classOrInterfaceType2722 = new BitSet(new ulong[]{0x80000002UL});
		public static readonly BitSet _LT_in_typeArguments2859 = new BitSet(new ulong[]{0x840400100214000UL,0x20800010UL});
		public static readonly BitSet _typeArgument_in_typeArguments2861 = new BitSet(new ulong[]{0x8000002000000UL});
		public static readonly BitSet _COMMA_in_typeArguments2872 = new BitSet(new ulong[]{0x840400100214000UL,0x20800010UL});
		public static readonly BitSet _typeArgument_in_typeArguments2874 = new BitSet(new ulong[]{0x8000002000000UL});
		public static readonly BitSet _GT_in_typeArguments2896 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_typeArgument2916 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _QUES_in_typeArgument2926 = new BitSet(new ulong[]{0x10000000002UL,0x10000000000UL});
		public static readonly BitSet _set_in_typeArgument2950 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _type_in_typeArgument2994 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _qualifiedName_in_qualifiedNameList3025 = new BitSet(new ulong[]{0x2000002UL});
		public static readonly BitSet _COMMA_in_qualifiedNameList3036 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _qualifiedName_in_qualifiedNameList3038 = new BitSet(new ulong[]{0x2000002UL});
		public static readonly BitSet _LPAREN_in_formalParameters3069 = new BitSet(new ulong[]{0x840500100214000UL,0x28000210UL});
		public static readonly BitSet _formalParameterDecls_in_formalParameters3080 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _RPAREN_in_formalParameters3102 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ellipsisParameterDecl_in_formalParameterDecls3122 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _normalParameterDecl_in_formalParameterDecls3132 = new BitSet(new ulong[]{0x2000002UL});
		public static readonly BitSet _COMMA_in_formalParameterDecls3143 = new BitSet(new ulong[]{0x840500100214000UL,0x20000210UL});
		public static readonly BitSet _normalParameterDecl_in_formalParameterDecls3145 = new BitSet(new ulong[]{0x2000002UL});
		public static readonly BitSet _normalParameterDecl_in_formalParameterDecls3167 = new BitSet(new ulong[]{0x2000000UL});
		public static readonly BitSet _COMMA_in_formalParameterDecls3177 = new BitSet(new ulong[]{0x840500100214000UL,0x20000210UL});
		public static readonly BitSet _ellipsisParameterDecl_in_formalParameterDecls3199 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variableModifiers_in_normalParameterDecl3219 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _type_in_normalParameterDecl3221 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_normalParameterDecl3223 = new BitSet(new ulong[]{0x2UL,0x4UL});
		public static readonly BitSet _LBRACKET_in_normalParameterDecl3234 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_normalParameterDecl3236 = new BitSet(new ulong[]{0x2UL,0x4UL});
		public static readonly BitSet _variableModifiers_in_ellipsisParameterDecl3267 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _type_in_ellipsisParameterDecl3277 = new BitSet(new ulong[]{0x800000000UL});
		public static readonly BitSet _ELLIPSIS_in_ellipsisParameterDecl3280 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_ellipsisParameterDecl3290 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _nonWildcardTypeArguments_in_explicitConstructorInvocation3312 = new BitSet(new ulong[]{0x0UL,0x110000000000UL});
		public static readonly BitSet _set_in_explicitConstructorInvocation3338 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _arguments_in_explicitConstructorInvocation3370 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_explicitConstructorInvocation3372 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _primary_in_explicitConstructorInvocation3383 = new BitSet(new ulong[]{0x80000000UL});
		public static readonly BitSet _DOT_in_explicitConstructorInvocation3393 = new BitSet(new ulong[]{0x0UL,0x10000000080UL});
		public static readonly BitSet _nonWildcardTypeArguments_in_explicitConstructorInvocation3404 = new BitSet(new ulong[]{0x0UL,0x10000000000UL});
		public static readonly BitSet _SUPER_in_explicitConstructorInvocation3425 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _arguments_in_explicitConstructorInvocation3435 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_explicitConstructorInvocation3437 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IDENTIFIER_in_qualifiedName3457 = new BitSet(new ulong[]{0x80000002UL});
		public static readonly BitSet _DOT_in_qualifiedName3468 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_qualifiedName3470 = new BitSet(new ulong[]{0x80000002UL});
		public static readonly BitSet _annotation_in_annotations3502 = new BitSet(new ulong[]{0x2UL,0x200UL});
		public static readonly BitSet _MONKEYS_AT_in_annotation3535 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _qualifiedName_in_annotation3537 = new BitSet(new ulong[]{0x2UL,0x40UL});
		public static readonly BitSet _LPAREN_in_annotation3551 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0280A1A72UL});
		public static readonly BitSet _elementValuePairs_in_annotation3578 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _elementValue_in_annotation3602 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _RPAREN_in_annotation3638 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _elementValuePair_in_elementValuePairs3670 = new BitSet(new ulong[]{0x2000002UL});
		public static readonly BitSet _COMMA_in_elementValuePairs3681 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _elementValuePair_in_elementValuePairs3683 = new BitSet(new ulong[]{0x2000002UL});
		public static readonly BitSet _IDENTIFIER_in_elementValuePair3714 = new BitSet(new ulong[]{0x4000000000UL});
		public static readonly BitSet _EQ_in_elementValuePair3716 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1A72UL});
		public static readonly BitSet _elementValue_in_elementValuePair3718 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _conditionalExpression_in_elementValue3738 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotation_in_elementValue3748 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _elementValueArrayInitializer_in_elementValue3758 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LBRACE_in_elementValueArrayInitializer3778 = new BitSet(new ulong[]{0x2840C80302614200UL,0xA91B0210A1A72UL});
		public static readonly BitSet _elementValue_in_elementValueArrayInitializer3789 = new BitSet(new ulong[]{0x2000000UL,0x1000000UL});
		public static readonly BitSet _COMMA_in_elementValueArrayInitializer3804 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1A72UL});
		public static readonly BitSet _elementValue_in_elementValueArrayInitializer3806 = new BitSet(new ulong[]{0x2000000UL,0x1000000UL});
		public static readonly BitSet _COMMA_in_elementValueArrayInitializer3835 = new BitSet(new ulong[]{0x0UL,0x1000000UL});
		public static readonly BitSet _RBRACE_in_elementValueArrayInitializer3839 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_annotationTypeDeclaration3862 = new BitSet(new ulong[]{0x0UL,0x200UL});
		public static readonly BitSet _MONKEYS_AT_in_annotationTypeDeclaration3864 = new BitSet(new ulong[]{0x1000000000000000UL});
		public static readonly BitSet _INTERFACE_in_annotationTypeDeclaration3874 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_annotationTypeDeclaration3884 = new BitSet(new ulong[]{0x0UL,0x2UL});
		public static readonly BitSet _annotationTypeBody_in_annotationTypeDeclaration3894 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LBRACE_in_annotationTypeBody3915 = new BitSet(new ulong[]{0x1840502100A14010UL,0x11040C31700610UL});
		public static readonly BitSet _annotationTypeElementDeclaration_in_annotationTypeBody3927 = new BitSet(new ulong[]{0x1840502100A14010UL,0x11040C31700610UL});
		public static readonly BitSet _RBRACE_in_annotationTypeBody3949 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotationMethodDeclaration_in_annotationTypeElementDeclaration3971 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceFieldDeclaration_in_annotationTypeElementDeclaration3981 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _normalClassDeclaration_in_annotationTypeElementDeclaration3991 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _normalInterfaceDeclaration_in_annotationTypeElementDeclaration4001 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enumDeclaration_in_annotationTypeElementDeclaration4011 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotationTypeDeclaration_in_annotationTypeElementDeclaration4021 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SEMI_in_annotationTypeElementDeclaration4031 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_annotationMethodDeclaration4051 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _type_in_annotationMethodDeclaration4053 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_annotationMethodDeclaration4055 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _LPAREN_in_annotationMethodDeclaration4065 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _RPAREN_in_annotationMethodDeclaration4067 = new BitSet(new ulong[]{0x20000000UL,0x10000000UL});
		public static readonly BitSet _DEFAULT_in_annotationMethodDeclaration4070 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1A72UL});
		public static readonly BitSet _elementValue_in_annotationMethodDeclaration4072 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_annotationMethodDeclaration4101 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LBRACE_in_block4125 = new BitSet(new ulong[]{0x38C1D82350E1C310UL,0x3FB7BC357A1E72UL});
		public static readonly BitSet _blockStatement_in_block4136 = new BitSet(new ulong[]{0x38C1D82350E1C310UL,0x3FB7BC357A1E72UL});
		public static readonly BitSet _RBRACE_in_block4157 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _localVariableDeclarationStatement_in_blockStatement4179 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classOrInterfaceDeclaration_in_blockStatement4189 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _statement_in_blockStatement4199 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _localVariableDeclaration_in_localVariableDeclarationStatement4220 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_localVariableDeclarationStatement4230 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variableModifiers_in_localVariableDeclaration4250 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _type_in_localVariableDeclaration4252 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _variableDeclarator_in_localVariableDeclaration4262 = new BitSet(new ulong[]{0x2000002UL});
		public static readonly BitSet _COMMA_in_localVariableDeclaration4273 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _variableDeclarator_in_localVariableDeclaration4275 = new BitSet(new ulong[]{0x2000002UL});
		public static readonly BitSet _block_in_statement4306 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ASSERT_in_statement4330 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _expression_in_statement4350 = new BitSet(new ulong[]{0x1000000UL,0x10000000UL});
		public static readonly BitSet _COLON_in_statement4353 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _expression_in_statement4355 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_statement4359 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ASSERT_in_statement4369 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _expression_in_statement4372 = new BitSet(new ulong[]{0x1000000UL,0x10000000UL});
		public static readonly BitSet _COLON_in_statement4375 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _expression_in_statement4377 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_statement4381 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IF_in_statement4403 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _parExpression_in_statement4405 = new BitSet(new ulong[]{0x28C1C8035061C300UL,0x2EB7B0340A1872UL});
		public static readonly BitSet _statement_in_statement4407 = new BitSet(new ulong[]{0x1000000002UL});
		public static readonly BitSet _ELSE_in_statement4410 = new BitSet(new ulong[]{0x28C1C8035061C300UL,0x2EB7B0340A1872UL});
		public static readonly BitSet _statement_in_statement4412 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _forstatement_in_statement4434 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _WHILE_in_statement4444 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _parExpression_in_statement4446 = new BitSet(new ulong[]{0x28C1C8035061C300UL,0x2EB7B0340A1872UL});
		public static readonly BitSet _statement_in_statement4448 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DO_in_statement4458 = new BitSet(new ulong[]{0x28C1C8035061C300UL,0x2EB7B0340A1872UL});
		public static readonly BitSet _statement_in_statement4460 = new BitSet(new ulong[]{0x0UL,0x20000000000000UL});
		public static readonly BitSet _WHILE_in_statement4462 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _parExpression_in_statement4464 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_statement4466 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _trystatement_in_statement4476 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SWITCH_in_statement4486 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _parExpression_in_statement4488 = new BitSet(new ulong[]{0x0UL,0x2UL});
		public static readonly BitSet _LBRACE_in_statement4490 = new BitSet(new ulong[]{0x20080000UL,0x1000000UL});
		public static readonly BitSet _switchBlockStatementGroups_in_statement4492 = new BitSet(new ulong[]{0x0UL,0x1000000UL});
		public static readonly BitSet _RBRACE_in_statement4494 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SYNCHRONIZED_in_statement4504 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _parExpression_in_statement4506 = new BitSet(new ulong[]{0x0UL,0x2UL});
		public static readonly BitSet _block_in_statement4508 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _RETURN_in_statement4518 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0300A1870UL});
		public static readonly BitSet _expression_in_statement4521 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_statement4526 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _THROW_in_statement4536 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _expression_in_statement4538 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_statement4540 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _BREAK_in_statement4550 = new BitSet(new ulong[]{0x40000000000000UL,0x10000000UL});
		public static readonly BitSet _IDENTIFIER_in_statement4565 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_statement4582 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _CONTINUE_in_statement4592 = new BitSet(new ulong[]{0x40000000000000UL,0x10000000UL});
		public static readonly BitSet _IDENTIFIER_in_statement4607 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_statement4624 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_statement4634 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_statement4637 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IDENTIFIER_in_statement4652 = new BitSet(new ulong[]{0x1000000UL});
		public static readonly BitSet _COLON_in_statement4654 = new BitSet(new ulong[]{0x28C1C8035061C300UL,0x2EB7B0340A1872UL});
		public static readonly BitSet _statement_in_statement4656 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SEMI_in_statement4666 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _switchBlockStatementGroup_in_switchBlockStatementGroups4688 = new BitSet(new ulong[]{0x20080002UL});
		public static readonly BitSet _switchLabel_in_switchBlockStatementGroup4717 = new BitSet(new ulong[]{0x38C1D82350E1C312UL,0x3FB7BC347A1E72UL});
		public static readonly BitSet _blockStatement_in_switchBlockStatementGroup4728 = new BitSet(new ulong[]{0x38C1D82350E1C312UL,0x3FB7BC347A1E72UL});
		public static readonly BitSet _CASE_in_switchLabel4759 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _expression_in_switchLabel4761 = new BitSet(new ulong[]{0x1000000UL});
		public static readonly BitSet _COLON_in_switchLabel4763 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DEFAULT_in_switchLabel4773 = new BitSet(new ulong[]{0x1000000UL});
		public static readonly BitSet _COLON_in_switchLabel4775 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _TRY_in_trystatement4796 = new BitSet(new ulong[]{0x0UL,0x2UL});
		public static readonly BitSet _block_in_trystatement4798 = new BitSet(new ulong[]{0x200000100000UL});
		public static readonly BitSet _catches_in_trystatement4812 = new BitSet(new ulong[]{0x200000000000UL});
		public static readonly BitSet _FINALLY_in_trystatement4814 = new BitSet(new ulong[]{0x0UL,0x2UL});
		public static readonly BitSet _block_in_trystatement4816 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _catches_in_trystatement4830 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _FINALLY_in_trystatement4844 = new BitSet(new ulong[]{0x0UL,0x2UL});
		public static readonly BitSet _block_in_trystatement4846 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _tryWithResourcesStatement_in_trystatement4866 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _catchClause_in_catches4887 = new BitSet(new ulong[]{0x100002UL});
		public static readonly BitSet _catchClause_in_catches4898 = new BitSet(new ulong[]{0x100002UL});
		public static readonly BitSet _CATCH_in_catchClause4929 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _LPAREN_in_catchClause4931 = new BitSet(new ulong[]{0x840500100214000UL,0x20000210UL});
		public static readonly BitSet _formalParameter_in_catchClause4933 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _RPAREN_in_catchClause4943 = new BitSet(new ulong[]{0x0UL,0x2UL});
		public static readonly BitSet _block_in_catchClause4945 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variableModifiers_in_formalParameter4966 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _catchType_in_formalParameter4968 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_formalParameter4970 = new BitSet(new ulong[]{0x2UL,0x4UL});
		public static readonly BitSet _LBRACKET_in_formalParameter4981 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_formalParameter4983 = new BitSet(new ulong[]{0x2UL,0x4UL});
		public static readonly BitSet _catchType_in_formalParameter5004 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_formalParameter5006 = new BitSet(new ulong[]{0x2UL,0x4UL});
		public static readonly BitSet _LBRACKET_in_formalParameter5017 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_formalParameter5019 = new BitSet(new ulong[]{0x2UL,0x4UL});
		public static readonly BitSet _type_in_catchType5049 = new BitSet(new ulong[]{0x802UL});
		public static readonly BitSet _BAR_in_catchType5060 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _type_in_catchType5062 = new BitSet(new ulong[]{0x802UL});
		public static readonly BitSet _TRY_in_tryWithResourcesStatement5093 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _resourceSpecification_in_tryWithResourcesStatement5095 = new BitSet(new ulong[]{0x0UL,0x2UL});
		public static readonly BitSet _block_in_tryWithResourcesStatement5110 = new BitSet(new ulong[]{0x100000UL});
		public static readonly BitSet _catches_in_tryWithResourcesStatement5112 = new BitSet(new ulong[]{0x200000000000UL});
		public static readonly BitSet _FINALLY_in_tryWithResourcesStatement5114 = new BitSet(new ulong[]{0x0UL,0x2UL});
		public static readonly BitSet _block_in_tryWithResourcesStatement5116 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _block_in_tryWithResourcesStatement5131 = new BitSet(new ulong[]{0x0UL,0x80000000000000UL});
		public static readonly BitSet _119_in_tryWithResourcesStatement5133 = new BitSet(new ulong[]{0x0UL,0x2UL});
		public static readonly BitSet _block_in_tryWithResourcesStatement5135 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _block_in_tryWithResourcesStatement5150 = new BitSet(new ulong[]{0x100000UL});
		public static readonly BitSet _catches_in_tryWithResourcesStatement5152 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _block_in_tryWithResourcesStatement5167 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LPAREN_in_resourceSpecification5198 = new BitSet(new ulong[]{0x840500100214000UL,0x20000210UL});
		public static readonly BitSet _resources_in_resourceSpecification5200 = new BitSet(new ulong[]{0x0UL,0x18000000UL});
		public static readonly BitSet _SEMI_in_resourceSpecification5215 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _RPAREN_in_resourceSpecification5217 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _RPAREN_in_resourceSpecification5233 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _resource_in_resources5265 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _resource_in_resources5276 = new BitSet(new ulong[]{0x2UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_resources5292 = new BitSet(new ulong[]{0x840500100214000UL,0x20000210UL});
		public static readonly BitSet _resource_in_resources5294 = new BitSet(new ulong[]{0x2UL,0x10000000UL});
		public static readonly BitSet _variableModifiers_in_resource5330 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _type_in_resource5332 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_resource5334 = new BitSet(new ulong[]{0x4000000000UL,0x4UL});
		public static readonly BitSet _type_in_resource5349 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_resource5351 = new BitSet(new ulong[]{0x4000000000UL,0x4UL});
		public static readonly BitSet _LBRACKET_in_resource5377 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_resource5379 = new BitSet(new ulong[]{0x4000000000UL,0x4UL});
		public static readonly BitSet _EQ_in_resource5402 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _expression_in_resource5404 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _FOR_in_forstatement5443 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _LPAREN_in_forstatement5445 = new BitSet(new ulong[]{0x840500100214000UL,0x20000210UL});
		public static readonly BitSet _variableModifiers_in_forstatement5447 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _type_in_forstatement5449 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_forstatement5451 = new BitSet(new ulong[]{0x1000000UL});
		public static readonly BitSet _COLON_in_forstatement5453 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _expression_in_forstatement5464 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _RPAREN_in_forstatement5466 = new BitSet(new ulong[]{0x28C1C8035061C300UL,0x2EB7B0340A1872UL});
		public static readonly BitSet _statement_in_forstatement5468 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _FOR_in_forstatement5500 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _LPAREN_in_forstatement5502 = new BitSet(new ulong[]{0x2840D80300614200UL,0xA91B0300A1A70UL});
		public static readonly BitSet _forInit_in_forstatement5522 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_forstatement5543 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0300A1870UL});
		public static readonly BitSet _expression_in_forstatement5563 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_forstatement5584 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0280A1870UL});
		public static readonly BitSet _expressionList_in_forstatement5604 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _RPAREN_in_forstatement5625 = new BitSet(new ulong[]{0x28C1C8035061C300UL,0x2EB7B0340A1872UL});
		public static readonly BitSet _statement_in_forstatement5627 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _localVariableDeclaration_in_forInit5647 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expressionList_in_forInit5657 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LPAREN_in_parExpression5677 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _expression_in_parExpression5679 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _RPAREN_in_parExpression5681 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_expressionList5701 = new BitSet(new ulong[]{0x2000002UL});
		public static readonly BitSet _COMMA_in_expressionList5712 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _expression_in_expressionList5714 = new BitSet(new ulong[]{0x2000002UL});
		public static readonly BitSet _conditionalExpression_in_expression5746 = new BitSet(new ulong[]{0x8004000042082UL,0x4280050080UL});
		public static readonly BitSet _assignmentOperator_in_expression5757 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _expression_in_expression5759 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _EQ_in_assignmentOperator5791 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _PLUSEQ_in_assignmentOperator5801 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SUBEQ_in_assignmentOperator5811 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _STAREQ_in_assignmentOperator5821 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SLASHEQ_in_assignmentOperator5831 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _AMPEQ_in_assignmentOperator5841 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _BAREQ_in_assignmentOperator5851 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _CARETEQ_in_assignmentOperator5861 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _PERCENTEQ_in_assignmentOperator5871 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LT_in_assignmentOperator5882 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _LT_in_assignmentOperator5884 = new BitSet(new ulong[]{0x4000000000UL});
		public static readonly BitSet _EQ_in_assignmentOperator5886 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GT_in_assignmentOperator5897 = new BitSet(new ulong[]{0x8000000000000UL});
		public static readonly BitSet _GT_in_assignmentOperator5899 = new BitSet(new ulong[]{0x8000000000000UL});
		public static readonly BitSet _GT_in_assignmentOperator5901 = new BitSet(new ulong[]{0x4000000000UL});
		public static readonly BitSet _EQ_in_assignmentOperator5903 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GT_in_assignmentOperator5914 = new BitSet(new ulong[]{0x8000000000000UL});
		public static readonly BitSet _GT_in_assignmentOperator5916 = new BitSet(new ulong[]{0x4000000000UL});
		public static readonly BitSet _EQ_in_assignmentOperator5918 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _conditionalOrExpression_in_conditionalExpression5939 = new BitSet(new ulong[]{0x2UL,0x800000UL});
		public static readonly BitSet _QUES_in_conditionalExpression5950 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _expression_in_conditionalExpression5952 = new BitSet(new ulong[]{0x1000000UL});
		public static readonly BitSet _COLON_in_conditionalExpression5954 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _conditionalExpression_in_conditionalExpression5956 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _conditionalAndExpression_in_conditionalOrExpression5987 = new BitSet(new ulong[]{0x1002UL});
		public static readonly BitSet _BARBAR_in_conditionalOrExpression5998 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _conditionalAndExpression_in_conditionalOrExpression6000 = new BitSet(new ulong[]{0x1002UL});
		public static readonly BitSet _inclusiveOrExpression_in_conditionalAndExpression6031 = new BitSet(new ulong[]{0x42UL});
		public static readonly BitSet _AMPAMP_in_conditionalAndExpression6042 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _inclusiveOrExpression_in_conditionalAndExpression6044 = new BitSet(new ulong[]{0x42UL});
		public static readonly BitSet _exclusiveOrExpression_in_inclusiveOrExpression6075 = new BitSet(new ulong[]{0x802UL});
		public static readonly BitSet _BAR_in_inclusiveOrExpression6086 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _exclusiveOrExpression_in_inclusiveOrExpression6088 = new BitSet(new ulong[]{0x802UL});
		public static readonly BitSet _andExpression_in_exclusiveOrExpression6119 = new BitSet(new ulong[]{0x20002UL});
		public static readonly BitSet _CARET_in_exclusiveOrExpression6130 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _andExpression_in_exclusiveOrExpression6132 = new BitSet(new ulong[]{0x20002UL});
		public static readonly BitSet _equalityExpression_in_andExpression6163 = new BitSet(new ulong[]{0x22UL});
		public static readonly BitSet _AMP_in_andExpression6174 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _equalityExpression_in_andExpression6176 = new BitSet(new ulong[]{0x22UL});
		public static readonly BitSet _instanceOfExpression_in_equalityExpression6207 = new BitSet(new ulong[]{0x8000000402UL});
		public static readonly BitSet _set_in_equalityExpression6234 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _instanceOfExpression_in_equalityExpression6284 = new BitSet(new ulong[]{0x8000000402UL});
		public static readonly BitSet _relationalExpression_in_instanceOfExpression6315 = new BitSet(new ulong[]{0x400000000000002UL});
		public static readonly BitSet _INSTANCEOF_in_instanceOfExpression6326 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _type_in_instanceOfExpression6328 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _shiftExpression_in_relationalExpression6359 = new BitSet(new ulong[]{0x8000000000002UL,0x80UL});
		public static readonly BitSet _relationalOp_in_relationalExpression6370 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _shiftExpression_in_relationalExpression6372 = new BitSet(new ulong[]{0x8000000000002UL,0x80UL});
		public static readonly BitSet _LT_in_relationalOp6404 = new BitSet(new ulong[]{0x4000000000UL});
		public static readonly BitSet _EQ_in_relationalOp6406 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GT_in_relationalOp6417 = new BitSet(new ulong[]{0x4000000000UL});
		public static readonly BitSet _EQ_in_relationalOp6419 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LT_in_relationalOp6429 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GT_in_relationalOp6439 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _additiveExpression_in_shiftExpression6459 = new BitSet(new ulong[]{0x8000000000002UL,0x80UL});
		public static readonly BitSet _shiftOp_in_shiftExpression6470 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _additiveExpression_in_shiftExpression6472 = new BitSet(new ulong[]{0x8000000000002UL,0x80UL});
		public static readonly BitSet _LT_in_shiftOp6505 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _LT_in_shiftOp6507 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GT_in_shiftOp6518 = new BitSet(new ulong[]{0x8000000000000UL});
		public static readonly BitSet _GT_in_shiftOp6520 = new BitSet(new ulong[]{0x8000000000000UL});
		public static readonly BitSet _GT_in_shiftOp6522 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GT_in_shiftOp6533 = new BitSet(new ulong[]{0x8000000000000UL});
		public static readonly BitSet _GT_in_shiftOp6535 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _multiplicativeExpression_in_additiveExpression6556 = new BitSet(new ulong[]{0x2UL,0x2000020000UL});
		public static readonly BitSet _set_in_additiveExpression6583 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _multiplicativeExpression_in_additiveExpression6633 = new BitSet(new ulong[]{0x2UL,0x2000020000UL});
		public static readonly BitSet _unaryExpression_in_multiplicativeExpression6671 = new BitSet(new ulong[]{0x2UL,0x140008000UL});
		public static readonly BitSet _set_in_multiplicativeExpression6698 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _unaryExpression_in_multiplicativeExpression6766 = new BitSet(new ulong[]{0x2UL,0x140008000UL});
		public static readonly BitSet _PLUS_in_unaryExpression6799 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _unaryExpression_in_unaryExpression6802 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SUB_in_unaryExpression6812 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _unaryExpression_in_unaryExpression6814 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _PLUSPLUS_in_unaryExpression6824 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _unaryExpression_in_unaryExpression6826 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SUBSUB_in_unaryExpression6836 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _unaryExpression_in_unaryExpression6838 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _unaryExpressionNotPlusMinus_in_unaryExpression6848 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _TILDE_in_unaryExpressionNotPlusMinus6868 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _unaryExpression_in_unaryExpressionNotPlusMinus6870 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _BANG_in_unaryExpressionNotPlusMinus6880 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _unaryExpression_in_unaryExpressionNotPlusMinus6882 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _castExpression_in_unaryExpressionNotPlusMinus6892 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _primary_in_unaryExpressionNotPlusMinus6902 = new BitSet(new ulong[]{0x80000002UL,0x8000080004UL});
		public static readonly BitSet _selector_in_unaryExpressionNotPlusMinus6913 = new BitSet(new ulong[]{0x80000002UL,0x8000080004UL});
		public static readonly BitSet _LPAREN_in_castExpression6983 = new BitSet(new ulong[]{0x800400100214000UL,0x20000010UL});
		public static readonly BitSet _primitiveType_in_castExpression6985 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _RPAREN_in_castExpression6987 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _unaryExpression_in_castExpression6989 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LPAREN_in_castExpression6999 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _type_in_castExpression7001 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _RPAREN_in_castExpression7003 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA911020001870UL});
		public static readonly BitSet _unaryExpressionNotPlusMinus_in_castExpression7005 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _parExpression_in_primary7027 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _THIS_in_primary7049 = new BitSet(new ulong[]{0x80000002UL,0x44UL});
		public static readonly BitSet _DOT_in_primary7060 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_primary7062 = new BitSet(new ulong[]{0x80000002UL,0x44UL});
		public static readonly BitSet _identifierSuffix_in_primary7084 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IDENTIFIER_in_primary7105 = new BitSet(new ulong[]{0x80000002UL,0x44UL});
		public static readonly BitSet _DOT_in_primary7116 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_primary7118 = new BitSet(new ulong[]{0x80000002UL,0x44UL});
		public static readonly BitSet _identifierSuffix_in_primary7140 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SUPER_in_primary7161 = new BitSet(new ulong[]{0x80000000UL,0x40UL});
		public static readonly BitSet _superSuffix_in_primary7171 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _literal_in_primary7181 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _creator_in_primary7191 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _primitiveType_in_primary7201 = new BitSet(new ulong[]{0x80000000UL,0x4UL});
		public static readonly BitSet _LBRACKET_in_primary7212 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_primary7214 = new BitSet(new ulong[]{0x80000000UL,0x4UL});
		public static readonly BitSet _DOT_in_primary7235 = new BitSet(new ulong[]{0x800000UL});
		public static readonly BitSet _CLASS_in_primary7237 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _VOID_in_primary7247 = new BitSet(new ulong[]{0x80000000UL});
		public static readonly BitSet _DOT_in_primary7249 = new BitSet(new ulong[]{0x800000UL});
		public static readonly BitSet _CLASS_in_primary7251 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _arguments_in_superSuffix7277 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_superSuffix7287 = new BitSet(new ulong[]{0x40000000000000UL,0x80UL});
		public static readonly BitSet _typeArguments_in_superSuffix7290 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_superSuffix7311 = new BitSet(new ulong[]{0x2UL,0x40UL});
		public static readonly BitSet _arguments_in_superSuffix7322 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LBRACKET_in_identifierSuffix7355 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_identifierSuffix7357 = new BitSet(new ulong[]{0x80000000UL,0x4UL});
		public static readonly BitSet _DOT_in_identifierSuffix7378 = new BitSet(new ulong[]{0x800000UL});
		public static readonly BitSet _CLASS_in_identifierSuffix7380 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LBRACKET_in_identifierSuffix7391 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _expression_in_identifierSuffix7393 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_identifierSuffix7395 = new BitSet(new ulong[]{0x2UL,0x4UL});
		public static readonly BitSet _arguments_in_identifierSuffix7416 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_identifierSuffix7426 = new BitSet(new ulong[]{0x800000UL});
		public static readonly BitSet _CLASS_in_identifierSuffix7428 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_identifierSuffix7438 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _nonWildcardTypeArguments_in_identifierSuffix7440 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_identifierSuffix7442 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _arguments_in_identifierSuffix7444 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_identifierSuffix7454 = new BitSet(new ulong[]{0x0UL,0x100000000000UL});
		public static readonly BitSet _THIS_in_identifierSuffix7456 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_identifierSuffix7466 = new BitSet(new ulong[]{0x0UL,0x10000000000UL});
		public static readonly BitSet _SUPER_in_identifierSuffix7468 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _arguments_in_identifierSuffix7470 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _innerCreator_in_identifierSuffix7480 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_selector7502 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_selector7504 = new BitSet(new ulong[]{0x2UL,0x40UL});
		public static readonly BitSet _arguments_in_selector7506 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_selector7517 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _nonWildcardTypeArguments_in_selector7519 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_selector7521 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _arguments_in_selector7523 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_selector7534 = new BitSet(new ulong[]{0x0UL,0x100000000000UL});
		public static readonly BitSet _THIS_in_selector7536 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_selector7546 = new BitSet(new ulong[]{0x0UL,0x10000000000UL});
		public static readonly BitSet _SUPER_in_selector7548 = new BitSet(new ulong[]{0x80000000UL,0x40UL});
		public static readonly BitSet _superSuffix_in_selector7558 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _innerCreator_in_selector7568 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LBRACKET_in_selector7578 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _expression_in_selector7580 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_selector7582 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NEW_in_creator7602 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _nonWildcardTypeArguments_in_creator7604 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _classOrInterfaceType_in_creator7606 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _classCreatorRest_in_creator7608 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NEW_in_creator7618 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _classOrInterfaceType_in_creator7620 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _classCreatorRest_in_creator7622 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _arrayCreator_in_creator7632 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NEW_in_arrayCreator7652 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _createdName_in_arrayCreator7654 = new BitSet(new ulong[]{0x0UL,0x4UL});
		public static readonly BitSet _LBRACKET_in_arrayCreator7664 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_arrayCreator7666 = new BitSet(new ulong[]{0x0UL,0x6UL});
		public static readonly BitSet _LBRACKET_in_arrayCreator7677 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_arrayCreator7679 = new BitSet(new ulong[]{0x0UL,0x6UL});
		public static readonly BitSet _arrayInitializer_in_arrayCreator7700 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NEW_in_arrayCreator7711 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _createdName_in_arrayCreator7713 = new BitSet(new ulong[]{0x0UL,0x4UL});
		public static readonly BitSet _LBRACKET_in_arrayCreator7723 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _expression_in_arrayCreator7725 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_arrayCreator7735 = new BitSet(new ulong[]{0x2UL,0x4UL});
		public static readonly BitSet _LBRACKET_in_arrayCreator7749 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _expression_in_arrayCreator7751 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_arrayCreator7765 = new BitSet(new ulong[]{0x2UL,0x4UL});
		public static readonly BitSet _LBRACKET_in_arrayCreator7787 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_arrayCreator7789 = new BitSet(new ulong[]{0x2UL,0x4UL});
		public static readonly BitSet _arrayInitializer_in_variableInitializer7820 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_variableInitializer7830 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LBRACE_in_arrayInitializer7850 = new BitSet(new ulong[]{0x2840C80302614200UL,0xA91B0210A1872UL});
		public static readonly BitSet _variableInitializer_in_arrayInitializer7866 = new BitSet(new ulong[]{0x2000000UL,0x1000000UL});
		public static readonly BitSet _COMMA_in_arrayInitializer7885 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1872UL});
		public static readonly BitSet _variableInitializer_in_arrayInitializer7887 = new BitSet(new ulong[]{0x2000000UL,0x1000000UL});
		public static readonly BitSet _COMMA_in_arrayInitializer7937 = new BitSet(new ulong[]{0x0UL,0x1000000UL});
		public static readonly BitSet _RBRACE_in_arrayInitializer7950 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classOrInterfaceType_in_createdName7984 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _primitiveType_in_createdName7994 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_innerCreator8015 = new BitSet(new ulong[]{0x0UL,0x800UL});
		public static readonly BitSet _NEW_in_innerCreator8017 = new BitSet(new ulong[]{0x40000000000000UL,0x80UL});
		public static readonly BitSet _nonWildcardTypeArguments_in_innerCreator8028 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_innerCreator8049 = new BitSet(new ulong[]{0x0UL,0xC0UL});
		public static readonly BitSet _typeArguments_in_innerCreator8060 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _classCreatorRest_in_innerCreator8081 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _arguments_in_classCreatorRest8102 = new BitSet(new ulong[]{0x2UL,0x2UL});
		public static readonly BitSet _classBody_in_classCreatorRest8113 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LT_in_nonWildcardTypeArguments8145 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _typeList_in_nonWildcardTypeArguments8147 = new BitSet(new ulong[]{0x8000000000000UL});
		public static readonly BitSet _GT_in_nonWildcardTypeArguments8157 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LPAREN_in_arguments8177 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0280A1870UL});
		public static readonly BitSet _expressionList_in_arguments8180 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _RPAREN_in_arguments8193 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _INTLITERAL_in_intLiteral8210 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LONGLITERAL_in_longLiteral8227 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _FLOATLITERAL_in_floatLiteral8244 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOUBLELITERAL_in_doubleLiteral8261 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _CHARLITERAL_in_charLiteral8278 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _STRINGLITERAL_in_stringLiteral8295 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _TRUE_in_trueLiteral8312 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _FALSE_in_falseLiteral8329 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NULL_in_nullLiteral8346 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _intLiteral_in_literal8366 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _longLiteral_in_literal8376 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _floatLiteral_in_literal8386 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _doubleLiteral_in_literal8396 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _charLiteral_in_literal8406 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _stringLiteral_in_literal8416 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _trueLiteral_in_literal8426 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _falseLiteral_in_literal8436 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _nullLiteral_in_literal8446 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_classHeader8470 = new BitSet(new ulong[]{0x800000UL});
		public static readonly BitSet _CLASS_in_classHeader8472 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_classHeader8474 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_enumHeader8494 = new BitSet(new ulong[]{0x40002000000000UL});
		public static readonly BitSet _set_in_enumHeader8496 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_enumHeader8502 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_interfaceHeader8522 = new BitSet(new ulong[]{0x1000000000000000UL});
		public static readonly BitSet _INTERFACE_in_interfaceHeader8524 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_interfaceHeader8526 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_annotationHeader8546 = new BitSet(new ulong[]{0x0UL,0x200UL});
		public static readonly BitSet _MONKEYS_AT_in_annotationHeader8548 = new BitSet(new ulong[]{0x1000000000000000UL});
		public static readonly BitSet _INTERFACE_in_annotationHeader8550 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_annotationHeader8552 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_typeHeader8572 = new BitSet(new ulong[]{0x1000002000800000UL,0x200UL});
		public static readonly BitSet _CLASS_in_typeHeader8575 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _ENUM_in_typeHeader8577 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _MONKEYS_AT_in_typeHeader8580 = new BitSet(new ulong[]{0x1000000000000000UL});
		public static readonly BitSet _INTERFACE_in_typeHeader8584 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_typeHeader8588 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_methodHeader8608 = new BitSet(new ulong[]{0x840400100214000UL,0x8000020000090UL});
		public static readonly BitSet _typeParameters_in_methodHeader8610 = new BitSet(new ulong[]{0x840400100214000UL,0x8000020000010UL});
		public static readonly BitSet _type_in_methodHeader8614 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _VOID_in_methodHeader8616 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_methodHeader8620 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _LPAREN_in_methodHeader8622 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_fieldHeader8642 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _type_in_fieldHeader8644 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_fieldHeader8646 = new BitSet(new ulong[]{0x4002000000UL,0x10000004UL});
		public static readonly BitSet _LBRACKET_in_fieldHeader8649 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_fieldHeader8650 = new BitSet(new ulong[]{0x4002000000UL,0x10000004UL});
		public static readonly BitSet _set_in_fieldHeader8654 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variableModifiers_in_localVariableHeader8680 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _type_in_localVariableHeader8682 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_localVariableHeader8684 = new BitSet(new ulong[]{0x4002000000UL,0x10000004UL});
		public static readonly BitSet _LBRACKET_in_localVariableHeader8687 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_localVariableHeader8688 = new BitSet(new ulong[]{0x4002000000UL,0x10000004UL});
		public static readonly BitSet _set_in_localVariableHeader8692 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotations_in_synpred2_Java118 = new BitSet(new ulong[]{0x0UL,0x4000UL});
		public static readonly BitSet _packageDeclaration_in_synpred2_Java147 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classDeclaration_in_synpred12_Java505 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _normalClassDeclaration_in_synpred27_Java742 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _normalInterfaceDeclaration_in_synpred43_Java1421 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _fieldDeclaration_in_synpred52_Java1751 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _methodDeclaration_in_synpred53_Java1762 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classDeclaration_in_synpred54_Java1773 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _explicitConstructorInvocation_in_synpred57_Java1910 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_synpred59_Java1822 = new BitSet(new ulong[]{0x40000000000000UL,0x80UL});
		public static readonly BitSet _typeParameters_in_synpred59_Java1833 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_synpred59_Java1854 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _formalParameters_in_synpred59_Java1864 = new BitSet(new ulong[]{0x0UL,0x400000000002UL});
		public static readonly BitSet _THROWS_in_synpred59_Java1875 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _qualifiedNameList_in_synpred59_Java1877 = new BitSet(new ulong[]{0x0UL,0x2UL});
		public static readonly BitSet _LBRACE_in_synpred59_Java1898 = new BitSet(new ulong[]{0x38C1D82350E1C310UL,0x3FB7BC357A1EF2UL});
		public static readonly BitSet _explicitConstructorInvocation_in_synpred59_Java1910 = new BitSet(new ulong[]{0x38C1D82350E1C310UL,0x3FB7BC357A1E72UL});
		public static readonly BitSet _blockStatement_in_synpred59_Java1932 = new BitSet(new ulong[]{0x38C1D82350E1C310UL,0x3FB7BC357A1E72UL});
		public static readonly BitSet _RBRACE_in_synpred59_Java1953 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceFieldDeclaration_in_synpred68_Java2328 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceMethodDeclaration_in_synpred69_Java2338 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceDeclaration_in_synpred70_Java2348 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classDeclaration_in_synpred71_Java2358 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ellipsisParameterDecl_in_synpred96_Java3122 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _normalParameterDecl_in_synpred98_Java3132 = new BitSet(new ulong[]{0x2000002UL});
		public static readonly BitSet _COMMA_in_synpred98_Java3143 = new BitSet(new ulong[]{0x840500100214000UL,0x20000210UL});
		public static readonly BitSet _normalParameterDecl_in_synpred98_Java3145 = new BitSet(new ulong[]{0x2000002UL});
		public static readonly BitSet _normalParameterDecl_in_synpred99_Java3167 = new BitSet(new ulong[]{0x2000000UL});
		public static readonly BitSet _COMMA_in_synpred99_Java3177 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _nonWildcardTypeArguments_in_synpred103_Java3312 = new BitSet(new ulong[]{0x0UL,0x110000000000UL});
		public static readonly BitSet _set_in_synpred103_Java3338 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _arguments_in_synpred103_Java3370 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_synpred103_Java3372 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotationMethodDeclaration_in_synpred117_Java3971 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceFieldDeclaration_in_synpred118_Java3981 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _normalClassDeclaration_in_synpred119_Java3991 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _normalInterfaceDeclaration_in_synpred120_Java4001 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enumDeclaration_in_synpred121_Java4011 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotationTypeDeclaration_in_synpred122_Java4021 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _localVariableDeclarationStatement_in_synpred125_Java4179 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classOrInterfaceDeclaration_in_synpred126_Java4189 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ASSERT_in_synpred130_Java4330 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _expression_in_synpred130_Java4350 = new BitSet(new ulong[]{0x1000000UL,0x10000000UL});
		public static readonly BitSet _COLON_in_synpred130_Java4353 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _expression_in_synpred130_Java4355 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_synpred130_Java4359 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ASSERT_in_synpred132_Java4369 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _expression_in_synpred132_Java4372 = new BitSet(new ulong[]{0x1000000UL,0x10000000UL});
		public static readonly BitSet _COLON_in_synpred132_Java4375 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _expression_in_synpred132_Java4377 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_synpred132_Java4381 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ELSE_in_synpred133_Java4410 = new BitSet(new ulong[]{0x28C1C8035061C300UL,0x2EB7B0340A1872UL});
		public static readonly BitSet _statement_in_synpred133_Java4412 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_synpred148_Java4634 = new BitSet(new ulong[]{0x0UL,0x10000000UL});
		public static readonly BitSet _SEMI_in_synpred148_Java4637 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IDENTIFIER_in_synpred149_Java4652 = new BitSet(new ulong[]{0x1000000UL});
		public static readonly BitSet _COLON_in_synpred149_Java4654 = new BitSet(new ulong[]{0x28C1C8035061C300UL,0x2EB7B0340A1872UL});
		public static readonly BitSet _statement_in_synpred149_Java4656 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _catches_in_synpred153_Java4812 = new BitSet(new ulong[]{0x200000000000UL});
		public static readonly BitSet _FINALLY_in_synpred153_Java4814 = new BitSet(new ulong[]{0x0UL,0x2UL});
		public static readonly BitSet _block_in_synpred153_Java4816 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _catches_in_synpred154_Java4830 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variableModifiers_in_synpred158_Java4966 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _catchType_in_synpred158_Java4968 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_synpred158_Java4970 = new BitSet(new ulong[]{0x2UL,0x4UL});
		public static readonly BitSet _LBRACKET_in_synpred158_Java4981 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_synpred158_Java4983 = new BitSet(new ulong[]{0x2UL,0x4UL});
		public static readonly BitSet _block_in_synpred161_Java5110 = new BitSet(new ulong[]{0x100000UL});
		public static readonly BitSet _catches_in_synpred161_Java5112 = new BitSet(new ulong[]{0x200000000000UL});
		public static readonly BitSet _FINALLY_in_synpred161_Java5114 = new BitSet(new ulong[]{0x0UL,0x2UL});
		public static readonly BitSet _block_in_synpred161_Java5116 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _block_in_synpred162_Java5131 = new BitSet(new ulong[]{0x0UL,0x80000000000000UL});
		public static readonly BitSet _119_in_synpred162_Java5133 = new BitSet(new ulong[]{0x0UL,0x2UL});
		public static readonly BitSet _block_in_synpred162_Java5135 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _block_in_synpred163_Java5150 = new BitSet(new ulong[]{0x100000UL});
		public static readonly BitSet _catches_in_synpred163_Java5152 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _resource_in_synpred165_Java5265 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variableModifiers_in_synpred167_Java5330 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _type_in_synpred167_Java5332 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_synpred167_Java5334 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _FOR_in_synpred169_Java5443 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _LPAREN_in_synpred169_Java5445 = new BitSet(new ulong[]{0x840500100214000UL,0x20000210UL});
		public static readonly BitSet _variableModifiers_in_synpred169_Java5447 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _type_in_synpred169_Java5449 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_synpred169_Java5451 = new BitSet(new ulong[]{0x1000000UL});
		public static readonly BitSet _COLON_in_synpred169_Java5453 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _expression_in_synpred169_Java5464 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _RPAREN_in_synpred169_Java5466 = new BitSet(new ulong[]{0x28C1C8035061C300UL,0x2EB7B0340A1872UL});
		public static readonly BitSet _statement_in_synpred169_Java5468 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _localVariableDeclaration_in_synpred173_Java5647 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _castExpression_in_synpred214_Java6892 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LPAREN_in_synpred218_Java6983 = new BitSet(new ulong[]{0x800400100214000UL,0x20000010UL});
		public static readonly BitSet _primitiveType_in_synpred218_Java6985 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _RPAREN_in_synpred218_Java6987 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _unaryExpression_in_synpred218_Java6989 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_synpred220_Java7060 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_synpred220_Java7062 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifierSuffix_in_synpred221_Java7084 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOT_in_synpred223_Java7116 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _IDENTIFIER_in_synpred223_Java7118 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifierSuffix_in_synpred224_Java7140 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LBRACKET_in_synpred236_Java7391 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _expression_in_synpred236_Java7393 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_synpred236_Java7395 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NEW_in_synpred249_Java7602 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _nonWildcardTypeArguments_in_synpred249_Java7604 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _classOrInterfaceType_in_synpred249_Java7606 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _classCreatorRest_in_synpred249_Java7608 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NEW_in_synpred250_Java7618 = new BitSet(new ulong[]{0x40000000000000UL});
		public static readonly BitSet _classOrInterfaceType_in_synpred250_Java7620 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _classCreatorRest_in_synpred250_Java7622 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NEW_in_synpred252_Java7652 = new BitSet(new ulong[]{0x840400100214000UL,0x20000010UL});
		public static readonly BitSet _createdName_in_synpred252_Java7654 = new BitSet(new ulong[]{0x0UL,0x4UL});
		public static readonly BitSet _LBRACKET_in_synpred252_Java7664 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_synpred252_Java7666 = new BitSet(new ulong[]{0x0UL,0x6UL});
		public static readonly BitSet _LBRACKET_in_synpred252_Java7677 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_synpred252_Java7679 = new BitSet(new ulong[]{0x0UL,0x6UL});
		public static readonly BitSet _arrayInitializer_in_synpred252_Java7700 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LBRACKET_in_synpred253_Java7749 = new BitSet(new ulong[]{0x2840C80300614200UL,0xA91B0200A1870UL});
		public static readonly BitSet _expression_in_synpred253_Java7751 = new BitSet(new ulong[]{0x0UL,0x2000000UL});
		public static readonly BitSet _RBRACKET_in_synpred253_Java7765 = new BitSet(new ulong[]{0x2UL});
	}
	#endregion Follow sets
}

} // namespace  Code2Xml.Languages.ANTLRv3.Processors.Java 
