//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 3.5.0.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// $ANTLR 3.5.0.2 C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g 2014-04-11 15:26:52

// The variable 'variable' is assigned but its value is never used.
using Antlr.Runtime;
#pragma warning disable 219
// Unreachable code detected.
#pragma warning disable 162
// Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// CLS compliance checking will not be performed on 'type' because it is not visible from outside this assembly.
#pragma warning disable 3019

namespace  Code2Xml.Core.Generators.ANTLRv3.Lua 
{
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "3.5.0.2")]
[System.CLSCompliant(false)]
public partial class LuaParser : Antlr.Runtime.Parser, ICustomizedAntlr3Parser
{
	internal static readonly string[] tokenNames = new string[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "CHARSTRING", "COMMENT", "DecimalEscape", "Digit", "EscapeSequence", "ExponentPart", "FLOAT", "HEX", "HEX_FLOAT", "HexDigit", "HexEscape", "HexExponentPart", "INT", "LINE_COMMENT", "LONGSTRING", "NAME", "NORMALSTRING", "SHEBANG", "WS", "'#'", "'%'", "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'..'", "'...'", "'/'", "':'", "'::'", "';'", "'<'", "'<='", "'='", "'=='", "'>'", "'>='", "'['", "']'", "'^'", "'and'", "'break'", "'do'", "'else'", "'elseif'", "'end'", "'false'", "'for'", "'function'", "'goto'", "'if'", "'in'", "'local'", "'nil'", "'not'", "'or'", "'repeat'", "'return'", "'then'", "'true'", "'until'", "'while'", "'{'", "'}'", "'~='"
	};
	public const int EOF=-1;
	public const int CHARSTRING=4;
	public const int COMMENT=5;
	public const int DecimalEscape=6;
	public const int Digit=7;
	public const int EscapeSequence=8;
	public const int ExponentPart=9;
	public const int FLOAT=10;
	public const int HEX=11;
	public const int HEX_FLOAT=12;
	public const int HexDigit=13;
	public const int HexEscape=14;
	public const int HexExponentPart=15;
	public const int INT=16;
	public const int LINE_COMMENT=17;
	public const int LONGSTRING=18;
	public const int NAME=19;
	public const int NORMALSTRING=20;
	public const int SHEBANG=21;
	public const int WS=22;
	public const int T__23=23;
	public const int T__24=24;
	public const int T__25=25;
	public const int T__26=26;
	public const int T__27=27;
	public const int T__28=28;
	public const int T__29=29;
	public const int T__30=30;
	public const int T__31=31;
	public const int T__32=32;
	public const int T__33=33;
	public const int T__34=34;
	public const int T__35=35;
	public const int T__36=36;
	public const int T__37=37;
	public const int T__38=38;
	public const int T__39=39;
	public const int T__40=40;
	public const int T__41=41;
	public const int T__42=42;
	public const int T__43=43;
	public const int T__44=44;
	public const int T__45=45;
	public const int T__46=46;
	public const int T__47=47;
	public const int T__48=48;
	public const int T__49=49;
	public const int T__50=50;
	public const int T__51=51;
	public const int T__52=52;
	public const int T__53=53;
	public const int T__54=54;
	public const int T__55=55;
	public const int T__56=56;
	public const int T__57=57;
	public const int T__58=58;
	public const int T__59=59;
	public const int T__60=60;
	public const int T__61=61;
	public const int T__62=62;
	public const int T__63=63;
	public const int T__64=64;
	public const int T__65=65;
	public const int T__66=66;
	public const int T__67=67;
	public const int T__68=68;
	public const int T__69=69;
	public const int T__70=70;
	public const int T__71=71;

	public LuaParser(ITokenStream input)
		: this(input, new RecognizerSharedState())
	{
	}
	public LuaParser(ITokenStream input, RecognizerSharedState state)
		: base(input, state)
	{
		this.state.ruleMemo = new System.Collections.Generic.Dictionary<int, int>[106+1];


		CstBuilderForAntlr3 treeAdaptor = default(CstBuilderForAntlr3);
		CreateTreeAdaptor(ref treeAdaptor);
		TreeAdaptor = treeAdaptor ?? new CstBuilderForAntlr3();
		OnCreated();
	}
	// Implement this function in your helper file to use a custom tree adaptor
	partial void CreateTreeAdaptor(ref CstBuilderForAntlr3 adaptor);

	private CstBuilderForAntlr3 adaptor;

	public CstBuilderForAntlr3 TreeAdaptor
	{
		get
		{
			return adaptor;
		}

		set
		{
			this.adaptor = value;
		}
	}

	public override string[] TokenNames { get { return LuaParser.tokenNames; } }
	public override string GrammarFileName { get { return "C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g"; } }


	partial void OnCreated();
	partial void EnterRule(string ruleName, int ruleIndex);
	partial void LeaveRule(string ruleName, int ruleIndex);

	#region Rules
	partial void EnterRule_chunk();
	partial void LeaveRule_chunk();
	// $ANTLR start "chunk"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:56:1: public chunk : block ;
	[GrammarRule("chunk")]
	public Antlr3CstNode chunk()
	{
		EnterRule_chunk();
		EnterRule("chunk", 1);
		var retval = new Antlr3CstNode("chunk");
		
		retval.Start = (IToken)input.LT(1);
		int chunk_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3CstNode block1 = default(Antlr3CstNode);

		try { DebugEnterRule(GrammarFileName, "chunk");
		DebugLocation(56, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 1)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:57:5: ( block )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:57:7: block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(57, 7);
			PushFollow(Follow._block_in_chunk77);
			block1=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block1.Tree, block1, "block1", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("chunk", 1);
			LeaveRule("chunk", 1);
			LeaveRule_chunk();
			if (state.backtracking > 0) { Memoize(input, 1, chunk_StartIndex); }

		}
		DebugLocation(58, 4);
		} finally { DebugExitRule(GrammarFileName, "chunk"); }
		return retval;

	}
	// $ANTLR end "chunk"

	partial void EnterRule_block();
	partial void LeaveRule_block();
	// $ANTLR start "block"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:60:1: block : ( stat )* ( retstat )? ;
	[GrammarRule("block")]
	private Antlr3CstNode block()
	{
		EnterRule_block();
		EnterRule("block", 2);
		var retval = new Antlr3CstNode("block");
		
		retval.Start = (IToken)input.LT(1);
		int block_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3CstNode stat2 = default(Antlr3CstNode);
		Antlr3CstNode retstat3 = default(Antlr3CstNode);

		try { DebugEnterRule(GrammarFileName, "block");
		DebugLocation(60, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 2)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:61:5: ( ( stat )* ( retstat )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:61:7: ( stat )* ( retstat )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(61, 7);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:61:7: ( stat )*
			try { DebugEnterSubRule(1);
			while (true)
			{
				int alt1=2;
				try { DebugEnterDecision(1, false);
				int LA1_1 = input.LA(1);

				if ((LA1_1==NAME||LA1_1==25||(LA1_1>=36 && LA1_1<=37)||(LA1_1>=48 && LA1_1<=49)||(LA1_1>=54 && LA1_1<=57)||LA1_1==59||LA1_1==63||LA1_1==68))
				{
					alt1 = 1;
				}


				} finally { DebugExitDecision(1); }
				switch ( alt1 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:61:7: stat
					{
					DebugLocation(61, 7);
					PushFollow(Follow._stat_in_block94);
					stat2=stat();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, stat2.Tree, stat2, "stat2", retval);

					}
					break;

				default:
					goto loop1;
				}
			}

			loop1:
				;

			} finally { DebugExitSubRule(1); }

			DebugLocation(61, 13);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:61:13: ( retstat )?
			int alt2=2;
			try { DebugEnterSubRule(2);
			try { DebugEnterDecision(2, false);
			int LA2_1 = input.LA(1);

			if ((LA2_1==64))
			{
				alt2 = 1;
			}
			} finally { DebugExitDecision(2); }
			switch (alt2)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:61:13: retstat
				{
				DebugLocation(61, 13);
				PushFollow(Follow._retstat_in_block97);
				retstat3=retstat();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, retstat3.Tree, retstat3, "retstat3", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(2); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("block", 2);
			LeaveRule("block", 2);
			LeaveRule_block();
			if (state.backtracking > 0) { Memoize(input, 2, block_StartIndex); }

		}
		DebugLocation(62, 4);
		} finally { DebugExitRule(GrammarFileName, "block"); }
		return retval;

	}
	// $ANTLR end "block"

	partial void EnterRule_stat();
	partial void LeaveRule_stat();
	// $ANTLR start "stat"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:64:1: stat : ( ';' | varlist '=' explist | functioncall | label | 'break' | 'goto' NAME | 'do' block 'end' | 'while' exp 'do' block 'end' | 'repeat' block 'until' exp | 'if' exp 'then' block ( 'elseif' exp 'then' block )* ( 'else' block )? 'end' | 'for' NAME '=' exp ',' exp ( ',' exp )? 'do' block 'end' | 'for' namelist 'in' explist 'do' block 'end' | 'function' funcname funcbody | 'local' 'function' NAME funcbody | 'local' namelist ( '=' explist )? );
	[GrammarRule("stat")]
	private Antlr3CstNode stat()
	{
		EnterRule_stat();
		EnterRule("stat", 3);
		var retval = new Antlr3CstNode("stat");
		
		retval.Start = (IToken)input.LT(1);
		int stat_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal4 = default(IToken);
		IToken char_literal6 = default(IToken);
		IToken string_literal10 = default(IToken);
		IToken string_literal11 = default(IToken);
		IToken NAME12 = default(IToken);
		IToken string_literal13 = default(IToken);
		IToken string_literal15 = default(IToken);
		IToken string_literal16 = default(IToken);
		IToken string_literal18 = default(IToken);
		IToken string_literal20 = default(IToken);
		IToken string_literal21 = default(IToken);
		IToken string_literal23 = default(IToken);
		IToken string_literal25 = default(IToken);
		IToken string_literal27 = default(IToken);
		IToken string_literal29 = default(IToken);
		IToken string_literal31 = default(IToken);
		IToken string_literal33 = default(IToken);
		IToken string_literal35 = default(IToken);
		IToken string_literal36 = default(IToken);
		IToken NAME37 = default(IToken);
		IToken char_literal38 = default(IToken);
		IToken char_literal40 = default(IToken);
		IToken char_literal42 = default(IToken);
		IToken string_literal44 = default(IToken);
		IToken string_literal46 = default(IToken);
		IToken string_literal47 = default(IToken);
		IToken string_literal49 = default(IToken);
		IToken string_literal51 = default(IToken);
		IToken string_literal53 = default(IToken);
		IToken string_literal54 = default(IToken);
		IToken string_literal57 = default(IToken);
		IToken string_literal58 = default(IToken);
		IToken NAME59 = default(IToken);
		IToken string_literal61 = default(IToken);
		IToken char_literal63 = default(IToken);
		Antlr3CstNode varlist5 = default(Antlr3CstNode);
		Antlr3CstNode explist7 = default(Antlr3CstNode);
		Antlr3CstNode functioncall8 = default(Antlr3CstNode);
		Antlr3CstNode label9 = default(Antlr3CstNode);
		Antlr3CstNode block14 = default(Antlr3CstNode);
		Antlr3CstNode exp17 = default(Antlr3CstNode);
		Antlr3CstNode block19 = default(Antlr3CstNode);
		Antlr3CstNode block22 = default(Antlr3CstNode);
		Antlr3CstNode exp24 = default(Antlr3CstNode);
		Antlr3CstNode exp26 = default(Antlr3CstNode);
		Antlr3CstNode block28 = default(Antlr3CstNode);
		Antlr3CstNode exp30 = default(Antlr3CstNode);
		Antlr3CstNode block32 = default(Antlr3CstNode);
		Antlr3CstNode block34 = default(Antlr3CstNode);
		Antlr3CstNode exp39 = default(Antlr3CstNode);
		Antlr3CstNode exp41 = default(Antlr3CstNode);
		Antlr3CstNode exp43 = default(Antlr3CstNode);
		Antlr3CstNode block45 = default(Antlr3CstNode);
		Antlr3CstNode namelist48 = default(Antlr3CstNode);
		Antlr3CstNode explist50 = default(Antlr3CstNode);
		Antlr3CstNode block52 = default(Antlr3CstNode);
		Antlr3CstNode funcname55 = default(Antlr3CstNode);
		Antlr3CstNode funcbody56 = default(Antlr3CstNode);
		Antlr3CstNode funcbody60 = default(Antlr3CstNode);
		Antlr3CstNode namelist62 = default(Antlr3CstNode);
		Antlr3CstNode explist64 = default(Antlr3CstNode);

		object char_literal4_tree = default(object);
		object char_literal6_tree = default(object);
		object string_literal10_tree = default(object);
		object string_literal11_tree = default(object);
		object NAME12_tree = default(object);
		object string_literal13_tree = default(object);
		object string_literal15_tree = default(object);
		object string_literal16_tree = default(object);
		object string_literal18_tree = default(object);
		object string_literal20_tree = default(object);
		object string_literal21_tree = default(object);
		object string_literal23_tree = default(object);
		object string_literal25_tree = default(object);
		object string_literal27_tree = default(object);
		object string_literal29_tree = default(object);
		object string_literal31_tree = default(object);
		object string_literal33_tree = default(object);
		object string_literal35_tree = default(object);
		object string_literal36_tree = default(object);
		object NAME37_tree = default(object);
		object char_literal38_tree = default(object);
		object char_literal40_tree = default(object);
		object char_literal42_tree = default(object);
		object string_literal44_tree = default(object);
		object string_literal46_tree = default(object);
		object string_literal47_tree = default(object);
		object string_literal49_tree = default(object);
		object string_literal51_tree = default(object);
		object string_literal53_tree = default(object);
		object string_literal54_tree = default(object);
		object string_literal57_tree = default(object);
		object string_literal58_tree = default(object);
		object NAME59_tree = default(object);
		object string_literal61_tree = default(object);
		object char_literal63_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "stat");
		DebugLocation(64, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 3)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:65:5: ( ';' | varlist '=' explist | functioncall | label | 'break' | 'goto' NAME | 'do' block 'end' | 'while' exp 'do' block 'end' | 'repeat' block 'until' exp | 'if' exp 'then' block ( 'elseif' exp 'then' block )* ( 'else' block )? 'end' | 'for' NAME '=' exp ',' exp ( ',' exp )? 'do' block 'end' | 'for' namelist 'in' explist 'do' block 'end' | 'function' funcname funcbody | 'local' 'function' NAME funcbody | 'local' namelist ( '=' explist )? )
			int alt7=15;
			try { DebugEnterDecision(7, false);
			switch (input.LA(1))
			{
			case 37:
				{
				alt7 = 1;
				}
				break;
			case NAME:
				{
				int LA7_2 = input.LA(2);

				if ((EvaluatePredicate(synpred4_Lua_fragment)))
				{
					alt7 = 2;
				}
				else if ((EvaluatePredicate(synpred5_Lua_fragment)))
				{
					alt7 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 7, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 25:
				{
				int LA7_2 = input.LA(2);

				if ((EvaluatePredicate(synpred4_Lua_fragment)))
				{
					alt7 = 2;
				}
				else if ((EvaluatePredicate(synpred5_Lua_fragment)))
				{
					alt7 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 7, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 36:
				{
				alt7 = 4;
				}
				break;
			case 48:
				{
				alt7 = 5;
				}
				break;
			case 56:
				{
				alt7 = 6;
				}
				break;
			case 49:
				{
				alt7 = 7;
				}
				break;
			case 68:
				{
				alt7 = 8;
				}
				break;
			case 63:
				{
				alt7 = 9;
				}
				break;
			case 57:
				{
				alt7 = 10;
				}
				break;
			case 54:
				{
				int LA7_2 = input.LA(2);

				if ((EvaluatePredicate(synpred16_Lua_fragment)))
				{
					alt7 = 11;
				}
				else if ((EvaluatePredicate(synpred17_Lua_fragment)))
				{
					alt7 = 12;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 7, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 55:
				{
				alt7 = 13;
				}
				break;
			case 59:
				{
				int LA7_2 = input.LA(2);

				if ((EvaluatePredicate(synpred19_Lua_fragment)))
				{
					alt7 = 14;
				}
				else if ((true))
				{
					alt7 = 15;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 7, 13, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 7, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(7); }
			switch (alt7)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:65:7: ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(65, 7);
				char_literal4=(IToken)Match(input,37,Follow._37_in_stat115); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal4_tree = (object)adaptor.Create(char_literal4, "char_literal4", retval);
				adaptor.AddChild(root_0, char_literal4_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:66:7: varlist '=' explist
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(66, 7);
				PushFollow(Follow._varlist_in_stat123);
				varlist5=varlist();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, varlist5.Tree, varlist5, "varlist5", retval);
				DebugLocation(66, 15);
				char_literal6=(IToken)Match(input,40,Follow._40_in_stat125); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal6_tree = (object)adaptor.Create(char_literal6, "char_literal6", retval);
				adaptor.AddChild(root_0, char_literal6_tree);
				}
				DebugLocation(66, 19);
				PushFollow(Follow._explist_in_stat127);
				explist7=explist();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, explist7.Tree, explist7, "explist7", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:67:7: functioncall
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(67, 7);
				PushFollow(Follow._functioncall_in_stat135);
				functioncall8=functioncall();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, functioncall8.Tree, functioncall8, "functioncall8", retval);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:68:7: label
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(68, 7);
				PushFollow(Follow._label_in_stat143);
				label9=label();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, label9.Tree, label9, "label9", retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:69:7: 'break'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(69, 7);
				string_literal10=(IToken)Match(input,48,Follow._48_in_stat151); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal10_tree = (object)adaptor.Create(string_literal10, "string_literal10", retval);
				adaptor.AddChild(root_0, string_literal10_tree);
				}

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:70:7: 'goto' NAME
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(70, 7);
				string_literal11=(IToken)Match(input,56,Follow._56_in_stat159); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal11_tree = (object)adaptor.Create(string_literal11, "string_literal11", retval);
				adaptor.AddChild(root_0, string_literal11_tree);
				}
				DebugLocation(70, 14);
				NAME12=(IToken)Match(input,NAME,Follow._NAME_in_stat161); if (state.failed) return retval;
				if (state.backtracking == 0) {
				NAME12_tree = (object)adaptor.Create(NAME12, "NAME12", retval);
				adaptor.AddChild(root_0, NAME12_tree);
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:71:7: 'do' block 'end'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(71, 7);
				string_literal13=(IToken)Match(input,49,Follow._49_in_stat169); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal13_tree = (object)adaptor.Create(string_literal13, "string_literal13", retval);
				adaptor.AddChild(root_0, string_literal13_tree);
				}
				DebugLocation(71, 12);
				PushFollow(Follow._block_in_stat171);
				block14=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block14.Tree, block14, "block14", retval);
				DebugLocation(71, 18);
				string_literal15=(IToken)Match(input,52,Follow._52_in_stat173); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal15_tree = (object)adaptor.Create(string_literal15, "string_literal15", retval);
				adaptor.AddChild(root_0, string_literal15_tree);
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:72:7: 'while' exp 'do' block 'end'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(72, 7);
				string_literal16=(IToken)Match(input,68,Follow._68_in_stat181); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal16_tree = (object)adaptor.Create(string_literal16, "string_literal16", retval);
				adaptor.AddChild(root_0, string_literal16_tree);
				}
				DebugLocation(72, 15);
				PushFollow(Follow._exp_in_stat183);
				exp17=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp17.Tree, exp17, "exp17", retval);
				DebugLocation(72, 19);
				string_literal18=(IToken)Match(input,49,Follow._49_in_stat185); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal18_tree = (object)adaptor.Create(string_literal18, "string_literal18", retval);
				adaptor.AddChild(root_0, string_literal18_tree);
				}
				DebugLocation(72, 24);
				PushFollow(Follow._block_in_stat187);
				block19=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block19.Tree, block19, "block19", retval);
				DebugLocation(72, 30);
				string_literal20=(IToken)Match(input,52,Follow._52_in_stat189); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal20_tree = (object)adaptor.Create(string_literal20, "string_literal20", retval);
				adaptor.AddChild(root_0, string_literal20_tree);
				}

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:73:7: 'repeat' block 'until' exp
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(73, 7);
				string_literal21=(IToken)Match(input,63,Follow._63_in_stat197); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal21_tree = (object)adaptor.Create(string_literal21, "string_literal21", retval);
				adaptor.AddChild(root_0, string_literal21_tree);
				}
				DebugLocation(73, 16);
				PushFollow(Follow._block_in_stat199);
				block22=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block22.Tree, block22, "block22", retval);
				DebugLocation(73, 22);
				string_literal23=(IToken)Match(input,67,Follow._67_in_stat201); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal23_tree = (object)adaptor.Create(string_literal23, "string_literal23", retval);
				adaptor.AddChild(root_0, string_literal23_tree);
				}
				DebugLocation(73, 30);
				PushFollow(Follow._exp_in_stat203);
				exp24=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp24.Tree, exp24, "exp24", retval);

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:74:7: 'if' exp 'then' block ( 'elseif' exp 'then' block )* ( 'else' block )? 'end'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(74, 7);
				string_literal25=(IToken)Match(input,57,Follow._57_in_stat211); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal25_tree = (object)adaptor.Create(string_literal25, "string_literal25", retval);
				adaptor.AddChild(root_0, string_literal25_tree);
				}
				DebugLocation(74, 12);
				PushFollow(Follow._exp_in_stat213);
				exp26=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp26.Tree, exp26, "exp26", retval);
				DebugLocation(74, 16);
				string_literal27=(IToken)Match(input,65,Follow._65_in_stat215); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal27_tree = (object)adaptor.Create(string_literal27, "string_literal27", retval);
				adaptor.AddChild(root_0, string_literal27_tree);
				}
				DebugLocation(74, 23);
				PushFollow(Follow._block_in_stat217);
				block28=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block28.Tree, block28, "block28", retval);
				DebugLocation(74, 29);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:74:29: ( 'elseif' exp 'then' block )*
				try { DebugEnterSubRule(3);
				while (true)
				{
					int alt3=2;
					try { DebugEnterDecision(3, false);
					int LA3_1 = input.LA(1);

					if ((LA3_1==51))
					{
						alt3 = 1;
					}


					} finally { DebugExitDecision(3); }
					switch ( alt3 )
					{
					case 1:
						DebugEnterAlt(1);
						// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:74:30: 'elseif' exp 'then' block
						{
						DebugLocation(74, 30);
						string_literal29=(IToken)Match(input,51,Follow._51_in_stat220); if (state.failed) return retval;
						if (state.backtracking == 0) {
						string_literal29_tree = (object)adaptor.Create(string_literal29, "string_literal29", retval);
						adaptor.AddChild(root_0, string_literal29_tree);
						}
						DebugLocation(74, 39);
						PushFollow(Follow._exp_in_stat222);
						exp30=exp();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, exp30.Tree, exp30, "exp30", retval);
						DebugLocation(74, 43);
						string_literal31=(IToken)Match(input,65,Follow._65_in_stat224); if (state.failed) return retval;
						if (state.backtracking == 0) {
						string_literal31_tree = (object)adaptor.Create(string_literal31, "string_literal31", retval);
						adaptor.AddChild(root_0, string_literal31_tree);
						}
						DebugLocation(74, 50);
						PushFollow(Follow._block_in_stat226);
						block32=block();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, block32.Tree, block32, "block32", retval);

						}
						break;

					default:
						goto loop3;
					}
				}

				loop3:
					;

				} finally { DebugExitSubRule(3); }

				DebugLocation(74, 58);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:74:58: ( 'else' block )?
				int alt4=2;
				try { DebugEnterSubRule(4);
				try { DebugEnterDecision(4, false);
				int LA4_1 = input.LA(1);

				if ((LA4_1==50))
				{
					alt4 = 1;
				}
				} finally { DebugExitDecision(4); }
				switch (alt4)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:74:59: 'else' block
					{
					DebugLocation(74, 59);
					string_literal33=(IToken)Match(input,50,Follow._50_in_stat231); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal33_tree = (object)adaptor.Create(string_literal33, "string_literal33", retval);
					adaptor.AddChild(root_0, string_literal33_tree);
					}
					DebugLocation(74, 66);
					PushFollow(Follow._block_in_stat233);
					block34=block();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, block34.Tree, block34, "block34", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(4); }

				DebugLocation(74, 74);
				string_literal35=(IToken)Match(input,52,Follow._52_in_stat237); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal35_tree = (object)adaptor.Create(string_literal35, "string_literal35", retval);
				adaptor.AddChild(root_0, string_literal35_tree);
				}

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:75:7: 'for' NAME '=' exp ',' exp ( ',' exp )? 'do' block 'end'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(75, 7);
				string_literal36=(IToken)Match(input,54,Follow._54_in_stat245); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal36_tree = (object)adaptor.Create(string_literal36, "string_literal36", retval);
				adaptor.AddChild(root_0, string_literal36_tree);
				}
				DebugLocation(75, 13);
				NAME37=(IToken)Match(input,NAME,Follow._NAME_in_stat247); if (state.failed) return retval;
				if (state.backtracking == 0) {
				NAME37_tree = (object)adaptor.Create(NAME37, "NAME37", retval);
				adaptor.AddChild(root_0, NAME37_tree);
				}
				DebugLocation(75, 18);
				char_literal38=(IToken)Match(input,40,Follow._40_in_stat249); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal38_tree = (object)adaptor.Create(char_literal38, "char_literal38", retval);
				adaptor.AddChild(root_0, char_literal38_tree);
				}
				DebugLocation(75, 22);
				PushFollow(Follow._exp_in_stat251);
				exp39=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp39.Tree, exp39, "exp39", retval);
				DebugLocation(75, 26);
				char_literal40=(IToken)Match(input,29,Follow._29_in_stat253); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal40_tree = (object)adaptor.Create(char_literal40, "char_literal40", retval);
				adaptor.AddChild(root_0, char_literal40_tree);
				}
				DebugLocation(75, 30);
				PushFollow(Follow._exp_in_stat255);
				exp41=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp41.Tree, exp41, "exp41", retval);
				DebugLocation(75, 34);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:75:34: ( ',' exp )?
				int alt5=2;
				try { DebugEnterSubRule(5);
				try { DebugEnterDecision(5, false);
				int LA5_1 = input.LA(1);

				if ((LA5_1==29))
				{
					alt5 = 1;
				}
				} finally { DebugExitDecision(5); }
				switch (alt5)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:75:35: ',' exp
					{
					DebugLocation(75, 35);
					char_literal42=(IToken)Match(input,29,Follow._29_in_stat258); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal42_tree = (object)adaptor.Create(char_literal42, "char_literal42", retval);
					adaptor.AddChild(root_0, char_literal42_tree);
					}
					DebugLocation(75, 39);
					PushFollow(Follow._exp_in_stat260);
					exp43=exp();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, exp43.Tree, exp43, "exp43", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(5); }

				DebugLocation(75, 45);
				string_literal44=(IToken)Match(input,49,Follow._49_in_stat264); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal44_tree = (object)adaptor.Create(string_literal44, "string_literal44", retval);
				adaptor.AddChild(root_0, string_literal44_tree);
				}
				DebugLocation(75, 50);
				PushFollow(Follow._block_in_stat266);
				block45=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block45.Tree, block45, "block45", retval);
				DebugLocation(75, 56);
				string_literal46=(IToken)Match(input,52,Follow._52_in_stat268); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal46_tree = (object)adaptor.Create(string_literal46, "string_literal46", retval);
				adaptor.AddChild(root_0, string_literal46_tree);
				}

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:76:7: 'for' namelist 'in' explist 'do' block 'end'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(76, 7);
				string_literal47=(IToken)Match(input,54,Follow._54_in_stat276); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal47_tree = (object)adaptor.Create(string_literal47, "string_literal47", retval);
				adaptor.AddChild(root_0, string_literal47_tree);
				}
				DebugLocation(76, 13);
				PushFollow(Follow._namelist_in_stat278);
				namelist48=namelist();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, namelist48.Tree, namelist48, "namelist48", retval);
				DebugLocation(76, 22);
				string_literal49=(IToken)Match(input,58,Follow._58_in_stat280); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal49_tree = (object)adaptor.Create(string_literal49, "string_literal49", retval);
				adaptor.AddChild(root_0, string_literal49_tree);
				}
				DebugLocation(76, 27);
				PushFollow(Follow._explist_in_stat282);
				explist50=explist();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, explist50.Tree, explist50, "explist50", retval);
				DebugLocation(76, 35);
				string_literal51=(IToken)Match(input,49,Follow._49_in_stat284); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal51_tree = (object)adaptor.Create(string_literal51, "string_literal51", retval);
				adaptor.AddChild(root_0, string_literal51_tree);
				}
				DebugLocation(76, 40);
				PushFollow(Follow._block_in_stat286);
				block52=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block52.Tree, block52, "block52", retval);
				DebugLocation(76, 46);
				string_literal53=(IToken)Match(input,52,Follow._52_in_stat288); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal53_tree = (object)adaptor.Create(string_literal53, "string_literal53", retval);
				adaptor.AddChild(root_0, string_literal53_tree);
				}

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:77:7: 'function' funcname funcbody
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(77, 7);
				string_literal54=(IToken)Match(input,55,Follow._55_in_stat296); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal54_tree = (object)adaptor.Create(string_literal54, "string_literal54", retval);
				adaptor.AddChild(root_0, string_literal54_tree);
				}
				DebugLocation(77, 18);
				PushFollow(Follow._funcname_in_stat298);
				funcname55=funcname();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, funcname55.Tree, funcname55, "funcname55", retval);
				DebugLocation(77, 27);
				PushFollow(Follow._funcbody_in_stat300);
				funcbody56=funcbody();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, funcbody56.Tree, funcbody56, "funcbody56", retval);

				}
				break;
			case 14:
				DebugEnterAlt(14);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:78:7: 'local' 'function' NAME funcbody
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(78, 7);
				string_literal57=(IToken)Match(input,59,Follow._59_in_stat308); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal57_tree = (object)adaptor.Create(string_literal57, "string_literal57", retval);
				adaptor.AddChild(root_0, string_literal57_tree);
				}
				DebugLocation(78, 15);
				string_literal58=(IToken)Match(input,55,Follow._55_in_stat310); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal58_tree = (object)adaptor.Create(string_literal58, "string_literal58", retval);
				adaptor.AddChild(root_0, string_literal58_tree);
				}
				DebugLocation(78, 26);
				NAME59=(IToken)Match(input,NAME,Follow._NAME_in_stat312); if (state.failed) return retval;
				if (state.backtracking == 0) {
				NAME59_tree = (object)adaptor.Create(NAME59, "NAME59", retval);
				adaptor.AddChild(root_0, NAME59_tree);
				}
				DebugLocation(78, 31);
				PushFollow(Follow._funcbody_in_stat314);
				funcbody60=funcbody();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, funcbody60.Tree, funcbody60, "funcbody60", retval);

				}
				break;
			case 15:
				DebugEnterAlt(15);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:79:7: 'local' namelist ( '=' explist )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(79, 7);
				string_literal61=(IToken)Match(input,59,Follow._59_in_stat322); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal61_tree = (object)adaptor.Create(string_literal61, "string_literal61", retval);
				adaptor.AddChild(root_0, string_literal61_tree);
				}
				DebugLocation(79, 15);
				PushFollow(Follow._namelist_in_stat324);
				namelist62=namelist();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, namelist62.Tree, namelist62, "namelist62", retval);
				DebugLocation(79, 24);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:79:24: ( '=' explist )?
				int alt6=2;
				try { DebugEnterSubRule(6);
				try { DebugEnterDecision(6, false);
				int LA6_1 = input.LA(1);

				if ((LA6_1==40))
				{
					alt6 = 1;
				}
				} finally { DebugExitDecision(6); }
				switch (alt6)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:79:25: '=' explist
					{
					DebugLocation(79, 25);
					char_literal63=(IToken)Match(input,40,Follow._40_in_stat327); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal63_tree = (object)adaptor.Create(char_literal63, "char_literal63", retval);
					adaptor.AddChild(root_0, char_literal63_tree);
					}
					DebugLocation(79, 29);
					PushFollow(Follow._explist_in_stat329);
					explist64=explist();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, explist64.Tree, explist64, "explist64", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(6); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("stat", 3);
			LeaveRule("stat", 3);
			LeaveRule_stat();
			if (state.backtracking > 0) { Memoize(input, 3, stat_StartIndex); }

		}
		DebugLocation(80, 4);
		} finally { DebugExitRule(GrammarFileName, "stat"); }
		return retval;

	}
	// $ANTLR end "stat"

	partial void EnterRule_retstat();
	partial void LeaveRule_retstat();
	// $ANTLR start "retstat"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:82:1: retstat : 'return' ( explist )? ( ';' )? ;
	[GrammarRule("retstat")]
	private Antlr3CstNode retstat()
	{
		EnterRule_retstat();
		EnterRule("retstat", 4);
		var retval = new Antlr3CstNode("retstat");
		
		retval.Start = (IToken)input.LT(1);
		int retstat_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal65 = default(IToken);
		IToken char_literal67 = default(IToken);
		Antlr3CstNode explist66 = default(Antlr3CstNode);

		object string_literal65_tree = default(object);
		object char_literal67_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "retstat");
		DebugLocation(82, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 4)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:83:5: ( 'return' ( explist )? ( ';' )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:83:7: 'return' ( explist )? ( ';' )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(83, 7);
			string_literal65=(IToken)Match(input,64,Follow._64_in_retstat348); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal65_tree = (object)adaptor.Create(string_literal65, "string_literal65", retval);
			adaptor.AddChild(root_0, string_literal65_tree);
			}
			DebugLocation(83, 16);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:83:16: ( explist )?
			int alt8=2;
			try { DebugEnterSubRule(8);
			try { DebugEnterDecision(8, false);
			int LA8_1 = input.LA(1);

			if ((LA8_1==CHARSTRING||(LA8_1>=FLOAT && LA8_1<=HEX_FLOAT)||LA8_1==INT||(LA8_1>=LONGSTRING && LA8_1<=NORMALSTRING)||LA8_1==23||LA8_1==25||LA8_1==30||LA8_1==33||LA8_1==53||LA8_1==55||(LA8_1>=60 && LA8_1<=61)||LA8_1==66||LA8_1==69))
			{
				alt8 = 1;
			}
			} finally { DebugExitDecision(8); }
			switch (alt8)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:83:16: explist
				{
				DebugLocation(83, 16);
				PushFollow(Follow._explist_in_retstat350);
				explist66=explist();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, explist66.Tree, explist66, "explist66", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(8); }

			DebugLocation(83, 25);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:83:25: ( ';' )?
			int alt9=2;
			try { DebugEnterSubRule(9);
			try { DebugEnterDecision(9, false);
			int LA9_1 = input.LA(1);

			if ((LA9_1==37))
			{
				alt9 = 1;
			}
			} finally { DebugExitDecision(9); }
			switch (alt9)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:83:25: ';'
				{
				DebugLocation(83, 25);
				char_literal67=(IToken)Match(input,37,Follow._37_in_retstat353); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal67_tree = (object)adaptor.Create(char_literal67, "char_literal67", retval);
				adaptor.AddChild(root_0, char_literal67_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(9); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("retstat", 4);
			LeaveRule("retstat", 4);
			LeaveRule_retstat();
			if (state.backtracking > 0) { Memoize(input, 4, retstat_StartIndex); }

		}
		DebugLocation(84, 4);
		} finally { DebugExitRule(GrammarFileName, "retstat"); }
		return retval;

	}
	// $ANTLR end "retstat"

	partial void EnterRule_label();
	partial void LeaveRule_label();
	// $ANTLR start "label"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:86:1: label : '::' NAME '::' ;
	[GrammarRule("label")]
	private Antlr3CstNode label()
	{
		EnterRule_label();
		EnterRule("label", 5);
		var retval = new Antlr3CstNode("label");
		
		retval.Start = (IToken)input.LT(1);
		int label_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal68 = default(IToken);
		IToken NAME69 = default(IToken);
		IToken string_literal70 = default(IToken);

		object string_literal68_tree = default(object);
		object NAME69_tree = default(object);
		object string_literal70_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "label");
		DebugLocation(86, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 5)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:87:5: ( '::' NAME '::' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:87:7: '::' NAME '::'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(87, 7);
			string_literal68=(IToken)Match(input,36,Follow._36_in_label371); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal68_tree = (object)adaptor.Create(string_literal68, "string_literal68", retval);
			adaptor.AddChild(root_0, string_literal68_tree);
			}
			DebugLocation(87, 12);
			NAME69=(IToken)Match(input,NAME,Follow._NAME_in_label373); if (state.failed) return retval;
			if (state.backtracking == 0) {
			NAME69_tree = (object)adaptor.Create(NAME69, "NAME69", retval);
			adaptor.AddChild(root_0, NAME69_tree);
			}
			DebugLocation(87, 17);
			string_literal70=(IToken)Match(input,36,Follow._36_in_label375); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal70_tree = (object)adaptor.Create(string_literal70, "string_literal70", retval);
			adaptor.AddChild(root_0, string_literal70_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("label", 5);
			LeaveRule("label", 5);
			LeaveRule_label();
			if (state.backtracking > 0) { Memoize(input, 5, label_StartIndex); }

		}
		DebugLocation(88, 4);
		} finally { DebugExitRule(GrammarFileName, "label"); }
		return retval;

	}
	// $ANTLR end "label"

	partial void EnterRule_funcname();
	partial void LeaveRule_funcname();
	// $ANTLR start "funcname"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:90:1: funcname : NAME ( '.' NAME )* ( ':' NAME )? ;
	[GrammarRule("funcname")]
	private Antlr3CstNode funcname()
	{
		EnterRule_funcname();
		EnterRule("funcname", 6);
		var retval = new Antlr3CstNode("funcname");
		
		retval.Start = (IToken)input.LT(1);
		int funcname_StartIndex = input.Index;

		object root_0 = default(object);

		IToken NAME71 = default(IToken);
		IToken char_literal72 = default(IToken);
		IToken NAME73 = default(IToken);
		IToken char_literal74 = default(IToken);
		IToken NAME75 = default(IToken);

		object NAME71_tree = default(object);
		object char_literal72_tree = default(object);
		object NAME73_tree = default(object);
		object char_literal74_tree = default(object);
		object NAME75_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "funcname");
		DebugLocation(90, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 6)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:91:5: ( NAME ( '.' NAME )* ( ':' NAME )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:91:7: NAME ( '.' NAME )* ( ':' NAME )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(91, 7);
			NAME71=(IToken)Match(input,NAME,Follow._NAME_in_funcname392); if (state.failed) return retval;
			if (state.backtracking == 0) {
			NAME71_tree = (object)adaptor.Create(NAME71, "NAME71", retval);
			adaptor.AddChild(root_0, NAME71_tree);
			}
			DebugLocation(91, 12);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:91:12: ( '.' NAME )*
			try { DebugEnterSubRule(10);
			while (true)
			{
				int alt10=2;
				try { DebugEnterDecision(10, false);
				int LA10_1 = input.LA(1);

				if ((LA10_1==31))
				{
					alt10 = 1;
				}


				} finally { DebugExitDecision(10); }
				switch ( alt10 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:91:13: '.' NAME
					{
					DebugLocation(91, 13);
					char_literal72=(IToken)Match(input,31,Follow._31_in_funcname395); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal72_tree = (object)adaptor.Create(char_literal72, "char_literal72", retval);
					adaptor.AddChild(root_0, char_literal72_tree);
					}
					DebugLocation(91, 17);
					NAME73=(IToken)Match(input,NAME,Follow._NAME_in_funcname397); if (state.failed) return retval;
					if (state.backtracking == 0) {
					NAME73_tree = (object)adaptor.Create(NAME73, "NAME73", retval);
					adaptor.AddChild(root_0, NAME73_tree);
					}

					}
					break;

				default:
					goto loop10;
				}
			}

			loop10:
				;

			} finally { DebugExitSubRule(10); }

			DebugLocation(91, 24);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:91:24: ( ':' NAME )?
			int alt11=2;
			try { DebugEnterSubRule(11);
			try { DebugEnterDecision(11, false);
			int LA11_1 = input.LA(1);

			if ((LA11_1==35))
			{
				alt11 = 1;
			}
			} finally { DebugExitDecision(11); }
			switch (alt11)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:91:25: ':' NAME
				{
				DebugLocation(91, 25);
				char_literal74=(IToken)Match(input,35,Follow._35_in_funcname402); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal74_tree = (object)adaptor.Create(char_literal74, "char_literal74", retval);
				adaptor.AddChild(root_0, char_literal74_tree);
				}
				DebugLocation(91, 29);
				NAME75=(IToken)Match(input,NAME,Follow._NAME_in_funcname404); if (state.failed) return retval;
				if (state.backtracking == 0) {
				NAME75_tree = (object)adaptor.Create(NAME75, "NAME75", retval);
				adaptor.AddChild(root_0, NAME75_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(11); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("funcname", 6);
			LeaveRule("funcname", 6);
			LeaveRule_funcname();
			if (state.backtracking > 0) { Memoize(input, 6, funcname_StartIndex); }

		}
		DebugLocation(92, 4);
		} finally { DebugExitRule(GrammarFileName, "funcname"); }
		return retval;

	}
	// $ANTLR end "funcname"

	partial void EnterRule_varlist();
	partial void LeaveRule_varlist();
	// $ANTLR start "varlist"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:94:1: varlist : var ( ',' var )* ;
	[GrammarRule("varlist")]
	private Antlr3CstNode varlist()
	{
		EnterRule_varlist();
		EnterRule("varlist", 7);
		var retval = new Antlr3CstNode("varlist");
		
		retval.Start = (IToken)input.LT(1);
		int varlist_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal77 = default(IToken);
		Antlr3CstNode var76 = default(Antlr3CstNode);
		Antlr3CstNode var78 = default(Antlr3CstNode);

		object char_literal77_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "varlist");
		DebugLocation(94, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 7)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:95:5: ( var ( ',' var )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:95:7: var ( ',' var )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(95, 7);
			PushFollow(Follow._var_in_varlist423);
			var76=var();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, var76.Tree, var76, "var76", retval);
			DebugLocation(95, 11);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:95:11: ( ',' var )*
			try { DebugEnterSubRule(12);
			while (true)
			{
				int alt12=2;
				try { DebugEnterDecision(12, false);
				int LA12_1 = input.LA(1);

				if ((LA12_1==29))
				{
					alt12 = 1;
				}


				} finally { DebugExitDecision(12); }
				switch ( alt12 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:95:12: ',' var
					{
					DebugLocation(95, 12);
					char_literal77=(IToken)Match(input,29,Follow._29_in_varlist426); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal77_tree = (object)adaptor.Create(char_literal77, "char_literal77", retval);
					adaptor.AddChild(root_0, char_literal77_tree);
					}
					DebugLocation(95, 16);
					PushFollow(Follow._var_in_varlist428);
					var78=var();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, var78.Tree, var78, "var78", retval);

					}
					break;

				default:
					goto loop12;
				}
			}

			loop12:
				;

			} finally { DebugExitSubRule(12); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("varlist", 7);
			LeaveRule("varlist", 7);
			LeaveRule_varlist();
			if (state.backtracking > 0) { Memoize(input, 7, varlist_StartIndex); }

		}
		DebugLocation(96, 4);
		} finally { DebugExitRule(GrammarFileName, "varlist"); }
		return retval;

	}
	// $ANTLR end "varlist"

	partial void EnterRule_namelist();
	partial void LeaveRule_namelist();
	// $ANTLR start "namelist"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:98:1: namelist : NAME ( ',' NAME )* ;
	[GrammarRule("namelist")]
	private Antlr3CstNode namelist()
	{
		EnterRule_namelist();
		EnterRule("namelist", 8);
		var retval = new Antlr3CstNode("namelist");
		
		retval.Start = (IToken)input.LT(1);
		int namelist_StartIndex = input.Index;

		object root_0 = default(object);

		IToken NAME79 = default(IToken);
		IToken char_literal80 = default(IToken);
		IToken NAME81 = default(IToken);

		object NAME79_tree = default(object);
		object char_literal80_tree = default(object);
		object NAME81_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "namelist");
		DebugLocation(98, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 8)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:99:5: ( NAME ( ',' NAME )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:99:7: NAME ( ',' NAME )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(99, 7);
			NAME79=(IToken)Match(input,NAME,Follow._NAME_in_namelist447); if (state.failed) return retval;
			if (state.backtracking == 0) {
			NAME79_tree = (object)adaptor.Create(NAME79, "NAME79", retval);
			adaptor.AddChild(root_0, NAME79_tree);
			}
			DebugLocation(99, 12);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:99:12: ( ',' NAME )*
			try { DebugEnterSubRule(13);
			while (true)
			{
				int alt13=2;
				try { DebugEnterDecision(13, false);
				int LA13_1 = input.LA(1);

				if ((LA13_1==29))
				{
					int LA13_2 = input.LA(2);

					if ((LA13_2==NAME))
					{
						alt13 = 1;
					}


				}


				} finally { DebugExitDecision(13); }
				switch ( alt13 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:99:13: ',' NAME
					{
					DebugLocation(99, 13);
					char_literal80=(IToken)Match(input,29,Follow._29_in_namelist450); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal80_tree = (object)adaptor.Create(char_literal80, "char_literal80", retval);
					adaptor.AddChild(root_0, char_literal80_tree);
					}
					DebugLocation(99, 17);
					NAME81=(IToken)Match(input,NAME,Follow._NAME_in_namelist452); if (state.failed) return retval;
					if (state.backtracking == 0) {
					NAME81_tree = (object)adaptor.Create(NAME81, "NAME81", retval);
					adaptor.AddChild(root_0, NAME81_tree);
					}

					}
					break;

				default:
					goto loop13;
				}
			}

			loop13:
				;

			} finally { DebugExitSubRule(13); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("namelist", 8);
			LeaveRule("namelist", 8);
			LeaveRule_namelist();
			if (state.backtracking > 0) { Memoize(input, 8, namelist_StartIndex); }

		}
		DebugLocation(100, 4);
		} finally { DebugExitRule(GrammarFileName, "namelist"); }
		return retval;

	}
	// $ANTLR end "namelist"

	partial void EnterRule_explist();
	partial void LeaveRule_explist();
	// $ANTLR start "explist"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:102:1: explist : exp ( ',' exp )* ;
	[GrammarRule("explist")]
	private Antlr3CstNode explist()
	{
		EnterRule_explist();
		EnterRule("explist", 9);
		var retval = new Antlr3CstNode("explist");
		
		retval.Start = (IToken)input.LT(1);
		int explist_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal83 = default(IToken);
		Antlr3CstNode exp82 = default(Antlr3CstNode);
		Antlr3CstNode exp84 = default(Antlr3CstNode);

		object char_literal83_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "explist");
		DebugLocation(102, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 9)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:103:5: ( exp ( ',' exp )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:103:7: exp ( ',' exp )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(103, 7);
			PushFollow(Follow._exp_in_explist471);
			exp82=exp();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, exp82.Tree, exp82, "exp82", retval);
			DebugLocation(103, 11);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:103:11: ( ',' exp )*
			try { DebugEnterSubRule(14);
			while (true)
			{
				int alt14=2;
				try { DebugEnterDecision(14, false);
				int LA14_1 = input.LA(1);

				if ((LA14_1==29))
				{
					alt14 = 1;
				}


				} finally { DebugExitDecision(14); }
				switch ( alt14 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:103:12: ',' exp
					{
					DebugLocation(103, 12);
					char_literal83=(IToken)Match(input,29,Follow._29_in_explist474); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal83_tree = (object)adaptor.Create(char_literal83, "char_literal83", retval);
					adaptor.AddChild(root_0, char_literal83_tree);
					}
					DebugLocation(103, 16);
					PushFollow(Follow._exp_in_explist476);
					exp84=exp();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, exp84.Tree, exp84, "exp84", retval);

					}
					break;

				default:
					goto loop14;
				}
			}

			loop14:
				;

			} finally { DebugExitSubRule(14); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("explist", 9);
			LeaveRule("explist", 9);
			LeaveRule_explist();
			if (state.backtracking > 0) { Memoize(input, 9, explist_StartIndex); }

		}
		DebugLocation(104, 4);
		} finally { DebugExitRule(GrammarFileName, "explist"); }
		return retval;

	}
	// $ANTLR end "explist"

	partial void EnterRule_exp();
	partial void LeaveRule_exp();
	// $ANTLR start "exp"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:106:1: exp : ( 'nil' | 'false' | 'true' | number | string | '...' | functiondef | prefixexp | tableconstructor | unop exp ) ( binop exp )* ;
	[GrammarRule("exp")]
	private Antlr3CstNode exp()
	{
		EnterRule_exp();
		EnterRule("exp", 10);
		var retval = new Antlr3CstNode("exp");
		
		retval.Start = (IToken)input.LT(1);
		int exp_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal85 = default(IToken);
		IToken string_literal86 = default(IToken);
		IToken string_literal87 = default(IToken);
		IToken string_literal90 = default(IToken);
		Antlr3CstNode number88 = default(Antlr3CstNode);
		Antlr3CstNode string89 = default(Antlr3CstNode);
		Antlr3CstNode functiondef91 = default(Antlr3CstNode);
		Antlr3CstNode prefixexp92 = default(Antlr3CstNode);
		Antlr3CstNode tableconstructor93 = default(Antlr3CstNode);
		Antlr3CstNode unop94 = default(Antlr3CstNode);
		Antlr3CstNode exp95 = default(Antlr3CstNode);
		Antlr3CstNode binop96 = default(Antlr3CstNode);
		Antlr3CstNode exp97 = default(Antlr3CstNode);

		object string_literal85_tree = default(object);
		object string_literal86_tree = default(object);
		object string_literal87_tree = default(object);
		object string_literal90_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "exp");
		DebugLocation(106, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 10)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:107:5: ( ( 'nil' | 'false' | 'true' | number | string | '...' | functiondef | prefixexp | tableconstructor | unop exp ) ( binop exp )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:107:7: ( 'nil' | 'false' | 'true' | number | string | '...' | functiondef | prefixexp | tableconstructor | unop exp ) ( binop exp )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(107, 7);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:107:7: ( 'nil' | 'false' | 'true' | number | string | '...' | functiondef | prefixexp | tableconstructor | unop exp )
			int alt15=10;
			try { DebugEnterSubRule(15);
			try { DebugEnterDecision(15, false);
			switch (input.LA(1))
			{
			case 60:
				{
				alt15 = 1;
				}
				break;
			case 53:
				{
				alt15 = 2;
				}
				break;
			case 66:
				{
				alt15 = 3;
				}
				break;
			case FLOAT:
			case HEX:
			case HEX_FLOAT:
			case INT:
				{
				alt15 = 4;
				}
				break;
			case CHARSTRING:
			case LONGSTRING:
			case NORMALSTRING:
				{
				alt15 = 5;
				}
				break;
			case 33:
				{
				alt15 = 6;
				}
				break;
			case 55:
				{
				alt15 = 7;
				}
				break;
			case NAME:
			case 25:
				{
				alt15 = 8;
				}
				break;
			case 69:
				{
				alt15 = 9;
				}
				break;
			case 23:
			case 30:
			case 61:
				{
				alt15 = 10;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 15, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(15); }
			switch (alt15)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:107:8: 'nil'
				{
				DebugLocation(107, 8);
				string_literal85=(IToken)Match(input,60,Follow._60_in_exp496); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal85_tree = (object)adaptor.Create(string_literal85, "string_literal85", retval);
				adaptor.AddChild(root_0, string_literal85_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:107:16: 'false'
				{
				DebugLocation(107, 16);
				string_literal86=(IToken)Match(input,53,Follow._53_in_exp500); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal86_tree = (object)adaptor.Create(string_literal86, "string_literal86", retval);
				adaptor.AddChild(root_0, string_literal86_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:107:26: 'true'
				{
				DebugLocation(107, 26);
				string_literal87=(IToken)Match(input,66,Follow._66_in_exp504); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal87_tree = (object)adaptor.Create(string_literal87, "string_literal87", retval);
				adaptor.AddChild(root_0, string_literal87_tree);
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:107:35: number
				{
				DebugLocation(107, 35);
				PushFollow(Follow._number_in_exp508);
				number88=number();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, number88.Tree, number88, "number88", retval);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:107:44: string
				{
				DebugLocation(107, 44);
				PushFollow(Follow._string_in_exp512);
				string89=@string();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, string89.Tree, string89, "string89", retval);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:107:53: '...'
				{
				DebugLocation(107, 53);
				string_literal90=(IToken)Match(input,33,Follow._33_in_exp516); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal90_tree = (object)adaptor.Create(string_literal90, "string_literal90", retval);
				adaptor.AddChild(root_0, string_literal90_tree);
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:107:61: functiondef
				{
				DebugLocation(107, 61);
				PushFollow(Follow._functiondef_in_exp520);
				functiondef91=functiondef();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, functiondef91.Tree, functiondef91, "functiondef91", retval);

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:108:7: prefixexp
				{
				DebugLocation(108, 7);
				PushFollow(Follow._prefixexp_in_exp528);
				prefixexp92=prefixexp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, prefixexp92.Tree, prefixexp92, "prefixexp92", retval);

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:108:19: tableconstructor
				{
				DebugLocation(108, 19);
				PushFollow(Follow._tableconstructor_in_exp532);
				tableconstructor93=tableconstructor();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, tableconstructor93.Tree, tableconstructor93, "tableconstructor93", retval);

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:108:38: unop exp
				{
				DebugLocation(108, 38);
				PushFollow(Follow._unop_in_exp536);
				unop94=unop();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unop94.Tree, unop94, "unop94", retval);
				DebugLocation(108, 43);
				PushFollow(Follow._exp_in_exp538);
				exp95=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp95.Tree, exp95, "exp95", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(15); }

			DebugLocation(108, 48);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:108:48: ( binop exp )*
			try { DebugEnterSubRule(16);
			while (true)
			{
				int alt16=2;
				try { DebugEnterDecision(16, false);
				int LA16_1 = input.LA(1);

				if ((LA16_1==24||(LA16_1>=27 && LA16_1<=28)||LA16_1==30||LA16_1==32||LA16_1==34||(LA16_1>=38 && LA16_1<=39)||(LA16_1>=41 && LA16_1<=43)||(LA16_1>=46 && LA16_1<=47)||LA16_1==62||LA16_1==71))
				{
					int LA16_2 = input.LA(2);

					if ((EvaluatePredicate(synpred37_Lua_fragment)))
					{
						alt16 = 1;
					}


				}


				} finally { DebugExitDecision(16); }
				switch ( alt16 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:108:49: binop exp
					{
					DebugLocation(108, 49);
					PushFollow(Follow._binop_in_exp542);
					binop96=binop();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, binop96.Tree, binop96, "binop96", retval);
					DebugLocation(108, 55);
					PushFollow(Follow._exp_in_exp544);
					exp97=exp();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, exp97.Tree, exp97, "exp97", retval);

					}
					break;

				default:
					goto loop16;
				}
			}

			loop16:
				;

			} finally { DebugExitSubRule(16); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("exp", 10);
			LeaveRule("exp", 10);
			LeaveRule_exp();
			if (state.backtracking > 0) { Memoize(input, 10, exp_StartIndex); }

		}
		DebugLocation(109, 1);
		} finally { DebugExitRule(GrammarFileName, "exp"); }
		return retval;

	}
	// $ANTLR end "exp"

	partial void EnterRule_var();
	partial void LeaveRule_var();
	// $ANTLR start "var"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:111:1: var : ( NAME | '(' exp ')' varSuffix ) ( varSuffix )* ;
	[GrammarRule("var")]
	private Antlr3CstNode var()
	{
		EnterRule_var();
		EnterRule("var", 11);
		var retval = new Antlr3CstNode("var");
		
		retval.Start = (IToken)input.LT(1);
		int var_StartIndex = input.Index;

		object root_0 = default(object);

		IToken NAME98 = default(IToken);
		IToken char_literal99 = default(IToken);
		IToken char_literal101 = default(IToken);
		Antlr3CstNode exp100 = default(Antlr3CstNode);
		Antlr3CstNode varSuffix102 = default(Antlr3CstNode);
		Antlr3CstNode varSuffix103 = default(Antlr3CstNode);

		object NAME98_tree = default(object);
		object char_literal99_tree = default(object);
		object char_literal101_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "var");
		DebugLocation(111, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 11)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:112:5: ( ( NAME | '(' exp ')' varSuffix ) ( varSuffix )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:112:7: ( NAME | '(' exp ')' varSuffix ) ( varSuffix )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(112, 7);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:112:7: ( NAME | '(' exp ')' varSuffix )
			int alt17=2;
			try { DebugEnterSubRule(17);
			try { DebugEnterDecision(17, false);
			int LA17_1 = input.LA(1);

			if ((LA17_1==NAME))
			{
				alt17 = 1;
			}
			else if ((LA17_1==25))
			{
				alt17 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 17, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(17); }
			switch (alt17)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:112:8: NAME
				{
				DebugLocation(112, 8);
				NAME98=(IToken)Match(input,NAME,Follow._NAME_in_var561); if (state.failed) return retval;
				if (state.backtracking == 0) {
				NAME98_tree = (object)adaptor.Create(NAME98, "NAME98", retval);
				adaptor.AddChild(root_0, NAME98_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:112:15: '(' exp ')' varSuffix
				{
				DebugLocation(112, 15);
				char_literal99=(IToken)Match(input,25,Follow._25_in_var565); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal99_tree = (object)adaptor.Create(char_literal99, "char_literal99", retval);
				adaptor.AddChild(root_0, char_literal99_tree);
				}
				DebugLocation(112, 19);
				PushFollow(Follow._exp_in_var567);
				exp100=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp100.Tree, exp100, "exp100", retval);
				DebugLocation(112, 23);
				char_literal101=(IToken)Match(input,26,Follow._26_in_var569); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal101_tree = (object)adaptor.Create(char_literal101, "char_literal101", retval);
				adaptor.AddChild(root_0, char_literal101_tree);
				}
				DebugLocation(112, 27);
				PushFollow(Follow._varSuffix_in_var571);
				varSuffix102=varSuffix();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, varSuffix102.Tree, varSuffix102, "varSuffix102", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(17); }

			DebugLocation(112, 38);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:112:38: ( varSuffix )*
			try { DebugEnterSubRule(18);
			while (true)
			{
				int alt18=2;
				try { DebugEnterDecision(18, false);
				switch (input.LA(1))
				{
				case 35:
					{
					int LA18_2 = input.LA(2);

					if ((EvaluatePredicate(synpred39_Lua_fragment)))
					{
						alt18 = 1;
					}


					}
					break;
				case 25:
					{
					int LA18_2 = input.LA(2);

					if ((EvaluatePredicate(synpred39_Lua_fragment)))
					{
						alt18 = 1;
					}


					}
					break;
				case 69:
					{
					int LA18_2 = input.LA(2);

					if ((EvaluatePredicate(synpred39_Lua_fragment)))
					{
						alt18 = 1;
					}


					}
					break;
				case CHARSTRING:
				case LONGSTRING:
				case NORMALSTRING:
					{
					int LA18_2 = input.LA(2);

					if ((EvaluatePredicate(synpred39_Lua_fragment)))
					{
						alt18 = 1;
					}


					}
					break;
				case 31:
				case 44:
					{
					alt18 = 1;
					}
					break;
				}

				} finally { DebugExitDecision(18); }
				switch ( alt18 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:112:38: varSuffix
					{
					DebugLocation(112, 38);
					PushFollow(Follow._varSuffix_in_var574);
					varSuffix103=varSuffix();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, varSuffix103.Tree, varSuffix103, "varSuffix103", retval);

					}
					break;

				default:
					goto loop18;
				}
			}

			loop18:
				;

			} finally { DebugExitSubRule(18); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("var", 11);
			LeaveRule("var", 11);
			LeaveRule_var();
			if (state.backtracking > 0) { Memoize(input, 11, var_StartIndex); }

		}
		DebugLocation(113, 4);
		} finally { DebugExitRule(GrammarFileName, "var"); }
		return retval;

	}
	// $ANTLR end "var"

	partial void EnterRule_prefixexp();
	partial void LeaveRule_prefixexp();
	// $ANTLR start "prefixexp"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:115:1: prefixexp : varOrExp ( nameAndArgs )* ;
	[GrammarRule("prefixexp")]
	private Antlr3CstNode prefixexp()
	{
		EnterRule_prefixexp();
		EnterRule("prefixexp", 12);
		var retval = new Antlr3CstNode("prefixexp");
		
		retval.Start = (IToken)input.LT(1);
		int prefixexp_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3CstNode varOrExp104 = default(Antlr3CstNode);
		Antlr3CstNode nameAndArgs105 = default(Antlr3CstNode);

		try { DebugEnterRule(GrammarFileName, "prefixexp");
		DebugLocation(115, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 12)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:116:5: ( varOrExp ( nameAndArgs )* )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:116:7: varOrExp ( nameAndArgs )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(116, 7);
			PushFollow(Follow._varOrExp_in_prefixexp592);
			varOrExp104=varOrExp();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, varOrExp104.Tree, varOrExp104, "varOrExp104", retval);
			DebugLocation(116, 16);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:116:16: ( nameAndArgs )*
			try { DebugEnterSubRule(19);
			while (true)
			{
				int alt19=2;
				try { DebugEnterDecision(19, false);
				int LA19_1 = input.LA(1);

				if ((LA19_1==25))
				{
					int LA19_2 = input.LA(2);

					if ((EvaluatePredicate(synpred40_Lua_fragment)))
					{
						alt19 = 1;
					}


				}
				else if ((LA19_1==CHARSTRING||LA19_1==LONGSTRING||LA19_1==NORMALSTRING||LA19_1==35||LA19_1==69))
				{
					alt19 = 1;
				}


				} finally { DebugExitDecision(19); }
				switch ( alt19 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:116:16: nameAndArgs
					{
					DebugLocation(116, 16);
					PushFollow(Follow._nameAndArgs_in_prefixexp594);
					nameAndArgs105=nameAndArgs();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, nameAndArgs105.Tree, nameAndArgs105, "nameAndArgs105", retval);

					}
					break;

				default:
					goto loop19;
				}
			}

			loop19:
				;

			} finally { DebugExitSubRule(19); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("prefixexp", 12);
			LeaveRule("prefixexp", 12);
			LeaveRule_prefixexp();
			if (state.backtracking > 0) { Memoize(input, 12, prefixexp_StartIndex); }

		}
		DebugLocation(117, 4);
		} finally { DebugExitRule(GrammarFileName, "prefixexp"); }
		return retval;

	}
	// $ANTLR end "prefixexp"

	partial void EnterRule_functioncall();
	partial void LeaveRule_functioncall();
	// $ANTLR start "functioncall"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:119:1: functioncall : varOrExp ( nameAndArgs )+ ;
	[GrammarRule("functioncall")]
	private Antlr3CstNode functioncall()
	{
		EnterRule_functioncall();
		EnterRule("functioncall", 13);
		var retval = new Antlr3CstNode("functioncall");
		
		retval.Start = (IToken)input.LT(1);
		int functioncall_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3CstNode varOrExp106 = default(Antlr3CstNode);
		Antlr3CstNode nameAndArgs107 = default(Antlr3CstNode);

		try { DebugEnterRule(GrammarFileName, "functioncall");
		DebugLocation(119, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 13)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:120:5: ( varOrExp ( nameAndArgs )+ )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:120:7: varOrExp ( nameAndArgs )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(120, 7);
			PushFollow(Follow._varOrExp_in_functioncall612);
			varOrExp106=varOrExp();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, varOrExp106.Tree, varOrExp106, "varOrExp106", retval);
			DebugLocation(120, 16);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:120:16: ( nameAndArgs )+
			int cnt20=0;
			try { DebugEnterSubRule(20);
			while (true)
			{
				int alt20=2;
				try { DebugEnterDecision(20, false);
				int LA20_1 = input.LA(1);

				if ((LA20_1==25))
				{
					int LA20_2 = input.LA(2);

					if ((EvaluatePredicate(synpred41_Lua_fragment)))
					{
						alt20 = 1;
					}


				}
				else if ((LA20_1==CHARSTRING||LA20_1==LONGSTRING||LA20_1==NORMALSTRING||LA20_1==35||LA20_1==69))
				{
					alt20 = 1;
				}


				} finally { DebugExitDecision(20); }
				switch (alt20)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:120:16: nameAndArgs
					{
					DebugLocation(120, 16);
					PushFollow(Follow._nameAndArgs_in_functioncall614);
					nameAndArgs107=nameAndArgs();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, nameAndArgs107.Tree, nameAndArgs107, "nameAndArgs107", retval);

					}
					break;

				default:
					if (cnt20 >= 1)
						goto loop20;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee20 = new EarlyExitException( 20, input );
					DebugRecognitionException(eee20);
					throw eee20;
				}
				cnt20++;
			}
			loop20:
				;

			} finally { DebugExitSubRule(20); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("functioncall", 13);
			LeaveRule("functioncall", 13);
			LeaveRule_functioncall();
			if (state.backtracking > 0) { Memoize(input, 13, functioncall_StartIndex); }

		}
		DebugLocation(121, 4);
		} finally { DebugExitRule(GrammarFileName, "functioncall"); }
		return retval;

	}
	// $ANTLR end "functioncall"

	partial void EnterRule_varOrExp();
	partial void LeaveRule_varOrExp();
	// $ANTLR start "varOrExp"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:123:1: varOrExp : ( var | '(' exp ')' );
	[GrammarRule("varOrExp")]
	private Antlr3CstNode varOrExp()
	{
		EnterRule_varOrExp();
		EnterRule("varOrExp", 14);
		var retval = new Antlr3CstNode("varOrExp");
		
		retval.Start = (IToken)input.LT(1);
		int varOrExp_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal109 = default(IToken);
		IToken char_literal111 = default(IToken);
		Antlr3CstNode var108 = default(Antlr3CstNode);
		Antlr3CstNode exp110 = default(Antlr3CstNode);

		object char_literal109_tree = default(object);
		object char_literal111_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "varOrExp");
		DebugLocation(123, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 14)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:124:5: ( var | '(' exp ')' )
			int alt21=2;
			try { DebugEnterDecision(21, false);
			int LA21_1 = input.LA(1);

			if ((LA21_1==NAME))
			{
				alt21 = 1;
			}
			else if ((LA21_1==25))
			{
				int LA21_2 = input.LA(2);

				if ((EvaluatePredicate(synpred42_Lua_fragment)))
				{
					alt21 = 1;
				}
				else if ((true))
				{
					alt21 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 21, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 21, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(21); }
			switch (alt21)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:124:7: var
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(124, 7);
				PushFollow(Follow._var_in_varOrExp632);
				var108=var();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, var108.Tree, var108, "var108", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:124:13: '(' exp ')'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(124, 13);
				char_literal109=(IToken)Match(input,25,Follow._25_in_varOrExp636); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal109_tree = (object)adaptor.Create(char_literal109, "char_literal109", retval);
				adaptor.AddChild(root_0, char_literal109_tree);
				}
				DebugLocation(124, 17);
				PushFollow(Follow._exp_in_varOrExp638);
				exp110=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp110.Tree, exp110, "exp110", retval);
				DebugLocation(124, 21);
				char_literal111=(IToken)Match(input,26,Follow._26_in_varOrExp640); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal111_tree = (object)adaptor.Create(char_literal111, "char_literal111", retval);
				adaptor.AddChild(root_0, char_literal111_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("varOrExp", 14);
			LeaveRule("varOrExp", 14);
			LeaveRule_varOrExp();
			if (state.backtracking > 0) { Memoize(input, 14, varOrExp_StartIndex); }

		}
		DebugLocation(125, 4);
		} finally { DebugExitRule(GrammarFileName, "varOrExp"); }
		return retval;

	}
	// $ANTLR end "varOrExp"

	partial void EnterRule_nameAndArgs();
	partial void LeaveRule_nameAndArgs();
	// $ANTLR start "nameAndArgs"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:127:1: nameAndArgs : ( ':' NAME )? args ;
	[GrammarRule("nameAndArgs")]
	private Antlr3CstNode nameAndArgs()
	{
		EnterRule_nameAndArgs();
		EnterRule("nameAndArgs", 15);
		var retval = new Antlr3CstNode("nameAndArgs");
		
		retval.Start = (IToken)input.LT(1);
		int nameAndArgs_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal112 = default(IToken);
		IToken NAME113 = default(IToken);
		Antlr3CstNode args114 = default(Antlr3CstNode);

		object char_literal112_tree = default(object);
		object NAME113_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "nameAndArgs");
		DebugLocation(127, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 15)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:128:5: ( ( ':' NAME )? args )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:128:7: ( ':' NAME )? args
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(128, 7);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:128:7: ( ':' NAME )?
			int alt22=2;
			try { DebugEnterSubRule(22);
			try { DebugEnterDecision(22, false);
			int LA22_1 = input.LA(1);

			if ((LA22_1==35))
			{
				alt22 = 1;
			}
			} finally { DebugExitDecision(22); }
			switch (alt22)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:128:8: ':' NAME
				{
				DebugLocation(128, 8);
				char_literal112=(IToken)Match(input,35,Follow._35_in_nameAndArgs658); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal112_tree = (object)adaptor.Create(char_literal112, "char_literal112", retval);
				adaptor.AddChild(root_0, char_literal112_tree);
				}
				DebugLocation(128, 12);
				NAME113=(IToken)Match(input,NAME,Follow._NAME_in_nameAndArgs660); if (state.failed) return retval;
				if (state.backtracking == 0) {
				NAME113_tree = (object)adaptor.Create(NAME113, "NAME113", retval);
				adaptor.AddChild(root_0, NAME113_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(22); }

			DebugLocation(128, 19);
			PushFollow(Follow._args_in_nameAndArgs664);
			args114=args();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, args114.Tree, args114, "args114", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("nameAndArgs", 15);
			LeaveRule("nameAndArgs", 15);
			LeaveRule_nameAndArgs();
			if (state.backtracking > 0) { Memoize(input, 15, nameAndArgs_StartIndex); }

		}
		DebugLocation(129, 4);
		} finally { DebugExitRule(GrammarFileName, "nameAndArgs"); }
		return retval;

	}
	// $ANTLR end "nameAndArgs"

	partial void EnterRule_varSuffix();
	partial void LeaveRule_varSuffix();
	// $ANTLR start "varSuffix"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:131:1: varSuffix : ( nameAndArgs )* ( '[' exp ']' | '.' NAME ) ;
	[GrammarRule("varSuffix")]
	private Antlr3CstNode varSuffix()
	{
		EnterRule_varSuffix();
		EnterRule("varSuffix", 16);
		var retval = new Antlr3CstNode("varSuffix");
		
		retval.Start = (IToken)input.LT(1);
		int varSuffix_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal116 = default(IToken);
		IToken char_literal118 = default(IToken);
		IToken char_literal119 = default(IToken);
		IToken NAME120 = default(IToken);
		Antlr3CstNode nameAndArgs115 = default(Antlr3CstNode);
		Antlr3CstNode exp117 = default(Antlr3CstNode);

		object char_literal116_tree = default(object);
		object char_literal118_tree = default(object);
		object char_literal119_tree = default(object);
		object NAME120_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "varSuffix");
		DebugLocation(131, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 16)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:132:5: ( ( nameAndArgs )* ( '[' exp ']' | '.' NAME ) )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:132:7: ( nameAndArgs )* ( '[' exp ']' | '.' NAME )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(132, 7);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:132:7: ( nameAndArgs )*
			try { DebugEnterSubRule(23);
			while (true)
			{
				int alt23=2;
				try { DebugEnterDecision(23, false);
				int LA23_1 = input.LA(1);

				if ((LA23_1==CHARSTRING||LA23_1==LONGSTRING||LA23_1==NORMALSTRING||LA23_1==25||LA23_1==35||LA23_1==69))
				{
					alt23 = 1;
				}


				} finally { DebugExitDecision(23); }
				switch ( alt23 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:132:7: nameAndArgs
					{
					DebugLocation(132, 7);
					PushFollow(Follow._nameAndArgs_in_varSuffix681);
					nameAndArgs115=nameAndArgs();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, nameAndArgs115.Tree, nameAndArgs115, "nameAndArgs115", retval);

					}
					break;

				default:
					goto loop23;
				}
			}

			loop23:
				;

			} finally { DebugExitSubRule(23); }

			DebugLocation(132, 20);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:132:20: ( '[' exp ']' | '.' NAME )
			int alt24=2;
			try { DebugEnterSubRule(24);
			try { DebugEnterDecision(24, false);
			int LA24_1 = input.LA(1);

			if ((LA24_1==44))
			{
				alt24 = 1;
			}
			else if ((LA24_1==31))
			{
				alt24 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 24, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(24); }
			switch (alt24)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:132:21: '[' exp ']'
				{
				DebugLocation(132, 21);
				char_literal116=(IToken)Match(input,44,Follow._44_in_varSuffix685); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal116_tree = (object)adaptor.Create(char_literal116, "char_literal116", retval);
				adaptor.AddChild(root_0, char_literal116_tree);
				}
				DebugLocation(132, 25);
				PushFollow(Follow._exp_in_varSuffix687);
				exp117=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp117.Tree, exp117, "exp117", retval);
				DebugLocation(132, 29);
				char_literal118=(IToken)Match(input,45,Follow._45_in_varSuffix689); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal118_tree = (object)adaptor.Create(char_literal118, "char_literal118", retval);
				adaptor.AddChild(root_0, char_literal118_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:132:35: '.' NAME
				{
				DebugLocation(132, 35);
				char_literal119=(IToken)Match(input,31,Follow._31_in_varSuffix693); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal119_tree = (object)adaptor.Create(char_literal119, "char_literal119", retval);
				adaptor.AddChild(root_0, char_literal119_tree);
				}
				DebugLocation(132, 39);
				NAME120=(IToken)Match(input,NAME,Follow._NAME_in_varSuffix695); if (state.failed) return retval;
				if (state.backtracking == 0) {
				NAME120_tree = (object)adaptor.Create(NAME120, "NAME120", retval);
				adaptor.AddChild(root_0, NAME120_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(24); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("varSuffix", 16);
			LeaveRule("varSuffix", 16);
			LeaveRule_varSuffix();
			if (state.backtracking > 0) { Memoize(input, 16, varSuffix_StartIndex); }

		}
		DebugLocation(133, 4);
		} finally { DebugExitRule(GrammarFileName, "varSuffix"); }
		return retval;

	}
	// $ANTLR end "varSuffix"

	partial void EnterRule_args();
	partial void LeaveRule_args();
	// $ANTLR start "args"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:149:1: args : ( '(' ( explist )? ')' | tableconstructor | string );
	[GrammarRule("args")]
	private Antlr3CstNode args()
	{
		EnterRule_args();
		EnterRule("args", 17);
		var retval = new Antlr3CstNode("args");
		
		retval.Start = (IToken)input.LT(1);
		int args_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal121 = default(IToken);
		IToken char_literal123 = default(IToken);
		Antlr3CstNode explist122 = default(Antlr3CstNode);
		Antlr3CstNode tableconstructor124 = default(Antlr3CstNode);
		Antlr3CstNode string125 = default(Antlr3CstNode);

		object char_literal121_tree = default(object);
		object char_literal123_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "args");
		DebugLocation(149, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 17)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:150:5: ( '(' ( explist )? ')' | tableconstructor | string )
			int alt26=3;
			try { DebugEnterDecision(26, false);
			switch (input.LA(1))
			{
			case 25:
				{
				alt26 = 1;
				}
				break;
			case 69:
				{
				alt26 = 2;
				}
				break;
			case CHARSTRING:
			case LONGSTRING:
			case NORMALSTRING:
				{
				alt26 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 26, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(26); }
			switch (alt26)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:150:7: '(' ( explist )? ')'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(150, 7);
				char_literal121=(IToken)Match(input,25,Follow._25_in_args716); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal121_tree = (object)adaptor.Create(char_literal121, "char_literal121", retval);
				adaptor.AddChild(root_0, char_literal121_tree);
				}
				DebugLocation(150, 11);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:150:11: ( explist )?
				int alt25=2;
				try { DebugEnterSubRule(25);
				try { DebugEnterDecision(25, false);
				int LA25_1 = input.LA(1);

				if ((LA25_1==CHARSTRING||(LA25_1>=FLOAT && LA25_1<=HEX_FLOAT)||LA25_1==INT||(LA25_1>=LONGSTRING && LA25_1<=NORMALSTRING)||LA25_1==23||LA25_1==25||LA25_1==30||LA25_1==33||LA25_1==53||LA25_1==55||(LA25_1>=60 && LA25_1<=61)||LA25_1==66||LA25_1==69))
				{
					alt25 = 1;
				}
				} finally { DebugExitDecision(25); }
				switch (alt25)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:150:11: explist
					{
					DebugLocation(150, 11);
					PushFollow(Follow._explist_in_args718);
					explist122=explist();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, explist122.Tree, explist122, "explist122", retval);

					}
					break;

				}
				} finally { DebugExitSubRule(25); }

				DebugLocation(150, 20);
				char_literal123=(IToken)Match(input,26,Follow._26_in_args721); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal123_tree = (object)adaptor.Create(char_literal123, "char_literal123", retval);
				adaptor.AddChild(root_0, char_literal123_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:150:26: tableconstructor
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(150, 26);
				PushFollow(Follow._tableconstructor_in_args725);
				tableconstructor124=tableconstructor();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, tableconstructor124.Tree, tableconstructor124, "tableconstructor124", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:150:45: string
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(150, 45);
				PushFollow(Follow._string_in_args729);
				string125=@string();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, string125.Tree, string125, "string125", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("args", 17);
			LeaveRule("args", 17);
			LeaveRule_args();
			if (state.backtracking > 0) { Memoize(input, 17, args_StartIndex); }

		}
		DebugLocation(151, 4);
		} finally { DebugExitRule(GrammarFileName, "args"); }
		return retval;

	}
	// $ANTLR end "args"

	partial void EnterRule_functiondef();
	partial void LeaveRule_functiondef();
	// $ANTLR start "functiondef"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:153:1: functiondef : 'function' funcbody ;
	[GrammarRule("functiondef")]
	private Antlr3CstNode functiondef()
	{
		EnterRule_functiondef();
		EnterRule("functiondef", 18);
		var retval = new Antlr3CstNode("functiondef");
		
		retval.Start = (IToken)input.LT(1);
		int functiondef_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal126 = default(IToken);
		Antlr3CstNode funcbody127 = default(Antlr3CstNode);

		object string_literal126_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "functiondef");
		DebugLocation(153, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 18)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:154:5: ( 'function' funcbody )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:154:7: 'function' funcbody
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(154, 7);
			string_literal126=(IToken)Match(input,55,Follow._55_in_functiondef746); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal126_tree = (object)adaptor.Create(string_literal126, "string_literal126", retval);
			adaptor.AddChild(root_0, string_literal126_tree);
			}
			DebugLocation(154, 18);
			PushFollow(Follow._funcbody_in_functiondef748);
			funcbody127=funcbody();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, funcbody127.Tree, funcbody127, "funcbody127", retval);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("functiondef", 18);
			LeaveRule("functiondef", 18);
			LeaveRule_functiondef();
			if (state.backtracking > 0) { Memoize(input, 18, functiondef_StartIndex); }

		}
		DebugLocation(155, 4);
		} finally { DebugExitRule(GrammarFileName, "functiondef"); }
		return retval;

	}
	// $ANTLR end "functiondef"

	partial void EnterRule_funcbody();
	partial void LeaveRule_funcbody();
	// $ANTLR start "funcbody"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:157:1: funcbody : '(' ( parlist )? ')' block 'end' ;
	[GrammarRule("funcbody")]
	private Antlr3CstNode funcbody()
	{
		EnterRule_funcbody();
		EnterRule("funcbody", 19);
		var retval = new Antlr3CstNode("funcbody");
		
		retval.Start = (IToken)input.LT(1);
		int funcbody_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal128 = default(IToken);
		IToken char_literal130 = default(IToken);
		IToken string_literal132 = default(IToken);
		Antlr3CstNode parlist129 = default(Antlr3CstNode);
		Antlr3CstNode block131 = default(Antlr3CstNode);

		object char_literal128_tree = default(object);
		object char_literal130_tree = default(object);
		object string_literal132_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "funcbody");
		DebugLocation(157, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 19)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:158:5: ( '(' ( parlist )? ')' block 'end' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:158:7: '(' ( parlist )? ')' block 'end'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(158, 7);
			char_literal128=(IToken)Match(input,25,Follow._25_in_funcbody765); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal128_tree = (object)adaptor.Create(char_literal128, "char_literal128", retval);
			adaptor.AddChild(root_0, char_literal128_tree);
			}
			DebugLocation(158, 11);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:158:11: ( parlist )?
			int alt27=2;
			try { DebugEnterSubRule(27);
			try { DebugEnterDecision(27, false);
			int LA27_1 = input.LA(1);

			if ((LA27_1==NAME||LA27_1==33))
			{
				alt27 = 1;
			}
			} finally { DebugExitDecision(27); }
			switch (alt27)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:158:11: parlist
				{
				DebugLocation(158, 11);
				PushFollow(Follow._parlist_in_funcbody767);
				parlist129=parlist();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, parlist129.Tree, parlist129, "parlist129", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(27); }

			DebugLocation(158, 20);
			char_literal130=(IToken)Match(input,26,Follow._26_in_funcbody770); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal130_tree = (object)adaptor.Create(char_literal130, "char_literal130", retval);
			adaptor.AddChild(root_0, char_literal130_tree);
			}
			DebugLocation(158, 24);
			PushFollow(Follow._block_in_funcbody772);
			block131=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block131.Tree, block131, "block131", retval);
			DebugLocation(158, 30);
			string_literal132=(IToken)Match(input,52,Follow._52_in_funcbody774); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal132_tree = (object)adaptor.Create(string_literal132, "string_literal132", retval);
			adaptor.AddChild(root_0, string_literal132_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("funcbody", 19);
			LeaveRule("funcbody", 19);
			LeaveRule_funcbody();
			if (state.backtracking > 0) { Memoize(input, 19, funcbody_StartIndex); }

		}
		DebugLocation(159, 4);
		} finally { DebugExitRule(GrammarFileName, "funcbody"); }
		return retval;

	}
	// $ANTLR end "funcbody"

	partial void EnterRule_parlist();
	partial void LeaveRule_parlist();
	// $ANTLR start "parlist"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:161:1: parlist : ( namelist ( ',' '...' )? | '...' );
	[GrammarRule("parlist")]
	private Antlr3CstNode parlist()
	{
		EnterRule_parlist();
		EnterRule("parlist", 20);
		var retval = new Antlr3CstNode("parlist");
		
		retval.Start = (IToken)input.LT(1);
		int parlist_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal134 = default(IToken);
		IToken string_literal135 = default(IToken);
		IToken string_literal136 = default(IToken);
		Antlr3CstNode namelist133 = default(Antlr3CstNode);

		object char_literal134_tree = default(object);
		object string_literal135_tree = default(object);
		object string_literal136_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "parlist");
		DebugLocation(161, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 20)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:162:5: ( namelist ( ',' '...' )? | '...' )
			int alt29=2;
			try { DebugEnterDecision(29, false);
			int LA29_1 = input.LA(1);

			if ((LA29_1==NAME))
			{
				alt29 = 1;
			}
			else if ((LA29_1==33))
			{
				alt29 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 29, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(29); }
			switch (alt29)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:162:7: namelist ( ',' '...' )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(162, 7);
				PushFollow(Follow._namelist_in_parlist791);
				namelist133=namelist();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, namelist133.Tree, namelist133, "namelist133", retval);
				DebugLocation(162, 16);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:162:16: ( ',' '...' )?
				int alt28=2;
				try { DebugEnterSubRule(28);
				try { DebugEnterDecision(28, false);
				int LA28_1 = input.LA(1);

				if ((LA28_1==29))
				{
					alt28 = 1;
				}
				} finally { DebugExitDecision(28); }
				switch (alt28)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:162:17: ',' '...'
					{
					DebugLocation(162, 17);
					char_literal134=(IToken)Match(input,29,Follow._29_in_parlist794); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal134_tree = (object)adaptor.Create(char_literal134, "char_literal134", retval);
					adaptor.AddChild(root_0, char_literal134_tree);
					}
					DebugLocation(162, 21);
					string_literal135=(IToken)Match(input,33,Follow._33_in_parlist796); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal135_tree = (object)adaptor.Create(string_literal135, "string_literal135", retval);
					adaptor.AddChild(root_0, string_literal135_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(28); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:162:31: '...'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(162, 31);
				string_literal136=(IToken)Match(input,33,Follow._33_in_parlist802); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal136_tree = (object)adaptor.Create(string_literal136, "string_literal136", retval);
				adaptor.AddChild(root_0, string_literal136_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("parlist", 20);
			LeaveRule("parlist", 20);
			LeaveRule_parlist();
			if (state.backtracking > 0) { Memoize(input, 20, parlist_StartIndex); }

		}
		DebugLocation(163, 4);
		} finally { DebugExitRule(GrammarFileName, "parlist"); }
		return retval;

	}
	// $ANTLR end "parlist"

	partial void EnterRule_tableconstructor();
	partial void LeaveRule_tableconstructor();
	// $ANTLR start "tableconstructor"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:165:1: tableconstructor : '{' ( fieldlist )? '}' ;
	[GrammarRule("tableconstructor")]
	private Antlr3CstNode tableconstructor()
	{
		EnterRule_tableconstructor();
		EnterRule("tableconstructor", 21);
		var retval = new Antlr3CstNode("tableconstructor");
		
		retval.Start = (IToken)input.LT(1);
		int tableconstructor_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal137 = default(IToken);
		IToken char_literal139 = default(IToken);
		Antlr3CstNode fieldlist138 = default(Antlr3CstNode);

		object char_literal137_tree = default(object);
		object char_literal139_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "tableconstructor");
		DebugLocation(165, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 21)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:166:5: ( '{' ( fieldlist )? '}' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:166:7: '{' ( fieldlist )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(166, 7);
			char_literal137=(IToken)Match(input,69,Follow._69_in_tableconstructor819); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal137_tree = (object)adaptor.Create(char_literal137, "char_literal137", retval);
			adaptor.AddChild(root_0, char_literal137_tree);
			}
			DebugLocation(166, 11);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:166:11: ( fieldlist )?
			int alt30=2;
			try { DebugEnterSubRule(30);
			try { DebugEnterDecision(30, false);
			int LA30_1 = input.LA(1);

			if ((LA30_1==CHARSTRING||(LA30_1>=FLOAT && LA30_1<=HEX_FLOAT)||LA30_1==INT||(LA30_1>=LONGSTRING && LA30_1<=NORMALSTRING)||LA30_1==23||LA30_1==25||LA30_1==30||LA30_1==33||LA30_1==44||LA30_1==53||LA30_1==55||(LA30_1>=60 && LA30_1<=61)||LA30_1==66||LA30_1==69))
			{
				alt30 = 1;
			}
			} finally { DebugExitDecision(30); }
			switch (alt30)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:166:11: fieldlist
				{
				DebugLocation(166, 11);
				PushFollow(Follow._fieldlist_in_tableconstructor821);
				fieldlist138=fieldlist();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, fieldlist138.Tree, fieldlist138, "fieldlist138", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(30); }

			DebugLocation(166, 22);
			char_literal139=(IToken)Match(input,70,Follow._70_in_tableconstructor824); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal139_tree = (object)adaptor.Create(char_literal139, "char_literal139", retval);
			adaptor.AddChild(root_0, char_literal139_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("tableconstructor", 21);
			LeaveRule("tableconstructor", 21);
			LeaveRule_tableconstructor();
			if (state.backtracking > 0) { Memoize(input, 21, tableconstructor_StartIndex); }

		}
		DebugLocation(167, 4);
		} finally { DebugExitRule(GrammarFileName, "tableconstructor"); }
		return retval;

	}
	// $ANTLR end "tableconstructor"

	partial void EnterRule_fieldlist();
	partial void LeaveRule_fieldlist();
	// $ANTLR start "fieldlist"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:169:1: fieldlist : field ( fieldsep field )* ( fieldsep )? ;
	[GrammarRule("fieldlist")]
	private Antlr3CstNode fieldlist()
	{
		EnterRule_fieldlist();
		EnterRule("fieldlist", 22);
		var retval = new Antlr3CstNode("fieldlist");
		
		retval.Start = (IToken)input.LT(1);
		int fieldlist_StartIndex = input.Index;

		object root_0 = default(object);

		Antlr3CstNode field140 = default(Antlr3CstNode);
		Antlr3CstNode fieldsep141 = default(Antlr3CstNode);
		Antlr3CstNode field142 = default(Antlr3CstNode);
		Antlr3CstNode fieldsep143 = default(Antlr3CstNode);

		try { DebugEnterRule(GrammarFileName, "fieldlist");
		DebugLocation(169, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 22)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:170:5: ( field ( fieldsep field )* ( fieldsep )? )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:170:7: field ( fieldsep field )* ( fieldsep )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(170, 7);
			PushFollow(Follow._field_in_fieldlist841);
			field140=field();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, field140.Tree, field140, "field140", retval);
			DebugLocation(170, 13);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:170:13: ( fieldsep field )*
			try { DebugEnterSubRule(31);
			while (true)
			{
				int alt31=2;
				try { DebugEnterDecision(31, false);
				int LA31_1 = input.LA(1);

				if ((LA31_1==29||LA31_1==37))
				{
					int LA31_2 = input.LA(2);

					if ((LA31_2==CHARSTRING||(LA31_2>=FLOAT && LA31_2<=HEX_FLOAT)||LA31_2==INT||(LA31_2>=LONGSTRING && LA31_2<=NORMALSTRING)||LA31_2==23||LA31_2==25||LA31_2==30||LA31_2==33||LA31_2==44||LA31_2==53||LA31_2==55||(LA31_2>=60 && LA31_2<=61)||LA31_2==66||LA31_2==69))
					{
						alt31 = 1;
					}


				}


				} finally { DebugExitDecision(31); }
				switch ( alt31 )
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:170:14: fieldsep field
					{
					DebugLocation(170, 14);
					PushFollow(Follow._fieldsep_in_fieldlist844);
					fieldsep141=fieldsep();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, fieldsep141.Tree, fieldsep141, "fieldsep141", retval);
					DebugLocation(170, 23);
					PushFollow(Follow._field_in_fieldlist846);
					field142=field();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, field142.Tree, field142, "field142", retval);

					}
					break;

				default:
					goto loop31;
				}
			}

			loop31:
				;

			} finally { DebugExitSubRule(31); }

			DebugLocation(170, 31);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:170:31: ( fieldsep )?
			int alt32=2;
			try { DebugEnterSubRule(32);
			try { DebugEnterDecision(32, false);
			int LA32_1 = input.LA(1);

			if ((LA32_1==29||LA32_1==37))
			{
				alt32 = 1;
			}
			} finally { DebugExitDecision(32); }
			switch (alt32)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:170:31: fieldsep
				{
				DebugLocation(170, 31);
				PushFollow(Follow._fieldsep_in_fieldlist850);
				fieldsep143=fieldsep();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, fieldsep143.Tree, fieldsep143, "fieldsep143", retval);

				}
				break;

			}
			} finally { DebugExitSubRule(32); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("fieldlist", 22);
			LeaveRule("fieldlist", 22);
			LeaveRule_fieldlist();
			if (state.backtracking > 0) { Memoize(input, 22, fieldlist_StartIndex); }

		}
		DebugLocation(171, 4);
		} finally { DebugExitRule(GrammarFileName, "fieldlist"); }
		return retval;

	}
	// $ANTLR end "fieldlist"

	partial void EnterRule_field();
	partial void LeaveRule_field();
	// $ANTLR start "field"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:173:1: field : ( '[' exp ']' '=' exp | NAME '=' exp | exp );
	[GrammarRule("field")]
	private Antlr3CstNode field()
	{
		EnterRule_field();
		EnterRule("field", 23);
		var retval = new Antlr3CstNode("field");
		
		retval.Start = (IToken)input.LT(1);
		int field_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal144 = default(IToken);
		IToken char_literal146 = default(IToken);
		IToken char_literal147 = default(IToken);
		IToken NAME149 = default(IToken);
		IToken char_literal150 = default(IToken);
		Antlr3CstNode exp145 = default(Antlr3CstNode);
		Antlr3CstNode exp148 = default(Antlr3CstNode);
		Antlr3CstNode exp151 = default(Antlr3CstNode);
		Antlr3CstNode exp152 = default(Antlr3CstNode);

		object char_literal144_tree = default(object);
		object char_literal146_tree = default(object);
		object char_literal147_tree = default(object);
		object NAME149_tree = default(object);
		object char_literal150_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "field");
		DebugLocation(173, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 23)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:174:5: ( '[' exp ']' '=' exp | NAME '=' exp | exp )
			int alt33=3;
			try { DebugEnterDecision(33, false);
			switch (input.LA(1))
			{
			case 44:
				{
				alt33 = 1;
				}
				break;
			case NAME:
				{
				int LA33_2 = input.LA(2);

				if ((LA33_2==40))
				{
					alt33 = 2;
				}
				else if ((LA33_2==EOF||LA33_2==CHARSTRING||LA33_2==LONGSTRING||LA33_2==NORMALSTRING||(LA33_2>=24 && LA33_2<=25)||(LA33_2>=27 && LA33_2<=32)||(LA33_2>=34 && LA33_2<=35)||(LA33_2>=37 && LA33_2<=39)||(LA33_2>=41 && LA33_2<=44)||(LA33_2>=46 && LA33_2<=47)||LA33_2==62||(LA33_2>=69 && LA33_2<=71)))
				{
					alt33 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 33, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case CHARSTRING:
			case FLOAT:
			case HEX:
			case HEX_FLOAT:
			case INT:
			case LONGSTRING:
			case NORMALSTRING:
			case 23:
			case 25:
			case 30:
			case 33:
			case 53:
			case 55:
			case 60:
			case 61:
			case 66:
			case 69:
				{
				alt33 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 33, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(33); }
			switch (alt33)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:174:7: '[' exp ']' '=' exp
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(174, 7);
				char_literal144=(IToken)Match(input,44,Follow._44_in_field868); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal144_tree = (object)adaptor.Create(char_literal144, "char_literal144", retval);
				adaptor.AddChild(root_0, char_literal144_tree);
				}
				DebugLocation(174, 11);
				PushFollow(Follow._exp_in_field870);
				exp145=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp145.Tree, exp145, "exp145", retval);
				DebugLocation(174, 15);
				char_literal146=(IToken)Match(input,45,Follow._45_in_field872); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal146_tree = (object)adaptor.Create(char_literal146, "char_literal146", retval);
				adaptor.AddChild(root_0, char_literal146_tree);
				}
				DebugLocation(174, 19);
				char_literal147=(IToken)Match(input,40,Follow._40_in_field874); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal147_tree = (object)adaptor.Create(char_literal147, "char_literal147", retval);
				adaptor.AddChild(root_0, char_literal147_tree);
				}
				DebugLocation(174, 23);
				PushFollow(Follow._exp_in_field876);
				exp148=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp148.Tree, exp148, "exp148", retval);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:174:29: NAME '=' exp
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(174, 29);
				NAME149=(IToken)Match(input,NAME,Follow._NAME_in_field880); if (state.failed) return retval;
				if (state.backtracking == 0) {
				NAME149_tree = (object)adaptor.Create(NAME149, "NAME149", retval);
				adaptor.AddChild(root_0, NAME149_tree);
				}
				DebugLocation(174, 34);
				char_literal150=(IToken)Match(input,40,Follow._40_in_field882); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal150_tree = (object)adaptor.Create(char_literal150, "char_literal150", retval);
				adaptor.AddChild(root_0, char_literal150_tree);
				}
				DebugLocation(174, 38);
				PushFollow(Follow._exp_in_field884);
				exp151=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp151.Tree, exp151, "exp151", retval);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:174:44: exp
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(174, 44);
				PushFollow(Follow._exp_in_field888);
				exp152=exp();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exp152.Tree, exp152, "exp152", retval);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("field", 23);
			LeaveRule("field", 23);
			LeaveRule_field();
			if (state.backtracking > 0) { Memoize(input, 23, field_StartIndex); }

		}
		DebugLocation(175, 4);
		} finally { DebugExitRule(GrammarFileName, "field"); }
		return retval;

	}
	// $ANTLR end "field"

	partial void EnterRule_fieldsep();
	partial void LeaveRule_fieldsep();
	// $ANTLR start "fieldsep"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:177:1: fieldsep : ( ',' | ';' );
	[GrammarRule("fieldsep")]
	private Antlr3CstNode fieldsep()
	{
		EnterRule_fieldsep();
		EnterRule("fieldsep", 24);
		var retval = new Antlr3CstNode("fieldsep");
		
		retval.Start = (IToken)input.LT(1);
		int fieldsep_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set153 = default(IToken);

		object set153_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "fieldsep");
		DebugLocation(177, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 24)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:178:5: ( ',' | ';' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(178, 5);

			set153=(IToken)input.LT(1);
			if (input.LA(1)==29||input.LA(1)==37)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set153, "set153", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("fieldsep", 24);
			LeaveRule("fieldsep", 24);
			LeaveRule_fieldsep();
			if (state.backtracking > 0) { Memoize(input, 24, fieldsep_StartIndex); }

		}
		DebugLocation(179, 4);
		} finally { DebugExitRule(GrammarFileName, "fieldsep"); }
		return retval;

	}
	// $ANTLR end "fieldsep"

	partial void EnterRule_binop();
	partial void LeaveRule_binop();
	// $ANTLR start "binop"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:181:1: binop : ( '+' | '-' | '*' | '/' | '^' | '%' | '..' | '<' | '<=' | '>' | '>=' | '==' | '~=' | 'and' | 'or' );
	[GrammarRule("binop")]
	private Antlr3CstNode binop()
	{
		EnterRule_binop();
		EnterRule("binop", 25);
		var retval = new Antlr3CstNode("binop");
		
		retval.Start = (IToken)input.LT(1);
		int binop_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set154 = default(IToken);

		object set154_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "binop");
		DebugLocation(181, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 25)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:182:5: ( '+' | '-' | '*' | '/' | '^' | '%' | '..' | '<' | '<=' | '>' | '>=' | '==' | '~=' | 'and' | 'or' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(182, 5);

			set154=(IToken)input.LT(1);
			if (input.LA(1)==24||(input.LA(1)>=27 && input.LA(1)<=28)||input.LA(1)==30||input.LA(1)==32||input.LA(1)==34||(input.LA(1)>=38 && input.LA(1)<=39)||(input.LA(1)>=41 && input.LA(1)<=43)||(input.LA(1)>=46 && input.LA(1)<=47)||input.LA(1)==62||input.LA(1)==71)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set154, "set154", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("binop", 25);
			LeaveRule("binop", 25);
			LeaveRule_binop();
			if (state.backtracking > 0) { Memoize(input, 25, binop_StartIndex); }

		}
		DebugLocation(185, 4);
		} finally { DebugExitRule(GrammarFileName, "binop"); }
		return retval;

	}
	// $ANTLR end "binop"

	partial void EnterRule_unop();
	partial void LeaveRule_unop();
	// $ANTLR start "unop"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:187:1: unop : ( '-' | 'not' | '#' );
	[GrammarRule("unop")]
	private Antlr3CstNode unop()
	{
		EnterRule_unop();
		EnterRule("unop", 26);
		var retval = new Antlr3CstNode("unop");
		
		retval.Start = (IToken)input.LT(1);
		int unop_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set155 = default(IToken);

		object set155_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "unop");
		DebugLocation(187, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 26)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:188:5: ( '-' | 'not' | '#' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(188, 5);

			set155=(IToken)input.LT(1);
			if (input.LA(1)==23||input.LA(1)==30||input.LA(1)==61)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set155, "set155", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unop", 26);
			LeaveRule("unop", 26);
			LeaveRule_unop();
			if (state.backtracking > 0) { Memoize(input, 26, unop_StartIndex); }

		}
		DebugLocation(189, 4);
		} finally { DebugExitRule(GrammarFileName, "unop"); }
		return retval;

	}
	// $ANTLR end "unop"

	partial void EnterRule_number();
	partial void LeaveRule_number();
	// $ANTLR start "number"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:191:1: number : ( INT | HEX | FLOAT | HEX_FLOAT );
	[GrammarRule("number")]
	private Antlr3CstNode number()
	{
		EnterRule_number();
		EnterRule("number", 27);
		var retval = new Antlr3CstNode("number");
		
		retval.Start = (IToken)input.LT(1);
		int number_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set156 = default(IToken);

		object set156_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "number");
		DebugLocation(191, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 27)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:192:5: ( INT | HEX | FLOAT | HEX_FLOAT )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(192, 5);

			set156=(IToken)input.LT(1);
			if ((input.LA(1)>=FLOAT && input.LA(1)<=HEX_FLOAT)||input.LA(1)==INT)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set156, "set156", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("number", 27);
			LeaveRule("number", 27);
			LeaveRule_number();
			if (state.backtracking > 0) { Memoize(input, 27, number_StartIndex); }

		}
		DebugLocation(193, 4);
		} finally { DebugExitRule(GrammarFileName, "number"); }
		return retval;

	}
	// $ANTLR end "number"

	partial void EnterRule_string();
	partial void LeaveRule_string();
	// $ANTLR start "string"
	// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:195:1: string : ( NORMALSTRING | CHARSTRING | LONGSTRING );
	[GrammarRule("string")]
	private Antlr3CstNode @string()
	{
		EnterRule_string();
		EnterRule("string", 28);
		var retval = new Antlr3CstNode("string");
		
		retval.Start = (IToken)input.LT(1);
		int string_StartIndex = input.Index;

		object root_0 = default(object);

		IToken set157 = default(IToken);

		object set157_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "string");
		DebugLocation(195, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 28)) { return retval; }

			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:196:5: ( NORMALSTRING | CHARSTRING | LONGSTRING )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(196, 5);

			set157=(IToken)input.LT(1);
			if (input.LA(1)==CHARSTRING||input.LA(1)==LONGSTRING||input.LA(1)==NORMALSTRING)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (object)adaptor.Create(set157, "set157", retval));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("string", 28);
			LeaveRule("string", 28);
			LeaveRule_string();
			if (state.backtracking > 0) { Memoize(input, 28, string_StartIndex); }

		}
		DebugLocation(197, 4);
		} finally { DebugExitRule(GrammarFileName, "string"); }
		return retval;

	}
	// $ANTLR end "string"

	partial void EnterRule_synpred4_Lua_fragment();
	partial void LeaveRule_synpred4_Lua_fragment();

	// $ANTLR start synpred4_Lua
	private void synpred4_Lua_fragment()
	{
		EnterRule_synpred4_Lua_fragment();
		EnterRule("synpred4_Lua_fragment", 32);
		var retval = new Antlr3CstNode("synpred4_Lua_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:66:7: ( varlist '=' explist )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:66:7: varlist '=' explist
			{
			DebugLocation(66, 7);
			PushFollow(Follow._varlist_in_synpred4_Lua123);
			varlist();
			PopFollow();
			if (state.failed) return;
			DebugLocation(66, 15);
			Match(input,40,Follow._40_in_synpred4_Lua125); if (state.failed) return;
			DebugLocation(66, 19);
			PushFollow(Follow._explist_in_synpred4_Lua127);
			explist();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred4_Lua_fragment", 32);
			LeaveRule("synpred4_Lua_fragment", 32);
			LeaveRule_synpred4_Lua_fragment();
		}
	}
	// $ANTLR end synpred4_Lua

	partial void EnterRule_synpred5_Lua_fragment();
	partial void LeaveRule_synpred5_Lua_fragment();

	// $ANTLR start synpred5_Lua
	private void synpred5_Lua_fragment()
	{
		EnterRule_synpred5_Lua_fragment();
		EnterRule("synpred5_Lua_fragment", 33);
		var retval = new Antlr3CstNode("synpred5_Lua_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:67:7: ( functioncall )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:67:7: functioncall
			{
			DebugLocation(67, 7);
			PushFollow(Follow._functioncall_in_synpred5_Lua135);
			functioncall();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred5_Lua_fragment", 33);
			LeaveRule("synpred5_Lua_fragment", 33);
			LeaveRule_synpred5_Lua_fragment();
		}
	}
	// $ANTLR end synpred5_Lua

	partial void EnterRule_synpred16_Lua_fragment();
	partial void LeaveRule_synpred16_Lua_fragment();

	// $ANTLR start synpred16_Lua
	private void synpred16_Lua_fragment()
	{
		EnterRule_synpred16_Lua_fragment();
		EnterRule("synpred16_Lua_fragment", 44);
		var retval = new Antlr3CstNode("synpred16_Lua_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:75:7: ( 'for' NAME '=' exp ',' exp ( ',' exp )? 'do' block 'end' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:75:7: 'for' NAME '=' exp ',' exp ( ',' exp )? 'do' block 'end'
			{
			DebugLocation(75, 7);
			Match(input,54,Follow._54_in_synpred16_Lua245); if (state.failed) return;
			DebugLocation(75, 13);
			Match(input,NAME,Follow._NAME_in_synpred16_Lua247); if (state.failed) return;
			DebugLocation(75, 18);
			Match(input,40,Follow._40_in_synpred16_Lua249); if (state.failed) return;
			DebugLocation(75, 22);
			PushFollow(Follow._exp_in_synpred16_Lua251);
			exp();
			PopFollow();
			if (state.failed) return;
			DebugLocation(75, 26);
			Match(input,29,Follow._29_in_synpred16_Lua253); if (state.failed) return;
			DebugLocation(75, 30);
			PushFollow(Follow._exp_in_synpred16_Lua255);
			exp();
			PopFollow();
			if (state.failed) return;
			DebugLocation(75, 34);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:75:34: ( ',' exp )?
			int alt36=2;
			try { DebugEnterSubRule(36);
			try { DebugEnterDecision(36, false);
			int LA36_1 = input.LA(1);

			if ((LA36_1==29))
			{
				alt36 = 1;
			}
			} finally { DebugExitDecision(36); }
			switch (alt36)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:75:35: ',' exp
				{
				DebugLocation(75, 35);
				Match(input,29,Follow._29_in_synpred16_Lua258); if (state.failed) return;
				DebugLocation(75, 39);
				PushFollow(Follow._exp_in_synpred16_Lua260);
				exp();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(36); }

			DebugLocation(75, 45);
			Match(input,49,Follow._49_in_synpred16_Lua264); if (state.failed) return;
			DebugLocation(75, 50);
			PushFollow(Follow._block_in_synpred16_Lua266);
			block();
			PopFollow();
			if (state.failed) return;
			DebugLocation(75, 56);
			Match(input,52,Follow._52_in_synpred16_Lua268); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred16_Lua_fragment", 44);
			LeaveRule("synpred16_Lua_fragment", 44);
			LeaveRule_synpred16_Lua_fragment();
		}
	}
	// $ANTLR end synpred16_Lua

	partial void EnterRule_synpred17_Lua_fragment();
	partial void LeaveRule_synpred17_Lua_fragment();

	// $ANTLR start synpred17_Lua
	private void synpred17_Lua_fragment()
	{
		EnterRule_synpred17_Lua_fragment();
		EnterRule("synpred17_Lua_fragment", 45);
		var retval = new Antlr3CstNode("synpred17_Lua_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:76:7: ( 'for' namelist 'in' explist 'do' block 'end' )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:76:7: 'for' namelist 'in' explist 'do' block 'end'
			{
			DebugLocation(76, 7);
			Match(input,54,Follow._54_in_synpred17_Lua276); if (state.failed) return;
			DebugLocation(76, 13);
			PushFollow(Follow._namelist_in_synpred17_Lua278);
			namelist();
			PopFollow();
			if (state.failed) return;
			DebugLocation(76, 22);
			Match(input,58,Follow._58_in_synpred17_Lua280); if (state.failed) return;
			DebugLocation(76, 27);
			PushFollow(Follow._explist_in_synpred17_Lua282);
			explist();
			PopFollow();
			if (state.failed) return;
			DebugLocation(76, 35);
			Match(input,49,Follow._49_in_synpred17_Lua284); if (state.failed) return;
			DebugLocation(76, 40);
			PushFollow(Follow._block_in_synpred17_Lua286);
			block();
			PopFollow();
			if (state.failed) return;
			DebugLocation(76, 46);
			Match(input,52,Follow._52_in_synpred17_Lua288); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred17_Lua_fragment", 45);
			LeaveRule("synpred17_Lua_fragment", 45);
			LeaveRule_synpred17_Lua_fragment();
		}
	}
	// $ANTLR end synpred17_Lua

	partial void EnterRule_synpred19_Lua_fragment();
	partial void LeaveRule_synpred19_Lua_fragment();

	// $ANTLR start synpred19_Lua
	private void synpred19_Lua_fragment()
	{
		EnterRule_synpred19_Lua_fragment();
		EnterRule("synpred19_Lua_fragment", 47);
		var retval = new Antlr3CstNode("synpred19_Lua_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:78:7: ( 'local' 'function' NAME funcbody )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:78:7: 'local' 'function' NAME funcbody
			{
			DebugLocation(78, 7);
			Match(input,59,Follow._59_in_synpred19_Lua308); if (state.failed) return;
			DebugLocation(78, 15);
			Match(input,55,Follow._55_in_synpred19_Lua310); if (state.failed) return;
			DebugLocation(78, 26);
			Match(input,NAME,Follow._NAME_in_synpred19_Lua312); if (state.failed) return;
			DebugLocation(78, 31);
			PushFollow(Follow._funcbody_in_synpred19_Lua314);
			funcbody();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred19_Lua_fragment", 47);
			LeaveRule("synpred19_Lua_fragment", 47);
			LeaveRule_synpred19_Lua_fragment();
		}
	}
	// $ANTLR end synpred19_Lua

	partial void EnterRule_synpred37_Lua_fragment();
	partial void LeaveRule_synpred37_Lua_fragment();

	// $ANTLR start synpred37_Lua
	private void synpred37_Lua_fragment()
	{
		EnterRule_synpred37_Lua_fragment();
		EnterRule("synpred37_Lua_fragment", 65);
		var retval = new Antlr3CstNode("synpred37_Lua_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:108:49: ( binop exp )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:108:49: binop exp
			{
			DebugLocation(108, 49);
			PushFollow(Follow._binop_in_synpred37_Lua542);
			binop();
			PopFollow();
			if (state.failed) return;
			DebugLocation(108, 55);
			PushFollow(Follow._exp_in_synpred37_Lua544);
			exp();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred37_Lua_fragment", 65);
			LeaveRule("synpred37_Lua_fragment", 65);
			LeaveRule_synpred37_Lua_fragment();
		}
	}
	// $ANTLR end synpred37_Lua

	partial void EnterRule_synpred39_Lua_fragment();
	partial void LeaveRule_synpred39_Lua_fragment();

	// $ANTLR start synpred39_Lua
	private void synpred39_Lua_fragment()
	{
		EnterRule_synpred39_Lua_fragment();
		EnterRule("synpred39_Lua_fragment", 67);
		var retval = new Antlr3CstNode("synpred39_Lua_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:112:38: ( varSuffix )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:112:38: varSuffix
			{
			DebugLocation(112, 38);
			PushFollow(Follow._varSuffix_in_synpred39_Lua574);
			varSuffix();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred39_Lua_fragment", 67);
			LeaveRule("synpred39_Lua_fragment", 67);
			LeaveRule_synpred39_Lua_fragment();
		}
	}
	// $ANTLR end synpred39_Lua

	partial void EnterRule_synpred40_Lua_fragment();
	partial void LeaveRule_synpred40_Lua_fragment();

	// $ANTLR start synpred40_Lua
	private void synpred40_Lua_fragment()
	{
		EnterRule_synpred40_Lua_fragment();
		EnterRule("synpred40_Lua_fragment", 68);
		var retval = new Antlr3CstNode("synpred40_Lua_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:116:16: ( nameAndArgs )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:116:16: nameAndArgs
			{
			DebugLocation(116, 16);
			PushFollow(Follow._nameAndArgs_in_synpred40_Lua594);
			nameAndArgs();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred40_Lua_fragment", 68);
			LeaveRule("synpred40_Lua_fragment", 68);
			LeaveRule_synpred40_Lua_fragment();
		}
	}
	// $ANTLR end synpred40_Lua

	partial void EnterRule_synpred41_Lua_fragment();
	partial void LeaveRule_synpred41_Lua_fragment();

	// $ANTLR start synpred41_Lua
	private void synpred41_Lua_fragment()
	{
		EnterRule_synpred41_Lua_fragment();
		EnterRule("synpred41_Lua_fragment", 69);
		var retval = new Antlr3CstNode("synpred41_Lua_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:120:16: ( nameAndArgs )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:120:16: nameAndArgs
			{
			DebugLocation(120, 16);
			PushFollow(Follow._nameAndArgs_in_synpred41_Lua614);
			nameAndArgs();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred41_Lua_fragment", 69);
			LeaveRule("synpred41_Lua_fragment", 69);
			LeaveRule_synpred41_Lua_fragment();
		}
	}
	// $ANTLR end synpred41_Lua

	partial void EnterRule_synpred42_Lua_fragment();
	partial void LeaveRule_synpred42_Lua_fragment();

	// $ANTLR start synpred42_Lua
	private void synpred42_Lua_fragment()
	{
		EnterRule_synpred42_Lua_fragment();
		EnterRule("synpred42_Lua_fragment", 70);
		var retval = new Antlr3CstNode("synpred42_Lua_fragment");
		try
		{
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:124:7: ( var )
			DebugEnterAlt(1);
			// C:\\Users\\exKAZUu\\Projects\\Code2Xml\\Code2Xml.Languages\\ANTLRv3\\Generators\\Lua\\Lua.g:124:7: var
			{
			DebugLocation(124, 7);
			PushFollow(Follow._var_in_synpred42_Lua632);
			var();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred42_Lua_fragment", 70);
			LeaveRule("synpred42_Lua_fragment", 70);
			LeaveRule_synpred42_Lua_fragment();
		}
	}
	// $ANTLR end synpred42_Lua
	#endregion Rules

	#region Synpreds
	private bool EvaluatePredicate(System.Action fragment)
	{
		bool success = false;
		state.backtracking++;
		try { DebugBeginBacktrack(state.backtracking);
		int start = input.Mark();
		try
		{
			fragment();
		}
		catch ( RecognitionException re )
		{
			System.Console.Error.WriteLine("impossible: "+re);
		}
		success = !state.failed;
		input.Rewind(start);
		} finally { DebugEndBacktrack(state.backtracking, success); }
		state.backtracking--;
		state.failed=false;
		return success;
	}
	#endregion Synpreds


	#region Follow sets
	private static class Follow
	{
		public static readonly BitSet _block_in_chunk77 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _stat_in_block94 = new BitSet(new ulong[]{0x8BC3003002080002UL,0x11UL});
		public static readonly BitSet _retstat_in_block97 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _37_in_stat115 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _varlist_in_stat123 = new BitSet(new ulong[]{0x10000000000UL});
		public static readonly BitSet _40_in_stat125 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _explist_in_stat127 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _functioncall_in_stat135 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _label_in_stat143 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _48_in_stat151 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _56_in_stat159 = new BitSet(new ulong[]{0x80000UL});
		public static readonly BitSet _NAME_in_stat161 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _49_in_stat169 = new BitSet(new ulong[]{0x8BD3003002080000UL,0x11UL});
		public static readonly BitSet _block_in_stat171 = new BitSet(new ulong[]{0x10000000000000UL});
		public static readonly BitSet _52_in_stat173 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _68_in_stat181 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _exp_in_stat183 = new BitSet(new ulong[]{0x2000000000000UL});
		public static readonly BitSet _49_in_stat185 = new BitSet(new ulong[]{0x8BD3003002080000UL,0x11UL});
		public static readonly BitSet _block_in_stat187 = new BitSet(new ulong[]{0x10000000000000UL});
		public static readonly BitSet _52_in_stat189 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _63_in_stat197 = new BitSet(new ulong[]{0x8BC3003002080000UL,0x19UL});
		public static readonly BitSet _block_in_stat199 = new BitSet(new ulong[]{0x0UL,0x8UL});
		public static readonly BitSet _67_in_stat201 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _exp_in_stat203 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _57_in_stat211 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _exp_in_stat213 = new BitSet(new ulong[]{0x0UL,0x2UL});
		public static readonly BitSet _65_in_stat215 = new BitSet(new ulong[]{0x8BDF003002080000UL,0x11UL});
		public static readonly BitSet _block_in_stat217 = new BitSet(new ulong[]{0x1C000000000000UL});
		public static readonly BitSet _51_in_stat220 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _exp_in_stat222 = new BitSet(new ulong[]{0x0UL,0x2UL});
		public static readonly BitSet _65_in_stat224 = new BitSet(new ulong[]{0x8BDF003002080000UL,0x11UL});
		public static readonly BitSet _block_in_stat226 = new BitSet(new ulong[]{0x1C000000000000UL});
		public static readonly BitSet _50_in_stat231 = new BitSet(new ulong[]{0x8BD3003002080000UL,0x11UL});
		public static readonly BitSet _block_in_stat233 = new BitSet(new ulong[]{0x10000000000000UL});
		public static readonly BitSet _52_in_stat237 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _54_in_stat245 = new BitSet(new ulong[]{0x80000UL});
		public static readonly BitSet _NAME_in_stat247 = new BitSet(new ulong[]{0x10000000000UL});
		public static readonly BitSet _40_in_stat249 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _exp_in_stat251 = new BitSet(new ulong[]{0x20000000UL});
		public static readonly BitSet _29_in_stat253 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _exp_in_stat255 = new BitSet(new ulong[]{0x2000020000000UL});
		public static readonly BitSet _29_in_stat258 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _exp_in_stat260 = new BitSet(new ulong[]{0x2000000000000UL});
		public static readonly BitSet _49_in_stat264 = new BitSet(new ulong[]{0x8BD3003002080000UL,0x11UL});
		public static readonly BitSet _block_in_stat266 = new BitSet(new ulong[]{0x10000000000000UL});
		public static readonly BitSet _52_in_stat268 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _54_in_stat276 = new BitSet(new ulong[]{0x80000UL});
		public static readonly BitSet _namelist_in_stat278 = new BitSet(new ulong[]{0x400000000000000UL});
		public static readonly BitSet _58_in_stat280 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _explist_in_stat282 = new BitSet(new ulong[]{0x2000000000000UL});
		public static readonly BitSet _49_in_stat284 = new BitSet(new ulong[]{0x8BD3003002080000UL,0x11UL});
		public static readonly BitSet _block_in_stat286 = new BitSet(new ulong[]{0x10000000000000UL});
		public static readonly BitSet _52_in_stat288 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _55_in_stat296 = new BitSet(new ulong[]{0x80000UL});
		public static readonly BitSet _funcname_in_stat298 = new BitSet(new ulong[]{0x2000000UL});
		public static readonly BitSet _funcbody_in_stat300 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _59_in_stat308 = new BitSet(new ulong[]{0x80000000000000UL});
		public static readonly BitSet _55_in_stat310 = new BitSet(new ulong[]{0x80000UL});
		public static readonly BitSet _NAME_in_stat312 = new BitSet(new ulong[]{0x2000000UL});
		public static readonly BitSet _funcbody_in_stat314 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _59_in_stat322 = new BitSet(new ulong[]{0x80000UL});
		public static readonly BitSet _namelist_in_stat324 = new BitSet(new ulong[]{0x10000000002UL});
		public static readonly BitSet _40_in_stat327 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _explist_in_stat329 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _64_in_retstat348 = new BitSet(new ulong[]{0x30A00022429D1C12UL,0x24UL});
		public static readonly BitSet _explist_in_retstat350 = new BitSet(new ulong[]{0x2000000002UL});
		public static readonly BitSet _37_in_retstat353 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _36_in_label371 = new BitSet(new ulong[]{0x80000UL});
		public static readonly BitSet _NAME_in_label373 = new BitSet(new ulong[]{0x1000000000UL});
		public static readonly BitSet _36_in_label375 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NAME_in_funcname392 = new BitSet(new ulong[]{0x880000002UL});
		public static readonly BitSet _31_in_funcname395 = new BitSet(new ulong[]{0x80000UL});
		public static readonly BitSet _NAME_in_funcname397 = new BitSet(new ulong[]{0x880000002UL});
		public static readonly BitSet _35_in_funcname402 = new BitSet(new ulong[]{0x80000UL});
		public static readonly BitSet _NAME_in_funcname404 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _var_in_varlist423 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _29_in_varlist426 = new BitSet(new ulong[]{0x2080000UL});
		public static readonly BitSet _var_in_varlist428 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _NAME_in_namelist447 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _29_in_namelist450 = new BitSet(new ulong[]{0x80000UL});
		public static readonly BitSet _NAME_in_namelist452 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _exp_in_explist471 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _29_in_explist474 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _exp_in_explist476 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _60_in_exp496 = new BitSet(new ulong[]{0x4000CEC559000002UL,0x80UL});
		public static readonly BitSet _53_in_exp500 = new BitSet(new ulong[]{0x4000CEC559000002UL,0x80UL});
		public static readonly BitSet _66_in_exp504 = new BitSet(new ulong[]{0x4000CEC559000002UL,0x80UL});
		public static readonly BitSet _number_in_exp508 = new BitSet(new ulong[]{0x4000CEC559000002UL,0x80UL});
		public static readonly BitSet _string_in_exp512 = new BitSet(new ulong[]{0x4000CEC559000002UL,0x80UL});
		public static readonly BitSet _33_in_exp516 = new BitSet(new ulong[]{0x4000CEC559000002UL,0x80UL});
		public static readonly BitSet _functiondef_in_exp520 = new BitSet(new ulong[]{0x4000CEC559000002UL,0x80UL});
		public static readonly BitSet _prefixexp_in_exp528 = new BitSet(new ulong[]{0x4000CEC559000002UL,0x80UL});
		public static readonly BitSet _tableconstructor_in_exp532 = new BitSet(new ulong[]{0x4000CEC559000002UL,0x80UL});
		public static readonly BitSet _unop_in_exp536 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _exp_in_exp538 = new BitSet(new ulong[]{0x4000CEC559000002UL,0x80UL});
		public static readonly BitSet _binop_in_exp542 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _exp_in_exp544 = new BitSet(new ulong[]{0x4000CEC559000002UL,0x80UL});
		public static readonly BitSet _NAME_in_var561 = new BitSet(new ulong[]{0x100882140012UL,0x20UL});
		public static readonly BitSet _25_in_var565 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _exp_in_var567 = new BitSet(new ulong[]{0x4000000UL});
		public static readonly BitSet _26_in_var569 = new BitSet(new ulong[]{0x100882140010UL,0x20UL});
		public static readonly BitSet _varSuffix_in_var571 = new BitSet(new ulong[]{0x100882140012UL,0x20UL});
		public static readonly BitSet _varSuffix_in_var574 = new BitSet(new ulong[]{0x100882140012UL,0x20UL});
		public static readonly BitSet _varOrExp_in_prefixexp592 = new BitSet(new ulong[]{0x802140012UL,0x20UL});
		public static readonly BitSet _nameAndArgs_in_prefixexp594 = new BitSet(new ulong[]{0x802140012UL,0x20UL});
		public static readonly BitSet _varOrExp_in_functioncall612 = new BitSet(new ulong[]{0x802140010UL,0x20UL});
		public static readonly BitSet _nameAndArgs_in_functioncall614 = new BitSet(new ulong[]{0x802140012UL,0x20UL});
		public static readonly BitSet _var_in_varOrExp632 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _25_in_varOrExp636 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _exp_in_varOrExp638 = new BitSet(new ulong[]{0x4000000UL});
		public static readonly BitSet _26_in_varOrExp640 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _35_in_nameAndArgs658 = new BitSet(new ulong[]{0x80000UL});
		public static readonly BitSet _NAME_in_nameAndArgs660 = new BitSet(new ulong[]{0x2140010UL,0x20UL});
		public static readonly BitSet _args_in_nameAndArgs664 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _nameAndArgs_in_varSuffix681 = new BitSet(new ulong[]{0x100882140010UL,0x20UL});
		public static readonly BitSet _44_in_varSuffix685 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _exp_in_varSuffix687 = new BitSet(new ulong[]{0x200000000000UL});
		public static readonly BitSet _45_in_varSuffix689 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _31_in_varSuffix693 = new BitSet(new ulong[]{0x80000UL});
		public static readonly BitSet _NAME_in_varSuffix695 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _25_in_args716 = new BitSet(new ulong[]{0x30A00002469D1C10UL,0x24UL});
		public static readonly BitSet _explist_in_args718 = new BitSet(new ulong[]{0x4000000UL});
		public static readonly BitSet _26_in_args721 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _tableconstructor_in_args725 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _string_in_args729 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _55_in_functiondef746 = new BitSet(new ulong[]{0x2000000UL});
		public static readonly BitSet _funcbody_in_functiondef748 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _25_in_funcbody765 = new BitSet(new ulong[]{0x204080000UL});
		public static readonly BitSet _parlist_in_funcbody767 = new BitSet(new ulong[]{0x4000000UL});
		public static readonly BitSet _26_in_funcbody770 = new BitSet(new ulong[]{0x8BD3003002080000UL,0x11UL});
		public static readonly BitSet _block_in_funcbody772 = new BitSet(new ulong[]{0x10000000000000UL});
		public static readonly BitSet _52_in_funcbody774 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _namelist_in_parlist791 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _29_in_parlist794 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _33_in_parlist796 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _33_in_parlist802 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _69_in_tableconstructor819 = new BitSet(new ulong[]{0x30A01002429D1C10UL,0x64UL});
		public static readonly BitSet _fieldlist_in_tableconstructor821 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _70_in_tableconstructor824 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _field_in_fieldlist841 = new BitSet(new ulong[]{0x2020000002UL});
		public static readonly BitSet _fieldsep_in_fieldlist844 = new BitSet(new ulong[]{0x30A01002429D1C10UL,0x24UL});
		public static readonly BitSet _field_in_fieldlist846 = new BitSet(new ulong[]{0x2020000002UL});
		public static readonly BitSet _fieldsep_in_fieldlist850 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _44_in_field868 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _exp_in_field870 = new BitSet(new ulong[]{0x200000000000UL});
		public static readonly BitSet _45_in_field872 = new BitSet(new ulong[]{0x10000000000UL});
		public static readonly BitSet _40_in_field874 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _exp_in_field876 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NAME_in_field880 = new BitSet(new ulong[]{0x10000000000UL});
		public static readonly BitSet _40_in_field882 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _exp_in_field884 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _exp_in_field888 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _varlist_in_synpred4_Lua123 = new BitSet(new ulong[]{0x10000000000UL});
		public static readonly BitSet _40_in_synpred4_Lua125 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _explist_in_synpred4_Lua127 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _functioncall_in_synpred5_Lua135 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _54_in_synpred16_Lua245 = new BitSet(new ulong[]{0x80000UL});
		public static readonly BitSet _NAME_in_synpred16_Lua247 = new BitSet(new ulong[]{0x10000000000UL});
		public static readonly BitSet _40_in_synpred16_Lua249 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _exp_in_synpred16_Lua251 = new BitSet(new ulong[]{0x20000000UL});
		public static readonly BitSet _29_in_synpred16_Lua253 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _exp_in_synpred16_Lua255 = new BitSet(new ulong[]{0x2000020000000UL});
		public static readonly BitSet _29_in_synpred16_Lua258 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _exp_in_synpred16_Lua260 = new BitSet(new ulong[]{0x2000000000000UL});
		public static readonly BitSet _49_in_synpred16_Lua264 = new BitSet(new ulong[]{0x8BD3003002080000UL,0x11UL});
		public static readonly BitSet _block_in_synpred16_Lua266 = new BitSet(new ulong[]{0x10000000000000UL});
		public static readonly BitSet _52_in_synpred16_Lua268 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _54_in_synpred17_Lua276 = new BitSet(new ulong[]{0x80000UL});
		public static readonly BitSet _namelist_in_synpred17_Lua278 = new BitSet(new ulong[]{0x400000000000000UL});
		public static readonly BitSet _58_in_synpred17_Lua280 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _explist_in_synpred17_Lua282 = new BitSet(new ulong[]{0x2000000000000UL});
		public static readonly BitSet _49_in_synpred17_Lua284 = new BitSet(new ulong[]{0x8BD3003002080000UL,0x11UL});
		public static readonly BitSet _block_in_synpred17_Lua286 = new BitSet(new ulong[]{0x10000000000000UL});
		public static readonly BitSet _52_in_synpred17_Lua288 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _59_in_synpred19_Lua308 = new BitSet(new ulong[]{0x80000000000000UL});
		public static readonly BitSet _55_in_synpred19_Lua310 = new BitSet(new ulong[]{0x80000UL});
		public static readonly BitSet _NAME_in_synpred19_Lua312 = new BitSet(new ulong[]{0x2000000UL});
		public static readonly BitSet _funcbody_in_synpred19_Lua314 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _binop_in_synpred37_Lua542 = new BitSet(new ulong[]{0x30A00002429D1C10UL,0x24UL});
		public static readonly BitSet _exp_in_synpred37_Lua544 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _varSuffix_in_synpred39_Lua574 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _nameAndArgs_in_synpred40_Lua594 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _nameAndArgs_in_synpred41_Lua614 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _var_in_synpred42_Lua632 = new BitSet(new ulong[]{0x2UL});
	}
	#endregion Follow sets
}

} // namespace  Code2Xml.Languages.ANTLRv3.Processors.Lua 
